<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 12:43:01.120" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.705" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:01.714" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:43:02.888" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:01.704" endtime="20201029 12:43:02.888"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.891" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:43:02.890" endtime="20201029 12:43:02.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.702" endtime="20201029 12:43:02.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:02.894" endtime="20201029 12:43:03.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.893" endtime="20201029 12:43:03.142"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.154" endtime="20201029 12:43:03.169"></status>
</kw>
<msg timestamp="20201029 12:43:03.169" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'...</msg>
<status status="PASS" starttime="20201029 12:43:03.153" endtime="20201029 12:43:03.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.172" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'...</msg>
<status status="PASS" starttime="20201029 12:43:03.170" endtime="20201029 12:43:03.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.175" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:03.173" endtime="20201029 12:43:03.175"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:03.150" endtime="20201029 12:43:03.176"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:03.148" endtime="20201029 12:43:03.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.147" endtime="20201029 12:43:03.177"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:03.181" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:03.180" endtime="20201029 12:43:03.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.178" endtime="20201029 12:43:03.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.146" endtime="20201029 12:43:03.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.145" endtime="20201029 12:43:03.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.183" endtime="20201029 12:43:03.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.144" endtime="20201029 12:43:03.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.186" endtime="20201029 12:43:03.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.142" endtime="20201029 12:43:03.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.701" endtime="20201029 12:43:03.188"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:03.194" endtime="20201029 12:43:03.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.193" endtime="20201029 12:43:03.214"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.228" endtime="20201029 12:43:03.242"></status>
</kw>
<msg timestamp="20201029 12:43:03.242" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.226" endtime="20201029 12:43:03.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.245" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.244" endtime="20201029 12:43:03.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.248" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:03.246" endtime="20201029 12:43:03.248"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:03.223" endtime="20201029 12:43:03.249"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:03.221" endtime="20201029 12:43:03.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.219" endtime="20201029 12:43:03.250"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:03.254" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:03.253" endtime="20201029 12:43:03.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.251" endtime="20201029 12:43:03.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.218" endtime="20201029 12:43:03.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.218" endtime="20201029 12:43:03.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.255" endtime="20201029 12:43:03.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.216" endtime="20201029 12:43:03.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.215" endtime="20201029 12:43:03.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.192" endtime="20201029 12:43:03.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.266" endtime="20201029 12:43:03.277"></status>
</kw>
<msg timestamp="20201029 12:43:03.278" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.263" endtime="20201029 12:43:03.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.284" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.281" endtime="20201029 12:43:03.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.285" endtime="20201029 12:43:03.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.261" endtime="20201029 12:43:03.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.259" endtime="20201029 12:43:03.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.293" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 12:43:03.291" endtime="20201029 12:43:03.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.295" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 12:43:03.294" endtime="20201029 12:43:03.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.289" endtime="20201029 12:43:03.296"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:03.189" endtime="20201029 12:43:03.296" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:43:01.234" endtime="20201029 12:43:03.299"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.363" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:03.371" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:43:04.605" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:03.362" endtime="20201029 12:43:04.606"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.609" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:43:04.607" endtime="20201029 12:43:04.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.360" endtime="20201029 12:43:04.609"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:04.612" endtime="20201029 12:43:04.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.610" endtime="20201029 12:43:04.864"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.876" endtime="20201029 12:43:04.891"></status>
</kw>
<msg timestamp="20201029 12:43:04.891" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.875" endtime="20201029 12:43:04.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.894" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.892" endtime="20201029 12:43:04.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.897" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:04.895" endtime="20201029 12:43:04.898"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:04.872" endtime="20201029 12:43:04.898"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:04.870" endtime="20201029 12:43:04.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.869" endtime="20201029 12:43:04.899"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:04.903" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:04.902" endtime="20201029 12:43:04.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.900" endtime="20201029 12:43:04.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.868" endtime="20201029 12:43:04.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.867" endtime="20201029 12:43:04.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.905" endtime="20201029 12:43:04.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.866" endtime="20201029 12:43:04.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.908" endtime="20201029 12:43:04.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.864" endtime="20201029 12:43:04.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.359" endtime="20201029 12:43:04.910"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:04.917" endtime="20201029 12:43:04.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.915" endtime="20201029 12:43:04.937"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.951" endtime="20201029 12:43:04.966"></status>
</kw>
<msg timestamp="20201029 12:43:04.966" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.949" endtime="20201029 12:43:04.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.969" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.967" endtime="20201029 12:43:04.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.972" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:04.970" endtime="20201029 12:43:04.972"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:04.946" endtime="20201029 12:43:04.973"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:04.944" endtime="20201029 12:43:04.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.943" endtime="20201029 12:43:04.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:04.978" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:04.977" endtime="20201029 12:43:04.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.975" endtime="20201029 12:43:04.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.942" endtime="20201029 12:43:04.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.941" endtime="20201029 12:43:04.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.980" endtime="20201029 12:43:04.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.940" endtime="20201029 12:43:04.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.938" endtime="20201029 12:43:04.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.913" endtime="20201029 12:43:04.982"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.991" endtime="20201029 12:43:05.004"></status>
</kw>
<msg timestamp="20201029 12:43:05.005" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.990" endtime="20201029 12:43:05.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.007" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.006" endtime="20201029 12:43:05.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.008" endtime="20201029 12:43:05.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.987" endtime="20201029 12:43:05.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.985" endtime="20201029 12:43:05.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.018" endtime="20201029 12:43:05.311"></status>
</kw>
<msg timestamp="20201029 12:43:05.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065257292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065257764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.016" endtime="20201029 12:43:05.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065257292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065257764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.315" endtime="20201029 12:43:05.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.324" endtime="20201029 12:43:05.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.013" endtime="20201029 12:43:05.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.012" endtime="20201029 12:43:05.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:05.331" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999939912e-07}, {'diff': 4.720000000013602e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:43:05.327" endtime="20201029 12:43:05.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:05.336" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.730...</msg>
<status status="PASS" starttime="20201029 12:43:05.332" endtime="20201029 12:43:05.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.340" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:05.339" endtime="20201029 12:43:05.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.343" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201029 12:43:05.341" endtime="20201029 12:43:05.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.336" endtime="20201029 12:43:05.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.984" endtime="20201029 12:43:05.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.983" endtime="20201029 12:43:05.345"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.353" endtime="20201029 12:43:05.364"></status>
</kw>
<msg timestamp="20201029 12:43:05.364" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.352" endtime="20201029 12:43:05.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.367" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.366" endtime="20201029 12:43:05.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.368" endtime="20201029 12:43:05.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.349" endtime="20201029 12:43:05.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.347" endtime="20201029 12:43:05.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.378" endtime="20201029 12:43:05.685"></status>
</kw>
<msg timestamp="20201029 12:43:05.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065955306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065955792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.376" endtime="20201029 12:43:05.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065955306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065955792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.690" endtime="20201029 12:43:05.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.700" endtime="20201029 12:43:05.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.373" endtime="20201029 12:43:05.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.371" endtime="20201029 12:43:05.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:05.707" level="INFO">${RESULT} = [{'diff': 4.859999999939912e-07}, {'diff': 4.86000000007869e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:43:05.703" endtime="20201029 12:43:05.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:05.713" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999939912e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720...</msg>
<status status="PASS" starttime="20201029 12:43:05.708" endtime="20201029 12:43:05.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.717" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:05.716" endtime="20201029 12:43:05.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.719" level="INFO">VALUE: [4.859999999939912e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.859999999662357e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.859999999662357e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999453227e-07, 4.7300000000083386e-07, 4.860000000217468e-07, 4.869999999934649e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.859999999662357e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.859999999662357e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07]</msg>
<status status="PASS" starttime="20201029 12:43:05.718" endtime="20201029 12:43:05.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.714" endtime="20201029 12:43:05.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.346" endtime="20201029 12:43:05.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.345" endtime="20201029 12:43:05.721"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.729" endtime="20201029 12:43:05.741"></status>
</kw>
<msg timestamp="20201029 12:43:05.742" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.728" endtime="20201029 12:43:05.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.746" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.744" endtime="20201029 12:43:05.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.747" endtime="20201029 12:43:05.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.725" endtime="20201029 12:43:05.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.723" endtime="20201029 12:43:05.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.758" endtime="20201029 12:43:06.057"></status>
</kw>
<msg timestamp="20201029 12:43:06.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.416080431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.416080903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.756" endtime="20201029 12:43:06.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.416080431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.416080903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.062" endtime="20201029 12:43:06.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.072" endtime="20201029 12:43:06.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.753" endtime="20201029 12:43:06.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.751" endtime="20201029 12:43:06.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:06.079" level="INFO">${RESULT} = [{'diff': 4.720000000291158e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.859999999662357e-07},...</msg>
<status status="PASS" starttime="20201029 12:43:06.076" endtime="20201029 12:43:06.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:06.085" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000291158e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.859999999662357e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.71...</msg>
<status status="PASS" starttime="20201029 12:43:06.081" endtime="20201029 12:43:06.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.089" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:06.088" endtime="20201029 12:43:06.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.091" level="INFO">VALUE: [4.720000000291158e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.859999999662357e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.729999999453227e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.869999999934649e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.859999999107245e-07, 4.729999999453227e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07]</msg>
<status status="PASS" starttime="20201029 12:43:06.090" endtime="20201029 12:43:06.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.085" endtime="20201029 12:43:06.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.722" endtime="20201029 12:43:06.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.721" endtime="20201029 12:43:06.093"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.101" endtime="20201029 12:43:06.112"></status>
</kw>
<msg timestamp="20201029 12:43:06.113" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.099" endtime="20201029 12:43:06.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.116" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.114" endtime="20201029 12:43:06.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.117" endtime="20201029 12:43:06.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.097" endtime="20201029 12:43:06.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.095" endtime="20201029 12:43:06.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.127" endtime="20201029 12:43:06.450"></status>
</kw>
<msg timestamp="20201029 12:43:06.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.781805667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.781806139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.124" endtime="20201029 12:43:06.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.781805667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.781806139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.455" endtime="20201029 12:43:06.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.465" endtime="20201029 12:43:06.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.121" endtime="20201029 12:43:06.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.120" endtime="20201029 12:43:06.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:06.472" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000008462695e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201029 12:43:06.468" endtime="20201029 12:43:06.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:06.477" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, ...</msg>
<status status="PASS" starttime="20201029 12:43:06.473" endtime="20201029 12:43:06.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.482" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:06.481" endtime="20201029 12:43:06.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.484" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.859999999107245e-07, 4.729999999453227e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000001044872e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:43:06.483" endtime="20201029 12:43:06.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.478" endtime="20201029 12:43:06.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.094" endtime="20201029 12:43:06.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.093" endtime="20201029 12:43:06.486"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.494" endtime="20201029 12:43:06.505"></status>
</kw>
<msg timestamp="20201029 12:43:06.505" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.492" endtime="20201029 12:43:06.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.507" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.506" endtime="20201029 12:43:06.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.509" endtime="20201029 12:43:06.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.489" endtime="20201029 12:43:06.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.488" endtime="20201029 12:43:06.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.517" endtime="20201029 12:43:06.826"></status>
</kw>
<msg timestamp="20201029 12:43:06.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.144336028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.1443365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:06.516" endtime="20201029 12:43:06.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.144336028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.1443365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:06.831" endtime="20201029 12:43:06.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.840" endtime="20201029 12:43:06.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.513" endtime="20201029 12:43:06.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.512" endtime="20201029 12:43:06.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:06.848" level="INFO">${RESULT} = [{'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999998343004e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201029 12:43:06.844" endtime="20201029 12:43:06.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:06.853" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 12:43:06.849" endtime="20201029 12:43:06.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.857" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:06.856" endtime="20201029 12:43:06.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.860" level="INFO">VALUE: [4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.729999998343004e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.870000001044872e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:43:06.858" endtime="20201029 12:43:06.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.854" endtime="20201029 12:43:06.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.486" endtime="20201029 12:43:06.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.486" endtime="20201029 12:43:06.861"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.869" endtime="20201029 12:43:06.880"></status>
</kw>
<msg timestamp="20201029 12:43:06.880" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.868" endtime="20201029 12:43:06.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.883" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.881" endtime="20201029 12:43:06.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.884" endtime="20201029 12:43:06.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.865" endtime="20201029 12:43:06.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.864" endtime="20201029 12:43:06.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.893" endtime="20201029 12:43:07.193"></status>
</kw>
<msg timestamp="20201029 12:43:07.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.524624042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.524624514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.891" endtime="20201029 12:43:07.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.524624042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.524624514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.199" endtime="20201029 12:43:07.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.210" endtime="20201029 12:43:07.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.889" endtime="20201029 12:43:07.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.887" endtime="20201029 12:43:07.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:07.217" level="INFO">${RESULT} = [{'diff': 4.7200000019564925e-07}, {'diff': 4.870000001044872e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:43:07.213" endtime="20201029 12:43:07.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:07.222" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000019564925e-07, 4.870000001044872e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.859...</msg>
<status status="PASS" starttime="20201029 12:43:07.218" endtime="20201029 12:43:07.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.226" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:07.225" endtime="20201029 12:43:07.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.228" level="INFO">VALUE: [4.7200000019564925e-07, 4.870000001044872e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07]</msg>
<status status="PASS" starttime="20201029 12:43:07.227" endtime="20201029 12:43:07.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.223" endtime="20201029 12:43:07.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.862" endtime="20201029 12:43:07.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.862" endtime="20201029 12:43:07.230"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.238" endtime="20201029 12:43:07.249"></status>
</kw>
<msg timestamp="20201029 12:43:07.250" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.237" endtime="20201029 12:43:07.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.252" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.251" endtime="20201029 12:43:07.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.253" endtime="20201029 12:43:07.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.234" endtime="20201029 12:43:07.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.232" endtime="20201029 12:43:07.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.262" endtime="20201029 12:43:07.567"></status>
</kw>
<msg timestamp="20201029 12:43:07.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.890191917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.890192389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.260" endtime="20201029 12:43:07.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.890191917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.890192389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.572" endtime="20201029 12:43:07.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.582" endtime="20201029 12:43:07.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.258" endtime="20201029 12:43:07.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.256" endtime="20201029 12:43:07.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:07.589" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:43:07.586" endtime="20201029 12:43:07.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:07.595" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 12:43:07.590" endtime="20201029 12:43:07.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.599" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:07.598" endtime="20201029 12:43:07.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.601" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:43:07.600" endtime="20201029 12:43:07.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.595" endtime="20201029 12:43:07.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.231" endtime="20201029 12:43:07.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.230" endtime="20201029 12:43:07.603"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.611" endtime="20201029 12:43:07.621"></status>
</kw>
<msg timestamp="20201029 12:43:07.622" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.609" endtime="20201029 12:43:07.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.624" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.623" endtime="20201029 12:43:07.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.625" endtime="20201029 12:43:07.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.606" endtime="20201029 12:43:07.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.605" endtime="20201029 12:43:07.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.635" endtime="20201029 12:43:07.943"></status>
</kw>
<msg timestamp="20201029 12:43:07.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.248574889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.248575361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.634" endtime="20201029 12:43:07.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.248574889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.248575361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.948" endtime="20201029 12:43:07.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.958" endtime="20201029 12:43:07.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.631" endtime="20201029 12:43:07.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.629" endtime="20201029 12:43:07.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:07.965" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.870000003265318e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 12:43:07.962" endtime="20201029 12:43:07.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:07.971" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.86...</msg>
<status status="PASS" starttime="20201029 12:43:07.966" endtime="20201029 12:43:07.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.975" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:07.974" endtime="20201029 12:43:07.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.978" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:43:07.976" endtime="20201029 12:43:07.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.972" endtime="20201029 12:43:07.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.604" endtime="20201029 12:43:07.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.603" endtime="20201029 12:43:07.979"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.987" endtime="20201029 12:43:07.998"></status>
</kw>
<msg timestamp="20201029 12:43:07.998" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.986" endtime="20201029 12:43:07.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.001" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.999" endtime="20201029 12:43:08.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.002" endtime="20201029 12:43:08.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.983" endtime="20201029 12:43:08.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.981" endtime="20201029 12:43:08.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.012" endtime="20201029 12:43:08.326"></status>
</kw>
<msg timestamp="20201029 12:43:08.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.610569111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.610569583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:08.010" endtime="20201029 12:43:08.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.610569111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.610569583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:08.331" endtime="20201029 12:43:08.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.341" endtime="20201029 12:43:08.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.007" endtime="20201029 12:43:08.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.005" endtime="20201029 12:43:08.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:08.348" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7200000041769385e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 12:43:08.345" endtime="20201029 12:43:08.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:08.353" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 12:43:08.349" endtime="20201029 12:43:08.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.357" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:08.356" endtime="20201029 12:43:08.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.360" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.869999998824426e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 12:43:08.358" endtime="20201029 12:43:08.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.354" endtime="20201029 12:43:08.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.980" endtime="20201029 12:43:08.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.980" endtime="20201029 12:43:08.362"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.370" endtime="20201029 12:43:08.381"></status>
</kw>
<msg timestamp="20201029 12:43:08.381" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.368" endtime="20201029 12:43:08.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.384" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.382" endtime="20201029 12:43:08.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.385" endtime="20201029 12:43:08.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.366" endtime="20201029 12:43:08.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.364" endtime="20201029 12:43:08.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.394" endtime="20201029 12:43:08.702"></status>
</kw>
<msg timestamp="20201029 12:43:08.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.978253972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.978254458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:08.392" endtime="20201029 12:43:08.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.978253972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.978254458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:08.707" endtime="20201029 12:43:08.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.718" endtime="20201029 12:43:08.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.390" endtime="20201029 12:43:08.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.388" endtime="20201029 12:43:08.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:08.725" level="INFO">${RESULT} = [{'diff': 4.859999997997022e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:43:08.722" endtime="20201029 12:43:08.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:08.731" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999997997022e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.86...</msg>
<status status="PASS" starttime="20201029 12:43:08.726" endtime="20201029 12:43:08.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.735" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:08.734" endtime="20201029 12:43:08.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.738" level="INFO">VALUE: [4.859999997997022e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.869999998824426e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07]</msg>
<status status="PASS" starttime="20201029 12:43:08.736" endtime="20201029 12:43:08.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.732" endtime="20201029 12:43:08.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.363" endtime="20201029 12:43:08.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.362" endtime="20201029 12:43:08.739"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.747" endtime="20201029 12:43:08.757"></status>
</kw>
<msg timestamp="20201029 12:43:08.757" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.745" endtime="20201029 12:43:08.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.760" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.758" endtime="20201029 12:43:08.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.761" endtime="20201029 12:43:08.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.743" endtime="20201029 12:43:08.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.741" endtime="20201029 12:43:08.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.770" endtime="20201029 12:43:09.086"></status>
</kw>
<msg timestamp="20201029 12:43:09.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.349754681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.349755153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:08.768" endtime="20201029 12:43:09.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.349754681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.349755153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.091" endtime="20201029 12:43:09.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.101" endtime="20201029 12:43:09.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.766" endtime="20201029 12:43:09.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.764" endtime="20201029 12:43:09.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:09.108" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.860000002437914e-07...</msg>
<status status="PASS" starttime="20201029 12:43:09.104" endtime="20201029 12:43:09.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:09.113" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:43:09.109" endtime="20201029 12:43:09.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.117" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:09.116" endtime="20201029 12:43:09.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.119" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.729999996122558e-07]</msg>
<status status="PASS" starttime="20201029 12:43:09.118" endtime="20201029 12:43:09.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.114" endtime="20201029 12:43:09.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.740" endtime="20201029 12:43:09.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.739" endtime="20201029 12:43:09.121"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.129" endtime="20201029 12:43:09.140"></status>
</kw>
<msg timestamp="20201029 12:43:09.141" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.127" endtime="20201029 12:43:09.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.143" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.142" endtime="20201029 12:43:09.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.144" endtime="20201029 12:43:09.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.125" endtime="20201029 12:43:09.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.123" endtime="20201029 12:43:09.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.153" endtime="20201029 12:43:09.472"></status>
</kw>
<msg timestamp="20201029 12:43:09.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.717122111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.717122597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.152" endtime="20201029 12:43:09.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.717122111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.717122597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.477" endtime="20201029 12:43:09.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.487" endtime="20201029 12:43:09.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.149" endtime="20201029 12:43:09.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.147" endtime="20201029 12:43:09.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:09.494" level="INFO">${RESULT} = [{'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:43:09.490" endtime="20201029 12:43:09.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:09.499" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 12:43:09.495" endtime="20201029 12:43:09.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.504" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:09.502" endtime="20201029 12:43:09.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.506" level="INFO">VALUE: [4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:43:09.505" endtime="20201029 12:43:09.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.500" endtime="20201029 12:43:09.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.122" endtime="20201029 12:43:09.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.121" endtime="20201029 12:43:09.508"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.516" endtime="20201029 12:43:09.526"></status>
</kw>
<msg timestamp="20201029 12:43:09.527" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.514" endtime="20201029 12:43:09.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.530" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.528" endtime="20201029 12:43:09.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.532" endtime="20201029 12:43:09.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.511" endtime="20201029 12:43:09.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.510" endtime="20201029 12:43:09.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.544" endtime="20201029 12:43:09.913"></status>
</kw>
<msg timestamp="20201029 12:43:09.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.089775931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.089776403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.542" endtime="20201029 12:43:09.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.089775931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.089776403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.919" endtime="20201029 12:43:09.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.928" endtime="20201029 12:43:09.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.538" endtime="20201029 12:43:09.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.536" endtime="20201029 12:43:09.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:09.935" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 12:43:09.932" endtime="20201029 12:43:09.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:09.941" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:43:09.936" endtime="20201029 12:43:09.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.945" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:09.944" endtime="20201029 12:43:09.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.948" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:43:09.946" endtime="20201029 12:43:09.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.942" endtime="20201029 12:43:09.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.508" endtime="20201029 12:43:09.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.508" endtime="20201029 12:43:09.949"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.957" endtime="20201029 12:43:09.968"></status>
</kw>
<msg timestamp="20201029 12:43:09.968" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.956" endtime="20201029 12:43:09.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.971" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.970" endtime="20201029 12:43:09.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.972" endtime="20201029 12:43:09.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.953" endtime="20201029 12:43:09.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.951" endtime="20201029 12:43:09.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.981" endtime="20201029 12:43:10.281"></status>
</kw>
<msg timestamp="20201029 12:43:10.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.465838722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.465839194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.979" endtime="20201029 12:43:10.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.465838722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.465839194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.286" endtime="20201029 12:43:10.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.296" endtime="20201029 12:43:10.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.977" endtime="20201029 12:43:10.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.975" endtime="20201029 12:43:10.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:10.303" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07...</msg>
<status status="PASS" starttime="20201029 12:43:10.300" endtime="20201029 12:43:10.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:10.308" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 12:43:10.304" endtime="20201029 12:43:10.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.312" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:10.311" endtime="20201029 12:43:10.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.315" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:43:10.313" endtime="20201029 12:43:10.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.309" endtime="20201029 12:43:10.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.950" endtime="20201029 12:43:10.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.950" endtime="20201029 12:43:10.316"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.326" endtime="20201029 12:43:10.337"></status>
</kw>
<msg timestamp="20201029 12:43:10.337" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.325" endtime="20201029 12:43:10.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.340" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.338" endtime="20201029 12:43:10.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.341" endtime="20201029 12:43:10.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.320" endtime="20201029 12:43:10.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.318" endtime="20201029 12:43:10.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.350" endtime="20201029 12:43:10.663"></status>
</kw>
<msg timestamp="20201029 12:43:10.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.897204278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.89720475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:10.348" endtime="20201029 12:43:10.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.897204278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.89720475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:10.670" endtime="20201029 12:43:10.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.681" endtime="20201029 12:43:10.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.346" endtime="20201029 12:43:10.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.344" endtime="20201029 12:43:10.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:10.691" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:43:10.686" endtime="20201029 12:43:10.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:10.697" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 12:43:10.692" endtime="20201029 12:43:10.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.702" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:10.701" endtime="20201029 12:43:10.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.704" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:43:10.703" endtime="20201029 12:43:10.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.698" endtime="20201029 12:43:10.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.317" endtime="20201029 12:43:10.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.316" endtime="20201029 12:43:10.706"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.714" endtime="20201029 12:43:10.724"></status>
</kw>
<msg timestamp="20201029 12:43:10.724" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.712" endtime="20201029 12:43:10.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.727" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.725" endtime="20201029 12:43:10.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.728" endtime="20201029 12:43:10.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.709" endtime="20201029 12:43:10.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.708" endtime="20201029 12:43:10.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.737" endtime="20201029 12:43:11.047"></status>
</kw>
<msg timestamp="20201029 12:43:11.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.257346444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.257346931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.736" endtime="20201029 12:43:11.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.257346444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.257346931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:11.052" endtime="20201029 12:43:11.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.061" endtime="20201029 12:43:11.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.733" endtime="20201029 12:43:11.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.731" endtime="20201029 12:43:11.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:11.068" level="INFO">${RESULT} = [{'diff': 4.869999994383534e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:43:11.065" endtime="20201029 12:43:11.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:11.074" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.869999994383534e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 12:43:11.069" endtime="20201029 12:43:11.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.078" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:11.077" endtime="20201029 12:43:11.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.081" level="INFO">VALUE: [4.869999994383534e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 12:43:11.079" endtime="20201029 12:43:11.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.075" endtime="20201029 12:43:11.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.707" endtime="20201029 12:43:11.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.706" endtime="20201029 12:43:11.082"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.090" endtime="20201029 12:43:11.100"></status>
</kw>
<msg timestamp="20201029 12:43:11.100" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.088" endtime="20201029 12:43:11.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.103" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.101" endtime="20201029 12:43:11.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.104" endtime="20201029 12:43:11.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.086" endtime="20201029 12:43:11.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.084" endtime="20201029 12:43:11.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.113" endtime="20201029 12:43:11.432"></status>
</kw>
<msg timestamp="20201029 12:43:11.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.634928028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.6349285, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:11.112" endtime="20201029 12:43:11.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.634928028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.6349285, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:11.437" endtime="20201029 12:43:11.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.446" endtime="20201029 12:43:11.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.109" endtime="20201029 12:43:11.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.107" endtime="20201029 12:43:11.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:11.453" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.869999994383534e-07...</msg>
<status status="PASS" starttime="20201029 12:43:11.450" endtime="20201029 12:43:11.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:11.458" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:43:11.454" endtime="20201029 12:43:11.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.462" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:11.461" endtime="20201029 12:43:11.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.465" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:43:11.463" endtime="20201029 12:43:11.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.459" endtime="20201029 12:43:11.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.083" endtime="20201029 12:43:11.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.082" endtime="20201029 12:43:11.466"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.475" endtime="20201029 12:43:11.485"></status>
</kw>
<msg timestamp="20201029 12:43:11.485" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.473" endtime="20201029 12:43:11.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.488" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.486" endtime="20201029 12:43:11.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.489" endtime="20201029 12:43:11.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.470" endtime="20201029 12:43:11.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.468" endtime="20201029 12:43:11.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.498" endtime="20201029 12:43:11.808"></status>
</kw>
<msg timestamp="20201029 12:43:11.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.000010528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.000011014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:11.497" endtime="20201029 12:43:11.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.000010528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.000011014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:11.813" endtime="20201029 12:43:11.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.822" endtime="20201029 12:43:11.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.494" endtime="20201029 12:43:11.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.492" endtime="20201029 12:43:11.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:11.829" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:11.826" endtime="20201029 12:43:11.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:11.834" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860...</msg>
<status status="PASS" starttime="20201029 12:43:11.830" endtime="20201029 12:43:11.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.839" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:11.838" endtime="20201029 12:43:11.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.841" level="INFO">VALUE: [4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:43:11.840" endtime="20201029 12:43:11.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.835" endtime="20201029 12:43:11.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.467" endtime="20201029 12:43:11.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.467" endtime="20201029 12:43:11.843"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.851" endtime="20201029 12:43:11.861"></status>
</kw>
<msg timestamp="20201029 12:43:11.862" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.849" endtime="20201029 12:43:11.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.864" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.863" endtime="20201029 12:43:11.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.865" endtime="20201029 12:43:11.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.846" endtime="20201029 12:43:11.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.845" endtime="20201029 12:43:11.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.875" endtime="20201029 12:43:12.191"></status>
</kw>
<msg timestamp="20201029 12:43:12.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.375932042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.375932514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:11.873" endtime="20201029 12:43:12.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.375932042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.375932514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.196" endtime="20201029 12:43:12.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.205" endtime="20201029 12:43:12.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.871" endtime="20201029 12:43:12.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.869" endtime="20201029 12:43:12.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:12.212" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.870000003265318e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.73000000056345e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:43:12.209" endtime="20201029 12:43:12.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:12.218" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860...</msg>
<status status="PASS" starttime="20201029 12:43:12.213" endtime="20201029 12:43:12.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.222" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:12.221" endtime="20201029 12:43:12.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.225" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:43:12.223" endtime="20201029 12:43:12.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.219" endtime="20201029 12:43:12.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.844" endtime="20201029 12:43:12.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.843" endtime="20201029 12:43:12.226"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.234" endtime="20201029 12:43:12.245"></status>
</kw>
<msg timestamp="20201029 12:43:12.246" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.232" endtime="20201029 12:43:12.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.248" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.247" endtime="20201029 12:43:12.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.249" endtime="20201029 12:43:12.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.230" endtime="20201029 12:43:12.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.228" endtime="20201029 12:43:12.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.259" endtime="20201029 12:43:12.579"></status>
</kw>
<msg timestamp="20201029 12:43:12.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.741725306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.741725778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.257" endtime="20201029 12:43:12.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.741725306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.741725778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.583" endtime="20201029 12:43:12.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.593" endtime="20201029 12:43:12.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.254" endtime="20201029 12:43:12.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.253" endtime="20201029 12:43:12.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:12.600" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:43:12.597" endtime="20201029 12:43:12.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:12.605" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.86...</msg>
<status status="PASS" starttime="20201029 12:43:12.601" endtime="20201029 12:43:12.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.609" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:43:12.608" endtime="20201029 12:43:12.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.611" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07]</msg>
<status status="PASS" starttime="20201029 12:43:12.610" endtime="20201029 12:43:12.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.606" endtime="20201029 12:43:12.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.227" endtime="20201029 12:43:12.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.226" endtime="20201029 12:43:12.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.983" endtime="20201029 12:43:12.613"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:04.911" endtime="20201029 12:43:12.614" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:12.621" endtime="20201029 12:43:12.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.619" endtime="20201029 12:43:12.641"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.654" endtime="20201029 12:43:12.669"></status>
</kw>
<msg timestamp="20201029 12:43:12.669" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.653" endtime="20201029 12:43:12.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.672" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.670" endtime="20201029 12:43:12.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.675" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:12.673" endtime="20201029 12:43:12.675"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:12.650" endtime="20201029 12:43:12.676"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:12.648" endtime="20201029 12:43:12.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.646" endtime="20201029 12:43:12.676"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:12.680" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:12.679" endtime="20201029 12:43:12.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.677" endtime="20201029 12:43:12.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.645" endtime="20201029 12:43:12.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.645" endtime="20201029 12:43:12.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.682" endtime="20201029 12:43:12.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.643" endtime="20201029 12:43:12.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.642" endtime="20201029 12:43:12.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.617" endtime="20201029 12:43:12.685"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.693" endtime="20201029 12:43:12.714"></status>
</kw>
<msg timestamp="20201029 12:43:12.714" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.692" endtime="20201029 12:43:12.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.717" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.715" endtime="20201029 12:43:12.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.718" endtime="20201029 12:43:12.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.689" endtime="20201029 12:43:12.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.687" endtime="20201029 12:43:12.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.727" endtime="20201029 12:43:13.013"></status>
</kw>
<msg timestamp="20201029 12:43:13.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064274917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06427725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:12.726" endtime="20201029 12:43:13.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064274917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06427725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:13.017" endtime="20201029 12:43:13.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.026" endtime="20201029 12:43:13.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.723" endtime="20201029 12:43:13.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.721" endtime="20201029 12:43:13.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:13.033" level="INFO">${RESULT} = [{'diff': 2.332999999993257e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.319000000000626e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3889999999915368e-06}, {'diff': 2.3749999999989058e-06...</msg>
<status status="PASS" starttime="20201029 12:43:13.029" endtime="20201029 12:43:13.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:13.037" level="INFO">${OVERHEAD} = {'diff': [2.332999999993257e-06, 2.3749999999989058e-06, 2.319000000000626e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, ...</msg>
<status status="PASS" starttime="20201029 12:43:13.034" endtime="20201029 12:43:13.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.041" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:13.040" endtime="20201029 12:43:13.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.044" level="INFO">VALUE: [2.332999999993257e-06, 2.3749999999989058e-06, 2.319000000000626e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.387999999992063e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.4169999999906766e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.3750000000127836e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.401999999998572e-06, 2.3610000000062747e-06, 2.4160000000050808e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.332999999993257e-06, 2.387999999992063e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3610000000062747e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3890000000054146e-06, 2.360999999992397e-06, 2.3750000000127836e-06]</msg>
<status status="PASS" starttime="20201029 12:43:13.042" endtime="20201029 12:43:13.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.038" endtime="20201029 12:43:13.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.686" endtime="20201029 12:43:13.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.686" endtime="20201029 12:43:13.046"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.054" endtime="20201029 12:43:13.065"></status>
</kw>
<msg timestamp="20201029 12:43:13.065" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.052" endtime="20201029 12:43:13.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.068" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.066" endtime="20201029 12:43:13.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.069" endtime="20201029 12:43:13.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.050" endtime="20201029 12:43:13.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.048" endtime="20201029 12:43:13.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.078" endtime="20201029 12:43:13.381"></status>
</kw>
<msg timestamp="20201029 12:43:13.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064694472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064696847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.076" endtime="20201029 12:43:13.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064694472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064696847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.386" endtime="20201029 12:43:13.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.396" endtime="20201029 12:43:13.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.074" endtime="20201029 12:43:13.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.072" endtime="20201029 12:43:13.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:13.403" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.3889999999915368e-06}, {'diff': 2.3610000000062747e-06}, {'diff': 2.3889999999915368e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-...</msg>
<status status="PASS" starttime="20201029 12:43:13.400" endtime="20201029 12:43:13.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:13.408" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.3889999999915368e-06, 2.3610000000062747e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06...</msg>
<status status="PASS" starttime="20201029 12:43:13.404" endtime="20201029 12:43:13.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.413" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:13.412" endtime="20201029 12:43:13.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.415" level="INFO">VALUE: [2.3749999999989058e-06, 2.3889999999915368e-06, 2.3610000000062747e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3890000000054146e-06, 2.360999999992397e-06, 2.3750000000127836e-06, 2.3470000000136437e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3880000000198187e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.375000000054417e-06, 2.3610000000062747e-06, 2.431000000024941e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 2.43099999996943e-06, 2.389000000047048e-06, 2.3610000000062747e-06, 2.3190000000283817e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3060000000074687e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3330000000210127e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.348000000040873e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.3889999999915368e-06, 2.402999999984168e-06, 2.3469999999581326e-06, 2.3049999999802395e-06, 2.3470000000136437e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.361999999977993e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.4160000000050808e-06, 2.3749999999989058e-06]</msg>
<status status="PASS" starttime="20201029 12:43:13.414" endtime="20201029 12:43:13.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.409" endtime="20201029 12:43:13.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.047" endtime="20201029 12:43:13.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.046" endtime="20201029 12:43:13.417"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.425" endtime="20201029 12:43:13.436"></status>
</kw>
<msg timestamp="20201029 12:43:13.436" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.423" endtime="20201029 12:43:13.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.439" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.437" endtime="20201029 12:43:13.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.440" endtime="20201029 12:43:13.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.420" endtime="20201029 12:43:13.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.419" endtime="20201029 12:43:13.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.449" endtime="20201029 12:43:13.748"></status>
</kw>
<msg timestamp="20201029 12:43:13.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.41424075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.414243111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:13.447" endtime="20201029 12:43:13.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.41424075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.414243111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:13.753" endtime="20201029 12:43:13.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.767" endtime="20201029 12:43:13.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.445" endtime="20201029 12:43:13.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.443" endtime="20201029 12:43:13.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:13.774" level="INFO">${RESULT} = [{'diff': 2.3610000000062747e-06}, {'diff': 2.3889999999915368e-06}, {'diff': 2.402999999984168e-06}, {'diff': 2.3469999999581326e-06}, {'diff': 2.3049999999802395e-06}, {'diff': 2.3470000000136437e-0...</msg>
<status status="PASS" starttime="20201029 12:43:13.770" endtime="20201029 12:43:13.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:13.779" level="INFO">${OVERHEAD} = {'diff': [2.3610000000062747e-06, 2.3889999999915368e-06, 2.402999999984168e-06, 2.3469999999581326e-06, 2.3049999999802395e-06, 2.3470000000136437e-06, 2.3749999999989058e-06, 2.3749999999989058e-06,...</msg>
<status status="PASS" starttime="20201029 12:43:13.775" endtime="20201029 12:43:13.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.783" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:13.782" endtime="20201029 12:43:13.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.785" level="INFO">VALUE: [2.3610000000062747e-06, 2.3889999999915368e-06, 2.402999999984168e-06, 2.3469999999581326e-06, 2.3049999999802395e-06, 2.3470000000136437e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.361999999977993e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.4160000000050808e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.4299999999977118e-06, 2.3749999999989058e-06, 2.3889999999360256e-06, 2.361000000061786e-06, 2.3749999999989058e-06, 2.347999999985362e-06, 2.3749999999989058e-06, 2.402999999984168e-06, 2.361000000061786e-06, 2.362000000033504e-06, 2.3749999999989058e-06, 2.4019999999014274e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3470000000136437e-06, 2.3889999999360256e-06, 2.3889999999360256e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.38800000007533e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3469999999026214e-06, 2.3889999999360256e-06, 2.361000000061786e-06, 2.3609999999507636e-06, 2.361000000061786e-06, 2.3889999999360256e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3889999999360256e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.445000000017572e-06, 2.3749999999989058e-06, 2.3619999999224817e-06, 2.3749999999989058e-06, 2.3889999999360256e-06, 2.3889999999360256e-06, 2.38800000007533e-06, 2.3749999999989058e-06, 2.2920000000148377e-06, 2.361000000061786e-06]</msg>
<status status="PASS" starttime="20201029 12:43:13.784" endtime="20201029 12:43:13.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.779" endtime="20201029 12:43:13.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.417" endtime="20201029 12:43:13.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.417" endtime="20201029 12:43:13.787"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.796" endtime="20201029 12:43:13.807"></status>
</kw>
<msg timestamp="20201029 12:43:13.807" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.793" endtime="20201029 12:43:13.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.810" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.808" endtime="20201029 12:43:13.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.811" endtime="20201029 12:43:13.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.791" endtime="20201029 12:43:13.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.789" endtime="20201029 12:43:13.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.820" endtime="20201029 12:43:14.134"></status>
</kw>
<msg timestamp="20201029 12:43:14.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.774951806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.774954167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.818" endtime="20201029 12:43:14.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.774951806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.774954167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.145" endtime="20201029 12:43:14.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.168" endtime="20201029 12:43:14.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.816" endtime="20201029 12:43:14.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.814" endtime="20201029 12:43:14.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:14.188" level="INFO">${RESULT} = [{'diff': 2.3609999999507636e-06}, {'diff': 2.3889999999360256e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.445000000017572e-06}, {'diff': 2.3749999999989058e-0...</msg>
<status status="PASS" starttime="20201029 12:43:14.176" endtime="20201029 12:43:14.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:14.201" level="INFO">${OVERHEAD} = {'diff': [2.3609999999507636e-06, 2.3889999999360256e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.445000000017572e-06, 2.3749999999989058e-06, 2.3619999999224817e-06, 2.3749999999989058e-06,...</msg>
<status status="PASS" starttime="20201029 12:43:14.192" endtime="20201029 12:43:14.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.208" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:14.206" endtime="20201029 12:43:14.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.213" level="INFO">VALUE: [2.3609999999507636e-06, 2.3889999999360256e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.445000000017572e-06, 2.3749999999989058e-06, 2.3619999999224817e-06, 2.3749999999989058e-06, 2.3889999999360256e-06, 2.3889999999360256e-06, 2.38800000007533e-06, 2.3749999999989058e-06, 2.2920000000148377e-06, 2.361000000061786e-06, 2.3340000001592642e-06, 2.3889999998250033e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3339999999372196e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.43099999996943e-06, 2.3749999999989058e-06, 2.361000000172808e-06, 2.430000000108734e-06, 2.3749999999989058e-06, 2.3049999999802395e-06, 2.347999999985362e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3879999999643076e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3190000000283817e-06, 2.3879999999643076e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.3889999998250033e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3469999999026214e-06, 2.3749999999989058e-06, 2.416000000060592e-06, 2.3749999999989058e-06, 2.3889999998250033e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.361000000172808e-06]</msg>
<status status="PASS" starttime="20201029 12:43:14.210" endtime="20201029 12:43:14.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.202" endtime="20201029 12:43:14.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.788" endtime="20201029 12:43:14.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.787" endtime="20201029 12:43:14.215"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.223" endtime="20201029 12:43:14.235"></status>
</kw>
<msg timestamp="20201029 12:43:14.235" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.221" endtime="20201029 12:43:14.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.238" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.236" endtime="20201029 12:43:14.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.239" endtime="20201029 12:43:14.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.218" endtime="20201029 12:43:14.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.217" endtime="20201029 12:43:14.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.248" endtime="20201029 12:43:14.553"></status>
</kw>
<msg timestamp="20201029 12:43:14.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.136153236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.136155625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.246" endtime="20201029 12:43:14.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.136153236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.136155625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.558" endtime="20201029 12:43:14.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.568" endtime="20201029 12:43:14.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.244" endtime="20201029 12:43:14.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.242" endtime="20201029 12:43:14.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:14.575" level="INFO">${RESULT} = [{'diff': 2.389000000047048e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3469999999026214e-0...</msg>
<status status="PASS" starttime="20201029 12:43:14.571" endtime="20201029 12:43:14.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:14.584" level="INFO">${OVERHEAD} = {'diff': [2.389000000047048e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3469999999026214e-06, 2.3749999999989058e-06, 2.416000000060592e-06, ...</msg>
<status status="PASS" starttime="20201029 12:43:14.577" endtime="20201029 12:43:14.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.590" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:14.589" endtime="20201029 12:43:14.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.594" level="INFO">VALUE: [2.389000000047048e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3469999999026214e-06, 2.3749999999989058e-06, 2.416000000060592e-06, 2.3749999999989058e-06, 2.3889999998250033e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.361000000172808e-06, 2.361000000172808e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.333000000076524e-06, 2.3889999998250033e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.4020000000124497e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3339999999372196e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.416000000060592e-06, 2.3749999999989058e-06, 2.3469999999026214e-06, 2.3749999999989058e-06, 2.4029999998731455e-06, 2.3749999999989058e-06, 2.3190000000283817e-06, 2.4029999998731455e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.333000000076524e-06, 2.318999999806337e-06, 2.30600000006298e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3329999998544793e-06, 2.3749999999989058e-06, 2.347000000124666e-06, 2.3339999999372196e-06, 2.3749999999989058e-06, 2.361000000172808e-06, 2.40300000009519e-06, 2.3749999999989058e-06, 2.3889999998250033e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06]</msg>
<status status="PASS" starttime="20201029 12:43:14.591" endtime="20201029 12:43:14.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.586" endtime="20201029 12:43:14.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.216" endtime="20201029 12:43:14.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.215" endtime="20201029 12:43:14.596"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.607" endtime="20201029 12:43:14.619"></status>
</kw>
<msg timestamp="20201029 12:43:14.620" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.605" endtime="20201029 12:43:14.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.622" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.621" endtime="20201029 12:43:14.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.623" endtime="20201029 12:43:14.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.602" endtime="20201029 12:43:14.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.599" endtime="20201029 12:43:14.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.632" endtime="20201029 12:43:14.942"></status>
</kw>
<msg timestamp="20201029 12:43:14.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.553313875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.55331625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:14.631" endtime="20201029 12:43:14.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.553313875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.55331625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:14.957" endtime="20201029 12:43:14.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.979" endtime="20201029 12:43:14.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.628" endtime="20201029 12:43:14.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.626" endtime="20201029 12:43:14.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:14.994" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3329999998544793e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.347000000124666e-06}, {'diff': 2.3339999999372196e-0...</msg>
<status status="PASS" starttime="20201029 12:43:14.986" endtime="20201029 12:43:14.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:15.004" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.3749999999989058e-06, 2.3329999998544793e-06, 2.3749999999989058e-06, 2.347000000124666e-06, 2.3339999999372196e-06, 2.3749999999989058e-06, 2.361000000172808e-06, ...</msg>
<status status="PASS" starttime="20201029 12:43:14.996" endtime="20201029 12:43:15.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.009" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:15.008" endtime="20201029 12:43:15.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.011" level="INFO">VALUE: [2.3749999999989058e-06, 2.3749999999989058e-06, 2.3329999998544793e-06, 2.3749999999989058e-06, 2.347000000124666e-06, 2.3339999999372196e-06, 2.3749999999989058e-06, 2.361000000172808e-06, 2.40300000009519e-06, 2.3749999999989058e-06, 2.3889999998250033e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3339999999372196e-06, 2.3749999999989058e-06, 2.3199999998890775e-06, 2.389000000047048e-06, 2.3469999999026214e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999998250033e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.361000000172808e-06, 2.3749999999989058e-06, 2.30600000006298e-06, 2.3749999999989058e-06, 2.3879999999643076e-06, 2.3749999999989058e-06, 2.40300000009519e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3889999998250033e-06, 2.4029999998731455e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.361000000172808e-06, 2.4169999999212877e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3469999999026214e-06, 2.3749999999989058e-06, 2.3749999999989058e-06]</msg>
<status status="PASS" starttime="20201029 12:43:15.010" endtime="20201029 12:43:15.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.005" endtime="20201029 12:43:15.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.597" endtime="20201029 12:43:15.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.597" endtime="20201029 12:43:15.013"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.022" endtime="20201029 12:43:15.034"></status>
</kw>
<msg timestamp="20201029 12:43:15.035" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.020" endtime="20201029 12:43:15.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.037" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.036" endtime="20201029 12:43:15.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.038" endtime="20201029 12:43:15.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.017" endtime="20201029 12:43:15.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.015" endtime="20201029 12:43:15.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.055" endtime="20201029 12:43:15.352"></status>
</kw>
<msg timestamp="20201029 12:43:15.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.927934833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.927937208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.051" endtime="20201029 12:43:15.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.927934833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.927937208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.357" endtime="20201029 12:43:15.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.367" endtime="20201029 12:43:15.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.047" endtime="20201029 12:43:15.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.045" endtime="20201029 12:43:15.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:15.374" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3889999998250033e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-...</msg>
<status status="PASS" starttime="20201029 12:43:15.371" endtime="20201029 12:43:15.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:15.379" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.361000000172808e-06, ...</msg>
<status status="PASS" starttime="20201029 12:43:15.375" endtime="20201029 12:43:15.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.384" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:15.383" endtime="20201029 12:43:15.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.386" level="INFO">VALUE: [2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.361000000172808e-06, 2.4169999999212877e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3469999999026214e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3750000002209504e-06, 2.3329999998544793e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.401999999790405e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.361000000394853e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.347000000124666e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.320000000111122e-06, 2.3879999999643076e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.4030000003172347e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.416999999699243e-06, 2.4029999998731455e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2.3750000002209504e-06, 2.4170000001433323e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201029 12:43:15.385" endtime="20201029 12:43:15.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.380" endtime="20201029 12:43:15.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.013" endtime="20201029 12:43:15.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.013" endtime="20201029 12:43:15.388"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.396" endtime="20201029 12:43:15.408"></status>
</kw>
<msg timestamp="20201029 12:43:15.409" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.394" endtime="20201029 12:43:15.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.411" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.410" endtime="20201029 12:43:15.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.412" endtime="20201029 12:43:15.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.392" endtime="20201029 12:43:15.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.390" endtime="20201029 12:43:15.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.422" endtime="20201029 12:43:15.735"></status>
</kw>
<msg timestamp="20201029 12:43:15.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.332832028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.332834389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.420" endtime="20201029 12:43:15.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.332832028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.332834389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.740" endtime="20201029 12:43:15.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.753" endtime="20201029 12:43:15.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.417" endtime="20201029 12:43:15.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.415" endtime="20201029 12:43:15.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:15.760" level="INFO">${RESULT} = [{'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.374999999776861e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.347000000124666e-06}, {'diff': 2.3750000002209504e-06...</msg>
<status status="PASS" starttime="20201029 12:43:15.756" endtime="20201029 12:43:15.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:15.766" level="INFO">${OVERHEAD} = {'diff': [2.3609999999507636e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2.3750000002209504e-06, 2.4170000001433323e-06, 2.3750000002209504e-06, ...</msg>
<status status="PASS" starttime="20201029 12:43:15.761" endtime="20201029 12:43:15.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.770" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:15.769" endtime="20201029 12:43:15.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.773" level="INFO">VALUE: [2.3609999999507636e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2.3750000002209504e-06, 2.4170000001433323e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.361000000394853e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.3879999999643076e-06, 2.3889999996029587e-06, 2.362000000033504e-06, 2.3889999996029587e-06, 2.374999999776861e-06, 2.3339999999372196e-06, 2.374999999776861e-06, 2.347000000124666e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.4020000002344943e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.4029999998731455e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3060000002850245e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.416000000060592e-06, 2.3750000002209504e-06]</msg>
<status status="PASS" starttime="20201029 12:43:15.771" endtime="20201029 12:43:15.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.767" endtime="20201029 12:43:15.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.389" endtime="20201029 12:43:15.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.388" endtime="20201029 12:43:15.775"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.782" endtime="20201029 12:43:15.795"></status>
</kw>
<msg timestamp="20201029 12:43:15.795" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.781" endtime="20201029 12:43:15.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.798" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.796" endtime="20201029 12:43:15.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.799" endtime="20201029 12:43:15.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.778" endtime="20201029 12:43:15.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.777" endtime="20201029 12:43:15.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.809" endtime="20201029 12:43:16.120"></status>
</kw>
<msg timestamp="20201029 12:43:16.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.695691556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.695693931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.807" endtime="20201029 12:43:16.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.695691556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.695693931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.125" endtime="20201029 12:43:16.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.135" endtime="20201029 12:43:16.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.804" endtime="20201029 12:43:16.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.802" endtime="20201029 12:43:16.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:16.141" level="INFO">${RESULT} = [{'diff': 2.3750000002209504e-06}, {'diff': 2.3889999996029587e-06}, {'diff': 2.3060000002850245e-06}, {'diff': 2.389000000047048e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.374999999776861e-06...</msg>
<status status="PASS" starttime="20201029 12:43:16.138" endtime="20201029 12:43:16.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:16.147" level="INFO">${OVERHEAD} = {'diff': [2.3750000002209504e-06, 2.3889999996029587e-06, 2.3060000002850245e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, ...</msg>
<status status="PASS" starttime="20201029 12:43:16.143" endtime="20201029 12:43:16.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.151" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:16.150" endtime="20201029 12:43:16.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.154" level="INFO">VALUE: [2.3750000002209504e-06, 2.3889999996029587e-06, 2.3060000002850245e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.416000000060592e-06, 2.3750000002209504e-06, 2.4170000001433323e-06, 2.3879999999643076e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.4440000001568762e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.374999999776861e-06, 2.4029999998731455e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3889999996029587e-06, 2.4170000001433323e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.3879999999643076e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3889999996029587e-06, 2.389000000047048e-06]</msg>
<status status="PASS" starttime="20201029 12:43:16.152" endtime="20201029 12:43:16.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.148" endtime="20201029 12:43:16.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.775" endtime="20201029 12:43:16.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.775" endtime="20201029 12:43:16.155"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.164" endtime="20201029 12:43:16.176"></status>
</kw>
<msg timestamp="20201029 12:43:16.176" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.163" endtime="20201029 12:43:16.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.179" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.177" endtime="20201029 12:43:16.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.180" endtime="20201029 12:43:16.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.160" endtime="20201029 12:43:16.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.157" endtime="20201029 12:43:16.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.189" endtime="20201029 12:43:16.529"></status>
</kw>
<msg timestamp="20201029 12:43:16.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.073012083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.073014458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.188" endtime="20201029 12:43:16.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.073012083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.073014458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.534" endtime="20201029 12:43:16.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.544" endtime="20201029 12:43:16.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.185" endtime="20201029 12:43:16.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.183" endtime="20201029 12:43:16.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:16.551" level="INFO">${RESULT} = [{'diff': 2.374999999776861e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.374999999776861e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.374999999776861e-06}, {'diff': 2.374999999776861e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:16.547" endtime="20201029 12:43:16.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:16.557" level="INFO">${OVERHEAD} = {'diff': [2.374999999776861e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.38...</msg>
<status status="PASS" starttime="20201029 12:43:16.552" endtime="20201029 12:43:16.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.561" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:16.560" endtime="20201029 12:43:16.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.564" level="INFO">VALUE: [2.374999999776861e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.3879999999643076e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3889999996029587e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.334000000381309e-06, 2.374999999776861e-06, 2.4029999998731455e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.431000000413519e-06, 2.374999999776861e-06, 2.4170000001433323e-06, 2.3879999999643076e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.416000000060592e-06, 2.3879999999643076e-06, 2.374999999776861e-06, 2.347999999763317e-06, 2.416000000060592e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3480000002074064e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.374999999776861e-06]</msg>
<status status="PASS" starttime="20201029 12:43:16.562" endtime="20201029 12:43:16.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.557" endtime="20201029 12:43:16.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.156" endtime="20201029 12:43:16.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.156" endtime="20201029 12:43:16.565"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.574" endtime="20201029 12:43:16.586"></status>
</kw>
<msg timestamp="20201029 12:43:16.586" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.572" endtime="20201029 12:43:16.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.589" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.587" endtime="20201029 12:43:16.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.590" endtime="20201029 12:43:16.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.569" endtime="20201029 12:43:16.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.567" endtime="20201029 12:43:16.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.600" endtime="20201029 12:43:16.918"></status>
</kw>
<msg timestamp="20201029 12:43:16.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.445021903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.445024278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.598" endtime="20201029 12:43:16.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.445021903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.445024278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.923" endtime="20201029 12:43:16.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.933" endtime="20201029 12:43:16.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.596" endtime="20201029 12:43:16.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.594" endtime="20201029 12:43:16.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:16.941" level="INFO">${RESULT} = [{'diff': 2.374999999776861e-06}, {'diff': 2.374999999776861e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.374999999776861e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3480000002074064e-06}...</msg>
<status status="PASS" starttime="20201029 12:43:16.936" endtime="20201029 12:43:16.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:16.946" level="INFO">${OVERHEAD} = {'diff': [2.374999999776861e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3480000002074064e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.3...</msg>
<status status="PASS" starttime="20201029 12:43:16.942" endtime="20201029 12:43:16.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.950" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:16.949" endtime="20201029 12:43:16.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.952" level="INFO">VALUE: [2.374999999776861e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3480000002074064e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.362000000033504e-06, 2.334000000381309e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2.3329999998544793e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.4299999998866895e-06, 2.3879999999643076e-06, 2.389000000047048e-06, 2.3889999996029587e-06, 2.320000000111122e-06, 2.3339999999372196e-06, 2.443999999712787e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.416000000060592e-06, 2.3060000002850245e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3339999999372196e-06, 2.3889999996029587e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3879999999643076e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.320000000111122e-06, 2.389000000047048e-06, 2.401999999790405e-06, 2.374999999776861e-06, 2.320000000111122e-06, 2.389000000047048e-06, 2.3190000000283817e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3059999998409353e-06]</msg>
<status status="PASS" starttime="20201029 12:43:16.951" endtime="20201029 12:43:16.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.946" endtime="20201029 12:43:16.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.566" endtime="20201029 12:43:16.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.566" endtime="20201029 12:43:16.954"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.962" endtime="20201029 12:43:16.973"></status>
</kw>
<msg timestamp="20201029 12:43:16.974" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.960" endtime="20201029 12:43:16.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.976" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.975" endtime="20201029 12:43:16.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.978" endtime="20201029 12:43:16.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.958" endtime="20201029 12:43:16.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.956" endtime="20201029 12:43:16.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.989" endtime="20201029 12:43:17.321"></status>
</kw>
<msg timestamp="20201029 12:43:17.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.845214236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.845216625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.988" endtime="20201029 12:43:17.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.845214236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.845216625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.328" endtime="20201029 12:43:17.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.338" endtime="20201029 12:43:17.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.983" endtime="20201029 12:43:17.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.981" endtime="20201029 12:43:17.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:17.345" level="INFO">${RESULT} = [{'diff': 2.389000000047048e-06}, {'diff': 2.389000000047048e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.320000000111122e-06}, {'diff': 2.389000000047048e-06}, {'diff': 2.401999999790405e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:17.342" endtime="20201029 12:43:17.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:17.350" level="INFO">${OVERHEAD} = {'diff': [2.389000000047048e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.320000000111122e-06, 2.389000000047048e-06, 2.401999999790405e-06, 2.374999999776861e-06, 2.320000000111122e-06, 2.389...</msg>
<status status="PASS" starttime="20201029 12:43:17.346" endtime="20201029 12:43:17.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.355" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:17.353" endtime="20201029 12:43:17.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.358" level="INFO">VALUE: [2.389000000047048e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.320000000111122e-06, 2.389000000047048e-06, 2.401999999790405e-06, 2.374999999776861e-06, 2.320000000111122e-06, 2.389000000047048e-06, 2.3190000000283817e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3059999998409353e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.361000000838942e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.3330000002985685e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.3330000002985685e-06, 2.3330000002985685e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.347999999763317e-06, 2.346999999680577e-06, 2.3889999996029587e-06, 2.3470000005687552e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.459000000065714e-06, 2.4029999998731455e-06, 2.362000000033504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.389000000491137e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.403000000761324e-06]</msg>
<status status="PASS" starttime="20201029 12:43:17.356" endtime="20201029 12:43:17.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.351" endtime="20201029 12:43:17.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.955" endtime="20201029 12:43:17.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.954" endtime="20201029 12:43:17.359"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.368" endtime="20201029 12:43:17.380"></status>
</kw>
<msg timestamp="20201029 12:43:17.380" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.366" endtime="20201029 12:43:17.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.383" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.381" endtime="20201029 12:43:17.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.384" endtime="20201029 12:43:17.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.363" endtime="20201029 12:43:17.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.362" endtime="20201029 12:43:17.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.394" endtime="20201029 12:43:17.708"></status>
</kw>
<msg timestamp="20201029 12:43:17.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.224406167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.224408542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.392" endtime="20201029 12:43:17.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.224406167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.224408542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.713" endtime="20201029 12:43:17.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.723" endtime="20201029 12:43:17.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.389" endtime="20201029 12:43:17.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.388" endtime="20201029 12:43:17.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:17.731" level="INFO">${RESULT} = [{'diff': 2.3750000002209504e-06}, {'diff': 2.3889999996029587e-06}, {'diff': 2.362000000033504e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.374999999332772e-06}, {'diff': 2.3750000002209504e-06...</msg>
<status status="PASS" starttime="20201029 12:43:17.727" endtime="20201029 12:43:17.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:17.736" level="INFO">${OVERHEAD} = {'diff': [2.3750000002209504e-06, 2.3889999996029587e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, ...</msg>
<status status="PASS" starttime="20201029 12:43:17.732" endtime="20201029 12:43:17.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.741" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:17.740" endtime="20201029 12:43:17.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.743" level="INFO">VALUE: [2.3750000002209504e-06, 2.3889999996029587e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.389000000491137e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.403000000761324e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.4029999998731455e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3330000002985685e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.320000000111122e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.416000000060592e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.4170000001433323e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.4300000003307787e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.416000000060592e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.3190000000283817e-06]</msg>
<status status="PASS" starttime="20201029 12:43:17.742" endtime="20201029 12:43:17.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.737" endtime="20201029 12:43:17.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.360" endtime="20201029 12:43:17.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.360" endtime="20201029 12:43:17.745"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.753" endtime="20201029 12:43:17.766"></status>
</kw>
<msg timestamp="20201029 12:43:17.766" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.752" endtime="20201029 12:43:17.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.769" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.768" endtime="20201029 12:43:17.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.770" endtime="20201029 12:43:17.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.749" endtime="20201029 12:43:17.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.747" endtime="20201029 12:43:17.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.780" endtime="20201029 12:43:18.115"></status>
</kw>
<msg timestamp="20201029 12:43:18.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.619466319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.619468708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.778" endtime="20201029 12:43:18.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.619466319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.619468708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.126" endtime="20201029 12:43:18.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.138" endtime="20201029 12:43:18.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.775" endtime="20201029 12:43:18.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.774" endtime="20201029 12:43:18.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:18.145" level="INFO">${RESULT} = [{'diff': 2.389000000491137e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.4300000003307787e-06}, {'diff': 2.3609999999507636e-0...</msg>
<status status="PASS" starttime="20201029 12:43:18.141" endtime="20201029 12:43:18.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:18.150" level="INFO">${OVERHEAD} = {'diff': [2.389000000491137e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.4300000003307787e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06,...</msg>
<status status="PASS" starttime="20201029 12:43:18.146" endtime="20201029 12:43:18.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.154" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:18.153" endtime="20201029 12:43:18.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.156" level="INFO">VALUE: [2.389000000491137e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.4300000003307787e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.416000000060592e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.3190000000283817e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.403000000761324e-06, 2.292000000458927e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3880000004083968e-06, 2.3750000002209504e-06, 2.3470000005687552e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3330000002985685e-06, 2.3889999996029587e-06, 2.4029999998731455e-06, 2.347999999763317e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.320000000111122e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.4029999998731455e-06, 2.374999999332772e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06]</msg>
<status status="PASS" starttime="20201029 12:43:18.155" endtime="20201029 12:43:18.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.150" endtime="20201029 12:43:18.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.746" endtime="20201029 12:43:18.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.745" endtime="20201029 12:43:18.158"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.166" endtime="20201029 12:43:18.179"></status>
</kw>
<msg timestamp="20201029 12:43:18.180" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.164" endtime="20201029 12:43:18.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.182" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.181" endtime="20201029 12:43:18.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.183" endtime="20201029 12:43:18.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.161" endtime="20201029 12:43:18.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.160" endtime="20201029 12:43:18.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.192" endtime="20201029 12:43:18.499"></status>
</kw>
<msg timestamp="20201029 12:43:18.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.995154431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.995156806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.191" endtime="20201029 12:43:18.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.995154431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.995156806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.504" endtime="20201029 12:43:18.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.514" endtime="20201029 12:43:18.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.188" endtime="20201029 12:43:18.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.186" endtime="20201029 12:43:18.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:18.521" level="INFO">${RESULT} = [{'diff': 2.3750000002209504e-06}, {'diff': 2.389000000491137e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.320000000111122e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3889999996029587e-06...</msg>
<status status="PASS" starttime="20201029 12:43:18.517" endtime="20201029 12:43:18.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:18.526" level="INFO">${OVERHEAD} = {'diff': [2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.320000000111122e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.4029999998731455e-06, ...</msg>
<status status="PASS" starttime="20201029 12:43:18.522" endtime="20201029 12:43:18.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.530" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:18.529" endtime="20201029 12:43:18.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.533" level="INFO">VALUE: [2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.320000000111122e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.4029999998731455e-06, 2.374999999332772e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.4170000001433323e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3879999995202184e-06, 2.443999999712787e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3050000006463733e-06, 2.4449999997955274e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.320000000111122e-06, 2.3190000000283817e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3339999994931304e-06, 2.347999999763317e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.389000000491137e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.389000000491137e-06]</msg>
<status status="PASS" starttime="20201029 12:43:18.531" endtime="20201029 12:43:18.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.527" endtime="20201029 12:43:18.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.159" endtime="20201029 12:43:18.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.158" endtime="20201029 12:43:18.534"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.543" endtime="20201029 12:43:18.554"></status>
</kw>
<msg timestamp="20201029 12:43:18.554" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.541" endtime="20201029 12:43:18.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.557" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.555" endtime="20201029 12:43:18.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.558" endtime="20201029 12:43:18.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.538" endtime="20201029 12:43:18.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.536" endtime="20201029 12:43:18.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.567" endtime="20201029 12:43:18.881"></status>
</kw>
<msg timestamp="20201029 12:43:18.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.399686444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.399688819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.566" endtime="20201029 12:43:18.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.399686444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.399688819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.886" endtime="20201029 12:43:18.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.896" endtime="20201029 12:43:18.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.563" endtime="20201029 12:43:18.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.561" endtime="20201029 12:43:18.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:18.903" level="INFO">${RESULT} = [{'diff': 2.374999999332772e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.389000000491137e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.374999999332772e-06}...</msg>
<status status="PASS" starttime="20201029 12:43:18.899" endtime="20201029 12:43:18.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:18.908" level="INFO">${OVERHEAD} = {'diff': [2.374999999332772e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2...</msg>
<status status="PASS" starttime="20201029 12:43:18.904" endtime="20201029 12:43:18.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.913" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:18.912" endtime="20201029 12:43:18.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.915" level="INFO">VALUE: [2.374999999332772e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.389000000491137e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.389000000491137e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.334000000381309e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.389000000491137e-06, 2.374999999332772e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3190000000283817e-06, 2.362000000033504e-06, 2.33299999941039e-06, 2.3190000000283817e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.33299999941039e-06, 2.389000000491137e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201029 12:43:18.914" endtime="20201029 12:43:18.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.909" endtime="20201029 12:43:18.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.535" endtime="20201029 12:43:18.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.535" endtime="20201029 12:43:18.917"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.929" endtime="20201029 12:43:18.940"></status>
</kw>
<msg timestamp="20201029 12:43:18.940" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.927" endtime="20201029 12:43:18.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.943" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.941" endtime="20201029 12:43:18.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.944" endtime="20201029 12:43:18.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.924" endtime="20201029 12:43:18.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.919" endtime="20201029 12:43:18.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.953" endtime="20201029 12:43:19.275"></status>
</kw>
<msg timestamp="20201029 12:43:19.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.766392375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.766394694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.951" endtime="20201029 12:43:19.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.766392375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.766394694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.280" endtime="20201029 12:43:19.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.290" endtime="20201029 12:43:19.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.949" endtime="20201029 12:43:19.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.947" endtime="20201029 12:43:19.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:19.297" level="INFO">${RESULT} = [{'diff': 2.3190000000283817e-06}, {'diff': 2.389000000491137e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3889999996029587e-06}, {'diff': 2.33299999941039e-06}, {'diff': 2.389000000491137e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:19.293" endtime="20201029 12:43:19.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:19.302" level="INFO">${OVERHEAD} = {'diff': [2.3190000000283817e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.33299999941039e-06, 2.389000000491137e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3...</msg>
<status status="PASS" starttime="20201029 12:43:19.298" endtime="20201029 12:43:19.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.306" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:19.305" endtime="20201029 12:43:19.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.309" level="INFO">VALUE: [2.3190000000283817e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.33299999941039e-06, 2.389000000491137e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3190000000283817e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.389000000491137e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.347999999763317e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.2919999995707485e-06, 2.4029999998731455e-06, 2.389000000491137e-06, 2.4170000001433323e-06, 2.3060000007291137e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.320000000111122e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.457999999982974e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.33299999941039e-06, 2.4029999998731455e-06, 2.3190000000283817e-06, 2.4029999998731455e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.4449999997955274e-06, 2.3609999999507636e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201029 12:43:19.307" endtime="20201029 12:43:19.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.303" endtime="20201029 12:43:19.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.917" endtime="20201029 12:43:19.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.917" endtime="20201029 12:43:19.310"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.319" endtime="20201029 12:43:19.331"></status>
</kw>
<msg timestamp="20201029 12:43:19.331" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.318" endtime="20201029 12:43:19.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.334" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.332" endtime="20201029 12:43:19.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.335" endtime="20201029 12:43:19.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.314" endtime="20201029 12:43:19.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.313" endtime="20201029 12:43:19.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.344" endtime="20201029 12:43:19.667"></status>
</kw>
<msg timestamp="20201029 12:43:19.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.142192764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.142195222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.342" endtime="20201029 12:43:19.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.142192764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.142195222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.672" endtime="20201029 12:43:19.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.682" endtime="20201029 12:43:19.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.340" endtime="20201029 12:43:19.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.338" endtime="20201029 12:43:19.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:19.689" level="INFO">${RESULT} = [{'diff': 2.457999999982974e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3889999996029587e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.33299999941039e-06}, {'diff': 2.4029999998731455e-06}...</msg>
<status status="PASS" starttime="20201029 12:43:19.686" endtime="20201029 12:43:19.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:19.694" level="INFO">${OVERHEAD} = {'diff': [2.457999999982974e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.33299999941039e-06, 2.4029999998731455e-06, 2.3190000000283817e-06, 2.4029999998731455e-06, 2...</msg>
<status status="PASS" starttime="20201029 12:43:19.690" endtime="20201029 12:43:19.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.699" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:19.698" endtime="20201029 12:43:19.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.701" level="INFO">VALUE: [2.457999999982974e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.33299999941039e-06, 2.4029999998731455e-06, 2.3190000000283817e-06, 2.4029999998731455e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.4449999997955274e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.3879999995202184e-06, 2.3750000002209504e-06, 2.4170000001433323e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.362000000033504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.4309999995253406e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3059999998409353e-06, 2.389000000491137e-06, 2.3889999996029587e-06, 2.443999999712787e-06, 2.3880000004083968e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.361000000838942e-06, 2.3750000002209504e-06]</msg>
<status status="PASS" starttime="20201029 12:43:19.700" endtime="20201029 12:43:19.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.695" endtime="20201029 12:43:19.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.311" endtime="20201029 12:43:19.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.311" endtime="20201029 12:43:19.703"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.711" endtime="20201029 12:43:19.723"></status>
</kw>
<msg timestamp="20201029 12:43:19.724" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.710" endtime="20201029 12:43:19.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.726" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.725" endtime="20201029 12:43:19.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.727" endtime="20201029 12:43:19.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.707" endtime="20201029 12:43:19.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.705" endtime="20201029 12:43:19.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.736" endtime="20201029 12:43:20.054"></status>
</kw>
<msg timestamp="20201029 12:43:20.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.523053764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.523056153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.735" endtime="20201029 12:43:20.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.523053764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.523056153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.059" endtime="20201029 12:43:20.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.069" endtime="20201029 12:43:20.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.732" endtime="20201029 12:43:20.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.730" endtime="20201029 12:43:20.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:20.076" level="INFO">${RESULT} = [{'diff': 2.3889999996029587e-06}, {'diff': 2.443999999712787e-06}, {'diff': 2.3880000004083968e-06}, {'diff': 2.374999999332772e-06}, {'diff': 2.374999999332772e-06}, {'diff': 2.3609999999507636e-06}...</msg>
<status status="PASS" starttime="20201029 12:43:20.072" endtime="20201029 12:43:20.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:20.082" level="INFO">${OVERHEAD} = {'diff': [2.3889999996029587e-06, 2.443999999712787e-06, 2.3880000004083968e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2...</msg>
<status status="PASS" starttime="20201029 12:43:20.077" endtime="20201029 12:43:20.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.086" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:20.085" endtime="20201029 12:43:20.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.088" level="INFO">VALUE: [2.3889999996029587e-06, 2.443999999712787e-06, 2.3880000004083968e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.361000000838942e-06, 2.3750000002209504e-06, 2.3190000000283817e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.401999999790405e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.416999999255154e-06, 2.3060000007291137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.4170000001433323e-06, 2.33299999941039e-06, 2.3750000002209504e-06, 2.3199999992229436e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.346999999680577e-06, 2.374999999332772e-06, 2.3190000000283817e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.334000000381309e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06]</msg>
<status status="PASS" starttime="20201029 12:43:20.087" endtime="20201029 12:43:20.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.083" endtime="20201029 12:43:20.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.704" endtime="20201029 12:43:20.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.704" endtime="20201029 12:43:20.090"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.098" endtime="20201029 12:43:20.111"></status>
</kw>
<msg timestamp="20201029 12:43:20.111" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.097" endtime="20201029 12:43:20.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.114" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.112" endtime="20201029 12:43:20.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.115" endtime="20201029 12:43:20.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.094" endtime="20201029 12:43:20.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.092" endtime="20201029 12:43:20.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.125" endtime="20201029 12:43:20.434"></status>
</kw>
<msg timestamp="20201029 12:43:20.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.903503847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.903506222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.124" endtime="20201029 12:43:20.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.903503847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.903506222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.439" endtime="20201029 12:43:20.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.449" endtime="20201029 12:43:20.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.120" endtime="20201029 12:43:20.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.118" endtime="20201029 12:43:20.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:20.456" level="INFO">${RESULT} = [{'diff': 2.3750000002209504e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.362000000033504e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.389000000491137e-06}, {'diff': 2.3750000002209504e-06...</msg>
<status status="PASS" starttime="20201029 12:43:20.453" endtime="20201029 12:43:20.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:20.461" level="INFO">${OVERHEAD} = {'diff': [2.3750000002209504e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2...</msg>
<status status="PASS" starttime="20201029 12:43:20.457" endtime="20201029 12:43:20.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.465" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:20.464" endtime="20201029 12:43:20.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.470" level="INFO">VALUE: [2.3750000002209504e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.334000000381309e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.4170000001433323e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3880000004083968e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.389000000491137e-06, 2.374999999332772e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.3470000005687552e-06, 2.33299999941039e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.401999999790405e-06, 2.3190000000283817e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3059999998409353e-06, 2.3889999996029587e-06, 2.2919999995707485e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201029 12:43:20.466" endtime="20201029 12:43:20.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.462" endtime="20201029 12:43:20.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.091" endtime="20201029 12:43:20.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.091" endtime="20201029 12:43:20.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.685" endtime="20201029 12:43:20.473"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:12.615" endtime="20201029 12:43:20.473" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:20.480" endtime="20201029 12:43:20.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.478" endtime="20201029 12:43:20.500"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.513" endtime="20201029 12:43:20.527"></status>
</kw>
<msg timestamp="20201029 12:43:20.528" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.511" endtime="20201029 12:43:20.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.531" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.529" endtime="20201029 12:43:20.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.534" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:20.532" endtime="20201029 12:43:20.534"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:20.509" endtime="20201029 12:43:20.535"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:20.506" endtime="20201029 12:43:20.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.505" endtime="20201029 12:43:20.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:20.539" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:20.538" endtime="20201029 12:43:20.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.536" endtime="20201029 12:43:20.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.504" endtime="20201029 12:43:20.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.504" endtime="20201029 12:43:20.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.541" endtime="20201029 12:43:20.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.502" endtime="20201029 12:43:20.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.500" endtime="20201029 12:43:20.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.477" endtime="20201029 12:43:20.544"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.554" endtime="20201029 12:43:20.573"></status>
</kw>
<msg timestamp="20201029 12:43:20.573" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.552" endtime="20201029 12:43:20.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.576" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.574" endtime="20201029 12:43:20.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.577" endtime="20201029 12:43:20.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.548" endtime="20201029 12:43:20.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.546" endtime="20201029 12:43:20.580"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.582" endtime="20201029 12:43:20.584"></status>
</kw>
<msg timestamp="20201029 12:43:20.584" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:43:20.581" endtime="20201029 12:43:20.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.588" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:20.587" endtime="20201029 12:43:20.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.590" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:20.589" endtime="20201029 12:43:20.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.585" endtime="20201029 12:43:20.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.595" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:20.594" endtime="20201029 12:43:20.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.597" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:20.596" endtime="20201029 12:43:20.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.592" endtime="20201029 12:43:20.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.605" endtime="20201029 12:43:20.891"></status>
</kw>
<msg timestamp="20201029 12:43:20.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066801097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066808528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.603" endtime="20201029 12:43:20.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066801097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066808528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.895" endtime="20201029 12:43:20.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.904" endtime="20201029 12:43:20.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.600" endtime="20201029 12:43:20.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.599" endtime="20201029 12:43:20.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:20.910" level="INFO">${RESULT} = [{'diff': 7.431000000002186e-06}, {'diff': 7.5690000000128155e-06}, {'diff': 7.568999999998938e-06}, {'diff': 7.5830000000054465e-06}, {'diff': 7.555000000006307e-06}, {'diff': 7.569999999998411e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:20.907" endtime="20201029 12:43:20.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:20.916" level="INFO">${OVERHEAD} = {'diff': [7.431000000002186e-06, 7.5690000000128155e-06, 7.568999999998938e-06, 7.5830000000054465e-06, 7.555000000006307e-06, 7.569999999998411e-06, 7.5969999999980775e-06, 7.569999999998411e-06, 7.5...</msg>
<status status="PASS" starttime="20201029 12:43:20.911" endtime="20201029 12:43:20.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.920" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 12:43:20.919" endtime="20201029 12:43:20.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.923" level="INFO">VALUE: [7.431000000002186e-06, 7.5690000000128155e-06, 7.568999999998938e-06, 7.5830000000054465e-06, 7.555000000006307e-06, 7.569999999998411e-06, 7.5969999999980775e-06, 7.569999999998411e-06, 7.5830000000054465e-06, 7.568999999998938e-06, 7.555000000006307e-06, 7.5419999999992715e-06, 7.5830000000054465e-06, 7.5280000000066405e-06, 7.582999999991569e-06, 7.583999999991042e-06, 7.568999999998938e-06, 7.5830000000054465e-06, 7.5969999999980775e-06, 7.568999999998938e-06, 7.5830000000054465e-06, 7.582999999991569e-06, 7.58400000000492e-06, 7.5830000000054465e-06, 7.583999999991042e-06, 7.58400000000492e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.58400000000492e-06, 7.55600000000578e-06, 7.5969999999980775e-06, 7.5969999999980775e-06, 7.527999999992763e-06, 7.5969999999980775e-06, 7.568999999998938e-06, 7.582999999991569e-06, 7.5969999999980775e-06, 7.514000000000132e-06, 7.5969999999980775e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.5830000000054465e-06, 7.5830000000054465e-06, 7.58400000000492e-06, 7.597999999997551e-06, 7.583999999991042e-06, 7.597000000011955e-06, 7.5830000000054465e-06, 7.58400000000492e-06, 7.583999999991042e-06]</msg>
<status status="PASS" starttime="20201029 12:43:20.921" endtime="20201029 12:43:20.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.916" endtime="20201029 12:43:20.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.544" endtime="20201029 12:43:20.925"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:20.475" endtime="20201029 12:43:20.925" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:20.932" endtime="20201029 12:43:20.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.930" endtime="20201029 12:43:20.952"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.967" endtime="20201029 12:43:20.981"></status>
</kw>
<msg timestamp="20201029 12:43:20.981" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.966" endtime="20201029 12:43:20.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.984" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.982" endtime="20201029 12:43:20.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.987" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:20.985" endtime="20201029 12:43:20.987"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:20.962" endtime="20201029 12:43:20.988"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:20.958" endtime="20201029 12:43:20.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.957" endtime="20201029 12:43:20.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:20.994" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:20.993" endtime="20201029 12:43:20.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.990" endtime="20201029 12:43:20.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.956" endtime="20201029 12:43:20.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.956" endtime="20201029 12:43:20.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.995" endtime="20201029 12:43:20.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.954" endtime="20201029 12:43:20.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.953" endtime="20201029 12:43:20.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.929" endtime="20201029 12:43:20.998"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.007" endtime="20201029 12:43:21.110"></status>
</kw>
<msg timestamp="20201029 12:43:21.111" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.005" endtime="20201029 12:43:21.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.113" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.112" endtime="20201029 12:43:21.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.115" endtime="20201029 12:43:21.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.003" endtime="20201029 12:43:21.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.000" endtime="20201029 12:43:21.117"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.120" endtime="20201029 12:43:21.122"></status>
</kw>
<msg timestamp="20201029 12:43:21.122" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:43:21.118" endtime="20201029 12:43:21.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.126" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:21.125" endtime="20201029 12:43:21.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.128" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:21.127" endtime="20201029 12:43:21.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.123" endtime="20201029 12:43:21.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.133" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:21.132" endtime="20201029 12:43:21.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.135" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:21.134" endtime="20201029 12:43:21.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.130" endtime="20201029 12:43:21.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.142" endtime="20201029 12:43:21.434"></status>
</kw>
<msg timestamp="20201029 12:43:21.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069272056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0693315, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:21.141" endtime="20201029 12:43:21.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069272056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0693315, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:21.439" endtime="20201029 12:43:21.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.447" endtime="20201029 12:43:21.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.138" endtime="20201029 12:43:21.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.136" endtime="20201029 12:43:21.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:21.454" level="INFO">${RESULT} = [{'diff': 5.9444000000005714e-05}, {'diff': 5.9264000000003314e-05}, {'diff': 5.9320000000001594e-05}, {'diff': 5.9320000000001594e-05}, {'diff': 5.930499999999561e-05}, {'diff': 5.931900000000212e-05...</msg>
<status status="PASS" starttime="20201029 12:43:21.450" endtime="20201029 12:43:21.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:21.458" level="INFO">${OVERHEAD} = {'diff': [5.9444000000005714e-05, 5.9264000000003314e-05, 5.9320000000001594e-05, 5.9320000000001594e-05, 5.930499999999561e-05, 5.931900000000212e-05, 5.9264000000003314e-05, 5.931900000000212e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:43:21.455" endtime="20201029 12:43:21.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.463" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 12:43:21.462" endtime="20201029 12:43:21.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.466" level="INFO">VALUE: [5.9444000000005714e-05, 5.9264000000003314e-05, 5.9320000000001594e-05, 5.9320000000001594e-05, 5.930499999999561e-05, 5.931900000000212e-05, 5.9264000000003314e-05, 5.931900000000212e-05, 5.9333999999994225e-05, 5.938900000000691e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.930499999999561e-05, 5.9320000000001594e-05, 5.9320000000001594e-05, 5.931900000000212e-05, 5.9333999999994225e-05, 5.930499999999561e-05, 5.931899999998824e-05, 5.936099999999389e-05, 5.9305999999995085e-05, 5.93340000000081e-05, 5.9305999999995085e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.9320000000001594e-05, 5.930600000000896e-05, 5.930499999999561e-05, 5.930500000000949e-05, 5.9305999999995085e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.930500000000949e-05, 5.93750000000004e-05, 5.92909999999891e-05, 5.931999999997384e-05, 5.933299999999475e-05, 5.934700000001514e-05, 5.931900000000212e-05, 5.9291999999988576e-05, 5.9320000000001594e-05, 5.9320000000001594e-05, 5.9320000000001594e-05, 5.933299999999475e-05, 5.929200000001633e-05, 5.930599999998121e-05, 5.931900000000212e-05, 5.930600000000896e-05, 5.931900000000212e-05]</msg>
<status status="PASS" starttime="20201029 12:43:21.464" endtime="20201029 12:43:21.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.459" endtime="20201029 12:43:21.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.999" endtime="20201029 12:43:21.467"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:20.927" endtime="20201029 12:43:21.468" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:21.475" endtime="20201029 12:43:21.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.473" endtime="20201029 12:43:21.495"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.509" endtime="20201029 12:43:21.523"></status>
</kw>
<msg timestamp="20201029 12:43:21.523" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.507" endtime="20201029 12:43:21.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.526" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.524" endtime="20201029 12:43:21.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.529" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:21.527" endtime="20201029 12:43:21.529"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:21.504" endtime="20201029 12:43:21.530"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:21.501" endtime="20201029 12:43:21.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.500" endtime="20201029 12:43:21.530"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:21.534" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:21.534" endtime="20201029 12:43:21.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.531" endtime="20201029 12:43:21.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.499" endtime="20201029 12:43:21.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.498" endtime="20201029 12:43:21.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.536" endtime="20201029 12:43:21.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.497" endtime="20201029 12:43:21.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.495" endtime="20201029 12:43:21.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.472" endtime="20201029 12:43:21.539"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.547" endtime="20201029 12:43:21.882"></status>
</kw>
<msg timestamp="20201029 12:43:21.883" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.546" endtime="20201029 12:43:21.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.888" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.885" endtime="20201029 12:43:21.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.891" endtime="20201029 12:43:21.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.543" endtime="20201029 12:43:21.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.541" endtime="20201029 12:43:21.896"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.901" endtime="20201029 12:43:21.905"></status>
</kw>
<msg timestamp="20201029 12:43:21.906" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:43:21.898" endtime="20201029 12:43:21.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.914" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:21.912" endtime="20201029 12:43:21.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.919" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:21.917" endtime="20201029 12:43:21.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.908" endtime="20201029 12:43:21.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.929" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:21.927" endtime="20201029 12:43:21.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.933" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:21.931" endtime="20201029 12:43:21.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.922" endtime="20201029 12:43:21.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.951" endtime="20201029 12:43:22.247"></status>
</kw>
<msg timestamp="20201029 12:43:22.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070136833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070250556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.947" endtime="20201029 12:43:22.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070136833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070250556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.250" endtime="20201029 12:43:22.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.258" endtime="20201029 12:43:22.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.940" endtime="20201029 12:43:22.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.936" endtime="20201029 12:43:22.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:22.267" level="INFO">${RESULT} = [{'diff': 0.00011372300000001001}, {'diff': 0.0001122499999999943}, {'diff': 0.00011215300000000372}, {'diff': 0.00011215300000000372}, {'diff': 0.00011213899999999721}, {'diff': 0.0001121810000000028...</msg>
<status status="PASS" starttime="20201029 12:43:22.263" endtime="20201029 12:43:22.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:22.272" level="INFO">${OVERHEAD} = {'diff': [0.00011372300000001001, 0.0001122499999999943, 0.00011215300000000372, 0.00011215300000000372, 0.00011213899999999721, 0.00011218100000000286, 0.00011216699999999635, 0.00011216699999999635,...</msg>
<status status="PASS" starttime="20201029 12:43:22.268" endtime="20201029 12:43:22.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.278" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 12:43:22.276" endtime="20201029 12:43:22.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.281" level="INFO">VALUE: [0.00011372300000001001, 0.0001122499999999943, 0.00011215300000000372, 0.00011215300000000372, 0.00011213899999999721, 0.00011218100000000286, 0.00011216699999999635, 0.00011216699999999635, 0.00011215300000000372, 0.00011216599999999688, 0.00011215299999997597, 0.00011217999999998951, 0.00011216699999999635, 0.00011215300000000372, 0.00011215200000000425, 0.00011223599999998779, 0.00011216699999999635, 0.00011215200000000425, 0.00011215300000000372, 0.00011216699999999635, 0.00011215300000000372, 0.00011215300000000372, 0.00011216699999999635, 0.00011216699999999635, 0.00011216699999999635, 0.00011216699999999635, 0.00011213899999998334, 0.00011215300000000372, 0.00011215300000000372, 0.00011215300000000372, 0.00011216599999996912, 0.00011216699999999635, 0.00011215300000000372, 0.00011215299999994821, 0.00011216699999999635, 0.00011215300000000372, 0.000112152000000032, 0.00011209699999997769, 0.00011215199999997649, 0.00011216699999999635, 0.00011218099999998898, 0.00011218099999998898, 0.00011215300000000372, 0.00011218099999998898, 0.00011215300000000372, 0.00011216699999999635, 0.00011213899999995558, 0.00011215300000000372, 0.00011216600000002463, 0.00011215300000000372]</msg>
<status status="PASS" starttime="20201029 12:43:22.279" endtime="20201029 12:43:22.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.273" endtime="20201029 12:43:22.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.539" endtime="20201029 12:43:22.283"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:21.469" endtime="20201029 12:43:22.284" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:22.292" endtime="20201029 12:43:22.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.290" endtime="20201029 12:43:22.313"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.327" endtime="20201029 12:43:22.341"></status>
</kw>
<msg timestamp="20201029 12:43:22.341" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.325" endtime="20201029 12:43:22.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.344" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.342" endtime="20201029 12:43:22.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.347" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:22.345" endtime="20201029 12:43:22.347"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:22.323" endtime="20201029 12:43:22.348"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:22.320" endtime="20201029 12:43:22.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.319" endtime="20201029 12:43:22.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:22.353" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:22.352" endtime="20201029 12:43:22.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.350" endtime="20201029 12:43:22.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.318" endtime="20201029 12:43:22.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.318" endtime="20201029 12:43:22.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.354" endtime="20201029 12:43:22.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.316" endtime="20201029 12:43:22.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.314" endtime="20201029 12:43:22.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.288" endtime="20201029 12:43:22.357"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.366" endtime="20201029 12:43:22.386"></status>
</kw>
<msg timestamp="20201029 12:43:22.386" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.364" endtime="20201029 12:43:22.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.389" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.387" endtime="20201029 12:43:22.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.390" endtime="20201029 12:43:22.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.361" endtime="20201029 12:43:22.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.359" endtime="20201029 12:43:22.392"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.395" endtime="20201029 12:43:22.397"></status>
</kw>
<msg timestamp="20201029 12:43:22.398" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:43:22.393" endtime="20201029 12:43:22.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.402" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:22.401" endtime="20201029 12:43:22.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.404" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:22.403" endtime="20201029 12:43:22.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.399" endtime="20201029 12:43:22.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.409" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:22.408" endtime="20201029 12:43:22.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.411" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:22.410" endtime="20201029 12:43:22.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.406" endtime="20201029 12:43:22.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.419" endtime="20201029 12:43:22.704"></status>
</kw>
<msg timestamp="20201029 12:43:22.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065813986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065816319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.417" endtime="20201029 12:43:22.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065813986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065816319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.709" endtime="20201029 12:43:22.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.717" endtime="20201029 12:43:22.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.415" endtime="20201029 12:43:22.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.413" endtime="20201029 12:43:22.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:22.724" level="INFO">${RESULT} = [{'diff': 2.332999999993257e-06}, {'diff': 2.305000000007995e-06}, {'diff': 2.29200000000096e-06}, {'diff': 2.3200000000000998e-06}, {'diff': 2.319000000000626e-06}, {'diff': 2.3200000000000998e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:22.720" endtime="20201029 12:43:22.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:22.729" level="INFO">${OVERHEAD} = {'diff': [2.332999999993257e-06, 2.305000000007995e-06, 2.29200000000096e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.3339999999927308e-06, 2.3060000000074687e-06, 2.3...</msg>
<status status="PASS" starttime="20201029 12:43:22.726" endtime="20201029 12:43:22.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.734" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 12:43:22.733" endtime="20201029 12:43:22.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.737" level="INFO">VALUE: [2.332999999993257e-06, 2.305000000007995e-06, 2.29200000000096e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.3339999999927308e-06, 2.3060000000074687e-06, 2.3339999999927308e-06, 2.333000000007135e-06, 2.2910000000014863e-06, 2.333000000007135e-06, 2.333000000007135e-06, 2.3200000000000998e-06, 2.3060000000074687e-06, 2.305999999993591e-06, 2.3049999999941173e-06, 2.3060000000074687e-06, 2.305999999993591e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.305999999993591e-06, 2.250000000009189e-06, 2.3200000000000998e-06, 2.29200000000096e-06, 2.332999999993257e-06, 2.3339999999927308e-06, 2.3340000000066086e-06, 2.277999999994451e-06, 2.2639999999879423e-06, 2.319000000000626e-06, 2.3340000000066086e-06, 2.3049999999941173e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.305000000007995e-06, 2.319000000000626e-06, 2.29200000000096e-06, 2.2360000000026803e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.277999999994451e-06, 2.26400000000182e-06, 2.29200000000096e-06, 2.2499999999953113e-06, 2.319000000000626e-06, 2.3049999999941173e-06, 2.2910000000014863e-06, 2.26400000000182e-06, 2.3049999999941173e-06]</msg>
<status status="PASS" starttime="20201029 12:43:22.735" endtime="20201029 12:43:22.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.730" endtime="20201029 12:43:22.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.358" endtime="20201029 12:43:22.738"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:22.286" endtime="20201029 12:43:22.738" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:22.746" endtime="20201029 12:43:22.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.744" endtime="20201029 12:43:22.766"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.779" endtime="20201029 12:43:22.793"></status>
</kw>
<msg timestamp="20201029 12:43:22.793" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.777" endtime="20201029 12:43:22.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.796" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.794" endtime="20201029 12:43:22.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.799" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:22.797" endtime="20201029 12:43:22.799"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:22.775" endtime="20201029 12:43:22.800"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:22.772" endtime="20201029 12:43:22.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.771" endtime="20201029 12:43:22.801"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:22.804" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:22.804" endtime="20201029 12:43:22.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.801" endtime="20201029 12:43:22.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.770" endtime="20201029 12:43:22.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.770" endtime="20201029 12:43:22.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.806" endtime="20201029 12:43:22.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.768" endtime="20201029 12:43:22.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.767" endtime="20201029 12:43:22.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.743" endtime="20201029 12:43:22.809"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.819" endtime="20201029 12:43:22.924"></status>
</kw>
<msg timestamp="20201029 12:43:22.925" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.817" endtime="20201029 12:43:22.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.928" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.926" endtime="20201029 12:43:22.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.929" endtime="20201029 12:43:22.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.814" endtime="20201029 12:43:22.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.811" endtime="20201029 12:43:22.931"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.933" endtime="20201029 12:43:22.935"></status>
</kw>
<msg timestamp="20201029 12:43:22.935" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:43:22.932" endtime="20201029 12:43:22.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.940" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:22.939" endtime="20201029 12:43:22.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.942" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:22.941" endtime="20201029 12:43:22.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.937" endtime="20201029 12:43:22.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.947" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:22.946" endtime="20201029 12:43:22.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.949" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:22.948" endtime="20201029 12:43:22.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.944" endtime="20201029 12:43:22.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.957" endtime="20201029 12:43:23.250"></status>
</kw>
<msg timestamp="20201029 12:43:23.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067537333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067555986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.955" endtime="20201029 12:43:23.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067537333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067555986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.255" endtime="20201029 12:43:23.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.263" endtime="20201029 12:43:23.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.952" endtime="20201029 12:43:23.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.951" endtime="20201029 12:43:23.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:23.270" level="INFO">${RESULT} = [{'diff': 1.865299999999348e-05}, {'diff': 1.863900000000085e-05}, {'diff': 1.863900000000085e-05}, {'diff': 1.863900000000085e-05}, {'diff': 1.862499999999434e-05}, {'diff': 1.865299999999348e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:23.266" endtime="20201029 12:43:23.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:23.275" level="INFO">${OVERHEAD} = {'diff': [1.865299999999348e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.862499999999434e-05, 1.865299999999348e-05, 1.866699999999999e-05, 1.8638000000001376e-05, 1.863...</msg>
<status status="PASS" starttime="20201029 12:43:23.271" endtime="20201029 12:43:23.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.279" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 12:43:23.278" endtime="20201029 12:43:23.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.282" level="INFO">VALUE: [1.865299999999348e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.862499999999434e-05, 1.865299999999348e-05, 1.866699999999999e-05, 1.8638000000001376e-05, 1.863900000000085e-05, 1.866699999999999e-05, 1.866699999999999e-05, 1.866699999999999e-05, 1.863900000000085e-05, 1.862500000000822e-05, 1.861100000000171e-05, 1.8653000000007358e-05, 1.863899999998697e-05, 1.866699999999999e-05, 1.8652000000007884e-05, 1.866699999999999e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.862499999999434e-05, 1.865299999999348e-05, 1.8610999999987832e-05, 1.858300000000257e-05, 1.866699999999999e-05, 1.862500000000822e-05, 1.8653000000007358e-05, 1.866699999999999e-05, 1.858300000000257e-05, 1.866699999999999e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.863899999998697e-05, 1.8598000000008552e-05, 1.862499999999434e-05, 1.863899999998697e-05, 1.863899999998697e-05, 1.8652999999979603e-05, 1.8680000000020902e-05, 1.8666000000000516e-05, 1.863899999998697e-05, 1.8637999999987498e-05, 1.866699999999999e-05, 1.8653000000007358e-05, 1.8639000000014727e-05, 1.862499999999434e-05, 1.8639000000014727e-05, 1.8653000000007358e-05]</msg>
<status status="PASS" starttime="20201029 12:43:23.280" endtime="20201029 12:43:23.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.276" endtime="20201029 12:43:23.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.809" endtime="20201029 12:43:23.283"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:22.740" endtime="20201029 12:43:23.284" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:23.291" endtime="20201029 12:43:23.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.289" endtime="20201029 12:43:23.311"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.324" endtime="20201029 12:43:23.338"></status>
</kw>
<msg timestamp="20201029 12:43:23.339" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.323" endtime="20201029 12:43:23.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.341" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.340" endtime="20201029 12:43:23.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.348" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:23.342" endtime="20201029 12:43:23.348"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:23.320" endtime="20201029 12:43:23.349"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:23.318" endtime="20201029 12:43:23.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.316" endtime="20201029 12:43:23.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:23.353" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:23.352" endtime="20201029 12:43:23.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.350" endtime="20201029 12:43:23.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.316" endtime="20201029 12:43:23.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.315" endtime="20201029 12:43:23.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.355" endtime="20201029 12:43:23.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.314" endtime="20201029 12:43:23.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.312" endtime="20201029 12:43:23.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.288" endtime="20201029 12:43:23.358"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.366" endtime="20201029 12:43:23.702"></status>
</kw>
<msg timestamp="20201029 12:43:23.703" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.365" endtime="20201029 12:43:23.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.706" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.704" endtime="20201029 12:43:23.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.707" endtime="20201029 12:43:23.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.362" endtime="20201029 12:43:23.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.360" endtime="20201029 12:43:23.709"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.711" endtime="20201029 12:43:23.713"></status>
</kw>
<msg timestamp="20201029 12:43:23.714" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:43:23.710" endtime="20201029 12:43:23.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.718" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:23.717" endtime="20201029 12:43:23.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.720" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:23.719" endtime="20201029 12:43:23.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.714" endtime="20201029 12:43:23.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.725" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:23.724" endtime="20201029 12:43:23.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.727" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:23.726" endtime="20201029 12:43:23.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.722" endtime="20201029 12:43:23.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.734" endtime="20201029 12:43:24.027"></status>
</kw>
<msg timestamp="20201029 12:43:24.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073790361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073825667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.733" endtime="20201029 12:43:24.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073790361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073825667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.031" endtime="20201029 12:43:24.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.039" endtime="20201029 12:43:24.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.730" endtime="20201029 12:43:24.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.729" endtime="20201029 12:43:24.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:24.046" level="INFO">${RESULT} = [{'diff': 3.530599999999884e-05}, {'diff': 3.52779999999997e-05}, {'diff': 3.5304999999999365e-05}, {'diff': 3.5304999999999365e-05}, {'diff': 3.530599999999884e-05}, {'diff': 3.533399999999798e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:24.043" endtime="20201029 12:43:24.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:24.050" level="INFO">${OVERHEAD} = {'diff': [3.530599999999884e-05, 3.52779999999997e-05, 3.5304999999999365e-05, 3.5304999999999365e-05, 3.530599999999884e-05, 3.533399999999798e-05, 3.533399999999798e-05, 3.5332999999998504e-05, 3.53...</msg>
<status status="PASS" starttime="20201029 12:43:24.047" endtime="20201029 12:43:24.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.055" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 12:43:24.054" endtime="20201029 12:43:24.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.057" level="INFO">VALUE: [3.530599999999884e-05, 3.52779999999997e-05, 3.5304999999999365e-05, 3.5304999999999365e-05, 3.530599999999884e-05, 3.533399999999798e-05, 3.533399999999798e-05, 3.5332999999998504e-05, 3.5304999999999365e-05, 3.532000000000535e-05, 3.530599999998496e-05, 3.529100000002061e-05, 3.5319000000005873e-05, 3.526400000000707e-05, 3.5346999999991136e-05, 3.532000000000535e-05, 3.5332999999998504e-05, 3.532000000000535e-05, 3.526299999997984e-05, 3.5332999999998504e-05, 3.530499999998549e-05, 3.5306000000012716e-05, 3.531899999997812e-05, 3.5319000000005873e-05, 3.5319000000005873e-05, 3.531899999997812e-05, 3.532000000000535e-05, 3.530499999998549e-05, 3.534700000001889e-05, 3.530499999998549e-05, 3.531899999997812e-05, 3.5305999999957205e-05, 3.532000000000535e-05, 3.531899999997812e-05, 3.533399999999798e-05, 3.526400000003482e-05, 3.5306000000012716e-05, 3.532000000000535e-05, 3.531899999997812e-05, 3.533399999999798e-05, 3.530499999998549e-05, 3.5305999999957205e-05, 3.531900000003363e-05, 3.530499999998549e-05, 3.526399999997931e-05, 3.531899999997812e-05, 0.00013217999999998176, 3.532000000000535e-05, 3.536100000001152e-05, 3.531900000003363e-05]</msg>
<status status="PASS" starttime="20201029 12:43:24.056" endtime="20201029 12:43:24.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.051" endtime="20201029 12:43:24.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.358" endtime="20201029 12:43:24.059"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:23.285" endtime="20201029 12:43:24.059" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:24.066" endtime="20201029 12:43:24.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.064" endtime="20201029 12:43:24.086"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.100" endtime="20201029 12:43:24.115"></status>
</kw>
<msg timestamp="20201029 12:43:24.116" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.098" endtime="20201029 12:43:24.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.122" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.119" endtime="20201029 12:43:24.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.128" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:24.124" endtime="20201029 12:43:24.128"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:24.096" endtime="20201029 12:43:24.130"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:24.093" endtime="20201029 12:43:24.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.091" endtime="20201029 12:43:24.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:24.139" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:24.138" endtime="20201029 12:43:24.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.133" endtime="20201029 12:43:24.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.090" endtime="20201029 12:43:24.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.090" endtime="20201029 12:43:24.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.143" endtime="20201029 12:43:24.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.089" endtime="20201029 12:43:24.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.087" endtime="20201029 12:43:24.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.063" endtime="20201029 12:43:24.148"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.157" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:24.181" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:43:25.345" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:24.154" endtime="20201029 12:43:25.346"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.349" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:43:25.347" endtime="20201029 12:43:25.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.150" endtime="20201029 12:43:25.350"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:25.353" endtime="20201029 12:43:25.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.351" endtime="20201029 12:43:25.373"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.381" endtime="20201029 12:43:25.389"></status>
</kw>
<msg timestamp="20201029 12:43:25.390" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.380" endtime="20201029 12:43:25.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.393" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.391" endtime="20201029 12:43:25.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.394" endtime="20201029 12:43:25.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.377" endtime="20201029 12:43:25.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.375" endtime="20201029 12:43:25.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.405" endtime="20201029 12:43:25.725"></status>
</kw>
<msg timestamp="20201029 12:43:25.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017948931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017956583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.403" endtime="20201029 12:43:25.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017948931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017956583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.737" endtime="20201029 12:43:25.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.756" endtime="20201029 12:43:25.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.399" endtime="20201029 12:43:25.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.397" endtime="20201029 12:43:25.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:25.771" level="INFO">${PHILIP_RES} = [{'diff': 7.652000000000353e-06}, {'diff': 7.708999999998106e-06}, {'diff': 7.708999999998106e-06}, {'diff': 7.707999999998633e-06}, {'diff': 7.707999999998633e-06}, {'diff': 7.681000000002436e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:25.764" endtime="20201029 12:43:25.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:25.781" level="INFO">${RESULT} = {'diff': [7.652000000000353e-06, 7.708999999998106e-06, 7.708999999998106e-06, 7.707999999998633e-06, 7.707999999998633e-06, 7.681000000002436e-06, 7.722000000001672e-06, 7.694999999998536e-06, 7.6810...</msg>
<status status="PASS" starttime="20201029 12:43:25.773" endtime="20201029 12:43:25.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.791" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:25.788" endtime="20201029 12:43:25.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.796" level="INFO">VALUE: [7.652000000000353e-06, 7.708999999998106e-06, 7.708999999998106e-06, 7.707999999998633e-06, 7.707999999998633e-06, 7.681000000002436e-06, 7.722000000001672e-06, 7.694999999998536e-06, 7.681000000002436e-06, 7.721999999998203e-06, 7.722000000001672e-06, 7.709000000001576e-06, 7.693999999999063e-06, 7.723000000001146e-06, 7.735999999997772e-06, 7.639000000000257e-06, 7.695000000002006e-06, 7.693999999999063e-06, 7.679999999999493e-06, 7.695000000002006e-06, 7.693999999999063e-06, 7.708000000002102e-06, 7.709000000001576e-06, 7.679999999999493e-06, 7.694000000002532e-06, 7.708999999998106e-06, 7.679999999999493e-06, 7.708000000002102e-06, 7.680999999998966e-06, 7.722000000001672e-06, 7.666999999999397e-06, 7.722999999997676e-06, 7.721999999998203e-06, 7.707999999998633e-06, 7.708999999998106e-06, 7.693999999999063e-06, 7.721999999998203e-06, 7.694000000002532e-06, 7.707999999998633e-06, 7.736000000001242e-06, 7.709000000001576e-06, 7.679999999999493e-06, 7.707999999998633e-06, 7.722000000001672e-06, 7.665999999999923e-06, 7.667000000002866e-06, 7.693999999999063e-06, 7.707999999998633e-06, 7.667000000002866e-06, 7.707999999998633e-06]</msg>
<status status="PASS" starttime="20201029 12:43:25.793" endtime="20201029 12:43:25.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.783" endtime="20201029 12:43:25.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.374" endtime="20201029 12:43:25.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.351" endtime="20201029 12:43:25.800"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:25.805" endtime="20201029 12:43:25.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.802" endtime="20201029 12:43:25.828"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.840" endtime="20201029 12:43:25.849"></status>
</kw>
<msg timestamp="20201029 12:43:25.849" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.838" endtime="20201029 12:43:25.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.852" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.850" endtime="20201029 12:43:25.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.853" endtime="20201029 12:43:25.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.836" endtime="20201029 12:43:25.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.833" endtime="20201029 12:43:25.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.863" endtime="20201029 12:43:26.149"></status>
</kw>
<msg timestamp="20201029 12:43:26.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023693542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023708694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.861" endtime="20201029 12:43:26.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023693542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023708694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.153" endtime="20201029 12:43:26.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.161" endtime="20201029 12:43:26.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.859" endtime="20201029 12:43:26.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.857" endtime="20201029 12:43:26.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:26.167" level="INFO">${PHILIP_RES} = [{'diff': 1.5151999999997445e-05}, {'diff': 1.5138000000001345e-05}, {'diff': 1.5166999999999958e-05}, {'diff': 1.5125000000001249e-05}, {'diff': 1.5138999999997349e-05}, {'diff': 1.5153000000000388e-...</msg>
<status status="PASS" starttime="20201029 12:43:26.164" endtime="20201029 12:43:26.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:26.172" level="INFO">${RESULT} = {'diff': [1.5151999999997445e-05, 1.5138000000001345e-05, 1.5166999999999958e-05, 1.5125000000001249e-05, 1.5138999999997349e-05, 1.5153000000000388e-05, 1.5139000000000818e-05, 1.5139000000000818e-05...</msg>
<status status="PASS" starttime="20201029 12:43:26.168" endtime="20201029 12:43:26.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.177" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:26.176" endtime="20201029 12:43:26.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.179" level="INFO">VALUE: [1.5151999999997445e-05, 1.5138000000001345e-05, 1.5166999999999958e-05, 1.5125000000001249e-05, 1.5138999999997349e-05, 1.5153000000000388e-05, 1.5139000000000818e-05, 1.5139000000000818e-05, 1.5195000000002568e-05, 1.5125000000001249e-05, 1.5139000000000818e-05, 1.5139000000000818e-05, 1.5138000000001345e-05, 1.5138999999997349e-05, 1.5180999999999528e-05, 1.5153000000000388e-05, 1.511099999999821e-05, 1.5166000000000485e-05, 1.5139000000000818e-05, 1.5138999999997349e-05, 1.5194999999999098e-05, 1.5138999999997349e-05, 1.5139000000000818e-05, 1.5151999999997445e-05, 1.5208999999998668e-05, 1.5166999999999958e-05, 1.5139000000000818e-05, 1.5138999999997349e-05, 1.5138000000001345e-05, 1.5153000000000388e-05, 1.5111000000001679e-05, 1.5138999999997349e-05, 1.5166999999999958e-05, 1.5139000000000818e-05, 1.5139000000000818e-05, 1.5166999999999958e-05, 1.5083000000002539e-05, 1.5153000000000388e-05, 1.5139000000000818e-05, 1.5152000000000915e-05, 1.5139000000000818e-05, 1.5139000000000818e-05, 1.5166999999999958e-05, 1.5153000000000388e-05, 1.5152000000000915e-05, 1.5139000000000818e-05, 1.5153000000000388e-05, 1.5180999999999528e-05, 1.5139000000000818e-05, 1.5153000000000388e-05]</msg>
<status status="PASS" starttime="20201029 12:43:26.178" endtime="20201029 12:43:26.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.173" endtime="20201029 12:43:26.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.830" endtime="20201029 12:43:26.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.800" endtime="20201029 12:43:26.181"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:26.183" endtime="20201029 12:43:26.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.182" endtime="20201029 12:43:26.203"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.211" endtime="20201029 12:43:26.220"></status>
</kw>
<msg timestamp="20201029 12:43:26.220" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.209" endtime="20201029 12:43:26.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.223" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.221" endtime="20201029 12:43:26.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.224" endtime="20201029 12:43:26.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.207" endtime="20201029 12:43:26.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.205" endtime="20201029 12:43:26.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.233" endtime="20201029 12:43:26.520"></status>
</kw>
<msg timestamp="20201029 12:43:26.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017458917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017482583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.232" endtime="20201029 12:43:26.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017458917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017482583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.524" endtime="20201029 12:43:26.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.532" endtime="20201029 12:43:26.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.229" endtime="20201029 12:43:26.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.228" endtime="20201029 12:43:26.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:26.539" level="INFO">${PHILIP_RES} = [{'diff': 2.3665999999998577e-05}, {'diff': 2.366700000000152e-05}, {'diff': 2.366700000000152e-05}, {'diff': 2.3665999999998577e-05}, {'diff': 2.368100000000109e-05}, {'diff': 2.366700000000152e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:26.536" endtime="20201029 12:43:26.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:26.546" level="INFO">${RESULT} = {'diff': [2.3665999999998577e-05, 2.366700000000152e-05, 2.366700000000152e-05, 2.3665999999998577e-05, 2.368100000000109e-05, 2.366700000000152e-05, 2.363900000000238e-05, 2.3680000000001616e-05, 2.3...</msg>
<status status="PASS" starttime="20201029 12:43:26.540" endtime="20201029 12:43:26.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.555" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:26.553" endtime="20201029 12:43:26.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.560" level="INFO">VALUE: [2.3665999999998577e-05, 2.366700000000152e-05, 2.366700000000152e-05, 2.3665999999998577e-05, 2.368100000000109e-05, 2.366700000000152e-05, 2.363900000000238e-05, 2.3680000000001616e-05, 2.368100000000109e-05, 2.3680000000001616e-05, 2.3680000000001616e-05, 2.365299999999848e-05, 2.3708000000000756e-05, 2.3665999999998577e-05, 2.366699999999805e-05, 2.366699999999805e-05, 2.3651999999999007e-05, 2.366699999999805e-05, 2.368099999999762e-05, 2.3665999999998577e-05, 2.3694000000001186e-05, 2.365299999999848e-05, 2.3666000000002047e-05, 2.3680000000001616e-05, 2.366700000000152e-05, 2.365300000000195e-05, 2.361099999999977e-05, 2.366700000000152e-05, 2.368100000000109e-05, 2.3666000000002047e-05, 2.365300000000195e-05, 2.366699999999805e-05, 2.3694000000001186e-05, 2.3679999999998147e-05, 2.366699999999805e-05, 2.366699999999805e-05, 2.3679999999998147e-05, 2.366699999999805e-05, 2.366699999999805e-05, 2.3665999999998577e-05, 2.369500000000066e-05, 2.368100000000109e-05, 2.3693999999997717e-05, 2.368100000000109e-05, 2.368100000000109e-05, 2.368100000000109e-05, 2.366700000000152e-05, 2.366700000000152e-05, 2.366700000000152e-05, 2.3652000000002477e-05]</msg>
<status status="PASS" starttime="20201029 12:43:26.558" endtime="20201029 12:43:26.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.548" endtime="20201029 12:43:26.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.203" endtime="20201029 12:43:26.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.181" endtime="20201029 12:43:26.564"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:26.569" endtime="20201029 12:43:26.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.566" endtime="20201029 12:43:26.591"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.608" endtime="20201029 12:43:26.620"></status>
</kw>
<msg timestamp="20201029 12:43:26.621" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.605" endtime="20201029 12:43:26.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.627" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.624" endtime="20201029 12:43:26.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.629" endtime="20201029 12:43:26.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.600" endtime="20201029 12:43:26.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.596" endtime="20201029 12:43:26.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.646" endtime="20201029 12:43:26.934"></status>
</kw>
<msg timestamp="20201029 12:43:26.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029657681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029690861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.644" endtime="20201029 12:43:26.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029657681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029690861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.938" endtime="20201029 12:43:26.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.947" endtime="20201029 12:43:26.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.639" endtime="20201029 12:43:26.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.636" endtime="20201029 12:43:26.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:26.954" level="INFO">${PHILIP_RES} = [{'diff': 3.317999999999724e-05}, {'diff': 3.3277000000001694e-05}, {'diff': 3.3277000000001694e-05}, {'diff': 3.327800000000117e-05}, {'diff': 3.324999999999856e-05}, {'diff': 3.32779999999977e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:26.950" endtime="20201029 12:43:26.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:26.958" level="INFO">${RESULT} = {'diff': [3.317999999999724e-05, 3.3277000000001694e-05, 3.3277000000001694e-05, 3.327800000000117e-05, 3.324999999999856e-05, 3.32779999999977e-05, 3.329200000000074e-05, 3.327800000000117e-05, 3.326...</msg>
<status status="PASS" starttime="20201029 12:43:26.955" endtime="20201029 12:43:26.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.963" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:26.961" endtime="20201029 12:43:26.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.965" level="INFO">VALUE: [3.317999999999724e-05, 3.3277000000001694e-05, 3.3277000000001694e-05, 3.327800000000117e-05, 3.324999999999856e-05, 3.32779999999977e-05, 3.329200000000074e-05, 3.327800000000117e-05, 3.326399999999813e-05, 3.3262999999998655e-05, 3.32640000000016e-05, 3.329200000000074e-05, 3.326399999999813e-05, 3.326399999999813e-05, 3.3291000000001264e-05, 3.327800000000117e-05, 3.322199999999942e-05, 3.327800000000117e-05, 3.329200000000074e-05, 3.327800000000117e-05, 3.32779999999977e-05, 3.326399999999813e-05, 3.32640000000016e-05, 3.3305000000000834e-05, 3.329200000000074e-05, 3.329199999999727e-05, 3.329200000000074e-05, 3.32640000000016e-05, 3.3291000000001264e-05, 3.3276999999998225e-05, 3.3290999999997795e-05, 3.3332999999999974e-05, 3.329200000000074e-05, 3.32779999999977e-05, 3.326399999999813e-05, 3.327800000000117e-05, 3.3277000000001694e-05, 3.3290999999997795e-05, 3.326399999999813e-05, 3.326399999999813e-05, 3.326399999999813e-05, 3.330600000000378e-05, 3.327800000000464e-05, 3.329200000000421e-05, 3.3276999999998225e-05, 3.3276999999998225e-05, 3.3318999999996934e-05, 3.318100000000018e-05, 3.324999999999856e-05, 3.32779999999977e-05]</msg>
<status status="PASS" starttime="20201029 12:43:26.964" endtime="20201029 12:43:26.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.959" endtime="20201029 12:43:26.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.593" endtime="20201029 12:43:26.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.564" endtime="20201029 12:43:26.967"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:26.969" endtime="20201029 12:43:26.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.968" endtime="20201029 12:43:26.989"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.997" endtime="20201029 12:43:27.008"></status>
</kw>
<msg timestamp="20201029 12:43:27.009" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.996" endtime="20201029 12:43:27.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.011" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.010" endtime="20201029 12:43:27.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.012" endtime="20201029 12:43:27.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.993" endtime="20201029 12:43:27.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.991" endtime="20201029 12:43:27.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.021" endtime="20201029 12:43:27.307"></status>
</kw>
<msg timestamp="20201029 12:43:27.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019015028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019058944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.020" endtime="20201029 12:43:27.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019015028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019058944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.311" endtime="20201029 12:43:27.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.320" endtime="20201029 12:43:27.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.017" endtime="20201029 12:43:27.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.016" endtime="20201029 12:43:27.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:27.326" level="INFO">${PHILIP_RES} = [{'diff': 4.391600000000148e-05}, {'diff': 4.3958999999999665e-05}, {'diff': 4.397199999999976e-05}, {'diff': 4.398599999999933e-05}, {'diff': 4.39999999999989e-05}, {'diff': 4.3959000000003134e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:27.323" endtime="20201029 12:43:27.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:27.330" level="INFO">${RESULT} = {'diff': [4.391600000000148e-05, 4.3958999999999665e-05, 4.397199999999976e-05, 4.398599999999933e-05, 4.39999999999989e-05, 4.3959000000003134e-05, 4.392999999999758e-05, 4.397199999999976e-05, 4.395...</msg>
<status status="PASS" starttime="20201029 12:43:27.327" endtime="20201029 12:43:27.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.335" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:27.334" endtime="20201029 12:43:27.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.337" level="INFO">VALUE: [4.391600000000148e-05, 4.3958999999999665e-05, 4.397199999999976e-05, 4.398599999999933e-05, 4.39999999999989e-05, 4.3959000000003134e-05, 4.392999999999758e-05, 4.397199999999976e-05, 4.3958999999999665e-05, 4.395800000000019e-05, 4.395800000000019e-05, 4.401400000000194e-05, 4.3958999999999665e-05, 4.395800000000019e-05, 4.401399999999847e-05, 4.3958999999999665e-05, 4.397199999999976e-05, 4.394400000000062e-05, 4.397199999999976e-05, 4.3889000000001815e-05, 4.397199999999976e-05, 4.395800000000019e-05, 4.3959000000003134e-05, 4.398599999999933e-05, 4.394399999999715e-05, 4.397199999999976e-05, 4.3958999999999665e-05, 4.397199999999976e-05, 4.395800000000019e-05, 4.3945000000000095e-05, 4.395800000000019e-05, 4.395800000000019e-05, 4.395800000000019e-05, 4.3972999999999235e-05, 4.395800000000019e-05, 4.391600000000148e-05, 4.3972999999999235e-05, 4.3889000000001815e-05, 4.397199999999976e-05, 4.402799999999804e-05, 4.3945000000000095e-05, 4.39999999999989e-05, 4.394399999999715e-05, 4.398599999999933e-05, 4.397199999999976e-05, 4.397199999999976e-05, 4.397199999999976e-05, 4.3972999999999235e-05, 4.3917000000000955e-05, 4.397199999999976e-05]</msg>
<status status="PASS" starttime="20201029 12:43:27.336" endtime="20201029 12:43:27.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.331" endtime="20201029 12:43:27.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.990" endtime="20201029 12:43:27.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.967" endtime="20201029 12:43:27.339"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:27.342" endtime="20201029 12:43:27.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.340" endtime="20201029 12:43:27.362"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.370" endtime="20201029 12:43:27.381"></status>
</kw>
<msg timestamp="20201029 12:43:27.382" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.368" endtime="20201029 12:43:27.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.384" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.383" endtime="20201029 12:43:27.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.385" endtime="20201029 12:43:27.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.366" endtime="20201029 12:43:27.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.364" endtime="20201029 12:43:27.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.394" endtime="20201029 12:43:27.679"></status>
</kw>
<msg timestamp="20201029 12:43:27.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018110944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018166681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.393" endtime="20201029 12:43:27.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018110944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018166681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.685" endtime="20201029 12:43:27.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.695" endtime="20201029 12:43:27.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.390" endtime="20201029 12:43:27.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.388" endtime="20201029 12:43:27.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:27.703" level="INFO">${PHILIP_RES} = [{'diff': 5.573700000000015e-05}, {'diff': 5.5722000000001104e-05}, {'diff': 5.5708000000001534e-05}, {'diff': 5.5736000000000674e-05}, {'diff': 5.572300000000058e-05}, {'diff': 5.5750000000000244e-05...</msg>
<status status="PASS" starttime="20201029 12:43:27.700" endtime="20201029 12:43:27.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:27.710" level="INFO">${RESULT} = {'diff': [5.573700000000015e-05, 5.5722000000001104e-05, 5.5708000000001534e-05, 5.5736000000000674e-05, 5.572300000000058e-05, 5.5750000000000244e-05, 5.5750000000000244e-05, 5.5750000000000244e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:27.705" endtime="20201029 12:43:27.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.715" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:27.714" endtime="20201029 12:43:27.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.719" level="INFO">VALUE: [5.573700000000015e-05, 5.5722000000001104e-05, 5.5708000000001534e-05, 5.5736000000000674e-05, 5.572300000000058e-05, 5.5750000000000244e-05, 5.5750000000000244e-05, 5.5750000000000244e-05, 5.5777999999999384e-05, 5.5750000000000244e-05, 5.5708000000001534e-05, 5.5750000000000244e-05, 5.5735999999997204e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.5777999999999384e-05, 5.5722000000001104e-05, 5.573700000000015e-05, 5.5736000000000674e-05, 5.5722000000001104e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.5750000000000244e-05, 5.5750000000000244e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.5749999999996774e-05, 5.5736000000000674e-05, 5.5721999999997635e-05, 5.5722000000001104e-05, 5.5749999999996774e-05, 5.5722000000001104e-05, 5.5735999999997204e-05, 5.5722000000001104e-05, 5.572299999999711e-05, 5.5777999999999384e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.573700000000015e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.5722000000001104e-05, 5.572300000000058e-05, 5.5722000000001104e-05, 5.5721999999997635e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.5750000000000244e-05]</msg>
<status status="PASS" starttime="20201029 12:43:27.717" endtime="20201029 12:43:27.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.712" endtime="20201029 12:43:27.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.362" endtime="20201029 12:43:27.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.340" endtime="20201029 12:43:27.721"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:27.725" endtime="20201029 12:43:27.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.723" endtime="20201029 12:43:27.745"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.754" endtime="20201029 12:43:27.766"></status>
</kw>
<msg timestamp="20201029 12:43:27.766" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.752" endtime="20201029 12:43:27.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.769" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.767" endtime="20201029 12:43:27.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.770" endtime="20201029 12:43:27.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.749" endtime="20201029 12:43:27.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.747" endtime="20201029 12:43:27.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.779" endtime="20201029 12:43:28.064"></status>
</kw>
<msg timestamp="20201029 12:43:28.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018120542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018189125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.777" endtime="20201029 12:43:28.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018120542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018189125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.068" endtime="20201029 12:43:28.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.076" endtime="20201029 12:43:28.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.775" endtime="20201029 12:43:28.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.773" endtime="20201029 12:43:28.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:28.084" level="INFO">${PHILIP_RES} = [{'diff': 6.858300000000053e-05}, {'diff': 6.859799999999958e-05}, {'diff': 6.85970000000001e-05}, {'diff': 6.85970000000001e-05}, {'diff': 6.858300000000053e-05}, {'diff': 6.856900000000096e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:28.080" endtime="20201029 12:43:28.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:28.088" level="INFO">${RESULT} = {'diff': [6.858300000000053e-05, 6.859799999999958e-05, 6.85970000000001e-05, 6.85970000000001e-05, 6.858300000000053e-05, 6.856900000000096e-05, 6.859799999999958e-05, 6.858300000000053e-05, 6.8584e-...</msg>
<status status="PASS" starttime="20201029 12:43:28.085" endtime="20201029 12:43:28.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.092" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:28.091" endtime="20201029 12:43:28.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.094" level="INFO">VALUE: [6.858300000000053e-05, 6.859799999999958e-05, 6.85970000000001e-05, 6.85970000000001e-05, 6.858300000000053e-05, 6.856900000000096e-05, 6.859799999999958e-05, 6.858300000000053e-05, 6.8584e-05, 6.85970000000001e-05, 6.858299999999706e-05, 6.851400000000216e-05, 6.85970000000001e-05, 6.85970000000001e-05, 6.858300000000053e-05, 6.858300000000053e-05, 6.859800000000305e-05, 6.858300000000053e-05, 6.857000000000044e-05, 6.85970000000001e-05, 6.854199999999783e-05, 6.8584e-05, 6.855500000000139e-05, 6.859799999999958e-05, 6.856899999999749e-05, 6.858300000000053e-05, 6.858300000000053e-05, 6.858299999999706e-05, 6.859799999999958e-05, 6.858300000000053e-05, 6.85970000000001e-05, 6.85970000000001e-05, 6.85970000000001e-05, 6.8584e-05, 6.858300000000053e-05, 6.85970000000001e-05, 6.851400000000216e-05, 6.856900000000096e-05, 6.861100000000314e-05, 6.861099999999967e-05, 6.857000000000044e-05, 8.136099999999855e-05, 6.8584e-05, 6.858300000000053e-05, 6.859799999999958e-05, 6.85970000000001e-05, 6.865199999999891e-05, 6.861100000000314e-05, 6.861099999999967e-05, 6.859799999999958e-05]</msg>
<status status="PASS" starttime="20201029 12:43:28.093" endtime="20201029 12:43:28.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.089" endtime="20201029 12:43:28.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.746" endtime="20201029 12:43:28.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.722" endtime="20201029 12:43:28.096"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:28.098" endtime="20201029 12:43:28.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.097" endtime="20201029 12:43:28.118"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.127" endtime="20201029 12:43:28.139"></status>
</kw>
<msg timestamp="20201029 12:43:28.140" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.125" endtime="20201029 12:43:28.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.142" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.141" endtime="20201029 12:43:28.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.143" endtime="20201029 12:43:28.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.123" endtime="20201029 12:43:28.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.120" endtime="20201029 12:43:28.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.156" endtime="20201029 12:43:28.441"></status>
</kw>
<msg timestamp="20201029 12:43:28.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018046736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018129236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.154" endtime="20201029 12:43:28.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018046736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018129236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.445" endtime="20201029 12:43:28.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.453" endtime="20201029 12:43:28.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.151" endtime="20201029 12:43:28.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.150" endtime="20201029 12:43:28.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:28.460" level="INFO">${PHILIP_RES} = [{'diff': 8.249999999999924e-05}, {'diff': 8.251400000000228e-05}, {'diff': 8.252799999999838e-05}, {'diff': 8.251400000000228e-05}, {'diff': 8.252799999999838e-05}, {'diff': 8.254199999999795e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:28.457" endtime="20201029 12:43:28.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:28.464" level="INFO">${RESULT} = {'diff': [8.249999999999924e-05, 8.251400000000228e-05, 8.252799999999838e-05, 8.251400000000228e-05, 8.252799999999838e-05, 8.254199999999795e-05, 8.254100000000195e-05, 8.251399999999881e-05, 8.2556...</msg>
<status status="PASS" starttime="20201029 12:43:28.461" endtime="20201029 12:43:28.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.468" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:28.467" endtime="20201029 12:43:28.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.471" level="INFO">VALUE: [8.249999999999924e-05, 8.251400000000228e-05, 8.252799999999838e-05, 8.251400000000228e-05, 8.252799999999838e-05, 8.254199999999795e-05, 8.254100000000195e-05, 8.251399999999881e-05, 8.255600000000099e-05, 8.254200000000142e-05, 8.252799999999838e-05, 8.252700000000238e-05, 8.255600000000099e-05, 8.255600000000099e-05, 8.254099999999848e-05, 8.255499999999805e-05, 8.252800000000185e-05, 8.251399999999881e-05, 8.251399999999881e-05, 8.251399999999881e-05, 8.252799999999838e-05, 8.255500000000152e-05, 8.251399999999881e-05, 8.252800000000185e-05, 8.251399999999881e-05, 8.256899999999762e-05, 8.254100000000195e-05, 8.254199999999795e-05, 8.252800000000185e-05, 8.254200000000142e-05, 8.254099999999848e-05, 8.257000000000056e-05, 8.252799999999838e-05, 8.252800000000185e-05, 8.252699999999891e-05, 8.254199999999795e-05, 8.252800000000185e-05, 8.255499999999805e-05, 8.249999999999924e-05, 8.254200000000142e-05, 8.252799999999838e-05, 8.252800000000185e-05, 8.251399999999881e-05, 8.251399999999881e-05, 8.251400000000228e-05, 8.252799999999838e-05, 8.252700000000238e-05, 8.251399999999881e-05, 8.252799999999838e-05, 8.258300000000066e-05]</msg>
<status status="PASS" starttime="20201029 12:43:28.469" endtime="20201029 12:43:28.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.465" endtime="20201029 12:43:28.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.119" endtime="20201029 12:43:28.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.096" endtime="20201029 12:43:28.473"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:28.475" endtime="20201029 12:43:28.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.474" endtime="20201029 12:43:28.496"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.504" endtime="20201029 12:43:28.516"></status>
</kw>
<msg timestamp="20201029 12:43:28.517" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.502" endtime="20201029 12:43:28.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.519" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.518" endtime="20201029 12:43:28.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.520" endtime="20201029 12:43:28.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.500" endtime="20201029 12:43:28.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.498" endtime="20201029 12:43:28.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.529" endtime="20201029 12:43:28.826"></status>
</kw>
<msg timestamp="20201029 12:43:28.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017879875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017977403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.528" endtime="20201029 12:43:28.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017879875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017977403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.836" endtime="20201029 12:43:28.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.854" endtime="20201029 12:43:28.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.525" endtime="20201029 12:43:28.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.523" endtime="20201029 12:43:28.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:28.868" level="INFO">${PHILIP_RES} = [{'diff': 9.75279999999995e-05}, {'diff': 9.762500000000049e-05}, {'diff': 9.756900000000221e-05}, {'diff': 9.752700000000003e-05}, {'diff': 9.762500000000049e-05}, {'diff': 9.762500000000049e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:28.861" endtime="20201029 12:43:28.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:28.875" level="INFO">${RESULT} = {'diff': [9.75279999999995e-05, 9.762500000000049e-05, 9.756900000000221e-05, 9.752700000000003e-05, 9.762500000000049e-05, 9.762500000000049e-05, 9.762500000000049e-05, 9.755499999999917e-05, 9.75560...</msg>
<status status="PASS" starttime="20201029 12:43:28.871" endtime="20201029 12:43:28.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.880" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:28.879" endtime="20201029 12:43:28.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.882" level="INFO">VALUE: [9.75279999999995e-05, 9.762500000000049e-05, 9.756900000000221e-05, 9.752700000000003e-05, 9.762500000000049e-05, 9.762500000000049e-05, 9.762500000000049e-05, 9.755499999999917e-05, 9.755600000000211e-05, 9.754199999999907e-05, 9.75279999999995e-05, 9.755499999999917e-05, 9.75279999999995e-05, 9.752800000000297e-05, 9.755600000000211e-05, 9.75409999999996e-05, 9.754199999999907e-05, 9.751399999999993e-05, 9.747200000000122e-05, 9.756899999999874e-05, 9.756899999999874e-05, 9.74730000000007e-05, 9.755599999999864e-05, 9.755500000000264e-05, 9.756899999999874e-05, 9.761099999999745e-05, 9.75279999999995e-05, 9.755599999999864e-05, 9.752800000000297e-05, 9.750000000000036e-05, 9.754199999999907e-05, 9.755599999999864e-05, 9.755499999999917e-05, 9.755500000000264e-05, 9.754199999999907e-05, 9.75279999999995e-05, 9.754199999999907e-05, 9.75409999999996e-05, 9.754200000000254e-05, 9.754199999999907e-05, 9.751399999999993e-05, 9.755499999999917e-05, 9.756899999999874e-05, 9.755600000000211e-05, 9.755600000000211e-05, 9.756999999999821e-05, 9.751399999999993e-05, 9.755499999999917e-05, 9.754200000000254e-05, 9.755600000000211e-05]</msg>
<status status="PASS" starttime="20201029 12:43:28.881" endtime="20201029 12:43:28.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.876" endtime="20201029 12:43:28.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.496" endtime="20201029 12:43:28.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.473" endtime="20201029 12:43:28.884"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:28.887" endtime="20201029 12:43:28.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.885" endtime="20201029 12:43:28.907"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.915" endtime="20201029 12:43:28.930"></status>
</kw>
<msg timestamp="20201029 12:43:28.930" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.913" endtime="20201029 12:43:28.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.933" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.931" endtime="20201029 12:43:28.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.934" endtime="20201029 12:43:28.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.911" endtime="20201029 12:43:28.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.909" endtime="20201029 12:43:28.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.943" endtime="20201029 12:43:29.229"></status>
</kw>
<msg timestamp="20201029 12:43:29.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017834292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017947917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.941" endtime="20201029 12:43:29.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017834292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017947917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.233" endtime="20201029 12:43:29.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.241" endtime="20201029 12:43:29.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.939" endtime="20201029 12:43:29.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.937" endtime="20201029 12:43:29.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:29.249" level="INFO">${PHILIP_RES} = [{'diff': 0.00011362499999999914}, {'diff': 0.00011366700000000132}, {'diff': 0.0001137359999999997}, {'diff': 0.00011363899999999871}, {'diff': 0.00011370800000000056}, {'diff': 0.0001136670000000013...</msg>
<status status="PASS" starttime="20201029 12:43:29.246" endtime="20201029 12:43:29.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:29.253" level="INFO">${RESULT} = {'diff': [0.00011362499999999914, 0.00011366700000000132, 0.0001137359999999997, 0.00011363899999999871, 0.00011370800000000056, 0.00011366700000000132, 0.00011365300000000175, 0.00011365300000000175,...</msg>
<status status="PASS" starttime="20201029 12:43:29.250" endtime="20201029 12:43:29.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.257" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:29.256" endtime="20201029 12:43:29.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.260" level="INFO">VALUE: [0.00011362499999999914, 0.00011366700000000132, 0.0001137359999999997, 0.00011363899999999871, 0.00011370800000000056, 0.00011366700000000132, 0.00011365300000000175, 0.00011365300000000175, 0.00011363899999999871, 0.00011368100000000089, 0.00011363899999999871, 0.00011366700000000132, 0.00011366700000000132, 0.000113597, 0.0001137359999999997, 0.00011365199999999881, 0.00011365199999999881, 0.00011369400000000099, 0.00011366600000000185, 0.00011366600000000185, 0.00011366600000000185, 0.00011363899999999871, 0.00011363899999999871, 0.00011366699999999785, 0.00011366699999999785, 0.00011366700000000132, 0.00011365300000000175, 0.00011366700000000132, 0.00011365299999999828, 0.00011365299999999828, 0.00011366699999999785, 0.00011366700000000132, 0.00011363900000000218, 0.00011363900000000218, 0.00011366700000000132, 0.00011368100000000089, 0.00011363899999999871, 0.00011366599999999838, 0.00011368000000000142, 0.00011369400000000099, 0.00011363900000000218, 0.00011365199999999881, 0.00011365199999999881, 0.00011366599999999838, 0.00011368000000000142, 0.00011366700000000132, 0.00011365300000000175, 0.00011365300000000175, 0.00011363899999999871, 0.00011365299999999828]</msg>
<status status="PASS" starttime="20201029 12:43:29.258" endtime="20201029 12:43:29.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.254" endtime="20201029 12:43:29.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.907" endtime="20201029 12:43:29.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.884" endtime="20201029 12:43:29.308"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:29.311" endtime="20201029 12:43:29.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.309" endtime="20201029 12:43:29.331"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.339" endtime="20201029 12:43:29.354"></status>
</kw>
<msg timestamp="20201029 12:43:29.354" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.338" endtime="20201029 12:43:29.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.357" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.355" endtime="20201029 12:43:29.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.358" endtime="20201029 12:43:29.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.335" endtime="20201029 12:43:29.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.333" endtime="20201029 12:43:29.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.368" endtime="20201029 12:43:29.670"></status>
</kw>
<msg timestamp="20201029 12:43:29.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018036111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018166958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.366" endtime="20201029 12:43:29.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018036111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018166958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.679" endtime="20201029 12:43:29.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.690" endtime="20201029 12:43:29.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.364" endtime="20201029 12:43:29.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.362" endtime="20201029 12:43:29.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:29.697" level="INFO">${PHILIP_RES} = [{'diff': 0.0001308469999999999}, {'diff': 0.00013090300000000166}, {'diff': 0.00013083300000000034}, {'diff': 0.00013083300000000034}, {'diff': 0.0001308469999999999}, {'diff': 0.0001308469999999999}...</msg>
<status status="PASS" starttime="20201029 12:43:29.694" endtime="20201029 12:43:29.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:29.701" level="INFO">${RESULT} = {'diff': [0.0001308469999999999, 0.00013090300000000166, 0.00013083300000000034, 0.00013083300000000034, 0.0001308469999999999, 0.0001308469999999999, 0.0001308339999999998, 0.0001308469999999999, 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:29.698" endtime="20201029 12:43:29.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.705" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:29.704" endtime="20201029 12:43:29.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.708" level="INFO">VALUE: [0.0001308469999999999, 0.00013090300000000166, 0.00013083300000000034, 0.00013083300000000034, 0.0001308469999999999, 0.0001308469999999999, 0.0001308339999999998, 0.0001308469999999999, 0.0001308469999999999, 0.00013086099999999948, 0.00013081900000000077, 0.0001308469999999999, 0.0001308469999999999, 0.0001308469999999999, 0.00013086099999999948, 0.00013086099999999948, 0.0001308469999999999, 0.00013084799999999938, 0.00013080600000000067, 0.00013083300000000034, 0.0001308469999999999, 0.00013084799999999938, 0.00013083300000000034, 0.00013086100000000295, 0.0001308469999999999, 0.0001308469999999999, 0.0001308469999999999, 0.00013084799999999938, 0.0001308469999999999, 0.00013077800000000153, 0.0001308050000000012, 0.00013083300000000034, 0.00013086200000000242, 0.0001308469999999999, 0.0001308469999999999, 0.00013083300000000034, 0.0001308469999999999, 0.00013086099999999948, 0.00013083300000000034, 0.00013081900000000077, 0.0001308469999999999, 0.0001308469999999999, 0.00013087499999999905, 0.00013083400000000328, 0.0001308339999999998, 0.0001308469999999999, 0.00013086099999999948, 0.0001308469999999999, 0.0001308339999999998, 0.00013077799999999806]</msg>
<status status="PASS" starttime="20201029 12:43:29.706" endtime="20201029 12:43:29.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.702" endtime="20201029 12:43:29.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.331" endtime="20201029 12:43:29.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.309" endtime="20201029 12:43:29.710"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:29.713" endtime="20201029 12:43:29.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.711" endtime="20201029 12:43:29.734"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.746" endtime="20201029 12:43:29.763"></status>
</kw>
<msg timestamp="20201029 12:43:29.764" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.744" endtime="20201029 12:43:29.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.768" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.766" endtime="20201029 12:43:29.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.769" endtime="20201029 12:43:29.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.739" endtime="20201029 12:43:29.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.737" endtime="20201029 12:43:29.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.779" endtime="20201029 12:43:30.066"></status>
</kw>
<msg timestamp="20201029 12:43:30.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023999931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024149014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.777" endtime="20201029 12:43:30.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023999931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024149014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.071" endtime="20201029 12:43:30.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.079" endtime="20201029 12:43:30.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.775" endtime="20201029 12:43:30.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.773" endtime="20201029 12:43:30.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:30.085" level="INFO">${PHILIP_RES} = [{'diff': 0.00014908300000000124}, {'diff': 0.00014915300000000256}, {'diff': 0.00014912499999999995}, {'diff': 0.00014912499999999995}, {'diff': 0.00014911199999999986}, {'diff': 0.000149124999999999...</msg>
<status status="PASS" starttime="20201029 12:43:30.082" endtime="20201029 12:43:30.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:30.090" level="INFO">${RESULT} = {'diff': [0.00014908300000000124, 0.00014915300000000256, 0.00014912499999999995, 0.00014912499999999995, 0.00014911199999999986, 0.00014912499999999995, 0.00014912499999999995, 0.00014912499999999995...</msg>
<status status="PASS" starttime="20201029 12:43:30.086" endtime="20201029 12:43:30.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.094" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:30.093" endtime="20201029 12:43:30.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.097" level="INFO">VALUE: [0.00014908300000000124, 0.00014915300000000256, 0.00014912499999999995, 0.00014912499999999995, 0.00014911199999999986, 0.00014912499999999995, 0.00014912499999999995, 0.00014912499999999995, 0.0001490970000000008, 0.00014912499999999995, 0.00014911199999999986, 0.00014911100000000038, 0.00014913899999999952, 0.00014909800000000029, 0.00014908300000000124, 0.00014918099999999823, 0.00014912499999999995, 0.0001490970000000008, 0.00014913899999999952, 0.00014912499999999995, 0.0001490970000000008, 0.00014912499999999995, 0.00014912499999999995, 0.00014912499999999995, 0.00014913899999999952, 0.0001490970000000008, 0.00014911100000000038, 0.00014911100000000038, 0.00014912499999999995, 0.00014909699999999734, 0.0001490550000000021, 0.00014912499999999995, 0.00014911100000000038, 0.00014912499999999995, 0.00014911100000000038, 0.00014912499999999995, 0.0001491109999999969, 0.0001491529999999991, 0.00014912499999999995, 0.00014911100000000038, 0.00014911100000000038, 0.00014916700000000213, 0.00014911100000000038, 0.0001490970000000008, 0.00014912499999999995, 0.00014912499999999995, 0.00014912499999999995, 0.00014908300000000124, 0.0001490829999999943, 0.00014913899999999952]</msg>
<status status="PASS" starttime="20201029 12:43:30.095" endtime="20201029 12:43:30.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.091" endtime="20201029 12:43:30.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.735" endtime="20201029 12:43:30.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.711" endtime="20201029 12:43:30.099"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:30.101" endtime="20201029 12:43:30.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.099" endtime="20201029 12:43:30.121"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.129" endtime="20201029 12:43:30.146"></status>
</kw>
<msg timestamp="20201029 12:43:30.147" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.127" endtime="20201029 12:43:30.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.149" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.148" endtime="20201029 12:43:30.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.150" endtime="20201029 12:43:30.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.125" endtime="20201029 12:43:30.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.123" endtime="20201029 12:43:30.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.159" endtime="20201029 12:43:30.462"></status>
</kw>
<msg timestamp="20201029 12:43:30.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017807625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017976056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.158" endtime="20201029 12:43:30.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017807625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017976056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.471" endtime="20201029 12:43:30.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.489" endtime="20201029 12:43:30.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.155" endtime="20201029 12:43:30.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.154" endtime="20201029 12:43:30.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:30.497" level="INFO">${PHILIP_RES} = [{'diff': 0.00016843100000000014}, {'diff': 0.00016847199999999937}, {'diff': 0.00016848599999999894}, {'diff': 0.00016847199999999937}, {'diff': 0.00016848599999999894}, {'diff': 0.000168472000000002...</msg>
<status status="PASS" starttime="20201029 12:43:30.494" endtime="20201029 12:43:30.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:30.501" level="INFO">${RESULT} = {'diff': [0.00016843100000000014, 0.00016847199999999937, 0.00016848599999999894, 0.00016847199999999937, 0.00016848599999999894, 0.00016847200000000284, 0.0001685420000000007, 0.00016848599999999894,...</msg>
<status status="PASS" starttime="20201029 12:43:30.498" endtime="20201029 12:43:30.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.506" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:30.505" endtime="20201029 12:43:30.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.508" level="INFO">VALUE: [0.00016843100000000014, 0.00016847199999999937, 0.00016848599999999894, 0.00016847199999999937, 0.00016848599999999894, 0.00016847200000000284, 0.0001685420000000007, 0.00016848599999999894, 0.00016847199999999937, 0.0001684579999999998, 0.00016847199999999937, 0.0001684579999999998, 0.00016847199999999937, 0.00016847200000000284, 0.0001684579999999998, 0.00016847199999999937, 0.00016847199999999937, 0.00016851399999999808, 0.00016847199999999937, 0.00016845899999999928, 0.00016847199999999937, 0.00016848599999999894, 0.00016848599999999894, 0.0001684999999999985, 0.00016847199999999937, 0.00016854100000000122, 0.00016847199999999937, 0.0001684860000000024, 0.00016847200000000284, 0.00016847299999999885, 0.00016848599999999894, 0.00016847299999999885, 0.00016844400000000023, 0.00016844500000000318, 0.0001684579999999998, 0.00016850000000000198, 0.00016847199999999937, 0.0001684579999999998, 0.00016847199999999937, 0.00016847299999999885, 0.00016843100000000014, 0.00016847300000000232, 0.0001684579999999998, 0.00016847300000000232, 0.00016848599999999894, 0.00016848599999999894, 0.00016848599999999894, 0.00016841599999999762, 0.00016850000000000198, 0.00016847200000000284]</msg>
<status status="PASS" starttime="20201029 12:43:30.507" endtime="20201029 12:43:30.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.502" endtime="20201029 12:43:30.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.121" endtime="20201029 12:43:30.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.099" endtime="20201029 12:43:30.510"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:30.512" endtime="20201029 12:43:30.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.511" endtime="20201029 12:43:30.532"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.540" endtime="20201029 12:43:30.558"></status>
</kw>
<msg timestamp="20201029 12:43:30.559" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.539" endtime="20201029 12:43:30.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.561" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.560" endtime="20201029 12:43:30.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.562" endtime="20201029 12:43:30.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.536" endtime="20201029 12:43:30.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.534" endtime="20201029 12:43:30.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.572" endtime="20201029 12:43:30.858"></status>
</kw>
<msg timestamp="20201029 12:43:30.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017681792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017870681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.571" endtime="20201029 12:43:30.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017681792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017870681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.862" endtime="20201029 12:43:30.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.870" endtime="20201029 12:43:30.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.568" endtime="20201029 12:43:30.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.567" endtime="20201029 12:43:30.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:30.876" level="INFO">${PHILIP_RES} = [{'diff': 0.00018888899999999764}, {'diff': 0.00018891600000000078}, {'diff': 0.00018891700000000025}, {'diff': 0.00018891600000000078}, {'diff': 0.00018890300000000068}, {'diff': 0.000188903000000000...</msg>
<status status="PASS" starttime="20201029 12:43:30.873" endtime="20201029 12:43:30.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:30.880" level="INFO">${RESULT} = {'diff': [0.00018888899999999764, 0.00018891600000000078, 0.00018891700000000025, 0.00018891600000000078, 0.00018890300000000068, 0.00018890300000000068, 0.00018894399999999992, 0.00018890300000000068...</msg>
<status status="PASS" starttime="20201029 12:43:30.877" endtime="20201029 12:43:30.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.885" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:30.884" endtime="20201029 12:43:30.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.887" level="INFO">VALUE: [0.00018888899999999764, 0.00018891600000000078, 0.00018891700000000025, 0.00018891600000000078, 0.00018890300000000068, 0.00018890300000000068, 0.00018894399999999992, 0.00018890300000000068, 0.00018891700000000025, 0.0001889159999999973, 0.00020083400000000043, 0.00018891700000000025, 0.00018888899999999764, 0.00018891600000000078, 0.00018890300000000068, 0.00018898599999999863, 0.00018890199999999774, 0.00018893099999999982, 0.00018893000000000035, 0.00018893000000000035, 0.00018890300000000068, 0.00018891600000000078, 0.00018891700000000025, 0.00018893099999999982, 0.00018891600000000078, 0.00018893099999999982, 0.00018891700000000025, 0.00018884699999999893, 0.00018893099999999982, 0.00018893000000000035, 0.00018884699999999893, 0.00018891700000000025, 0.0001889579999999995, 0.00018891700000000025, 0.0001889449999999994, 0.00018891600000000078, 0.00018890300000000068, 0.00018891700000000025, 0.00018891600000000078, 0.00018893099999999982, 0.00018891700000000025, 0.0001888890000000011, 0.00018893099999999982, 0.0001888609999999985, 0.00018893099999999982, 0.00018893099999999982, 0.00018893000000000035, 0.00018890300000000068, 0.00018891700000000025, 0.00018891600000000078]</msg>
<status status="PASS" starttime="20201029 12:43:30.886" endtime="20201029 12:43:30.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.881" endtime="20201029 12:43:30.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.533" endtime="20201029 12:43:30.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.510" endtime="20201029 12:43:30.890"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:30.892" endtime="20201029 12:43:30.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.891" endtime="20201029 12:43:30.912"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.920" endtime="20201029 12:43:30.939"></status>
</kw>
<msg timestamp="20201029 12:43:30.940" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.918" endtime="20201029 12:43:30.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.942" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.941" endtime="20201029 12:43:30.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.943" endtime="20201029 12:43:30.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.916" endtime="20201029 12:43:30.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.914" endtime="20201029 12:43:30.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.952" endtime="20201029 12:43:31.240"></status>
</kw>
<msg timestamp="20201029 12:43:31.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017789542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017999931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.950" endtime="20201029 12:43:31.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017789542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017999931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.244" endtime="20201029 12:43:31.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.252" endtime="20201029 12:43:31.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.948" endtime="20201029 12:43:31.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.946" endtime="20201029 12:43:31.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:31.258" level="INFO">${PHILIP_RES} = [{'diff': 0.0002103890000000018}, {'diff': 0.00021049999999999888}, {'diff': 0.00021045900000000312}, {'diff': 0.0002104310000000005}, {'diff': 0.0002104440000000006}, {'diff': 0.0002104029999999979},...</msg>
<status status="PASS" starttime="20201029 12:43:31.255" endtime="20201029 12:43:31.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:31.263" level="INFO">${RESULT} = {'diff': [0.0002103890000000018, 0.00021049999999999888, 0.00021045900000000312, 0.0002104310000000005, 0.0002104440000000006, 0.0002104029999999979, 0.0002103609999999992, 0.0002104440000000006, 0.00...</msg>
<status status="PASS" starttime="20201029 12:43:31.259" endtime="20201029 12:43:31.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.268" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:31.266" endtime="20201029 12:43:31.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.270" level="INFO">VALUE: [0.0002103890000000018, 0.00021049999999999888, 0.00021045900000000312, 0.0002104310000000005, 0.0002104440000000006, 0.0002104029999999979, 0.0002103609999999992, 0.0002104440000000006, 0.00021045800000000017, 0.00021045800000000017, 0.00021044500000000008, 0.0002104310000000005, 0.0002104310000000005, 0.00021044500000000008, 0.00021037499999999876, 0.00021044399999999713, 0.0002104440000000006, 0.00021045800000000017, 0.00021045800000000017, 0.00021045899999999965, 0.00021044500000000008, 0.00021044500000000008, 0.00021045800000000017, 0.00021044399999999713, 0.0002104440000000006, 0.0002104440000000006, 0.00021045800000000017, 0.00021043099999999704, 0.0002104310000000005, 0.00021044500000000008, 0.00021044500000000008, 0.00021044399999999713, 0.00021042999999999756, 0.0002104859999999993, 0.00021043000000000103, 0.0002104440000000006, 0.00021041700000000094, 0.0002103890000000018, 0.00021044500000000008, 0.0002104310000000005, 0.00021041699999999747, 0.00021043000000000103, 0.00021041600000000146, 0.0002104440000000006, 0.00021042999999999756, 0.0002104310000000005, 0.0002104310000000005, 0.00021044500000000008, 0.00021044500000000008, 0.0002104310000000005]</msg>
<status status="PASS" starttime="20201029 12:43:31.269" endtime="20201029 12:43:31.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.264" endtime="20201029 12:43:31.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.913" endtime="20201029 12:43:31.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.890" endtime="20201029 12:43:31.272"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:31.274" endtime="20201029 12:43:31.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.273" endtime="20201029 12:43:31.294"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.302" endtime="20201029 12:43:31.323"></status>
</kw>
<msg timestamp="20201029 12:43:31.324" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.301" endtime="20201029 12:43:31.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.326" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.325" endtime="20201029 12:43:31.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.327" endtime="20201029 12:43:31.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.298" endtime="20201029 12:43:31.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.296" endtime="20201029 12:43:31.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.336" endtime="20201029 12:43:31.623"></status>
</kw>
<msg timestamp="20201029 12:43:31.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017596569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017829611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.335" endtime="20201029 12:43:31.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017596569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017829611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.627" endtime="20201029 12:43:31.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.635" endtime="20201029 12:43:31.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.332" endtime="20201029 12:43:31.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.330" endtime="20201029 12:43:31.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:31.641" level="INFO">${PHILIP_RES} = [{'diff': 0.00023304199999999928}, {'diff': 0.0002330690000000024}, {'diff': 0.00023306999999999842}, {'diff': 0.00023304199999999928}, {'diff': 0.00023305600000000232}, {'diff': 0.000233083999999998}...</msg>
<status status="PASS" starttime="20201029 12:43:31.638" endtime="20201029 12:43:31.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:31.645" level="INFO">${RESULT} = {'diff': [0.00023304199999999928, 0.0002330690000000024, 0.00023306999999999842, 0.00023304199999999928, 0.00023305600000000232, 0.000233083999999998, 0.00023304199999999928, 0.00023305600000000232, 0...</msg>
<status status="PASS" starttime="20201029 12:43:31.642" endtime="20201029 12:43:31.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.650" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:31.649" endtime="20201029 12:43:31.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.652" level="INFO">VALUE: [0.00023304199999999928, 0.0002330690000000024, 0.00023306999999999842, 0.00023304199999999928, 0.00023305600000000232, 0.000233083999999998, 0.00023304199999999928, 0.00023305600000000232, 0.00023304199999999928, 0.00023305499999999937, 0.00023305499999999937, 0.0002330409999999998, 0.00023305499999999937, 0.00023298599999999753, 0.00023305499999999937, 0.00023305599999999885, 0.0002330279999999997, 0.00023311099999999765, 0.000233083999999998, 0.00023304200000000275, 0.00023305599999999885, 0.00023304199999999928, 0.00023305499999999937, 0.00023305499999999937, 0.00023297200000000143, 0.00023305499999999937, 0.0002330409999999998, 0.00023305499999999937, 0.00023298599999999753, 0.00023305600000000232, 0.00023305599999999885, 0.00023304199999999928, 0.0002330279999999997, 0.00023305599999999885, 0.00023305599999999885, 0.00023304199999999928, 0.00023305499999999937, 0.00023305499999999937, 0.00023301400000000014, 0.00023305499999999937, 0.00023304199999999928, 0.00023305600000000232, 0.00023306999999999842, 0.00023305599999999885, 0.00023305600000000232, 0.00023304199999999928, 0.00023298599999999753, 0.0002331250000000007, 0.00023304199999999928, 0.0002330409999999998]</msg>
<status status="PASS" starttime="20201029 12:43:31.651" endtime="20201029 12:43:31.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.646" endtime="20201029 12:43:31.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.295" endtime="20201029 12:43:31.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.272" endtime="20201029 12:43:31.654"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:31.656" endtime="20201029 12:43:31.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.655" endtime="20201029 12:43:31.676"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.684" endtime="20201029 12:43:31.706"></status>
</kw>
<msg timestamp="20201029 12:43:31.706" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.683" endtime="20201029 12:43:31.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.709" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.707" endtime="20201029 12:43:31.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.710" endtime="20201029 12:43:31.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.680" endtime="20201029 12:43:31.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.678" endtime="20201029 12:43:31.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.722" endtime="20201029 12:43:32.007"></status>
</kw>
<msg timestamp="20201029 12:43:32.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017660042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017916764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.720" endtime="20201029 12:43:32.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017660042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017916764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.011" endtime="20201029 12:43:32.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.020" endtime="20201029 12:43:32.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.718" endtime="20201029 12:43:32.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.716" endtime="20201029 12:43:32.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:32.027" level="INFO">${PHILIP_RES} = [{'diff': 0.0002567220000000009}, {'diff': 0.0002567220000000009}, {'diff': 0.00025673600000000046}, {'diff': 0.00025673600000000046}, {'diff': 0.000256735999999997}, {'diff': 0.0002567779999999992}, ...</msg>
<status status="PASS" starttime="20201029 12:43:32.023" endtime="20201029 12:43:32.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:32.031" level="INFO">${RESULT} = {'diff': [0.0002567220000000009, 0.0002567220000000009, 0.00025673600000000046, 0.00025673600000000046, 0.000256735999999997, 0.0002567779999999992, 0.0002567220000000009, 0.00025675000000000003, 0.00...</msg>
<status status="PASS" starttime="20201029 12:43:32.028" endtime="20201029 12:43:32.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.036" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:32.035" endtime="20201029 12:43:32.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.038" level="INFO">VALUE: [0.0002567220000000009, 0.0002567220000000009, 0.00025673600000000046, 0.00025673600000000046, 0.000256735999999997, 0.0002567779999999992, 0.0002567220000000009, 0.00025675000000000003, 0.00025675000000000003, 0.00025673699999999994, 0.00025673699999999994, 0.00025672300000000037, 0.0002567220000000009, 0.00025673600000000046, 0.00025673600000000046, 0.0002567639999999996, 0.00025673600000000046, 0.00028180599999999903, 0.00025673600000000046, 0.00025673699999999994, 0.00025673600000000046, 0.00025675000000000003, 0.0002567220000000009, 0.00025675000000000003, 0.0002567920000000022, 0.00025675000000000003, 0.00025673600000000046, 0.00025673600000000046, 0.00025673600000000046, 0.00025673600000000046, 0.00025673600000000046, 0.0002568059999999983, 0.0002567639999999996, 0.00025673600000000046, 0.00025672300000000037, 0.00025668100000000166, 0.00025673600000000046, 0.0002567220000000009, 0.00025673600000000046, 0.00025673600000000046, 0.00025675000000000003, 0.0002567639999999996, 0.00025673600000000046, 0.00025673600000000046, 0.0002568059999999983, 0.00025673600000000046, 0.00025673600000000046, 0.00025673699999999994, 0.00025675000000000003, 0.00025673600000000046]</msg>
<status status="PASS" starttime="20201029 12:43:32.037" endtime="20201029 12:43:32.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.032" endtime="20201029 12:43:32.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.677" endtime="20201029 12:43:32.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.654" endtime="20201029 12:43:32.041"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:32.043" endtime="20201029 12:43:32.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.041" endtime="20201029 12:43:32.063"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.071" endtime="20201029 12:43:32.094"></status>
</kw>
<msg timestamp="20201029 12:43:32.094" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.069" endtime="20201029 12:43:32.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.097" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.095" endtime="20201029 12:43:32.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.098" endtime="20201029 12:43:32.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.067" endtime="20201029 12:43:32.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.065" endtime="20201029 12:43:32.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.107" endtime="20201029 12:43:32.393"></status>
</kw>
<msg timestamp="20201029 12:43:32.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017790778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018072278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.105" endtime="20201029 12:43:32.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017790778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018072278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.397" endtime="20201029 12:43:32.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.405" endtime="20201029 12:43:32.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.103" endtime="20201029 12:43:32.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.101" endtime="20201029 12:43:32.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:32.411" level="INFO">${PHILIP_RES} = [{'diff': 0.0002815000000000005}, {'diff': 0.00028155600000000225}, {'diff': 0.00028152799999999964}, {'diff': 0.0002815269999999967}, {'diff': 0.00028152799999999964}, {'diff': 0.0002815130000000006}...</msg>
<status status="PASS" starttime="20201029 12:43:32.408" endtime="20201029 12:43:32.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:32.416" level="INFO">${RESULT} = {'diff': [0.0002815000000000005, 0.00028155600000000225, 0.00028152799999999964, 0.0002815269999999967, 0.00028152799999999964, 0.0002815130000000006, 0.0002815000000000005, 0.00028151400000000007, 0....</msg>
<status status="PASS" starttime="20201029 12:43:32.412" endtime="20201029 12:43:32.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.420" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:32.419" endtime="20201029 12:43:32.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.423" level="INFO">VALUE: [0.0002815000000000005, 0.00028155600000000225, 0.00028152799999999964, 0.0002815269999999967, 0.00028152799999999964, 0.0002815130000000006, 0.0002815000000000005, 0.00028151400000000007, 0.00028151400000000007, 0.00028151400000000007, 0.00028151400000000007, 0.0002815419999999992, 0.00028148600000000093, 0.00028151400000000007, 0.00028149999999999703, 0.00028151400000000007, 0.0002815549999999993, 0.0002815000000000005, 0.00028152700000000017, 0.00028152799999999964, 0.00028151400000000007, 0.00028151400000000007, 0.0002815000000000005, 0.00028148600000000093, 0.0002815000000000005, 0.0002815000000000005, 0.00028151400000000007, 0.00028147200000000136, 0.0002815420000000027, 0.00028151400000000007, 0.00028151400000000007, 0.00028151400000000007, 0.00028148600000000093, 0.00028151400000000007, 0.00028148600000000093, 0.0002815280000000031, 0.00030222300000000077, 0.0002815000000000005, 0.00028152799999999964, 0.0002815000000000005, 0.00028152799999999964, 0.0002814870000000004, 0.00028147200000000136, 0.00028148599999999746, 0.00028149999999999703, 0.00028151400000000354, 0.00028149999999999703, 0.0002815139999999966, 0.0002815280000000031, 0.00028150000000000397]</msg>
<status status="PASS" starttime="20201029 12:43:32.421" endtime="20201029 12:43:32.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.417" endtime="20201029 12:43:32.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.064" endtime="20201029 12:43:32.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.041" endtime="20201029 12:43:32.425"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:32.427" endtime="20201029 12:43:32.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.425" endtime="20201029 12:43:32.447"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.455" endtime="20201029 12:43:32.480"></status>
</kw>
<msg timestamp="20201029 12:43:32.480" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.453" endtime="20201029 12:43:32.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.483" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.481" endtime="20201029 12:43:32.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.484" endtime="20201029 12:43:32.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.451" endtime="20201029 12:43:32.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.449" endtime="20201029 12:43:32.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.493" endtime="20201029 12:43:32.779"></status>
</kw>
<msg timestamp="20201029 12:43:32.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017561889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017869264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.491" endtime="20201029 12:43:32.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017561889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017869264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.783" endtime="20201029 12:43:32.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.791" endtime="20201029 12:43:32.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.489" endtime="20201029 12:43:32.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.487" endtime="20201029 12:43:32.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:32.798" level="INFO">${PHILIP_RES} = [{'diff': 0.0003073749999999986}, {'diff': 0.0003073750000000021}, {'diff': 0.00030736099999999905}, {'diff': 0.00030736099999999905}, {'diff': 0.0003073750000000021}, {'diff': 0.0003073610000000025},...</msg>
<status status="PASS" starttime="20201029 12:43:32.794" endtime="20201029 12:43:32.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:32.802" level="INFO">${RESULT} = {'diff': [0.0003073749999999986, 0.0003073750000000021, 0.00030736099999999905, 0.00030736099999999905, 0.0003073750000000021, 0.0003073610000000025, 0.0003073889999999982, 0.0003073619999999985, 0.00...</msg>
<status status="PASS" starttime="20201029 12:43:32.799" endtime="20201029 12:43:32.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.806" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:32.805" endtime="20201029 12:43:32.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.808" level="INFO">VALUE: [0.0003073749999999986, 0.0003073750000000021, 0.00030736099999999905, 0.00030736099999999905, 0.0003073750000000021, 0.0003073610000000025, 0.0003073889999999982, 0.0003073619999999985, 0.00030734700000000295, 0.00030736099999999905, 0.0003073749999999986, 0.0003073750000000021, 0.00030738900000000166, 0.0003073749999999986, 0.00030736099999999905, 0.00030740300000000123, 0.0003073749999999986, 0.0003073469999999995, 0.0003073750000000021, 0.0003073749999999986, 0.0003073469999999995, 0.000307362000000002, 0.0003073750000000021, 0.00030743100000000037, 0.0003074019999999983, 0.00030738900000000166, 0.0003073749999999986, 0.00030736099999999905, 0.0003073610000000025, 0.00030736099999999905, 0.0003073749999999986, 0.00030736099999999905, 0.0003073750000000021, 0.00030738900000000166, 0.00030740299999999776, 0.0003073750000000021, 0.00030736099999999905, 0.0003073889999999982, 0.0003073749999999986, 0.00030738900000000166, 0.00030737500000000556, 0.0003073480000000059, 0.0003073749999999986, 0.00030736099999999905, 0.0003073749999999986, 0.0003073749999999986, 0.00030736099999999905, 0.00030736200000000546, 0.00030736099999999905, 0.00030736099999999905]</msg>
<status status="PASS" starttime="20201029 12:43:32.807" endtime="20201029 12:43:32.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.803" endtime="20201029 12:43:32.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.447" endtime="20201029 12:43:32.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.425" endtime="20201029 12:43:32.810"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:32.813" endtime="20201029 12:43:32.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.811" endtime="20201029 12:43:32.833"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.841" endtime="20201029 12:43:32.867"></status>
</kw>
<msg timestamp="20201029 12:43:32.867" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.839" endtime="20201029 12:43:32.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.870" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.868" endtime="20201029 12:43:32.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.871" endtime="20201029 12:43:32.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.837" endtime="20201029 12:43:32.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.835" endtime="20201029 12:43:32.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.881" endtime="20201029 12:43:33.167"></status>
</kw>
<msg timestamp="20201029 12:43:33.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017814792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018149097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.880" endtime="20201029 12:43:33.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017814792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018149097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.171" endtime="20201029 12:43:33.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.179" endtime="20201029 12:43:33.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.877" endtime="20201029 12:43:33.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.875" endtime="20201029 12:43:33.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:33.186" level="INFO">${PHILIP_RES} = [{'diff': 0.000334305}, {'diff': 0.0003343059999999995}, {'diff': 0.00033427800000000035}, {'diff': 0.00033437499999999787}, {'diff': 0.00033434699999999873}, {'diff': 0.0003343059999999995}, {'diff':...</msg>
<status status="PASS" starttime="20201029 12:43:33.182" endtime="20201029 12:43:33.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:33.190" level="INFO">${RESULT} = {'diff': [0.000334305, 0.0003343059999999995, 0.00033427800000000035, 0.00033437499999999787, 0.00033434699999999873, 0.0003343059999999995, 0.00033429100000000045, 0.0003343059999999995, 0.0003342770...</msg>
<status status="PASS" starttime="20201029 12:43:33.187" endtime="20201029 12:43:33.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.194" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:33.193" endtime="20201029 12:43:33.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.196" level="INFO">VALUE: [0.000334305, 0.0003343059999999995, 0.00033427800000000035, 0.00033437499999999787, 0.00033434699999999873, 0.0003343059999999995, 0.00033429100000000045, 0.0003343059999999995, 0.0003342770000000009, 0.00033431999999999906, 0.00033429100000000045, 0.00033424999999999774, 0.000334305, 0.0003342919999999999, 0.00033427800000000035, 0.0003343059999999995, 0.000334305, 0.0003343609999999983, 0.000334305, 0.00033433399999999863, 0.0003342639999999973, 0.00033432000000000253, 0.00033429100000000045, 0.00033433299999999916, 0.0003343189999999996, 0.0003343059999999995, 0.0003343189999999996, 0.0003343059999999995, 0.0003342919999999999, 0.0003342919999999999, 0.0003342219999999986, 0.00033433299999999916, 0.0003343059999999995, 0.0003343059999999995, 0.00033430600000000296, 0.0003342919999999999, 0.0003343059999999995, 0.000334305, 0.0003343059999999995, 0.0003343189999999996, 0.0003342919999999999, 0.0003343189999999996, 0.00033431999999999906, 0.00033437499999999787, 0.0003343059999999995, 0.0003343189999999996, 0.0003342919999999999, 0.00033429100000000045, 0.00033431999999999906, 0.000334305]</msg>
<status status="PASS" starttime="20201029 12:43:33.195" endtime="20201029 12:43:33.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.190" endtime="20201029 12:43:33.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.833" endtime="20201029 12:43:33.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.811" endtime="20201029 12:43:33.199"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:33.201" endtime="20201029 12:43:33.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.200" endtime="20201029 12:43:33.221"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.230" endtime="20201029 12:43:33.258"></status>
</kw>
<msg timestamp="20201029 12:43:33.258" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.228" endtime="20201029 12:43:33.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.261" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.259" endtime="20201029 12:43:33.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.262" endtime="20201029 12:43:33.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.225" endtime="20201029 12:43:33.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.223" endtime="20201029 12:43:33.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.271" endtime="20201029 12:43:33.572"></status>
</kw>
<msg timestamp="20201029 12:43:33.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018086028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018461222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.269" endtime="20201029 12:43:33.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018086028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018461222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.576" endtime="20201029 12:43:33.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.584" endtime="20201029 12:43:33.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.267" endtime="20201029 12:43:33.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.265" endtime="20201029 12:43:33.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:33.591" level="INFO">${PHILIP_RES} = [{'diff': 0.00037519399999999883}, {'diff': 0.0003623339999999989}, {'diff': 0.0003623339999999989}, {'diff': 0.0003623339999999989}, {'diff': 0.0003623199999999993}, {'diff': 0.0003623339999999989}, ...</msg>
<status status="PASS" starttime="20201029 12:43:33.588" endtime="20201029 12:43:33.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:33.596" level="INFO">${RESULT} = {'diff': [0.00037519399999999883, 0.0003623339999999989, 0.0003623339999999989, 0.0003623339999999989, 0.0003623199999999993, 0.0003623339999999989, 0.000362346999999999, 0.000362346999999999, 0.00036...</msg>
<status status="PASS" starttime="20201029 12:43:33.592" endtime="20201029 12:43:33.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.600" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:33.599" endtime="20201029 12:43:33.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.603" level="INFO">VALUE: [0.00037519399999999883, 0.0003623339999999989, 0.0003623339999999989, 0.0003623339999999989, 0.0003623199999999993, 0.0003623339999999989, 0.000362346999999999, 0.000362346999999999, 0.00036231899999999984, 0.00036231899999999984, 0.0003623329999999994, 0.0003623330000000029, 0.00036234700000000244, 0.000362346999999999, 0.000362346999999999, 0.000362346999999999, 0.0003623329999999994, 0.000362346999999999, 0.00036231899999999984, 0.0003622780000000006, 0.000362346999999999, 0.00036229200000000017, 0.0003623329999999994, 0.00036234700000000244, 0.00036230599999999974, 0.00036233400000000235, 0.0003623480000000019, 0.00036238900000000115, 0.0003623199999999993, 0.00036234799999999845, 0.0003623339999999989, 0.00036226400000000103, 0.0003624169999999968, 0.0003623749999999981, 0.0003623329999999994, 0.0003623329999999994, 0.0003623329999999994, 0.0003623329999999994, 0.00036230500000000027, 0.0003623329999999994, 0.000362346999999999, 0.0003623329999999994, 0.00036231899999999984, 0.0003623329999999994, 0.0003623190000000068, 0.000362346999999999, 0.000362346999999999, 0.0003623199999999993, 0.00036230599999999974, 0.0003623199999999993]</msg>
<status status="PASS" starttime="20201029 12:43:33.601" endtime="20201029 12:43:33.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.597" endtime="20201029 12:43:33.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.222" endtime="20201029 12:43:33.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.199" endtime="20201029 12:43:33.604"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:33.607" endtime="20201029 12:43:33.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.605" endtime="20201029 12:43:33.627"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.635" endtime="20201029 12:43:33.665"></status>
</kw>
<msg timestamp="20201029 12:43:33.665" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.634" endtime="20201029 12:43:33.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.668" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.667" endtime="20201029 12:43:33.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.669" endtime="20201029 12:43:33.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.631" endtime="20201029 12:43:33.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.629" endtime="20201029 12:43:33.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.678" endtime="20201029 12:43:33.965"></status>
</kw>
<msg timestamp="20201029 12:43:33.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018126111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018517528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.677" endtime="20201029 12:43:33.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018126111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018517528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.969" endtime="20201029 12:43:33.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.978" endtime="20201029 12:43:33.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.674" endtime="20201029 12:43:33.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.672" endtime="20201029 12:43:33.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:33.984" level="INFO">${PHILIP_RES} = [{'diff': 0.00039141699999999807}, {'diff': 0.00039143000000000164}, {'diff': 0.0003914159999999986}, {'diff': 0.0003914869999999994}, {'diff': 0.00039141700000000154}, {'diff': 0.0003914580000000008}...</msg>
<status status="PASS" starttime="20201029 12:43:33.981" endtime="20201029 12:43:33.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:33.988" level="INFO">${RESULT} = {'diff': [0.00039141699999999807, 0.00039143000000000164, 0.0003914159999999986, 0.0003914869999999994, 0.00039141700000000154, 0.0003914580000000008, 0.00039142999999999817, 0.0003914580000000008, 0....</msg>
<status status="PASS" starttime="20201029 12:43:33.985" endtime="20201029 12:43:33.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.993" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:33.992" endtime="20201029 12:43:33.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.995" level="INFO">VALUE: [0.00039141699999999807, 0.00039143000000000164, 0.0003914159999999986, 0.0003914869999999994, 0.00039141700000000154, 0.0003914580000000008, 0.00039142999999999817, 0.0003914580000000008, 0.0003914450000000007, 0.0003914310000000011, 0.0003914440000000012, 0.00039147200000000035, 0.0003914729999999998, 0.0003914449999999972, 0.00039143000000000164, 0.0003914440000000012, 0.0003914450000000007, 0.00039143099999999764, 0.0003913609999999998, 0.0003913609999999998, 0.00039144399999999774, 0.0003914310000000011, 0.0003914450000000007, 0.00039144399999999774, 0.00039140300000000197, 0.00039145900000000025, 0.0003914859999999999, 0.00039142999999999817, 0.0003914440000000012, 0.0003914729999999998, 0.0003914450000000007, 0.00039142999999999817, 0.00039142999999999817, 0.0003914310000000046, 0.0003914449999999972, 0.00039143099999999764, 0.0003914300000000051, 0.00039141699999999807, 0.00039144500000000415, 0.00039144500000000415, 0.00039144399999999774, 0.00039144399999999774, 0.0003914029999999985, 0.00039143099999999764, 0.00039141600000000554, 0.00039142999999999817, 0.000391499999999996, 0.00040512499999999924, 0.00039141699999999807, 0.00039144500000000415]</msg>
<status status="PASS" starttime="20201029 12:43:33.994" endtime="20201029 12:43:33.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.989" endtime="20201029 12:43:33.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.627" endtime="20201029 12:43:33.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.605" endtime="20201029 12:43:33.997"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:34.000" endtime="20201029 12:43:34.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.998" endtime="20201029 12:43:34.020"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.028" endtime="20201029 12:43:34.059"></status>
</kw>
<msg timestamp="20201029 12:43:34.059" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.026" endtime="20201029 12:43:34.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.062" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.060" endtime="20201029 12:43:34.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.063" endtime="20201029 12:43:34.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.024" endtime="20201029 12:43:34.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.022" endtime="20201029 12:43:34.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.074" endtime="20201029 12:43:34.359"></status>
</kw>
<msg timestamp="20201029 12:43:34.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017800389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:34.072" endtime="20201029 12:43:34.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017800389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:34.363" endtime="20201029 12:43:34.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.371" endtime="20201029 12:43:34.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.069" endtime="20201029 12:43:34.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.068" endtime="20201029 12:43:34.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:34.378" level="INFO">${PHILIP_RES} = [{'diff': 0.0004216109999999988}, {'diff': 0.0004215699999999996}, {'diff': 0.0004216799999999972}, {'diff': 0.00042162500000000186}, {'diff': 0.00042163900000000143}, {'diff': 0.0004215980000000022},...</msg>
<status status="PASS" starttime="20201029 12:43:34.374" endtime="20201029 12:43:34.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:34.382" level="INFO">${RESULT} = {'diff': [0.0004216109999999988, 0.0004215699999999996, 0.0004216799999999972, 0.00042162500000000186, 0.00042163900000000143, 0.0004215980000000022, 0.0004216249999999984, 0.0004216249999999984, 0.00...</msg>
<status status="PASS" starttime="20201029 12:43:34.379" endtime="20201029 12:43:34.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.386" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:34.385" endtime="20201029 12:43:34.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.388" level="INFO">VALUE: [0.0004216109999999988, 0.0004215699999999996, 0.0004216799999999972, 0.00042162500000000186, 0.00042163900000000143, 0.0004215980000000022, 0.0004216249999999984, 0.0004216249999999984, 0.00042166700000000057, 0.00042163899999999796, 0.0004216950000000032, 0.0004216109999999988, 0.000421653000000001, 0.00042163900000000143, 0.00042163900000000143, 0.00042159699999999925, 0.0004216119999999983, 0.0004216109999999988, 0.00042163900000000143, 0.0004215829999999997, 0.0004215690000000001, 0.0004215970000000027, 0.000421653000000001, 0.00042163899999999796, 0.00042165299999999753, 0.0004216249999999984, 0.00042162500000000186, 0.0004216110000000023, 0.00042166700000000057, 0.00042163900000000143, 0.0004216949999999997, 0.00042163900000000143, 0.00042157000000000305, 0.000421653000000001, 0.0004216249999999949, 0.0004216249999999949, 0.0004216249999999949, 0.000421653000000001, 0.00042163900000000143, 0.0004216110000000023, 0.00042163900000000143, 0.00042163900000000143, 0.00042163900000000143, 0.0004216110000000023, 0.0004215970000000027, 0.0004458190000000001, 0.00042162500000000186, 0.0004215970000000027, 0.00042163900000000143, 0.00042157000000000305]</msg>
<status status="PASS" starttime="20201029 12:43:34.387" endtime="20201029 12:43:34.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.383" endtime="20201029 12:43:34.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.020" endtime="20201029 12:43:34.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.997" endtime="20201029 12:43:34.397"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:34.399" endtime="20201029 12:43:34.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.397" endtime="20201029 12:43:34.419"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.427" endtime="20201029 12:43:34.459"></status>
</kw>
<msg timestamp="20201029 12:43:34.460" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.426" endtime="20201029 12:43:34.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.462" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.461" endtime="20201029 12:43:34.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.464" endtime="20201029 12:43:34.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.423" endtime="20201029 12:43:34.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.421" endtime="20201029 12:43:34.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.473" endtime="20201029 12:43:34.760"></status>
</kw>
<msg timestamp="20201029 12:43:34.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017756236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018209125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.471" endtime="20201029 12:43:34.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017756236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018209125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.764" endtime="20201029 12:43:34.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.771" endtime="20201029 12:43:34.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.469" endtime="20201029 12:43:34.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.467" endtime="20201029 12:43:34.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:34.778" level="INFO">${PHILIP_RES} = [{'diff': 0.000452888999999998}, {'diff': 0.00045290200000000155}, {'diff': 0.0004528750000000019}, {'diff': 0.000452888999999998}, {'diff': 0.00045290299999999756}, {'diff': 0.000452903000000001}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:34.775" endtime="20201029 12:43:34.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:34.783" level="INFO">${RESULT} = {'diff': [0.000452888999999998, 0.00045290200000000155, 0.0004528750000000019, 0.000452888999999998, 0.00045290299999999756, 0.000452903000000001, 0.0004529170000000006, 0.0004529170000000006, 0.00045...</msg>
<status status="PASS" starttime="20201029 12:43:34.779" endtime="20201029 12:43:34.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.788" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:34.786" endtime="20201029 12:43:34.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.790" level="INFO">VALUE: [0.000452888999999998, 0.00045290200000000155, 0.0004528750000000019, 0.000452888999999998, 0.00045290299999999756, 0.000452903000000001, 0.0004529170000000006, 0.0004529170000000006, 0.00045290299999999756, 0.0004529439999999968, 0.000452903000000001, 0.000452903000000001, 0.0004529160000000011, 0.000452903000000001, 0.0004528749999999984, 0.0004529160000000011, 0.00045288900000000146, 0.00045288900000000146, 0.00045291699999999713, 0.000452903000000001, 0.000452888000000002, 0.000452903000000001, 0.00045294499999999974, 0.00045291599999999765, 0.00045293100000000017, 0.00045290200000000155, 0.00045291699999999713, 0.0004528749999999984, 0.0004529019999999981, 0.00045293000000000416, 0.00047970899999999483, 0.0004529450000000032, 0.0004529019999999981, 0.0004528340000000061, 0.000452888999999998, 0.0004529299999999972, 0.0004529450000000032, 0.000452888999999998, 0.00045291700000000407, 0.00045291699999999713, 0.0004529019999999981, 0.00045294400000000373, 0.000452888999999998, 0.0004529160000000046, 0.00045291699999999713, 0.00045290299999999756, 0.0004529030000000045, 0.00045290299999999756, 0.0004528749999999984, 0.00045291699999999713]</msg>
<status status="PASS" starttime="20201029 12:43:34.789" endtime="20201029 12:43:34.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.784" endtime="20201029 12:43:34.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.419" endtime="20201029 12:43:34.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.397" endtime="20201029 12:43:34.792"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:34.794" endtime="20201029 12:43:34.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.793" endtime="20201029 12:43:34.814"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.822" endtime="20201029 12:43:34.856"></status>
</kw>
<msg timestamp="20201029 12:43:34.857" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.821" endtime="20201029 12:43:34.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.859" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.858" endtime="20201029 12:43:34.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.860" endtime="20201029 12:43:34.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.818" endtime="20201029 12:43:34.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.816" endtime="20201029 12:43:34.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.870" endtime="20201029 12:43:35.157"></status>
</kw>
<msg timestamp="20201029 12:43:35.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017653403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018138639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.868" endtime="20201029 12:43:35.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017653403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018138639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.161" endtime="20201029 12:43:35.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.169" endtime="20201029 12:43:35.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.866" endtime="20201029 12:43:35.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.864" endtime="20201029 12:43:35.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:35.176" level="INFO">${PHILIP_RES} = [{'diff': 0.000485236}, {'diff': 0.0004852640000000026}, {'diff': 0.0004852640000000026}, {'diff': 0.0004851800000000017}, {'diff': 0.0004852369999999995}, {'diff': 0.00048526399999999914}, {'diff': 0...</msg>
<status status="PASS" starttime="20201029 12:43:35.173" endtime="20201029 12:43:35.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:35.180" level="INFO">${RESULT} = {'diff': [0.000485236, 0.0004852640000000026, 0.0004852640000000026, 0.0004851800000000017, 0.0004852369999999995, 0.00048526399999999914, 0.00048526399999999914, 0.00048522200000000043, 0.00048526399...</msg>
<status status="PASS" starttime="20201029 12:43:35.177" endtime="20201029 12:43:35.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.184" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:35.183" endtime="20201029 12:43:35.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.187" level="INFO">VALUE: [0.000485236, 0.0004852640000000026, 0.0004852640000000026, 0.0004851800000000017, 0.0004852369999999995, 0.00048526399999999914, 0.00048526399999999914, 0.00048522200000000043, 0.00048526399999999914, 0.00048533400000000046, 0.00048524999999999957, 0.00048526399999999914, 0.00048524999999999957, 0.0004852640000000026, 0.0004852640000000026, 0.00048524999999999957, 0.00048526399999999914, 0.0004852779999999987, 0.00048526399999999914, 0.00048524999999999957, 0.0004853200000000009, 0.00048526399999999914, 0.00048524999999999957, 0.0004852779999999987, 0.00048526399999999914, 0.0004852640000000026, 0.00048527699999999924, 0.00048526399999999914, 0.00048526399999999914, 0.00048526399999999914, 0.00048526399999999914, 0.00048526399999999914, 0.00048524999999999957, 0.00048524999999999957, 0.00048526399999999914, 0.00048526399999999914, 0.00048526399999999914, 0.00048526299999999967, 0.00048526299999999967, 0.0004852779999999987, 0.00048526399999999914, 0.00048530599999999785, 0.00048524999999999957, 0.00048526299999999967, 0.0004852229999999999, 0.0004853050000000053, 0.00048519399999999435, 0.0004852500000000065, 0.0004852640000000061, 0.00048520900000000033]</msg>
<status status="PASS" starttime="20201029 12:43:35.185" endtime="20201029 12:43:35.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.181" endtime="20201029 12:43:35.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.815" endtime="20201029 12:43:35.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.792" endtime="20201029 12:43:35.189"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:35.191" endtime="20201029 12:43:35.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.190" endtime="20201029 12:43:35.211"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.219" endtime="20201029 12:43:35.256"></status>
</kw>
<msg timestamp="20201029 12:43:35.256" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.218" endtime="20201029 12:43:35.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.259" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.257" endtime="20201029 12:43:35.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.260" endtime="20201029 12:43:35.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.215" endtime="20201029 12:43:35.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.213" endtime="20201029 12:43:35.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.272" endtime="20201029 12:43:35.564"></status>
</kw>
<msg timestamp="20201029 12:43:35.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018018208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018536972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.271" endtime="20201029 12:43:35.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018018208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018536972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.573" endtime="20201029 12:43:35.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.591" endtime="20201029 12:43:35.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.268" endtime="20201029 12:43:35.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.266" endtime="20201029 12:43:35.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:35.605" level="INFO">${PHILIP_RES} = [{'diff': 0.000518763999999998}, {'diff': 0.0005187359999999988}, {'diff': 0.0005187079999999997}, {'diff': 0.000518763999999998}, {'diff': 0.0005187080000000031}, {'diff': 0.0005186940000000001}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:35.599" endtime="20201029 12:43:35.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:35.614" level="INFO">${RESULT} = {'diff': [0.000518763999999998, 0.0005187359999999988, 0.0005187079999999997, 0.000518763999999998, 0.0005187080000000031, 0.0005186940000000001, 0.0005187089999999991, 0.0005187219999999992, 0.000518...</msg>
<status status="PASS" starttime="20201029 12:43:35.607" endtime="20201029 12:43:35.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.623" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:35.621" endtime="20201029 12:43:35.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.628" level="INFO">VALUE: [0.000518763999999998, 0.0005187359999999988, 0.0005187079999999997, 0.000518763999999998, 0.0005187080000000031, 0.0005186940000000001, 0.0005187089999999991, 0.0005187219999999992, 0.0005186389999999978, 0.0005187219999999992, 0.0005187910000000011, 0.0005187079999999997, 0.0005187089999999991, 0.0005186949999999996, 0.0005187219999999992, 0.0005187220000000027, 0.0005446529999999991, 0.0005187219999999992, 0.0005187229999999987, 0.0005187079999999997, 0.0005187219999999992, 0.0005186949999999996, 0.000518666999999997, 0.0005187080000000031, 0.0005187090000000061, 0.0005187360000000057, 0.0005186940000000001, 0.000518681, 0.0005187079999999997, 0.0005187079999999997, 0.0005187219999999992, 0.0005186949999999996, 0.000518681, 0.0005187079999999997, 0.0005187089999999991, 0.0005186940000000001, 0.0005186940000000001, 0.000518681, 0.0005186940000000001, 0.0005186530000000009, 0.0005186949999999996, 0.0005187359999999988, 0.0005187079999999997, 0.0005186949999999996, 0.0005186949999999996, 0.0005187079999999997, 0.0005187359999999988, 0.000518681, 0.0005186940000000001, 0.0005187219999999992]</msg>
<status status="PASS" starttime="20201029 12:43:35.625" endtime="20201029 12:43:35.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.616" endtime="20201029 12:43:35.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.212" endtime="20201029 12:43:35.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.189" endtime="20201029 12:43:35.634"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:35.636" endtime="20201029 12:43:35.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.635" endtime="20201029 12:43:35.656"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.664" endtime="20201029 12:43:35.702"></status>
</kw>
<msg timestamp="20201029 12:43:35.702" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.663" endtime="20201029 12:43:35.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.705" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.703" endtime="20201029 12:43:35.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.706" endtime="20201029 12:43:35.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.660" endtime="20201029 12:43:35.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.658" endtime="20201029 12:43:35.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.715" endtime="20201029 12:43:36.001"></status>
</kw>
<msg timestamp="20201029 12:43:36.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017697931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018251153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.713" endtime="20201029 12:43:36.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017697931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018251153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.006" endtime="20201029 12:43:36.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.014" endtime="20201029 12:43:36.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.711" endtime="20201029 12:43:36.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.709" endtime="20201029 12:43:36.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:36.020" level="INFO">${PHILIP_RES} = [{'diff': 0.000553221999999999}, {'diff': 0.000553223000000002}, {'diff': 0.0005532640000000012}, {'diff': 0.000553221999999999}, {'diff': 0.0005532079999999995}, {'diff': 0.0005532090000000024}, {'di...</msg>
<status status="PASS" starttime="20201029 12:43:36.017" endtime="20201029 12:43:36.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:36.025" level="INFO">${RESULT} = {'diff': [0.000553221999999999, 0.000553223000000002, 0.0005532640000000012, 0.000553221999999999, 0.0005532079999999995, 0.0005532090000000024, 0.0005532499999999982, 0.000553221999999999, 0.00055325...</msg>
<status status="PASS" starttime="20201029 12:43:36.021" endtime="20201029 12:43:36.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.029" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:36.028" endtime="20201029 12:43:36.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.032" level="INFO">VALUE: [0.000553221999999999, 0.000553223000000002, 0.0005532640000000012, 0.000553221999999999, 0.0005532079999999995, 0.0005532090000000024, 0.0005532499999999982, 0.000553221999999999, 0.0005532500000000017, 0.0005532220000000025, 0.0005532369999999981, 0.0005532360000000021, 0.0005532500000000017, 0.0005532359999999986, 0.0005532499999999982, 0.0005532360000000021, 0.000553221999999999, 0.0005532359999999986, 0.000553221999999999, 0.000553223000000002, 0.0005532359999999986, 0.0005532359999999986, 0.0005532220000000025, 0.0005532229999999985, 0.000553222000000006, 0.0005531939999999999, 0.0005532079999999995, 0.0005532629999999983, 0.0005532229999999985, 0.000553221999999999, 0.0005532500000000051, 0.0005531949999999994, 0.0005532229999999985, 0.0005532359999999986, 0.000553304999999997, 0.000553221999999999, 0.0005532499999999982, 0.0005532780000000043, 0.0005783060000000007, 0.0005532499999999982, 0.0005532359999999986, 0.0005532499999999982, 0.0005532360000000056, 0.0005532640000000047, 0.0005532359999999986, 0.0005532359999999986, 0.0005532909999999974, 0.0005532229999999985, 0.0005532780000000043, 0.000553222000000006]</msg>
<status status="PASS" starttime="20201029 12:43:36.030" endtime="20201029 12:43:36.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.026" endtime="20201029 12:43:36.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.657" endtime="20201029 12:43:36.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.634" endtime="20201029 12:43:36.034"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:36.036" endtime="20201029 12:43:36.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.035" endtime="20201029 12:43:36.056"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.064" endtime="20201029 12:43:36.104"></status>
</kw>
<msg timestamp="20201029 12:43:36.105" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.063" endtime="20201029 12:43:36.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.107" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.106" endtime="20201029 12:43:36.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.109" endtime="20201029 12:43:36.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.060" endtime="20201029 12:43:36.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.058" endtime="20201029 12:43:36.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.118" endtime="20201029 12:43:36.418"></status>
</kw>
<msg timestamp="20201029 12:43:36.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017697972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018286778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.116" endtime="20201029 12:43:36.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017697972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018286778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.428" endtime="20201029 12:43:36.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.445" endtime="20201029 12:43:36.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.114" endtime="20201029 12:43:36.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.112" endtime="20201029 12:43:36.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:36.451" level="INFO">${PHILIP_RES} = [{'diff': 0.0005888060000000007}, {'diff': 0.0005888609999999996}, {'diff': 0.0005888200000000003}, {'diff': 0.0005888190000000008}, {'diff': 0.000588847}, {'diff': 0.0005888479999999995}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 12:43:36.448" endtime="20201029 12:43:36.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:36.455" level="INFO">${RESULT} = {'diff': [0.0005888060000000007, 0.0005888609999999996, 0.0005888200000000003, 0.0005888190000000008, 0.000588847, 0.0005888479999999995, 0.0005888330000000004, 0.0005888200000000003, 0.00058883300000...</msg>
<status status="PASS" starttime="20201029 12:43:36.452" endtime="20201029 12:43:36.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.460" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:36.459" endtime="20201029 12:43:36.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.462" level="INFO">VALUE: [0.0005888060000000007, 0.0005888609999999996, 0.0005888200000000003, 0.0005888190000000008, 0.000588847, 0.0005888479999999995, 0.0005888330000000004, 0.0005888200000000003, 0.0005888330000000004, 0.000588847, 0.0005888749999999991, 0.0005888609999999996, 0.0005888609999999996, 0.0005887920000000012, 0.0005888339999999999, 0.000588847, 0.0005888330000000004, 0.000588847, 0.0005888190000000008, 0.0005888749999999991, 0.0005888190000000008, 0.0005888199999999968, 0.0005888329999999969, 0.0005888469999999965, 0.0005888469999999965, 0.0005888189999999974, 0.0005888470000000035, 0.0005888200000000038, 0.0005888470000000035, 0.0005888470000000035, 0.0005888330000000039, 0.0005888470000000035, 0.0005888340000000034, 0.0005888330000000039, 0.000588861000000003, 0.0005888329999999969, 0.000588749999999999, 0.0005888329999999969, 0.0005888329999999969, 0.0005888199999999968, 0.0005888329999999969, 0.0005888199999999968, 0.0005888889999999952, 0.000588847999999996, 0.0005888469999999965, 0.0005888879999999957, 0.0005888339999999964, 0.0005889030000000017, 0.0005889030000000017, 0.0005888329999999969]</msg>
<status status="PASS" starttime="20201029 12:43:36.461" endtime="20201029 12:43:36.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.456" endtime="20201029 12:43:36.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.057" endtime="20201029 12:43:36.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.034" endtime="20201029 12:43:36.464"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:36.467" endtime="20201029 12:43:36.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.465" endtime="20201029 12:43:36.487"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.495" endtime="20201029 12:43:36.537"></status>
</kw>
<msg timestamp="20201029 12:43:36.537" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.493" endtime="20201029 12:43:36.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.542" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.538" endtime="20201029 12:43:36.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.543" endtime="20201029 12:43:36.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.491" endtime="20201029 12:43:36.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.489" endtime="20201029 12:43:36.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.559" endtime="20201029 12:43:36.847"></status>
</kw>
<msg timestamp="20201029 12:43:36.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018129542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018755028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.552" endtime="20201029 12:43:36.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018129542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018755028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.851" endtime="20201029 12:43:36.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.860" endtime="20201029 12:43:36.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.549" endtime="20201029 12:43:36.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.547" endtime="20201029 12:43:36.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:36.867" level="INFO">${PHILIP_RES} = [{'diff': 0.0006254860000000015}, {'diff': 0.0006255270000000007}, {'diff': 0.0006255139999999972}, {'diff': 0.0006255280000000002}, {'diff': 0.0006255280000000002}, {'diff': 0.0006255140000000006}, {...</msg>
<status status="PASS" starttime="20201029 12:43:36.863" endtime="20201029 12:43:36.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:36.871" level="INFO">${RESULT} = {'diff': [0.0006254860000000015, 0.0006255270000000007, 0.0006255139999999972, 0.0006255280000000002, 0.0006255280000000002, 0.0006255140000000006, 0.0006255839999999985, 0.0006255280000000002, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:43:36.868" endtime="20201029 12:43:36.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.875" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:36.874" endtime="20201029 12:43:36.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.878" level="INFO">VALUE: [0.0006254860000000015, 0.0006255270000000007, 0.0006255139999999972, 0.0006255280000000002, 0.0006255280000000002, 0.0006255140000000006, 0.0006255839999999985, 0.0006255280000000002, 0.0006255140000000006, 0.0006255280000000002, 0.0006255419999999998, 0.0006255409999999968, 0.0006255280000000002, 0.0006255000000000011, 0.000625582999999999, 0.0006255269999999973, 0.0006255280000000002, 0.000652347000000001, 0.0006255280000000002, 0.0006255000000000011, 0.0006255270000000007, 0.0006255140000000006, 0.0006255280000000002, 0.0006254720000000019, 0.0006255279999999933, 0.0006255140000000006, 0.0006255410000000003, 0.0006255419999999998, 0.0006254450000000022, 0.0006255419999999998, 0.0006255410000000003, 0.0006254579999999954, 0.0006255140000000006, 0.0006255270000000007, 0.0006255280000000002, 0.0006255280000000002, 0.0006255140000000006, 0.0006255699999999989, 0.0006255280000000002, 0.0006255419999999998, 0.0006255549999999999, 0.0006255419999999998, 0.0006255140000000006, 0.0006255549999999999, 0.0006255280000000002, 0.0006255280000000002, 0.0006255410000000003, 0.0006255689999999994, 0.0006255280000000002, 0.0006255000000000011]</msg>
<status status="PASS" starttime="20201029 12:43:36.877" endtime="20201029 12:43:36.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.872" endtime="20201029 12:43:36.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.487" endtime="20201029 12:43:36.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.465" endtime="20201029 12:43:36.881"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:36.883" endtime="20201029 12:43:36.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.882" endtime="20201029 12:43:36.903"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.912" endtime="20201029 12:43:36.956"></status>
</kw>
<msg timestamp="20201029 12:43:36.957" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.910" endtime="20201029 12:43:36.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.959" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.958" endtime="20201029 12:43:36.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.960" endtime="20201029 12:43:36.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.907" endtime="20201029 12:43:36.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.905" endtime="20201029 12:43:36.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.970" endtime="20201029 12:43:37.275"></status>
</kw>
<msg timestamp="20201029 12:43:37.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018219236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018882528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.968" endtime="20201029 12:43:37.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018219236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018882528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.279" endtime="20201029 12:43:37.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.287" endtime="20201029 12:43:37.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.965" endtime="20201029 12:43:37.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.964" endtime="20201029 12:43:37.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:37.293" level="INFO">${PHILIP_RES} = [{'diff': 0.0006632919999999994}, {'diff': 0.0006633059999999989}, {'diff': 0.0006632779999999998}, {'diff': 0.0006633330000000021}, {'diff': 0.0006633049999999995}, {'diff': 0.0006633059999999989}, {...</msg>
<status status="PASS" starttime="20201029 12:43:37.290" endtime="20201029 12:43:37.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:37.298" level="INFO">${RESULT} = {'diff': [0.0006632919999999994, 0.0006633059999999989, 0.0006632779999999998, 0.0006633330000000021, 0.0006633049999999995, 0.0006633059999999989, 0.0006633059999999989, 0.0006633199999999985, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:43:37.294" endtime="20201029 12:43:37.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.303" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:37.302" endtime="20201029 12:43:37.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.305" level="INFO">VALUE: [0.0006632919999999994, 0.0006633059999999989, 0.0006632779999999998, 0.0006633330000000021, 0.0006633049999999995, 0.0006633059999999989, 0.0006633059999999989, 0.0006633199999999985, 0.0006633049999999995, 0.0006633049999999995, 0.000663318999999999, 0.0006633199999999985, 0.0006632360000000011, 0.0006632919999999994, 0.0006633190000000025, 0.0006632909999999999, 0.0006633049999999995, 0.0006633059999999989, 0.000663320000000002, 0.0006633610000000012, 0.0006633190000000025, 0.0006633050000000029, 0.0006632500000000041, 0.0006633060000000024, 0.0006632919999999959, 0.0006633059999999955, 0.0006632919999999959, 0.0006632499999999972, 0.0006633190000000025, 0.0006876390000000038, 0.0006633340000000015, 0.0006632640000000037, 0.0006632770000000038, 0.0006632909999999964, 0.0006632919999999959, 0.0006633059999999955, 0.000663221999999998, 0.000663304999999996, 0.0006633050000000029, 0.000663221999999998, 0.0006632920000000028, 0.0006632780000000033, 0.0006632780000000033, 0.0006633060000000024, 0.0006632910000000034, 0.0006633190000000025, 0.0006633610000000012, 0.0006632639999999967, 0.0006633059999999955, 0.0006633050000000029]</msg>
<status status="PASS" starttime="20201029 12:43:37.304" endtime="20201029 12:43:37.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.299" endtime="20201029 12:43:37.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.904" endtime="20201029 12:43:37.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.881" endtime="20201029 12:43:37.307"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:37.310" endtime="20201029 12:43:37.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.308" endtime="20201029 12:43:37.329"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.338" endtime="20201029 12:43:37.384"></status>
</kw>
<msg timestamp="20201029 12:43:37.385" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.336" endtime="20201029 12:43:37.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.387" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.386" endtime="20201029 12:43:37.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.388" endtime="20201029 12:43:37.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.334" endtime="20201029 12:43:37.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.332" endtime="20201029 12:43:37.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.398" endtime="20201029 12:43:37.684"></status>
</kw>
<msg timestamp="20201029 12:43:37.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018013181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018715333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.396" endtime="20201029 12:43:37.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018013181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018715333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.689" endtime="20201029 12:43:37.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.697" endtime="20201029 12:43:37.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.394" endtime="20201029 12:43:37.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.392" endtime="20201029 12:43:37.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:37.703" level="INFO">${PHILIP_RES} = [{'diff': 0.000702152000000001}, {'diff': 0.000702152000000001}, {'diff': 0.0007021800000000002}, {'diff': 0.0007021109999999983}, {'diff': 0.000702152000000001}, {'diff': 0.0007021660000000006}, {'di...</msg>
<status status="PASS" starttime="20201029 12:43:37.700" endtime="20201029 12:43:37.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:37.707" level="INFO">${RESULT} = {'diff': [0.000702152000000001, 0.000702152000000001, 0.0007021800000000002, 0.0007021109999999983, 0.000702152000000001, 0.0007021660000000006, 0.0007021660000000006, 0.0007021530000000005, 0.0007021...</msg>
<status status="PASS" starttime="20201029 12:43:37.704" endtime="20201029 12:43:37.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.712" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:37.711" endtime="20201029 12:43:37.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.714" level="INFO">VALUE: [0.000702152000000001, 0.000702152000000001, 0.0007021800000000002, 0.0007021109999999983, 0.000702152000000001, 0.0007021660000000006, 0.0007021660000000006, 0.0007021530000000005, 0.0007021809999999996, 0.0007021809999999996, 0.0007021530000000005, 0.0007021530000000005, 0.0007021670000000001, 0.0007021670000000001, 0.0007021530000000005, 0.0007021670000000001, 0.0007021670000000001, 0.0007021809999999962, 0.000702152999999997, 0.0007022080000000028, 0.0007021109999999983, 0.0007021390000000044, 0.0007021669999999966, 0.0007021669999999966, 0.0007021520000000045, 0.0007021659999999971, 0.0007021800000000036, 0.0007377500000000023, 0.0007021669999999966, 0.000702153000000004, 0.0007021110000000053, 0.0007021389999999975, 0.0007021670000000035, 0.000702152999999997, 0.000702152999999997, 0.0007021800000000036, 0.0007021249999999979, 0.0007021520000000045, 0.0007020969999999987, 0.0007021799999999967, 0.000702153000000004, 0.0007021659999999971, 0.0007021519999999976, 0.0007021800000000036, 0.0007021659999999971, 0.0007021810000000031, 0.0007021669999999966, 0.000702152999999997, 0.000702153000000004, 0.0007021669999999966]</msg>
<status status="PASS" starttime="20201029 12:43:37.713" endtime="20201029 12:43:37.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.708" endtime="20201029 12:43:37.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.330" endtime="20201029 12:43:37.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.308" endtime="20201029 12:43:37.716"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:37.718" endtime="20201029 12:43:37.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.717" endtime="20201029 12:43:37.738"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.747" endtime="20201029 12:43:37.795"></status>
</kw>
<msg timestamp="20201029 12:43:37.795" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.745" endtime="20201029 12:43:37.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.798" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.796" endtime="20201029 12:43:37.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.799" endtime="20201029 12:43:37.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.742" endtime="20201029 12:43:37.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.740" endtime="20201029 12:43:37.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.809" endtime="20201029 12:43:38.109"></status>
</kw>
<msg timestamp="20201029 12:43:38.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017915861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018657944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.807" endtime="20201029 12:43:38.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017915861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018657944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.114" endtime="20201029 12:43:38.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.122" endtime="20201029 12:43:38.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.805" endtime="20201029 12:43:38.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.803" endtime="20201029 12:43:38.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:38.129" level="INFO">${PHILIP_RES} = [{'diff': 0.0007420829999999976}, {'diff': 0.0007420970000000006}, {'diff': 0.0007421810000000015}, {'diff': 0.0007420980000000001}, {'diff': 0.0007421109999999967}, {'diff': 0.0007420970000000006}, {...</msg>
<status status="PASS" starttime="20201029 12:43:38.126" endtime="20201029 12:43:38.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:38.133" level="INFO">${RESULT} = {'diff': [0.0007420829999999976, 0.0007420970000000006, 0.0007421810000000015, 0.0007420980000000001, 0.0007421109999999967, 0.0007420970000000006, 0.0007421110000000002, 0.0007647640000000011, 0.0007...</msg>
<status status="PASS" starttime="20201029 12:43:38.130" endtime="20201029 12:43:38.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.138" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:38.137" endtime="20201029 12:43:38.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.140" level="INFO">VALUE: [0.0007420829999999976, 0.0007420970000000006, 0.0007421810000000015, 0.0007420980000000001, 0.0007421109999999967, 0.0007420970000000006, 0.0007421110000000002, 0.0007647640000000011, 0.0007420970000000006, 0.0007421110000000002, 0.000742083000000001, 0.0007421110000000002, 0.000742083000000001, 0.0007420970000000006, 0.0007421110000000002, 0.0007421119999999996, 0.0007420980000000001, 0.000742084000000004, 0.0007421109999999967, 0.0007421110000000036, 0.0007421109999999967, 0.0007420970000000041, 0.0007420969999999971, 0.0007421110000000036, 0.0007420969999999971, 0.000742195000000001, 0.0007420969999999971, 0.0007421120000000031, 0.000742083999999997, 0.000742084000000004, 0.0007421109999999967, 0.0007420970000000041, 0.0007420829999999976, 0.0007420829999999976, 0.0007421249999999963, 0.0007421110000000036, 0.0007420829999999976, 0.0007421390000000028, 0.0007420979999999966, 0.0007420280000000057, 0.0007421249999999963, 0.0007421110000000036, 0.0007420969999999971, 0.0007420970000000041, 0.0007421109999999967, 0.0007420280000000057, 0.0007421109999999967, 0.0007776950000000019, 0.0007421109999999967, 0.0007421390000000028]</msg>
<status status="PASS" starttime="20201029 12:43:38.139" endtime="20201029 12:43:38.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.134" endtime="20201029 12:43:38.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.739" endtime="20201029 12:43:38.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.716" endtime="20201029 12:43:38.143"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:38.145" endtime="20201029 12:43:38.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.144" endtime="20201029 12:43:38.165"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.173" endtime="20201029 12:43:38.224"></status>
</kw>
<msg timestamp="20201029 12:43:38.224" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.172" endtime="20201029 12:43:38.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.227" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.225" endtime="20201029 12:43:38.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.228" endtime="20201029 12:43:38.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.169" endtime="20201029 12:43:38.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.167" endtime="20201029 12:43:38.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.237" endtime="20201029 12:43:38.523"></status>
</kw>
<msg timestamp="20201029 12:43:38.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01787475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018657806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:38.236" endtime="20201029 12:43:38.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01787475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018657806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:38.527" endtime="20201029 12:43:38.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.535" endtime="20201029 12:43:38.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.233" endtime="20201029 12:43:38.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.231" endtime="20201029 12:43:38.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:38.541" level="INFO">${PHILIP_RES} = [{'diff': 0.0007830560000000007}, {'diff': 0.0007831249999999991}, {'diff': 0.0007831249999999991}, {'diff': 0.0007831109999999995}, {'diff': 0.0007831390000000021}, {'diff': 0.0007831380000000027}, {...</msg>
<status status="PASS" starttime="20201029 12:43:38.538" endtime="20201029 12:43:38.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:38.546" level="INFO">${RESULT} = {'diff': [0.0007830560000000007, 0.0007831249999999991, 0.0007831249999999991, 0.0007831109999999995, 0.0007831390000000021, 0.0007831380000000027, 0.0007831529999999982, 0.0007830830000000004, 0.0007...</msg>
<status status="PASS" starttime="20201029 12:43:38.543" endtime="20201029 12:43:38.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.551" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:38.550" endtime="20201029 12:43:38.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.553" level="INFO">VALUE: [0.0007830560000000007, 0.0007831249999999991, 0.0007831249999999991, 0.0007831109999999995, 0.0007831390000000021, 0.0007831380000000027, 0.0007831529999999982, 0.0007830830000000004, 0.0007831389999999987, 0.0007831249999999991, 0.0007831529999999982, 0.0007831529999999982, 0.0007832220000000001, 0.0007831109999999995, 0.0007831250000000026, 0.0007831109999999995, 0.0007831390000000021, 0.0007831800000000014, 0.000783111000000003, 0.0007831109999999961, 0.000783111000000003, 0.0007831249999999956, 0.0007831250000000026, 0.0007831249999999956, 0.0007831250000000026, 0.0007831109999999961, 0.0007831250000000026, 0.0007831390000000021, 0.0007831249999999956, 0.0007831390000000021, 0.0007831940000000009, 0.0007830830000000039, 0.0007831530000000017, 0.0007831390000000021, 0.000783111000000003, 0.0007831810000000008, 0.0007830970000000034, 0.0007831249999999956, 0.0007831530000000017, 0.0007831389999999952, 0.0007831250000000026, 0.0007830970000000034, 0.0007831250000000026, 0.0007831390000000021, 0.0008116949999999942, 0.0007831250000000026, 0.0007831249999999956, 0.0007831250000000026, 0.0007831670000000013, 0.0007831249999999956]</msg>
<status status="PASS" starttime="20201029 12:43:38.552" endtime="20201029 12:43:38.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.547" endtime="20201029 12:43:38.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.166" endtime="20201029 12:43:38.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.143" endtime="20201029 12:43:38.555"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:38.558" endtime="20201029 12:43:38.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.556" endtime="20201029 12:43:38.577"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.586" endtime="20201029 12:43:38.638"></status>
</kw>
<msg timestamp="20201029 12:43:38.638" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.584" endtime="20201029 12:43:38.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.641" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.639" endtime="20201029 12:43:38.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.642" endtime="20201029 12:43:38.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.581" endtime="20201029 12:43:38.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.579" endtime="20201029 12:43:38.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.651" endtime="20201029 12:43:38.950"></status>
</kw>
<msg timestamp="20201029 12:43:38.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0178005, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018625722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:38.649" endtime="20201029 12:43:38.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0178005, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018625722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:38.954" endtime="20201029 12:43:38.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.962" endtime="20201029 12:43:38.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.647" endtime="20201029 12:43:38.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.645" endtime="20201029 12:43:38.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:38.969" level="INFO">${PHILIP_RES} = [{'diff': 0.0008252220000000005}, {'diff': 0.0008252229999999999}, {'diff': 0.000825236}, {'diff': 0.000825236}, {'diff': 0.0008252499999999996}, {'diff': 0.000825236}, {'diff': 0.000825236}, {'diff':...</msg>
<status status="PASS" starttime="20201029 12:43:38.966" endtime="20201029 12:43:38.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:38.973" level="INFO">${RESULT} = {'diff': [0.0008252220000000005, 0.0008252229999999999, 0.000825236, 0.000825236, 0.0008252499999999996, 0.000825236, 0.000825236, 0.0008252369999999995, 0.000825236, 0.000825236, 0.000825236, 0.00082...</msg>
<status status="PASS" starttime="20201029 12:43:38.970" endtime="20201029 12:43:38.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.977" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:38.976" endtime="20201029 12:43:38.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.979" level="INFO">VALUE: [0.0008252220000000005, 0.0008252229999999999, 0.000825236, 0.000825236, 0.0008252499999999996, 0.000825236, 0.000825236, 0.0008252369999999995, 0.000825236, 0.000825236, 0.000825236, 0.000825236, 0.0008252220000000005, 0.0008252369999999995, 0.0008252499999999996, 0.000825221999999997, 0.0008252639999999992, 0.0008252220000000005, 0.0008252220000000005, 0.000825236, 0.0008252919999999983, 0.0008485560000000003, 0.0008252499999999996, 0.0008252229999999999, 0.0008252499999999996, 0.0008252220000000005, 0.000825236, 0.0008251940000000013, 0.0008252639999999992, 0.0008252499999999996, 0.000825236, 0.0008252499999999996, 0.0008252629999999997, 0.0008252499999999996, 0.000825236, 0.0008252090000000004, 0.0008252499999999996, 0.000825236, 0.000825236, 0.0008252220000000005, 0.0008252220000000005, 0.0008252629999999997, 0.0008252499999999996, 0.0008252499999999996, 0.000825236, 0.0008252640000000061, 0.0008252499999999996, 0.000825236, 0.0008252220000000005, 0.0008252359999999931]</msg>
<status status="PASS" starttime="20201029 12:43:38.978" endtime="20201029 12:43:38.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.974" endtime="20201029 12:43:38.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.578" endtime="20201029 12:43:38.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.555" endtime="20201029 12:43:38.981"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:38.984" endtime="20201029 12:43:39.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.982" endtime="20201029 12:43:39.004"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.012" endtime="20201029 12:43:39.066"></status>
</kw>
<msg timestamp="20201029 12:43:39.067" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.011" endtime="20201029 12:43:39.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.069" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.068" endtime="20201029 12:43:39.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.070" endtime="20201029 12:43:39.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.008" endtime="20201029 12:43:39.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.006" endtime="20201029 12:43:39.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.082" endtime="20201029 12:43:39.367"></status>
</kw>
<msg timestamp="20201029 12:43:39.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018148778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019017181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.081" endtime="20201029 12:43:39.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018148778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019017181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.371" endtime="20201029 12:43:39.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.379" endtime="20201029 12:43:39.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.078" endtime="20201029 12:43:39.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.077" endtime="20201029 12:43:39.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:39.385" level="INFO">${PHILIP_RES} = [{'diff': 0.0008684030000000002}, {'diff': 0.0008684030000000002}, {'diff': 0.0008684440000000029}, {'diff': 0.0008684169999999998}, {'diff': 0.0008684439999999995}, {'diff': 0.0008684169999999998}, {...</msg>
<status status="PASS" starttime="20201029 12:43:39.382" endtime="20201029 12:43:39.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:39.389" level="INFO">${RESULT} = {'diff': [0.0008684030000000002, 0.0008684030000000002, 0.0008684440000000029, 0.0008684169999999998, 0.0008684439999999995, 0.0008684169999999998, 0.0008684299999999999, 0.0008684309999999994, 0.0008...</msg>
<status status="PASS" starttime="20201029 12:43:39.386" endtime="20201029 12:43:39.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.394" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:39.393" endtime="20201029 12:43:39.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.396" level="INFO">VALUE: [0.0008684030000000002, 0.0008684030000000002, 0.0008684440000000029, 0.0008684169999999998, 0.0008684439999999995, 0.0008684169999999998, 0.0008684299999999999, 0.0008684309999999994, 0.0008684160000000003, 0.0008684450000000024, 0.0008684299999999999, 0.0008683750000000011, 0.0008684439999999995, 0.0008684860000000016, 0.0008684169999999963, 0.0008684309999999959, 0.0008684309999999959, 0.0008684030000000037, 0.0008684310000000028, 0.000903194000000003, 0.0008684440000000029, 0.0008684169999999963, 0.000868443999999996, 0.0008684170000000033, 0.0008684160000000038, 0.0008684309999999959, 0.0008684029999999968, 0.0008684450000000024, 0.0008684300000000034, 0.0008684310000000028, 0.0008684169999999963, 0.0008684169999999963, 0.0008684030000000037, 0.0008684300000000034, 0.0008684309999999959, 0.0008684159999999969, 0.0008684450000000024, 0.0008684160000000038, 0.0008684310000000028, 0.0008684159999999969, 0.0008684309999999959, 0.0008684160000000038, 0.0008685000000000012, 0.0008684579999999956, 0.0008684449999999955, 0.0008683750000000046, 0.0008684310000000028, 0.0008684310000000098, 0.0008684310000000028, 0.0008684310000000028]</msg>
<status status="PASS" starttime="20201029 12:43:39.395" endtime="20201029 12:43:39.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.390" endtime="20201029 12:43:39.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.005" endtime="20201029 12:43:39.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.982" endtime="20201029 12:43:39.403"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:39.405" endtime="20201029 12:43:39.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.404" endtime="20201029 12:43:39.425"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.433" endtime="20201029 12:43:39.490"></status>
</kw>
<msg timestamp="20201029 12:43:39.491" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.432" endtime="20201029 12:43:39.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.494" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.492" endtime="20201029 12:43:39.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.495" endtime="20201029 12:43:39.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.429" endtime="20201029 12:43:39.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.427" endtime="20201029 12:43:39.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.504" endtime="20201029 12:43:39.805"></status>
</kw>
<msg timestamp="20201029 12:43:39.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017762931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018675639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.502" endtime="20201029 12:43:39.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017762931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018675639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.809" endtime="20201029 12:43:39.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.817" endtime="20201029 12:43:39.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.500" endtime="20201029 12:43:39.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.498" endtime="20201029 12:43:39.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:39.824" level="INFO">${PHILIP_RES} = [{'diff': 0.0009127080000000017}, {'diff': 0.000912777}, {'diff': 0.0009127080000000017}, {'diff': 0.0009126949999999981}, {'diff': 0.0009126250000000002}, {'diff': 0.000912681000000002}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:39.821" endtime="20201029 12:43:39.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:39.829" level="INFO">${RESULT} = {'diff': [0.0009127080000000017, 0.000912777, 0.0009127080000000017, 0.0009126949999999981, 0.0009126250000000002, 0.000912681000000002, 0.0009127499999999969, 0.0009127779999999995, 0.000912709000000...</msg>
<status status="PASS" starttime="20201029 12:43:39.825" endtime="20201029 12:43:39.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.834" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:39.833" endtime="20201029 12:43:39.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.836" level="INFO">VALUE: [0.0009127080000000017, 0.000912777, 0.0009127080000000017, 0.0009126949999999981, 0.0009126250000000002, 0.000912681000000002, 0.0009127499999999969, 0.0009127779999999995, 0.0009127090000000011, 0.0009127219999999978, 0.0009127080000000017, 0.0009126940000000021, 0.0009127080000000017, 0.0009127219999999978, 0.0009127219999999978, 0.0009127499999999969, 0.0009127639999999965, 0.0009127770000000035, 0.0009127089999999977, 0.0009127229999999972, 0.0009127089999999977, 0.0009126949999999981, 0.000912695000000005, 0.0009500279999999986, 0.0009127079999999982, 0.0009127089999999977, 0.0009127229999999972, 0.0009127090000000046, 0.0009127080000000051, 0.0009127219999999978, 0.0009127219999999978, 0.0009126659999999995, 0.0009127080000000051, 0.0009126660000000064, 0.0009126939999999986, 0.0009127079999999982, 0.0009126809999999985, 0.0009127219999999978, 0.0009127080000000051, 0.0009127230000000042, 0.0009126529999999994, 0.0009127089999999977, 0.0009126949999999981, 0.0009127220000000047, 0.0009127360000000043, 0.0009127079999999982, 0.0009127080000000121, 0.0009127079999999982, 0.0009127079999999982, 0.0009127219999999908]</msg>
<status status="PASS" starttime="20201029 12:43:39.835" endtime="20201029 12:43:39.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.830" endtime="20201029 12:43:39.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.426" endtime="20201029 12:43:39.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.403" endtime="20201029 12:43:39.838"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:39.841" endtime="20201029 12:43:39.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.839" endtime="20201029 12:43:39.861"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.876" endtime="20201029 12:43:39.937"></status>
</kw>
<msg timestamp="20201029 12:43:39.938" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.872" endtime="20201029 12:43:39.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.941" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.939" endtime="20201029 12:43:39.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.943" endtime="20201029 12:43:39.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.865" endtime="20201029 12:43:39.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.863" endtime="20201029 12:43:39.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.954" endtime="20201029 12:43:40.242"></status>
</kw>
<msg timestamp="20201029 12:43:40.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027660236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028618333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.952" endtime="20201029 12:43:40.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027660236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028618333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.246" endtime="20201029 12:43:40.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.254" endtime="20201029 12:43:40.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.949" endtime="20201029 12:43:40.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.947" endtime="20201029 12:43:40.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:40.260" level="INFO">${PHILIP_RES} = [{'diff': 0.000958096999999998}, {'diff': 0.0009580559999999988}, {'diff': 0.0009580549999999993}, {'diff': 0.0009580839999999979}, {'diff': 0.0009734999999999952}, {'diff': 0.0009580699999999984}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:40.257" endtime="20201029 12:43:40.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:40.264" level="INFO">${RESULT} = {'diff': [0.000958096999999998, 0.0009580559999999988, 0.0009580549999999993, 0.0009580839999999979, 0.0009734999999999952, 0.0009580699999999984, 0.0009580560000000057, 0.0009580549999999993, 0.00095...</msg>
<status status="PASS" starttime="20201029 12:43:40.261" endtime="20201029 12:43:40.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.268" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:40.267" endtime="20201029 12:43:40.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.271" level="INFO">VALUE: [0.000958096999999998, 0.0009580559999999988, 0.0009580549999999993, 0.0009580839999999979, 0.0009734999999999952, 0.0009580699999999984, 0.0009580560000000057, 0.0009580549999999993, 0.0009580560000000057, 0.0009580559999999988, 0.0009580689999999989, 0.000958097000000005, 0.0009580699999999984, 0.0009580560000000057, 0.0009580689999999989, 0.0009581249999999972, 0.0009580559999999988, 0.0009581389999999967, 0.0009580830000000054, 0.0009580979999999975, 0.0009580699999999984, 0.0009581390000000037, 0.0009580829999999985, 0.0009580700000000053, 0.0009580549999999993, 0.0009580689999999989, 0.0009580979999999975, 0.0009580559999999988, 0.0009580830000000054, 0.0009580559999999988, 0.0009580700000000053, 0.0009581109999999976, 0.0009580689999999989, 0.0009580280000000066, 0.0009580559999999988, 0.0009971250000000015, 0.0009580700000000053, 0.0009580829999999985, 0.0009580420000000062, 0.0009580700000000053, 0.0009580270000000002, 0.0009580690000000058, 0.0009580559999999988, 0.0009580700000000053, 0.0009580279999999997, 0.0009580690000000058, 0.0009580559999999988, 0.0009580690000000058, 0.0009580690000000058, 0.0009580559999999988]</msg>
<status status="PASS" starttime="20201029 12:43:40.269" endtime="20201029 12:43:40.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.265" endtime="20201029 12:43:40.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.861" endtime="20201029 12:43:40.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.839" endtime="20201029 12:43:40.273"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:40.275" endtime="20201029 12:43:40.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.274" endtime="20201029 12:43:40.295"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.303" endtime="20201029 12:43:40.364"></status>
</kw>
<msg timestamp="20201029 12:43:40.365" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.301" endtime="20201029 12:43:40.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.367" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.366" endtime="20201029 12:43:40.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.368" endtime="20201029 12:43:40.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.299" endtime="20201029 12:43:40.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.297" endtime="20201029 12:43:40.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.378" endtime="20201029 12:43:40.682"></status>
</kw>
<msg timestamp="20201029 12:43:40.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017605958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018610458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.376" endtime="20201029 12:43:40.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017605958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018610458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.686" endtime="20201029 12:43:40.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.694" endtime="20201029 12:43:40.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.374" endtime="20201029 12:43:40.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.372" endtime="20201029 12:43:40.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:40.700" level="INFO">${PHILIP_RES} = [{'diff': 0.0010044999999999984}, {'diff': 0.001004513999999998}, {'diff': 0.0010045279999999976}, {'diff': 0.001004513999999998}, {'diff': 0.001004513999999998}, {'diff': 0.0010374580000000015}, {'di...</msg>
<status status="PASS" starttime="20201029 12:43:40.697" endtime="20201029 12:43:40.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:40.705" level="INFO">${RESULT} = {'diff': [0.0010044999999999984, 0.001004513999999998, 0.0010045279999999976, 0.001004513999999998, 0.001004513999999998, 0.0010374580000000015, 0.0010045420000000006, 0.001004500000000002, 0.00100452...</msg>
<status status="PASS" starttime="20201029 12:43:40.701" endtime="20201029 12:43:40.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.709" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:40.708" endtime="20201029 12:43:40.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.711" level="INFO">VALUE: [0.0010044999999999984, 0.001004513999999998, 0.0010045279999999976, 0.001004513999999998, 0.001004513999999998, 0.0010374580000000015, 0.0010045420000000006, 0.001004500000000002, 0.0010045270000000016, 0.001004500000000002, 0.0010045140000000015, 0.001004500000000002, 0.0010044719999999993, 0.001004514000000005, 0.0010044729999999988, 0.0010044719999999993, 0.0010045279999999976, 0.001004514000000005, 0.001004513999999998, 0.001004513999999998, 0.0010045269999999981, 0.0010045269999999981, 0.001004513999999998, 0.0010044999999999984, 0.001004514000000005, 0.0010044859999999989, 0.001004514000000005, 0.0010045269999999981, 0.0010044579999999997, 0.0010044999999999984, 0.0010045560000000037, 0.0010044719999999993, 0.0010044999999999984, 0.0010045269999999981, 0.001004513999999998, 0.001044473000000004, 0.0010044999999999984, 0.0010045000000000054, 0.0010044999999999984, 0.001004514000000005, 0.0010044999999999984, 0.001004514000000005, 0.001004513999999998, 0.0010045000000000054, 0.001004513999999998, 0.0010044719999999924, 0.001004513999999998, 0.0010044999999999915, 0.001004513999999998, 0.0010044300000000006]</msg>
<status status="PASS" starttime="20201029 12:43:40.710" endtime="20201029 12:43:40.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.705" endtime="20201029 12:43:40.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.296" endtime="20201029 12:43:40.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.273" endtime="20201029 12:43:40.714"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:40.716" endtime="20201029 12:43:40.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.715" endtime="20201029 12:43:40.736"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.744" endtime="20201029 12:43:40.809"></status>
</kw>
<msg timestamp="20201029 12:43:40.809" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.743" endtime="20201029 12:43:40.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.811" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.810" endtime="20201029 12:43:40.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.813" endtime="20201029 12:43:40.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.740" endtime="20201029 12:43:40.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.738" endtime="20201029 12:43:40.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.822" endtime="20201029 12:43:41.107"></status>
</kw>
<msg timestamp="20201029 12:43:41.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017851139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018903153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.820" endtime="20201029 12:43:41.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017851139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018903153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.111" endtime="20201029 12:43:41.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.119" endtime="20201029 12:43:41.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.817" endtime="20201029 12:43:41.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.816" endtime="20201029 12:43:41.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:41.126" level="INFO">${PHILIP_RES} = [{'diff': 0.0010520140000000004}, {'diff': 0.001052041}, {'diff': 0.001051945000000002}, {'diff': 0.0010520419999999996}, {'diff': 0.001052028}, {'diff': 0.0010520549999999997}, {'diff': 0.00105205599...</msg>
<status status="PASS" starttime="20201029 12:43:41.122" endtime="20201029 12:43:41.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:41.131" level="INFO">${RESULT} = {'diff': [0.0010520140000000004, 0.001052041, 0.001051945000000002, 0.0010520419999999996, 0.001052028, 0.0010520549999999997, 0.0010520559999999991, 0.001052028, 0.001052028, 0.0010521110000000014, 0...</msg>
<status status="PASS" starttime="20201029 12:43:41.127" endtime="20201029 12:43:41.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.135" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:41.134" endtime="20201029 12:43:41.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.138" level="INFO">VALUE: [0.0010520140000000004, 0.001052041, 0.001051945000000002, 0.0010520419999999996, 0.001052028, 0.0010520549999999997, 0.0010520559999999991, 0.001052028, 0.001052028, 0.0010521110000000014, 0.0010520140000000004, 0.0010520279999999965, 0.0010519579999999987, 0.0010520140000000039, 0.0010520560000000026, 0.0010520409999999966, 0.0010520280000000035, 0.001052041999999996, 0.001052013999999997, 0.0010520410000000036, 0.0010884999999999992, 0.0010520280000000035, 0.001052041999999996, 0.0010520280000000035, 0.001052027000000004, 0.0010520279999999965, 0.0010519999999999974, 0.001052027000000004, 0.0010520279999999965, 0.0010520689999999958, 0.0010520280000000035, 0.0010520409999999966, 0.0010520830000000023, 0.001052042000000003, 0.0010520549999999962, 0.001052041999999996, 0.001052042000000003, 0.0010520409999999966, 0.001052026999999997, 0.0010520560000000026, 0.001052042000000003, 0.0010520410000000036, 0.001052042000000003, 0.0010520840000000087, 0.001052027000000011, 0.0010520549999999962, 0.0010520700000000022, 0.001052042000000003, 0.0010520549999999962, 0.0010875969999999957]</msg>
<status status="PASS" starttime="20201029 12:43:41.136" endtime="20201029 12:43:41.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.132" endtime="20201029 12:43:41.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.737" endtime="20201029 12:43:41.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.714" endtime="20201029 12:43:41.140"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:41.142" endtime="20201029 12:43:41.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.140" endtime="20201029 12:43:41.162"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.171" endtime="20201029 12:43:41.239"></status>
</kw>
<msg timestamp="20201029 12:43:41.240" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.169" endtime="20201029 12:43:41.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.245" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.242" endtime="20201029 12:43:41.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.247" endtime="20201029 12:43:41.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.166" endtime="20201029 12:43:41.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.164" endtime="20201029 12:43:41.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.266" endtime="20201029 12:43:41.557"></status>
</kw>
<msg timestamp="20201029 12:43:41.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018879333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.263" endtime="20201029 12:43:41.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018879333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.561" endtime="20201029 12:43:41.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.569" endtime="20201029 12:43:41.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.257" endtime="20201029 12:43:41.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.254" endtime="20201029 12:43:41.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:41.576" level="INFO">${PHILIP_RES} = [{'diff': 0.001100638999999997}, {'diff': 0.0011006660000000001}, {'diff': 0.0011006800000000032}, {'diff': 0.0011006249999999974}, {'diff': 0.0011006390000000005}, {'diff': 0.0011006799999999997}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:41.573" endtime="20201029 12:43:41.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:41.580" level="INFO">${RESULT} = {'diff': [0.001100638999999997, 0.0011006660000000001, 0.0011006800000000032, 0.0011006249999999974, 0.0011006390000000005, 0.0011006799999999997, 0.0011006390000000005, 0.001100625000000001, 0.001100...</msg>
<status status="PASS" starttime="20201029 12:43:41.577" endtime="20201029 12:43:41.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.584" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:41.583" endtime="20201029 12:43:41.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.586" level="INFO">VALUE: [0.001100638999999997, 0.0011006660000000001, 0.0011006800000000032, 0.0011006249999999974, 0.0011006390000000005, 0.0011006799999999997, 0.0011006390000000005, 0.001100625000000001, 0.0011006669999999996, 0.0011007219999999984, 0.0011006809999999992, 0.001100653, 0.001100653, 0.001100625000000001, 0.001100625000000001, 0.0011006110000000013, 0.0011005840000000017, 0.0011006390000000005, 0.001100625000000001, 0.0011283329999999953, 0.0011006519999999936, 0.001100637999999994, 0.0011006389999999935, 0.0011005839999999947, 0.0011007080000000058, 0.0011006390000000005, 0.001100625000000001, 0.001100653, 0.0011006669999999996, 0.001100653, 0.0011006949999999988, 0.001100653, 0.0011006390000000005, 0.0011006520000000006, 0.0011006520000000006, 0.001100735999999998, 0.0011006390000000074, 0.0011006390000000005, 0.0011006529999999931, 0.0011006390000000005, 0.0011006390000000005, 0.0011006529999999931, 0.0011006669999999996, 0.0011006949999999988, 0.0011006390000000005, 0.0011006660000000001, 0.0011006520000000075, 0.0011006390000000005, 0.0011006390000000005, 0.0011006390000000005]</msg>
<status status="PASS" starttime="20201029 12:43:41.585" endtime="20201029 12:43:41.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.580" endtime="20201029 12:43:41.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.163" endtime="20201029 12:43:41.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.140" endtime="20201029 12:43:41.588"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:41.591" endtime="20201029 12:43:41.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.589" endtime="20201029 12:43:41.610"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.618" endtime="20201029 12:43:41.687"></status>
</kw>
<msg timestamp="20201029 12:43:41.688" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.617" endtime="20201029 12:43:41.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.690" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.689" endtime="20201029 12:43:41.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.691" endtime="20201029 12:43:41.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.614" endtime="20201029 12:43:41.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.612" endtime="20201029 12:43:41.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.701" endtime="20201029 12:43:41.987"></status>
</kw>
<msg timestamp="20201029 12:43:41.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017706792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018857111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.700" endtime="20201029 12:43:41.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017706792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018857111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.991" endtime="20201029 12:43:41.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.000" endtime="20201029 12:43:42.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.697" endtime="20201029 12:43:42.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.696" endtime="20201029 12:43:42.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:42.015" level="INFO">${PHILIP_RES} = [{'diff': 0.0011503190000000003}, {'diff': 0.0011753609999999998}, {'diff': 0.001150347000000003}, {'diff': 0.001150333}, {'diff': 0.0011504030000000012}, {'diff': 0.0011503749999999986}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:42.008" endtime="20201029 12:43:42.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:42.023" level="INFO">${RESULT} = {'diff': [0.0011503190000000003, 0.0011753609999999998, 0.001150347000000003, 0.001150333, 0.0011504030000000012, 0.0011503749999999986, 0.0011503339999999994, 0.0011503889999999982, 0.001150346999999...</msg>
<status status="PASS" starttime="20201029 12:43:42.017" endtime="20201029 12:43:42.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.032" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:42.030" endtime="20201029 12:43:42.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.037" level="INFO">VALUE: [0.0011503190000000003, 0.0011753609999999998, 0.001150347000000003, 0.001150333, 0.0011504030000000012, 0.0011503749999999986, 0.0011503339999999994, 0.0011503889999999982, 0.0011503469999999995, 0.001150360999999999, 0.0011503339999999994, 0.0011503199999999963, 0.0011502920000000041, 0.0011503329999999964, 0.0011503610000000025, 0.001150333999999996, 0.0011503340000000029, 0.0011503329999999964, 0.0011503329999999964, 0.0011503610000000025, 0.0011504170000000008, 0.0011503340000000029, 0.001150263999999998, 0.0011503190000000038, 0.0011503049999999973, 0.001150347000000003, 0.0011503199999999963, 0.0011920550000000044, 0.0011503200000000033, 0.001150346999999996, 0.0011503610000000025, 0.0011503189999999969, 0.001150347000000003, 0.001150333999999996, 0.001150347000000003, 0.0011503609999999956, 0.0011502909999999977, 0.0011503189999999969, 0.0011503610000000025, 0.001150346999999996, 0.0011503470000000099, 0.0011503189999999969, 0.0011503330000000034, 0.0011503479999999955, 0.001150346999999996, 0.001150346999999996, 0.0011503330000000034, 0.0011502769999999912, 0.0011503480000000094, 0.001150346999999996]</msg>
<status status="PASS" starttime="20201029 12:43:42.034" endtime="20201029 12:43:42.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.025" endtime="20201029 12:43:42.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.611" endtime="20201029 12:43:42.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.588" endtime="20201029 12:43:42.043"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:42.048" endtime="20201029 12:43:42.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.045" endtime="20201029 12:43:42.070"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.087" endtime="20201029 12:43:42.160"></status>
</kw>
<msg timestamp="20201029 12:43:42.161" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.084" endtime="20201029 12:43:42.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.163" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.162" endtime="20201029 12:43:42.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.164" endtime="20201029 12:43:42.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.078" endtime="20201029 12:43:42.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.075" endtime="20201029 12:43:42.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.174" endtime="20201029 12:43:42.460"></status>
</kw>
<msg timestamp="20201029 12:43:42.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029787861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030988972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.172" endtime="20201029 12:43:42.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029787861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030988972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.464" endtime="20201029 12:43:42.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.472" endtime="20201029 12:43:42.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.169" endtime="20201029 12:43:42.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.168" endtime="20201029 12:43:42.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:42.478" level="INFO">${PHILIP_RES} = [{'diff': 0.0012011110000000012}, {'diff': 0.0012011110000000047}, {'diff': 0.0012011250000000043}, {'diff': 0.0012011110000000047}, {'diff': 0.0012011109999999978}, {'diff': 0.0012011529999999965}, {...</msg>
<status status="PASS" starttime="20201029 12:43:42.475" endtime="20201029 12:43:42.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:42.483" level="INFO">${RESULT} = {'diff': [0.0012011110000000012, 0.0012011110000000047, 0.0012011250000000043, 0.0012011110000000047, 0.0012011109999999978, 0.0012011529999999965, 0.001201138999999997, 0.001201138999999997, 0.001201...</msg>
<status status="PASS" starttime="20201029 12:43:42.479" endtime="20201029 12:43:42.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.487" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:42.486" endtime="20201029 12:43:42.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.490" level="INFO">VALUE: [0.0012011110000000012, 0.0012011110000000047, 0.0012011250000000043, 0.0012011110000000047, 0.0012011109999999978, 0.0012011529999999965, 0.001201138999999997, 0.001201138999999997, 0.0012011119999999972, 0.001201069000000006, 0.0012011110000000047, 0.0012011250000000043, 0.0012011109999999978, 0.0012011109999999978, 0.0012011109999999978, 0.0012010829999999986, 0.0012010969999999982, 0.0012011530000000034, 0.0012173890000000062, 0.0012011950000000021, 0.0012010969999999982, 0.0012010829999999986, 0.0012011249999999973, 0.0012011109999999978, 0.001201041, 0.0012011110000000047, 0.0012010969999999982, 0.001201166999999989, 0.0012011109999999908, 0.0012011249999999973, 0.0012011110000000047, 0.0012011110000000047, 0.0012011110000000047, 0.0012011109999999908, 0.0012011249999999973, 0.0012011249999999973, 0.00120113899999999, 0.0012011110000000047, 0.0012011120000000042, 0.0012010549999999925, 0.0012011110000000047, 0.0012011120000000042, 0.001201167000000003, 0.0012375139999999951, 0.0012011110000000047, 0.0012011249999999973, 0.0012011249999999973, 0.0012011249999999973, 0.0012011119999999903, 0.0012010969999999982]</msg>
<status status="PASS" starttime="20201029 12:43:42.488" endtime="20201029 12:43:42.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.484" endtime="20201029 12:43:42.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.071" endtime="20201029 12:43:42.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.043" endtime="20201029 12:43:42.491"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:42.494" endtime="20201029 12:43:42.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.492" endtime="20201029 12:43:42.514"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.522" endtime="20201029 12:43:42.597"></status>
</kw>
<msg timestamp="20201029 12:43:42.598" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.520" endtime="20201029 12:43:42.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.600" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.599" endtime="20201029 12:43:42.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.601" endtime="20201029 12:43:42.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.518" endtime="20201029 12:43:42.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.516" endtime="20201029 12:43:42.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.610" endtime="20201029 12:43:42.915"></status>
</kw>
<msg timestamp="20201029 12:43:42.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018634556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019887528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.609" endtime="20201029 12:43:42.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018634556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019887528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.919" endtime="20201029 12:43:42.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.928" endtime="20201029 12:43:42.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.606" endtime="20201029 12:43:42.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.605" endtime="20201029 12:43:42.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:42.934" level="INFO">${PHILIP_RES} = [{'diff': 0.0012529720000000015}, {'diff': 0.0012529859999999976}, {'diff': 0.001252958999999998}, {'diff': 0.0012529299999999993}, {'diff': 0.001252973000000001}, {'diff': 0.0012529579999999985}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:42.931" endtime="20201029 12:43:42.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:42.938" level="INFO">${RESULT} = {'diff': [0.0012529720000000015, 0.0012529859999999976, 0.001252958999999998, 0.0012529299999999993, 0.001252973000000001, 0.0012529579999999985, 0.001252986000000001, 0.0012530000000000006, 0.0012529...</msg>
<status status="PASS" starttime="20201029 12:43:42.935" endtime="20201029 12:43:42.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.942" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:42.941" endtime="20201029 12:43:42.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.945" level="INFO">VALUE: [0.0012529720000000015, 0.0012529859999999976, 0.001252958999999998, 0.0012529299999999993, 0.001252973000000001, 0.0012529579999999985, 0.001252986000000001, 0.0012530000000000006, 0.001252986000000001, 0.001252971999999998, 0.001252943999999999, 0.0012693059999999978, 0.001252986999999997, 0.001252971999999998, 0.0012530419999999959, 0.001252971999999998, 0.001252971999999998, 0.001252958999999998, 0.0012529999999999972, 0.001252986999999997, 0.001252971999999998, 0.0012529299999999993, 0.0012529860000000045, 0.0012529860000000045, 0.001252972000000005, 0.0012529580000000054, 0.0012529730000000044, 0.0012529580000000054, 0.0012529440000000058, 0.0012530270000000038, 0.0012529579999999985, 0.001252971999999998, 0.0012529580000000054, 0.0012529450000000053, 0.0012529859999999976, 0.0012894310000000075, 0.0012529859999999976, 0.001252971999999991, 0.0012529859999999976, 0.001252972000000005, 0.001252971999999991, 0.0012529730000000044, 0.0012529859999999976, 0.0012529730000000044, 0.0012529859999999976, 0.0012529859999999976, 0.0012529999999999902, 0.0012529859999999976, 0.0012529730000000044, 0.0012529859999999976]</msg>
<status status="PASS" starttime="20201029 12:43:42.943" endtime="20201029 12:43:42.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.939" endtime="20201029 12:43:42.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.514" endtime="20201029 12:43:42.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.492" endtime="20201029 12:43:42.947"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:42.949" endtime="20201029 12:43:42.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.948" endtime="20201029 12:43:42.969"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.977" endtime="20201029 12:43:43.055"></status>
</kw>
<msg timestamp="20201029 12:43:43.055" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.975" endtime="20201029 12:43:43.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.058" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.056" endtime="20201029 12:43:43.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.059" endtime="20201029 12:43:43.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.973" endtime="20201029 12:43:43.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.971" endtime="20201029 12:43:43.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.071" endtime="20201029 12:43:43.360"></status>
</kw>
<msg timestamp="20201029 12:43:43.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017643403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018949306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.069" endtime="20201029 12:43:43.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017643403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018949306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.364" endtime="20201029 12:43:43.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.372" endtime="20201029 12:43:43.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.067" endtime="20201029 12:43:43.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.065" endtime="20201029 12:43:43.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:43.378" level="INFO">${PHILIP_RES} = [{'diff': 0.0013059030000000006}, {'diff': 0.0013059170000000002}, {'diff': 0.0013059030000000006}, {'diff': 0.0013059720000000025}, {'diff': 0.0013059579999999994}, {'diff': 0.0013059160000000007}, {...</msg>
<status status="PASS" starttime="20201029 12:43:43.375" endtime="20201029 12:43:43.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:43.382" level="INFO">${RESULT} = {'diff': [0.0013059030000000006, 0.0013059170000000002, 0.0013059030000000006, 0.0013059720000000025, 0.0013059579999999994, 0.0013059160000000007, 0.0013059030000000006, 0.0013058880000000016, 0.0013...</msg>
<status status="PASS" starttime="20201029 12:43:43.379" endtime="20201029 12:43:43.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.386" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:43.385" endtime="20201029 12:43:43.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.389" level="INFO">VALUE: [0.0013059030000000006, 0.0013059170000000002, 0.0013059030000000006, 0.0013059720000000025, 0.0013059579999999994, 0.0013059160000000007, 0.0013059030000000006, 0.0013058880000000016, 0.0013059170000000002, 0.0013059300000000003, 0.0013059170000000037, 0.0013059310000000032, 0.0013059160000000042, 0.0013059170000000037, 0.0013179720000000006, 0.001305874999999998, 0.0013058609999999984, 0.0013058889999999976, 0.0013059300000000038, 0.0013059450000000028, 0.0013059310000000032, 0.0013059170000000037, 0.0013059170000000037, 0.0013059170000000037, 0.0013059310000000032, 0.0013059160000000042, 0.0013059310000000032, 0.001305986000000002, 0.0013059310000000032, 0.001305903000000004, 0.0013059170000000037, 0.0013058890000000045, 0.0013058610000000054, 0.0013059309999999963, 0.0013059019999999977, 0.001305874999999998, 0.0013059719999999886, 0.0013423190000000085, 0.0013059450000000028, 0.0013059160000000042, 0.0013059170000000037, 0.0013059170000000037, 0.0013058609999999915, 0.0013059169999999898, 0.0013059159999999903, 0.001305944999999989, 0.001305985999999995, 0.0013059169999999898, 0.0013059299999999968, 0.0013059170000000037]</msg>
<status status="PASS" starttime="20201029 12:43:43.388" endtime="20201029 12:43:43.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.383" endtime="20201029 12:43:43.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.969" endtime="20201029 12:43:43.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.947" endtime="20201029 12:43:43.391"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:43.394" endtime="20201029 12:43:43.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.392" endtime="20201029 12:43:43.414"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.422" endtime="20201029 12:43:43.502"></status>
</kw>
<msg timestamp="20201029 12:43:43.502" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.420" endtime="20201029 12:43:43.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.505" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.503" endtime="20201029 12:43:43.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.506" endtime="20201029 12:43:43.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.418" endtime="20201029 12:43:43.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.416" endtime="20201029 12:43:43.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.515" endtime="20201029 12:43:43.816"></status>
</kw>
<msg timestamp="20201029 12:43:43.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017568, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018969611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:43.513" endtime="20201029 12:43:43.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017568, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018969611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:43.820" endtime="20201029 12:43:43.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.828" endtime="20201029 12:43:43.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.510" endtime="20201029 12:43:43.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.509" endtime="20201029 12:43:43.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:43.834" level="INFO">${PHILIP_RES} = [{'diff': 0.0014016110000000005}, {'diff': 0.0013599170000000022}, {'diff': 0.0013600269999999998}, {'diff': 0.0013600130000000002}, {'diff': 0.0013599299999999988}, {'diff': 0.0013599299999999988}, {...</msg>
<status status="PASS" starttime="20201029 12:43:43.831" endtime="20201029 12:43:43.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:43.839" level="INFO">${RESULT} = {'diff': [0.0014016110000000005, 0.0013599170000000022, 0.0013600269999999998, 0.0013600130000000002, 0.0013599299999999988, 0.0013599299999999988, 0.0013598889999999995, 0.0013599439999999983, 0.0013...</msg>
<status status="PASS" starttime="20201029 12:43:43.835" endtime="20201029 12:43:43.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.844" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:43.842" endtime="20201029 12:43:43.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.846" level="INFO">VALUE: [0.0014016110000000005, 0.0013599170000000022, 0.0013600269999999998, 0.0013600130000000002, 0.0013599299999999988, 0.0013599299999999988, 0.0013598889999999995, 0.0013599439999999983, 0.0013599440000000018, 0.0013599440000000018, 0.001359972000000001, 0.0013599439999999949, 0.0013599310000000017, 0.0013599440000000018, 0.0013599440000000018, 0.0013599580000000014, 0.0013599300000000022, 0.001359860999999997, 0.0013599170000000022, 0.0013599300000000022, 0.0013599440000000018, 0.00136, 0.001359958999999994, 0.0013858889999999943, 0.0013599310000000017, 0.0013599580000000014, 0.0013599450000000013, 0.0013599450000000013, 0.001359972000000001, 0.0013599449999999944, 0.0013599579999999944, 0.0013599450000000013, 0.0013599450000000013, 0.0013599579999999944, 0.0013600140000000066, 0.0013599299999999953, 0.0013599450000000013, 0.0013599450000000013, 0.0013599579999999944, 0.0013599450000000013, 0.0013599450000000013, 0.0013599309999999948, 0.0013599579999999944, 0.0013599299999999953, 0.0013599160000000027, 0.001405125000000007, 0.0013599170000000022, 0.0013599579999999944, 0.0013598889999999891, 0.0013599440000000018]</msg>
<status status="PASS" starttime="20201029 12:43:43.845" endtime="20201029 12:43:43.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.840" endtime="20201029 12:43:43.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.414" endtime="20201029 12:43:43.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.392" endtime="20201029 12:43:43.848"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:43.850" endtime="20201029 12:43:43.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.849" endtime="20201029 12:43:43.870"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.878" endtime="20201029 12:43:43.961"></status>
</kw>
<msg timestamp="20201029 12:43:43.962" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.877" endtime="20201029 12:43:43.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.964" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.963" endtime="20201029 12:43:43.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.965" endtime="20201029 12:43:43.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.874" endtime="20201029 12:43:43.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.872" endtime="20201029 12:43:43.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.974" endtime="20201029 12:43:44.262"></status>
</kw>
<msg timestamp="20201029 12:43:44.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017488472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0189035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:43.973" endtime="20201029 12:43:44.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017488472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0189035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:44.267" endtime="20201029 12:43:44.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.276" endtime="20201029 12:43:44.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.970" endtime="20201029 12:43:44.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.969" endtime="20201029 12:43:44.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:44.283" level="INFO">${PHILIP_RES} = [{'diff': 0.0014150279999999987}, {'diff': 0.001415070000000001}, {'diff': 0.0014488890000000018}, {'diff': 0.0014149999999999996}, {'diff': 0.0014150419999999983}, {'diff': 0.0014149999999999996}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:44.280" endtime="20201029 12:43:44.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:44.287" level="INFO">${RESULT} = {'diff': [0.0014150279999999987, 0.001415070000000001, 0.0014488890000000018, 0.0014149999999999996, 0.0014150419999999983, 0.0014149999999999996, 0.0014150549999999984, 0.0014150419999999983, 0.00141...</msg>
<status status="PASS" starttime="20201029 12:43:44.284" endtime="20201029 12:43:44.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.291" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:44.290" endtime="20201029 12:43:44.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.294" level="INFO">VALUE: [0.0014150279999999987, 0.001415070000000001, 0.0014488890000000018, 0.0014149999999999996, 0.0014150419999999983, 0.0014149999999999996, 0.0014150549999999984, 0.0014150419999999983, 0.0014150559999999979, 0.0014150560000000013, 0.0014150549999999984, 0.001415068999999998, 0.0014151250000000032, 0.0014150699999999974, 0.0014150549999999984, 0.0014150549999999984, 0.0014150700000000044, 0.0014150559999999979, 0.0014150560000000048, 0.0014150549999999984, 0.0014150549999999984, 0.0014150559999999979, 0.001415084000000004, 0.001415068999999998, 0.0014339999999999978, 0.0014151110000000036, 0.0014150409999999988, 0.0014150830000000045, 0.0014150559999999979, 0.001415069000000005, 0.0014150410000000058, 0.0014151109999999967, 0.0014150559999999979, 0.0014150699999999905, 0.0014150419999999914, 0.0014150549999999984, 0.0014150549999999984, 0.001415014000000006, 0.0014150559999999979, 0.0014150550000000123, 0.0014150410000000058, 0.0014150559999999979, 0.0014150559999999979, 0.0014150559999999979, 0.001415068999999991, 0.001461986999999998, 0.0014150410000000058, 0.001415068999999991, 0.0014150559999999979, 0.0014150700000000044]</msg>
<status status="PASS" starttime="20201029 12:43:44.293" endtime="20201029 12:43:44.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.288" endtime="20201029 12:43:44.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.871" endtime="20201029 12:43:44.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.848" endtime="20201029 12:43:44.296"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:44.298" endtime="20201029 12:43:44.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.297" endtime="20201029 12:43:44.318"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.326" endtime="20201029 12:43:44.412"></status>
</kw>
<msg timestamp="20201029 12:43:44.412" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.325" endtime="20201029 12:43:44.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.415" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.413" endtime="20201029 12:43:44.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.416" endtime="20201029 12:43:44.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.322" endtime="20201029 12:43:44.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.320" endtime="20201029 12:43:44.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.426" endtime="20201029 12:43:44.733"></status>
</kw>
<msg timestamp="20201029 12:43:44.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017930986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019402222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.424" endtime="20201029 12:43:44.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017930986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019402222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.737" endtime="20201029 12:43:44.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.745" endtime="20201029 12:43:44.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.422" endtime="20201029 12:43:44.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.420" endtime="20201029 12:43:44.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:44.752" level="INFO">${PHILIP_RES} = [{'diff': 0.0014712360000000008}, {'diff': 0.0014712779999999995}, {'diff': 0.0014712500000000003}, {'diff': 0.0014713330000000018}, {'diff': 0.0014712360000000008}, {'diff': 0.0014712360000000008}, {...</msg>
<status status="PASS" starttime="20201029 12:43:44.749" endtime="20201029 12:43:44.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:44.756" level="INFO">${RESULT} = {'diff': [0.0014712360000000008, 0.0014712779999999995, 0.0014712500000000003, 0.0014713330000000018, 0.0014712360000000008, 0.0014712360000000008, 0.0014712500000000003, 0.0014712360000000008, 0.0015...</msg>
<status status="PASS" starttime="20201029 12:43:44.753" endtime="20201029 12:43:44.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.760" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:44.759" endtime="20201029 12:43:44.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.763" level="INFO">VALUE: [0.0014712360000000008, 0.0014712779999999995, 0.0014712500000000003, 0.0014713330000000018, 0.0014712360000000008, 0.0014712360000000008, 0.0014712500000000003, 0.0014712360000000008, 0.0015217080000000036, 0.001471277, 0.0014712500000000003, 0.0014712500000000003, 0.0014712500000000003, 0.0014712360000000008, 0.0014712500000000003, 0.0014712360000000008, 0.0014712500000000003, 0.0014712360000000008, 0.001471264, 0.0014712360000000008, 0.001471264, 0.0014711950000000015, 0.0014712630000000004, 0.0014712500000000003, 0.001471264, 0.0014712220000000012, 0.0014711799999999955, 0.001471180999999995, 0.0014712359999999938, 0.0015199439999999953, 0.0014712360000000008, 0.0014712219999999943, 0.0014712219999999943, 0.0014713189999999987, 0.0014712359999999869, 0.001471264, 0.0014712500000000073, 0.0014712499999999934, 0.001471291999999999, 0.0014712360000000008, 0.001471264, 0.001471291999999999, 0.001471305000000006, 0.001471264, 0.0014712499999999934, 0.0014712229999999937, 0.0014712499999999934, 0.001471264, 0.001471264, 0.001471264]</msg>
<status status="PASS" starttime="20201029 12:43:44.761" endtime="20201029 12:43:44.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.756" endtime="20201029 12:43:44.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.319" endtime="20201029 12:43:44.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.296" endtime="20201029 12:43:44.769"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:44.772" endtime="20201029 12:43:44.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.770" endtime="20201029 12:43:44.792"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.800" endtime="20201029 12:43:44.889"></status>
</kw>
<msg timestamp="20201029 12:43:44.889" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.798" endtime="20201029 12:43:44.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.891" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.890" endtime="20201029 12:43:44.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.893" endtime="20201029 12:43:44.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.796" endtime="20201029 12:43:44.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.794" endtime="20201029 12:43:44.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.901" endtime="20201029 12:43:45.188"></status>
</kw>
<msg timestamp="20201029 12:43:45.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017794931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019323444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.900" endtime="20201029 12:43:45.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017794931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019323444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.193" endtime="20201029 12:43:45.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.200" endtime="20201029 12:43:45.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.897" endtime="20201029 12:43:45.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.896" endtime="20201029 12:43:45.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:45.207" level="INFO">${PHILIP_RES} = [{'diff': 0.0015285129999999987}, {'diff': 0.0015285420000000008}, {'diff': 0.0015285140000000016}, {'diff': 0.0015285279999999977}, {'diff': 0.0015285280000000012}, {'diff': 0.00152857}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:45.204" endtime="20201029 12:43:45.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:45.212" level="INFO">${RESULT} = {'diff': [0.0015285129999999987, 0.0015285420000000008, 0.0015285140000000016, 0.0015285279999999977, 0.0015285280000000012, 0.00152857, 0.0015285549999999974, 0.0015285280000000012, 0.001528527999999...</msg>
<status status="PASS" starttime="20201029 12:43:45.208" endtime="20201029 12:43:45.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.216" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:45.215" endtime="20201029 12:43:45.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.219" level="INFO">VALUE: [0.0015285129999999987, 0.0015285420000000008, 0.0015285140000000016, 0.0015285279999999977, 0.0015285280000000012, 0.00152857, 0.0015285549999999974, 0.0015285280000000012, 0.0015285279999999977, 0.0015285280000000012, 0.0015285280000000012, 0.0015285280000000012, 0.0015285280000000012, 0.0015285279999999943, 0.0015285140000000016, 0.0015285410000000013, 0.0015285420000000008, 0.0015285280000000012, 0.0015285280000000012, 0.0015763189999999996, 0.001528500000000002, 0.0015285279999999943, 0.0015285270000000017, 0.0015285280000000012, 0.0015285420000000008, 0.0015285270000000017, 0.0015285139999999947, 0.001528500000000002, 0.0015285270000000017, 0.0015285279999999873, 0.0015285140000000086, 0.0015284730000000024, 0.0015285280000000012, 0.001528472000000003, 0.0015285409999999944, 0.0015285419999999939, 0.0015285420000000077, 0.001528458999999996, 0.0015284859999999956, 0.0015798340000000022, 0.0015285279999999873, 0.0015285410000000083, 0.0015285280000000012, 0.0015285280000000012, 0.001528569999999993, 0.0015285550000000009, 0.0015285280000000012, 0.0015285129999999952, 0.0015285139999999947, 0.0015285420000000077]</msg>
<status status="PASS" starttime="20201029 12:43:45.217" endtime="20201029 12:43:45.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.213" endtime="20201029 12:43:45.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.792" endtime="20201029 12:43:45.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.770" endtime="20201029 12:43:45.221"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:45.224" endtime="20201029 12:43:45.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.222" endtime="20201029 12:43:45.246"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.263" endtime="20201029 12:43:45.358"></status>
</kw>
<msg timestamp="20201029 12:43:45.359" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.259" endtime="20201029 12:43:45.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.364" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.361" endtime="20201029 12:43:45.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.366" endtime="20201029 12:43:45.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.254" endtime="20201029 12:43:45.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.250" endtime="20201029 12:43:45.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.385" endtime="20201029 12:43:45.681"></status>
</kw>
<msg timestamp="20201029 12:43:45.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030332028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031918889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.382" endtime="20201029 12:43:45.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030332028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031918889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.685" endtime="20201029 12:43:45.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.692" endtime="20201029 12:43:45.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.376" endtime="20201029 12:43:45.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.373" endtime="20201029 12:43:45.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:45.699" level="INFO">${PHILIP_RES} = [{'diff': 0.0015868609999999984}, {'diff': 0.0015869030000000006}, {'diff': 0.001586889000000001}, {'diff': 0.0015868889999999941}, {'diff': 0.001586889000000001}, {'diff': 0.0015868750000000015}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:45.696" endtime="20201029 12:43:45.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:45.703" level="INFO">${RESULT} = {'diff': [0.0015868609999999984, 0.0015869030000000006, 0.001586889000000001, 0.0015868889999999941, 0.001586889000000001, 0.0015868750000000015, 0.0015869020000000011, 0.001586889000000001, 0.0015868...</msg>
<status status="PASS" starttime="20201029 12:43:45.700" endtime="20201029 12:43:45.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.707" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:45.706" endtime="20201029 12:43:45.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.710" level="INFO">VALUE: [0.0015868609999999984, 0.0015869030000000006, 0.001586889000000001, 0.0015868889999999941, 0.001586889000000001, 0.0015868750000000015, 0.0015869020000000011, 0.001586889000000001, 0.001586889000000001, 0.001586889000000001, 0.0015868889999999941, 0.0015868750000000015, 0.001586861000000002, 0.0015868880000000016, 0.0015868479999999949, 0.001636472, 0.001586889000000001, 0.001586889000000001, 0.0015869170000000002, 0.001586889000000008, 0.0015868889999999941, 0.0015869579999999994, 0.0015868480000000018, 0.0015868750000000015, 0.0015869030000000006, 0.0015869169999999932, 0.0015868879999999946, 0.0015869019999999873, 0.001586889000000008, 0.001586889000000008, 0.0015869170000000071, 0.0015868889999999941, 0.0015869030000000006, 0.0015868750000000015, 0.0015869030000000006, 0.0016164720000000077, 0.001586889000000008, 0.001586889000000008, 0.0015868889999999941, 0.0015868750000000015, 0.0015868889999999941, 0.0015868750000000015, 0.001586860999999995, 0.0015869030000000006, 0.001586889000000008, 0.0015868889999999941, 0.0015868750000000015, 0.001586889000000008, 0.0015868750000000015, 0.0015868749999999876]</msg>
<status status="PASS" starttime="20201029 12:43:45.708" endtime="20201029 12:43:45.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.704" endtime="20201029 12:43:45.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.247" endtime="20201029 12:43:45.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.221" endtime="20201029 12:43:45.711"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:45.714" endtime="20201029 12:43:45.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.712" endtime="20201029 12:43:45.734"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.742" endtime="20201029 12:43:45.837"></status>
</kw>
<msg timestamp="20201029 12:43:45.837" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.740" endtime="20201029 12:43:45.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.840" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.838" endtime="20201029 12:43:45.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.841" endtime="20201029 12:43:45.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.738" endtime="20201029 12:43:45.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.736" endtime="20201029 12:43:45.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.851" endtime="20201029 12:43:46.139"></status>
</kw>
<msg timestamp="20201029 12:43:46.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017649667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019295986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.849" endtime="20201029 12:43:46.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017649667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019295986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.143" endtime="20201029 12:43:46.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.151" endtime="20201029 12:43:46.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.847" endtime="20201029 12:43:46.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.845" endtime="20201029 12:43:46.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:46.163" level="INFO">${PHILIP_RES} = [{'diff': 0.0016463190000000003}, {'diff': 0.0016463329999999998}, {'diff': 0.0016463199999999997}, {'diff': 0.0016463199999999997}, {'diff': 0.0016906390000000007}, {'diff': 0.0016463470000000029}, {...</msg>
<status status="PASS" starttime="20201029 12:43:46.156" endtime="20201029 12:43:46.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:46.171" level="INFO">${RESULT} = {'diff': [0.0016463190000000003, 0.0016463329999999998, 0.0016463199999999997, 0.0016463199999999997, 0.0016906390000000007, 0.0016463470000000029, 0.0016463329999999998, 0.001646346999999996, 0.00164...</msg>
<status status="PASS" starttime="20201029 12:43:46.165" endtime="20201029 12:43:46.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.180" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:46.178" endtime="20201029 12:43:46.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.185" level="INFO">VALUE: [0.0016463190000000003, 0.0016463329999999998, 0.0016463199999999997, 0.0016463199999999997, 0.0016906390000000007, 0.0016463470000000029, 0.0016463329999999998, 0.001646346999999996, 0.0016463199999999997, 0.0016463339999999993, 0.0016463190000000003, 0.0016463469999999994, 0.0016463329999999998, 0.0016463190000000003, 0.0016463469999999994, 0.0016462640000000014, 0.0016463469999999994, 0.0016463339999999993, 0.0016463339999999993, 0.0016463329999999998, 0.0016463329999999998, 0.0016463339999999993, 0.0016463199999999997, 0.0016818609999999998, 0.0016463339999999993, 0.0016463329999999998, 0.0016463329999999998, 0.0016463329999999998, 0.0016463329999999998, 0.0016463339999999993, 0.0016463329999999998, 0.0016463329999999998, 0.0016463339999999993, 0.0016463339999999993, 0.001646388999999998, 0.001646360999999999, 0.0016463329999999998, 0.0016463480000000058, 0.0016463329999999998, 0.0016463329999999998, 0.0016462770000000015, 0.0016463339999999993, 0.0016678610000000066, 0.0016463199999999928, 0.0016463339999999993, 0.0016462919999999936, 0.0016463329999999998, 0.0016463329999999998, 0.0016463339999999993, 0.0016463469999999925]</msg>
<status status="PASS" starttime="20201029 12:43:46.183" endtime="20201029 12:43:46.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.173" endtime="20201029 12:43:46.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.734" endtime="20201029 12:43:46.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.712" endtime="20201029 12:43:46.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.350" endtime="20201029 12:43:46.191"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:24.061" endtime="20201029 12:43:46.192" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:43:03.306" endtime="20201029 12:43:46.213"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.307" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:46.315" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:43:47.441" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:46.305" endtime="20201029 12:43:47.442"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.445" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:43:47.443" endtime="20201029 12:43:47.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.304" endtime="20201029 12:43:47.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:47.448" endtime="20201029 12:43:47.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.446" endtime="20201029 12:43:47.640"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.652" endtime="20201029 12:43:47.666"></status>
</kw>
<msg timestamp="20201029 12:43:47.667" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.650" endtime="20201029 12:43:47.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.669" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.668" endtime="20201029 12:43:47.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.673" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:47.671" endtime="20201029 12:43:47.674"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:47.648" endtime="20201029 12:43:47.675"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:47.646" endtime="20201029 12:43:47.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.645" endtime="20201029 12:43:47.677"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:47.687" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:47.686" endtime="20201029 12:43:47.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.679" endtime="20201029 12:43:47.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.644" endtime="20201029 12:43:47.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.643" endtime="20201029 12:43:47.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.691" endtime="20201029 12:43:47.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.642" endtime="20201029 12:43:47.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.696" endtime="20201029 12:43:47.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.640" endtime="20201029 12:43:47.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.303" endtime="20201029 12:43:47.701"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:47.713" endtime="20201029 12:43:47.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.710" endtime="20201029 12:43:47.736"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.764" endtime="20201029 12:43:47.780"></status>
</kw>
<msg timestamp="20201029 12:43:47.780" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.761" endtime="20201029 12:43:47.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.783" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.781" endtime="20201029 12:43:47.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.786" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:47.784" endtime="20201029 12:43:47.786"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:47.756" endtime="20201029 12:43:47.787"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:47.750" endtime="20201029 12:43:47.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.748" endtime="20201029 12:43:47.788"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:47.791" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:47.791" endtime="20201029 12:43:47.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.789" endtime="20201029 12:43:47.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.746" endtime="20201029 12:43:47.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.745" endtime="20201029 12:43:47.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.793" endtime="20201029 12:43:47.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.742" endtime="20201029 12:43:47.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.738" endtime="20201029 12:43:47.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.708" endtime="20201029 12:43:47.796"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.806" endtime="20201029 12:43:47.821"></status>
</kw>
<msg timestamp="20201029 12:43:47.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.805" endtime="20201029 12:43:47.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.823" endtime="20201029 12:43:47.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.825" endtime="20201029 12:43:47.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.801" endtime="20201029 12:43:47.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.799" endtime="20201029 12:43:47.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.834" endtime="20201029 12:43:48.125"></status>
</kw>
<msg timestamp="20201029 12:43:48.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.085293167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.085297236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.833" endtime="20201029 12:43:48.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.085293167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.085297236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.130" endtime="20201029 12:43:48.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.138" endtime="20201029 12:43:48.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.830" endtime="20201029 12:43:48.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.828" endtime="20201029 12:43:48.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.145" level="INFO">${RESULT} = [{'diff': 4.068999999995437e-06}, {'diff': 4.666999999999866e-06}, {'diff': 4.666999999999866e-06}, {'diff': 4.721999999998672e-06}, {'diff': 4.6810000000063745e-06}, {'diff': 4.0549999999889286e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:48.141" endtime="20201029 12:43:48.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:48.149" level="INFO">${ACCURACY} = {'diff': [4.068999999995437e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.721999999998672e-06, 4.6810000000063745e-06, 4.0549999999889286e-06, 4.05600000000228e-06, 4.666000000000392e-06, 4.681...</msg>
<status status="PASS" starttime="20201029 12:43:48.146" endtime="20201029 12:43:48.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.154" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 12:43:48.153" endtime="20201029 12:43:48.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.157" level="INFO">VALUE: [4.068999999995437e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.721999999998672e-06, 4.6810000000063745e-06, 4.0549999999889286e-06, 4.05600000000228e-06, 4.666000000000392e-06, 4.6810000000063745e-06, 4.625000000008095e-06, 4.666999999999866e-06, 4.0549999999889286e-06, 4.737000000004654e-06, 4.653000000007235e-06, 4.041999999995771e-06, 4.069000000009315e-06, 4.068999999995437e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.05600000000228e-06, 4.05600000000228e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.083000000001946e-06, 4.6810000000063745e-06, 4.666999999999866e-06, 4.055000000002806e-06, 4.666000000000392e-06, 4.652999999993357e-06, 4.666999999999866e-06, 4.651999999993883e-06, 4.7360000000051805e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.680999999992497e-06, 4.6810000000063745e-06, 4.695000000012883e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.069999999994911e-06, 4.05600000000228e-06, 4.08400000000142e-06, 4.055999999988402e-06, 4.042000000009649e-06, 4.055000000002806e-06, 4.070000000008789e-06, 4.666999999999866e-06, 4.070000000008789e-06, 4.652000000007761e-06, 4.666999999999866e-06]</msg>
<status status="PASS" starttime="20201029 12:43:48.155" endtime="20201029 12:43:48.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.150" endtime="20201029 12:43:48.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.161" endtime="20201029 12:43:48.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.160" endtime="20201029 12:43:48.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.159" endtime="20201029 12:43:48.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.797" endtime="20201029 12:43:48.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.797" endtime="20201029 12:43:48.182"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.191" endtime="20201029 12:43:48.206"></status>
</kw>
<msg timestamp="20201029 12:43:48.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.189" endtime="20201029 12:43:48.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.208" endtime="20201029 12:43:48.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.212" endtime="20201029 12:43:48.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.187" endtime="20201029 12:43:48.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.184" endtime="20201029 12:43:48.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.226" endtime="20201029 12:43:48.513"></status>
</kw>
<msg timestamp="20201029 12:43:48.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022058333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022063597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.223" endtime="20201029 12:43:48.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022058333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022063597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.518" endtime="20201029 12:43:48.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.526" endtime="20201029 12:43:48.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.220" endtime="20201029 12:43:48.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.217" endtime="20201029 12:43:48.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.532" level="INFO">${RESULT} = [{'diff': 5.264000000001351e-06}, {'diff': 5.235999999998742e-06}, {'diff': 5.264000000001351e-06}, {'diff': 5.306000000000061e-06}, {'diff': 5.9589999999998255e-06}, {'diff': 5.8889999999985065e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:48.529" endtime="20201029 12:43:48.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:48.539" level="INFO">${ACCURACY} = {'diff': [5.264000000001351e-06, 5.235999999998742e-06, 5.264000000001351e-06, 5.306000000000061e-06, 5.9589999999998255e-06, 5.8889999999985065e-06, 5.875000000002406e-06, 5.306000000000061e-06, 5.19...</msg>
<status status="PASS" starttime="20201029 12:43:48.533" endtime="20201029 12:43:48.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.545" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 12:43:48.543" endtime="20201029 12:43:48.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.549" level="INFO">VALUE: [5.264000000001351e-06, 5.235999999998742e-06, 5.264000000001351e-06, 5.306000000000061e-06, 5.9589999999998255e-06, 5.8889999999985065e-06, 5.875000000002406e-06, 5.306000000000061e-06, 5.194000000000032e-06, 5.889000000001976e-06, 5.2639999999978815e-06, 5.276999999997978e-06, 5.277000000001447e-06, 5.319000000000157e-06, 5.2639999999978815e-06, 5.277000000001447e-06, 5.889000000001976e-06, 5.278000000000921e-06, 5.277999999997451e-06, 5.8889999999985065e-06, 5.8889999999985065e-06, 5.889000000001976e-06, 5.278000000000921e-06, 5.8889999999985065e-06, 5.889000000001976e-06, 5.292000000000491e-06, 5.305000000000587e-06, 5.8889999999985065e-06, 5.875000000002406e-06, 5.874999999998937e-06, 5.180000000000462e-06, 5.874999999998937e-06, 5.306000000000061e-06, 4.679999999999962e-06, 5.264000000001351e-06, 5.874999999998937e-06, 5.276999999997978e-06, 4.666999999999866e-06, 5.264000000001351e-06, 5.875000000002406e-06, 5.277999999997451e-06, 5.901999999998603e-06, 5.264000000001351e-06, 5.875000000002406e-06, 5.276999999997978e-06, 5.278000000000921e-06, 5.874999999998937e-06, 5.3339999999992005e-06, 5.875000000002406e-06, 5.291999999997021e-06]</msg>
<status status="PASS" starttime="20201029 12:43:48.546" endtime="20201029 12:43:48.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.540" endtime="20201029 12:43:48.550"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.555" endtime="20201029 12:43:48.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.553" endtime="20201029 12:43:48.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.551" endtime="20201029 12:43:48.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.183" endtime="20201029 12:43:48.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.182" endtime="20201029 12:43:48.576"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.584" endtime="20201029 12:43:48.599"></status>
</kw>
<msg timestamp="20201029 12:43:48.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.583" endtime="20201029 12:43:48.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.601" endtime="20201029 12:43:48.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.603" endtime="20201029 12:43:48.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.580" endtime="20201029 12:43:48.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.578" endtime="20201029 12:43:48.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.613" endtime="20201029 12:43:48.899"></status>
</kw>
<msg timestamp="20201029 12:43:48.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022091833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.611" endtime="20201029 12:43:48.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022091833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.903" endtime="20201029 12:43:48.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.911" endtime="20201029 12:43:48.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.609" endtime="20201029 12:43:48.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.607" endtime="20201029 12:43:48.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.918" level="INFO">${RESULT} = [{'diff': 5.847000000003266e-06}, {'diff': 5.846999999999797e-06}, {'diff': 7.069999999997911e-06}, {'diff': 6.459000000000326e-06}, {'diff': 6.472000000000422e-06}, {'diff': 5.874999999998937e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:48.915" endtime="20201029 12:43:48.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:48.922" level="INFO">${ACCURACY} = {'diff': [5.847000000003266e-06, 5.846999999999797e-06, 7.069999999997911e-06, 6.459000000000326e-06, 6.472000000000422e-06, 5.874999999998937e-06, 5.875000000002406e-06, 5.874999999998937e-06, 6.4719...</msg>
<status status="PASS" starttime="20201029 12:43:48.919" endtime="20201029 12:43:48.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.926" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 12:43:48.925" endtime="20201029 12:43:48.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.929" level="INFO">VALUE: [5.847000000003266e-06, 5.846999999999797e-06, 7.069999999997911e-06, 6.459000000000326e-06, 6.472000000000422e-06, 5.874999999998937e-06, 5.875000000002406e-06, 5.874999999998937e-06, 6.471999999996952e-06, 6.445000000000756e-06, 5.860999999999367e-06, 6.472000000000422e-06, 5.8889999999985065e-06, 6.485999999999992e-06, 6.485999999999992e-06, 5.875000000002406e-06, 5.874999999998937e-06, 7.083000000001477e-06, 6.472000000000422e-06, 7.069000000001907e-06, 5.860999999999367e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.485999999999992e-06, 5.931000000000686e-06, 6.472000000000422e-06, 6.499999999999562e-06, 5.8889999999985065e-06, 7.084000000000951e-06, 5.846999999999797e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.472000000000422e-06, 6.472000000000422e-06, 6.4729999999998955e-06, 6.4729999999998955e-06, 7.111000000000617e-06, 6.4729999999998955e-06, 6.459000000000326e-06, 5.8339999999997005e-06, 6.472000000000422e-06, 6.4729999999998955e-06, 6.429999999998243e-06, 5.860999999999367e-06, 5.874999999998937e-06, 5.874999999998937e-06, 6.459000000000326e-06, 6.459000000000326e-06, 7.111000000000617e-06]</msg>
<status status="PASS" starttime="20201029 12:43:48.927" endtime="20201029 12:43:48.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.923" endtime="20201029 12:43:48.930"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.933" endtime="20201029 12:43:48.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.932" endtime="20201029 12:43:48.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.931" endtime="20201029 12:43:48.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.577" endtime="20201029 12:43:48.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.576" endtime="20201029 12:43:48.955"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.968" endtime="20201029 12:43:48.983"></status>
</kw>
<msg timestamp="20201029 12:43:48.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.965" endtime="20201029 12:43:48.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.984" endtime="20201029 12:43:48.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.987" endtime="20201029 12:43:48.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.961" endtime="20201029 12:43:48.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.958" endtime="20201029 12:43:48.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.996" endtime="20201029 12:43:49.281"></status>
</kw>
<msg timestamp="20201029 12:43:49.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026832611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026839694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.995" endtime="20201029 12:43:49.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026832611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026839694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.286" endtime="20201029 12:43:49.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.294" endtime="20201029 12:43:49.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.992" endtime="20201029 12:43:49.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.990" endtime="20201029 12:43:49.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:49.301" level="INFO">${RESULT} = [{'diff': 7.083000000001477e-06}, {'diff': 7.665999999999923e-06}, {'diff': 7.679999999999493e-06}, {'diff': 7.709000000001576e-06}, {'diff': 7.083000000001477e-06}, {'diff': 7.694999999998536e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:49.298" endtime="20201029 12:43:49.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:49.306" level="INFO">${ACCURACY} = {'diff': [7.083000000001477e-06, 7.665999999999923e-06, 7.679999999999493e-06, 7.709000000001576e-06, 7.083000000001477e-06, 7.694999999998536e-06, 7.0829999999980076e-06, 7.097000000001047e-06, 7.679...</msg>
<status status="PASS" starttime="20201029 12:43:49.302" endtime="20201029 12:43:49.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.310" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 12:43:49.309" endtime="20201029 12:43:49.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.313" level="INFO">VALUE: [7.083000000001477e-06, 7.665999999999923e-06, 7.679999999999493e-06, 7.709000000001576e-06, 7.083000000001477e-06, 7.694999999998536e-06, 7.0829999999980076e-06, 7.097000000001047e-06, 7.679999999999493e-06, 7.638999999996787e-06, 7.681000000002436e-06, 7.679999999999493e-06, 7.694999999998536e-06, 7.695000000002006e-06, 7.709000000001576e-06, 7.680999999998966e-06, 7.681000000002436e-06, 7.679999999999493e-06, 7.694000000002532e-06, 7.681000000002436e-06, 7.625000000000687e-06, 7.750000000000812e-06, 7.680999999998966e-06, 7.679999999999493e-06, 7.083999999997481e-06, 7.0829999999980076e-06, 7.0829999999980076e-06, 7.666999999999397e-06, 7.709000000001576e-06, 7.680999999998966e-06, 7.708999999998106e-06, 7.054999999998868e-06, 7.0829999999980076e-06, 7.0829999999980076e-06, 7.083000000001477e-06, 7.084000000000951e-06, 7.068999999998438e-06, 7.707999999998633e-06, 7.708000000002102e-06, 7.693999999999063e-06, 7.679999999999493e-06, 7.625000000000687e-06, 7.679999999999493e-06, 7.1529999999993266e-06, 7.652999999999827e-06, 7.0829999999980076e-06, 7.694999999998536e-06, 7.652999999999827e-06, 7.083000000001477e-06, 7.666999999999397e-06]</msg>
<status status="PASS" starttime="20201029 12:43:49.311" endtime="20201029 12:43:49.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.307" endtime="20201029 12:43:49.315"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:49.318" endtime="20201029 12:43:49.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.317" endtime="20201029 12:43:49.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.316" endtime="20201029 12:43:49.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.956" endtime="20201029 12:43:49.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.955" endtime="20201029 12:43:49.339"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.348" endtime="20201029 12:43:49.362"></status>
</kw>
<msg timestamp="20201029 12:43:49.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.346" endtime="20201029 12:43:49.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.364" endtime="20201029 12:43:49.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.366" endtime="20201029 12:43:49.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.344" endtime="20201029 12:43:49.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.341" endtime="20201029 12:43:49.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.376" endtime="20201029 12:43:49.661"></status>
</kw>
<msg timestamp="20201029 12:43:49.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022265903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.374" endtime="20201029 12:43:49.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022265903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.666" endtime="20201029 12:43:49.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.674" endtime="20201029 12:43:49.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.371" endtime="20201029 12:43:49.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.370" endtime="20201029 12:43:49.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:49.680" level="INFO">${RESULT} = [{'diff': 8.889000000001507e-06}, {'diff': 8.291000000000548e-06}, {'diff': 8.292000000000022e-06}, {'diff': 8.221999999998703e-06}, {'diff': 8.236000000001742e-06}, {'diff': 8.305999999999591e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:49.677" endtime="20201029 12:43:49.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:49.685" level="INFO">${ACCURACY} = {'diff': [8.889000000001507e-06, 8.291000000000548e-06, 8.292000000000022e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.305999999999591e-06, 8.276999999997509e-06, 8.291000000000548e-06, 8.9030...</msg>
<status status="PASS" starttime="20201029 12:43:49.681" endtime="20201029 12:43:49.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.690" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 12:43:49.689" endtime="20201029 12:43:49.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.692" level="INFO">VALUE: [8.889000000001507e-06, 8.291000000000548e-06, 8.292000000000022e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.305999999999591e-06, 8.276999999997509e-06, 8.291000000000548e-06, 8.903000000001077e-06, 8.860999999998898e-06, 8.887999999998564e-06, 8.917000000000647e-06, 8.917000000000647e-06, 8.917000000000647e-06, 8.250000000001312e-06, 8.291000000000548e-06, 8.888999999998037e-06, 8.292000000000022e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.292000000000022e-06, 8.346999999998828e-06, 7.707999999998633e-06, 8.903000000001077e-06, 7.680999999998966e-06, 8.264000000000882e-06, 8.887999999998564e-06, 8.903000000001077e-06, 8.277000000000978e-06, 8.305000000000118e-06, 8.902999999997607e-06, 8.292000000000022e-06, 8.277000000000978e-06, 8.292000000000022e-06, 8.292000000000022e-06, 8.291000000000548e-06, 8.931000000000217e-06, 8.901999999998134e-06, 8.264000000000882e-06, 8.290999999997078e-06, 8.292000000000022e-06, 7.694000000002532e-06, 8.901999999998134e-06, 8.889000000001507e-06, 8.277000000000978e-06, 8.292000000000022e-06, 7.695000000002006e-06, 8.277999999996982e-06, 8.903000000001077e-06, 8.971999999999453e-06]</msg>
<status status="PASS" starttime="20201029 12:43:49.691" endtime="20201029 12:43:49.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.686" endtime="20201029 12:43:49.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:49.697" endtime="20201029 12:43:49.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.695" endtime="20201029 12:43:49.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.694" endtime="20201029 12:43:49.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.340" endtime="20201029 12:43:49.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.339" endtime="20201029 12:43:49.717"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.727" endtime="20201029 12:43:49.741"></status>
</kw>
<msg timestamp="20201029 12:43:49.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.725" endtime="20201029 12:43:49.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.743" endtime="20201029 12:43:49.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.745" endtime="20201029 12:43:49.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.722" endtime="20201029 12:43:49.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.720" endtime="20201029 12:43:49.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.754" endtime="20201029 12:43:50.042"></status>
</kw>
<msg timestamp="20201029 12:43:50.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.753" endtime="20201029 12:43:50.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.047" endtime="20201029 12:43:50.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.055" endtime="20201029 12:43:50.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.750" endtime="20201029 12:43:50.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.749" endtime="20201029 12:43:50.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:50.061" level="INFO">${RESULT} = [{'diff': 9.499999999999093e-06}, {'diff': 9.500000000002562e-06}, {'diff': 8.930000000000743e-06}, {'diff': 8.916000000001173e-06}, {'diff': 8.902999999997607e-06}, {'diff': 9.485999999999523e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:50.058" endtime="20201029 12:43:50.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:50.065" level="INFO">${ACCURACY} = {'diff': [9.499999999999093e-06, 9.500000000002562e-06, 8.930000000000743e-06, 8.916000000001173e-06, 8.902999999997607e-06, 9.485999999999523e-06, 9.569999999996942e-06, 9.499999999999093e-06, 9.4999...</msg>
<status status="PASS" starttime="20201029 12:43:50.062" endtime="20201029 12:43:50.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.070" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 12:43:50.069" endtime="20201029 12:43:50.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.072" level="INFO">VALUE: [9.499999999999093e-06, 9.500000000002562e-06, 8.930000000000743e-06, 8.916000000001173e-06, 8.902999999997607e-06, 9.485999999999523e-06, 9.569999999996942e-06, 9.499999999999093e-06, 9.499999999999093e-06, 8.888999999998037e-06, 9.540999999998329e-06, 8.875000000001937e-06, 9.499999999999093e-06, 9.485999999999523e-06, 9.514000000002132e-06, 8.860999999998898e-06, 8.901999999998134e-06, 1.0111999999999621e-05, 9.499999999999093e-06, 8.889000000001507e-06, 8.917000000000647e-06, 9.485999999999523e-06, 8.917000000000647e-06, 9.555000000001368e-06, 9.444000000000813e-06, 9.499999999999093e-06, 8.889000000001507e-06, 8.888999999998037e-06, 9.500000000002562e-06, 9.485999999999523e-06, 8.861999999998371e-06, 9.513999999998662e-06, 9.554999999997899e-06, 9.485999999999523e-06, 9.499999999999093e-06, 9.542000000001272e-06, 8.903000000001077e-06, 9.499999999999093e-06, 9.485999999999523e-06, 1.0097000000000578e-05, 9.499999999999093e-06, 9.513999999998662e-06, 9.485999999999523e-06, 8.833999999999231e-06, 9.499999999999093e-06, 8.888000000002033e-06, 9.485999999999523e-06, 9.526999999998759e-06, 9.499999999999093e-06, 9.499999999999093e-06]</msg>
<status status="PASS" starttime="20201029 12:43:50.071" endtime="20201029 12:43:50.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.066" endtime="20201029 12:43:50.073"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:50.077" endtime="20201029 12:43:50.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.075" endtime="20201029 12:43:50.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.074" endtime="20201029 12:43:50.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.718" endtime="20201029 12:43:50.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.718" endtime="20201029 12:43:50.105"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.114" endtime="20201029 12:43:50.130"></status>
</kw>
<msg timestamp="20201029 12:43:50.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.113" endtime="20201029 12:43:50.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.132" endtime="20201029 12:43:50.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.134" endtime="20201029 12:43:50.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.110" endtime="20201029 12:43:50.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.108" endtime="20201029 12:43:50.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.143" endtime="20201029 12:43:50.428"></status>
</kw>
<msg timestamp="20201029 12:43:50.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030894611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030904708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.142" endtime="20201029 12:43:50.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030894611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030904708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.433" endtime="20201029 12:43:50.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.441" endtime="20201029 12:43:50.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.139" endtime="20201029 12:43:50.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.137" endtime="20201029 12:43:50.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:50.447" level="INFO">${RESULT} = [{'diff': 1.0097000000000578e-05}, {'diff': 1.0111000000000148e-05}, {'diff': 1.0721999999997733e-05}, {'diff': 1.0111000000000148e-05}, {'diff': 1.0111000000000148e-05}, {'diff': 1.0097000000000578e-...</msg>
<status status="PASS" starttime="20201029 12:43:50.444" endtime="20201029 12:43:50.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:50.451" level="INFO">${ACCURACY} = {'diff': [1.0097000000000578e-05, 1.0111000000000148e-05, 1.0721999999997733e-05, 1.0111000000000148e-05, 1.0111000000000148e-05, 1.0097000000000578e-05, 1.0111000000000148e-05, 1.0098000000000051e-05...</msg>
<status status="PASS" starttime="20201029 12:43:50.448" endtime="20201029 12:43:50.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.456" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 12:43:50.455" endtime="20201029 12:43:50.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.459" level="INFO">VALUE: [1.0097000000000578e-05, 1.0111000000000148e-05, 1.0721999999997733e-05, 1.0111000000000148e-05, 1.0111000000000148e-05, 1.0097000000000578e-05, 1.0111000000000148e-05, 1.0098000000000051e-05, 1.0721999999997733e-05, 1.0151999999999384e-05, 1.0124999999999718e-05, 1.0694999999998067e-05, 1.0652999999999357e-05, 1.0111000000000148e-05, 1.0709000000001107e-05, 1.0124999999999718e-05, 1.0111000000000148e-05, 1.0083000000001008e-05, 1.0083000000001008e-05, 1.0694999999998067e-05, 1.0707999999998163e-05, 1.0138999999999287e-05, 1.0097000000000578e-05, 1.0111000000000148e-05, 1.0097000000000578e-05, 1.0111000000000148e-05, 1.0124999999999718e-05, 1.0111000000000148e-05, 1.0042000000001772e-05, 1.0707999999998163e-05, 1.0111000000000148e-05, 1.0069000000001438e-05, 1.0097000000000578e-05, 1.0707999999998163e-05, 1.0124999999999718e-05, 1.0111000000000148e-05, 1.0124999999999718e-05, 1.0083000000001008e-05, 1.0708999999997637e-05, 1.0722000000004672e-05, 1.0707999999998163e-05, 1.0708000000005102e-05, 1.0693999999998594e-05, 1.0707999999998163e-05, 1.0096999999993639e-05, 1.0665999999999454e-05, 1.0721999999997733e-05, 1.0124999999999718e-05, 1.0083000000001008e-05, 1.0097000000000578e-05]</msg>
<status status="PASS" starttime="20201029 12:43:50.457" endtime="20201029 12:43:50.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.452" endtime="20201029 12:43:50.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:50.465" endtime="20201029 12:43:50.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.463" endtime="20201029 12:43:50.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.462" endtime="20201029 12:43:50.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.106" endtime="20201029 12:43:50.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.106" endtime="20201029 12:43:50.485"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.494" endtime="20201029 12:43:50.509"></status>
</kw>
<msg timestamp="20201029 12:43:50.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.492" endtime="20201029 12:43:50.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.510" endtime="20201029 12:43:50.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.513" endtime="20201029 12:43:50.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.490" endtime="20201029 12:43:50.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.488" endtime="20201029 12:43:50.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.522" endtime="20201029 12:43:50.807"></status>
</kw>
<msg timestamp="20201029 12:43:50.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021792292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021803, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:50.520" endtime="20201029 12:43:50.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021792292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021803, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:50.811" endtime="20201029 12:43:50.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.819" endtime="20201029 12:43:50.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.518" endtime="20201029 12:43:50.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.516" endtime="20201029 12:43:50.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:50.826" level="INFO">${RESULT} = [{'diff': 1.0707999999998163e-05}, {'diff': 1.1305999999999122e-05}, {'diff': 1.0707999999998163e-05}, {'diff': 1.1917000000000177e-05}, {'diff': 1.1291999999999552e-05}, {'diff': 1.1917000000000177e-...</msg>
<status status="PASS" starttime="20201029 12:43:50.822" endtime="20201029 12:43:50.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:50.830" level="INFO">${ACCURACY} = {'diff': [1.0707999999998163e-05, 1.1305999999999122e-05, 1.0707999999998163e-05, 1.1917000000000177e-05, 1.1291999999999552e-05, 1.1917000000000177e-05, 1.1318999999999219e-05, 1.1305999999999122e-05...</msg>
<status status="PASS" starttime="20201029 12:43:50.827" endtime="20201029 12:43:50.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.835" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 12:43:50.834" endtime="20201029 12:43:50.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.838" level="INFO">VALUE: [1.0707999999998163e-05, 1.1305999999999122e-05, 1.0707999999998163e-05, 1.1917000000000177e-05, 1.1291999999999552e-05, 1.1917000000000177e-05, 1.1318999999999219e-05, 1.1305999999999122e-05, 1.1332999999998788e-05, 1.1319000000002688e-05, 1.1305999999999122e-05, 1.1319000000002688e-05, 1.1916000000000704e-05, 1.1318999999999219e-05, 1.1277999999999982e-05, 1.1917000000000177e-05, 1.1319999999998692e-05, 1.1320000000002162e-05, 1.1943999999999844e-05, 1.1889000000001038e-05, 1.1305999999999122e-05, 1.1333000000002258e-05, 1.1250000000000843e-05, 1.1930999999999747e-05, 1.1930999999999747e-05, 1.1348000000001301e-05, 1.1332999999998788e-05, 1.1332999999998788e-05, 1.1902000000001134e-05, 1.1861000000001898e-05, 1.1332999999998788e-05, 1.1875000000001468e-05, 1.1305999999999122e-05, 1.1388999999997068e-05, 1.1305999999999122e-05, 1.1930000000000274e-05, 1.1291000000000079e-05, 1.0694000000002063e-05, 1.1305999999999122e-05, 1.1250000000000843e-05, 1.1318999999999219e-05, 1.1917000000000177e-05, 1.1304999999999649e-05, 1.1930000000000274e-05, 1.1304999999999649e-05, 1.1318999999999219e-05, 1.1957999999999414e-05, 1.1305999999999122e-05, 1.1319999999998692e-05, 1.0638999999999788e-05]</msg>
<status status="PASS" starttime="20201029 12:43:50.836" endtime="20201029 12:43:50.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.831" endtime="20201029 12:43:50.839"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:50.843" endtime="20201029 12:43:50.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.841" endtime="20201029 12:43:50.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.840" endtime="20201029 12:43:50.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.486" endtime="20201029 12:43:50.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.486" endtime="20201029 12:43:50.863"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.872" endtime="20201029 12:43:50.886"></status>
</kw>
<msg timestamp="20201029 12:43:50.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.870" endtime="20201029 12:43:50.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.888" endtime="20201029 12:43:50.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.890" endtime="20201029 12:43:50.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.868" endtime="20201029 12:43:50.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.866" endtime="20201029 12:43:50.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.899" endtime="20201029 12:43:51.188"></status>
</kw>
<msg timestamp="20201029 12:43:51.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021750736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.898" endtime="20201029 12:43:51.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021750736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.192" endtime="20201029 12:43:51.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.200" endtime="20201029 12:43:51.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.895" endtime="20201029 12:43:51.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.894" endtime="20201029 12:43:51.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.207" level="INFO">${RESULT} = [{'diff': 1.2513999999998193e-05}, {'diff': 1.1930999999999747e-05}, {'diff': 1.2527999999997763e-05}, {'diff': 1.2514000000001663e-05}, {'diff': 1.2514000000001663e-05}, {'diff': 1.1916000000000704e-...</msg>
<status status="PASS" starttime="20201029 12:43:51.204" endtime="20201029 12:43:51.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:51.211" level="INFO">${ACCURACY} = {'diff': [1.2513999999998193e-05, 1.1930999999999747e-05, 1.2527999999997763e-05, 1.2514000000001663e-05, 1.2514000000001663e-05, 1.1916000000000704e-05, 1.2527000000001759e-05, 1.1903000000000608e-05...</msg>
<status status="PASS" starttime="20201029 12:43:51.208" endtime="20201029 12:43:51.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.216" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 12:43:51.215" endtime="20201029 12:43:51.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.218" level="INFO">VALUE: [1.2513999999998193e-05, 1.1930999999999747e-05, 1.2527999999997763e-05, 1.2514000000001663e-05, 1.2514000000001663e-05, 1.1916000000000704e-05, 1.2527000000001759e-05, 1.1903000000000608e-05, 1.2583000000000039e-05, 1.1916000000000704e-05, 1.2569000000000469e-05, 1.2458999999999387e-05, 1.2444999999999817e-05, 1.2514000000001663e-05, 1.1916999999996708e-05, 1.3112000000002622e-05, 1.2499999999998623e-05, 1.2431000000000247e-05, 1.2527999999997763e-05, 1.2527000000001759e-05, 1.2527999999997763e-05, 1.2514000000001663e-05, 1.2513999999998193e-05, 1.2583999999999512e-05, 1.251299999999872e-05, 1.2485999999999053e-05, 1.2528000000001233e-05, 1.1917000000000177e-05, 1.2514000000001663e-05, 1.1930000000000274e-05, 1.2513999999998193e-05, 1.2514000000001663e-05, 1.2444999999999817e-05, 1.1917000000000177e-05, 1.1999999999998123e-05, 1.3111000000003148e-05, 1.2527999999997763e-05, 1.1917000000000177e-05, 1.1916000000000704e-05, 1.2528000000001233e-05, 1.251299999999872e-05, 1.1888999999997568e-05, 1.1915999999997234e-05, 1.1917000000000177e-05, 1.1902000000001134e-05, 1.1917000000000177e-05, 1.1971999999998983e-05, 1.2528000000001233e-05, 1.2542000000000803e-05, 1.254099999999786e-05]</msg>
<status status="PASS" starttime="20201029 12:43:51.217" endtime="20201029 12:43:51.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.212" endtime="20201029 12:43:51.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.223" endtime="20201029 12:43:51.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.221" endtime="20201029 12:43:51.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.220" endtime="20201029 12:43:51.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.864" endtime="20201029 12:43:51.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.864" endtime="20201029 12:43:51.244"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.252" endtime="20201029 12:43:51.268"></status>
</kw>
<msg timestamp="20201029 12:43:51.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.251" endtime="20201029 12:43:51.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.270" endtime="20201029 12:43:51.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.272" endtime="20201029 12:43:51.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.248" endtime="20201029 12:43:51.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.246" endtime="20201029 12:43:51.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.281" endtime="20201029 12:43:51.570"></status>
</kw>
<msg timestamp="20201029 12:43:51.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022649986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.280" endtime="20201029 12:43:51.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022649986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.575" endtime="20201029 12:43:51.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.586" endtime="20201029 12:43:51.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.277" endtime="20201029 12:43:51.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.276" endtime="20201029 12:43:51.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.595" level="INFO">${RESULT} = [{'diff': 1.3110999999999678e-05}, {'diff': 1.3139000000002288e-05}, {'diff': 1.3736000000000304e-05}, {'diff': 1.3694000000001594e-05}, {'diff': 1.3125000000002718e-05}, {'diff': 1.3722000000000734e-...</msg>
<status status="PASS" starttime="20201029 12:43:51.591" endtime="20201029 12:43:51.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:51.601" level="INFO">${ACCURACY} = {'diff': [1.3110999999999678e-05, 1.3139000000002288e-05, 1.3736000000000304e-05, 1.3694000000001594e-05, 1.3125000000002718e-05, 1.3722000000000734e-05, 1.3736000000000304e-05, 1.3124999999999248e-05...</msg>
<status status="PASS" starttime="20201029 12:43:51.597" endtime="20201029 12:43:51.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.607" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 12:43:51.606" endtime="20201029 12:43:51.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.610" level="INFO">VALUE: [1.3110999999999678e-05, 1.3139000000002288e-05, 1.3736000000000304e-05, 1.3694000000001594e-05, 1.3125000000002718e-05, 1.3722000000000734e-05, 1.3736000000000304e-05, 1.3124999999999248e-05, 1.3138999999998818e-05, 1.3124999999999248e-05, 1.3723000000000207e-05, 1.3124999999999248e-05, 1.3110999999999678e-05, 1.3709000000000637e-05, 1.3736000000000304e-05, 1.3723000000000207e-05, 1.3124999999999248e-05, 1.3707999999997694e-05, 1.3736000000000304e-05, 1.3666999999998458e-05, 1.3111999999999152e-05, 1.3707999999997694e-05, 1.3124999999999248e-05, 1.3791000000002579e-05, 1.3124999999999248e-05, 1.3152999999998388e-05, 1.3124999999999248e-05, 1.3749999999999873e-05, 1.3139000000002288e-05, 1.3749999999999873e-05, 1.3110999999999678e-05, 1.3723000000000207e-05, 1.3124999999999248e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.3124999999999248e-05, 1.3166000000001954e-05, 1.3124999999999248e-05, 1.3722000000000734e-05, 1.3125000000002718e-05, 1.3181000000000997e-05, 1.3125000000002718e-05, 1.3097000000000109e-05, 1.3736000000000304e-05, 1.3124999999999248e-05, 1.3166999999997958e-05, 1.3124999999999248e-05, 1.3138999999998818e-05, 1.3125000000002718e-05]</msg>
<status status="PASS" starttime="20201029 12:43:51.609" endtime="20201029 12:43:51.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.603" endtime="20201029 12:43:51.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.617" endtime="20201029 12:43:51.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.615" endtime="20201029 12:43:51.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.614" endtime="20201029 12:43:51.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.245" endtime="20201029 12:43:51.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.244" endtime="20201029 12:43:51.638"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.647" endtime="20201029 12:43:51.662"></status>
</kw>
<msg timestamp="20201029 12:43:51.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.645" endtime="20201029 12:43:51.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.664" endtime="20201029 12:43:51.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.667" endtime="20201029 12:43:51.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.642" endtime="20201029 12:43:51.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.640" endtime="20201029 12:43:51.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.676" endtime="20201029 12:43:51.962"></status>
</kw>
<msg timestamp="20201029 12:43:51.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022405917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022420278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.674" endtime="20201029 12:43:51.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022405917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022420278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.966" endtime="20201029 12:43:51.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.975" endtime="20201029 12:43:51.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.671" endtime="20201029 12:43:51.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.670" endtime="20201029 12:43:51.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.981" level="INFO">${RESULT} = [{'diff': 1.4360999999997459e-05}, {'diff': 1.4334000000001262e-05}, {'diff': 1.4334000000001262e-05}, {'diff': 1.4916000000000235e-05}, {'diff': 1.4334000000001262e-05}, {'diff': 1.433299999999832e-0...</msg>
<status status="PASS" starttime="20201029 12:43:51.978" endtime="20201029 12:43:51.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:51.986" level="INFO">${ACCURACY} = {'diff': [1.4360999999997459e-05, 1.4334000000001262e-05, 1.4334000000001262e-05, 1.4916000000000235e-05, 1.4334000000001262e-05, 1.433299999999832e-05, 1.4361999999996933e-05, 1.4943999999999374e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:51.982" endtime="20201029 12:43:51.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.991" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 12:43:51.990" endtime="20201029 12:43:51.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.993" level="INFO">VALUE: [1.4360999999997459e-05, 1.4334000000001262e-05, 1.4334000000001262e-05, 1.4916000000000235e-05, 1.4334000000001262e-05, 1.433299999999832e-05, 1.4361999999996933e-05, 1.4943999999999374e-05, 1.433299999999832e-05, 1.4944999999998848e-05, 1.4930999999999278e-05, 1.4916999999999708e-05, 1.434699999999789e-05, 1.4959000000001887e-05, 1.429099999999961e-05, 1.4347000000001359e-05, 1.4333000000001789e-05, 1.3763999999999443e-05, 1.4889000000000568e-05, 1.433299999999832e-05, 1.4320000000001692e-05, 1.4347000000001359e-05, 1.4348000000000832e-05, 1.4958000000002414e-05, 1.4347000000001359e-05, 1.4333999999997793e-05, 1.4334000000001262e-05, 1.4320000000001692e-05, 1.4361000000000929e-05, 1.4889000000000568e-05, 1.429099999999961e-05, 1.4943999999999374e-05, 1.4361000000000929e-05, 1.3736000000000304e-05, 1.3708000000001164e-05, 1.4319000000002219e-05, 1.3709000000000637e-05, 1.3750000000003343e-05, 1.4944000000002844e-05, 1.4320000000001692e-05, 1.433299999999832e-05, 1.4333999999997793e-05, 1.4320000000001692e-05, 1.433299999999832e-05, 1.4347000000001359e-05, 1.4292000000002553e-05, 1.3708000000001164e-05, 1.433299999999832e-05, 1.4347000000001359e-05, 1.4333000000001789e-05]</msg>
<status status="PASS" starttime="20201029 12:43:51.992" endtime="20201029 12:43:51.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.987" endtime="20201029 12:43:51.995"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.998" endtime="20201029 12:43:52.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.997" endtime="20201029 12:43:52.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.996" endtime="20201029 12:43:52.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.639" endtime="20201029 12:43:52.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.638" endtime="20201029 12:43:52.019"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.028" endtime="20201029 12:43:52.043"></status>
</kw>
<msg timestamp="20201029 12:43:52.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.026" endtime="20201029 12:43:52.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.044" endtime="20201029 12:43:52.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.047" endtime="20201029 12:43:52.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.023" endtime="20201029 12:43:52.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.021" endtime="20201029 12:43:52.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.056" endtime="20201029 12:43:52.342"></status>
</kw>
<msg timestamp="20201029 12:43:52.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02204375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022059292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:52.054" endtime="20201029 12:43:52.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02204375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022059292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:52.346" endtime="20201029 12:43:52.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.355" endtime="20201029 12:43:52.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.052" endtime="20201029 12:43:52.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.050" endtime="20201029 12:43:52.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:52.364" level="INFO">${RESULT} = [{'diff': 1.5542000000000333e-05}, {'diff': 1.6181000000000528e-05}, {'diff': 1.5528000000000763e-05}, {'diff': 1.554100000000086e-05}, {'diff': 1.4943999999999374e-05}, {'diff': 1.4943999999999374e-0...</msg>
<status status="PASS" starttime="20201029 12:43:52.360" endtime="20201029 12:43:52.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:52.368" level="INFO">${ACCURACY} = {'diff': [1.5542000000000333e-05, 1.6181000000000528e-05, 1.5528000000000763e-05, 1.554100000000086e-05, 1.4943999999999374e-05, 1.4943999999999374e-05, 1.5584000000002513e-05, 1.4931000000002748e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:52.365" endtime="20201029 12:43:52.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.372" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 12:43:52.371" endtime="20201029 12:43:52.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.375" level="INFO">VALUE: [1.5542000000000333e-05, 1.6181000000000528e-05, 1.5528000000000763e-05, 1.554100000000086e-05, 1.4943999999999374e-05, 1.4943999999999374e-05, 1.5584000000002513e-05, 1.4931000000002748e-05, 1.555500000000043e-05, 1.552700000000129e-05, 1.4930999999999278e-05, 1.5555999999999903e-05, 1.4903000000000138e-05, 1.612499999999878e-05, 1.4943999999999374e-05, 1.5542000000000333e-05, 1.552700000000129e-05, 1.5542000000000333e-05, 1.4916999999999708e-05, 1.615299999999792e-05, 1.5555999999999903e-05, 1.4930999999999278e-05, 1.5485999999998584e-05, 1.5569e-05, 1.558299999999957e-05, 1.5528000000000763e-05, 1.554100000000086e-05, 1.4929999999999805e-05, 1.4943999999999374e-05, 1.4943999999999374e-05, 1.5527999999997294e-05, 1.5555999999999903e-05, 1.5542000000000333e-05, 1.555500000000043e-05, 1.4944999999998848e-05, 1.5542000000000333e-05, 1.4929999999999805e-05, 1.5542000000000333e-05, 1.554100000000086e-05, 1.5514000000001194e-05, 1.5500000000001624e-05, 1.5555999999999903e-05, 1.5555999999999903e-05, 1.4903000000000138e-05, 1.4929999999999805e-05, 1.613900000000182e-05, 1.5542000000000333e-05, 1.5542000000000333e-05, 1.615300000000139e-05, 1.554100000000086e-05]</msg>
<status status="PASS" starttime="20201029 12:43:52.374" endtime="20201029 12:43:52.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.369" endtime="20201029 12:43:52.376"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:52.380" endtime="20201029 12:43:52.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.378" endtime="20201029 12:43:52.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.377" endtime="20201029 12:43:52.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.020" endtime="20201029 12:43:52.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.019" endtime="20201029 12:43:52.401"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.410" endtime="20201029 12:43:52.427"></status>
</kw>
<msg timestamp="20201029 12:43:52.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.408" endtime="20201029 12:43:52.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.428" endtime="20201029 12:43:52.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.431" endtime="20201029 12:43:52.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.405" endtime="20201029 12:43:52.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.403" endtime="20201029 12:43:52.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.440" endtime="20201029 12:43:52.724"></status>
</kw>
<msg timestamp="20201029 12:43:52.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023554431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023570583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.438" endtime="20201029 12:43:52.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023554431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023570583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.728" endtime="20201029 12:43:52.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.737" endtime="20201029 12:43:52.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.436" endtime="20201029 12:43:52.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.434" endtime="20201029 12:43:52.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:52.743" level="INFO">${RESULT} = [{'diff': 1.6151999999998445e-05}, {'diff': 1.6764000000002444e-05}, {'diff': 1.6166000000001485e-05}, {'diff': 1.6735999999999834e-05}, {'diff': 1.6749999999999404e-05}, {'diff': 1.615300000000139e-0...</msg>
<status status="PASS" starttime="20201029 12:43:52.740" endtime="20201029 12:43:52.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:52.747" level="INFO">${ACCURACY} = {'diff': [1.6151999999998445e-05, 1.6764000000002444e-05, 1.6166000000001485e-05, 1.6735999999999834e-05, 1.6749999999999404e-05, 1.615300000000139e-05, 1.615300000000139e-05, 1.611100000000268e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:43:52.744" endtime="20201029 12:43:52.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.752" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 12:43:52.751" endtime="20201029 12:43:52.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.754" level="INFO">VALUE: [1.6151999999998445e-05, 1.6764000000002444e-05, 1.6166000000001485e-05, 1.6735999999999834e-05, 1.6749999999999404e-05, 1.615300000000139e-05, 1.615300000000139e-05, 1.611100000000268e-05, 1.6097999999999113e-05, 1.6165999999998015e-05, 1.616700000000096e-05, 1.6750000000002874e-05, 1.613899999999835e-05, 1.613900000000182e-05, 1.6152000000001915e-05, 1.6763999999998974e-05, 1.615300000000139e-05, 1.615300000000139e-05, 1.6749999999999404e-05, 1.6764000000002444e-05, 1.612500000000225e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.6764000000002444e-05, 1.615300000000139e-05, 1.6749999999999404e-05, 1.613899999999835e-05, 1.615300000000139e-05, 1.611099999999921e-05, 1.6750000000002874e-05, 1.613900000000182e-05, 1.615299999999792e-05, 1.6151999999998445e-05, 1.6777999999998544e-05, 1.6152000000001915e-05, 1.6735999999999834e-05, 1.613900000000182e-05, 1.6195000000000098e-05, 1.615299999999792e-05, 1.612500000000225e-05, 1.6749999999999404e-05, 1.615299999999792e-05, 1.6181000000000528e-05, 1.6735999999999834e-05, 1.6750000000002874e-05, 1.6763999999998974e-05, 1.6749999999999404e-05, 1.6764000000002444e-05, 1.609699999999964e-05, 1.60829999999966e-05]</msg>
<status status="PASS" starttime="20201029 12:43:52.753" endtime="20201029 12:43:52.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.748" endtime="20201029 12:43:52.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:52.760" endtime="20201029 12:43:52.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.759" endtime="20201029 12:43:52.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.758" endtime="20201029 12:43:52.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.401" endtime="20201029 12:43:52.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.401" endtime="20201029 12:43:52.781"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.790" endtime="20201029 12:43:52.805"></status>
</kw>
<msg timestamp="20201029 12:43:52.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.788" endtime="20201029 12:43:52.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.806" endtime="20201029 12:43:52.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.809" endtime="20201029 12:43:52.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.785" endtime="20201029 12:43:52.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.783" endtime="20201029 12:43:52.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.818" endtime="20201029 12:43:53.103"></status>
</kw>
<msg timestamp="20201029 12:43:53.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.816" endtime="20201029 12:43:53.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.107" endtime="20201029 12:43:53.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.116" endtime="20201029 12:43:53.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.814" endtime="20201029 12:43:53.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.812" endtime="20201029 12:43:53.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:53.122" level="INFO">${RESULT} = [{'diff': 1.7348000000000363e-05}, {'diff': 1.6763999999998974e-05}, {'diff': 1.6735999999999834e-05}, {'diff': 1.7361999999999933e-05}, {'diff': 1.737500000000003e-05}, {'diff': 1.737500000000003e-05...</msg>
<status status="PASS" starttime="20201029 12:43:53.119" endtime="20201029 12:43:53.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:53.127" level="INFO">${ACCURACY} = {'diff': [1.7348000000000363e-05, 1.6763999999998974e-05, 1.6735999999999834e-05, 1.7361999999999933e-05, 1.737500000000003e-05, 1.737500000000003e-05, 1.7305999999998184e-05, 1.734700000000089e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:43:53.123" endtime="20201029 12:43:53.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.132" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 12:43:53.131" endtime="20201029 12:43:53.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.134" level="INFO">VALUE: [1.7348000000000363e-05, 1.6763999999998974e-05, 1.6735999999999834e-05, 1.7361999999999933e-05, 1.737500000000003e-05, 1.737500000000003e-05, 1.7305999999998184e-05, 1.734700000000089e-05, 1.736100000000046e-05, 1.736100000000046e-05, 1.736100000000046e-05, 1.740299999999917e-05, 1.794500000000185e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.7902000000000196e-05, 1.7334000000000793e-05, 1.736100000000046e-05, 1.733300000000132e-05, 1.6735999999999834e-05, 1.737499999999656e-05, 1.7972000000001515e-05, 1.730500000000218e-05, 1.736100000000046e-05, 1.7959000000001418e-05, 1.7957999999998475e-05, 1.7972000000001515e-05, 1.736100000000046e-05, 1.7929999999999335e-05, 1.793100000000228e-05, 1.734699999999742e-05, 1.7292000000002083e-05, 1.7430000000002305e-05, 1.7347999999996894e-05, 1.7957999999998475e-05, 1.734700000000089e-05, 1.733300000000132e-05, 1.736100000000046e-05, 1.7959000000001418e-05, 1.736100000000046e-05, 1.741699999999874e-05, 1.73889999999996e-05, 1.6763999999998974e-05, 1.6749999999999404e-05, 1.737500000000003e-05, 1.741699999999874e-05, 1.7943999999998905e-05, 1.738900000000307e-05, 1.6749999999999404e-05, 1.733300000000132e-05]</msg>
<status status="PASS" starttime="20201029 12:43:53.133" endtime="20201029 12:43:53.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.128" endtime="20201029 12:43:53.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.139" endtime="20201029 12:43:53.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.138" endtime="20201029 12:43:53.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.136" endtime="20201029 12:43:53.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.782" endtime="20201029 12:43:53.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.781" endtime="20201029 12:43:53.160"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.169" endtime="20201029 12:43:53.184"></status>
</kw>
<msg timestamp="20201029 12:43:53.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.167" endtime="20201029 12:43:53.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.185" endtime="20201029 12:43:53.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.188" endtime="20201029 12:43:53.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.164" endtime="20201029 12:43:53.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.162" endtime="20201029 12:43:53.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.197" endtime="20201029 12:43:53.483"></status>
</kw>
<msg timestamp="20201029 12:43:53.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021861139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.195" endtime="20201029 12:43:53.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021861139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.487" endtime="20201029 12:43:53.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.495" endtime="20201029 12:43:53.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.193" endtime="20201029 12:43:53.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.191" endtime="20201029 12:43:53.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:53.502" level="INFO">${RESULT} = [{'diff': 1.855499999999996e-05}, {'diff': 1.855499999999996e-05}, {'diff': 1.862499999999781e-05}, {'diff': 1.858300000000257e-05}, {'diff': 1.8027999999999794e-05}, {'diff': 1.8569999999999004e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:53.499" endtime="20201029 12:43:53.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:53.506" level="INFO">${ACCURACY} = {'diff': [1.855499999999996e-05, 1.855499999999996e-05, 1.862499999999781e-05, 1.858300000000257e-05, 1.8027999999999794e-05, 1.8569999999999004e-05, 1.7999999999997185e-05, 1.8555999999999434e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:43:53.503" endtime="20201029 12:43:53.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.511" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 12:43:53.510" endtime="20201029 12:43:53.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.513" level="INFO">VALUE: [1.855499999999996e-05, 1.855499999999996e-05, 1.862499999999781e-05, 1.858300000000257e-05, 1.8027999999999794e-05, 1.8569999999999004e-05, 1.7999999999997185e-05, 1.8555999999999434e-05, 1.856899999999953e-05, 1.7958000000001945e-05, 1.7972000000001515e-05, 1.9152000000001446e-05, 1.8569999999999004e-05, 1.8569999999999004e-05, 1.8569999999999004e-05, 1.8555999999999434e-05, 1.8528000000000294e-05, 1.856899999999953e-05, 1.855499999999996e-05, 1.855499999999996e-05, 1.85829999999991e-05, 1.855499999999996e-05, 1.7959000000001418e-05, 1.854100000000039e-05, 1.7971999999998045e-05, 1.791700000000271e-05, 1.7957999999998475e-05, 1.794499999999838e-05, 1.7972000000001515e-05, 1.855499999999996e-05, 1.861099999999824e-05, 1.855499999999996e-05, 1.856899999999953e-05, 1.795899999999795e-05, 1.915300000000092e-05, 1.8555999999999434e-05, 1.8555999999999434e-05, 1.8514000000000724e-05, 1.7971999999998045e-05, 1.793099999999881e-05, 1.855499999999996e-05, 1.8569999999999004e-05, 1.7957999999998475e-05, 1.8612000000001183e-05, 1.8555999999999434e-05, 1.7973000000000988e-05, 1.8570000000002473e-05, 1.8541999999999864e-05, 1.8555999999999434e-05, 1.7958000000001945e-05]</msg>
<status status="PASS" starttime="20201029 12:43:53.512" endtime="20201029 12:43:53.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.507" endtime="20201029 12:43:53.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.518" endtime="20201029 12:43:53.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.517" endtime="20201029 12:43:53.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.515" endtime="20201029 12:43:53.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.161" endtime="20201029 12:43:53.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.160" endtime="20201029 12:43:53.539"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.547" endtime="20201029 12:43:53.563"></status>
</kw>
<msg timestamp="20201029 12:43:53.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.546" endtime="20201029 12:43:53.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.564" endtime="20201029 12:43:53.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.567" endtime="20201029 12:43:53.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.543" endtime="20201029 12:43:53.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.541" endtime="20201029 12:43:53.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.576" endtime="20201029 12:43:53.861"></status>
</kw>
<msg timestamp="20201029 12:43:53.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022696458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.574" endtime="20201029 12:43:53.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022696458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.865" endtime="20201029 12:43:53.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.873" endtime="20201029 12:43:53.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.572" endtime="20201029 12:43:53.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.570" endtime="20201029 12:43:53.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:53.880" level="INFO">${RESULT} = [{'diff': 1.9180000000000585e-05}, {'diff': 1.916700000000049e-05}, {'diff': 1.9721999999999795e-05}, {'diff': 1.9166000000001016e-05}, {'diff': 1.918100000000006e-05}, {'diff': 1.916700000000049e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:53.876" endtime="20201029 12:43:53.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:53.884" level="INFO">${ACCURACY} = {'diff': [1.9180000000000585e-05, 1.916700000000049e-05, 1.9721999999999795e-05, 1.9166000000001016e-05, 1.918100000000006e-05, 1.916700000000049e-05, 1.9193999999996686e-05, 1.9792000000001114e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:43:53.881" endtime="20201029 12:43:53.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.888" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 12:43:53.887" endtime="20201029 12:43:53.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.891" level="INFO">VALUE: [1.9180000000000585e-05, 1.916700000000049e-05, 1.9721999999999795e-05, 1.9166000000001016e-05, 1.918100000000006e-05, 1.916700000000049e-05, 1.9193999999996686e-05, 1.9792000000001114e-05, 1.920900000000267e-05, 1.918100000000006e-05, 1.9179999999997116e-05, 1.912499999999831e-05, 1.916700000000049e-05, 1.9221999999999295e-05, 1.918100000000006e-05, 1.916700000000049e-05, 1.913900000000135e-05, 1.9194000000000155e-05, 1.9777999999998075e-05, 1.9194000000000155e-05, 1.9166000000001016e-05, 1.909699999999917e-05, 1.913900000000135e-05, 1.9194000000000155e-05, 1.9792000000001114e-05, 1.9180000000000585e-05, 1.915300000000092e-05, 1.981900000000078e-05, 1.9764000000001974e-05, 1.919499999999963e-05, 1.9207999999999725e-05, 1.9151999999997976e-05, 1.913899999999788e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.9179999999997116e-05, 1.9777999999998075e-05, 1.9777999999998075e-05, 1.9763999999998505e-05, 1.9792000000001114e-05, 1.915300000000092e-05, 1.9166000000001016e-05, 1.9763999999998505e-05, 1.9778000000001544e-05, 1.9166000000001016e-05, 1.9180000000000585e-05, 1.9778000000001544e-05, 1.9750000000002405e-05, 1.9764000000001974e-05, 1.9165999999997546e-05]</msg>
<status status="PASS" starttime="20201029 12:43:53.889" endtime="20201029 12:43:53.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.885" endtime="20201029 12:43:53.893"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.896" endtime="20201029 12:43:53.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.895" endtime="20201029 12:43:53.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.894" endtime="20201029 12:43:53.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.540" endtime="20201029 12:43:53.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.539" endtime="20201029 12:43:53.917"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.926" endtime="20201029 12:43:53.941"></status>
</kw>
<msg timestamp="20201029 12:43:53.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.924" endtime="20201029 12:43:53.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.943" endtime="20201029 12:43:53.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.945" endtime="20201029 12:43:53.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.921" endtime="20201029 12:43:53.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.919" endtime="20201029 12:43:53.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.954" endtime="20201029 12:43:54.239"></status>
</kw>
<msg timestamp="20201029 12:43:54.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.953" endtime="20201029 12:43:54.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.243" endtime="20201029 12:43:54.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.251" endtime="20201029 12:43:54.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.950" endtime="20201029 12:43:54.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.948" endtime="20201029 12:43:54.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:54.258" level="INFO">${RESULT} = [{'diff': 2.0972000000001045e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.041700000000174e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.0971999999997576e-05}, {'diff': 1.9735999999999365e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:54.255" endtime="20201029 12:43:54.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:54.263" level="INFO">${ACCURACY} = {'diff': [2.0972000000001045e-05, 2.036099999999999e-05, 2.041700000000174e-05, 2.036099999999999e-05, 2.0971999999997576e-05, 1.9735999999999365e-05, 2.037500000000303e-05, 2.0986000000000615e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:43:54.259" endtime="20201029 12:43:54.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.267" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 12:43:54.266" endtime="20201029 12:43:54.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.270" level="INFO">VALUE: [2.0972000000001045e-05, 2.036099999999999e-05, 2.041700000000174e-05, 2.036099999999999e-05, 2.0971999999997576e-05, 1.9735999999999365e-05, 2.037500000000303e-05, 2.0986000000000615e-05, 2.036099999999999e-05, 2.0972000000001045e-05, 2.036099999999999e-05, 2.036099999999999e-05, 2.038899999999913e-05, 2.0387999999999656e-05, 2.037499999999956e-05, 2.095900000000095e-05, 2.038899999999913e-05, 2.04029999999987e-05, 2.04029999999987e-05, 2.0387999999999656e-05, 2.0347999999999894e-05, 2.036099999999999e-05, 2.0986000000000615e-05, 2.036099999999999e-05, 2.038899999999913e-05, 2.037500000000303e-05, 2.036099999999999e-05, 2.037499999999956e-05, 2.04029999999987e-05, 2.03890000000026e-05, 1.9792000000001114e-05, 2.098700000000009e-05, 2.0387999999999656e-05, 2.0972000000001045e-05, 2.0361999999999464e-05, 2.0986000000000615e-05, 2.038899999999913e-05, 1.9764000000001974e-05, 2.03890000000026e-05, 2.0415999999998796e-05, 2.044500000000088e-05, 2.041700000000174e-05, 2.04029999999987e-05, 2.038899999999913e-05, 2.038899999999913e-05, 2.0972000000001045e-05, 2.036099999999999e-05, 1.97769999999986e-05, 2.0986000000000615e-05, 2.037500000000303e-05]</msg>
<status status="PASS" starttime="20201029 12:43:54.269" endtime="20201029 12:43:54.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.264" endtime="20201029 12:43:54.271"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:54.275" endtime="20201029 12:43:54.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.273" endtime="20201029 12:43:54.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.272" endtime="20201029 12:43:54.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.918" endtime="20201029 12:43:54.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.917" endtime="20201029 12:43:54.296"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.304" endtime="20201029 12:43:54.321"></status>
</kw>
<msg timestamp="20201029 12:43:54.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.303" endtime="20201029 12:43:54.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.322" endtime="20201029 12:43:54.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.325" endtime="20201029 12:43:54.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.300" endtime="20201029 12:43:54.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.298" endtime="20201029 12:43:54.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.334" endtime="20201029 12:43:54.624"></status>
</kw>
<msg timestamp="20201029 12:43:54.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022362972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.332" endtime="20201029 12:43:54.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022362972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.628" endtime="20201029 12:43:54.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.636" endtime="20201029 12:43:54.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.330" endtime="20201029 12:43:54.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.328" endtime="20201029 12:43:54.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:54.643" level="INFO">${RESULT} = [{'diff': 2.158299999999863e-05}, {'diff': 2.1555999999998965e-05}, {'diff': 2.0986000000000615e-05}, {'diff': 2.1570000000002004e-05}, {'diff': 2.1000000000000185e-05}, {'diff': 2.15830000000021e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:54.640" endtime="20201029 12:43:54.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:54.647" level="INFO">${ACCURACY} = {'diff': [2.158299999999863e-05, 2.1555999999998965e-05, 2.0986000000000615e-05, 2.1570000000002004e-05, 2.1000000000000185e-05, 2.15830000000021e-05, 2.159700000000167e-05, 2.1514000000000255e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:43:54.644" endtime="20201029 12:43:54.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.651" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 12:43:54.650" endtime="20201029 12:43:54.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.654" level="INFO">VALUE: [2.158299999999863e-05, 2.1555999999998965e-05, 2.0986000000000615e-05, 2.1570000000002004e-05, 2.1000000000000185e-05, 2.15830000000021e-05, 2.159700000000167e-05, 2.1514000000000255e-05, 2.1597999999997675e-05, 2.097299999999705e-05, 2.1584000000001574e-05, 2.159700000000167e-05, 2.0986000000000615e-05, 2.158299999999863e-05, 2.15969999999982e-05, 2.159700000000167e-05, 2.15830000000021e-05, 2.15969999999982e-05, 2.158299999999863e-05, 2.15830000000021e-05, 2.097300000000052e-05, 2.15969999999982e-05, 2.0986000000000615e-05, 2.098700000000009e-05, 2.1555999999998965e-05, 2.15969999999982e-05, 2.1583999999998105e-05, 2.15830000000021e-05, 2.2221999999998826e-05, 2.220899999999873e-05, 2.15969999999982e-05, 2.1541999999999395e-05, 2.1583999999998105e-05, 2.0972000000001045e-05, 2.1569999999998535e-05, 2.156900000000253e-05, 2.1583999999998105e-05, 2.2179999999996647e-05, 2.0986000000000615e-05, 2.161099999999777e-05, 2.159700000000167e-05, 2.0986000000000615e-05, 2.1597999999997675e-05, 2.1500000000000685e-05, 2.0986000000000615e-05, 2.097300000000052e-05, 2.156899999999906e-05, 2.15969999999982e-05, 2.15969999999982e-05, 2.162500000000081e-05]</msg>
<status status="PASS" starttime="20201029 12:43:54.652" endtime="20201029 12:43:54.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.648" endtime="20201029 12:43:54.655"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:54.659" endtime="20201029 12:43:54.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.657" endtime="20201029 12:43:54.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.656" endtime="20201029 12:43:54.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.296" endtime="20201029 12:43:54.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.296" endtime="20201029 12:43:54.680"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.688" endtime="20201029 12:43:54.704"></status>
</kw>
<msg timestamp="20201029 12:43:54.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.687" endtime="20201029 12:43:54.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.705" endtime="20201029 12:43:54.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.708" endtime="20201029 12:43:54.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.684" endtime="20201029 12:43:54.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.682" endtime="20201029 12:43:54.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.717" endtime="20201029 12:43:55.015"></status>
</kw>
<msg timestamp="20201029 12:43:55.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022638167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.715" endtime="20201029 12:43:55.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022638167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.019" endtime="20201029 12:43:55.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.028" endtime="20201029 12:43:55.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.713" endtime="20201029 12:43:55.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.711" endtime="20201029 12:43:55.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:55.034" level="INFO">${RESULT} = [{'diff': 2.219499999999916e-05}, {'diff': 2.2249999999997966e-05}, {'diff': 2.2777999999997606e-05}, {'diff': 2.22229999999983e-05}, {'diff': 2.2180000000000116e-05}, {'diff': 2.219499999999916e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:55.031" endtime="20201029 12:43:55.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:55.038" level="INFO">${ACCURACY} = {'diff': [2.219499999999916e-05, 2.2249999999997966e-05, 2.2777999999997606e-05, 2.22229999999983e-05, 2.2180000000000116e-05, 2.219499999999916e-05, 2.2778000000001075e-05, 2.218099999999959e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:43:55.035" endtime="20201029 12:43:55.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.043" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 12:43:55.042" endtime="20201029 12:43:55.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.045" level="INFO">VALUE: [2.219499999999916e-05, 2.2249999999997966e-05, 2.2777999999997606e-05, 2.22229999999983e-05, 2.2180000000000116e-05, 2.219499999999916e-05, 2.2778000000001075e-05, 2.218099999999959e-05, 2.2778000000001075e-05, 2.215300000000045e-05, 2.2180000000000116e-05, 2.280500000000074e-05, 2.2207999999999256e-05, 2.2180000000000116e-05, 2.2207999999999256e-05, 2.2193999999999686e-05, 2.2193999999999686e-05, 2.2750000000001935e-05, 2.2778000000001075e-05, 2.2792000000000645e-05, 2.219499999999916e-05, 2.2806000000000215e-05, 2.218099999999959e-05, 2.281900000000031e-05, 2.219499999999916e-05, 2.2180000000000116e-05, 2.2806000000000215e-05, 2.2792000000000645e-05, 2.2806000000000215e-05, 2.2792000000000645e-05, 2.219499999999916e-05, 2.279100000000117e-05, 2.2804999999997272e-05, 2.279100000000117e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2778000000001075e-05, 2.219499999999916e-05, 2.2193999999999686e-05, 2.219499999999916e-05, 2.2790999999997702e-05, 2.2792000000000645e-05, 2.2166000000000546e-05, 2.2804999999997272e-05, 2.2792000000000645e-05, 2.218099999999959e-05, 2.216700000000002e-05, 2.2180000000000116e-05, 2.2193999999999686e-05, 2.279100000000117e-05]</msg>
<status status="PASS" starttime="20201029 12:43:55.044" endtime="20201029 12:43:55.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.039" endtime="20201029 12:43:55.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:55.051" endtime="20201029 12:43:55.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.050" endtime="20201029 12:43:55.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.048" endtime="20201029 12:43:55.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.680" endtime="20201029 12:43:55.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.680" endtime="20201029 12:43:55.072"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.081" endtime="20201029 12:43:55.096"></status>
</kw>
<msg timestamp="20201029 12:43:55.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.079" endtime="20201029 12:43:55.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.098" endtime="20201029 12:43:55.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.100" endtime="20201029 12:43:55.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.076" endtime="20201029 12:43:55.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.074" endtime="20201029 12:43:55.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.109" endtime="20201029 12:43:55.395"></status>
</kw>
<msg timestamp="20201029 12:43:55.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022020653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.108" endtime="20201029 12:43:55.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022020653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.399" endtime="20201029 12:43:55.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.408" endtime="20201029 12:43:55.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.105" endtime="20201029 12:43:55.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.103" endtime="20201029 12:43:55.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:55.415" level="INFO">${RESULT} = [{'diff': 2.341700000000127e-05}, {'diff': 2.3416000000001796e-05}, {'diff': 2.34030000000017e-05}, {'diff': 2.3999999999999716e-05}, {'diff': 2.338899999999866e-05}, {'diff': 2.34030000000017e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:55.411" endtime="20201029 12:43:55.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:55.420" level="INFO">${ACCURACY} = {'diff': [2.341700000000127e-05, 2.3416000000001796e-05, 2.34030000000017e-05, 2.3999999999999716e-05, 2.338899999999866e-05, 2.34030000000017e-05, 2.338899999999866e-05, 2.2806000000000215e-05, 2.283...</msg>
<status status="PASS" starttime="20201029 12:43:55.416" endtime="20201029 12:43:55.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.424" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 12:43:55.423" endtime="20201029 12:43:55.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.427" level="INFO">VALUE: [2.341700000000127e-05, 2.3416000000001796e-05, 2.34030000000017e-05, 2.3999999999999716e-05, 2.338899999999866e-05, 2.34030000000017e-05, 2.338899999999866e-05, 2.2806000000000215e-05, 2.2833999999999355e-05, 2.2721999999999326e-05, 2.34030000000017e-05, 2.34030000000017e-05, 2.2819999999999785e-05, 2.338900000000213e-05, 2.4013999999999286e-05, 2.338900000000213e-05, 2.337499999999909e-05, 2.340299999999823e-05, 2.2791999999997176e-05, 2.3402000000002227e-05, 2.340299999999823e-05, 2.4014000000002755e-05, 2.398699999999962e-05, 2.331900000000081e-05, 2.3999999999999716e-05, 2.334699999999995e-05, 2.338899999999866e-05, 2.345899999999998e-05, 2.3402000000002227e-05, 2.3402000000002227e-05, 2.34030000000017e-05, 2.3444000000000936e-05, 2.280500000000074e-05, 2.3388000000002657e-05, 2.337499999999909e-05, 2.2791999999997176e-05, 2.338899999999866e-05, 2.34169999999978e-05, 2.4026999999999382e-05, 2.34030000000017e-05, 2.2792000000000645e-05, 2.3485999999999646e-05, 2.340299999999823e-05, 2.340299999999823e-05, 2.3444000000000936e-05, 2.341700000000127e-05, 2.4013999999999286e-05, 2.3986000000000146e-05, 2.4000000000003185e-05, 2.2778000000001075e-05]</msg>
<status status="PASS" starttime="20201029 12:43:55.425" endtime="20201029 12:43:55.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.421" endtime="20201029 12:43:55.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:55.436" endtime="20201029 12:43:55.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.434" endtime="20201029 12:43:55.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.433" endtime="20201029 12:43:55.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.073" endtime="20201029 12:43:55.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.072" endtime="20201029 12:43:55.456"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.465" endtime="20201029 12:43:55.480"></status>
</kw>
<msg timestamp="20201029 12:43:55.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.463" endtime="20201029 12:43:55.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.482" endtime="20201029 12:43:55.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.484" endtime="20201029 12:43:55.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.461" endtime="20201029 12:43:55.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.459" endtime="20201029 12:43:55.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.494" endtime="20201029 12:43:55.780"></status>
</kw>
<msg timestamp="20201029 12:43:55.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021958653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.492" endtime="20201029 12:43:55.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021958653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.784" endtime="20201029 12:43:55.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.792" endtime="20201029 12:43:55.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.489" endtime="20201029 12:43:55.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.488" endtime="20201029 12:43:55.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:55.799" level="INFO">${RESULT} = [{'diff': 2.3972000000000576e-05}, {'diff': 2.45970000000012e-05}, {'diff': 2.4596999999997732e-05}, {'diff': 2.461100000000077e-05}, {'diff': 2.462499999999687e-05}, {'diff': 2.4555999999998496e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:55.796" endtime="20201029 12:43:55.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:55.803" level="INFO">${ACCURACY} = {'diff': [2.3972000000000576e-05, 2.45970000000012e-05, 2.4596999999997732e-05, 2.461100000000077e-05, 2.462499999999687e-05, 2.4555999999998496e-05, 2.4583999999997636e-05, 2.4027999999998856e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:43:55.800" endtime="20201029 12:43:55.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.808" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 12:43:55.807" endtime="20201029 12:43:55.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.810" level="INFO">VALUE: [2.3972000000000576e-05, 2.45970000000012e-05, 2.4596999999997732e-05, 2.461100000000077e-05, 2.462499999999687e-05, 2.4555999999998496e-05, 2.4583999999997636e-05, 2.4027999999998856e-05, 2.3999999999999716e-05, 2.461100000000077e-05, 2.45970000000012e-05, 2.45970000000012e-05, 2.3999999999999716e-05, 2.4028000000002325e-05, 2.3999999999999716e-05, 2.3999999999999716e-05, 2.4013999999999286e-05, 2.4013999999999286e-05, 2.3958000000001006e-05, 2.4556000000001965e-05, 2.462499999999687e-05, 2.4000000000003185e-05, 2.4040999999998952e-05, 2.462500000000034e-05, 2.4570000000001535e-05, 2.461100000000077e-05, 2.461100000000077e-05, 2.4610999999997302e-05, 2.4000000000003185e-05, 2.461100000000077e-05, 2.3999999999999716e-05, 2.462500000000034e-05, 2.45970000000012e-05, 2.3944000000001436e-05, 2.45970000000012e-05, 2.461100000000077e-05, 2.461100000000077e-05, 2.45970000000012e-05, 2.4596999999997732e-05, 2.3958000000001006e-05, 2.461100000000077e-05, 2.461100000000077e-05, 2.458300000000163e-05, 2.3999999999999716e-05, 2.398699999999962e-05, 2.3999999999999716e-05, 2.461100000000077e-05, 2.3999999999999716e-05, 2.45970000000012e-05, 2.45970000000012e-05]</msg>
<status status="PASS" starttime="20201029 12:43:55.809" endtime="20201029 12:43:55.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.804" endtime="20201029 12:43:55.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:55.815" endtime="20201029 12:43:55.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.814" endtime="20201029 12:43:55.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.813" endtime="20201029 12:43:55.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.457" endtime="20201029 12:43:55.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.457" endtime="20201029 12:43:55.836"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.845" endtime="20201029 12:43:55.861"></status>
</kw>
<msg timestamp="20201029 12:43:55.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.843" endtime="20201029 12:43:55.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.862" endtime="20201029 12:43:55.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.865" endtime="20201029 12:43:55.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.840" endtime="20201029 12:43:55.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.838" endtime="20201029 12:43:55.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.874" endtime="20201029 12:43:56.159"></status>
</kw>
<msg timestamp="20201029 12:43:56.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023394458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023420306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.873" endtime="20201029 12:43:56.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023394458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023420306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.164" endtime="20201029 12:43:56.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.172" endtime="20201029 12:43:56.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.870" endtime="20201029 12:43:56.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.868" endtime="20201029 12:43:56.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:56.179" level="INFO">${RESULT} = [{'diff': 2.5847999999998456e-05}, {'diff': 2.5207999999998787e-05}, {'diff': 2.5805999999999746e-05}, {'diff': 2.5776999999997663e-05}, {'diff': 2.5291000000000202e-05}, {'diff': 2.5778000000000606e-...</msg>
<status status="PASS" starttime="20201029 12:43:56.175" endtime="20201029 12:43:56.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:56.183" level="INFO">${ACCURACY} = {'diff': [2.5847999999998456e-05, 2.5207999999998787e-05, 2.5805999999999746e-05, 2.5776999999997663e-05, 2.5291000000000202e-05, 2.5778000000000606e-05, 2.519499999999869e-05, 2.5221999999998357e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:56.180" endtime="20201029 12:43:56.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.187" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 12:43:56.186" endtime="20201029 12:43:56.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.190" level="INFO">VALUE: [2.5847999999998456e-05, 2.5207999999998787e-05, 2.5805999999999746e-05, 2.5776999999997663e-05, 2.5291000000000202e-05, 2.5778000000000606e-05, 2.519499999999869e-05, 2.5221999999998357e-05, 2.5805999999999746e-05, 2.5832999999999412e-05, 2.5832999999999412e-05, 2.5207999999998787e-05, 2.5250000000000966e-05, 2.5792000000000176e-05, 2.520900000000173e-05, 2.5806000000003215e-05, 2.5207999999998787e-05, 2.584700000000245e-05, 2.515299999999998e-05, 2.5818999999999842e-05, 2.520899999999826e-05, 2.5805999999999746e-05, 2.5820000000002785e-05, 2.519500000000216e-05, 2.5222000000001826e-05, 2.5193999999999217e-05, 2.5207999999998787e-05, 2.5805999999999746e-05, 2.5180000000003117e-05, 2.5221999999998357e-05, 2.520900000000173e-05, 2.5832999999999412e-05, 2.520900000000173e-05, 2.5222000000001826e-05, 2.584700000000245e-05, 2.5207999999998787e-05, 2.5222000000001826e-05, 2.513900000000041e-05, 2.5819999999999316e-05, 2.5208000000002256e-05, 3.140299999999929e-05, 2.5193999999999217e-05, 2.52230000000013e-05, 2.5207999999998787e-05, 2.5846999999998982e-05, 2.5749999999997997e-05, 2.5778000000000606e-05, 2.5818999999999842e-05, 2.516699999999955e-05, 2.519500000000216e-05]</msg>
<status status="PASS" starttime="20201029 12:43:56.188" endtime="20201029 12:43:56.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.184" endtime="20201029 12:43:56.192"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:56.196" endtime="20201029 12:43:56.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.194" endtime="20201029 12:43:56.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.193" endtime="20201029 12:43:56.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.837" endtime="20201029 12:43:56.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.836" endtime="20201029 12:43:56.217"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.225" endtime="20201029 12:43:56.241"></status>
</kw>
<msg timestamp="20201029 12:43:56.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.224" endtime="20201029 12:43:56.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.243" endtime="20201029 12:43:56.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.245" endtime="20201029 12:43:56.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.221" endtime="20201029 12:43:56.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.219" endtime="20201029 12:43:56.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.254" endtime="20201029 12:43:56.541"></status>
</kw>
<msg timestamp="20201029 12:43:56.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:56.253" endtime="20201029 12:43:56.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:56.545" endtime="20201029 12:43:56.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.553" endtime="20201029 12:43:56.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.250" endtime="20201029 12:43:56.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.248" endtime="20201029 12:43:56.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:56.560" level="INFO">${RESULT} = [{'diff': 2.640300000000123e-05}, {'diff': 2.7027999999998387e-05}, {'diff': 2.7027999999998387e-05}, {'diff': 2.6444000000000467e-05}, {'diff': 2.641699999999733e-05}, {'diff': 2.5792000000000176e-05...</msg>
<status status="PASS" starttime="20201029 12:43:56.557" endtime="20201029 12:43:56.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:56.565" level="INFO">${ACCURACY} = {'diff': [2.640300000000123e-05, 2.7027999999998387e-05, 2.7027999999998387e-05, 2.6444000000000467e-05, 2.641699999999733e-05, 2.5792000000000176e-05, 2.6471999999999607e-05, 2.5805999999999746e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:56.561" endtime="20201029 12:43:56.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.569" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 12:43:56.568" endtime="20201029 12:43:56.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.572" level="INFO">VALUE: [2.640300000000123e-05, 2.7027999999998387e-05, 2.7027999999998387e-05, 2.6444000000000467e-05, 2.641699999999733e-05, 2.5792000000000176e-05, 2.6471999999999607e-05, 2.5805999999999746e-05, 2.643100000000037e-05, 2.643100000000037e-05, 2.7013999999998817e-05, 2.5834000000002355e-05, 2.640300000000123e-05, 2.6416000000001327e-05, 2.7026999999998913e-05, 2.64170000000008e-05, 2.640299999999776e-05, 2.7028000000001856e-05, 2.7027999999998387e-05, 2.5818999999999842e-05, 2.6430000000000897e-05, 2.64170000000008e-05, 2.641699999999733e-05, 2.64309999999969e-05, 2.5818999999999842e-05, 2.643100000000037e-05, 2.64170000000008e-05, 2.6458000000000037e-05, 2.643100000000037e-05, 2.6444000000000467e-05, 2.6958000000000537e-05, 2.640300000000123e-05, 2.7042000000001426e-05, 2.6416000000001327e-05, 2.64170000000008e-05, 2.7055999999997526e-05, 2.640300000000123e-05, 2.7027999999998387e-05, 2.643100000000037e-05, 2.5792000000000176e-05, 2.6430000000000897e-05, 2.5820000000002785e-05, 2.5818999999999842e-05, 2.5832999999999412e-05, 2.5832999999999412e-05, 2.5820000000002785e-05, 2.6430000000000897e-05, 2.640300000000123e-05, 2.64170000000008e-05, 2.636100000000252e-05]</msg>
<status status="PASS" starttime="20201029 12:43:56.570" endtime="20201029 12:43:56.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.566" endtime="20201029 12:43:56.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:56.577" endtime="20201029 12:43:56.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.576" endtime="20201029 12:43:56.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.574" endtime="20201029 12:43:56.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.217" endtime="20201029 12:43:56.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.217" endtime="20201029 12:43:56.598"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.607" endtime="20201029 12:43:56.623"></status>
</kw>
<msg timestamp="20201029 12:43:56.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.605" endtime="20201029 12:43:56.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.625" endtime="20201029 12:43:56.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.627" endtime="20201029 12:43:56.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.602" endtime="20201029 12:43:56.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.600" endtime="20201029 12:43:56.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.636" endtime="20201029 12:43:56.923"></status>
</kw>
<msg timestamp="20201029 12:43:56.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022394542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.635" endtime="20201029 12:43:56.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022394542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.927" endtime="20201029 12:43:56.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.936" endtime="20201029 12:43:56.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.632" endtime="20201029 12:43:56.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.630" endtime="20201029 12:43:56.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:56.942" level="INFO">${RESULT} = [{'diff': 2.7013999999998817e-05}, {'diff': 2.7013999999998817e-05}, {'diff': 2.6985999999999677e-05}, {'diff': 2.7028000000001856e-05}, {'diff': 2.7638999999999442e-05}, {'diff': 2.7624999999999872e-...</msg>
<status status="PASS" starttime="20201029 12:43:56.939" endtime="20201029 12:43:56.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:56.947" level="INFO">${ACCURACY} = {'diff': [2.7013999999998817e-05, 2.7013999999998817e-05, 2.6985999999999677e-05, 2.7028000000001856e-05, 2.7638999999999442e-05, 2.7624999999999872e-05, 2.7624999999999872e-05, 2.7652999999999012e-05...</msg>
<status status="PASS" starttime="20201029 12:43:56.943" endtime="20201029 12:43:56.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.951" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 12:43:56.950" endtime="20201029 12:43:56.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.954" level="INFO">VALUE: [2.7013999999998817e-05, 2.7013999999998817e-05, 2.6985999999999677e-05, 2.7028000000001856e-05, 2.7638999999999442e-05, 2.7624999999999872e-05, 2.7624999999999872e-05, 2.7652999999999012e-05, 2.7638999999999442e-05, 2.7568999999998123e-05, 2.7042000000001426e-05, 2.7611000000000302e-05, 2.7611000000000302e-05, 2.7013999999998817e-05, 2.6972000000000107e-05, 2.7014000000002286e-05, 2.765300000000248e-05, 2.7624999999999872e-05, 2.7014000000002286e-05, 2.7624999999999872e-05, 2.7012999999999343e-05, 2.694500000000044e-05, 2.7042000000001426e-05, 2.7014000000002286e-05, 2.7055000000001522e-05, 2.7027999999998387e-05, 2.7000000000002716e-05, 2.7070000000000566e-05, 2.7624999999999872e-05, 2.7624999999999872e-05, 2.7026999999998913e-05, 2.7056000000000996e-05, 2.7624999999999872e-05, 2.7069000000001092e-05, 2.7042000000001426e-05, 2.7651999999999538e-05, 2.7638999999999442e-05, 2.7013999999998817e-05, 2.7028000000001856e-05, 2.7013999999998817e-05, 2.7651999999999538e-05, 2.7055000000001522e-05, 2.7012999999999343e-05, 2.7637999999999968e-05, 2.7013999999998817e-05, 2.7026999999998913e-05, 2.7638999999999442e-05, 2.7611000000000302e-05, 2.762500000000334e-05, 2.7026999999998913e-05]</msg>
<status status="PASS" starttime="20201029 12:43:56.952" endtime="20201029 12:43:56.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.947" endtime="20201029 12:43:56.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:56.959" endtime="20201029 12:43:56.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.957" endtime="20201029 12:43:56.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.956" endtime="20201029 12:43:56.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.599" endtime="20201029 12:43:56.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.598" endtime="20201029 12:43:56.979"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.988" endtime="20201029 12:43:57.005"></status>
</kw>
<msg timestamp="20201029 12:43:57.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.987" endtime="20201029 12:43:57.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.006" endtime="20201029 12:43:57.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.009" endtime="20201029 12:43:57.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.984" endtime="20201029 12:43:57.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.982" endtime="20201029 12:43:57.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.018" endtime="20201029 12:43:57.304"></status>
</kw>
<msg timestamp="20201029 12:43:57.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0230795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023107111, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:57.016" endtime="20201029 12:43:57.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0230795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023107111, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:57.308" endtime="20201029 12:43:57.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.317" endtime="20201029 12:43:57.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.014" endtime="20201029 12:43:57.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.012" endtime="20201029 12:43:57.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:57.323" level="INFO">${RESULT} = [{'diff': 2.7611000000000302e-05}, {'diff': 2.8832999999998943e-05}, {'diff': 2.8833999999998416e-05}, {'diff': 2.8193999999998748e-05}, {'diff': 2.822300000000083e-05}, {'diff': 2.8236000000000927e-0...</msg>
<status status="PASS" starttime="20201029 12:43:57.320" endtime="20201029 12:43:57.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:57.328" level="INFO">${ACCURACY} = {'diff': [2.7611000000000302e-05, 2.8832999999998943e-05, 2.8833999999998416e-05, 2.8193999999998748e-05, 2.822300000000083e-05, 2.8236000000000927e-05, 2.8862000000001026e-05, 2.8833000000002412e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:57.324" endtime="20201029 12:43:57.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.332" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 12:43:57.331" endtime="20201029 12:43:57.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.335" level="INFO">VALUE: [2.7611000000000302e-05, 2.8832999999998943e-05, 2.8833999999998416e-05, 2.8193999999998748e-05, 2.822300000000083e-05, 2.8236000000000927e-05, 2.8862000000001026e-05, 2.8833000000002412e-05, 2.8222000000001357e-05, 2.8222000000001357e-05, 2.8834000000001886e-05, 2.8847000000001982e-05, 2.8791000000000233e-05, 2.8194000000002217e-05, 2.8832999999998943e-05, 2.8222000000001357e-05, 2.8207999999998318e-05, 2.8819999999998847e-05, 2.8277999999999637e-05, 2.8832999999998943e-05, 2.8236000000000927e-05, 2.8236000000000927e-05, 2.822300000000083e-05, 2.8221999999997888e-05, 2.8291999999999207e-05, 2.8833000000002412e-05, 2.8847000000001982e-05, 2.8222000000001357e-05, 2.8250000000000497e-05, 2.8834000000001886e-05, 2.8236000000000927e-05, 2.8222000000001357e-05, 2.8250000000000497e-05, 2.8208000000001787e-05, 2.8194000000002217e-05, 2.8222000000001357e-05, 2.8305000000002772e-05, 2.8236000000000927e-05, 2.7611000000000302e-05, 2.8235999999997458e-05, 2.8833000000002412e-05, 2.8236000000000927e-05, 2.7611999999999776e-05, 2.8235999999997458e-05, 2.8833999999998416e-05, 2.8250000000000497e-05, 2.7624999999999872e-05, 2.8236000000000927e-05, 2.8832999999998943e-05, 2.8221999999997888e-05]</msg>
<status status="PASS" starttime="20201029 12:43:57.333" endtime="20201029 12:43:57.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.329" endtime="20201029 12:43:57.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:57.341" endtime="20201029 12:43:57.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.339" endtime="20201029 12:43:57.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.338" endtime="20201029 12:43:57.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.980" endtime="20201029 12:43:57.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.980" endtime="20201029 12:43:57.361"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.370" endtime="20201029 12:43:57.386"></status>
</kw>
<msg timestamp="20201029 12:43:57.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.368" endtime="20201029 12:43:57.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.388" endtime="20201029 12:43:57.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.390" endtime="20201029 12:43:57.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.366" endtime="20201029 12:43:57.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.364" endtime="20201029 12:43:57.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.399" endtime="20201029 12:43:57.685"></status>
</kw>
<msg timestamp="20201029 12:43:57.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.398" endtime="20201029 12:43:57.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.689" endtime="20201029 12:43:57.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.698" endtime="20201029 12:43:57.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.395" endtime="20201029 12:43:57.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.393" endtime="20201029 12:43:57.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:57.704" level="INFO">${RESULT} = [{'diff': 2.8818999999999373e-05}, {'diff': 3.0056000000000527e-05}, {'diff': 2.9416000000000858e-05}, {'diff': 2.944499999999947e-05}, {'diff': 2.9457999999999568e-05}, {'diff': 2.9485999999998708e-0...</msg>
<status status="PASS" starttime="20201029 12:43:57.701" endtime="20201029 12:43:57.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:57.709" level="INFO">${ACCURACY} = {'diff': [2.8818999999999373e-05, 3.0056000000000527e-05, 2.9416000000000858e-05, 2.944499999999947e-05, 2.9457999999999568e-05, 2.9485999999998708e-05, 3.0042000000000957e-05, 2.94309999999999e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:43:57.705" endtime="20201029 12:43:57.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.714" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 12:43:57.713" endtime="20201029 12:43:57.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.716" level="INFO">VALUE: [2.8818999999999373e-05, 3.0056000000000527e-05, 2.9416000000000858e-05, 2.944499999999947e-05, 2.9457999999999568e-05, 2.9485999999998708e-05, 3.0042000000000957e-05, 2.94309999999999e-05, 2.9457999999999568e-05, 3.0040999999998014e-05, 3.0069000000000623e-05, 2.9457999999999568e-05, 2.8818999999999373e-05, 2.9457999999999568e-05, 2.8832999999998943e-05, 3.0040999999998014e-05, 2.9443999999999998e-05, 2.94309999999999e-05, 2.9443999999999998e-05, 2.945900000000251e-05, 2.9416999999996862e-05, 2.8819999999998847e-05, 2.9457999999999568e-05, 3.0056000000000527e-05, 2.9417000000000332e-05, 2.8832999999998943e-05, 2.8832999999998943e-05, 2.942999999999696e-05, 2.8846999999998513e-05, 2.94309999999999e-05, 2.9430000000000428e-05, 2.9457999999999568e-05, 2.943100000000337e-05, 2.8832999999998943e-05, 2.9443999999999998e-05, 3.0056000000000527e-05, 2.943100000000337e-05, 2.8833999999998416e-05, 2.9486000000002177e-05, 2.9500000000001747e-05, 2.94309999999999e-05, 2.9443999999999998e-05, 3.0042000000000957e-05, 2.9457999999999568e-05, 2.9485999999998708e-05, 2.8832999999998943e-05, 2.9430000000000428e-05, 3.0042000000000957e-05, 2.9499999999998278e-05, 2.8819999999998847e-05]</msg>
<status status="PASS" starttime="20201029 12:43:57.715" endtime="20201029 12:43:57.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.710" endtime="20201029 12:43:57.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:57.721" endtime="20201029 12:43:57.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.720" endtime="20201029 12:43:57.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.719" endtime="20201029 12:43:57.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.362" endtime="20201029 12:43:57.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.362" endtime="20201029 12:43:57.742"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.751" endtime="20201029 12:43:57.766"></status>
</kw>
<msg timestamp="20201029 12:43:57.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.749" endtime="20201029 12:43:57.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.768" endtime="20201029 12:43:57.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.770" endtime="20201029 12:43:57.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.747" endtime="20201029 12:43:57.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.745" endtime="20201029 12:43:57.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.780" endtime="20201029 12:43:58.068"></status>
</kw>
<msg timestamp="20201029 12:43:58.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022042042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.778" endtime="20201029 12:43:58.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022042042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.072" endtime="20201029 12:43:58.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.080" endtime="20201029 12:43:58.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.775" endtime="20201029 12:43:58.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.774" endtime="20201029 12:43:58.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.087" level="INFO">${RESULT} = [{'diff': 3.0083000000000193e-05}, {'diff': 3.063899999999897e-05}, {'diff': 3.06249999999994e-05}, {'diff': 3.066700000000158e-05}, {'diff': 3.063899999999897e-05}, {'diff': 3.065299999999854e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:58.084" endtime="20201029 12:43:58.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:58.091" level="INFO">${ACCURACY} = {'diff': [3.0083000000000193e-05, 3.063899999999897e-05, 3.06249999999994e-05, 3.066700000000158e-05, 3.063899999999897e-05, 3.065299999999854e-05, 3.0056000000000527e-05, 3.0040999999998014e-05, 3.06...</msg>
<status status="PASS" starttime="20201029 12:43:58.088" endtime="20201029 12:43:58.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.096" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 12:43:58.095" endtime="20201029 12:43:58.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.098" level="INFO">VALUE: [3.0083000000000193e-05, 3.063899999999897e-05, 3.06249999999994e-05, 3.066700000000158e-05, 3.063899999999897e-05, 3.065299999999854e-05, 3.0056000000000527e-05, 3.0040999999998014e-05, 3.06249999999994e-05, 3.066600000000211e-05, 3.063900000000244e-05, 3.0028000000001387e-05, 3.0055000000001053e-05, 3.0070000000000097e-05, 3.0012999999998874e-05, 3.0056000000000527e-05, 3.066599999999864e-05, 3.0026999999998444e-05, 3.0055999999997057e-05, 3.0042000000000957e-05, 3.070800000000082e-05, 3.065199999999907e-05, 3.0054999999997584e-05, 3.06379999999995e-05, 3.0054999999997584e-05, 3.0041000000001483e-05, 3.0042000000000957e-05, 3.0070000000000097e-05, 3.063899999999897e-05, 3.065199999999907e-05, 3.0056000000000527e-05, 3.065299999999854e-05, 2.9999999999998778e-05, 3.066599999999864e-05, 3.065199999999907e-05, 3.0042000000000957e-05, 3.06249999999994e-05, 3.0027999999997917e-05, 3.0027999999997917e-05, 3.063899999999897e-05, 3.0026999999998444e-05, 3.0027999999997917e-05, 3.063899999999897e-05, 3.0027999999997917e-05, 3.06249999999994e-05, 3.0013999999998348e-05, 3.063899999999897e-05, 3.065200000000254e-05, 3.063899999999897e-05, 3.066700000000158e-05]</msg>
<status status="PASS" starttime="20201029 12:43:58.097" endtime="20201029 12:43:58.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.092" endtime="20201029 12:43:58.099"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:58.103" endtime="20201029 12:43:58.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.101" endtime="20201029 12:43:58.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.100" endtime="20201029 12:43:58.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.743" endtime="20201029 12:43:58.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.742" endtime="20201029 12:43:58.124"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.133" endtime="20201029 12:43:58.149"></status>
</kw>
<msg timestamp="20201029 12:43:58.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.131" endtime="20201029 12:43:58.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.151" endtime="20201029 12:43:58.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.153" endtime="20201029 12:43:58.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.128" endtime="20201029 12:43:58.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.126" endtime="20201029 12:43:58.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.162" endtime="20201029 12:43:58.448"></status>
</kw>
<msg timestamp="20201029 12:43:58.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023080722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023111375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.161" endtime="20201029 12:43:58.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023080722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023111375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.452" endtime="20201029 12:43:58.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.460" endtime="20201029 12:43:58.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.158" endtime="20201029 12:43:58.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.156" endtime="20201029 12:43:58.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.467" level="INFO">${RESULT} = [{'diff': 3.065299999999854e-05}, {'diff': 3.130599999999831e-05}, {'diff': 3.1846999999998044e-05}, {'diff': 3.1263000000000124e-05}, {'diff': 3.183300000000194e-05}, {'diff': 3.1846999999998044e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:58.464" endtime="20201029 12:43:58.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:58.471" level="INFO">${ACCURACY} = {'diff': [3.065299999999854e-05, 3.130599999999831e-05, 3.1846999999998044e-05, 3.1263000000000124e-05, 3.183300000000194e-05, 3.1846999999998044e-05, 3.127799999999917e-05, 3.187499999999718e-05, 3.0...</msg>
<status status="PASS" starttime="20201029 12:43:58.468" endtime="20201029 12:43:58.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.476" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 12:43:58.475" endtime="20201029 12:43:58.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.478" level="INFO">VALUE: [3.065299999999854e-05, 3.130599999999831e-05, 3.1846999999998044e-05, 3.1263000000000124e-05, 3.183300000000194e-05, 3.1846999999998044e-05, 3.127799999999917e-05, 3.187499999999718e-05, 3.063900000000244e-05, 3.125000000000003e-05, 3.125000000000003e-05, 3.1276999999999694e-05, 3.125000000000003e-05, 3.1860999999997613e-05, 3.177799999999967e-05, 3.119499999999775e-05, 3.186100000000108e-05, 3.187500000000065e-05, 3.125000000000003e-05, 3.127800000000264e-05, 3.1860999999997613e-05, 3.123600000000046e-05, 3.12639999999996e-05, 3.187500000000065e-05, 3.127799999999917e-05, 3.184700000000151e-05, 3.1832999999998474e-05, 3.125000000000003e-05, 3.1846999999998044e-05, 3.186100000000108e-05, 3.125000000000003e-05, 3.125000000000003e-05, 3.12639999999996e-05, 3.190299999999979e-05, 3.122300000000036e-05, 3.187500000000065e-05, 3.1846999999998044e-05, 3.190299999999979e-05, 3.1862000000000557e-05, 3.125000000000003e-05, 3.184799999999752e-05, 3.129200000000221e-05, 3.190300000000326e-05, 3.066599999999864e-05, 3.125000000000003e-05, 3.186100000000108e-05, 3.125000000000003e-05, 3.188900000000022e-05, 3.125000000000003e-05, 3.184700000000151e-05]</msg>
<status status="PASS" starttime="20201029 12:43:58.477" endtime="20201029 12:43:58.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.472" endtime="20201029 12:43:58.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:58.484" endtime="20201029 12:43:58.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.483" endtime="20201029 12:43:58.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.481" endtime="20201029 12:43:58.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.125" endtime="20201029 12:43:58.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.124" endtime="20201029 12:43:58.505"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.514" endtime="20201029 12:43:58.529"></status>
</kw>
<msg timestamp="20201029 12:43:58.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.512" endtime="20201029 12:43:58.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.531" endtime="20201029 12:43:58.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.534" endtime="20201029 12:43:58.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.509" endtime="20201029 12:43:58.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.507" endtime="20201029 12:43:58.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.543" endtime="20201029 12:43:58.827"></status>
</kw>
<msg timestamp="20201029 12:43:58.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:58.541" endtime="20201029 12:43:58.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:58.831" endtime="20201029 12:43:58.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.839" endtime="20201029 12:43:58.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.538" endtime="20201029 12:43:58.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.537" endtime="20201029 12:43:58.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.846" level="INFO">${RESULT} = [{'diff': 3.247199999999867e-05}, {'diff': 3.245899999999857e-05}, {'diff': 3.3026999999997975e-05}, {'diff': 3.3082999999999724e-05}, {'diff': 3.187500000000065e-05}, {'diff': 3.306999999999963e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:58.843" endtime="20201029 12:43:58.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:58.851" level="INFO">${ACCURACY} = {'diff': [3.247199999999867e-05, 3.245899999999857e-05, 3.3026999999997975e-05, 3.3082999999999724e-05, 3.187500000000065e-05, 3.306999999999963e-05, 3.2527000000000944e-05, 3.24579999999991e-05, 3.24...</msg>
<status status="PASS" starttime="20201029 12:43:58.847" endtime="20201029 12:43:58.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.856" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 12:43:58.855" endtime="20201029 12:43:58.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.858" level="INFO">VALUE: [3.247199999999867e-05, 3.245899999999857e-05, 3.3026999999997975e-05, 3.3082999999999724e-05, 3.187500000000065e-05, 3.306999999999963e-05, 3.2527000000000944e-05, 3.24579999999991e-05, 3.2444999999999e-05, 3.248700000000118e-05, 3.245800000000257e-05, 3.247299999999814e-05, 3.247200000000214e-05, 3.247299999999814e-05, 3.190200000000032e-05, 3.183400000000142e-05, 3.245900000000204e-05, 3.245900000000204e-05, 3.247199999999867e-05, 3.305600000000006e-05, 3.306999999999963e-05, 3.244399999999953e-05, 3.247200000000214e-05, 3.19310000000024e-05, 3.245899999999857e-05, 3.191699999999936e-05, 3.180600000000228e-05, 3.1860999999997613e-05, 3.248599999999824e-05, 3.187499999999718e-05, 3.245899999999857e-05, 3.3096999999999294e-05, 3.3096999999999294e-05, 3.186100000000108e-05, 3.248600000000171e-05, 3.184800000000099e-05, 3.245899999999857e-05, 3.245800000000257e-05, 3.248600000000171e-05, 3.192999999999946e-05, 3.245800000000257e-05, 3.1846999999998044e-05, 3.247199999999867e-05, 3.3069000000000154e-05, 3.2444000000003e-05, 3.2444999999999e-05, 3.252800000000042e-05, 3.1860999999997613e-05, 3.192999999999946e-05, 3.305600000000006e-05]</msg>
<status status="PASS" starttime="20201029 12:43:58.857" endtime="20201029 12:43:58.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.852" endtime="20201029 12:43:58.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:58.863" endtime="20201029 12:43:58.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.862" endtime="20201029 12:43:58.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.861" endtime="20201029 12:43:58.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.506" endtime="20201029 12:43:58.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.505" endtime="20201029 12:43:58.884"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.893" endtime="20201029 12:43:58.909"></status>
</kw>
<msg timestamp="20201029 12:43:58.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.891" endtime="20201029 12:43:58.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.911" endtime="20201029 12:43:58.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.914" endtime="20201029 12:43:58.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.889" endtime="20201029 12:43:58.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.886" endtime="20201029 12:43:58.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.923" endtime="20201029 12:43:59.208"></status>
</kw>
<msg timestamp="20201029 12:43:59.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02204575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:58.921" endtime="20201029 12:43:59.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02204575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:59.213" endtime="20201029 12:43:59.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.221" endtime="20201029 12:43:59.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.919" endtime="20201029 12:43:59.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.917" endtime="20201029 12:43:59.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:59.228" level="INFO">${RESULT} = [{'diff': 3.748599999999977e-05}, {'diff': 3.7861000000000145e-05}, {'diff': 3.780599999999787e-05}, {'diff': 3.723599999999952e-05}, {'diff': 3.751399999999891e-05}, {'diff': 3.8195000000001283e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:59.224" endtime="20201029 12:43:59.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:59.232" level="INFO">${ACCURACY} = {'diff': [3.748599999999977e-05, 3.7861000000000145e-05, 3.780599999999787e-05, 3.723599999999952e-05, 3.751399999999891e-05, 3.8195000000001283e-05, 3.727799999999823e-05, 3.80980000000003e-05, 3.817...</msg>
<status status="PASS" starttime="20201029 12:43:59.229" endtime="20201029 12:43:59.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.236" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 12:43:59.235" endtime="20201029 12:43:59.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.239" level="INFO">VALUE: [3.748599999999977e-05, 3.7861000000000145e-05, 3.780599999999787e-05, 3.723599999999952e-05, 3.751399999999891e-05, 3.8195000000001283e-05, 3.727799999999823e-05, 3.80980000000003e-05, 3.817999999999877e-05, 3.80980000000003e-05, 3.798600000000027e-05, 3.7624999999999464e-05, 3.741599999999845e-05, 3.7624999999999464e-05, 3.741600000000192e-05, 3.77919999999983e-05, 3.7569000000001185e-05, 3.773600000000002e-05, 3.7583000000000755e-05, 3.7431000000000964e-05, 3.8111000000000395e-05, 3.752799999999848e-05, 3.732000000000041e-05, 3.726399999999866e-05, 3.779200000000177e-05, 3.776399999999916e-05, 3.724999999999909e-05, 3.7638999999999034e-05, 3.786200000000309e-05, 3.8124999999999964e-05, 3.7526999999999006e-05, 3.7804999999998395e-05, 3.7819000000001435e-05, 3.769400000000131e-05, 3.7431000000000964e-05, 3.7624999999999464e-05, 3.780599999999787e-05, 3.798600000000027e-05, 3.7610999999999895e-05, 3.7931000000001464e-05, 3.7945000000001033e-05, 3.7445000000000533e-05, 3.797300000000017e-05, 3.7930999999997994e-05, 3.7374999999999214e-05, 3.8167000000002144e-05, 3.7861000000000145e-05, 3.758400000000023e-05, 3.7791000000002295e-05, 3.7402999999998354e-05]</msg>
<status status="PASS" starttime="20201029 12:43:59.238" endtime="20201029 12:43:59.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.233" endtime="20201029 12:43:59.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:59.244" endtime="20201029 12:43:59.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.243" endtime="20201029 12:43:59.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.241" endtime="20201029 12:43:59.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.885" endtime="20201029 12:43:59.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.884" endtime="20201029 12:43:59.265"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.274" endtime="20201029 12:43:59.291"></status>
</kw>
<msg timestamp="20201029 12:43:59.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.272" endtime="20201029 12:43:59.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.292" endtime="20201029 12:43:59.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.295" endtime="20201029 12:43:59.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.269" endtime="20201029 12:43:59.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.267" endtime="20201029 12:43:59.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.304" endtime="20201029 12:43:59.589"></status>
</kw>
<msg timestamp="20201029 12:43:59.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022953444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022991833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.302" endtime="20201029 12:43:59.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022953444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022991833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.593" endtime="20201029 12:43:59.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.602" endtime="20201029 12:43:59.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.300" endtime="20201029 12:43:59.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.298" endtime="20201029 12:43:59.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:59.608" level="INFO">${RESULT} = [{'diff': 3.8388999999999784e-05}, {'diff': 3.850000000000034e-05}, {'diff': 3.873600000000102e-05}, {'diff': 3.826399999999966e-05}, {'diff': 3.867999999999927e-05}, {'diff': 3.900000000000084e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:59.605" endtime="20201029 12:43:59.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:59.613" level="INFO">${ACCURACY} = {'diff': [3.8388999999999784e-05, 3.850000000000034e-05, 3.873600000000102e-05, 3.826399999999966e-05, 3.867999999999927e-05, 3.900000000000084e-05, 3.852800000000295e-05, 3.9153000000000104e-05, 3.88...</msg>
<status status="PASS" starttime="20201029 12:43:59.609" endtime="20201029 12:43:59.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.617" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 12:43:59.616" endtime="20201029 12:43:59.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.619" level="INFO">VALUE: [3.8388999999999784e-05, 3.850000000000034e-05, 3.873600000000102e-05, 3.826399999999966e-05, 3.867999999999927e-05, 3.900000000000084e-05, 3.852800000000295e-05, 3.9153000000000104e-05, 3.8847000000001575e-05, 3.869399999999884e-05, 3.895800000000213e-05, 3.8375000000000214e-05, 3.8611000000000895e-05, 3.82919999999988e-05, 3.904199999999955e-05, 3.8624999999996995e-05, 3.827799999999923e-05, 3.8695000000001784e-05, 3.9013000000000936e-05, 3.9027000000000506e-05, 3.9096999999998355e-05, 3.897199999999823e-05, 3.851399999999991e-05, 3.8583000000001755e-05, 3.9139000000000534e-05, 3.8680999999998744e-05, 3.827799999999923e-05, 3.8347000000001075e-05, 3.8583000000001755e-05, 3.895799999999866e-05, 3.823600000000052e-05, 3.9153000000000104e-05, 3.8958999999998134e-05, 3.875000000000059e-05, 3.900000000000084e-05, 3.844399999999859e-05, 3.8416999999998924e-05, 3.894399999999909e-05, 3.8403000000002824e-05, 3.872200000000145e-05, 3.8667000000002644e-05, 3.91660000000002e-05, 3.854199999999905e-05, 3.8652999999999604e-05, 3.8582999999998285e-05, 3.877799999999973e-05, 3.89859999999978e-05, 3.8582999999998285e-05, 3.845800000000163e-05, 3.826399999999966e-05]</msg>
<status status="PASS" starttime="20201029 12:43:59.618" endtime="20201029 12:43:59.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.613" endtime="20201029 12:43:59.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:59.625" endtime="20201029 12:43:59.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.624" endtime="20201029 12:43:59.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.623" endtime="20201029 12:43:59.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.266" endtime="20201029 12:43:59.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.265" endtime="20201029 12:43:59.646"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.655" endtime="20201029 12:43:59.672"></status>
</kw>
<msg timestamp="20201029 12:43:59.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.653" endtime="20201029 12:43:59.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.673" endtime="20201029 12:43:59.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.676" endtime="20201029 12:43:59.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.651" endtime="20201029 12:43:59.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.649" endtime="20201029 12:43:59.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.685" endtime="20201029 12:43:59.971"></status>
</kw>
<msg timestamp="20201029 12:43:59.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022266153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.684" endtime="20201029 12:43:59.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022266153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.975" endtime="20201029 12:43:59.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.983" endtime="20201029 12:43:59.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.681" endtime="20201029 12:43:59.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.679" endtime="20201029 12:43:59.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:59.990" level="INFO">${RESULT} = [{'diff': 3.972199999999898e-05}, {'diff': 3.951400000000091e-05}, {'diff': 3.92919999999998e-05}, {'diff': 3.983400000000248e-05}, {'diff': 3.9917000000000424e-05}, {'diff': 3.97920000000003e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:59.987" endtime="20201029 12:43:59.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:59.995" level="INFO">${ACCURACY} = {'diff': [3.972199999999898e-05, 3.951400000000091e-05, 3.92919999999998e-05, 3.983400000000248e-05, 3.9917000000000424e-05, 3.97920000000003e-05, 4.022200000000295e-05, 3.959799999999833e-05, 4.00140...</msg>
<status status="PASS" starttime="20201029 12:43:59.991" endtime="20201029 12:43:59.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.000" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 12:43:59.999" endtime="20201029 12:44:00.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.002" level="INFO">VALUE: [3.972199999999898e-05, 3.951400000000091e-05, 3.92919999999998e-05, 3.983400000000248e-05, 3.9917000000000424e-05, 3.97920000000003e-05, 4.022200000000295e-05, 3.959799999999833e-05, 4.001400000000141e-05, 4.0069000000000216e-05, 4.0054999999997176e-05, 4.019400000000034e-05, 4.0153000000001104e-05, 3.9375000000001215e-05, 3.95980000000018e-05, 3.993000000000052e-05, 3.9625000000001465e-05, 3.99859999999988e-05, 3.9917000000000424e-05, 3.926400000000066e-05, 4.0152999999997635e-05, 3.9722999999998454e-05, 4.0069000000000216e-05, 4.000000000000184e-05, 4.009799999999883e-05, 3.934799999999808e-05, 3.97920000000003e-05, 3.976400000000116e-05, 3.976400000000116e-05, 3.961200000000137e-05, 4.0125000000001965e-05, 3.927799999999676e-05, 3.9667000000000174e-05, 3.974999999999812e-05, 3.995799999999966e-05, 4.0082999999999785e-05, 3.9930999999999994e-05, 3.9416999999999924e-05, 3.941600000000045e-05, 3.955600000000309e-05, 3.9846999999999105e-05, 3.94859999999983e-05, 3.9917000000000424e-05, 3.930599999999937e-05, 4.004200000000055e-05, 4.001399999999794e-05, 3.9568999999999716e-05, 3.994400000000009e-05, 3.995799999999966e-05, 4.0096999999999355e-05]</msg>
<status status="PASS" starttime="20201029 12:44:00.001" endtime="20201029 12:44:00.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.996" endtime="20201029 12:44:00.004"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:00.007" endtime="20201029 12:44:00.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.006" endtime="20201029 12:44:00.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.005" endtime="20201029 12:44:00.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.647" endtime="20201029 12:44:00.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.646" endtime="20201029 12:44:00.028"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.040" endtime="20201029 12:44:00.056"></status>
</kw>
<msg timestamp="20201029 12:44:00.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.038" endtime="20201029 12:44:00.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.058" endtime="20201029 12:44:00.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.060" endtime="20201029 12:44:00.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.035" endtime="20201029 12:44:00.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.031" endtime="20201029 12:44:00.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.069" endtime="20201029 12:44:00.356"></status>
</kw>
<msg timestamp="20201029 12:44:00.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024735653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024776486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.068" endtime="20201029 12:44:00.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024735653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024776486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.360" endtime="20201029 12:44:00.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.368" endtime="20201029 12:44:00.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.065" endtime="20201029 12:44:00.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.064" endtime="20201029 12:44:00.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:00.375" level="INFO">${RESULT} = [{'diff': 4.0833000000000536e-05}, {'diff': 4.049999999999887e-05}, {'diff': 4.094399999999762e-05}, {'diff': 4.076399999999869e-05}, {'diff': 4.030600000000037e-05}, {'diff': 4.084799999999958e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:00.371" endtime="20201029 12:44:00.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:00.379" level="INFO">${ACCURACY} = {'diff': [4.0833000000000536e-05, 4.049999999999887e-05, 4.094399999999762e-05, 4.076399999999869e-05, 4.030600000000037e-05, 4.084799999999958e-05, 4.027800000000123e-05, 4.0445000000000064e-05, 4.04...</msg>
<status status="PASS" starttime="20201029 12:44:00.376" endtime="20201029 12:44:00.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.384" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 12:44:00.383" endtime="20201029 12:44:00.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.386" level="INFO">VALUE: [4.0833000000000536e-05, 4.049999999999887e-05, 4.094399999999762e-05, 4.076399999999869e-05, 4.030600000000037e-05, 4.084799999999958e-05, 4.027800000000123e-05, 4.0445000000000064e-05, 4.0402999999997885e-05, 4.0931000000000994e-05, 4.077799999999826e-05, 4.059799999999933e-05, 4.102799999999851e-05, 4.0860999999999675e-05, 4.091600000000195e-05, 4.0776999999998786e-05, 4.1181000000001244e-05, 4.027799999999776e-05, 4.0583000000000286e-05, 4.101400000000241e-05, 4.102799999999851e-05, 4.0902999999998385e-05, 4.0568999999997246e-05, 4.0722999999999454e-05, 4.054199999999758e-05, 4.045800000000016e-05, 4.0625000000002465e-05, 4.1180999999997775e-05, 4.101400000000241e-05, 4.099999999999937e-05, 4.0319000000000466e-05, 4.0541000000001576e-05, 4.1083000000000786e-05, 4.1138999999999065e-05, 4.076399999999869e-05, 4.101399999999894e-05, 4.1166999999998205e-05, 4.051399999999844e-05, 4.027800000000123e-05, 4.0847000000000105e-05, 4.026400000000166e-05, 4.076399999999869e-05, 4.102799999999851e-05, 4.049999999999887e-05, 4.1110999999999925e-05, 4.074999999999912e-05, 4.1209000000000384e-05, 4.073599999999955e-05, 4.0762999999999217e-05, 4.034800000000255e-05]</msg>
<status status="PASS" starttime="20201029 12:44:00.385" endtime="20201029 12:44:00.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.380" endtime="20201029 12:44:00.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:00.391" endtime="20201029 12:44:00.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.390" endtime="20201029 12:44:00.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.388" endtime="20201029 12:44:00.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.029" endtime="20201029 12:44:00.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.028" endtime="20201029 12:44:00.412"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.421" endtime="20201029 12:44:00.438"></status>
</kw>
<msg timestamp="20201029 12:44:00.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.419" endtime="20201029 12:44:00.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.440" endtime="20201029 12:44:00.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.442" endtime="20201029 12:44:00.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.416" endtime="20201029 12:44:00.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.414" endtime="20201029 12:44:00.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.451" endtime="20201029 12:44:00.738"></status>
</kw>
<msg timestamp="20201029 12:44:00.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022985361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023027097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.450" endtime="20201029 12:44:00.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022985361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023027097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.742" endtime="20201029 12:44:00.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.751" endtime="20201029 12:44:00.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.447" endtime="20201029 12:44:00.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.446" endtime="20201029 12:44:00.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:00.757" level="INFO">${RESULT} = [{'diff': 4.173600000000055e-05}, {'diff': 4.2096999999997886e-05}, {'diff': 4.177799999999926e-05}, {'diff': 4.222200000000148e-05}, {'diff': 4.1861000000000675e-05}, {'diff': 4.127799999999876e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:00.754" endtime="20201029 12:44:00.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:00.762" level="INFO">${ACCURACY} = {'diff': [4.173600000000055e-05, 4.2096999999997886e-05, 4.177799999999926e-05, 4.222200000000148e-05, 4.1861000000000675e-05, 4.127799999999876e-05, 4.1444999999997595e-05, 4.176399999999969e-05, 4.2...</msg>
<status status="PASS" starttime="20201029 12:44:00.759" endtime="20201029 12:44:00.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.766" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 12:44:00.765" endtime="20201029 12:44:00.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.769" level="INFO">VALUE: [4.173600000000055e-05, 4.2096999999997886e-05, 4.177799999999926e-05, 4.222200000000148e-05, 4.1861000000000675e-05, 4.127799999999876e-05, 4.1444999999997595e-05, 4.176399999999969e-05, 4.202799999999951e-05, 4.151399999999944e-05, 4.1611000000000425e-05, 4.201399999999994e-05, 4.19860000000008e-05, 4.188800000000034e-05, 4.176399999999969e-05, 4.149999999999987e-05, 4.1776999999999787e-05, 4.1526999999999537e-05, 4.1290999999998856e-05, 4.190199999999991e-05, 4.218000000000277e-05, 4.1361000000000175e-05, 4.2082999999998316e-05, 4.1611000000000425e-05, 4.149999999999987e-05, 4.2125000000000495e-05, 4.1333000000001036e-05, 4.2082999999998316e-05, 4.177799999999926e-05, 4.1875000000000245e-05, 4.1431000000001494e-05, 4.173600000000055e-05, 4.1666999999998705e-05, 4.1847000000001106e-05, 4.1374999999999745e-05, 4.194399999999862e-05, 4.1597000000000856e-05, 4.165199999999966e-05, 4.190199999999991e-05, 4.175000000000012e-05, 4.149999999999987e-05, 4.177799999999926e-05, 4.1361000000000175e-05, 4.177799999999926e-05, 4.152799999999901e-05, 4.177799999999926e-05, 4.130600000000137e-05, 4.129199999999833e-05, 4.157000000000119e-05, 4.181999999999797e-05]</msg>
<status status="PASS" starttime="20201029 12:44:00.768" endtime="20201029 12:44:00.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.763" endtime="20201029 12:44:00.775"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:00.779" endtime="20201029 12:44:00.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.778" endtime="20201029 12:44:00.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.776" endtime="20201029 12:44:00.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.413" endtime="20201029 12:44:00.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.412" endtime="20201029 12:44:00.800"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.809" endtime="20201029 12:44:00.826"></status>
</kw>
<msg timestamp="20201029 12:44:00.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.808" endtime="20201029 12:44:00.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.827" endtime="20201029 12:44:00.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.830" endtime="20201029 12:44:00.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.805" endtime="20201029 12:44:00.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.803" endtime="20201029 12:44:00.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.839" endtime="20201029 12:44:01.125"></status>
</kw>
<msg timestamp="20201029 12:44:01.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022682528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.838" endtime="20201029 12:44:01.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022682528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.129" endtime="20201029 12:44:01.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.138" endtime="20201029 12:44:01.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.835" endtime="20201029 12:44:01.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.833" endtime="20201029 12:44:01.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:01.144" level="INFO">${RESULT} = [{'diff': 4.232000000000194e-05}, {'diff': 4.2444999999998595e-05}, {'diff': 4.277700000000079e-05}, {'diff': 4.2625000000000995e-05}, {'diff': 4.234799999999761e-05}, {'diff': 4.320799999999944e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:01.141" endtime="20201029 12:44:01.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:01.150" level="INFO">${ACCURACY} = {'diff': [4.232000000000194e-05, 4.2444999999998595e-05, 4.277700000000079e-05, 4.2625000000000995e-05, 4.234799999999761e-05, 4.320799999999944e-05, 4.24860000000013e-05, 4.2625000000000995e-05, 4.30...</msg>
<status status="PASS" starttime="20201029 12:44:01.145" endtime="20201029 12:44:01.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.155" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 12:44:01.153" endtime="20201029 12:44:01.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.158" level="INFO">VALUE: [4.232000000000194e-05, 4.2444999999998595e-05, 4.277700000000079e-05, 4.2625000000000995e-05, 4.234799999999761e-05, 4.320799999999944e-05, 4.24860000000013e-05, 4.2625000000000995e-05, 4.3096999999998886e-05, 4.244400000000259e-05, 4.2611000000001426e-05, 4.293000000000005e-05, 4.325000000000162e-05, 4.3082999999999316e-05, 4.2889000000000815e-05, 4.277800000000026e-05, 4.234800000000108e-05, 4.3180999999999775e-05, 4.308399999999879e-05, 4.3209000000002384e-05, 4.300000000000137e-05, 4.277800000000026e-05, 4.26799999999998e-05, 4.2625000000000995e-05, 4.263799999999762e-05, 4.2361000000001175e-05, 4.320799999999944e-05, 4.2332999999998566e-05, 4.3167000000000205e-05, 4.258399999999829e-05, 4.2611000000001426e-05, 4.2930999999999525e-05, 4.2666999999999705e-05, 4.3083000000002786e-05, 4.3096999999998886e-05, 4.2930999999999525e-05, 4.325000000000162e-05, 4.3012999999998e-05, 4.2290999999999856e-05, 4.225000000000062e-05, 4.2791000000000357e-05, 4.301399999999747e-05, 4.290200000000091e-05, 4.31800000000003e-05, 4.2596999999998386e-05, 4.220799999999844e-05, 4.229199999999933e-05, 4.244399999999912e-05, 4.2625000000000995e-05, 4.223600000000105e-05]</msg>
<status status="PASS" starttime="20201029 12:44:01.156" endtime="20201029 12:44:01.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.150" endtime="20201029 12:44:01.159"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:01.163" endtime="20201029 12:44:01.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.161" endtime="20201029 12:44:01.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.160" endtime="20201029 12:44:01.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.801" endtime="20201029 12:44:01.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.800" endtime="20201029 12:44:01.184"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.193" endtime="20201029 12:44:01.210"></status>
</kw>
<msg timestamp="20201029 12:44:01.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.191" endtime="20201029 12:44:01.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.211" endtime="20201029 12:44:01.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.214" endtime="20201029 12:44:01.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.188" endtime="20201029 12:44:01.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.186" endtime="20201029 12:44:01.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.223" endtime="20201029 12:44:01.513"></status>
</kw>
<msg timestamp="20201029 12:44:01.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022376472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022420694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.222" endtime="20201029 12:44:01.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022376472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022420694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.517" endtime="20201029 12:44:01.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.526" endtime="20201029 12:44:01.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.219" endtime="20201029 12:44:01.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.217" endtime="20201029 12:44:01.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:01.532" level="INFO">${RESULT} = [{'diff': 4.422200000000001e-05}, {'diff': 4.381999999999997e-05}, {'diff': 4.369400000000037e-05}, {'diff': 4.327699999999782e-05}, {'diff': 4.394400000000062e-05}, {'diff': 4.3346999999999136e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:01.529" endtime="20201029 12:44:01.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:01.536" level="INFO">${ACCURACY} = {'diff': [4.422200000000001e-05, 4.381999999999997e-05, 4.369400000000037e-05, 4.327699999999782e-05, 4.394400000000062e-05, 4.3346999999999136e-05, 4.3639000000001565e-05, 4.3360999999998706e-05, 4.3...</msg>
<status status="PASS" starttime="20201029 12:44:01.533" endtime="20201029 12:44:01.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.541" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 12:44:01.540" endtime="20201029 12:44:01.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.543" level="INFO">VALUE: [4.422200000000001e-05, 4.381999999999997e-05, 4.369400000000037e-05, 4.327699999999782e-05, 4.394400000000062e-05, 4.3346999999999136e-05, 4.3639000000001565e-05, 4.3360999999998706e-05, 4.3624999999998526e-05, 4.379200000000083e-05, 4.379200000000083e-05, 4.3819000000000496e-05, 4.4208999999999915e-05, 4.3888999999998346e-05, 4.4153000000001635e-05, 4.36800000000008e-05, 4.361199999999843e-05, 4.395800000000019e-05, 4.3819000000000496e-05, 4.3374999999998276e-05, 4.3403000000000885e-05, 4.415200000000216e-05, 4.4096999999999886e-05, 4.420800000000044e-05, 4.3374999999998276e-05, 4.377800000000126e-05, 4.38060000000004e-05, 4.3681000000000275e-05, 4.326400000000119e-05, 4.3610999999998956e-05, 4.3375000000001745e-05, 4.3624999999998526e-05, 4.324999999999815e-05, 4.363800000000209e-05, 4.325000000000162e-05, 4.3625000000001996e-05, 4.343000000000055e-05, 4.347199999999926e-05, 4.3611000000002426e-05, 4.377800000000126e-05, 4.397199999999976e-05, 4.3332999999999566e-05, 4.4096999999999886e-05, 4.3360999999998706e-05, 4.4138999999998596e-05, 4.395800000000019e-05, 4.3846999999999636e-05, 4.3833000000000066e-05, 4.397199999999976e-05, 4.3624999999998526e-05]</msg>
<status status="PASS" starttime="20201029 12:44:01.542" endtime="20201029 12:44:01.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.537" endtime="20201029 12:44:01.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:01.548" endtime="20201029 12:44:01.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.547" endtime="20201029 12:44:01.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.546" endtime="20201029 12:44:01.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.185" endtime="20201029 12:44:01.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.184" endtime="20201029 12:44:01.569"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.579" endtime="20201029 12:44:01.598"></status>
</kw>
<msg timestamp="20201029 12:44:01.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.576" endtime="20201029 12:44:01.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.599" endtime="20201029 12:44:01.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.603" endtime="20201029 12:44:01.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.573" endtime="20201029 12:44:01.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.571" endtime="20201029 12:44:01.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.618" endtime="20201029 12:44:01.904"></status>
</kw>
<msg timestamp="20201029 12:44:01.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02480825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024852792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:01.616" endtime="20201029 12:44:01.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02480825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024852792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:01.909" endtime="20201029 12:44:01.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.917" endtime="20201029 12:44:01.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.611" endtime="20201029 12:44:01.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.608" endtime="20201029 12:44:01.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:01.923" level="INFO">${RESULT} = [{'diff': 4.454199999999811e-05}, {'diff': 4.44999999999994e-05}, {'diff': 4.516599999999926e-05}, {'diff': 4.426400000000219e-05}, {'diff': 4.427700000000229e-05}, {'diff': 4.495800000000119e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:01.920" endtime="20201029 12:44:01.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:01.928" level="INFO">${ACCURACY} = {'diff': [4.454199999999811e-05, 4.44999999999994e-05, 4.516599999999926e-05, 4.426400000000219e-05, 4.427700000000229e-05, 4.495800000000119e-05, 4.451400000000244e-05, 4.442999999999808e-05, 4.48200...</msg>
<status status="PASS" starttime="20201029 12:44:01.924" endtime="20201029 12:44:01.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.932" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 12:44:01.931" endtime="20201029 12:44:01.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.935" level="INFO">VALUE: [4.454199999999811e-05, 4.44999999999994e-05, 4.516599999999926e-05, 4.426400000000219e-05, 4.427700000000229e-05, 4.495800000000119e-05, 4.451400000000244e-05, 4.442999999999808e-05, 4.482000000000097e-05, 4.4416999999997986e-05, 4.5111000000000456e-05, 4.505600000000165e-05, 4.4459000000000165e-05, 4.4958999999997196e-05, 4.4680999999997806e-05, 4.48060000000014e-05, 4.49999999999999e-05, 4.479199999999836e-05, 4.5097000000000886e-05, 4.517999999999883e-05, 4.4417000000001455e-05, 4.5111000000000456e-05, 4.49999999999999e-05, 4.480500000000193e-05, 4.5111000000000456e-05, 4.4819000000001497e-05, 4.4847000000000636e-05, 4.502799999999904e-05, 4.5111000000000456e-05, 4.452800000000201e-05, 4.4666999999998236e-05, 4.498600000000033e-05, 4.452799999999854e-05, 4.5181000000001775e-05, 4.4959000000000665e-05, 4.455499999999821e-05, 4.444400000000112e-05, 4.4652999999998666e-05, 4.504099999999914e-05, 4.467999999999833e-05, 4.497199999999729e-05, 4.4833000000001066e-05, 4.427800000000176e-05, 4.504099999999914e-05, 4.481899999999803e-05, 4.5166999999998736e-05, 4.497200000000076e-05, 4.5181000000001775e-05, 4.455600000000115e-05, 4.477799999999879e-05]</msg>
<status status="PASS" starttime="20201029 12:44:01.933" endtime="20201029 12:44:01.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.929" endtime="20201029 12:44:01.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:01.940" endtime="20201029 12:44:01.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.939" endtime="20201029 12:44:01.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.938" endtime="20201029 12:44:01.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.570" endtime="20201029 12:44:01.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.569" endtime="20201029 12:44:01.961"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.970" endtime="20201029 12:44:01.987"></status>
</kw>
<msg timestamp="20201029 12:44:01.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.968" endtime="20201029 12:44:01.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.989" endtime="20201029 12:44:01.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.991" endtime="20201029 12:44:01.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.966" endtime="20201029 12:44:01.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.964" endtime="20201029 12:44:01.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.000" endtime="20201029 12:44:02.304"></status>
</kw>
<msg timestamp="20201029 12:44:02.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022312333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022358056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.999" endtime="20201029 12:44:02.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022312333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022358056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.308" endtime="20201029 12:44:02.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.316" endtime="20201029 12:44:02.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.996" endtime="20201029 12:44:02.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.995" endtime="20201029 12:44:02.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:02.323" level="INFO">${RESULT} = [{'diff': 4.5723000000000985e-05}, {'diff': 4.6013999999997e-05}, {'diff': 4.575000000000065e-05}, {'diff': 4.524999999999668e-05}, {'diff': 4.602700000000057e-05}, {'diff': 4.531899999999853e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:02.319" endtime="20201029 12:44:02.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:02.328" level="INFO">${ACCURACY} = {'diff': [4.5723000000000985e-05, 4.6013999999997e-05, 4.575000000000065e-05, 4.524999999999668e-05, 4.602700000000057e-05, 4.531899999999853e-05, 4.558299999999835e-05, 4.5611000000000956e-05, 4.5791...</msg>
<status status="PASS" starttime="20201029 12:44:02.324" endtime="20201029 12:44:02.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.332" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 12:44:02.331" endtime="20201029 12:44:02.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.335" level="INFO">VALUE: [4.5723000000000985e-05, 4.6013999999997e-05, 4.575000000000065e-05, 4.524999999999668e-05, 4.602700000000057e-05, 4.531899999999853e-05, 4.558299999999835e-05, 4.5611000000000956e-05, 4.579199999999936e-05, 4.576400000000022e-05, 4.579199999999936e-05, 4.526399999999972e-05, 4.5375000000000276e-05, 4.548600000000083e-05, 4.6194999999998876e-05, 4.5972999999997766e-05, 4.575000000000065e-05, 4.561200000000043e-05, 4.597199999999829e-05, 4.525000000000015e-05, 4.551399999999997e-05, 4.574999999999718e-05, 4.579099999999989e-05, 4.594400000000262e-05, 4.526399999999972e-05, 4.5361000000000706e-05, 4.6111000000001456e-05, 4.573600000000108e-05, 4.579199999999936e-05, 4.5930999999999056e-05, 4.576400000000022e-05, 4.5459000000001165e-05, 4.55000000000004e-05, 4.529199999999886e-05, 4.554099999999964e-05, 4.55000000000004e-05, 4.526300000000025e-05, 4.60000000000009e-05, 4.617999999999983e-05, 4.527699999999982e-05, 4.5444999999998126e-05, 4.573599999999761e-05, 4.559699999999792e-05, 4.5611000000000956e-05, 4.554199999999911e-05, 4.6013000000001e-05, 4.520800000000144e-05, 4.551399999999997e-05, 4.5444999999998126e-05, 4.5625000000000526e-05]</msg>
<status status="PASS" starttime="20201029 12:44:02.333" endtime="20201029 12:44:02.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.329" endtime="20201029 12:44:02.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:02.340" endtime="20201029 12:44:02.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.338" endtime="20201029 12:44:02.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.337" endtime="20201029 12:44:02.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.962" endtime="20201029 12:44:02.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.961" endtime="20201029 12:44:02.360"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.369" endtime="20201029 12:44:02.386"></status>
</kw>
<msg timestamp="20201029 12:44:02.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.367" endtime="20201029 12:44:02.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.388" endtime="20201029 12:44:02.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.390" endtime="20201029 12:44:02.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.365" endtime="20201029 12:44:02.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.363" endtime="20201029 12:44:02.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.399" endtime="20201029 12:44:02.685"></status>
</kw>
<msg timestamp="20201029 12:44:02.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021834472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021881208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.398" endtime="20201029 12:44:02.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021834472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021881208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.690" endtime="20201029 12:44:02.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.698" endtime="20201029 12:44:02.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.395" endtime="20201029 12:44:02.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.393" endtime="20201029 12:44:02.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:02.705" level="INFO">${RESULT} = [{'diff': 4.673599999999861e-05}, {'diff': 4.6333000000002567e-05}, {'diff': 4.658299999999935e-05}, {'diff': 4.6625000000001526e-05}, {'diff': 4.643000000000008e-05}, {'diff': 4.717999999999736e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:02.701" endtime="20201029 12:44:02.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:02.709" level="INFO">${ACCURACY} = {'diff': [4.673599999999861e-05, 4.6333000000002567e-05, 4.658299999999935e-05, 4.6625000000001526e-05, 4.643000000000008e-05, 4.717999999999736e-05, 4.676399999999775e-05, 4.659699999999892e-05, 4.71...</msg>
<status status="PASS" starttime="20201029 12:44:02.705" endtime="20201029 12:44:02.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.713" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 12:44:02.712" endtime="20201029 12:44:02.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.716" level="INFO">VALUE: [4.673599999999861e-05, 4.6333000000002567e-05, 4.658299999999935e-05, 4.6625000000001526e-05, 4.643000000000008e-05, 4.717999999999736e-05, 4.676399999999775e-05, 4.659699999999892e-05, 4.7139000000001596e-05, 4.676400000000122e-05, 4.6583000000002817e-05, 4.661099999999849e-05, 4.6223000000001485e-05, 4.706900000000028e-05, 4.70000000000019e-05, 4.6987000000001805e-05, 4.651400000000097e-05, 4.675000000000165e-05, 4.644400000000312e-05, 4.702700000000157e-05, 4.7013999999998e-05, 4.654200000000011e-05, 4.6375000000001276e-05, 4.654200000000011e-05, 4.715199999999822e-05, 4.6959000000002665e-05, 4.624999999999768e-05, 4.6695000000002845e-05, 4.6903000000000916e-05, 4.627800000000029e-05, 4.7181000000000306e-05, 4.638800000000137e-05, 4.627700000000082e-05, 4.701400000000147e-05, 4.666600000000076e-05, 4.676400000000122e-05, 4.648600000000183e-05, 4.718000000000083e-05, 4.634800000000161e-05, 4.656999999999925e-05, 4.672199999999904e-05, 4.627800000000029e-05, 4.631899999999953e-05, 4.627800000000029e-05, 4.699999999999843e-05, 4.6347000000002136e-05, 4.629199999999986e-05, 4.684800000000211e-05, 4.663799999999815e-05, 4.656999999999925e-05]</msg>
<status status="PASS" starttime="20201029 12:44:02.714" endtime="20201029 12:44:02.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.709" endtime="20201029 12:44:02.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:02.720" endtime="20201029 12:44:02.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.719" endtime="20201029 12:44:02.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.718" endtime="20201029 12:44:02.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.361" endtime="20201029 12:44:02.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.361" endtime="20201029 12:44:02.741"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.750" endtime="20201029 12:44:02.768"></status>
</kw>
<msg timestamp="20201029 12:44:02.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.748" endtime="20201029 12:44:02.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.770" endtime="20201029 12:44:02.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.772" endtime="20201029 12:44:02.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.746" endtime="20201029 12:44:02.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.744" endtime="20201029 12:44:02.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.781" endtime="20201029 12:44:03.068"></status>
</kw>
<msg timestamp="20201029 12:44:03.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022999389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023046958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.780" endtime="20201029 12:44:03.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022999389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023046958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.072" endtime="20201029 12:44:03.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.080" endtime="20201029 12:44:03.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.777" endtime="20201029 12:44:03.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.775" endtime="20201029 12:44:03.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.087" level="INFO">${RESULT} = [{'diff': 4.756900000000078e-05}, {'diff': 4.801400000000247e-05}, {'diff': 4.743000000000108e-05}, {'diff': 4.770800000000047e-05}, {'diff': 4.808300000000085e-05}, {'diff': 4.806900000000128e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:03.084" endtime="20201029 12:44:03.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:03.091" level="INFO">${ACCURACY} = {'diff': [4.756900000000078e-05, 4.801400000000247e-05, 4.743000000000108e-05, 4.770800000000047e-05, 4.808300000000085e-05, 4.806900000000128e-05, 4.775000000000265e-05, 4.761099999999949e-05, 4.7583...</msg>
<status status="PASS" starttime="20201029 12:44:03.088" endtime="20201029 12:44:03.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.096" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 12:44:03.095" endtime="20201029 12:44:03.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.098" level="INFO">VALUE: [4.756900000000078e-05, 4.801400000000247e-05, 4.743000000000108e-05, 4.770800000000047e-05, 4.808300000000085e-05, 4.806900000000128e-05, 4.775000000000265e-05, 4.761099999999949e-05, 4.758300000000035e-05, 4.75139999999985e-05, 4.7430999999997087e-05, 4.8139000000002596e-05, 4.784800000000311e-05, 4.809700000000042e-05, 4.779199999999789e-05, 4.729200000000086e-05, 4.799999999999943e-05, 4.758399999999982e-05, 4.75000000000024e-05, 4.779099999999842e-05, 4.742999999999761e-05, 4.804200000000161e-05, 4.747199999999979e-05, 4.761099999999949e-05, 4.76940000000009e-05, 4.775000000000265e-05, 4.787499999999931e-05, 4.754099999999817e-05, 4.78200000000005e-05, 4.7445000000000126e-05, 4.799999999999943e-05, 4.808400000000032e-05, 4.816600000000226e-05, 4.799999999999943e-05, 4.790299999999845e-05, 4.729100000000139e-05, 4.765199999999872e-05, 4.744400000000065e-05, 4.819399999999793e-05, 4.801400000000247e-05, 4.8167000000001736e-05, 4.781900000000103e-05, 4.7389000000001846e-05, 4.731900000000053e-05, 4.7708999999999946e-05, 4.7903000000001916e-05, 4.7445000000000126e-05, 4.7653000000001666e-05, 4.808400000000032e-05, 4.756900000000078e-05]</msg>
<status status="PASS" starttime="20201029 12:44:03.097" endtime="20201029 12:44:03.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.092" endtime="20201029 12:44:03.100"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:03.104" endtime="20201029 12:44:03.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.102" endtime="20201029 12:44:03.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.101" endtime="20201029 12:44:03.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.742" endtime="20201029 12:44:03.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.741" endtime="20201029 12:44:03.125"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.133" endtime="20201029 12:44:03.151"></status>
</kw>
<msg timestamp="20201029 12:44:03.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.132" endtime="20201029 12:44:03.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.153" endtime="20201029 12:44:03.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.155" endtime="20201029 12:44:03.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.129" endtime="20201029 12:44:03.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.127" endtime="20201029 12:44:03.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.164" endtime="20201029 12:44:03.449"></status>
</kw>
<msg timestamp="20201029 12:44:03.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022434708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.162" endtime="20201029 12:44:03.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022434708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.453" endtime="20201029 12:44:03.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.461" endtime="20201029 12:44:03.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.160" endtime="20201029 12:44:03.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.158" endtime="20201029 12:44:03.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.468" level="INFO">${RESULT} = [{'diff': 4.890199999999997e-05}, {'diff': 4.919399999999893e-05}, {'diff': 4.822200000000054e-05}, {'diff': 4.845800000000122e-05}, {'diff': 4.8389000000002846e-05}, {'diff': 4.859699999999745e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:03.465" endtime="20201029 12:44:03.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:03.473" level="INFO">${ACCURACY} = {'diff': [4.890199999999997e-05, 4.919399999999893e-05, 4.822200000000054e-05, 4.845800000000122e-05, 4.8389000000002846e-05, 4.859699999999745e-05, 4.9181000000002306e-05, 4.908299999999838e-05, 4.82...</msg>
<status status="PASS" starttime="20201029 12:44:03.469" endtime="20201029 12:44:03.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.478" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 12:44:03.477" endtime="20201029 12:44:03.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.480" level="INFO">VALUE: [4.890199999999997e-05, 4.919399999999893e-05, 4.822200000000054e-05, 4.845800000000122e-05, 4.8389000000002846e-05, 4.859699999999745e-05, 4.9181000000002306e-05, 4.908299999999838e-05, 4.829199999999839e-05, 4.893099999999859e-05, 4.9195000000001876e-05, 4.836100000000024e-05, 4.926400000000025e-05, 4.852799999999907e-05, 4.827699999999935e-05, 4.906999999999828e-05, 4.854199999999864e-05, 4.849999999999993e-05, 4.85139999999995e-05, 4.912500000000056e-05, 4.859700000000092e-05, 4.837499999999981e-05, 4.852799999999907e-05, 4.909699999999795e-05, 4.877800000000279e-05, 4.892999999999911e-05, 4.830500000000196e-05, 4.840299999999895e-05, 4.906999999999828e-05, 4.851400000000297e-05, 4.8486999999999836e-05, 4.872200000000104e-05, 4.907000000000175e-05, 4.845800000000122e-05, 4.917999999999936e-05, 4.834700000000067e-05, 4.826400000000272e-05, 4.875000000000018e-05, 4.886100000000074e-05, 4.859699999999745e-05, 4.900000000000043e-05, 4.829200000000186e-05, 4.875000000000018e-05, 4.849999999999993e-05, 4.829199999999839e-05, 4.861100000000049e-05, 4.866699999999877e-05, 4.859800000000039e-05, 4.9014e-05, 4.844399999999818e-05]</msg>
<status status="PASS" starttime="20201029 12:44:03.479" endtime="20201029 12:44:03.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.474" endtime="20201029 12:44:03.481"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:03.485" endtime="20201029 12:44:03.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.484" endtime="20201029 12:44:03.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.482" endtime="20201029 12:44:03.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.126" endtime="20201029 12:44:03.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.125" endtime="20201029 12:44:03.507"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.522" endtime="20201029 12:44:03.541"></status>
</kw>
<msg timestamp="20201029 12:44:03.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.519" endtime="20201029 12:44:03.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.542" endtime="20201029 12:44:03.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.545" endtime="20201029 12:44:03.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.516" endtime="20201029 12:44:03.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.512" endtime="20201029 12:44:03.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.554" endtime="20201029 12:44:03.840"></status>
</kw>
<msg timestamp="20201029 12:44:03.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030788542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03083875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:03.552" endtime="20201029 12:44:03.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030788542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03083875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:03.844" endtime="20201029 12:44:03.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.852" endtime="20201029 12:44:03.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.549" endtime="20201029 12:44:03.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.548" endtime="20201029 12:44:03.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.858" level="INFO">${RESULT} = [{'diff': 5.020800000000297e-05}, {'diff': 4.933299999999863e-05}, {'diff': 5.018099999999984e-05}, {'diff': 4.991700000000002e-05}, {'diff': 4.984800000000164e-05}, {'diff': 4.945799999999875e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:03.855" endtime="20201029 12:44:03.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:03.863" level="INFO">${ACCURACY} = {'diff': [5.020800000000297e-05, 4.933299999999863e-05, 5.018099999999984e-05, 4.991700000000002e-05, 4.984800000000164e-05, 4.945799999999875e-05, 4.976300000000128e-05, 4.980599999999946e-05, 4.9944...</msg>
<status status="PASS" starttime="20201029 12:44:03.859" endtime="20201029 12:44:03.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.867" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 12:44:03.866" endtime="20201029 12:44:03.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.869" level="INFO">VALUE: [5.020800000000297e-05, 4.933299999999863e-05, 5.018099999999984e-05, 4.991700000000002e-05, 4.984800000000164e-05, 4.945799999999875e-05, 4.976300000000128e-05, 4.980599999999946e-05, 4.994400000000315e-05, 5.005500000000024e-05, 4.941699999999605e-05, 5.009699999999895e-05, 4.955599999999921e-05, 4.947200000000179e-05, 4.977800000000032e-05, 5.0167000000003736e-05, 4.9459000000001696e-05, 4.976400000000075e-05, 4.98060000000064e-05, 4.947200000000179e-05, 4.944499999999519e-05, 4.9443999999995714e-05, 4.9931000000003056e-05, 4.9667000000003236e-05, 4.979100000000042e-05, 4.952800000000007e-05, 5.022200000000254e-05, 4.998600000000186e-05, 5.009700000000589e-05, 4.931899999999906e-05, 4.993099999999612e-05, 5.019499999999594e-05, 4.9737000000001086e-05, 4.965299999999673e-05, 4.9695000000002376e-05, 4.9651999999997254e-05, 4.998600000000186e-05, 4.930499999999949e-05, 4.925000000000068e-05, 5.01669999999968e-05, 4.998600000000186e-05, 5.0221999999995603e-05, 4.998599999999492e-05, 4.945800000000222e-05, 4.9915999999997074e-05, 5.018099999999637e-05, 4.937499999999734e-05, 4.9931000000003056e-05, 4.950000000000093e-05, 5.002800000000057e-05]</msg>
<status status="PASS" starttime="20201029 12:44:03.868" endtime="20201029 12:44:03.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.863" endtime="20201029 12:44:03.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:03.874" endtime="20201029 12:44:03.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.873" endtime="20201029 12:44:03.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.872" endtime="20201029 12:44:03.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.509" endtime="20201029 12:44:03.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.508" endtime="20201029 12:44:03.895"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.904" endtime="20201029 12:44:03.922"></status>
</kw>
<msg timestamp="20201029 12:44:03.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.902" endtime="20201029 12:44:03.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.924" endtime="20201029 12:44:03.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.926" endtime="20201029 12:44:03.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.900" endtime="20201029 12:44:03.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.898" endtime="20201029 12:44:03.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.936" endtime="20201029 12:44:04.221"></status>
</kw>
<msg timestamp="20201029 12:44:04.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023161625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.934" endtime="20201029 12:44:04.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023161625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.225" endtime="20201029 12:44:04.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.233" endtime="20201029 12:44:04.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.931" endtime="20201029 12:44:04.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.929" endtime="20201029 12:44:04.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:04.240" level="INFO">${RESULT} = [{'diff': 5.03469999999992e-05}, {'diff': 5.1193999999997464e-05}, {'diff': 5.054199999999717e-05}, {'diff': 5.090299999999798e-05}, {'diff': 5.104200000000114e-05}, {'diff': 5.079200000000089e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:04.237" endtime="20201029 12:44:04.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:04.244" level="INFO">${ACCURACY} = {'diff': [5.03469999999992e-05, 5.1193999999997464e-05, 5.054199999999717e-05, 5.090299999999798e-05, 5.104200000000114e-05, 5.079200000000089e-05, 5.100000000000243e-05, 5.109699999999995e-05, 5.1041...</msg>
<status status="PASS" starttime="20201029 12:44:04.241" endtime="20201029 12:44:04.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.248" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 12:44:04.247" endtime="20201029 12:44:04.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.251" level="INFO">VALUE: [5.03469999999992e-05, 5.1193999999997464e-05, 5.054199999999717e-05, 5.090299999999798e-05, 5.104200000000114e-05, 5.079200000000089e-05, 5.100000000000243e-05, 5.109699999999995e-05, 5.104100000000167e-05, 5.025000000000168e-05, 5.113899999999866e-05, 5.052800000000107e-05, 5.101399999999853e-05, 5.059699999999945e-05, 5.059699999999945e-05, 5.026400000000125e-05, 5.097199999999982e-05, 5.036100000000224e-05, 5.049999999999846e-05, 5.063899999999816e-05, 5.105600000000071e-05, 5.023599999999864e-05, 5.093100000000059e-05, 5.086099999999927e-05, 5.025000000000168e-05, 5.094500000000016e-05, 5.086099999999927e-05, 5.107000000000028e-05, 5.086099999999927e-05, 5.111099999999952e-05, 5.12080000000005e-05, 5.026399999999778e-05, 5.083400000000307e-05, 5.03469999999992e-05, 5.026399999999778e-05, 5.027800000000082e-05, 5.054100000000117e-05, 5.066600000000129e-05, 5.061099999999902e-05, 5.024999999999821e-05, 5.093100000000059e-05, 5.06530000000012e-05, 5.049999999999846e-05, 5.123599999999964e-05, 5.111099999999952e-05, 5.12080000000005e-05, 5.076400000000175e-05, 5.026400000000125e-05, 5.111099999999952e-05, 5.104199999999767e-05]</msg>
<status status="PASS" starttime="20201029 12:44:04.250" endtime="20201029 12:44:04.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.245" endtime="20201029 12:44:04.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:04.257" endtime="20201029 12:44:04.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.255" endtime="20201029 12:44:04.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.254" endtime="20201029 12:44:04.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.896" endtime="20201029 12:44:04.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.895" endtime="20201029 12:44:04.277"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.286" endtime="20201029 12:44:04.303"></status>
</kw>
<msg timestamp="20201029 12:44:04.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.284" endtime="20201029 12:44:04.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.305" endtime="20201029 12:44:04.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.307" endtime="20201029 12:44:04.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.282" endtime="20201029 12:44:04.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.280" endtime="20201029 12:44:04.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.316" endtime="20201029 12:44:04.603"></status>
</kw>
<msg timestamp="20201029 12:44:04.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022019403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.315" endtime="20201029 12:44:04.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022019403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.607" endtime="20201029 12:44:04.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.615" endtime="20201029 12:44:04.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.312" endtime="20201029 12:44:04.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.311" endtime="20201029 12:44:04.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:04.622" level="INFO">${RESULT} = [{'diff': 5.183300000000113e-05}, {'diff': 5.161100000000002e-05}, {'diff': 5.126400000000225e-05}, {'diff': 5.18340000000006e-05}, {'diff': 5.211099999999705e-05}, {'diff': 5.137499999999934e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:04.618" endtime="20201029 12:44:04.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:04.627" level="INFO">${ACCURACY} = {'diff': [5.183300000000113e-05, 5.161100000000002e-05, 5.126400000000225e-05, 5.18340000000006e-05, 5.211099999999705e-05, 5.137499999999934e-05, 5.134699999999673e-05, 5.18340000000006e-05, 5.209800...</msg>
<status status="PASS" starttime="20201029 12:44:04.623" endtime="20201029 12:44:04.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.631" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 12:44:04.630" endtime="20201029 12:44:04.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.634" level="INFO">VALUE: [5.183300000000113e-05, 5.161100000000002e-05, 5.126400000000225e-05, 5.18340000000006e-05, 5.211099999999705e-05, 5.137499999999934e-05, 5.134699999999673e-05, 5.18340000000006e-05, 5.209800000000042e-05, 5.2165999999999324e-05, 5.197200000000082e-05, 5.13470000000002e-05, 5.209699999999748e-05, 5.162499999999959e-05, 5.195800000000125e-05, 5.205600000000171e-05, 5.195800000000125e-05, 5.166700000000177e-05, 5.168000000000186e-05, 5.166700000000177e-05, 5.13340000000001e-05, 5.127799999999835e-05, 5.154200000000164e-05, 5.16669999999983e-05, 5.145800000000075e-05, 5.209700000000095e-05, 5.209700000000095e-05, 5.199999999999996e-05, 5.198600000000039e-05, 5.181900000000156e-05, 5.168100000000134e-05, 5.175000000000318e-05, 5.18470000000007e-05, 5.186100000000027e-05, 5.16530000000022e-05, 5.218099999999837e-05, 5.1457999999997284e-05, 5.208400000000085e-05, 5.223600000000064e-05, 5.1916000000002543e-05, 5.2151999999999754e-05, 5.180499999999852e-05, 5.212500000000009e-05, 5.197200000000082e-05, 5.137500000000281e-05, 5.168100000000134e-05, 5.218100000000184e-05, 5.144499999999719e-05, 5.209699999999748e-05, 5.154199999999817e-05]</msg>
<status status="PASS" starttime="20201029 12:44:04.632" endtime="20201029 12:44:04.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.627" endtime="20201029 12:44:04.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:04.639" endtime="20201029 12:44:04.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.637" endtime="20201029 12:44:04.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.636" endtime="20201029 12:44:04.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.278" endtime="20201029 12:44:04.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.278" endtime="20201029 12:44:04.660"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.668" endtime="20201029 12:44:04.685"></status>
</kw>
<msg timestamp="20201029 12:44:04.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.667" endtime="20201029 12:44:04.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.686" endtime="20201029 12:44:04.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.689" endtime="20201029 12:44:04.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.664" endtime="20201029 12:44:04.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.662" endtime="20201029 12:44:04.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.698" endtime="20201029 12:44:04.987"></status>
</kw>
<msg timestamp="20201029 12:44:04.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021811375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.696" endtime="20201029 12:44:04.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021811375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.991" endtime="20201029 12:44:04.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.999" endtime="20201029 12:44:05.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.694" endtime="20201029 12:44:05.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.692" endtime="20201029 12:44:05.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.006" level="INFO">${RESULT} = [{'diff': 5.241699999999905e-05}, {'diff': 5.25279999999996e-05}, {'diff': 5.295900000000173e-05}, {'diff': 5.311100000000152e-05}, {'diff': 5.286199999999727e-05}, {'diff': 5.276300000000081e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:05.002" endtime="20201029 12:44:05.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.010" level="INFO">${ACCURACY} = {'diff': [5.241699999999905e-05, 5.25279999999996e-05, 5.295900000000173e-05, 5.311100000000152e-05, 5.286199999999727e-05, 5.276300000000081e-05, 5.227699999999988e-05, 5.276400000000028e-05, 5.32500...</msg>
<status status="PASS" starttime="20201029 12:44:05.007" endtime="20201029 12:44:05.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.014" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.013" endtime="20201029 12:44:05.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.017" level="INFO">VALUE: [5.241699999999905e-05, 5.25279999999996e-05, 5.295900000000173e-05, 5.311100000000152e-05, 5.286199999999727e-05, 5.276300000000081e-05, 5.227699999999988e-05, 5.276400000000028e-05, 5.325000000000121e-05, 5.2957999999998784e-05, 5.262500000000059e-05, 5.277799999999985e-05, 5.277799999999985e-05, 5.227799999999935e-05, 5.269499999999844e-05, 5.270900000000148e-05, 5.231999999999806e-05, 5.256999999999831e-05, 5.262500000000059e-05, 5.227799999999935e-05, 5.238899999999991e-05, 5.254199999999917e-05, 5.2457999999998284e-05, 5.226300000000031e-05, 5.286100000000127e-05, 5.30280000000001e-05, 5.311100000000152e-05, 5.295800000000225e-05, 5.251400000000003e-05, 5.231899999999859e-05, 5.2388000000000434e-05, 5.277799999999985e-05, 5.300000000000096e-05, 5.309799999999795e-05, 5.2735999999997674e-05, 5.3137999999997715e-05, 5.230600000000196e-05, 5.279099999999995e-05, 5.275000000000071e-05, 5.311099999999805e-05, 5.281899999999909e-05, 5.26669999999993e-05, 5.294499999999869e-05, 5.277799999999985e-05, 5.311100000000152e-05, 5.315300000000023e-05, 5.254200000000264e-05, 5.232000000000153e-05, 5.227799999999935e-05, 5.301400000000053e-05]</msg>
<status status="PASS" starttime="20201029 12:44:05.015" endtime="20201029 12:44:05.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.010" endtime="20201029 12:44:05.018"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.022" endtime="20201029 12:44:05.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.020" endtime="20201029 12:44:05.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.019" endtime="20201029 12:44:05.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.660" endtime="20201029 12:44:05.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.660" endtime="20201029 12:44:05.042"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.051" endtime="20201029 12:44:05.070"></status>
</kw>
<msg timestamp="20201029 12:44:05.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.050" endtime="20201029 12:44:05.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.071" endtime="20201029 12:44:05.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.074" endtime="20201029 12:44:05.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.047" endtime="20201029 12:44:05.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.045" endtime="20201029 12:44:05.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.083" endtime="20201029 12:44:05.369"></status>
</kw>
<msg timestamp="20201029 12:44:05.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022941319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022995139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.081" endtime="20201029 12:44:05.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022941319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022995139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.373" endtime="20201029 12:44:05.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.381" endtime="20201029 12:44:05.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.079" endtime="20201029 12:44:05.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.077" endtime="20201029 12:44:05.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.388" level="INFO">${RESULT} = [{'diff': 5.381999999999956e-05}, {'diff': 5.40280000000011e-05}, {'diff': 5.395899999999926e-05}, {'diff': 5.354200000000017e-05}, {'diff': 5.341700000000005e-05}, {'diff': 5.377700000000138e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:05.385" endtime="20201029 12:44:05.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.392" level="INFO">${ACCURACY} = {'diff': [5.381999999999956e-05, 5.40280000000011e-05, 5.395899999999926e-05, 5.354200000000017e-05, 5.341700000000005e-05, 5.377700000000138e-05, 5.331899999999959e-05, 5.3944000000000214e-05, 5.3944...</msg>
<status status="PASS" starttime="20201029 12:44:05.389" endtime="20201029 12:44:05.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.396" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.395" endtime="20201029 12:44:05.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.399" level="INFO">VALUE: [5.381999999999956e-05, 5.40280000000011e-05, 5.395899999999926e-05, 5.354200000000017e-05, 5.341700000000005e-05, 5.377700000000138e-05, 5.331899999999959e-05, 5.3944000000000214e-05, 5.3944000000000214e-05, 5.3430000000000144e-05, 5.3707999999999534e-05, 5.405500000000077e-05, 5.415300000000123e-05, 5.3985999999998924e-05, 5.418100000000037e-05, 5.384699999999923e-05, 5.3999999999998494e-05, 5.355500000000027e-05, 5.394499999999969e-05, 5.327800000000035e-05, 5.351299999999809e-05, 5.409699999999948e-05, 5.412499999999862e-05, 5.359699999999898e-05, 5.40410000000012e-05, 5.4193999999996995e-05, 5.327800000000035e-05, 5.41670000000008e-05, 5.33609999999983e-05, 5.38609999999988e-05, 5.409799999999895e-05, 5.361099999999855e-05, 5.418100000000037e-05, 5.379100000000095e-05, 5.3971999999999354e-05, 5.326300000000131e-05, 5.3652000000001254e-05, 5.3901999999998035e-05, 5.3957999999999784e-05, 5.3277999999996883e-05, 5.3999999999998494e-05, 5.3430000000000144e-05, 5.3430000000000144e-05, 5.38609999999988e-05, 5.368099999999987e-05, 5.409699999999948e-05, 5.377800000000085e-05, 5.377800000000085e-05, 5.394499999999969e-05, 5.340299999999701e-05]</msg>
<status status="PASS" starttime="20201029 12:44:05.397" endtime="20201029 12:44:05.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.393" endtime="20201029 12:44:05.401"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.405" endtime="20201029 12:44:05.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.403" endtime="20201029 12:44:05.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.402" endtime="20201029 12:44:05.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.043" endtime="20201029 12:44:05.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.043" endtime="20201029 12:44:05.425"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.434" endtime="20201029 12:44:05.451"></status>
</kw>
<msg timestamp="20201029 12:44:05.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.432" endtime="20201029 12:44:05.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.453" endtime="20201029 12:44:05.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.456" endtime="20201029 12:44:05.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.430" endtime="20201029 12:44:05.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.428" endtime="20201029 12:44:05.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.465" endtime="20201029 12:44:05.750"></status>
</kw>
<msg timestamp="20201029 12:44:05.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022192653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022247153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.463" endtime="20201029 12:44:05.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022192653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022247153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.754" endtime="20201029 12:44:05.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.762" endtime="20201029 12:44:05.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.460" endtime="20201029 12:44:05.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.459" endtime="20201029 12:44:05.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.769" level="INFO">${RESULT} = [{'diff': 5.4499999999998994e-05}, {'diff': 5.4985999999999924e-05}, {'diff': 5.429200000000092e-05}, {'diff': 5.436199999999877e-05}, {'diff': 5.479200000000142e-05}, {'diff': 5.462499999999912e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:05.766" endtime="20201029 12:44:05.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.774" level="INFO">${ACCURACY} = {'diff': [5.4499999999998994e-05, 5.4985999999999924e-05, 5.429200000000092e-05, 5.436199999999877e-05, 5.479200000000142e-05, 5.462499999999912e-05, 5.434699999999973e-05, 5.512499999999962e-05, 5.46...</msg>
<status status="PASS" starttime="20201029 12:44:05.770" endtime="20201029 12:44:05.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.778" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.777" endtime="20201029 12:44:05.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.781" level="INFO">VALUE: [5.4499999999998994e-05, 5.4985999999999924e-05, 5.429200000000092e-05, 5.436199999999877e-05, 5.479200000000142e-05, 5.462499999999912e-05, 5.434699999999973e-05, 5.512499999999962e-05, 5.465300000000173e-05, 5.455599999999727e-05, 5.4444000000000714e-05, 5.5179999999998425e-05, 5.4499999999998994e-05, 5.513900000000266e-05, 5.443100000000062e-05, 5.490299999999851e-05, 5.493099999999765e-05, 5.443099999999715e-05, 5.5027999999998634e-05, 5.501299999999959e-05, 5.429099999999798e-05, 5.433300000000016e-05, 5.505500000000177e-05, 5.465300000000173e-05, 5.509700000000048e-05, 5.4471999999999854e-05, 5.433300000000016e-05, 5.513900000000266e-05, 5.443100000000062e-05, 5.433300000000016e-05, 5.48609999999998e-05, 5.482000000000056e-05, 5.431900000000059e-05, 5.461199999999902e-05, 5.4708000000000534e-05, 5.4263999999998314e-05, 5.459699999999998e-05, 5.5152000000002754e-05, 5.5207999999997565e-05, 5.488899999999894e-05, 5.466699999999783e-05, 5.4944000000001214e-05, 5.4944000000001214e-05, 5.512499999999962e-05, 5.4263999999998314e-05, 5.4763999999998814e-05, 5.487499999999937e-05, 5.502700000000263e-05, 5.4749999999999244e-05, 5.4722000000000104e-05]</msg>
<status status="PASS" starttime="20201029 12:44:05.779" endtime="20201029 12:44:05.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.775" endtime="20201029 12:44:05.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.793" endtime="20201029 12:44:05.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.792" endtime="20201029 12:44:05.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.790" endtime="20201029 12:44:05.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.426" endtime="20201029 12:44:05.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.426" endtime="20201029 12:44:05.814"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.823" endtime="20201029 12:44:05.840"></status>
</kw>
<msg timestamp="20201029 12:44:05.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.821" endtime="20201029 12:44:05.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.842" endtime="20201029 12:44:05.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.844" endtime="20201029 12:44:05.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.818" endtime="20201029 12:44:05.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.816" endtime="20201029 12:44:05.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.853" endtime="20201029 12:44:06.140"></status>
</kw>
<msg timestamp="20201029 12:44:06.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021982514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.852" endtime="20201029 12:44:06.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021982514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.145" endtime="20201029 12:44:06.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.153" endtime="20201029 12:44:06.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.849" endtime="20201029 12:44:06.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.847" endtime="20201029 12:44:06.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:06.159" level="INFO">${RESULT} = [{'diff': 5.604200000000267e-05}, {'diff': 5.569500000000144e-05}, {'diff': 5.5763999999999814e-05}, {'diff': 5.570900000000101e-05}, {'diff': 5.527699999999941e-05}, {'diff': 5.581999999999809e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:06.156" endtime="20201029 12:44:06.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:06.163" level="INFO">${ACCURACY} = {'diff': [5.604200000000267e-05, 5.569500000000144e-05, 5.5763999999999814e-05, 5.570900000000101e-05, 5.527699999999941e-05, 5.581999999999809e-05, 5.556999999999784e-05, 5.583300000000166e-05, 5.552...</msg>
<status status="PASS" starttime="20201029 12:44:06.160" endtime="20201029 12:44:06.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.168" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 12:44:06.167" endtime="20201029 12:44:06.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.170" level="INFO">VALUE: [5.604200000000267e-05, 5.569500000000144e-05, 5.5763999999999814e-05, 5.570900000000101e-05, 5.527699999999941e-05, 5.581999999999809e-05, 5.556999999999784e-05, 5.583300000000166e-05, 5.552699999999966e-05, 5.558300000000141e-05, 5.5499999999999994e-05, 5.5471999999997385e-05, 5.586099999999733e-05, 5.613900000000019e-05, 5.5277999999998884e-05, 5.591699999999908e-05, 5.6055999999998773e-05, 5.5486000000000424e-05, 5.586200000000027e-05, 5.561099999999708e-05, 5.54869999999999e-05, 5.552699999999966e-05, 5.5972000000001354e-05, 5.530499999999855e-05, 5.5429999999998675e-05, 5.566699999999883e-05, 5.616699999999933e-05, 5.558299999999794e-05, 5.531899999999812e-05, 5.5499999999999994e-05, 5.577800000000285e-05, 5.5527999999999134e-05, 5.562500000000012e-05, 5.5986000000000924e-05, 5.609800000000095e-05, 5.593099999999865e-05, 5.5472000000000854e-05, 5.5499999999999994e-05, 5.587500000000037e-05, 5.5443999999998245e-05, 5.5499999999999994e-05, 5.590299999999951e-05, 5.61809999999989e-05, 5.61809999999989e-05, 5.6014000000000064e-05, 5.593100000000212e-05, 5.606899999999887e-05, 5.5305999999998023e-05, 5.53480000000002e-05, 5.604099999999973e-05]</msg>
<status status="PASS" starttime="20201029 12:44:06.169" endtime="20201029 12:44:06.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.164" endtime="20201029 12:44:06.172"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:06.176" endtime="20201029 12:44:06.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.174" endtime="20201029 12:44:06.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.173" endtime="20201029 12:44:06.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.815" endtime="20201029 12:44:06.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.814" endtime="20201029 12:44:06.196"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.205" endtime="20201029 12:44:06.223"></status>
</kw>
<msg timestamp="20201029 12:44:06.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.203" endtime="20201029 12:44:06.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.225" endtime="20201029 12:44:06.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.227" endtime="20201029 12:44:06.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.201" endtime="20201029 12:44:06.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.199" endtime="20201029 12:44:06.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.236" endtime="20201029 12:44:06.522"></status>
</kw>
<msg timestamp="20201029 12:44:06.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023147653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023204222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.235" endtime="20201029 12:44:06.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023147653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023204222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.527" endtime="20201029 12:44:06.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.535" endtime="20201029 12:44:06.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.232" endtime="20201029 12:44:06.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.231" endtime="20201029 12:44:06.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:06.541" level="INFO">${RESULT} = [{'diff': 5.656899999999937e-05}, {'diff': 5.663900000000069e-05}, {'diff': 5.665300000000026e-05}, {'diff': 5.7208000000003034e-05}, {'diff': 5.715299999999729e-05}, {'diff': 5.693099999999965e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:06.538" endtime="20201029 12:44:06.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:06.545" level="INFO">${ACCURACY} = {'diff': [5.656899999999937e-05, 5.663900000000069e-05, 5.665300000000026e-05, 5.7208000000003034e-05, 5.715299999999729e-05, 5.693099999999965e-05, 5.7042000000000204e-05, 5.6250000000000744e-05, 5.7...</msg>
<status status="PASS" starttime="20201029 12:44:06.542" endtime="20201029 12:44:06.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.550" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 12:44:06.549" endtime="20201029 12:44:06.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.552" level="INFO">VALUE: [5.656899999999937e-05, 5.663900000000069e-05, 5.665300000000026e-05, 5.7208000000003034e-05, 5.715299999999729e-05, 5.693099999999965e-05, 5.7042000000000204e-05, 5.6250000000000744e-05, 5.709699999999901e-05, 5.630600000000249e-05, 5.6457999999998815e-05, 5.680500000000005e-05, 5.7000000000001494e-05, 5.711099999999858e-05, 5.6471999999998385e-05, 5.6486000000001424e-05, 5.6778000000000384e-05, 5.6971999999998885e-05, 5.6777999999996914e-05, 5.633299999999869e-05, 5.666699999999983e-05, 5.662500000000112e-05, 5.683400000000213e-05, 5.695899999999879e-05, 5.6528000000000134e-05, 5.711199999999805e-05, 5.693099999999965e-05, 5.63610000000013e-05, 5.6679999999999925e-05, 5.688899999999747e-05, 5.662500000000112e-05, 5.712500000000162e-05, 5.661100000000155e-05, 5.683300000000266e-05, 5.6943999999999745e-05, 5.690300000000051e-05, 5.6791999999999954e-05, 5.6985999999998455e-05, 5.690300000000051e-05, 5.7042000000000204e-05, 5.6443999999999245e-05, 5.61809999999989e-05, 5.677700000000091e-05, 5.6541999999999704e-05, 5.688900000000094e-05, 5.659699999999851e-05, 5.6930000000000175e-05, 5.666699999999983e-05, 5.645899999999829e-05, 5.6778000000000384e-05]</msg>
<status status="PASS" starttime="20201029 12:44:06.551" endtime="20201029 12:44:06.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.546" endtime="20201029 12:44:06.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:06.558" endtime="20201029 12:44:06.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.557" endtime="20201029 12:44:06.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.556" endtime="20201029 12:44:06.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.197" endtime="20201029 12:44:06.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.196" endtime="20201029 12:44:06.579"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.588" endtime="20201029 12:44:06.606"></status>
</kw>
<msg timestamp="20201029 12:44:06.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.586" endtime="20201029 12:44:06.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.608" endtime="20201029 12:44:06.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.610" endtime="20201029 12:44:06.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.584" endtime="20201029 12:44:06.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.581" endtime="20201029 12:44:06.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.620" endtime="20201029 12:44:06.907"></status>
</kw>
<msg timestamp="20201029 12:44:06.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022497347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.618" endtime="20201029 12:44:06.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022497347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.911" endtime="20201029 12:44:06.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.919" endtime="20201029 12:44:06.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.615" endtime="20201029 12:44:06.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.614" endtime="20201029 12:44:06.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:06.926" level="INFO">${RESULT} = [{'diff': 5.7542000000000704e-05}, {'diff': 5.7792000000000954e-05}, {'diff': 5.734699999999926e-05}, {'diff': 5.794500000000022e-05}, {'diff': 5.733299999999969e-05}, {'diff': 5.7735999999999205e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:06.922" endtime="20201029 12:44:06.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:06.931" level="INFO">${ACCURACY} = {'diff': [5.7542000000000704e-05, 5.7792000000000954e-05, 5.734699999999926e-05, 5.794500000000022e-05, 5.733299999999969e-05, 5.7735999999999205e-05, 5.762499999999865e-05, 5.7778000000001384e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:44:06.927" endtime="20201029 12:44:06.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.935" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 12:44:06.934" endtime="20201029 12:44:06.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.938" level="INFO">VALUE: [5.7542000000000704e-05, 5.7792000000000954e-05, 5.734699999999926e-05, 5.794500000000022e-05, 5.733299999999969e-05, 5.7735999999999205e-05, 5.762499999999865e-05, 5.7778000000001384e-05, 5.7319999999999593e-05, 5.7277999999997414e-05, 5.80550000000013e-05, 5.73749999999984e-05, 5.819500000000047e-05, 5.730499999999708e-05, 5.7777999999997914e-05, 5.734799999999873e-05, 5.741700000000058e-05, 5.811100000000305e-05, 5.7528000000001134e-05, 5.734799999999873e-05, 5.741700000000058e-05, 5.734699999999926e-05, 5.7791999999997484e-05, 5.808300000000044e-05, 5.738899999999797e-05, 5.8041999999997734e-05, 5.7471999999999385e-05, 5.759699999999951e-05, 5.809700000000001e-05, 5.7820000000000094e-05, 5.733299999999969e-05, 5.762499999999865e-05, 5.8083999999999913e-05, 5.73610000000023e-05, 5.8083999999999913e-05, 5.7958000000000315e-05, 5.7499999999998525e-05, 5.815300000000176e-05, 5.7749999999998775e-05, 5.761100000000255e-05, 5.7249999999998274e-05, 5.7958000000000315e-05, 5.816700000000133e-05, 5.793100000000065e-05, 5.765299999999779e-05, 5.745900000000276e-05, 5.73610000000023e-05, 5.7820000000000094e-05, 5.7333999999999163e-05, 5.784699999999976e-05]</msg>
<status status="PASS" starttime="20201029 12:44:06.936" endtime="20201029 12:44:06.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.931" endtime="20201029 12:44:06.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:06.943" endtime="20201029 12:44:06.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.941" endtime="20201029 12:44:06.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.940" endtime="20201029 12:44:06.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.580" endtime="20201029 12:44:06.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.579" endtime="20201029 12:44:06.963"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.972" endtime="20201029 12:44:06.989"></status>
</kw>
<msg timestamp="20201029 12:44:06.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.970" endtime="20201029 12:44:06.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.991" endtime="20201029 12:44:06.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.994" endtime="20201029 12:44:06.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.968" endtime="20201029 12:44:06.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.966" endtime="20201029 12:44:06.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.003" endtime="20201029 12:44:07.289"></status>
</kw>
<msg timestamp="20201029 12:44:07.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.001" endtime="20201029 12:44:07.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.293" endtime="20201029 12:44:07.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.301" endtime="20201029 12:44:07.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.999" endtime="20201029 12:44:07.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.997" endtime="20201029 12:44:07.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:07.308" level="INFO">${RESULT} = [{'diff': 5.9084000000000914e-05}, {'diff': 5.843100000000115e-05}, {'diff': 5.912500000000015e-05}, {'diff': 5.854099999999876e-05}, {'diff': 5.9180000000002425e-05}, {'diff': 5.863899999999922e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:07.305" endtime="20201029 12:44:07.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:07.312" level="INFO">${ACCURACY} = {'diff': [5.9084000000000914e-05, 5.843100000000115e-05, 5.912500000000015e-05, 5.854099999999876e-05, 5.9180000000002425e-05, 5.863899999999922e-05, 5.859700000000051e-05, 5.911100000000058e-05, 5.86...</msg>
<status status="PASS" starttime="20201029 12:44:07.309" endtime="20201029 12:44:07.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.317" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 12:44:07.316" endtime="20201029 12:44:07.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.319" level="INFO">VALUE: [5.9084000000000914e-05, 5.843100000000115e-05, 5.912500000000015e-05, 5.854099999999876e-05, 5.9180000000002425e-05, 5.863899999999922e-05, 5.859700000000051e-05, 5.911100000000058e-05, 5.8665999999998886e-05, 5.8527999999998664e-05, 5.8513999999999095e-05, 5.891699999999861e-05, 5.843100000000115e-05, 5.8806000000001524e-05, 5.8263999999998844e-05, 5.8528000000002134e-05, 5.8527999999998664e-05, 5.897300000000036e-05, 5.9236000000000705e-05, 5.861100000000008e-05, 5.8444000000001245e-05, 5.8458000000000815e-05, 5.830499999999808e-05, 5.8957999999997845e-05, 5.834700000000026e-05, 5.8763999999999345e-05, 5.893099999999818e-05, 5.909699999999754e-05, 5.8806000000001524e-05, 5.9000000000000025e-05, 5.9151999999999816e-05, 5.854099999999876e-05, 5.916699999999886e-05, 5.880500000000205e-05, 5.8764000000002814e-05, 5.8763999999999345e-05, 5.8929999999998706e-05, 5.859700000000051e-05, 5.8806000000001524e-05, 5.912500000000015e-05, 5.880500000000205e-05, 5.9056000000001774e-05, 5.9179999999998956e-05, 5.869500000000097e-05, 5.8986000000000455e-05, 5.8972000000000885e-05, 5.8986000000000455e-05, 5.887500000000337e-05, 5.829099999999851e-05, 5.8457999999997345e-05]</msg>
<status status="PASS" starttime="20201029 12:44:07.318" endtime="20201029 12:44:07.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.313" endtime="20201029 12:44:07.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:07.324" endtime="20201029 12:44:07.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.323" endtime="20201029 12:44:07.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.321" endtime="20201029 12:44:07.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.964" endtime="20201029 12:44:07.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.964" endtime="20201029 12:44:07.345"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.353" endtime="20201029 12:44:07.372"></status>
</kw>
<msg timestamp="20201029 12:44:07.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.352" endtime="20201029 12:44:07.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.374" endtime="20201029 12:44:07.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.377" endtime="20201029 12:44:07.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.349" endtime="20201029 12:44:07.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.347" endtime="20201029 12:44:07.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.386" endtime="20201029 12:44:07.671"></status>
</kw>
<msg timestamp="20201029 12:44:07.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022758736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022818958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.384" endtime="20201029 12:44:07.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022758736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022818958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.676" endtime="20201029 12:44:07.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.684" endtime="20201029 12:44:07.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.382" endtime="20201029 12:44:07.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.380" endtime="20201029 12:44:07.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:07.690" level="INFO">${RESULT} = [{'diff': 6.0221999999998665e-05}, {'diff': 6.013899999999725e-05}, {'diff': 5.9443999999998776e-05}, {'diff': 5.9693999999999026e-05}, {'diff': 6.015300000000029e-05}, {'diff': 5.9791999999999484e-05...</msg>
<status status="PASS" starttime="20201029 12:44:07.687" endtime="20201029 12:44:07.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:07.695" level="INFO">${ACCURACY} = {'diff': [6.0221999999998665e-05, 6.013899999999725e-05, 5.9443999999998776e-05, 5.9693999999999026e-05, 6.015300000000029e-05, 5.9791999999999484e-05, 5.9750000000000775e-05, 5.9263999999999845e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:07.691" endtime="20201029 12:44:07.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.699" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 12:44:07.698" endtime="20201029 12:44:07.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.701" level="INFO">VALUE: [6.0221999999998665e-05, 6.013899999999725e-05, 5.9443999999998776e-05, 5.9693999999999026e-05, 6.015300000000029e-05, 5.9791999999999484e-05, 5.9750000000000775e-05, 5.9263999999999845e-05, 6.008299999999897e-05, 5.9791999999999484e-05, 5.994500000000222e-05, 5.9250000000000275e-05, 5.9833999999998194e-05, 5.9694000000002495e-05, 5.9652000000000316e-05, 5.9929999999999706e-05, 5.9402000000000066e-05, 6.0028000000000165e-05, 6.013900000000072e-05, 5.966700000000283e-05, 5.991699999999961e-05, 5.933300000000169e-05, 5.938899999999997e-05, 5.9584000000001414e-05, 6.013899999999725e-05, 5.966699999999936e-05, 6.013900000000072e-05, 5.9569999999998374e-05, 6.012499999999768e-05, 5.9679999999999456e-05, 5.9957999999998846e-05, 5.958299999999847e-05, 5.9986000000001455e-05, 6.011099999999811e-05, 5.944499999999825e-05, 5.9916000000000136e-05, 5.986100000000133e-05, 6.0014000000000595e-05, 5.9277999999999414e-05, 6.004100000000026e-05, 6.013900000000072e-05, 5.9305999999998554e-05, 5.959700000000151e-05, 6.013899999999725e-05, 5.981899999999915e-05, 5.981900000000262e-05, 5.984700000000176e-05, 5.984699999999829e-05, 5.9527999999999665e-05, 5.994499999999875e-05]</msg>
<status status="PASS" starttime="20201029 12:44:07.700" endtime="20201029 12:44:07.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.695" endtime="20201029 12:44:07.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:07.707" endtime="20201029 12:44:07.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.706" endtime="20201029 12:44:07.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.705" endtime="20201029 12:44:07.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.346" endtime="20201029 12:44:07.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.345" endtime="20201029 12:44:07.728"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.737" endtime="20201029 12:44:07.754"></status>
</kw>
<msg timestamp="20201029 12:44:07.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.735" endtime="20201029 12:44:07.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.755" endtime="20201029 12:44:07.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.758" endtime="20201029 12:44:07.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.733" endtime="20201029 12:44:07.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.730" endtime="20201029 12:44:07.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.767" endtime="20201029 12:44:08.053"></status>
</kw>
<msg timestamp="20201029 12:44:08.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.765" endtime="20201029 12:44:08.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.057" endtime="20201029 12:44:08.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.066" endtime="20201029 12:44:08.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.763" endtime="20201029 12:44:08.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.761" endtime="20201029 12:44:08.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:08.072" level="INFO">${RESULT} = [{'diff': 6.090300000000104e-05}, {'diff': 6.086099999999886e-05}, {'diff': 6.1000000000002025e-05}, {'diff': 6.0514000000001095e-05}, {'diff': 6.041700000000011e-05}, {'diff': 6.06949999999995e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:08.069" endtime="20201029 12:44:08.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:08.077" level="INFO">${ACCURACY} = {'diff': [6.090300000000104e-05, 6.086099999999886e-05, 6.1000000000002025e-05, 6.0514000000001095e-05, 6.041700000000011e-05, 6.06949999999995e-05, 6.091700000000061e-05, 6.043099999999968e-05, 6.118...</msg>
<status status="PASS" starttime="20201029 12:44:08.073" endtime="20201029 12:44:08.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.082" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 12:44:08.081" endtime="20201029 12:44:08.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.084" level="INFO">VALUE: [6.090300000000104e-05, 6.086099999999886e-05, 6.1000000000002025e-05, 6.0514000000001095e-05, 6.041700000000011e-05, 6.06949999999995e-05, 6.091700000000061e-05, 6.043099999999968e-05, 6.118000000000096e-05, 6.112499999999868e-05, 6.0749999999998305e-05, 6.062500000000165e-05, 6.062500000000165e-05, 6.0278000000000415e-05, 6.086100000000233e-05, 6.115299999999782e-05, 6.119400000000053e-05, 6.044499999999925e-05, 6.1028000000001165e-05, 6.086099999999886e-05, 6.0999999999998555e-05, 6.0333999999998694e-05, 6.113900000000172e-05, 6.061099999999861e-05, 6.080499999999711e-05, 6.033300000000269e-05, 6.0291999999999984e-05, 6.0694000000000026e-05, 6.043099999999968e-05, 6.1013999999998125e-05, 6.06949999999995e-05, 6.0278000000000415e-05, 6.0486000000001955e-05, 6.0264000000000845e-05, 6.0862000000001804e-05, 6.0485999999998485e-05, 6.0612000000001554e-05, 6.027699999999747e-05, 6.0985999999998985e-05, 6.030500000000008e-05, 6.104100000000126e-05, 6.0707999999999596e-05, 6.0778000000000915e-05, 6.0957999999999846e-05, 6.112499999999868e-05, 6.043099999999968e-05, 6.0319999999999124e-05, 6.044499999999925e-05, 6.0833999999999194e-05, 6.087499999999843e-05]</msg>
<status status="PASS" starttime="20201029 12:44:08.083" endtime="20201029 12:44:08.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.078" endtime="20201029 12:44:08.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:08.089" endtime="20201029 12:44:08.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.088" endtime="20201029 12:44:08.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.086" endtime="20201029 12:44:08.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.729" endtime="20201029 12:44:08.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.728" endtime="20201029 12:44:08.110"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.118" endtime="20201029 12:44:08.137"></status>
</kw>
<msg timestamp="20201029 12:44:08.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.117" endtime="20201029 12:44:08.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.138" endtime="20201029 12:44:08.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.141" endtime="20201029 12:44:08.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.114" endtime="20201029 12:44:08.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.112" endtime="20201029 12:44:08.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.150" endtime="20201029 12:44:08.438"></status>
</kw>
<msg timestamp="20201029 12:44:08.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021886681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021948056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.149" endtime="20201029 12:44:08.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021886681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021948056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.442" endtime="20201029 12:44:08.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.450" endtime="20201029 12:44:08.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.146" endtime="20201029 12:44:08.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.144" endtime="20201029 12:44:08.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:08.457" level="INFO">${RESULT} = [{'diff': 6.137499999999893e-05}, {'diff': 6.159800000000298e-05}, {'diff': 6.179099999999854e-05}, {'diff': 6.176399999999888e-05}, {'diff': 6.172200000000017e-05}, {'diff': 6.176399999999888e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:08.454" endtime="20201029 12:44:08.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:08.461" level="INFO">${ACCURACY} = {'diff': [6.137499999999893e-05, 6.159800000000298e-05, 6.179099999999854e-05, 6.176399999999888e-05, 6.172200000000017e-05, 6.176399999999888e-05, 6.136099999999936e-05, 6.192999999999824e-05, 6.1611...</msg>
<status status="PASS" starttime="20201029 12:44:08.458" endtime="20201029 12:44:08.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.466" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 12:44:08.465" endtime="20201029 12:44:08.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.468" level="INFO">VALUE: [6.137499999999893e-05, 6.159800000000298e-05, 6.179099999999854e-05, 6.176399999999888e-05, 6.172200000000017e-05, 6.176399999999888e-05, 6.136099999999936e-05, 6.192999999999824e-05, 6.161100000000308e-05, 6.136099999999936e-05, 6.127800000000141e-05, 6.2195000000001e-05, 6.150000000000252e-05, 6.162500000000265e-05, 6.176399999999888e-05, 6.129100000000151e-05, 6.129099999999804e-05, 6.17499999999993e-05, 6.187499999999943e-05, 6.216599999999892e-05, 6.131900000000065e-05, 6.129200000000098e-05, 6.20279999999987e-05, 6.20560000000013e-05, 6.219399999999806e-05, 6.144500000000025e-05, 6.148599999999949e-05, 6.166600000000189e-05, 6.218100000000143e-05, 6.219499999999753e-05, 6.169399999999756e-05, 6.158300000000047e-05, 6.148600000000295e-05, 6.147199999999992e-05, 6.169400000000103e-05, 6.191699999999814e-05, 6.213899999999925e-05, 6.209700000000054e-05, 6.144500000000025e-05, 6.186099999999986e-05, 6.193100000000118e-05, 6.194499999999728e-05, 6.195800000000085e-05, 6.141699999999764e-05, 6.133300000000022e-05, 6.129199999999752e-05, 6.198599999999999e-05, 6.127800000000141e-05, 6.19439999999978e-05, 6.14300000000012e-05]</msg>
<status status="PASS" starttime="20201029 12:44:08.467" endtime="20201029 12:44:08.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.462" endtime="20201029 12:44:08.469"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:08.473" endtime="20201029 12:44:08.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.471" endtime="20201029 12:44:08.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.470" endtime="20201029 12:44:08.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.111" endtime="20201029 12:44:08.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.110" endtime="20201029 12:44:08.494"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.502" endtime="20201029 12:44:08.521"></status>
</kw>
<msg timestamp="20201029 12:44:08.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.501" endtime="20201029 12:44:08.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.523" endtime="20201029 12:44:08.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.525" endtime="20201029 12:44:08.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.498" endtime="20201029 12:44:08.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.496" endtime="20201029 12:44:08.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.534" endtime="20201029 12:44:08.819"></status>
</kw>
<msg timestamp="20201029 12:44:08.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022599194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.533" endtime="20201029 12:44:08.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022599194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.823" endtime="20201029 12:44:08.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.831" endtime="20201029 12:44:08.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.530" endtime="20201029 12:44:08.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.529" endtime="20201029 12:44:08.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:08.838" level="INFO">${RESULT} = [{'diff': 6.23889999999995e-05}, {'diff': 6.277699999999997e-05}, {'diff': 6.319399999999906e-05}, {'diff': 6.266599999999942e-05}, {'diff': 6.279199999999902e-05}, {'diff': 6.319399999999906e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:08.834" endtime="20201029 12:44:08.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:08.842" level="INFO">${ACCURACY} = {'diff': [6.23889999999995e-05, 6.277699999999997e-05, 6.319399999999906e-05, 6.266599999999942e-05, 6.279199999999902e-05, 6.319399999999906e-05, 6.227799999999895e-05, 6.25279999999992e-05, 6.277799...</msg>
<status status="PASS" starttime="20201029 12:44:08.839" endtime="20201029 12:44:08.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.846" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 12:44:08.845" endtime="20201029 12:44:08.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.849" level="INFO">VALUE: [6.23889999999995e-05, 6.277699999999997e-05, 6.319399999999906e-05, 6.266599999999942e-05, 6.279199999999902e-05, 6.319399999999906e-05, 6.227799999999895e-05, 6.25279999999992e-05, 6.277799999999945e-05, 6.286200000000033e-05, 6.244500000000125e-05, 6.290299999999957e-05, 6.255499999999886e-05, 6.237499999999993e-05, 6.272200000000117e-05, 6.245800000000135e-05, 6.250000000000006e-05, 6.30560000000023e-05, 6.265299999999932e-05, 6.254099999999929e-05, 6.316699999999939e-05, 6.291700000000261e-05, 6.25279999999992e-05, 6.230600000000155e-05, 6.294500000000175e-05, 6.237499999999993e-05, 6.295799999999838e-05, 6.311099999999764e-05, 6.261099999999714e-05, 6.286100000000086e-05, 6.226399999999938e-05, 6.244499999999778e-05, 6.243099999999821e-05, 6.309699999999807e-05, 6.263899999999975e-05, 6.318099999999896e-05, 6.280599999999859e-05, 6.276399999999988e-05, 6.25279999999992e-05, 6.229100000000251e-05, 6.292999999999924e-05, 6.252699999999972e-05, 6.276399999999988e-05, 6.2889e-05, 6.262500000000018e-05, 6.226399999999938e-05, 6.299999999999709e-05, 6.227799999999895e-05, 6.312500000000068e-05, 6.277799999999945e-05]</msg>
<status status="PASS" starttime="20201029 12:44:08.847" endtime="20201029 12:44:08.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.843" endtime="20201029 12:44:08.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:08.855" endtime="20201029 12:44:08.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.853" endtime="20201029 12:44:08.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.852" endtime="20201029 12:44:08.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.495" endtime="20201029 12:44:08.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.494" endtime="20201029 12:44:08.875"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.884" endtime="20201029 12:44:08.902"></status>
</kw>
<msg timestamp="20201029 12:44:08.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.882" endtime="20201029 12:44:08.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.903" endtime="20201029 12:44:08.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.906" endtime="20201029 12:44:08.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.880" endtime="20201029 12:44:08.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.878" endtime="20201029 12:44:08.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.915" endtime="20201029 12:44:09.200"></status>
</kw>
<msg timestamp="20201029 12:44:09.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022375444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0224395, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:08.913" endtime="20201029 12:44:09.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022375444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0224395, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:09.204" endtime="20201029 12:44:09.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.212" endtime="20201029 12:44:09.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.911" endtime="20201029 12:44:09.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.909" endtime="20201029 12:44:09.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:09.219" level="INFO">${RESULT} = [{'diff': 6.405599999999984e-05}, {'diff': 6.412500000000168e-05}, {'diff': 6.393100000000318e-05}, {'diff': 6.347199999999845e-05}, {'diff': 6.35280000000002e-05}, {'diff': 6.327700000000047e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:09.216" endtime="20201029 12:44:09.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:09.224" level="INFO">${ACCURACY} = {'diff': [6.405599999999984e-05, 6.412500000000168e-05, 6.393100000000318e-05, 6.347199999999845e-05, 6.35280000000002e-05, 6.327700000000047e-05, 6.377800000000045e-05, 6.381999999999916e-05, 6.39450...</msg>
<status status="PASS" starttime="20201029 12:44:09.220" endtime="20201029 12:44:09.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.228" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 12:44:09.227" endtime="20201029 12:44:09.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.231" level="INFO">VALUE: [6.405599999999984e-05, 6.412500000000168e-05, 6.393100000000318e-05, 6.347199999999845e-05, 6.35280000000002e-05, 6.327700000000047e-05, 6.377800000000045e-05, 6.381999999999916e-05, 6.394500000000275e-05, 6.370799999999913e-05, 6.413899999999778e-05, 6.412500000000168e-05, 6.393000000000024e-05, 6.402799999999723e-05, 6.40829999999995e-05, 6.334700000000179e-05, 6.40699999999994e-05, 6.366600000000042e-05, 6.377800000000045e-05, 6.381999999999916e-05, 6.344499999999878e-05, 6.377700000000097e-05, 6.39439999999998e-05, 6.381900000000315e-05, 6.359800000000151e-05, 6.405500000000036e-05, 6.393000000000024e-05, 6.380599999999959e-05, 6.412499999999821e-05, 6.411099999999864e-05, 6.329199999999952e-05, 6.3195000000002e-05, 6.347199999999845e-05, 6.377800000000045e-05, 6.334699999999832e-05, 6.398599999999852e-05, 6.39439999999998e-05, 6.331899999999918e-05, 6.404200000000027e-05, 6.39439999999998e-05, 6.349999999999759e-05, 6.35280000000002e-05, 6.331999999999866e-05, 6.379100000000054e-05, 6.334800000000126e-05, 6.365300000000032e-05, 6.405599999999984e-05, 6.34300000000032e-05, 6.366699999999989e-05, 6.338899999999703e-05]</msg>
<status status="PASS" starttime="20201029 12:44:09.230" endtime="20201029 12:44:09.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.225" endtime="20201029 12:44:09.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:09.236" endtime="20201029 12:44:09.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.234" endtime="20201029 12:44:09.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.233" endtime="20201029 12:44:09.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.876" endtime="20201029 12:44:09.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.875" endtime="20201029 12:44:09.257"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.265" endtime="20201029 12:44:09.284"></status>
</kw>
<msg timestamp="20201029 12:44:09.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.264" endtime="20201029 12:44:09.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.285" endtime="20201029 12:44:09.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.288" endtime="20201029 12:44:09.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.261" endtime="20201029 12:44:09.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.259" endtime="20201029 12:44:09.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.297" endtime="20201029 12:44:09.583"></status>
</kw>
<msg timestamp="20201029 12:44:09.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021980306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.295" endtime="20201029 12:44:09.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021980306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.587" endtime="20201029 12:44:09.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.595" endtime="20201029 12:44:09.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.293" endtime="20201029 12:44:09.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.291" endtime="20201029 12:44:09.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:09.602" level="INFO">${RESULT} = [{'diff': 6.454200000000077e-05}, {'diff': 6.490199999999863e-05}, {'diff': 6.518000000000149e-05}, {'diff': 6.474999999999884e-05}, {'diff': 6.493099999999724e-05}, {'diff': 6.463900000000175e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:09.599" endtime="20201029 12:44:09.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:09.606" level="INFO">${ACCURACY} = {'diff': [6.454200000000077e-05, 6.490199999999863e-05, 6.518000000000149e-05, 6.474999999999884e-05, 6.493099999999724e-05, 6.463900000000175e-05, 6.49159999999982e-05, 6.482000000000016e-05, 6.48339...</msg>
<status status="PASS" starttime="20201029 12:44:09.603" endtime="20201029 12:44:09.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.611" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 12:44:09.610" endtime="20201029 12:44:09.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.614" level="INFO">VALUE: [6.454200000000077e-05, 6.490199999999863e-05, 6.518000000000149e-05, 6.474999999999884e-05, 6.493099999999724e-05, 6.463900000000175e-05, 6.49159999999982e-05, 6.482000000000016e-05, 6.483399999999973e-05, 6.436099999999889e-05, 6.477800000000145e-05, 6.480500000000111e-05, 6.434699999999932e-05, 6.445799999999988e-05, 6.511099999999964e-05, 6.484699999999982e-05, 6.511099999999964e-05, 6.469400000000056e-05, 6.509700000000007e-05, 6.436099999999889e-05, 6.482000000000016e-05, 6.465300000000132e-05, 6.494500000000028e-05, 6.498599999999952e-05, 6.494500000000028e-05, 6.48479999999993e-05, 6.445799999999988e-05, 6.509700000000007e-05, 6.434699999999932e-05, 6.495800000000038e-05, 6.488899999999853e-05, 6.518100000000096e-05, 6.459699999999957e-05, 6.441700000000064e-05, 6.49029999999981e-05, 6.501400000000213e-05, 6.427799999999748e-05, 6.437500000000193e-05, 6.512499999999921e-05, 6.434699999999932e-05, 6.434699999999932e-05, 6.430600000000009e-05, 6.462499999999871e-05, 6.423599999999877e-05, 6.497199999999995e-05, 6.501399999999866e-05, 6.480600000000059e-05, 6.498600000000299e-05, 6.426400000000138e-05, 6.463899999999828e-05]</msg>
<status status="PASS" starttime="20201029 12:44:09.612" endtime="20201029 12:44:09.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.607" endtime="20201029 12:44:09.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:09.620" endtime="20201029 12:44:09.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.618" endtime="20201029 12:44:09.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.616" endtime="20201029 12:44:09.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.258" endtime="20201029 12:44:09.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.257" endtime="20201029 12:44:09.640"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.649" endtime="20201029 12:44:09.668"></status>
</kw>
<msg timestamp="20201029 12:44:09.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.648" endtime="20201029 12:44:09.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.669" endtime="20201029 12:44:09.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.672" endtime="20201029 12:44:09.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.645" endtime="20201029 12:44:09.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.643" endtime="20201029 12:44:09.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.681" endtime="20201029 12:44:09.966"></status>
</kw>
<msg timestamp="20201029 12:44:09.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022866569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022932097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.680" endtime="20201029 12:44:09.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022866569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022932097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.971" endtime="20201029 12:44:09.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.979" endtime="20201029 12:44:09.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.677" endtime="20201029 12:44:09.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.675" endtime="20201029 12:44:09.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:09.985" level="INFO">${RESULT} = [{'diff': 6.552799999999873e-05}, {'diff': 6.620800000000163e-05}, {'diff': 6.543100000000121e-05}, {'diff': 6.532000000000066e-05}, {'diff': 6.544500000000078e-05}, {'diff': 6.595900000000085e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:09.982" endtime="20201029 12:44:09.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:09.989" level="INFO">${ACCURACY} = {'diff': [6.552799999999873e-05, 6.620800000000163e-05, 6.543100000000121e-05, 6.532000000000066e-05, 6.544500000000078e-05, 6.595900000000085e-05, 6.598600000000052e-05, 6.601399999999966e-05, 6.5276...</msg>
<status status="PASS" starttime="20201029 12:44:09.986" endtime="20201029 12:44:09.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.994" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 12:44:09.993" endtime="20201029 12:44:09.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.996" level="INFO">VALUE: [6.552799999999873e-05, 6.620800000000163e-05, 6.543100000000121e-05, 6.532000000000066e-05, 6.544500000000078e-05, 6.595900000000085e-05, 6.598600000000052e-05, 6.601399999999966e-05, 6.5276999999999e-05, 6.580499999999864e-05, 6.524999999999934e-05, 6.552699999999925e-05, 6.616599999999945e-05, 6.580600000000159e-05, 6.577799999999898e-05, 6.559700000000057e-05, 6.60969999999976e-05, 6.598600000000052e-05, 6.562499999999971e-05, 6.516700000000139e-05, 6.58480000000003e-05, 6.598600000000052e-05, 6.582000000000116e-05, 6.583300000000125e-05, 6.552699999999925e-05, 6.622199999999773e-05, 6.5583000000001e-05, 6.527800000000195e-05, 6.529200000000152e-05, 6.611100000000064e-05, 6.534700000000032e-05, 6.543100000000121e-05, 6.583300000000125e-05, 6.57639999999994e-05, 6.59440000000018e-05, 6.611099999999717e-05, 6.600000000000009e-05, 6.569400000000156e-05, 6.625000000000034e-05, 6.594399999999834e-05, 6.55969999999971e-05, 6.611100000000064e-05, 6.53890000000025e-05, 6.594500000000128e-05, 6.594500000000128e-05, 6.612500000000021e-05, 6.583400000000073e-05, 6.601400000000313e-05, 6.598600000000052e-05, 6.567999999999852e-05]</msg>
<status status="PASS" starttime="20201029 12:44:09.995" endtime="20201029 12:44:09.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.990" endtime="20201029 12:44:09.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.002" endtime="20201029 12:44:10.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.001" endtime="20201029 12:44:10.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.000" endtime="20201029 12:44:10.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.641" endtime="20201029 12:44:10.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.641" endtime="20201029 12:44:10.023"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.032" endtime="20201029 12:44:10.049"></status>
</kw>
<msg timestamp="20201029 12:44:10.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.030" endtime="20201029 12:44:10.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.050" endtime="20201029 12:44:10.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.053" endtime="20201029 12:44:10.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.028" endtime="20201029 12:44:10.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.026" endtime="20201029 12:44:10.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.062" endtime="20201029 12:44:10.347"></status>
</kw>
<msg timestamp="20201029 12:44:10.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021833431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.060" endtime="20201029 12:44:10.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021833431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.351" endtime="20201029 12:44:10.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.359" endtime="20201029 12:44:10.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.058" endtime="20201029 12:44:10.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.056" endtime="20201029 12:44:10.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.366" level="INFO">${RESULT} = [{'diff': 6.705499999999989e-05}, {'diff': 6.695799999999891e-05}, {'diff': 6.670800000000213e-05}, {'diff': 6.662500000000071e-05}, {'diff': 6.625000000000034e-05}, {'diff': 6.67229999999977e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:10.363" endtime="20201029 12:44:10.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.371" level="INFO">${ACCURACY} = {'diff': [6.705499999999989e-05, 6.695799999999891e-05, 6.670800000000213e-05, 6.662500000000071e-05, 6.625000000000034e-05, 6.67229999999977e-05, 6.720899999999863e-05, 6.662499999999724e-05, 6.69719...</msg>
<status status="PASS" starttime="20201029 12:44:10.367" endtime="20201029 12:44:10.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.375" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.374" endtime="20201029 12:44:10.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.378" level="INFO">VALUE: [6.705499999999989e-05, 6.695799999999891e-05, 6.670800000000213e-05, 6.662500000000071e-05, 6.625000000000034e-05, 6.67229999999977e-05, 6.720899999999863e-05, 6.662499999999724e-05, 6.697199999999848e-05, 6.625000000000034e-05, 6.662499999999724e-05, 6.686100000000139e-05, 6.667999999999952e-05, 6.694399999999934e-05, 6.629199999999905e-05, 6.701400000000066e-05, 6.669500000000203e-05, 6.652799999999973e-05, 6.711099999999817e-05, 6.694499999999881e-05, 6.713900000000078e-05, 6.6277e-05, 6.695899999999838e-05, 6.636100000000089e-05, 6.694399999999934e-05, 6.62639999999999e-05, 6.636100000000089e-05, 6.642999999999927e-05, 6.651400000000016e-05, 6.695800000000238e-05, 6.67090000000016e-05, 6.715300000000035e-05, 6.70419999999998e-05, 6.656999999999844e-05, 6.712500000000121e-05, 6.684700000000182e-05, 6.698600000000152e-05, 6.65419999999993e-05, 6.675000000000084e-05, 6.680599999999912e-05, 6.65969999999981e-05, 6.677799999999998e-05, 6.625000000000034e-05, 6.698600000000152e-05, 6.686100000000139e-05, 6.655599999999887e-05, 6.718000000000002e-05, 6.655499999999939e-05, 6.683299999999878e-05, 6.651400000000016e-05]</msg>
<status status="PASS" starttime="20201029 12:44:10.376" endtime="20201029 12:44:10.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.372" endtime="20201029 12:44:10.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.383" endtime="20201029 12:44:10.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.381" endtime="20201029 12:44:10.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.380" endtime="20201029 12:44:10.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.024" endtime="20201029 12:44:10.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.023" endtime="20201029 12:44:10.404"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.412" endtime="20201029 12:44:10.430"></status>
</kw>
<msg timestamp="20201029 12:44:10.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.411" endtime="20201029 12:44:10.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.431" endtime="20201029 12:44:10.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.434" endtime="20201029 12:44:10.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.408" endtime="20201029 12:44:10.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.406" endtime="20201029 12:44:10.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.443" endtime="20201029 12:44:10.734"></status>
</kw>
<msg timestamp="20201029 12:44:10.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022216972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.441" endtime="20201029 12:44:10.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022216972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.738" endtime="20201029 12:44:10.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.747" endtime="20201029 12:44:10.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.439" endtime="20201029 12:44:10.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.437" endtime="20201029 12:44:10.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.754" level="INFO">${RESULT} = [{'diff': 6.769400000000009e-05}, {'diff': 6.801400000000166e-05}, {'diff': 6.734699999999885e-05}, {'diff': 6.774999999999837e-05}, {'diff': 6.744499999999931e-05}, {'diff': 6.74030000000006e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:10.750" endtime="20201029 12:44:10.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.758" level="INFO">${ACCURACY} = {'diff': [6.769400000000009e-05, 6.801400000000166e-05, 6.734699999999885e-05, 6.774999999999837e-05, 6.744499999999931e-05, 6.74030000000006e-05, 6.816700000000092e-05, 6.791700000000067e-05, 6.72779...</msg>
<status status="PASS" starttime="20201029 12:44:10.755" endtime="20201029 12:44:10.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.763" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.761" endtime="20201029 12:44:10.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.765" level="INFO">VALUE: [6.769400000000009e-05, 6.801400000000166e-05, 6.734699999999885e-05, 6.774999999999837e-05, 6.744499999999931e-05, 6.74030000000006e-05, 6.816700000000092e-05, 6.791700000000067e-05, 6.727799999999701e-05, 6.801400000000166e-05, 6.802699999999828e-05, 6.819400000000059e-05, 6.812499999999874e-05, 6.812499999999874e-05, 6.74160000000007e-05, 6.788900000000153e-05, 6.781999999999969e-05, 6.777800000000098e-05, 6.784700000000282e-05, 6.74030000000006e-05, 6.801399999999819e-05, 6.818100000000049e-05, 6.744399999999984e-05, 6.819400000000059e-05, 6.798599999999905e-05, 6.725000000000134e-05, 6.786099999999892e-05, 6.758299999999953e-05, 6.786100000000239e-05, 6.799999999999862e-05, 6.784799999999883e-05, 6.766700000000042e-05, 6.727799999999701e-05, 6.763799999999834e-05, 6.812500000000221e-05, 6.793000000000077e-05, 6.747200000000245e-05, 6.772199999999923e-05, 6.748600000000202e-05, 6.777800000000098e-05, 6.726399999999744e-05, 6.818100000000049e-05, 6.819400000000059e-05, 6.812500000000221e-05, 6.75969999999991e-05, 6.77640000000014e-05, 6.769400000000009e-05, 6.743000000000027e-05, 6.769400000000009e-05, 6.726399999999744e-05]</msg>
<status status="PASS" starttime="20201029 12:44:10.764" endtime="20201029 12:44:10.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.759" endtime="20201029 12:44:10.767"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.770" endtime="20201029 12:44:10.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.769" endtime="20201029 12:44:10.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.768" endtime="20201029 12:44:10.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.404" endtime="20201029 12:44:10.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.404" endtime="20201029 12:44:10.791"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.800" endtime="20201029 12:44:10.820"></status>
</kw>
<msg timestamp="20201029 12:44:10.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.799" endtime="20201029 12:44:10.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.822" endtime="20201029 12:44:10.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.824" endtime="20201029 12:44:10.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.796" endtime="20201029 12:44:10.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.794" endtime="20201029 12:44:10.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.834" endtime="20201029 12:44:11.120"></status>
</kw>
<msg timestamp="20201029 12:44:11.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023917514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023986236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.832" endtime="20201029 12:44:11.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023917514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023986236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.125" endtime="20201029 12:44:11.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.133" endtime="20201029 12:44:11.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.830" endtime="20201029 12:44:11.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.828" endtime="20201029 12:44:11.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:11.140" level="INFO">${RESULT} = [{'diff': 6.872200000000023e-05}, {'diff': 6.90559999999979e-05}, {'diff': 6.876399999999894e-05}, {'diff': 6.890299999999863e-05}, {'diff': 6.849999999999912e-05}, {'diff': 6.844500000000031e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:11.137" endtime="20201029 12:44:11.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:11.144" level="INFO">${ACCURACY} = {'diff': [6.872200000000023e-05, 6.90559999999979e-05, 6.876399999999894e-05, 6.890299999999863e-05, 6.849999999999912e-05, 6.844500000000031e-05, 6.870800000000066e-05, 6.90840000000005e-05, 6.880500...</msg>
<status status="PASS" starttime="20201029 12:44:11.141" endtime="20201029 12:44:11.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.149" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 12:44:11.148" endtime="20201029 12:44:11.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.152" level="INFO">VALUE: [6.872200000000023e-05, 6.90559999999979e-05, 6.876399999999894e-05, 6.890299999999863e-05, 6.849999999999912e-05, 6.844500000000031e-05, 6.870800000000066e-05, 6.90840000000005e-05, 6.880500000000164e-05, 6.894400000000134e-05, 6.894499999999734e-05, 6.844399999999737e-05, 6.849999999999912e-05, 6.912499999999974e-05, 6.874999999999937e-05, 6.870800000000066e-05, 6.848599999999955e-05, 6.883400000000026e-05, 6.829199999999758e-05, 6.894500000000081e-05, 6.913799999999984e-05, 6.875000000000284e-05, 6.872200000000023e-05, 6.876299999999946e-05, 6.888899999999906e-05, 6.843000000000127e-05, 6.824999999999887e-05, 6.916699999999845e-05, 6.884700000000035e-05, 6.843099999999727e-05, 6.901399999999919e-05, 6.858300000000053e-05, 6.830500000000114e-05, 6.895799999999744e-05, 6.861099999999967e-05, 6.908299999999756e-05, 6.837500000000246e-05, 6.877799999999851e-05, 6.912499999999974e-05, 6.872200000000023e-05, 6.882000000000069e-05, 6.901399999999919e-05, 6.856900000000096e-05, 6.848600000000302e-05, 6.894500000000081e-05, 6.84030000000016e-05, 6.886099999999992e-05, 6.827699999999853e-05, 6.844399999999737e-05, 6.917999999999855e-05]</msg>
<status status="PASS" starttime="20201029 12:44:11.150" endtime="20201029 12:44:11.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.145" endtime="20201029 12:44:11.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.167" endtime="20201029 12:44:11.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.165" endtime="20201029 12:44:11.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.164" endtime="20201029 12:44:11.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.792" endtime="20201029 12:44:11.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.791" endtime="20201029 12:44:11.188"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.197" endtime="20201029 12:44:11.215"></status>
</kw>
<msg timestamp="20201029 12:44:11.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.195" endtime="20201029 12:44:11.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.217" endtime="20201029 12:44:11.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.219" endtime="20201029 12:44:11.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.192" endtime="20201029 12:44:11.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.190" endtime="20201029 12:44:11.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.229" endtime="20201029 12:44:11.515"></status>
</kw>
<msg timestamp="20201029 12:44:11.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.227" endtime="20201029 12:44:11.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.519" endtime="20201029 12:44:11.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.527" endtime="20201029 12:44:11.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.225" endtime="20201029 12:44:11.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.223" endtime="20201029 12:44:11.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:11.534" level="INFO">${RESULT} = [{'diff': 6.937499999999999e-05}, {'diff': 6.977799999999951e-05}, {'diff': 6.952799999999926e-05}, {'diff': 6.945799999999794e-05}, {'diff': 7.015200000000041e-05}, {'diff': 6.96109999999972e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:11.531" endtime="20201029 12:44:11.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:11.539" level="INFO">${ACCURACY} = {'diff': [6.937499999999999e-05, 6.977799999999951e-05, 6.952799999999926e-05, 6.945799999999794e-05, 7.015200000000041e-05, 6.96109999999972e-05, 7.017999999999955e-05, 7.00970000000016e-05, 6.965299...</msg>
<status status="PASS" starttime="20201029 12:44:11.535" endtime="20201029 12:44:11.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.544" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 12:44:11.543" endtime="20201029 12:44:11.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.547" level="INFO">VALUE: [6.937499999999999e-05, 6.977799999999951e-05, 6.952799999999926e-05, 6.945799999999794e-05, 7.015200000000041e-05, 6.96109999999972e-05, 7.017999999999955e-05, 7.00970000000016e-05, 6.965299999999938e-05, 7.001400000000019e-05, 7.008300000000203e-05, 6.934799999999686e-05, 6.932000000000119e-05, 6.968100000000199e-05, 6.951399999999969e-05, 6.982000000000169e-05, 6.99299999999993e-05, 6.975000000000037e-05, 7.009699999999813e-05, 6.965299999999938e-05, 6.929199999999858e-05, 6.95970000000011e-05, 6.980599999999865e-05, 6.945800000000141e-05, 6.972199999999776e-05, 6.930500000000214e-05, 6.945800000000141e-05, 6.976399999999994e-05, 6.936100000000042e-05, 6.990299999999963e-05, 6.924999999999987e-05, 6.929199999999858e-05, 6.970799999999819e-05, 6.933300000000128e-05, 7.002800000000323e-05, 6.932000000000119e-05, 6.966699999999895e-05, 6.958399999999754e-05, 7.001400000000019e-05, 6.926299999999996e-05, 6.991599999999973e-05, 6.970799999999819e-05, 6.962500000000024e-05, 7.002799999999976e-05, 6.959699999999763e-05, 6.934699999999738e-05, 6.968099999999852e-05, 6.977800000000298e-05, 6.987500000000049e-05, 6.976399999999994e-05]</msg>
<status status="PASS" starttime="20201029 12:44:11.545" endtime="20201029 12:44:11.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.540" endtime="20201029 12:44:11.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.552" endtime="20201029 12:44:11.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.550" endtime="20201029 12:44:11.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.549" endtime="20201029 12:44:11.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.188" endtime="20201029 12:44:11.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.188" endtime="20201029 12:44:11.573"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.582" endtime="20201029 12:44:11.601"></status>
</kw>
<msg timestamp="20201029 12:44:11.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.580" endtime="20201029 12:44:11.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.602" endtime="20201029 12:44:11.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.605" endtime="20201029 12:44:11.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.578" endtime="20201029 12:44:11.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.575" endtime="20201029 12:44:11.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.614" endtime="20201029 12:44:11.903"></status>
</kw>
<msg timestamp="20201029 12:44:11.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022528792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.613" endtime="20201029 12:44:11.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022528792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.907" endtime="20201029 12:44:11.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.915" endtime="20201029 12:44:11.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.610" endtime="20201029 12:44:11.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.608" endtime="20201029 12:44:11.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:11.921" level="INFO">${RESULT} = [{'diff': 7.073599999999833e-05}, {'diff': 7.065300000000038e-05}, {'diff': 7.093099999999977e-05}, {'diff': 7.083399999999879e-05}, {'diff': 7.040300000000013e-05}, {'diff': 7.108299999999956e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:11.918" endtime="20201029 12:44:11.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:11.926" level="INFO">${ACCURACY} = {'diff': [7.073599999999833e-05, 7.065300000000038e-05, 7.093099999999977e-05, 7.083399999999879e-05, 7.040300000000013e-05, 7.108299999999956e-05, 7.04169999999997e-05, 7.033299999999881e-05, 7.03469...</msg>
<status status="PASS" starttime="20201029 12:44:11.923" endtime="20201029 12:44:11.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.930" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 12:44:11.929" endtime="20201029 12:44:11.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.933" level="INFO">VALUE: [7.073599999999833e-05, 7.065300000000038e-05, 7.093099999999977e-05, 7.083399999999879e-05, 7.040300000000013e-05, 7.108299999999956e-05, 7.04169999999997e-05, 7.033299999999881e-05, 7.034699999999838e-05, 7.068000000000005e-05, 7.088899999999759e-05, 7.10559999999999e-05, 7.077800000000051e-05, 7.065300000000038e-05, 7.102800000000076e-05, 7.047199999999851e-05, 7.09300000000003e-05, 7.102700000000128e-05, 7.045799999999894e-05, 7.062499999999777e-05, 7.044399999999937e-05, 7.10970000000026e-05, 7.102800000000076e-05, 7.076400000000094e-05, 7.065300000000038e-05, 7.086100000000192e-05, 7.107000000000294e-05, 7.030499999999967e-05, 7.104100000000085e-05, 7.025000000000087e-05, 7.07910000000006e-05, 7.118000000000055e-05, 7.027800000000001e-05, 7.029199999999958e-05, 7.044499999999884e-05, 7.051400000000069e-05, 7.05970000000021e-05, 7.093100000000324e-05, 7.120799999999969e-05, 7.068099999999952e-05, 7.037500000000099e-05, 7.044399999999937e-05, 7.081999999999922e-05, 7.048600000000155e-05, 7.066600000000048e-05, 7.076400000000094e-05, 7.037499999999752e-05, 7.104200000000033e-05, 7.059699999999863e-05, 7.077800000000051e-05]</msg>
<status status="PASS" starttime="20201029 12:44:11.931" endtime="20201029 12:44:11.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.927" endtime="20201029 12:44:11.934"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.938" endtime="20201029 12:44:11.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.936" endtime="20201029 12:44:11.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.935" endtime="20201029 12:44:11.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.574" endtime="20201029 12:44:11.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.573" endtime="20201029 12:44:11.958"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.967" endtime="20201029 12:44:11.986"></status>
</kw>
<msg timestamp="20201029 12:44:11.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.966" endtime="20201029 12:44:11.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.987" endtime="20201029 12:44:11.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.990" endtime="20201029 12:44:11.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.963" endtime="20201029 12:44:11.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.961" endtime="20201029 12:44:11.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.999" endtime="20201029 12:44:12.303"></status>
</kw>
<msg timestamp="20201029 12:44:12.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023233236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023305042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.997" endtime="20201029 12:44:12.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023233236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023305042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.307" endtime="20201029 12:44:12.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.315" endtime="20201029 12:44:12.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.995" endtime="20201029 12:44:12.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.993" endtime="20201029 12:44:12.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:12.321" level="INFO">${RESULT} = [{'diff': 7.180600000000065e-05}, {'diff': 7.144400000000037e-05}, {'diff': 7.2069000000001e-05}, {'diff': 7.136099999999895e-05}, {'diff': 7.150000000000212e-05}, {'diff': 7.177799999999804e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:12.318" endtime="20201029 12:44:12.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:12.326" level="INFO">${ACCURACY} = {'diff': [7.180600000000065e-05, 7.144400000000037e-05, 7.2069000000001e-05, 7.136099999999895e-05, 7.150000000000212e-05, 7.177799999999804e-05, 7.172299999999923e-05, 7.194500000000034e-05, 7.152800...</msg>
<status status="PASS" starttime="20201029 12:44:12.322" endtime="20201029 12:44:12.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.330" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 12:44:12.329" endtime="20201029 12:44:12.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.333" level="INFO">VALUE: [7.180600000000065e-05, 7.144400000000037e-05, 7.2069000000001e-05, 7.136099999999895e-05, 7.150000000000212e-05, 7.177799999999804e-05, 7.172299999999923e-05, 7.194500000000034e-05, 7.152800000000126e-05, 7.182000000000022e-05, 7.126399999999797e-05, 7.197200000000001e-05, 7.151400000000169e-05, 7.136099999999895e-05, 7.165300000000138e-05, 7.207000000000047e-05, 7.2069000000001e-05, 7.170900000000313e-05, 7.129199999999711e-05, 7.180599999999718e-05, 7.197299999999948e-05, 7.212499999999927e-05, 7.204100000000185e-05, 7.127699999999806e-05, 7.21109999999997e-05, 7.223599999999983e-05, 7.125000000000187e-05, 7.209700000000013e-05, 7.154200000000083e-05, 7.152799999999779e-05, 7.152800000000126e-05, 7.20560000000009e-05, 7.194400000000087e-05, 7.198599999999958e-05, 7.16109999999992e-05, 7.187499999999902e-05, 7.192999999999783e-05, 7.126399999999797e-05, 7.127800000000101e-05, 7.19300000000013e-05, 7.202800000000176e-05, 7.193100000000077e-05, 7.14309999999968e-05, 7.134799999999886e-05, 7.1584000000003e-05, 7.194400000000087e-05, 7.134699999999938e-05, 7.14300000000008e-05, 7.209700000000013e-05, 7.162499999999877e-05]</msg>
<status status="PASS" starttime="20201029 12:44:12.331" endtime="20201029 12:44:12.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.327" endtime="20201029 12:44:12.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:12.338" endtime="20201029 12:44:12.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.337" endtime="20201029 12:44:12.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.336" endtime="20201029 12:44:12.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.959" endtime="20201029 12:44:12.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.958" endtime="20201029 12:44:12.359"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.368" endtime="20201029 12:44:12.386"></status>
</kw>
<msg timestamp="20201029 12:44:12.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.366" endtime="20201029 12:44:12.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.388" endtime="20201029 12:44:12.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.390" endtime="20201029 12:44:12.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.364" endtime="20201029 12:44:12.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.361" endtime="20201029 12:44:12.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.399" endtime="20201029 12:44:12.685"></status>
</kw>
<msg timestamp="20201029 12:44:12.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02200575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022078514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:12.398" endtime="20201029 12:44:12.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02200575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022078514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:12.689" endtime="20201029 12:44:12.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.697" endtime="20201029 12:44:12.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.395" endtime="20201029 12:44:12.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.393" endtime="20201029 12:44:12.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:12.704" level="INFO">${RESULT} = [{'diff': 7.276399999999947e-05}, {'diff': 7.25690000000015e-05}, {'diff': 7.227800000000201e-05}, {'diff': 7.302800000000276e-05}, {'diff': 7.263899999999934e-05}, {'diff': 7.300000000000015e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:12.701" endtime="20201029 12:44:12.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:12.709" level="INFO">${ACCURACY} = {'diff': [7.276399999999947e-05, 7.25690000000015e-05, 7.227800000000201e-05, 7.302800000000276e-05, 7.263899999999934e-05, 7.300000000000015e-05, 7.319400000000212e-05, 7.252699999999931e-05, 7.31389...</msg>
<status status="PASS" starttime="20201029 12:44:12.705" endtime="20201029 12:44:12.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.713" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 12:44:12.712" endtime="20201029 12:44:12.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.716" level="INFO">VALUE: [7.276399999999947e-05, 7.25690000000015e-05, 7.227800000000201e-05, 7.302800000000276e-05, 7.263899999999934e-05, 7.300000000000015e-05, 7.319400000000212e-05, 7.252699999999931e-05, 7.313899999999984e-05, 7.297300000000048e-05, 7.268000000000205e-05, 7.252699999999931e-05, 7.283299999999784e-05, 7.320800000000169e-05, 7.309699999999766e-05, 7.238899999999909e-05, 7.276399999999947e-05, 7.27499999999999e-05, 7.259700000000063e-05, 7.262499999999977e-05, 7.258400000000054e-05, 7.262499999999977e-05, 7.29300000000023e-05, 7.29439999999984e-05, 7.277799999999904e-05, 7.258300000000106e-05, 7.279200000000208e-05, 7.258300000000106e-05, 7.268000000000205e-05, 7.262499999999977e-05, 7.298700000000005e-05, 7.268100000000152e-05, 7.301300000000024e-05, 7.286199999999993e-05, 7.281899999999827e-05, 7.29300000000023e-05, 7.276399999999947e-05, 7.311099999999723e-05, 7.268099999999805e-05, 7.284699999999741e-05, 7.316699999999898e-05, 7.295899999999744e-05, 7.280599999999818e-05, 7.236199999999943e-05, 7.266699999999848e-05, 7.28049999999987e-05, 7.31110000000007e-05, 7.251399999999922e-05, 7.25829999999976e-05, 7.227800000000201e-05]</msg>
<status status="PASS" starttime="20201029 12:44:12.715" endtime="20201029 12:44:12.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.710" endtime="20201029 12:44:12.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:12.721" endtime="20201029 12:44:12.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.719" endtime="20201029 12:44:12.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.718" endtime="20201029 12:44:12.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.360" endtime="20201029 12:44:12.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.359" endtime="20201029 12:44:12.741"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.750" endtime="20201029 12:44:12.769"></status>
</kw>
<msg timestamp="20201029 12:44:12.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.749" endtime="20201029 12:44:12.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.770" endtime="20201029 12:44:12.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.773" endtime="20201029 12:44:12.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.746" endtime="20201029 12:44:12.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.744" endtime="20201029 12:44:12.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.782" endtime="20201029 12:44:13.068"></status>
</kw>
<msg timestamp="20201029 12:44:13.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.780" endtime="20201029 12:44:13.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.072" endtime="20201029 12:44:13.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.080" endtime="20201029 12:44:13.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.778" endtime="20201029 12:44:13.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.776" endtime="20201029 12:44:13.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:13.087" level="INFO">${RESULT} = [{'diff': 7.42500000000014e-05}, {'diff': 7.327799999999954e-05}, {'diff': 7.418000000000008e-05}, {'diff': 7.324999999999693e-05}, {'diff': 7.404199999999986e-05}, {'diff': 7.409699999999866e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:13.084" endtime="20201029 12:44:13.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:13.091" level="INFO">${ACCURACY} = {'diff': [7.42500000000014e-05, 7.327799999999954e-05, 7.418000000000008e-05, 7.324999999999693e-05, 7.404199999999986e-05, 7.409699999999866e-05, 7.381999999999875e-05, 7.369399999999915e-05, 7.39439...</msg>
<status status="PASS" starttime="20201029 12:44:13.088" endtime="20201029 12:44:13.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.095" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 12:44:13.094" endtime="20201029 12:44:13.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.098" level="INFO">VALUE: [7.42500000000014e-05, 7.327799999999954e-05, 7.418000000000008e-05, 7.324999999999693e-05, 7.404199999999986e-05, 7.409699999999866e-05, 7.381999999999875e-05, 7.369399999999915e-05, 7.39439999999994e-05, 7.409699999999866e-05, 7.411099999999823e-05, 7.386100000000145e-05, 7.373600000000133e-05, 7.380599999999918e-05, 7.348699999999708e-05, 7.426400000000097e-05, 7.330599999999868e-05, 7.415300000000041e-05, 7.395899999999844e-05, 7.327700000000006e-05, 7.369399999999915e-05, 7.415200000000094e-05, 7.387499999999755e-05, 7.356899999999902e-05, 7.368100000000252e-05, 7.39439999999994e-05, 7.327799999999954e-05, 7.357000000000197e-05, 7.384699999999841e-05, 7.398600000000158e-05, 7.401399999999725e-05, 7.369500000000209e-05, 7.419399999999965e-05, 7.415299999999694e-05, 7.363900000000034e-05, 7.327799999999954e-05, 7.340299999999966e-05, 7.397200000000201e-05, 7.37500000000009e-05, 7.327799999999954e-05, 7.405599999999943e-05, 7.330599999999868e-05, 7.355499999999945e-05, 7.366600000000001e-05, 7.358400000000154e-05, 7.361200000000068e-05, 7.359700000000163e-05, 7.327700000000006e-05, 7.413899999999737e-05, 7.359699999999816e-05]</msg>
<status status="PASS" starttime="20201029 12:44:13.097" endtime="20201029 12:44:13.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.092" endtime="20201029 12:44:13.099"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:13.103" endtime="20201029 12:44:13.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.101" endtime="20201029 12:44:13.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.100" endtime="20201029 12:44:13.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.742" endtime="20201029 12:44:13.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.742" endtime="20201029 12:44:13.124"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.133" endtime="20201029 12:44:13.153"></status>
</kw>
<msg timestamp="20201029 12:44:13.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.131" endtime="20201029 12:44:13.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.154" endtime="20201029 12:44:13.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.157" endtime="20201029 12:44:13.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.128" endtime="20201029 12:44:13.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.126" endtime="20201029 12:44:13.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.166" endtime="20201029 12:44:13.451"></status>
</kw>
<msg timestamp="20201029 12:44:13.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02286325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022938139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:13.164" endtime="20201029 12:44:13.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02286325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022938139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:13.455" endtime="20201029 12:44:13.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.464" endtime="20201029 12:44:13.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.161" endtime="20201029 12:44:13.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.160" endtime="20201029 12:44:13.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:13.470" level="INFO">${RESULT} = [{'diff': 7.488899999999812e-05}, {'diff': 7.441599999999729e-05}, {'diff': 7.441700000000023e-05}, {'diff': 7.454100000000088e-05}, {'diff': 7.452799999999732e-05}, {'diff': 7.484799999999889e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:13.467" endtime="20201029 12:44:13.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:13.474" level="INFO">${ACCURACY} = {'diff': [7.488899999999812e-05, 7.441599999999729e-05, 7.441700000000023e-05, 7.454100000000088e-05, 7.452799999999732e-05, 7.484799999999889e-05, 7.486099999999898e-05, 7.433299999999934e-05, 7.4792...</msg>
<status status="PASS" starttime="20201029 12:44:13.471" endtime="20201029 12:44:13.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.479" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 12:44:13.478" endtime="20201029 12:44:13.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.481" level="INFO">VALUE: [7.488899999999812e-05, 7.441599999999729e-05, 7.441700000000023e-05, 7.454100000000088e-05, 7.452799999999732e-05, 7.484799999999889e-05, 7.486099999999898e-05, 7.433299999999934e-05, 7.479200000000061e-05, 7.427800000000054e-05, 7.501400000000172e-05, 7.452800000000079e-05, 7.441700000000023e-05, 7.519500000000012e-05, 7.438799999999815e-05, 7.441699999999676e-05, 7.519500000000012e-05, 7.497199999999954e-05, 7.45829999999996e-05, 7.518000000000108e-05, 7.44439999999999e-05, 7.450000000000165e-05, 7.42639999999975e-05, 7.450000000000165e-05, 7.429200000000011e-05, 7.469499999999962e-05, 7.49310000000003e-05, 7.447199999999904e-05, 7.516600000000151e-05, 7.427800000000054e-05, 7.469400000000015e-05, 7.51110000000027e-05, 7.441600000000076e-05, 7.486099999999898e-05, 7.450000000000165e-05, 7.46110000000022e-05, 7.427800000000054e-05, 7.469499999999962e-05, 7.458399999999907e-05, 7.486099999999898e-05, 7.469400000000015e-05, 7.491600000000126e-05, 7.474999999999843e-05, 7.495799999999997e-05, 7.456900000000002e-05, 7.473600000000233e-05, 7.498599999999911e-05, 7.501400000000172e-05, 7.484800000000236e-05, 7.44309999999998e-05]</msg>
<status status="PASS" starttime="20201029 12:44:13.480" endtime="20201029 12:44:13.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.475" endtime="20201029 12:44:13.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:13.487" endtime="20201029 12:44:13.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.485" endtime="20201029 12:44:13.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.484" endtime="20201029 12:44:13.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.125" endtime="20201029 12:44:13.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.124" endtime="20201029 12:44:13.508"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.516" endtime="20201029 12:44:13.536"></status>
</kw>
<msg timestamp="20201029 12:44:13.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.515" endtime="20201029 12:44:13.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.537" endtime="20201029 12:44:13.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.540" endtime="20201029 12:44:13.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.512" endtime="20201029 12:44:13.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.510" endtime="20201029 12:44:13.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.549" endtime="20201029 12:44:13.835"></status>
</kw>
<msg timestamp="20201029 12:44:13.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.547" endtime="20201029 12:44:13.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.839" endtime="20201029 12:44:13.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.847" endtime="20201029 12:44:13.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.544" endtime="20201029 12:44:13.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.543" endtime="20201029 12:44:13.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:13.854" level="INFO">${RESULT} = [{'diff': 7.602699999999935e-05}, {'diff': 7.602699999999935e-05}, {'diff': 7.551400000000222e-05}, {'diff': 7.588899999999912e-05}, {'diff': 7.563900000000234e-05}, {'diff': 7.53890000000021e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:13.851" endtime="20201029 12:44:13.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:13.859" level="INFO">${ACCURACY} = {'diff': [7.602699999999935e-05, 7.602699999999935e-05, 7.551400000000222e-05, 7.588899999999912e-05, 7.563900000000234e-05, 7.53890000000021e-05, 7.561099999999973e-05, 7.619499999999765e-05, 7.60139...</msg>
<status status="PASS" starttime="20201029 12:44:13.855" endtime="20201029 12:44:13.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.864" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 12:44:13.862" endtime="20201029 12:44:13.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.866" level="INFO">VALUE: [7.602699999999935e-05, 7.602699999999935e-05, 7.551400000000222e-05, 7.588899999999912e-05, 7.563900000000234e-05, 7.53890000000021e-05, 7.561099999999973e-05, 7.619499999999765e-05, 7.601399999999925e-05, 7.587499999999955e-05, 7.608400000000057e-05, 7.559799999999964e-05, 7.587499999999955e-05, 7.602799999999882e-05, 7.559700000000016e-05, 7.604199999999839e-05, 7.563900000000234e-05, 7.530600000000068e-05, 7.555500000000145e-05, 7.577800000000204e-05, 7.613900000000284e-05, 7.6070000000001e-05, 7.558400000000007e-05, 7.587499999999955e-05, 7.619400000000165e-05, 7.563899999999887e-05, 7.59440000000014e-05, 7.601399999999925e-05, 7.561099999999973e-05, 7.599999999999968e-05, 7.613899999999937e-05, 7.568100000000105e-05, 7.559800000000311e-05, 7.587499999999955e-05, 7.61249999999998e-05, 7.529099999999816e-05, 7.618000000000208e-05, 7.583300000000084e-05, 7.57500000000029e-05, 7.555599999999746e-05, 7.54029999999982e-05, 7.599999999999968e-05, 7.611100000000023e-05, 7.613899999999937e-05, 7.54440000000009e-05, 7.558400000000007e-05, 7.580499999999823e-05, 7.566699999999801e-05, 7.572200000000029e-05, 7.593000000000183e-05]</msg>
<status status="PASS" starttime="20201029 12:44:13.865" endtime="20201029 12:44:13.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.860" endtime="20201029 12:44:13.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:13.871" endtime="20201029 12:44:13.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.869" endtime="20201029 12:44:13.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.868" endtime="20201029 12:44:13.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.508" endtime="20201029 12:44:13.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.508" endtime="20201029 12:44:13.891"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.900" endtime="20201029 12:44:13.919"></status>
</kw>
<msg timestamp="20201029 12:44:13.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.899" endtime="20201029 12:44:13.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.920" endtime="20201029 12:44:13.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.923" endtime="20201029 12:44:13.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.896" endtime="20201029 12:44:13.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.894" endtime="20201029 12:44:13.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.932" endtime="20201029 12:44:14.218"></status>
</kw>
<msg timestamp="20201029 12:44:14.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021959472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.930" endtime="20201029 12:44:14.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021959472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.222" endtime="20201029 12:44:14.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.231" endtime="20201029 12:44:14.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.928" endtime="20201029 12:44:14.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.926" endtime="20201029 12:44:14.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:14.237" level="INFO">${RESULT} = [{'diff': 7.723600000000136e-05}, {'diff': 7.704199999999939e-05}, {'diff': 7.70969999999982e-05}, {'diff': 7.694399999999893e-05}, {'diff': 7.704199999999939e-05}, {'diff': 7.634700000000091e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:14.234" endtime="20201029 12:44:14.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:14.241" level="INFO">${ACCURACY} = {'diff': [7.723600000000136e-05, 7.704199999999939e-05, 7.70969999999982e-05, 7.694399999999893e-05, 7.704199999999939e-05, 7.634700000000091e-05, 7.633300000000134e-05, 7.634699999999744e-05, 7.71660...</msg>
<status status="PASS" starttime="20201029 12:44:14.238" endtime="20201029 12:44:14.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.246" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 12:44:14.245" endtime="20201029 12:44:14.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.248" level="INFO">VALUE: [7.723600000000136e-05, 7.704199999999939e-05, 7.70969999999982e-05, 7.694399999999893e-05, 7.704199999999939e-05, 7.634700000000091e-05, 7.633300000000134e-05, 7.634699999999744e-05, 7.716600000000004e-05, 7.661200000000021e-05, 7.666599999999954e-05, 7.66250000000003e-05, 7.704199999999939e-05, 7.655599999999846e-05, 7.705599999999896e-05, 7.627799999999907e-05, 7.62639999999995e-05, 7.6764e-05, 7.704200000000286e-05, 7.629099999999917e-05, 7.673600000000086e-05, 7.684699999999794e-05, 7.62639999999995e-05, 7.70969999999982e-05, 7.679099999999967e-05, 7.672200000000129e-05, 7.6764e-05, 7.634700000000091e-05, 7.686100000000098e-05, 7.63189999999983e-05, 7.629200000000211e-05, 7.661200000000021e-05, 7.66250000000003e-05, 7.661100000000073e-05, 7.687500000000055e-05, 7.675000000000043e-05, 7.694399999999893e-05, 7.673600000000086e-05, 7.666699999999901e-05, 7.647200000000104e-05, 7.718100000000255e-05, 7.709800000000114e-05, 7.661200000000021e-05, 7.634800000000039e-05, 7.670800000000172e-05, 7.680499999999923e-05, 7.686100000000098e-05, 7.627799999999907e-05, 7.661100000000073e-05, 7.627799999999907e-05]</msg>
<status status="PASS" starttime="20201029 12:44:14.247" endtime="20201029 12:44:14.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.242" endtime="20201029 12:44:14.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:14.253" endtime="20201029 12:44:14.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.251" endtime="20201029 12:44:14.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.250" endtime="20201029 12:44:14.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.892" endtime="20201029 12:44:14.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.892" endtime="20201029 12:44:14.274"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.282" endtime="20201029 12:44:14.302"></status>
</kw>
<msg timestamp="20201029 12:44:14.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.281" endtime="20201029 12:44:14.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.304" endtime="20201029 12:44:14.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.306" endtime="20201029 12:44:14.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.278" endtime="20201029 12:44:14.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.276" endtime="20201029 12:44:14.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.315" endtime="20201029 12:44:14.600"></status>
</kw>
<msg timestamp="20201029 12:44:14.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023086069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023163444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.314" endtime="20201029 12:44:14.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023086069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023163444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.605" endtime="20201029 12:44:14.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.613" endtime="20201029 12:44:14.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.311" endtime="20201029 12:44:14.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.309" endtime="20201029 12:44:14.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:14.619" level="INFO">${RESULT} = [{'diff': 7.737499999999758e-05}, {'diff': 7.815299999999747e-05}, {'diff': 7.794399999999993e-05}, {'diff': 7.787499999999808e-05}, {'diff': 7.769500000000262e-05}, {'diff': 7.783299999999937e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:14.616" endtime="20201029 12:44:14.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:14.624" level="INFO">${ACCURACY} = {'diff': [7.737499999999758e-05, 7.815299999999747e-05, 7.794399999999993e-05, 7.787499999999808e-05, 7.769500000000262e-05, 7.783299999999937e-05, 7.745900000000194e-05, 7.80969999999992e-05, 7.80550...</msg>
<status status="PASS" starttime="20201029 12:44:14.620" endtime="20201029 12:44:14.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.628" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 12:44:14.627" endtime="20201029 12:44:14.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.630" level="INFO">VALUE: [7.737499999999758e-05, 7.815299999999747e-05, 7.794399999999993e-05, 7.787499999999808e-05, 7.769500000000262e-05, 7.783299999999937e-05, 7.745900000000194e-05, 7.80969999999992e-05, 7.805500000000049e-05, 7.777699999999763e-05, 7.816600000000104e-05, 7.72909999999967e-05, 7.783299999999937e-05, 7.78189999999998e-05, 7.748600000000161e-05, 7.813900000000137e-05, 7.804200000000039e-05, 7.761100000000173e-05, 7.745900000000194e-05, 7.730599999999921e-05, 7.74449999999989e-05, 7.761100000000173e-05, 7.761100000000173e-05, 7.794399999999993e-05, 7.819400000000018e-05, 7.74440000000029e-05, 7.80969999999992e-05, 7.770799999999925e-05, 7.811099999999876e-05, 7.76250000000013e-05, 7.815300000000094e-05, 7.74449999999989e-05, 7.761100000000173e-05, 7.81250000000018e-05, 7.822200000000279e-05, 7.748599999999814e-05, 7.783299999999937e-05, 7.79579999999995e-05, 7.804200000000039e-05, 7.777800000000057e-05, 7.800000000000168e-05, 7.7764000000001e-05, 7.816700000000051e-05, 7.809799999999867e-05, 7.82779999999976e-05, 7.749999999999771e-05, 7.751400000000075e-05, 7.825000000000193e-05, 7.76250000000013e-05, 7.822199999999932e-05]</msg>
<status status="PASS" starttime="20201029 12:44:14.629" endtime="20201029 12:44:14.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.624" endtime="20201029 12:44:14.633"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:14.636" endtime="20201029 12:44:14.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.635" endtime="20201029 12:44:14.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.634" endtime="20201029 12:44:14.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.275" endtime="20201029 12:44:14.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.274" endtime="20201029 12:44:14.657"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.666" endtime="20201029 12:44:14.685"></status>
</kw>
<msg timestamp="20201029 12:44:14.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.664" endtime="20201029 12:44:14.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.686" endtime="20201029 12:44:14.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.689" endtime="20201029 12:44:14.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.661" endtime="20201029 12:44:14.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.659" endtime="20201029 12:44:14.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.699" endtime="20201029 12:44:14.984"></status>
</kw>
<msg timestamp="20201029 12:44:14.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021862542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.698" endtime="20201029 12:44:14.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021862542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.989" endtime="20201029 12:44:14.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.997" endtime="20201029 12:44:14.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.695" endtime="20201029 12:44:14.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.693" endtime="20201029 12:44:14.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:15.003" level="INFO">${RESULT} = [{'diff': 7.905500000000149e-05}, {'diff': 7.879200000000114e-05}, {'diff': 7.82640000000015e-05}, {'diff': 7.829199999999717e-05}, {'diff': 7.845899999999947e-05}, {'diff': 7.893100000000083e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:15.000" endtime="20201029 12:44:15.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:15.008" level="INFO">${ACCURACY} = {'diff': [7.905500000000149e-05, 7.879200000000114e-05, 7.82640000000015e-05, 7.829199999999717e-05, 7.845899999999947e-05, 7.893100000000083e-05, 7.884799999999942e-05, 7.884799999999942e-05, 7.91119...</msg>
<status status="PASS" starttime="20201029 12:44:15.004" endtime="20201029 12:44:15.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.013" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 12:44:15.012" endtime="20201029 12:44:15.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.015" level="INFO">VALUE: [7.905500000000149e-05, 7.879200000000114e-05, 7.82640000000015e-05, 7.829199999999717e-05, 7.845899999999947e-05, 7.893100000000083e-05, 7.884799999999942e-05, 7.884799999999942e-05, 7.911199999999924e-05, 7.905499999999802e-05, 7.826300000000203e-05, 7.880500000000124e-05, 7.866600000000154e-05, 7.836099999999901e-05, 7.856899999999709e-05, 7.856900000000056e-05, 7.883300000000037e-05, 7.829200000000064e-05, 7.82640000000015e-05, 7.82640000000015e-05, 7.877800000000157e-05, 7.911099999999976e-05, 7.847199999999957e-05, 7.841600000000129e-05, 7.862499999999883e-05, 7.91250000000028e-05, 7.884699999999994e-05, 7.847199999999957e-05, 7.87779999999981e-05, 7.87779999999981e-05, 7.827800000000107e-05, 7.880500000000124e-05, 7.898700000000258e-05, 7.8458e-05, 7.906900000000106e-05, 7.848600000000261e-05, 7.836099999999901e-05, 7.834699999999944e-05, 7.826399999999803e-05, 7.847299999999904e-05, 7.877800000000157e-05, 7.843100000000033e-05, 7.829200000000064e-05, 7.827800000000107e-05, 7.911099999999976e-05, 7.884699999999994e-05, 7.91250000000028e-05, 7.851399999999828e-05, 7.869399999999721e-05, 7.84449999999999e-05]</msg>
<status status="PASS" starttime="20201029 12:44:15.014" endtime="20201029 12:44:15.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.009" endtime="20201029 12:44:15.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.020" endtime="20201029 12:44:15.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.019" endtime="20201029 12:44:15.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.018" endtime="20201029 12:44:15.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.658" endtime="20201029 12:44:15.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.657" endtime="20201029 12:44:15.041"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.049" endtime="20201029 12:44:15.069"></status>
</kw>
<msg timestamp="20201029 12:44:15.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.048" endtime="20201029 12:44:15.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.070" endtime="20201029 12:44:15.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.073" endtime="20201029 12:44:15.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.045" endtime="20201029 12:44:15.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.043" endtime="20201029 12:44:15.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.082" endtime="20201029 12:44:15.370"></status>
</kw>
<msg timestamp="20201029 12:44:15.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.080" endtime="20201029 12:44:15.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.374" endtime="20201029 12:44:15.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.382" endtime="20201029 12:44:15.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.078" endtime="20201029 12:44:15.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.076" endtime="20201029 12:44:15.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:15.392" level="INFO">${RESULT} = [{'diff': 8.006999999999806e-05}, {'diff': 7.983300000000138e-05}, {'diff': 7.92779999999986e-05}, {'diff': 8.0152e-05}, {'diff': 7.944400000000143e-05}, {'diff': 7.995799999999803e-05}, {'diff': 7.98...</msg>
<status status="PASS" starttime="20201029 12:44:15.389" endtime="20201029 12:44:15.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:15.398" level="INFO">${ACCURACY} = {'diff': [8.006999999999806e-05, 7.983300000000138e-05, 7.92779999999986e-05, 8.0152e-05, 7.944400000000143e-05, 7.995799999999803e-05, 7.983300000000138e-05, 7.952799999999885e-05, 7.951399999999928e...</msg>
<status status="PASS" starttime="20201029 12:44:15.394" endtime="20201029 12:44:15.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.404" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 12:44:15.403" endtime="20201029 12:44:15.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.407" level="INFO">VALUE: [8.006999999999806e-05, 7.983300000000138e-05, 7.92779999999986e-05, 8.0152e-05, 7.944400000000143e-05, 7.995799999999803e-05, 7.983300000000138e-05, 7.952799999999885e-05, 7.951399999999928e-05, 8.011100000000076e-05, 7.976399999999953e-05, 7.998600000000064e-05, 7.930600000000121e-05, 7.997200000000107e-05, 7.966599999999907e-05, 8.016599999999957e-05, 7.930500000000174e-05, 7.926399999999903e-05, 7.943000000000186e-05, 7.927800000000207e-05, 7.997200000000107e-05, 8.00970000000012e-05, 7.97779999999991e-05, 7.94169999999983e-05, 7.929200000000164e-05, 7.941700000000176e-05, 7.973600000000039e-05, 7.926299999999956e-05, 8.002699999999988e-05, 7.980499999999877e-05, 8.011100000000076e-05, 8.000000000000021e-05, 7.936100000000001e-05, 7.947200000000057e-05, 7.973600000000039e-05, 7.940299999999872e-05, 7.926399999999903e-05, 7.998600000000064e-05, 7.983300000000138e-05, 7.936100000000001e-05, 8.011100000000076e-05, 8.015299999999947e-05, 7.944400000000143e-05, 7.947200000000057e-05, 7.963900000000287e-05, 7.994499999999793e-05, 7.97909999999992e-05, 7.998600000000064e-05, 7.983300000000138e-05, 7.995799999999803e-05]</msg>
<status status="PASS" starttime="20201029 12:44:15.405" endtime="20201029 12:44:15.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.399" endtime="20201029 12:44:15.408"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.413" endtime="20201029 12:44:15.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.411" endtime="20201029 12:44:15.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.409" endtime="20201029 12:44:15.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.042" endtime="20201029 12:44:15.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.041" endtime="20201029 12:44:15.434"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.443" endtime="20201029 12:44:15.462"></status>
</kw>
<msg timestamp="20201029 12:44:15.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.441" endtime="20201029 12:44:15.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.463" endtime="20201029 12:44:15.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.466" endtime="20201029 12:44:15.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.439" endtime="20201029 12:44:15.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.437" endtime="20201029 12:44:15.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.475" endtime="20201029 12:44:15.763"></status>
</kw>
<msg timestamp="20201029 12:44:15.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022744486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.474" endtime="20201029 12:44:15.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022744486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.767" endtime="20201029 12:44:15.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.775" endtime="20201029 12:44:15.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.471" endtime="20201029 12:44:15.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.469" endtime="20201029 12:44:15.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:15.781" level="INFO">${RESULT} = [{'diff': 8.123599999999842e-05}, {'diff': 8.095799999999903e-05}, {'diff': 8.109699999999873e-05}, {'diff': 8.025000000000046e-05}, {'diff': 8.055600000000246e-05}, {'diff': 8.05970000000017e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:15.778" endtime="20201029 12:44:15.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:15.785" level="INFO">${ACCURACY} = {'diff': [8.123599999999842e-05, 8.095799999999903e-05, 8.109699999999873e-05, 8.025000000000046e-05, 8.055600000000246e-05, 8.05970000000017e-05, 8.101400000000078e-05, 8.075000000000096e-05, 8.11530...</msg>
<status status="PASS" starttime="20201029 12:44:15.782" endtime="20201029 12:44:15.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.790" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 12:44:15.789" endtime="20201029 12:44:15.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.792" level="INFO">VALUE: [8.123599999999842e-05, 8.095799999999903e-05, 8.109699999999873e-05, 8.025000000000046e-05, 8.055600000000246e-05, 8.05970000000017e-05, 8.101400000000078e-05, 8.075000000000096e-05, 8.115300000000047e-05, 8.11390000000009e-05, 8.120799999999928e-05, 8.094399999999946e-05, 8.026400000000003e-05, 8.116700000000004e-05, 8.080600000000271e-05, 8.09450000000024e-05, 8.043100000000233e-05, 8.054199999999942e-05, 8.084799999999795e-05, 8.090300000000022e-05, 8.116600000000057e-05, 8.038899999999669e-05, 8.112500000000133e-05, 8.02909999999997e-05, 8.086100000000151e-05, 8.067999999999964e-05, 8.051400000000028e-05, 8.10970000000022e-05, 8.104199999999992e-05, 8.04169999999993e-05, 8.069499999999868e-05, 8.086100000000151e-05, 8.101299999999784e-05, 8.073599999999792e-05, 8.098599999999817e-05, 8.062500000000083e-05, 8.086100000000151e-05, 8.051400000000028e-05, 8.094499999999893e-05, 8.036099999999755e-05, 8.065299999999997e-05, 8.086100000000151e-05, 8.054099999999995e-05, 8.025000000000046e-05, 8.119399999999971e-05, 8.1152999999997e-05, 8.115300000000047e-05, 8.087500000000108e-05, 8.086100000000151e-05, 8.044399999999896e-05]</msg>
<status status="PASS" starttime="20201029 12:44:15.791" endtime="20201029 12:44:15.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.786" endtime="20201029 12:44:15.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.798" endtime="20201029 12:44:15.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.797" endtime="20201029 12:44:15.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.795" endtime="20201029 12:44:15.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.435" endtime="20201029 12:44:15.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.435" endtime="20201029 12:44:15.819"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.828" endtime="20201029 12:44:15.846"></status>
</kw>
<msg timestamp="20201029 12:44:15.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.826" endtime="20201029 12:44:15.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.847" endtime="20201029 12:44:15.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.850" endtime="20201029 12:44:15.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.823" endtime="20201029 12:44:15.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.821" endtime="20201029 12:44:15.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.859" endtime="20201029 12:44:16.142"></status>
</kw>
<msg timestamp="20201029 12:44:16.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.857" endtime="20201029 12:44:16.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.146" endtime="20201029 12:44:16.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.154" endtime="20201029 12:44:16.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.855" endtime="20201029 12:44:16.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.853" endtime="20201029 12:44:16.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:16.161" level="INFO">${RESULT} = [{'diff': 8.174999999999849e-05}, {'diff': 8.186099999999905e-05}, {'diff': 8.152800000000085e-05}, {'diff': 8.159699999999923e-05}, {'diff': 8.193100000000036e-05}, {'diff': 8.193100000000036e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:16.158" endtime="20201029 12:44:16.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:16.166" level="INFO">${ACCURACY} = {'diff': [8.174999999999849e-05, 8.186099999999905e-05, 8.152800000000085e-05, 8.159699999999923e-05, 8.193100000000036e-05, 8.193100000000036e-05, 8.213799999999896e-05, 8.190300000000122e-05, 8.1971...</msg>
<status status="PASS" starttime="20201029 12:44:16.162" endtime="20201029 12:44:16.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.170" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 12:44:16.169" endtime="20201029 12:44:16.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.173" level="INFO">VALUE: [8.174999999999849e-05, 8.186099999999905e-05, 8.152800000000085e-05, 8.159699999999923e-05, 8.193100000000036e-05, 8.193100000000036e-05, 8.213799999999896e-05, 8.190300000000122e-05, 8.19719999999996e-05, 8.127700000000113e-05, 8.201400000000178e-05, 8.154200000000042e-05, 8.173599999999892e-05, 8.212499999999887e-05, 8.143099999999986e-05, 8.220899999999975e-05, 8.176399999999806e-05, 8.184699999999948e-05, 8.145799999999953e-05, 8.219399999999724e-05, 8.173599999999892e-05, 8.166700000000054e-05, 8.12780000000006e-05, 8.216700000000104e-05, 8.13329999999994e-05, 8.144399999999996e-05, 8.18329999999999e-05, 8.219500000000018e-05, 8.137499999999812e-05, 8.156999999999956e-05, 8.219500000000018e-05, 8.177700000000163e-05, 8.172199999999935e-05, 8.15970000000027e-05, 8.215300000000147e-05, 8.140300000000072e-05, 8.155599999999999e-05, 8.143099999999986e-05, 8.218100000000061e-05, 8.14170000000003e-05, 8.14170000000003e-05, 8.134699999999898e-05, 8.1458000000003e-05, 8.136099999999855e-05, 8.176399999999806e-05, 8.213899999999844e-05, 8.174999999999849e-05, 8.180600000000024e-05, 8.201399999999831e-05, 8.143099999999986e-05]</msg>
<status status="PASS" starttime="20201029 12:44:16.171" endtime="20201029 12:44:16.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.167" endtime="20201029 12:44:16.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:16.182" endtime="20201029 12:44:16.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.180" endtime="20201029 12:44:16.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.179" endtime="20201029 12:44:16.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.820" endtime="20201029 12:44:16.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.819" endtime="20201029 12:44:16.203"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.211" endtime="20201029 12:44:16.230"></status>
</kw>
<msg timestamp="20201029 12:44:16.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.210" endtime="20201029 12:44:16.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.232" endtime="20201029 12:44:16.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.234" endtime="20201029 12:44:16.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.207" endtime="20201029 12:44:16.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.205" endtime="20201029 12:44:16.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.243" endtime="20201029 12:44:16.530"></status>
</kw>
<msg timestamp="20201029 12:44:16.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.242" endtime="20201029 12:44:16.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.534" endtime="20201029 12:44:16.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.542" endtime="20201029 12:44:16.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.239" endtime="20201029 12:44:16.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.237" endtime="20201029 12:44:16.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:16.549" level="INFO">${RESULT} = [{'diff': 8.288899999999919e-05}, {'diff': 8.234699999999998e-05}, {'diff': 8.295800000000103e-05}, {'diff': 8.259700000000023e-05}, {'diff': 8.288899999999919e-05}, {'diff': 8.233399999999988e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:16.546" endtime="20201029 12:44:16.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:16.553" level="INFO">${ACCURACY} = {'diff': [8.288899999999919e-05, 8.234699999999998e-05, 8.295800000000103e-05, 8.259700000000023e-05, 8.288899999999919e-05, 8.233399999999988e-05, 8.320799999999781e-05, 8.272200000000035e-05, 8.2930...</msg>
<status status="PASS" starttime="20201029 12:44:16.550" endtime="20201029 12:44:16.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.557" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 12:44:16.556" endtime="20201029 12:44:16.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.560" level="INFO">VALUE: [8.288899999999919e-05, 8.234699999999998e-05, 8.295800000000103e-05, 8.259700000000023e-05, 8.288899999999919e-05, 8.233399999999988e-05, 8.320799999999781e-05, 8.272200000000035e-05, 8.293000000000189e-05, 8.312499999999987e-05, 8.244400000000096e-05, 8.248599999999967e-05, 8.26390000000024e-05, 8.270900000000025e-05, 8.22780000000016e-05, 8.244399999999749e-05, 8.263899999999894e-05, 8.244499999999697e-05, 8.23330000000004e-05, 8.241600000000182e-05, 8.304199999999845e-05, 8.248599999999967e-05, 8.22919999999977e-05, 8.301399999999931e-05, 8.309700000000073e-05, 8.227799999999813e-05, 8.230600000000074e-05, 8.255499999999805e-05, 8.30980000000002e-05, 8.277699999999916e-05, 8.277700000000263e-05, 8.24720000000001e-05, 8.249999999999924e-05, 8.295800000000103e-05, 8.277799999999863e-05, 8.232000000000031e-05, 8.251400000000228e-05, 8.277799999999863e-05, 8.29590000000005e-05, 8.277699999999916e-05, 8.241600000000182e-05, 8.304200000000192e-05, 8.286100000000005e-05, 8.252799999999838e-05, 8.268099999999765e-05, 8.230600000000074e-05, 8.308300000000116e-05, 8.244500000000043e-05, 8.258300000000066e-05, 8.277799999999863e-05]</msg>
<status status="PASS" starttime="20201029 12:44:16.558" endtime="20201029 12:44:16.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.554" endtime="20201029 12:44:16.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:16.565" endtime="20201029 12:44:16.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.563" endtime="20201029 12:44:16.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.562" endtime="20201029 12:44:16.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.203" endtime="20201029 12:44:16.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.203" endtime="20201029 12:44:16.586"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.594" endtime="20201029 12:44:16.614"></status>
</kw>
<msg timestamp="20201029 12:44:16.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.593" endtime="20201029 12:44:16.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.616" endtime="20201029 12:44:16.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.618" endtime="20201029 12:44:16.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.590" endtime="20201029 12:44:16.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.588" endtime="20201029 12:44:16.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.627" endtime="20201029 12:44:16.913"></status>
</kw>
<msg timestamp="20201029 12:44:16.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022897236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022980653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.626" endtime="20201029 12:44:16.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022897236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022980653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.917" endtime="20201029 12:44:16.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.925" endtime="20201029 12:44:16.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.623" endtime="20201029 12:44:16.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.621" endtime="20201029 12:44:16.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:16.932" level="INFO">${RESULT} = [{'diff': 8.341699999999883e-05}, {'diff': 8.354199999999895e-05}, {'diff': 8.416699999999958e-05}, {'diff': 8.401400000000031e-05}, {'diff': 8.402799999999988e-05}, {'diff': 8.394500000000193e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:16.929" endtime="20201029 12:44:16.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:16.936" level="INFO">${ACCURACY} = {'diff': [8.341699999999883e-05, 8.354199999999895e-05, 8.416699999999958e-05, 8.401400000000031e-05, 8.402799999999988e-05, 8.394500000000193e-05, 8.32910000000027e-05, 8.327799999999913e-05, 8.40969...</msg>
<status status="PASS" starttime="20201029 12:44:16.933" endtime="20201029 12:44:16.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.940" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 12:44:16.939" endtime="20201029 12:44:16.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.943" level="INFO">VALUE: [8.341699999999883e-05, 8.354199999999895e-05, 8.416699999999958e-05, 8.401400000000031e-05, 8.402799999999988e-05, 8.394500000000193e-05, 8.32910000000027e-05, 8.327799999999913e-05, 8.409699999999826e-05, 8.345800000000153e-05, 8.36529999999995e-05, 8.41110000000013e-05, 8.332000000000131e-05, 8.327799999999913e-05, 8.361200000000027e-05, 8.401300000000084e-05, 8.394400000000246e-05, 8.422200000000185e-05, 8.384700000000148e-05, 8.392999999999942e-05, 8.359799999999723e-05, 8.394399999999899e-05, 8.408299999999869e-05, 8.41110000000013e-05, 8.344500000000143e-05, 8.348600000000067e-05, 8.419499999999872e-05, 8.348700000000014e-05, 8.36110000000008e-05, 8.350000000000024e-05, 8.395799999999856e-05, 8.330599999999827e-05, 8.343100000000186e-05, 8.413900000000044e-05, 8.36110000000008e-05, 8.404199999999945e-05, 8.39309999999989e-05, 8.350000000000024e-05, 8.412500000000087e-05, 8.394399999999899e-05, 8.36529999999995e-05, 8.402799999999988e-05, 8.359700000000123e-05, 8.347199999999763e-05, 8.419499999999872e-05, 8.368099999999865e-05, 8.409699999999826e-05, 8.33049999999988e-05, 8.359700000000123e-05, 8.331899999999837e-05]</msg>
<status status="PASS" starttime="20201029 12:44:16.941" endtime="20201029 12:44:16.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.937" endtime="20201029 12:44:16.945"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:16.949" endtime="20201029 12:44:16.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.947" endtime="20201029 12:44:16.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.946" endtime="20201029 12:44:16.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.586" endtime="20201029 12:44:16.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.586" endtime="20201029 12:44:16.969"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.978" endtime="20201029 12:44:16.997"></status>
</kw>
<msg timestamp="20201029 12:44:16.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.977" endtime="20201029 12:44:16.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.999" endtime="20201029 12:44:17.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.001" endtime="20201029 12:44:17.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.974" endtime="20201029 12:44:17.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.972" endtime="20201029 12:44:17.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.010" endtime="20201029 12:44:17.296"></status>
</kw>
<msg timestamp="20201029 12:44:17.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021795972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.009" endtime="20201029 12:44:17.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021795972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.301" endtime="20201029 12:44:17.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.309" endtime="20201029 12:44:17.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.006" endtime="20201029 12:44:17.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.005" endtime="20201029 12:44:17.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:17.315" level="INFO">${RESULT} = [{'diff': 8.491700000000033e-05}, {'diff': 8.423599999999795e-05}, {'diff': 8.463900000000094e-05}, {'diff': 8.44720000000021e-05}, {'diff': 8.486099999999858e-05}, {'diff': 8.49309999999999e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:17.312" endtime="20201029 12:44:17.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:17.321" level="INFO">${ACCURACY} = {'diff': [8.491700000000033e-05, 8.423599999999795e-05, 8.463900000000094e-05, 8.44720000000021e-05, 8.486099999999858e-05, 8.49309999999999e-05, 8.487500000000162e-05, 8.491700000000033e-05, 8.466600...</msg>
<status status="PASS" starttime="20201029 12:44:17.316" endtime="20201029 12:44:17.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.325" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 12:44:17.324" endtime="20201029 12:44:17.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.327" level="INFO">VALUE: [8.491700000000033e-05, 8.423599999999795e-05, 8.463900000000094e-05, 8.44720000000021e-05, 8.486099999999858e-05, 8.49309999999999e-05, 8.487500000000162e-05, 8.491700000000033e-05, 8.46660000000006e-05, 8.450000000000124e-05, 8.486100000000205e-05, 8.47920000000002e-05, 8.430599999999927e-05, 8.44309999999994e-05, 8.515199999999806e-05, 8.454199999999995e-05, 8.494499999999947e-05, 8.506900000000012e-05, 8.46110000000018e-05, 8.424999999999752e-05, 8.513900000000144e-05, 8.482000000000281e-05, 8.504200000000045e-05, 8.426400000000056e-05, 8.494500000000293e-05, 8.504199999999698e-05, 8.462500000000137e-05, 8.500000000000174e-05, 8.468000000000017e-05, 8.497199999999913e-05, 8.49309999999999e-05, 8.426400000000056e-05, 8.427800000000013e-05, 8.426400000000056e-05, 8.477800000000063e-05, 8.452799999999691e-05, 8.468099999999965e-05, 8.44720000000021e-05, 8.444399999999949e-05, 8.477699999999769e-05, 8.436099999999808e-05, 8.46530000000005e-05, 8.436099999999808e-05, 8.470799999999931e-05, 8.477800000000063e-05, 8.486099999999858e-05, 8.49309999999999e-05, 8.523600000000242e-05, 8.480599999999977e-05, 8.463900000000094e-05]</msg>
<status status="PASS" starttime="20201029 12:44:17.326" endtime="20201029 12:44:17.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.321" endtime="20201029 12:44:17.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:17.333" endtime="20201029 12:44:17.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.331" endtime="20201029 12:44:17.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.330" endtime="20201029 12:44:17.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.970" endtime="20201029 12:44:17.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.970" endtime="20201029 12:44:17.353"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.362" endtime="20201029 12:44:17.381"></status>
</kw>
<msg timestamp="20201029 12:44:17.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.360" endtime="20201029 12:44:17.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.383" endtime="20201029 12:44:17.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.385" endtime="20201029 12:44:17.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.358" endtime="20201029 12:44:17.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.356" endtime="20201029 12:44:17.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.394" endtime="20201029 12:44:17.681"></status>
</kw>
<msg timestamp="20201029 12:44:17.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.393" endtime="20201029 12:44:17.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.685" endtime="20201029 12:44:17.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.693" endtime="20201029 12:44:17.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.390" endtime="20201029 12:44:17.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.388" endtime="20201029 12:44:17.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:17.700" level="INFO">${RESULT} = [{'diff': 8.622299999999986e-05}, {'diff': 8.6153000000002e-05}, {'diff': 8.526400000000156e-05}, {'diff': 8.563899999999847e-05}, {'diff': 8.561099999999933e-05}, {'diff': 8.527799999999766e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:17.697" endtime="20201029 12:44:17.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:17.704" level="INFO">${ACCURACY} = {'diff': [8.622299999999986e-05, 8.6153000000002e-05, 8.526400000000156e-05, 8.563899999999847e-05, 8.561099999999933e-05, 8.527799999999766e-05, 8.527800000000113e-05, 8.583399999999991e-05, 8.598599...</msg>
<status status="PASS" starttime="20201029 12:44:17.701" endtime="20201029 12:44:17.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.709" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 12:44:17.707" endtime="20201029 12:44:17.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.711" level="INFO">VALUE: [8.622299999999986e-05, 8.6153000000002e-05, 8.526400000000156e-05, 8.563899999999847e-05, 8.561099999999933e-05, 8.527799999999766e-05, 8.527800000000113e-05, 8.583399999999991e-05, 8.59859999999997e-05, 8.527800000000113e-05, 8.523599999999895e-05, 8.594500000000047e-05, 8.536199999999855e-05, 8.541600000000135e-05, 8.59859999999997e-05, 8.53050000000008e-05, 8.57920000000012e-05, 8.526399999999809e-05, 8.552700000000191e-05, 8.54310000000004e-05, 8.602800000000188e-05, 8.56530000000015e-05, 8.569500000000022e-05, 8.559699999999976e-05, 8.545800000000006e-05, 8.529099999999776e-05, 8.573599999999945e-05, 8.533299999999994e-05, 8.524999999999852e-05, 8.612500000000287e-05, 8.57370000000024e-05, 8.548700000000214e-05, 8.526399999999809e-05, 8.562500000000237e-05, 8.591600000000185e-05, 8.563799999999899e-05, 8.5847e-05, 8.53469999999995e-05, 8.54859999999992e-05, 8.577799999999816e-05, 8.608300000000069e-05, 8.536100000000255e-05, 8.533399999999941e-05, 8.529100000000123e-05, 8.580499999999783e-05, 8.53469999999995e-05, 8.574999999999902e-05, 8.594399999999752e-05, 8.56249999999989e-05, 8.549999999999877e-05]</msg>
<status status="PASS" starttime="20201029 12:44:17.710" endtime="20201029 12:44:17.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.705" endtime="20201029 12:44:17.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:17.716" endtime="20201029 12:44:17.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.715" endtime="20201029 12:44:17.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.713" endtime="20201029 12:44:17.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.354" endtime="20201029 12:44:17.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.354" endtime="20201029 12:44:17.737"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.747" endtime="20201029 12:44:17.767"></status>
</kw>
<msg timestamp="20201029 12:44:17.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.745" endtime="20201029 12:44:17.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.769" endtime="20201029 12:44:17.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.771" endtime="20201029 12:44:17.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.742" endtime="20201029 12:44:17.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.740" endtime="20201029 12:44:17.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.780" endtime="20201029 12:44:18.066"></status>
</kw>
<msg timestamp="20201029 12:44:18.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024336056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024423292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.779" endtime="20201029 12:44:18.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024336056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024423292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.071" endtime="20201029 12:44:18.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.080" endtime="20201029 12:44:18.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.776" endtime="20201029 12:44:18.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.775" endtime="20201029 12:44:18.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:18.086" level="INFO">${RESULT} = [{'diff': 8.723600000000095e-05}, {'diff': 8.627800000000213e-05}, {'diff': 8.669499999999775e-05}, {'diff': 8.722200000000138e-05}, {'diff': 8.658299999999772e-05}, {'diff': 8.711100000000083e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:18.083" endtime="20201029 12:44:18.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:18.090" level="INFO">${ACCURACY} = {'diff': [8.723600000000095e-05, 8.627800000000213e-05, 8.669499999999775e-05, 8.722200000000138e-05, 8.658299999999772e-05, 8.711100000000083e-05, 8.666599999999913e-05, 8.669400000000174e-05, 8.6361...</msg>
<status status="PASS" starttime="20201029 12:44:18.087" endtime="20201029 12:44:18.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.095" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 12:44:18.094" endtime="20201029 12:44:18.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.099" level="INFO">VALUE: [8.723600000000095e-05, 8.627800000000213e-05, 8.669499999999775e-05, 8.722200000000138e-05, 8.658299999999772e-05, 8.711100000000083e-05, 8.666599999999913e-05, 8.669400000000174e-05, 8.636100000000008e-05, 8.626399999999909e-05, 8.702799999999941e-05, 8.680600000000177e-05, 8.623599999999995e-05, 8.694399999999852e-05, 8.700000000000027e-05, 8.715200000000006e-05, 8.66249999999999e-05, 8.642999999999845e-05, 8.627799999999866e-05, 8.665299999999904e-05, 8.71250000000004e-05, 8.716599999999963e-05, 8.711099999999736e-05, 8.634799999999998e-05, 8.624999999999952e-05, 8.687500000000015e-05, 8.627699999999919e-05, 8.644399999999802e-05, 8.695800000000156e-05, 8.668100000000165e-05, 8.649999999999977e-05, 8.662500000000337e-05, 8.663899999999947e-05, 8.64310000000014e-05, 8.627799999999866e-05, 8.663899999999947e-05, 8.659700000000076e-05, 8.695799999999809e-05, 8.683300000000144e-05, 8.677799999999916e-05, 8.651399999999934e-05, 8.702799999999941e-05, 8.64730000000001e-05, 8.644500000000097e-05, 8.695900000000104e-05, 8.716599999999963e-05, 8.697200000000113e-05, 8.66799999999987e-05, 8.697200000000113e-05, 8.668000000000217e-05]</msg>
<status status="PASS" starttime="20201029 12:44:18.096" endtime="20201029 12:44:18.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.091" endtime="20201029 12:44:18.101"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:18.105" endtime="20201029 12:44:18.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.103" endtime="20201029 12:44:18.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.102" endtime="20201029 12:44:18.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.738" endtime="20201029 12:44:18.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.737" endtime="20201029 12:44:18.125"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.134" endtime="20201029 12:44:18.153"></status>
</kw>
<msg timestamp="20201029 12:44:18.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.133" endtime="20201029 12:44:18.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.155" endtime="20201029 12:44:18.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.157" endtime="20201029 12:44:18.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.130" endtime="20201029 12:44:18.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.128" endtime="20201029 12:44:18.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.166" endtime="20201029 12:44:18.452"></status>
</kw>
<msg timestamp="20201029 12:44:18.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022151194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.165" endtime="20201029 12:44:18.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022151194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.456" endtime="20201029 12:44:18.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.464" endtime="20201029 12:44:18.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.162" endtime="20201029 12:44:18.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.160" endtime="20201029 12:44:18.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:18.471" level="INFO">${RESULT} = [{'diff': 8.788799999999777e-05}, {'diff': 8.795799999999909e-05}, {'diff': 8.741599999999988e-05}, {'diff': 8.804100000000051e-05}, {'diff': 8.795799999999909e-05}, {'diff': 8.759700000000176e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:18.468" endtime="20201029 12:44:18.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:18.476" level="INFO">${ACCURACY} = {'diff': [8.788799999999777e-05, 8.795799999999909e-05, 8.741599999999988e-05, 8.804100000000051e-05, 8.795799999999909e-05, 8.759700000000176e-05, 8.761100000000133e-05, 8.797199999999866e-05, 8.7944...</msg>
<status status="PASS" starttime="20201029 12:44:18.472" endtime="20201029 12:44:18.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.480" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 12:44:18.479" endtime="20201029 12:44:18.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.483" level="INFO">VALUE: [8.788799999999777e-05, 8.795799999999909e-05, 8.741599999999988e-05, 8.804100000000051e-05, 8.795799999999909e-05, 8.759700000000176e-05, 8.761100000000133e-05, 8.797199999999866e-05, 8.7944999999999e-05, 8.770900000000179e-05, 8.726399999999662e-05, 8.801400000000084e-05, 8.797199999999866e-05, 8.792999999999995e-05, 8.794399999999952e-05, 8.7944999999999e-05, 8.7944999999999e-05, 8.776400000000059e-05, 8.743099999999893e-05, 8.776400000000059e-05, 8.726400000000009e-05, 8.751300000000087e-05, 8.794399999999952e-05, 8.727799999999966e-05, 8.73470000000015e-05, 8.722200000000138e-05, 8.809699999999879e-05, 8.805599999999955e-05, 8.779199999999973e-05, 8.74449999999985e-05, 8.788900000000072e-05, 8.763800000000099e-05, 8.76799999999997e-05, 8.790300000000029e-05, 8.815200000000106e-05, 8.819399999999977e-05, 8.777800000000016e-05, 8.726400000000009e-05, 8.79999999999978e-05, 8.769499999999875e-05, 8.783400000000191e-05, 8.784799999999801e-05, 8.769399999999927e-05, 8.820799999999934e-05, 8.81800000000002e-05, 8.795799999999909e-05, 8.776400000000059e-05, 8.795900000000204e-05, 8.758299999999872e-05, 8.815300000000054e-05]</msg>
<status status="PASS" starttime="20201029 12:44:18.482" endtime="20201029 12:44:18.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.477" endtime="20201029 12:44:18.484"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:18.488" endtime="20201029 12:44:18.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.486" endtime="20201029 12:44:18.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.485" endtime="20201029 12:44:18.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.126" endtime="20201029 12:44:18.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.126" endtime="20201029 12:44:18.509"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.517" endtime="20201029 12:44:18.537"></status>
</kw>
<msg timestamp="20201029 12:44:18.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.516" endtime="20201029 12:44:18.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.538" endtime="20201029 12:44:18.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.541" endtime="20201029 12:44:18.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.513" endtime="20201029 12:44:18.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.511" endtime="20201029 12:44:18.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.550" endtime="20201029 12:44:18.839"></status>
</kw>
<msg timestamp="20201029 12:44:18.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.548" endtime="20201029 12:44:18.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.843" endtime="20201029 12:44:18.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.851" endtime="20201029 12:44:18.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.546" endtime="20201029 12:44:18.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.544" endtime="20201029 12:44:18.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:18.857" level="INFO">${RESULT} = [{'diff': 8.834699999999904e-05}, {'diff': 8.833299999999947e-05}, {'diff': 8.840300000000079e-05}, {'diff': 8.879099999999779e-05}, {'diff': 8.895800000000009e-05}, {'diff': 8.827800000000066e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:18.854" endtime="20201029 12:44:18.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:18.862" level="INFO">${ACCURACY} = {'diff': [8.834699999999904e-05, 8.833299999999947e-05, 8.840300000000079e-05, 8.879099999999779e-05, 8.895800000000009e-05, 8.827800000000066e-05, 8.89999999999988e-05, 8.901400000000184e-05, 8.83189...</msg>
<status status="PASS" starttime="20201029 12:44:18.858" endtime="20201029 12:44:18.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.866" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 12:44:18.865" endtime="20201029 12:44:18.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.868" level="INFO">VALUE: [8.834699999999904e-05, 8.833299999999947e-05, 8.840300000000079e-05, 8.879099999999779e-05, 8.895800000000009e-05, 8.827800000000066e-05, 8.89999999999988e-05, 8.901400000000184e-05, 8.83189999999999e-05, 8.827799999999719e-05, 8.904200000000098e-05, 8.888900000000172e-05, 8.84869999999982e-05, 8.897199999999966e-05, 8.894399999999705e-05, 8.829100000000076e-05, 8.852800000000091e-05, 8.891699999999739e-05, 8.898599999999923e-05, 8.911099999999936e-05, 8.893100000000043e-05, 8.888900000000172e-05, 8.827699999999772e-05, 8.83189999999999e-05, 8.868100000000018e-05, 8.861100000000233e-05, 8.897199999999966e-05, 8.909699999999979e-05, 8.841700000000036e-05, 8.901400000000184e-05, 8.834699999999904e-05, 8.862499999999843e-05, 8.826400000000109e-05, 8.834699999999904e-05, 8.913900000000197e-05, 8.859699999999929e-05, 8.855600000000005e-05, 8.844400000000002e-05, 8.887499999999868e-05, 8.877799999999769e-05, 8.874999999999855e-05, 8.897199999999966e-05, 8.858399999999919e-05, 8.838900000000122e-05, 8.874999999999855e-05, 8.845799999999959e-05, 8.855600000000005e-05, 8.827800000000066e-05, 8.829200000000023e-05, 8.895899999999957e-05]</msg>
<status status="PASS" starttime="20201029 12:44:18.867" endtime="20201029 12:44:18.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.862" endtime="20201029 12:44:18.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:18.873" endtime="20201029 12:44:18.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.872" endtime="20201029 12:44:18.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.871" endtime="20201029 12:44:18.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.509" endtime="20201029 12:44:18.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.509" endtime="20201029 12:44:18.894"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.903" endtime="20201029 12:44:18.924"></status>
</kw>
<msg timestamp="20201029 12:44:18.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.901" endtime="20201029 12:44:18.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.925" endtime="20201029 12:44:18.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.928" endtime="20201029 12:44:18.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.898" endtime="20201029 12:44:18.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.896" endtime="20201029 12:44:18.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.937" endtime="20201029 12:44:19.223"></status>
</kw>
<msg timestamp="20201029 12:44:19.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022893056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022982472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.935" endtime="20201029 12:44:19.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022893056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022982472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.227" endtime="20201029 12:44:19.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.236" endtime="20201029 12:44:19.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.933" endtime="20201029 12:44:19.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.931" endtime="20201029 12:44:19.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:19.242" level="INFO">${RESULT} = [{'diff': 8.941600000000188e-05}, {'diff': 8.930599999999733e-05}, {'diff': 8.961099999999986e-05}, {'diff': 8.986100000000011e-05}, {'diff': 8.926399999999862e-05}, {'diff': 8.993099999999796e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:19.239" endtime="20201029 12:44:19.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:19.246" level="INFO">${ACCURACY} = {'diff': [8.941600000000188e-05, 8.930599999999733e-05, 8.961099999999986e-05, 8.986100000000011e-05, 8.926399999999862e-05, 8.993099999999796e-05, 8.9638999999999e-05, 9.004199999999851e-05, 8.949999...</msg>
<status status="PASS" starttime="20201029 12:44:19.243" endtime="20201029 12:44:19.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.251" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 12:44:19.250" endtime="20201029 12:44:19.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.253" level="INFO">VALUE: [8.941600000000188e-05, 8.930599999999733e-05, 8.961099999999986e-05, 8.986100000000011e-05, 8.926399999999862e-05, 8.993099999999796e-05, 8.9638999999999e-05, 9.004199999999851e-05, 8.94999999999993e-05, 8.961099999999986e-05, 8.973599999999998e-05, 8.974999999999955e-05, 8.972200000000041e-05, 8.994400000000152e-05, 8.944400000000102e-05, 8.934700000000004e-05, 8.93060000000008e-05, 8.984800000000001e-05, 8.973599999999998e-05, 8.936099999999961e-05, 8.945800000000059e-05, 8.96939999999978e-05, 8.993000000000195e-05, 9.01389999999995e-05, 8.974999999999955e-05, 8.955600000000105e-05, 8.927800000000166e-05, 8.94450000000005e-05, 9.018099999999821e-05, 9.002699999999947e-05, 8.940199999999884e-05, 9.020800000000134e-05, 8.934700000000004e-05, 8.997200000000066e-05, 8.944400000000102e-05, 8.933300000000047e-05, 8.940300000000179e-05, 8.968100000000118e-05, 8.993099999999796e-05, 8.980499999999836e-05, 8.96250000000029e-05, 8.954099999999854e-05, 8.959700000000029e-05, 8.934700000000004e-05, 8.945800000000059e-05, 8.969499999999728e-05, 8.974999999999955e-05, 9.015299999999907e-05, 9.002800000000241e-05, 9.018099999999821e-05]</msg>
<status status="PASS" starttime="20201029 12:44:19.252" endtime="20201029 12:44:19.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.247" endtime="20201029 12:44:19.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:19.259" endtime="20201029 12:44:19.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.257" endtime="20201029 12:44:19.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.256" endtime="20201029 12:44:19.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.895" endtime="20201029 12:44:19.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.894" endtime="20201029 12:44:19.280"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.288" endtime="20201029 12:44:19.307"></status>
</kw>
<msg timestamp="20201029 12:44:19.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.287" endtime="20201029 12:44:19.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.309" endtime="20201029 12:44:19.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.311" endtime="20201029 12:44:19.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.284" endtime="20201029 12:44:19.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.282" endtime="20201029 12:44:19.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.321" endtime="20201029 12:44:19.607"></status>
</kw>
<msg timestamp="20201029 12:44:19.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.319" endtime="20201029 12:44:19.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.611" endtime="20201029 12:44:19.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.619" endtime="20201029 12:44:19.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.316" endtime="20201029 12:44:19.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.315" endtime="20201029 12:44:19.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:19.626" level="INFO">${RESULT} = [{'diff': 9.109700000000179e-05}, {'diff': 9.052799999999944e-05}, {'diff': 9.029199999999876e-05}, {'diff': 9.044399999999855e-05}, {'diff': 9.061100000000086e-05}, {'diff': 9.084700000000154e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:19.623" endtime="20201029 12:44:19.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:19.631" level="INFO">${ACCURACY} = {'diff': [9.109700000000179e-05, 9.052799999999944e-05, 9.029199999999876e-05, 9.044399999999855e-05, 9.061100000000086e-05, 9.084700000000154e-05, 9.061100000000086e-05, 9.102799999999994e-05, 9.1069...</msg>
<status status="PASS" starttime="20201029 12:44:19.627" endtime="20201029 12:44:19.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.635" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 12:44:19.634" endtime="20201029 12:44:19.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.638" level="INFO">VALUE: [9.109700000000179e-05, 9.052799999999944e-05, 9.029199999999876e-05, 9.044399999999855e-05, 9.061100000000086e-05, 9.084700000000154e-05, 9.061100000000086e-05, 9.102799999999994e-05, 9.106900000000265e-05, 9.047200000000116e-05, 9.0639e-05, 9.030599999999833e-05, 9.076400000000012e-05, 9.102700000000047e-05, 9.027800000000266e-05, 9.044399999999855e-05, 9.073600000000098e-05, 9.087500000000068e-05, 9.111100000000136e-05, 9.076400000000012e-05, 9.104199999999951e-05, 9.065299999999957e-05, 9.09589999999981e-05, 9.079199999999926e-05, 9.090299999999982e-05, 9.108299999999875e-05, 9.045800000000159e-05, 9.066699999999914e-05, 9.045800000000159e-05, 9.083300000000197e-05, 9.077799999999969e-05, 9.120900000000182e-05, 9.11939999999993e-05, 9.098600000000123e-05, 9.059699999999782e-05, 9.094399999999905e-05, 9.068100000000218e-05, 9.101400000000037e-05, 9.092999999999948e-05, 9.104199999999951e-05, 9.0639e-05, 9.062499999999696e-05, 9.051399999999987e-05, 9.03190000000019e-05, 9.027699999999972e-05, 9.108300000000222e-05, 9.059699999999782e-05, 9.119400000000277e-05, 9.10000000000008e-05, 9.076400000000012e-05]</msg>
<status status="PASS" starttime="20201029 12:44:19.636" endtime="20201029 12:44:19.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.632" endtime="20201029 12:44:19.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:19.643" endtime="20201029 12:44:19.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.641" endtime="20201029 12:44:19.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.640" endtime="20201029 12:44:19.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.280" endtime="20201029 12:44:19.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.280" endtime="20201029 12:44:19.663"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.672" endtime="20201029 12:44:19.691"></status>
</kw>
<msg timestamp="20201029 12:44:19.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.670" endtime="20201029 12:44:19.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.693" endtime="20201029 12:44:19.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.695" endtime="20201029 12:44:19.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.668" endtime="20201029 12:44:19.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.666" endtime="20201029 12:44:19.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.704" endtime="20201029 12:44:19.991"></status>
</kw>
<msg timestamp="20201029 12:44:19.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.703" endtime="20201029 12:44:19.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.995" endtime="20201029 12:44:20.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.004" endtime="20201029 12:44:20.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.700" endtime="20201029 12:44:20.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.698" endtime="20201029 12:44:20.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:20.010" level="INFO">${RESULT} = [{'diff': 9.131899999999943e-05}, {'diff': 9.177799999999722e-05}, {'diff': 9.202800000000094e-05}, {'diff': 9.208299999999975e-05}, {'diff': 9.137499999999771e-05}, {'diff': 9.152800000000044e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:20.007" endtime="20201029 12:44:20.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:20.014" level="INFO">${ACCURACY} = {'diff': [9.131899999999943e-05, 9.177799999999722e-05, 9.202800000000094e-05, 9.208299999999975e-05, 9.137499999999771e-05, 9.152800000000044e-05, 9.129199999999976e-05, 9.127700000000072e-05, 9.1277...</msg>
<status status="PASS" starttime="20201029 12:44:20.011" endtime="20201029 12:44:20.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.019" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 12:44:20.018" endtime="20201029 12:44:20.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.021" level="INFO">VALUE: [9.131899999999943e-05, 9.177799999999722e-05, 9.202800000000094e-05, 9.208299999999975e-05, 9.137499999999771e-05, 9.152800000000044e-05, 9.129199999999976e-05, 9.127700000000072e-05, 9.127700000000072e-05, 9.211100000000236e-05, 9.170800000000284e-05, 9.211099999999889e-05, 9.19719999999992e-05, 9.131899999999943e-05, 9.168099999999971e-05, 9.149999999999783e-05, 9.144499999999903e-05, 9.209800000000226e-05, 9.187499999999821e-05, 9.195799999999962e-05, 9.173700000000146e-05, 9.130599999999933e-05, 9.126400000000062e-05, 9.177800000000069e-05, 9.215300000000107e-05, 9.180500000000036e-05, 9.133300000000247e-05, 9.1332999999999e-05, 9.176300000000165e-05, 9.19719999999992e-05, 9.209700000000279e-05, 9.175000000000155e-05, 9.198600000000223e-05, 9.162499999999796e-05, 9.166700000000014e-05, 9.218100000000021e-05, 9.18199999999994e-05, 9.129100000000029e-05, 9.179100000000079e-05, 9.218000000000073e-05, 9.161099999999839e-05, 9.14719999999987e-05, 9.145900000000207e-05, 9.190299999999735e-05, 9.18329999999995e-05, 9.211099999999889e-05, 9.129199999999976e-05, 9.206900000000018e-05, 9.168000000000023e-05, 9.172199999999894e-05]</msg>
<status status="PASS" starttime="20201029 12:44:20.020" endtime="20201029 12:44:20.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.015" endtime="20201029 12:44:20.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.026" endtime="20201029 12:44:20.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.025" endtime="20201029 12:44:20.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.024" endtime="20201029 12:44:20.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.664" endtime="20201029 12:44:20.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.664" endtime="20201029 12:44:20.047"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.056" endtime="20201029 12:44:20.076"></status>
</kw>
<msg timestamp="20201029 12:44:20.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.054" endtime="20201029 12:44:20.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.078" endtime="20201029 12:44:20.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.080" endtime="20201029 12:44:20.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.051" endtime="20201029 12:44:20.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.049" endtime="20201029 12:44:20.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.089" endtime="20201029 12:44:20.374"></status>
</kw>
<msg timestamp="20201029 12:44:20.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022867944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022960889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.088" endtime="20201029 12:44:20.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022867944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022960889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.378" endtime="20201029 12:44:20.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.387" endtime="20201029 12:44:20.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.085" endtime="20201029 12:44:20.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.084" endtime="20201029 12:44:20.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:20.393" level="INFO">${RESULT} = [{'diff': 9.294500000000053e-05}, {'diff': 9.226399999999815e-05}, {'diff': 9.220799999999987e-05}, {'diff': 9.31529999999986e-05}, {'diff': 9.280599999999736e-05}, {'diff': 9.24589999999996e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:20.390" endtime="20201029 12:44:20.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:20.397" level="INFO">${ACCURACY} = {'diff': [9.294500000000053e-05, 9.226399999999815e-05, 9.220799999999987e-05, 9.31529999999986e-05, 9.280599999999736e-05, 9.24589999999996e-05, 9.243100000000046e-05, 9.312499999999946e-05, 9.270899...</msg>
<status status="PASS" starttime="20201029 12:44:20.394" endtime="20201029 12:44:20.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.402" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 12:44:20.401" endtime="20201029 12:44:20.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.404" level="INFO">VALUE: [9.294500000000053e-05, 9.226399999999815e-05, 9.220799999999987e-05, 9.31529999999986e-05, 9.280599999999736e-05, 9.24589999999996e-05, 9.243100000000046e-05, 9.312499999999946e-05, 9.270899999999985e-05, 9.29720000000002e-05, 9.25130000000024e-05, 9.31940000000013e-05, 9.288899999999878e-05, 9.259699999999982e-05, 9.283299999999703e-05, 9.265300000000157e-05, 9.279199999999779e-05, 9.279200000000126e-05, 9.276399999999865e-05, 9.279100000000179e-05, 9.309700000000032e-05, 9.255600000000058e-05, 9.25000000000023e-05, 9.238900000000175e-05, 9.31529999999986e-05, 9.227799999999772e-05, 9.263899999999853e-05, 9.223599999999901e-05, 9.311099999999989e-05, 9.286200000000258e-05, 9.292999999999801e-05, 9.262499999999896e-05, 9.327799999999872e-05, 9.276399999999865e-05, 9.237500000000218e-05, 9.316700000000164e-05, 9.307000000000065e-05, 9.308400000000022e-05, 9.266700000000114e-05, 9.268099999999724e-05, 9.311099999999989e-05, 9.267999999999776e-05, 9.286199999999911e-05, 9.26529999999981e-05, 9.236100000000261e-05, 9.299999999999933e-05, 9.25000000000023e-05, 9.26529999999981e-05, 9.241700000000089e-05, 9.294499999999706e-05]</msg>
<status status="PASS" starttime="20201029 12:44:20.403" endtime="20201029 12:44:20.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.398" endtime="20201029 12:44:20.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.410" endtime="20201029 12:44:20.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.409" endtime="20201029 12:44:20.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.407" endtime="20201029 12:44:20.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.048" endtime="20201029 12:44:20.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.047" endtime="20201029 12:44:20.431"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.439" endtime="20201029 12:44:20.459"></status>
</kw>
<msg timestamp="20201029 12:44:20.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.438" endtime="20201029 12:44:20.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.460" endtime="20201029 12:44:20.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.463" endtime="20201029 12:44:20.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.435" endtime="20201029 12:44:20.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.433" endtime="20201029 12:44:20.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.472" endtime="20201029 12:44:20.757"></status>
</kw>
<msg timestamp="20201029 12:44:20.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.470" endtime="20201029 12:44:20.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.761" endtime="20201029 12:44:20.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.769" endtime="20201029 12:44:20.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.468" endtime="20201029 12:44:20.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.466" endtime="20201029 12:44:20.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:20.776" level="INFO">${RESULT} = [{'diff': 9.425000000000058e-05}, {'diff': 9.39590000000011e-05}, {'diff': 9.380499999999889e-05}, {'diff': 9.343099999999799e-05}, {'diff': 9.362499999999996e-05}, {'diff': 9.412500000000046e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:20.773" endtime="20201029 12:44:20.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:20.781" level="INFO">${ACCURACY} = {'diff': [9.425000000000058e-05, 9.39590000000011e-05, 9.380499999999889e-05, 9.343099999999799e-05, 9.362499999999996e-05, 9.412500000000046e-05, 9.381900000000193e-05, 9.336100000000014e-05, 9.32779...</msg>
<status status="PASS" starttime="20201029 12:44:20.777" endtime="20201029 12:44:20.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.786" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 12:44:20.785" endtime="20201029 12:44:20.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.789" level="INFO">VALUE: [9.425000000000058e-05, 9.39590000000011e-05, 9.380499999999889e-05, 9.343099999999799e-05, 9.362499999999996e-05, 9.412500000000046e-05, 9.381900000000193e-05, 9.336100000000014e-05, 9.327799999999872e-05, 9.39720000000012e-05, 9.369500000000128e-05, 9.351400000000287e-05, 9.376399999999965e-05, 9.412500000000046e-05, 9.361100000000039e-05, 9.381899999999846e-05, 9.386100000000064e-05, 9.373600000000051e-05, 9.386100000000064e-05, 9.376399999999965e-05, 9.327799999999872e-05, 9.404199999999904e-05, 9.355600000000158e-05, 9.340299999999885e-05, 9.363899999999953e-05, 9.358299999999778e-05, 9.395800000000162e-05, 9.416699999999917e-05, 9.327799999999872e-05, 9.343100000000146e-05, 9.369399999999833e-05, 9.325000000000305e-05, 9.402799999999947e-05, 9.3333000000001e-05, 9.395799999999815e-05, 9.41659999999997e-05, 9.380499999999889e-05, 9.343000000000198e-05, 9.395799999999815e-05, 9.349999999999983e-05, 9.359700000000082e-05, 9.329200000000176e-05, 9.359800000000029e-05, 9.341699999999842e-05, 9.345800000000112e-05, 9.397199999999772e-05, 9.33469999999971e-05, 9.394400000000205e-05, 9.33200000000009e-05, 9.426400000000015e-05]</msg>
<status status="PASS" starttime="20201029 12:44:20.788" endtime="20201029 12:44:20.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.782" endtime="20201029 12:44:20.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.795" endtime="20201029 12:44:20.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.793" endtime="20201029 12:44:20.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.792" endtime="20201029 12:44:20.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.432" endtime="20201029 12:44:20.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.431" endtime="20201029 12:44:20.815"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.824" endtime="20201029 12:44:20.844"></status>
</kw>
<msg timestamp="20201029 12:44:20.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.822" endtime="20201029 12:44:20.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.846" endtime="20201029 12:44:20.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.848" endtime="20201029 12:44:20.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.820" endtime="20201029 12:44:20.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.818" endtime="20201029 12:44:20.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.857" endtime="20201029 12:44:21.146"></status>
</kw>
<msg timestamp="20201029 12:44:21.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022207417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022302472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.856" endtime="20201029 12:44:21.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022207417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022302472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.150" endtime="20201029 12:44:21.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.159" endtime="20201029 12:44:21.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.853" endtime="20201029 12:44:21.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.851" endtime="20201029 12:44:21.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:21.165" level="INFO">${RESULT} = [{'diff': 9.505500000000014e-05}, {'diff': 9.49720000000022e-05}, {'diff': 9.490300000000035e-05}, {'diff': 9.441699999999942e-05}, {'diff': 9.438900000000028e-05}, {'diff': 9.476400000000065e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:21.162" endtime="20201029 12:44:21.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:21.169" level="INFO">${ACCURACY} = {'diff': [9.505500000000014e-05, 9.49720000000022e-05, 9.490300000000035e-05, 9.441699999999942e-05, 9.438900000000028e-05, 9.476400000000065e-05, 9.461200000000086e-05, 9.497199999999872e-05, 9.44159...</msg>
<status status="PASS" starttime="20201029 12:44:21.166" endtime="20201029 12:44:21.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.174" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 12:44:21.173" endtime="20201029 12:44:21.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.176" level="INFO">VALUE: [9.505500000000014e-05, 9.49720000000022e-05, 9.490300000000035e-05, 9.441699999999942e-05, 9.438900000000028e-05, 9.476400000000065e-05, 9.461200000000086e-05, 9.497199999999872e-05, 9.441599999999994e-05, 9.486100000000164e-05, 9.488900000000078e-05, 9.437500000000071e-05, 9.476400000000065e-05, 9.44720000000017e-05, 9.459699999999835e-05, 9.481900000000293e-05, 9.481899999999946e-05, 9.480499999999989e-05, 9.459700000000182e-05, 9.516700000000017e-05, 9.433299999999853e-05, 9.494399999999958e-05, 9.461100000000139e-05, 9.425000000000058e-05, 9.452799999999997e-05, 9.45140000000004e-05, 9.472299999999795e-05, 9.443099999999899e-05, 9.498600000000176e-05, 9.441599999999994e-05, 9.448600000000126e-05, 9.431899999999896e-05, 9.49720000000022e-05, 9.512499999999799e-05, 9.476400000000065e-05, 9.49720000000022e-05, 9.481899999999946e-05, 9.497199999999872e-05, 9.495799999999915e-05, 9.512499999999799e-05, 9.423600000000101e-05, 9.45140000000004e-05, 9.458300000000225e-05, 9.461099999999792e-05, 9.480600000000283e-05, 9.443099999999899e-05, 9.487499999999774e-05, 9.438900000000028e-05, 9.495799999999915e-05, 9.504200000000004e-05]</msg>
<status status="PASS" starttime="20201029 12:44:21.175" endtime="20201029 12:44:21.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.170" endtime="20201029 12:44:21.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:21.186" endtime="20201029 12:44:21.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.184" endtime="20201029 12:44:21.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.183" endtime="20201029 12:44:21.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.816" endtime="20201029 12:44:21.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.816" endtime="20201029 12:44:21.206"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.215" endtime="20201029 12:44:21.235"></status>
</kw>
<msg timestamp="20201029 12:44:21.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.213" endtime="20201029 12:44:21.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.237" endtime="20201029 12:44:21.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.239" endtime="20201029 12:44:21.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.211" endtime="20201029 12:44:21.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.209" endtime="20201029 12:44:21.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.248" endtime="20201029 12:44:21.535"></status>
</kw>
<msg timestamp="20201029 12:44:21.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022968375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023064097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.247" endtime="20201029 12:44:21.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022968375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023064097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.539" endtime="20201029 12:44:21.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.547" endtime="20201029 12:44:21.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.244" endtime="20201029 12:44:21.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.242" endtime="20201029 12:44:21.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:21.554" level="INFO">${RESULT} = [{'diff': 9.572199999999947e-05}, {'diff': 9.536099999999867e-05}, {'diff': 9.612499999999899e-05}, {'diff': 9.591700000000092e-05}, {'diff': 9.575000000000208e-05}, {'diff': 9.579200000000079e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:21.550" endtime="20201029 12:44:21.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:21.558" level="INFO">${ACCURACY} = {'diff': [9.572199999999947e-05, 9.536099999999867e-05, 9.612499999999899e-05, 9.591700000000092e-05, 9.575000000000208e-05, 9.579200000000079e-05, 9.579199999999732e-05, 9.527800000000072e-05, 9.5526...</msg>
<status status="PASS" starttime="20201029 12:44:21.555" endtime="20201029 12:44:21.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.563" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 12:44:21.561" endtime="20201029 12:44:21.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.565" level="INFO">VALUE: [9.572199999999947e-05, 9.536099999999867e-05, 9.612499999999899e-05, 9.591700000000092e-05, 9.575000000000208e-05, 9.579200000000079e-05, 9.579199999999732e-05, 9.527800000000072e-05, 9.552699999999803e-05, 9.544400000000008e-05, 9.601399999999843e-05, 9.561100000000239e-05, 9.561099999999892e-05, 9.554100000000107e-05, 9.576400000000165e-05, 9.562499999999849e-05, 9.529200000000029e-05, 9.533400000000247e-05, 9.547199999999922e-05, 9.599999999999886e-05, 9.586099999999917e-05, 9.536099999999867e-05, 9.527800000000072e-05, 9.586099999999917e-05, 9.61530000000016e-05, 9.619500000000031e-05, 9.611099999999942e-05, 9.545799999999965e-05, 9.609699999999985e-05, 9.577800000000122e-05, 9.526400000000115e-05, 9.619400000000083e-05, 9.595800000000015e-05, 9.556999999999968e-05, 9.619500000000031e-05, 9.613899999999856e-05, 9.591700000000092e-05, 9.613899999999856e-05, 9.527800000000072e-05, 9.601399999999843e-05, 9.587499999999874e-05, 9.538900000000128e-05, 9.552800000000097e-05, 9.541700000000042e-05, 9.540200000000137e-05, 9.595899999999963e-05, 9.594400000000058e-05, 9.561099999999892e-05, 9.609699999999985e-05, 9.594400000000058e-05]</msg>
<status status="PASS" starttime="20201029 12:44:21.564" endtime="20201029 12:44:21.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.559" endtime="20201029 12:44:21.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:21.571" endtime="20201029 12:44:21.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.569" endtime="20201029 12:44:21.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.568" endtime="20201029 12:44:21.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.207" endtime="20201029 12:44:21.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.207" endtime="20201029 12:44:21.591"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.600" endtime="20201029 12:44:21.620"></status>
</kw>
<msg timestamp="20201029 12:44:21.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.599" endtime="20201029 12:44:21.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.621" endtime="20201029 12:44:21.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.624" endtime="20201029 12:44:21.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.596" endtime="20201029 12:44:21.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.594" endtime="20201029 12:44:21.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.633" endtime="20201029 12:44:21.918"></status>
</kw>
<msg timestamp="20201029 12:44:21.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219335, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:21.631" endtime="20201029 12:44:21.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219335, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:21.922" endtime="20201029 12:44:21.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.930" endtime="20201029 12:44:21.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.629" endtime="20201029 12:44:21.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.627" endtime="20201029 12:44:21.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:21.937" level="INFO">${RESULT} = [{'diff': 9.718100000000174e-05}, {'diff': 9.640299999999838e-05}, {'diff': 9.669499999999734e-05}, {'diff': 9.676399999999918e-05}, {'diff': 9.655500000000164e-05}, {'diff': 9.645800000000065e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:21.933" endtime="20201029 12:44:21.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:21.942" level="INFO">${ACCURACY} = {'diff': [9.718100000000174e-05, 9.640299999999838e-05, 9.669499999999734e-05, 9.676399999999918e-05, 9.655500000000164e-05, 9.645800000000065e-05, 9.68470000000006e-05, 9.659700000000035e-05, 9.68890...</msg>
<status status="PASS" starttime="20201029 12:44:21.938" endtime="20201029 12:44:21.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.946" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 12:44:21.945" endtime="20201029 12:44:21.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.949" level="INFO">VALUE: [9.718100000000174e-05, 9.640299999999838e-05, 9.669499999999734e-05, 9.676399999999918e-05, 9.655500000000164e-05, 9.645800000000065e-05, 9.68470000000006e-05, 9.659700000000035e-05, 9.688900000000278e-05, 9.656900000000121e-05, 9.633300000000053e-05, 9.644400000000108e-05, 9.65140000000024e-05, 9.694500000000106e-05, 9.695799999999768e-05, 9.71530000000026e-05, 9.705499999999867e-05, 9.67080000000009e-05, 9.62920000000013e-05, 9.723600000000054e-05, 9.702800000000247e-05, 9.69860000000003e-05, 9.694500000000106e-05, 9.662499999999949e-05, 9.72219999999975e-05, 9.638899999999881e-05, 9.66530000000021e-05, 9.704100000000257e-05, 9.716700000000217e-05, 9.649999999999936e-05, 9.63470000000001e-05, 9.647200000000022e-05, 9.661099999999992e-05, 9.636199999999914e-05, 9.694500000000106e-05, 9.662499999999949e-05, 9.690299999999888e-05, 9.701399999999943e-05, 9.693000000000201e-05, 9.627800000000172e-05, 9.70140000000029e-05, 9.644500000000056e-05, 9.651399999999893e-05, 9.669399999999786e-05, 9.637499999999924e-05, 9.692999999999855e-05, 9.645800000000065e-05, 9.669499999999734e-05, 9.645800000000065e-05, 9.701399999999943e-05]</msg>
<status status="PASS" starttime="20201029 12:44:21.947" endtime="20201029 12:44:21.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.943" endtime="20201029 12:44:21.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:21.954" endtime="20201029 12:44:21.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.952" endtime="20201029 12:44:21.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.951" endtime="20201029 12:44:21.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.592" endtime="20201029 12:44:21.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.592" endtime="20201029 12:44:21.974"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.983" endtime="20201029 12:44:22.003"></status>
</kw>
<msg timestamp="20201029 12:44:22.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.981" endtime="20201029 12:44:22.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.005" endtime="20201029 12:44:22.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.007" endtime="20201029 12:44:22.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.979" endtime="20201029 12:44:22.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.977" endtime="20201029 12:44:22.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.016" endtime="20201029 12:44:22.306"></status>
</kw>
<msg timestamp="20201029 12:44:22.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.015" endtime="20201029 12:44:22.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.310" endtime="20201029 12:44:22.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.318" endtime="20201029 12:44:22.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.012" endtime="20201029 12:44:22.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.011" endtime="20201029 12:44:22.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:22.325" level="INFO">${RESULT} = [{'diff': 9.820899999999841e-05}, {'diff': 9.82080000000024e-05}, {'diff': 9.787500000000074e-05}, {'diff': 9.811100000000142e-05}, {'diff': 9.747199999999775e-05}, {'diff': 9.733300000000153e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:22.321" endtime="20201029 12:44:22.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:22.329" level="INFO">${ACCURACY} = {'diff': [9.820899999999841e-05, 9.82080000000024e-05, 9.787500000000074e-05, 9.811100000000142e-05, 9.747199999999775e-05, 9.733300000000153e-05, 9.73470000000011e-05, 9.768100000000224e-05, 9.729199...</msg>
<status status="PASS" starttime="20201029 12:44:22.326" endtime="20201029 12:44:22.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.333" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 12:44:22.332" endtime="20201029 12:44:22.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.336" level="INFO">VALUE: [9.820899999999841e-05, 9.82080000000024e-05, 9.787500000000074e-05, 9.811100000000142e-05, 9.747199999999775e-05, 9.733300000000153e-05, 9.73470000000011e-05, 9.768100000000224e-05, 9.729199999999882e-05, 9.761100000000092e-05, 9.731899999999849e-05, 9.78470000000016e-05, 9.78059999999989e-05, 9.76799999999993e-05, 9.812499999999752e-05, 9.777799999999975e-05, 9.805599999999914e-05, 9.784800000000107e-05, 9.793099999999902e-05, 9.747200000000122e-05, 9.730600000000186e-05, 9.74860000000008e-05, 9.763900000000006e-05, 9.781900000000246e-05, 9.745800000000165e-05, 9.813900000000056e-05, 9.794499999999859e-05, 9.729199999999882e-05, 9.788899999999684e-05, 9.800000000000086e-05, 9.74860000000008e-05, 9.819399999999937e-05, 9.819399999999937e-05, 9.818099999999927e-05, 9.745899999999766e-05, 9.754199999999907e-05, 9.766700000000267e-05, 9.795799999999869e-05, 9.779199999999932e-05, 9.75409999999996e-05, 9.812500000000099e-05, 9.761100000000092e-05, 9.758400000000125e-05, 9.794399999999912e-05, 9.790299999999988e-05, 9.761100000000092e-05, 9.738800000000034e-05, 9.777799999999975e-05, 9.731899999999849e-05, 9.763900000000006e-05]</msg>
<status status="PASS" starttime="20201029 12:44:22.334" endtime="20201029 12:44:22.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.329" endtime="20201029 12:44:22.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.341" endtime="20201029 12:44:22.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.339" endtime="20201029 12:44:22.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.338" endtime="20201029 12:44:22.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.975" endtime="20201029 12:44:22.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.975" endtime="20201029 12:44:22.361"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.370" endtime="20201029 12:44:22.390"></status>
</kw>
<msg timestamp="20201029 12:44:22.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.368" endtime="20201029 12:44:22.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.392" endtime="20201029 12:44:22.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.394" endtime="20201029 12:44:22.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.366" endtime="20201029 12:44:22.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.364" endtime="20201029 12:44:22.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.403" endtime="20201029 12:44:22.689"></status>
</kw>
<msg timestamp="20201029 12:44:22.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022685208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.402" endtime="20201029 12:44:22.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022685208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.693" endtime="20201029 12:44:22.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.701" endtime="20201029 12:44:22.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.399" endtime="20201029 12:44:22.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.397" endtime="20201029 12:44:22.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:22.708" level="INFO">${RESULT} = [{'diff': 9.890300000000088e-05}, {'diff': 9.901299999999849e-05}, {'diff': 9.881899999999999e-05}, {'diff': 9.877800000000075e-05}, {'diff': 9.920899999999941e-05}, {'diff': 9.877799999999728e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:22.705" endtime="20201029 12:44:22.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:22.712" level="INFO">${ACCURACY} = {'diff': [9.890300000000088e-05, 9.901299999999849e-05, 9.881899999999999e-05, 9.877800000000075e-05, 9.920899999999941e-05, 9.877799999999728e-05, 9.851300000000146e-05, 9.876400000000118e-05, 9.8930...</msg>
<status status="PASS" starttime="20201029 12:44:22.709" endtime="20201029 12:44:22.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.716" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 12:44:22.715" endtime="20201029 12:44:22.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.719" level="INFO">VALUE: [9.890300000000088e-05, 9.901299999999849e-05, 9.881899999999999e-05, 9.877800000000075e-05, 9.920899999999941e-05, 9.877799999999728e-05, 9.851300000000146e-05, 9.876400000000118e-05, 9.893000000000055e-05, 9.836100000000167e-05, 9.869399999999987e-05, 9.894400000000012e-05, 9.890300000000088e-05, 9.837500000000124e-05, 9.911099999999895e-05, 9.92219999999995e-05, 9.850000000000136e-05, 9.847200000000222e-05, 9.862499999999802e-05, 9.879200000000032e-05, 9.86670000000002e-05, 9.912500000000199e-05, 9.879200000000032e-05, 9.88470000000026e-05, 9.879200000000032e-05, 9.919400000000037e-05, 9.824999999999764e-05, 9.831900000000296e-05, 9.859699999999888e-05, 9.909699999999938e-05, 9.836100000000167e-05, 9.85280000000005e-05, 9.894499999999959e-05, 9.906900000000024e-05, 9.840199999999744e-05, 9.904200000000057e-05, 9.890300000000088e-05, 9.909699999999938e-05, 9.851400000000093e-05, 9.879200000000032e-05, 9.83470000000021e-05, 9.883299999999956e-05, 9.909699999999938e-05, 9.881899999999999e-05, 9.915199999999819e-05, 9.824999999999764e-05, 9.912499999999852e-05, 9.851399999999746e-05, 9.843099999999952e-05, 9.862500000000149e-05]</msg>
<status status="PASS" starttime="20201029 12:44:22.717" endtime="20201029 12:44:22.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.713" endtime="20201029 12:44:22.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.725" endtime="20201029 12:44:22.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.723" endtime="20201029 12:44:22.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.722" endtime="20201029 12:44:22.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.362" endtime="20201029 12:44:22.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.361" endtime="20201029 12:44:22.745"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.754" endtime="20201029 12:44:22.774"></status>
</kw>
<msg timestamp="20201029 12:44:22.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.752" endtime="20201029 12:44:22.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.776" endtime="20201029 12:44:22.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.778" endtime="20201029 12:44:22.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.750" endtime="20201029 12:44:22.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.748" endtime="20201029 12:44:22.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.787" endtime="20201029 12:44:23.074"></status>
</kw>
<msg timestamp="20201029 12:44:23.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022020139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.786" endtime="20201029 12:44:23.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022020139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.078" endtime="20201029 12:44:23.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.086" endtime="20201029 12:44:23.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.783" endtime="20201029 12:44:23.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.781" endtime="20201029 12:44:23.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:23.093" level="INFO">${RESULT} = [{'diff': 9.988899999999884e-05}, {'diff': 0.00010017999999999833}, {'diff': 9.936199999999867e-05}, {'diff': 9.966699999999773e-05}, {'diff': 0.0001001939999999979}, {'diff': 9.977800000000175e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:23.089" endtime="20201029 12:44:23.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:23.097" level="INFO">${ACCURACY} = {'diff': [9.988899999999884e-05, 0.00010017999999999833, 9.936199999999867e-05, 9.966699999999773e-05, 0.0001001939999999979, 9.977800000000175e-05, 9.926399999999821e-05, 9.933300000000006e-05, 9.973...</msg>
<status status="PASS" starttime="20201029 12:44:23.094" endtime="20201029 12:44:23.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.102" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 12:44:23.101" endtime="20201029 12:44:23.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.105" level="INFO">VALUE: [9.988899999999884e-05, 0.00010017999999999833, 9.936199999999867e-05, 9.966699999999773e-05, 0.0001001939999999979, 9.977800000000175e-05, 9.926399999999821e-05, 9.933300000000006e-05, 9.973600000000304e-05, 0.00010009700000000038, 9.968100000000077e-05, 0.00010005599999999767, 9.943100000000052e-05, 9.994500000000059e-05, 9.99999999999994e-05, 9.993000000000155e-05, 0.00010000000000000286, 9.963899999999859e-05, 9.924999999999864e-05, 9.98060000000009e-05, 9.965300000000163e-05, 9.937499999999877e-05, 9.966599999999826e-05, 9.944399999999715e-05, 9.937500000000224e-05, 9.984700000000013e-05, 0.0001000419999999981, 9.926399999999821e-05, 9.973599999999957e-05, 0.00010011099999999995, 9.995900000000016e-05, 9.943100000000052e-05, 9.969400000000087e-05, 9.95280000000015e-05, 0.00010004200000000157, 9.984700000000013e-05, 9.995900000000016e-05, 9.96670000000012e-05, 9.983400000000003e-05, 0.00010020799999999747, 0.0001002220000000005, 0.00010006900000000124, 9.967999999999783e-05, 0.0001002220000000005, 9.924999999999864e-05, 9.945800000000019e-05, 9.977799999999828e-05, 9.977800000000175e-05, 9.994399999999765e-05, 0.00010011099999999995]</msg>
<status status="PASS" starttime="20201029 12:44:23.103" endtime="20201029 12:44:23.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.098" endtime="20201029 12:44:23.106"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:23.109" endtime="20201029 12:44:23.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.108" endtime="20201029 12:44:23.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.107" endtime="20201029 12:44:23.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.746" endtime="20201029 12:44:23.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.746" endtime="20201029 12:44:23.130"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.139" endtime="20201029 12:44:23.159"></status>
</kw>
<msg timestamp="20201029 12:44:23.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.137" endtime="20201029 12:44:23.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.161" endtime="20201029 12:44:23.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.163" endtime="20201029 12:44:23.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.135" endtime="20201029 12:44:23.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.133" endtime="20201029 12:44:23.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.172" endtime="20201029 12:44:23.458"></status>
</kw>
<msg timestamp="20201029 12:44:23.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022007139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.171" endtime="20201029 12:44:23.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022007139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.462" endtime="20201029 12:44:23.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.470" endtime="20201029 12:44:23.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.168" endtime="20201029 12:44:23.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.166" endtime="20201029 12:44:23.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:23.477" level="INFO">${RESULT} = [{'diff': 0.00010088899999999984}, {'diff': 0.00010031900000000149}, {'diff': 0.00010063800000000012}, {'diff': 0.00010061100000000045}, {'diff': 0.00010081899999999852}, {'diff': 0.000101111000000000...</msg>
<status status="PASS" starttime="20201029 12:44:23.474" endtime="20201029 12:44:23.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:23.481" level="INFO">${ACCURACY} = {'diff': [0.00010088899999999984, 0.00010031900000000149, 0.00010063800000000012, 0.00010061100000000045, 0.00010081899999999852, 0.00010111100000000095, 0.0001011670000000027, 0.00010111100000000095,...</msg>
<status status="PASS" starttime="20201029 12:44:23.478" endtime="20201029 12:44:23.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.485" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 12:44:23.484" endtime="20201029 12:44:23.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.488" level="INFO">VALUE: [0.00010088899999999984, 0.00010031900000000149, 0.00010063800000000012, 0.00010061100000000045, 0.00010081899999999852, 0.00010111100000000095, 0.0001011670000000027, 0.00010111100000000095, 0.00010083299999999809, 0.00010109700000000138, 0.00010097300000000073, 0.00010052699999999956, 0.00010112500000000052, 0.00010098600000000083, 0.00010034700000000063, 0.00010079199999999885, 0.0001003610000000002, 0.00010034700000000063, 0.00010079200000000232, 0.00010109800000000085, 0.00010067999999999883, 0.00010069400000000187, 0.00010111100000000095, 0.00010032000000000096, 0.00010098600000000083, 0.00010116699999999923, 0.00010112500000000052, 0.0001011809999999988, 0.00010027799999999878, 0.00010095900000000116, 0.0001004999999999999, 0.00010113900000000009, 0.00010048599999999686, 0.00010026399999999921, 0.00010108400000000128, 0.00010082000000000146, 0.00010026399999999921, 0.00010032000000000096, 0.00010051399999999946, 0.00010027699999999931, 0.00010070800000000144, 0.00010101399999999996, 0.00010027799999999878, 0.00010063899999999959, 0.00010093099999999855, 0.00010056999999999774, 0.00010029199999999835, 0.00010113900000000009, 0.0001003610000000002, 0.00010058300000000131]</msg>
<status status="PASS" starttime="20201029 12:44:23.487" endtime="20201029 12:44:23.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.482" endtime="20201029 12:44:23.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:23.493" endtime="20201029 12:44:23.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.491" endtime="20201029 12:44:23.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.490" endtime="20201029 12:44:23.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.131" endtime="20201029 12:44:23.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.131" endtime="20201029 12:44:23.514"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.522" endtime="20201029 12:44:23.543"></status>
</kw>
<msg timestamp="20201029 12:44:23.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.521" endtime="20201029 12:44:23.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.545" endtime="20201029 12:44:23.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.547" endtime="20201029 12:44:23.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.518" endtime="20201029 12:44:23.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.516" endtime="20201029 12:44:23.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.556" endtime="20201029 12:44:23.843"></status>
</kw>
<msg timestamp="20201029 12:44:23.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023198528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023300764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.555" endtime="20201029 12:44:23.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023198528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023300764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.847" endtime="20201029 12:44:23.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.855" endtime="20201029 12:44:23.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.552" endtime="20201029 12:44:23.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.550" endtime="20201029 12:44:23.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:23.861" level="INFO">${RESULT} = [{'diff': 0.00010223600000000208}, {'diff': 0.00010211099999999848}, {'diff': 0.00010195899999999869}, {'diff': 0.00010143099999999905}, {'diff': 0.0001015419999999996}, {'diff': 0.0001012920000000028...</msg>
<status status="PASS" starttime="20201029 12:44:23.858" endtime="20201029 12:44:23.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:23.865" level="INFO">${ACCURACY} = {'diff': [0.00010223600000000208, 0.00010211099999999848, 0.00010195899999999869, 0.00010143099999999905, 0.0001015419999999996, 0.00010129200000000282, 0.0001020550000000002, 0.00010213799999999815, ...</msg>
<status status="PASS" starttime="20201029 12:44:23.862" endtime="20201029 12:44:23.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.870" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 12:44:23.869" endtime="20201029 12:44:23.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.872" level="INFO">VALUE: [0.00010223600000000208, 0.00010211099999999848, 0.00010195899999999869, 0.00010143099999999905, 0.0001015419999999996, 0.00010129200000000282, 0.0001020550000000002, 0.00010213799999999815, 0.0001015419999999996, 0.00010180599999999942, 0.00010198600000000183, 0.00010216700000000023, 0.00010127799999999978, 0.00010202800000000053, 0.00010127799999999978, 0.00010216700000000023, 0.00010215300000000066, 0.0001020420000000001, 0.00010158399999999831, 0.00010211100000000195, 0.00010180599999999942, 0.00010213900000000109, 0.00010188899999999737, 0.00010132000000000196, 0.00010123600000000108, 0.00010167999999999983, 0.00010138900000000034, 0.00010159699999999841, 0.00010144399999999915, 0.00010212499999999805, 0.00010165300000000016, 0.00010194499999999912, 0.00010143100000000252, 0.00010186200000000117, 0.0001018610000000017, 0.00010169400000000287, 0.00010151400000000046, 0.00010205599999999967, 0.00010176400000000071, 0.00010195900000000216, 0.00010157000000000221, 0.00010161100000000145, 0.00010198599999999836, 0.00010194399999999965, 0.00010145799999999872, 0.0001016939999999994, 0.00010152800000000003, 0.00010140299999999991, 0.0001017359999999981, 0.00010219499999999937]</msg>
<status status="PASS" starttime="20201029 12:44:23.871" endtime="20201029 12:44:23.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.866" endtime="20201029 12:44:23.874"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:23.878" endtime="20201029 12:44:23.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.876" endtime="20201029 12:44:23.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.875" endtime="20201029 12:44:23.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.514" endtime="20201029 12:44:23.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.514" endtime="20201029 12:44:23.899"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.907" endtime="20201029 12:44:23.927"></status>
</kw>
<msg timestamp="20201029 12:44:23.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.906" endtime="20201029 12:44:23.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.928" endtime="20201029 12:44:23.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.931" endtime="20201029 12:44:23.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.903" endtime="20201029 12:44:23.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.901" endtime="20201029 12:44:23.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.940" endtime="20201029 12:44:24.226"></status>
</kw>
<msg timestamp="20201029 12:44:24.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.938" endtime="20201029 12:44:24.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.230" endtime="20201029 12:44:24.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.238" endtime="20201029 12:44:24.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.936" endtime="20201029 12:44:24.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.934" endtime="20201029 12:44:24.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:24.244" level="INFO">${RESULT} = [{'diff': 0.00010241700000000048}, {'diff': 0.00010279200000000085}, {'diff': 0.00010244400000000015}, {'diff': 0.00010322200000000004}, {'diff': 0.00010229200000000035}, {'diff': 0.000102694999999999...</msg>
<status status="PASS" starttime="20201029 12:44:24.241" endtime="20201029 12:44:24.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:24.249" level="INFO">${ACCURACY} = {'diff': [0.00010241700000000048, 0.00010279200000000085, 0.00010244400000000015, 0.00010322200000000004, 0.00010229200000000035, 0.00010269499999999987, 0.00010220899999999894, 0.00010245900000000266...</msg>
<status status="PASS" starttime="20201029 12:44:24.245" endtime="20201029 12:44:24.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.254" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 12:44:24.253" endtime="20201029 12:44:24.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.256" level="INFO">VALUE: [0.00010241700000000048, 0.00010279200000000085, 0.00010244400000000015, 0.00010322200000000004, 0.00010229200000000035, 0.00010269499999999987, 0.00010220899999999894, 0.00010245900000000266, 0.00010276399999999825, 0.00010297199999999979, 0.00010302800000000154, 0.00010227800000000078, 0.0001030000000000024, 0.00010284699999999966, 0.00010312500000000252, 0.00010291700000000098, 0.00010226399999999775, 0.00010237500000000177, 0.00010277799999999782, 0.00010311099999999948, 0.00010243000000000058, 0.00010299999999999893, 0.00010233299999999959, 0.00010244400000000015, 0.00010270899999999944, 0.0001023199999999995, 0.00010243100000000005, 0.00010277800000000128, 0.00010322200000000004, 0.00010255499999999723, 0.00010259699999999941, 0.00010255600000000017, 0.00010291700000000098, 0.00010274999999999868, 0.00010270899999999944, 0.00010295800000000022, 0.00010276299999999877, 0.00010280500000000095, 0.00010256900000000027, 0.00010297199999999979, 0.00010293100000000055, 0.00010229200000000035, 0.0001031810000000008, 0.00010302799999999807, 0.0001027359999999991, 0.00010301400000000197, 0.0001030139999999985, 0.00010269399999999693, 0.00010293000000000108, 0.00010313899999999862]</msg>
<status status="PASS" starttime="20201029 12:44:24.255" endtime="20201029 12:44:24.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.250" endtime="20201029 12:44:24.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:24.261" endtime="20201029 12:44:24.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.260" endtime="20201029 12:44:24.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.259" endtime="20201029 12:44:24.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.899" endtime="20201029 12:44:24.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.899" endtime="20201029 12:44:24.282"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.291" endtime="20201029 12:44:24.312"></status>
</kw>
<msg timestamp="20201029 12:44:24.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.289" endtime="20201029 12:44:24.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.314" endtime="20201029 12:44:24.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.316" endtime="20201029 12:44:24.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.286" endtime="20201029 12:44:24.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.284" endtime="20201029 12:44:24.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.325" endtime="20201029 12:44:24.612"></status>
</kw>
<msg timestamp="20201029 12:44:24.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022764444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022867889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.324" endtime="20201029 12:44:24.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022764444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022867889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.616" endtime="20201029 12:44:24.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.624" endtime="20201029 12:44:24.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.321" endtime="20201029 12:44:24.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.319" endtime="20201029 12:44:24.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:24.630" level="INFO">${RESULT} = [{'diff': 0.00010344499999999715}, {'diff': 0.00010330600000000092}, {'diff': 0.00010331900000000102}, {'diff': 0.00010372200000000054}, {'diff': 0.00010361099999999998}, {'diff': 0.000103874999999999...</msg>
<status status="PASS" starttime="20201029 12:44:24.627" endtime="20201029 12:44:24.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:24.634" level="INFO">${ACCURACY} = {'diff': [0.00010344499999999715, 0.00010330600000000092, 0.00010331900000000102, 0.00010372200000000054, 0.00010361099999999998, 0.0001038749999999998, 0.00010345800000000072, 0.00010402799999999907,...</msg>
<status status="PASS" starttime="20201029 12:44:24.631" endtime="20201029 12:44:24.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.639" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 12:44:24.638" endtime="20201029 12:44:24.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.641" level="INFO">VALUE: [0.00010344499999999715, 0.00010330600000000092, 0.00010331900000000102, 0.00010372200000000054, 0.00010361099999999998, 0.0001038749999999998, 0.00010345800000000072, 0.00010402799999999907, 0.00010329099999999841, 0.00010361099999999998, 0.00010404199999999864, 0.0001040139999999995, 0.00010329200000000135, 0.00010391700000000198, 0.00010361099999999998, 0.00010336099999999973, 0.00010344500000000062, 0.00010334700000000016, 0.00010344399999999768, 0.00010333300000000059, 0.00010394400000000165, 0.00010344400000000115, 0.00010336099999999973, 0.00010393100000000155, 0.00010394500000000112, 0.00010341700000000148, 0.00010383300000000109, 0.00010358300000000084, 0.00010334700000000016, 0.00010377799999999882, 0.00010415299999999919, 0.00010393099999999808, 0.00010329100000000188, 0.00010411100000000048, 0.00010363799999999965, 0.00010327800000000179, 0.00010419399999999843, 0.00010419500000000137, 0.0001040139999999995, 0.00010345900000000019, 0.00010330600000000092, 0.00010419500000000137, 0.0001033749999999993, 0.00010344499999999715, 0.00010404099999999916, 0.0001041810000000018, 0.00010365299999999869, 0.00010391699999999851, 0.00010343100000000105, 0.0001037360000000001]</msg>
<status status="PASS" starttime="20201029 12:44:24.640" endtime="20201029 12:44:24.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.635" endtime="20201029 12:44:24.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:24.646" endtime="20201029 12:44:24.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.645" endtime="20201029 12:44:24.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.644" endtime="20201029 12:44:24.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.283" endtime="20201029 12:44:24.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.282" endtime="20201029 12:44:24.667"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.676" endtime="20201029 12:44:24.697"></status>
</kw>
<msg timestamp="20201029 12:44:24.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.674" endtime="20201029 12:44:24.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.699" endtime="20201029 12:44:24.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.701" endtime="20201029 12:44:24.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.671" endtime="20201029 12:44:24.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.669" endtime="20201029 12:44:24.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.711" endtime="20201029 12:44:24.997"></status>
</kw>
<msg timestamp="20201029 12:44:25.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023079097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023183486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.709" endtime="20201029 12:44:25.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023079097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023183486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.001" endtime="20201029 12:44:25.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.009" endtime="20201029 12:44:25.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.707" endtime="20201029 12:44:25.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.705" endtime="20201029 12:44:25.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:25.018" level="INFO">${RESULT} = [{'diff': 0.00010438899999999987}, {'diff': 0.00010430599999999846}, {'diff': 0.0001047360000000011}, {'diff': 0.00010480600000000242}, {'diff': 0.00010444399999999868}, {'diff': 0.0001049719999999983...</msg>
<status status="PASS" starttime="20201029 12:44:25.014" endtime="20201029 12:44:25.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:25.023" level="INFO">${ACCURACY} = {'diff': [0.00010438899999999987, 0.00010430599999999846, 0.0001047360000000011, 0.00010480600000000242, 0.00010444399999999868, 0.00010497199999999832, 0.00010519399999999943, 0.00010434699999999769,...</msg>
<status status="PASS" starttime="20201029 12:44:25.020" endtime="20201029 12:44:25.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.030" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 12:44:25.028" endtime="20201029 12:44:25.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.034" level="INFO">VALUE: [0.00010438899999999987, 0.00010430599999999846, 0.0001047360000000011, 0.00010480600000000242, 0.00010444399999999868, 0.00010497199999999832, 0.00010519399999999943, 0.00010434699999999769, 0.00010452699999999662, 0.00010511100000000148, 0.00010461100000000098, 0.00010502800000000007, 0.00010426399999999975, 0.00010445799999999825, 0.00010442999999999911, 0.00010509799999999792, 0.00010430499999999898, 0.00010447200000000129, 0.00010513900000000062, 0.00010477799999999982, 0.0001043750000000003, 0.00010479199999999939, 0.00010490200000000047, 0.00010425000000000018, 0.00010509700000000191, 0.00010462499999999708, 0.00010433300000000159, 0.00010466699999999926, 0.00010508300000000234, 0.0001048889999999969, 0.00010448700000000033, 0.00010518099999999933, 0.000104514, 0.00010462500000000055, 0.00010447200000000129, 0.00010477700000000034, 0.00010459700000000141, 0.00010481899999999905, 0.00010430600000000192, 0.00010491699999999951, 0.0001050689999999993, 0.00010498599999999789, 0.00010483400000000156, 0.00010502800000000007, 0.00010508300000000234, 0.00010494399999999918, 0.00010462500000000055, 0.00010486100000000123, 0.00010493099999999908, 0.00010430599999999846]</msg>
<status status="PASS" starttime="20201029 12:44:25.032" endtime="20201029 12:44:25.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.025" endtime="20201029 12:44:25.037"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.042" endtime="20201029 12:44:25.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.040" endtime="20201029 12:44:25.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.038" endtime="20201029 12:44:25.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.668" endtime="20201029 12:44:25.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.667" endtime="20201029 12:44:25.063"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.072" endtime="20201029 12:44:25.093"></status>
</kw>
<msg timestamp="20201029 12:44:25.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.070" endtime="20201029 12:44:25.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.094" endtime="20201029 12:44:25.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.097" endtime="20201029 12:44:25.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.068" endtime="20201029 12:44:25.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.066" endtime="20201029 12:44:25.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.106" endtime="20201029 12:44:25.391"></status>
</kw>
<msg timestamp="20201029 12:44:25.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022278389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.104" endtime="20201029 12:44:25.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022278389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.395" endtime="20201029 12:44:25.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.403" endtime="20201029 12:44:25.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.101" endtime="20201029 12:44:25.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.100" endtime="20201029 12:44:25.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:25.410" level="INFO">${RESULT} = [{'diff': 0.0001057499999999982}, {'diff': 0.00010612499999999858}, {'diff': 0.00010623599999999914}, {'diff': 0.00010534800000000163}, {'diff': 0.00010566700000000026}, {'diff': 0.0001062219999999995...</msg>
<status status="PASS" starttime="20201029 12:44:25.407" endtime="20201029 12:44:25.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:25.415" level="INFO">${ACCURACY} = {'diff': [0.0001057499999999982, 0.00010612499999999858, 0.00010623599999999914, 0.00010534800000000163, 0.00010566700000000026, 0.00010622199999999957, 0.00010615200000000172, 0.00010595799999999975,...</msg>
<status status="PASS" starttime="20201029 12:44:25.411" endtime="20201029 12:44:25.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.419" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 12:44:25.418" endtime="20201029 12:44:25.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.422" level="INFO">VALUE: [0.0001057499999999982, 0.00010612499999999858, 0.00010623599999999914, 0.00010534800000000163, 0.00010566700000000026, 0.00010622199999999957, 0.00010615200000000172, 0.00010595799999999975, 0.00010572199999999907, 0.00010527800000000032, 0.000105514000000001, 0.00010597300000000226, 0.00010530599999999946, 0.000105514000000001, 0.0001058750000000018, 0.00010584700000000266, 0.00010618000000000086, 0.00010577800000000082, 0.00010598599999999889, 0.00010609699999999944, 0.00010547299999999829, 0.00010525000000000118, 0.00010612500000000205, 0.00010530499999999998, 0.00010525000000000118, 0.00010545799999999925, 0.00010590300000000094, 0.00010602800000000107, 0.00010562500000000155, 0.00010577799999999735, 0.00010565300000000069, 0.00010620899999999947, 0.00010534699999999869, 0.00010550000000000143, 0.00010534700000000216, 0.0001060560000000002, 0.00010591700000000051, 0.00010584699999999919, 0.00010530599999999946, 0.00010593100000000008, 0.00010527799999999685, 0.00010540299999999697, 0.00010551399999999753, 0.00010536099999999826, 0.00010556999999999928, 0.00010531999999999903, 0.00010594499999999965, 0.0001060279999999976, 0.00010609799999999892, 0.0001060690000000003]</msg>
<status status="PASS" starttime="20201029 12:44:25.420" endtime="20201029 12:44:25.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.416" endtime="20201029 12:44:25.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.427" endtime="20201029 12:44:25.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.425" endtime="20201029 12:44:25.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.424" endtime="20201029 12:44:25.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.064" endtime="20201029 12:44:25.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.064" endtime="20201029 12:44:25.447"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.456" endtime="20201029 12:44:25.475"></status>
</kw>
<msg timestamp="20201029 12:44:25.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.454" endtime="20201029 12:44:25.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.477" endtime="20201029 12:44:25.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.479" endtime="20201029 12:44:25.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.452" endtime="20201029 12:44:25.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.450" endtime="20201029 12:44:25.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.488" endtime="20201029 12:44:25.776"></status>
</kw>
<msg timestamp="20201029 12:44:25.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021990389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:25.487" endtime="20201029 12:44:25.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021990389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:25.780" endtime="20201029 12:44:25.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.788" endtime="20201029 12:44:25.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.484" endtime="20201029 12:44:25.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.483" endtime="20201029 12:44:25.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:25.795" level="INFO">${RESULT} = [{'diff': 0.0001063889999999984}, {'diff': 0.0001070560000000012}, {'diff': 0.00010668000000000136}, {'diff': 0.00010695800000000075}, {'diff': 0.00010715300000000219}, {'diff': 0.00010693000000000161...</msg>
<status status="PASS" starttime="20201029 12:44:25.792" endtime="20201029 12:44:25.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:25.799" level="INFO">${ACCURACY} = {'diff': [0.0001063889999999984, 0.0001070560000000012, 0.00010668000000000136, 0.00010695800000000075, 0.00010715300000000219, 0.00010693000000000161, 0.00010684700000000019, 0.00010627800000000132, ...</msg>
<status status="PASS" starttime="20201029 12:44:25.796" endtime="20201029 12:44:25.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.803" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 12:44:25.802" endtime="20201029 12:44:25.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.806" level="INFO">VALUE: [0.0001063889999999984, 0.0001070560000000012, 0.00010668000000000136, 0.00010695800000000075, 0.00010715300000000219, 0.00010693000000000161, 0.00010684700000000019, 0.00010627800000000132, 0.00010648599999999939, 0.00010629100000000141, 0.00010682000000000053, 0.00010697299999999979, 0.00010630500000000098, 0.00010648599999999939, 0.00010691699999999804, 0.00010684700000000019, 0.00010713899999999915, 0.0001070560000000012, 0.00010683300000000062, 0.00010711100000000001, 0.00010634799999999917, 0.00010684799999999967, 0.00010645800000000025, 0.00010629200000000089, 0.00010659699999999994, 0.00010709700000000044, 0.00010720900000000047, 0.00010679200000000139, 0.00010673599999999964, 0.00010693100000000108, 0.00010666600000000179, 0.00010634699999999969, 0.00010713899999999915, 0.00010688900000000237, 0.00010644400000000068, 0.00010683300000000062, 0.00010668099999999736, 0.0001070560000000012, 0.00010679199999999792, 0.00010627800000000132, 0.00010712499999999958, 0.00010654100000000166, 0.00010636100000000273, 0.0001063889999999984, 0.00010697199999999685, 0.00010679199999999792, 0.00010715300000000219, 0.00010626399999999828, 0.00010680499999999801, 0.00010681900000000105]</msg>
<status status="PASS" starttime="20201029 12:44:25.804" endtime="20201029 12:44:25.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.800" endtime="20201029 12:44:25.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.811" endtime="20201029 12:44:25.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.809" endtime="20201029 12:44:25.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.808" endtime="20201029 12:44:25.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.448" endtime="20201029 12:44:25.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.448" endtime="20201029 12:44:25.831"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.840" endtime="20201029 12:44:25.861"></status>
</kw>
<msg timestamp="20201029 12:44:25.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.838" endtime="20201029 12:44:25.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.863" endtime="20201029 12:44:25.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.866" endtime="20201029 12:44:25.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.836" endtime="20201029 12:44:25.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.834" endtime="20201029 12:44:25.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.876" endtime="20201029 12:44:26.161"></status>
</kw>
<msg timestamp="20201029 12:44:26.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023218347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023325694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.874" endtime="20201029 12:44:26.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023218347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023325694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.165" endtime="20201029 12:44:26.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.173" endtime="20201029 12:44:26.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.871" endtime="20201029 12:44:26.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.870" endtime="20201029 12:44:26.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:26.180" level="INFO">${RESULT} = [{'diff': 0.00010734700000000069}, {'diff': 0.00010797199999999785}, {'diff': 0.00010780499999999901}, {'diff': 0.00010779200000000239}, {'diff': 0.00010741599999999907}, {'diff': 0.000107222000000000...</msg>
<status status="PASS" starttime="20201029 12:44:26.176" endtime="20201029 12:44:26.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:26.184" level="INFO">${ACCURACY} = {'diff': [0.00010734700000000069, 0.00010797199999999785, 0.00010780499999999901, 0.00010779200000000239, 0.00010741599999999907, 0.00010722200000000057, 0.00010744399999999821, 0.00010795899999999775...</msg>
<status status="PASS" starttime="20201029 12:44:26.181" endtime="20201029 12:44:26.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.188" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 12:44:26.187" endtime="20201029 12:44:26.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.190" level="INFO">VALUE: [0.00010734700000000069, 0.00010797199999999785, 0.00010780499999999901, 0.00010779200000000239, 0.00010741599999999907, 0.00010722200000000057, 0.00010744399999999821, 0.00010795899999999775, 0.00010781999999999806, 0.00010768100000000183, 0.00010784800000000067, 0.00010823600000000114, 0.0001074019999999995, 0.00010747200000000082, 0.00010815299999999972, 0.00010783299999999815, 0.00010795799999999828, 0.00010797300000000079, 0.00010801400000000003, 0.00010769399999999846, 0.00010823600000000114, 0.00010811099999999754, 0.00010783300000000162, 0.00010784699999999772, 0.00010757000000000128, 0.00010801400000000003, 0.0001075699999999978, 0.00010742999999999864, 0.00010777799999999935, 0.00010743000000000211, 0.00010726400000000275, 0.00010780599999999849, 0.00010777800000000282, 0.00010794500000000165, 0.00010743099999999811, 0.00010729199999999842, 0.00010780499999999901, 0.00010761099999999704, 0.00010811100000000101, 0.00010819399999999896, 0.00010729199999999842, 0.00010727799999999885, 0.00010762500000000008, 0.00010812500000000058, 0.00010751300000000005, 0.00010727800000000232, 0.00010809700000000144, 0.00010786100000000076, 0.000108208000000002, 0.00010740299999999897]</msg>
<status status="PASS" starttime="20201029 12:44:26.189" endtime="20201029 12:44:26.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.185" endtime="20201029 12:44:26.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:26.200" endtime="20201029 12:44:26.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.199" endtime="20201029 12:44:26.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.198" endtime="20201029 12:44:26.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.832" endtime="20201029 12:44:26.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.832" endtime="20201029 12:44:26.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.796" endtime="20201029 12:44:26.221"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:47.702" endtime="20201029 12:44:26.222" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:26.228" endtime="20201029 12:44:26.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.227" endtime="20201029 12:44:26.248"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.261" endtime="20201029 12:44:26.276"></status>
</kw>
<msg timestamp="20201029 12:44:26.276" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.260" endtime="20201029 12:44:26.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.279" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.277" endtime="20201029 12:44:26.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.282" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:26.280" endtime="20201029 12:44:26.282"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:26.257" endtime="20201029 12:44:26.283"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:26.255" endtime="20201029 12:44:26.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.254" endtime="20201029 12:44:26.284"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:26.287" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:26.287" endtime="20201029 12:44:26.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.284" endtime="20201029 12:44:26.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.253" endtime="20201029 12:44:26.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.252" endtime="20201029 12:44:26.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.289" endtime="20201029 12:44:26.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.251" endtime="20201029 12:44:26.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.249" endtime="20201029 12:44:26.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.226" endtime="20201029 12:44:26.292"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.302" endtime="20201029 12:44:26.317"></status>
</kw>
<msg timestamp="20201029 12:44:26.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.301" endtime="20201029 12:44:26.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.318" endtime="20201029 12:44:26.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.321" endtime="20201029 12:44:26.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.297" endtime="20201029 12:44:26.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.295" endtime="20201029 12:44:26.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.331" endtime="20201029 12:44:26.616"></status>
</kw>
<msg timestamp="20201029 12:44:26.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066450889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066459889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.329" endtime="20201029 12:44:26.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066450889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066459889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.620" endtime="20201029 12:44:26.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.628" endtime="20201029 12:44:26.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.326" endtime="20201029 12:44:26.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.325" endtime="20201029 12:44:26.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:26.635" level="INFO">${RESULT} = [{'diff': 8.999999999995123e-06}, {'diff': 9.666999999990988e-06}, {'diff': 9.610999999992709e-06}, {'diff': 8.943999999996843e-06}, {'diff': 9.000000000009e-06}, {'diff': 8.943999999996843e-06}, {'di...</msg>
<status status="PASS" starttime="20201029 12:44:26.631" endtime="20201029 12:44:26.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:26.639" level="INFO">${ACCURACY} = {'diff': [8.999999999995123e-06, 9.666999999990988e-06, 9.610999999992709e-06, 8.943999999996843e-06, 9.000000000009e-06, 8.943999999996843e-06, 9.000000000009e-06, 8.986000000002492e-06, 9.6110000000...</msg>
<status status="PASS" starttime="20201029 12:44:26.636" endtime="20201029 12:44:26.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.644" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 12:44:26.643" endtime="20201029 12:44:26.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.646" level="INFO">VALUE: [8.999999999995123e-06, 9.666999999990988e-06, 9.610999999992709e-06, 8.943999999996843e-06, 9.000000000009e-06, 8.943999999996843e-06, 9.000000000009e-06, 8.986000000002492e-06, 9.611000000006586e-06, 9.597000000000078e-06, 9.597999999999551e-06, 9.597000000000078e-06, 9.014000000001632e-06, 9.652999999998357e-06, 8.971999999995983e-06, 9.514000000002132e-06, 8.999999999995123e-06, 9.610999999992709e-06, 9.02800000000814e-06, 8.986000000002492e-06, 9.58400000000692e-06, 9.583000000007447e-06, 8.986000000002492e-06, 8.986000000002492e-06, 9.651999999998884e-06, 9.069000000000438e-06, 9.597000000000078e-06, 9.61200000000606e-06, 9.52699999999529e-06, 8.930000000004212e-06, 9.569000000000938e-06, 9.611000000006586e-06, 9.611000000006586e-06, 9.05600000000728e-06, 9.000000000009e-06, 9.652999999998357e-06, 8.986999999988088e-06, 9.582999999993569e-06, 9.02699999999479e-06, 9.679999999998024e-06, 9.611000000006586e-06, 8.986000000002492e-06, 9.014000000001632e-06, 9.000000000009e-06, 9.000000000009e-06, 9.582999999993569e-06, 8.999999999995123e-06, 9.611000000006586e-06, 9.082999999993069e-06, 9.611000000006586e-06]</msg>
<status status="PASS" starttime="20201029 12:44:26.645" endtime="20201029 12:44:26.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.639" endtime="20201029 12:44:26.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:26.651" endtime="20201029 12:44:26.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.649" endtime="20201029 12:44:26.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.648" endtime="20201029 12:44:26.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.293" endtime="20201029 12:44:26.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.293" endtime="20201029 12:44:26.671"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.680" endtime="20201029 12:44:26.695"></status>
</kw>
<msg timestamp="20201029 12:44:26.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.679" endtime="20201029 12:44:26.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.697" endtime="20201029 12:44:26.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.699" endtime="20201029 12:44:26.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.676" endtime="20201029 12:44:26.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.674" endtime="20201029 12:44:26.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.708" endtime="20201029 12:44:26.994"></status>
</kw>
<msg timestamp="20201029 12:44:26.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022497208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.707" endtime="20201029 12:44:26.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022497208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.998" endtime="20201029 12:44:27.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.007" endtime="20201029 12:44:27.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.704" endtime="20201029 12:44:27.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.703" endtime="20201029 12:44:27.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:27.014" level="INFO">${RESULT} = [{'diff': 1.0194999999997567e-05}, {'diff': 1.0194000000001563e-05}, {'diff': 1.0834000000001232e-05}, {'diff': 1.0208000000001133e-05}, {'diff': 1.0806000000002092e-05}, {'diff': 1.0194000000001563e-...</msg>
<status status="PASS" starttime="20201029 12:44:27.010" endtime="20201029 12:44:27.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:27.019" level="INFO">${ACCURACY} = {'diff': [1.0194999999997567e-05, 1.0194000000001563e-05, 1.0834000000001232e-05, 1.0208000000001133e-05, 1.0806000000002092e-05, 1.0194000000001563e-05, 1.0223000000000176e-05, 1.0208000000001133e-05...</msg>
<status status="PASS" starttime="20201029 12:44:27.015" endtime="20201029 12:44:27.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.024" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 12:44:27.023" endtime="20201029 12:44:27.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.027" level="INFO">VALUE: [1.0194999999997567e-05, 1.0194000000001563e-05, 1.0834000000001232e-05, 1.0208000000001133e-05, 1.0806000000002092e-05, 1.0194000000001563e-05, 1.0223000000000176e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0208000000001133e-05, 1.0209000000000606e-05, 1.0208000000001133e-05, 1.0207999999997663e-05, 1.0790999999999579e-05, 1.0195000000001037e-05, 1.0208000000001133e-05, 1.0861000000000898e-05, 1.0208000000001133e-05, 1.0195000000001037e-05, 1.0223000000000176e-05, 1.0195000000001037e-05, 9.610999999999648e-06, 1.0834000000001232e-05, 1.0209000000000606e-05, 1.0208000000001133e-05, 1.0804999999999149e-05, 1.0179999999998524e-05, 1.0223000000000176e-05, 1.0820000000001662e-05, 1.0249999999999843e-05, 1.0195000000001037e-05, 1.0208000000001133e-05, 1.0207999999997663e-05, 1.0222000000000703e-05, 1.0804999999999149e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0179999999998524e-05, 1.0209000000000606e-05, 1.0806000000002092e-05, 1.0194999999997567e-05, 1.0236000000000273e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0209000000000606e-05, 1.0195000000001037e-05, 1.0209000000000606e-05, 1.0193999999998093e-05]</msg>
<status status="PASS" starttime="20201029 12:44:27.025" endtime="20201029 12:44:27.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.020" endtime="20201029 12:44:27.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.032" endtime="20201029 12:44:27.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.030" endtime="20201029 12:44:27.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.029" endtime="20201029 12:44:27.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.672" endtime="20201029 12:44:27.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.672" endtime="20201029 12:44:27.052"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.062" endtime="20201029 12:44:27.077"></status>
</kw>
<msg timestamp="20201029 12:44:27.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.060" endtime="20201029 12:44:27.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.079" endtime="20201029 12:44:27.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.081" endtime="20201029 12:44:27.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.057" endtime="20201029 12:44:27.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.055" endtime="20201029 12:44:27.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.092" endtime="20201029 12:44:27.378"></status>
</kw>
<msg timestamp="20201029 12:44:27.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022708958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.090" endtime="20201029 12:44:27.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022708958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.382" endtime="20201029 12:44:27.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.390" endtime="20201029 12:44:27.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.087" endtime="20201029 12:44:27.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.085" endtime="20201029 12:44:27.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:27.397" level="INFO">${RESULT} = [{'diff': 1.0889000000000038e-05}, {'diff': 1.1416999999999677e-05}, {'diff': 1.1403000000000107e-05}, {'diff': 1.1416999999999677e-05}, {'diff': 1.1430999999999247e-05}, {'diff': 1.0805999999998622e-...</msg>
<status status="PASS" starttime="20201029 12:44:27.394" endtime="20201029 12:44:27.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:27.401" level="INFO">${ACCURACY} = {'diff': [1.0889000000000038e-05, 1.1416999999999677e-05, 1.1403000000000107e-05, 1.1416999999999677e-05, 1.1430999999999247e-05, 1.0805999999998622e-05, 1.2027999999997263e-05, 1.1486000000001523e-05...</msg>
<status status="PASS" starttime="20201029 12:44:27.398" endtime="20201029 12:44:27.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.406" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 12:44:27.404" endtime="20201029 12:44:27.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.408" level="INFO">VALUE: [1.0889000000000038e-05, 1.1416999999999677e-05, 1.1403000000000107e-05, 1.1416999999999677e-05, 1.1430999999999247e-05, 1.0805999999998622e-05, 1.2027999999997263e-05, 1.1486000000001523e-05, 1.1429999999999774e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1487000000000996e-05, 1.1430999999999247e-05, 1.201299999999822e-05, 1.0818999999998719e-05, 1.1430999999999247e-05, 1.1430999999999247e-05, 1.2028000000000733e-05, 1.0832999999998288e-05, 1.0820000000001662e-05, 1.1443999999999344e-05, 1.1416999999999677e-05, 1.1389000000000538e-05, 1.1443999999999344e-05, 1.1431000000002717e-05, 1.0791999999999052e-05, 1.1430999999999247e-05, 1.2000000000001593e-05, 1.1416999999999677e-05, 1.1416000000000204e-05, 1.0804999999999149e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1417000000003147e-05, 1.0819999999998192e-05, 1.1444999999998817e-05, 1.0818999999998719e-05, 1.0819000000002188e-05, 1.1416000000000204e-05, 1.0832999999998288e-05, 1.0804999999999149e-05, 1.1430999999999247e-05, 1.1429999999999774e-05, 1.0805999999998622e-05, 1.1416999999999677e-05, 1.0805999999998622e-05, 1.1999999999998123e-05, 1.1416999999999677e-05, 1.1403000000000107e-05, 1.2068999999999969e-05]</msg>
<status status="PASS" starttime="20201029 12:44:27.407" endtime="20201029 12:44:27.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.402" endtime="20201029 12:44:27.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.413" endtime="20201029 12:44:27.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.411" endtime="20201029 12:44:27.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.410" endtime="20201029 12:44:27.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.053" endtime="20201029 12:44:27.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.053" endtime="20201029 12:44:27.434"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.443" endtime="20201029 12:44:27.459"></status>
</kw>
<msg timestamp="20201029 12:44:27.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.441" endtime="20201029 12:44:27.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.460" endtime="20201029 12:44:27.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.463" endtime="20201029 12:44:27.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.438" endtime="20201029 12:44:27.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.436" endtime="20201029 12:44:27.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.472" endtime="20201029 12:44:27.758"></status>
</kw>
<msg timestamp="20201029 12:44:27.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023271403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023284028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.470" endtime="20201029 12:44:27.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023271403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023284028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.762" endtime="20201029 12:44:27.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.770" endtime="20201029 12:44:27.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.467" endtime="20201029 12:44:27.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.466" endtime="20201029 12:44:27.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:27.777" level="INFO">${RESULT} = [{'diff': 1.2624999999998748e-05}, {'diff': 1.2611000000002648e-05}, {'diff': 1.2610999999999178e-05}, {'diff': 1.2624999999998748e-05}, {'diff': 1.2624999999998748e-05}, {'diff': 1.2569000000000469e-...</msg>
<status status="PASS" starttime="20201029 12:44:27.774" endtime="20201029 12:44:27.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:27.782" level="INFO">${ACCURACY} = {'diff': [1.2624999999998748e-05, 1.2611000000002648e-05, 1.2610999999999178e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.2569000000000469e-05, 1.2068999999999969e-05, 1.2014000000001163e-05...</msg>
<status status="PASS" starttime="20201029 12:44:27.778" endtime="20201029 12:44:27.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.788" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 12:44:27.786" endtime="20201029 12:44:27.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.791" level="INFO">VALUE: [1.2624999999998748e-05, 1.2611000000002648e-05, 1.2610999999999178e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.2569000000000469e-05, 1.2068999999999969e-05, 1.2014000000001163e-05, 1.2625000000002218e-05, 1.2096999999999108e-05, 1.2028000000000733e-05, 1.2014000000001163e-05, 1.2610999999999178e-05, 1.2013999999997693e-05, 1.2625000000002218e-05, 1.2625000000002218e-05, 1.2014000000001163e-05, 1.2610999999999178e-05, 1.2624999999998748e-05, 1.2068999999999969e-05, 1.2042000000000302e-05, 1.2027999999997263e-05, 1.2652999999997888e-05, 1.2583000000000039e-05, 1.2013000000001689e-05, 1.2014000000001163e-05, 1.2612000000002122e-05, 1.2625000000002218e-05, 1.2681000000000497e-05, 1.1971999999998983e-05, 1.2055000000000399e-05, 1.2028000000000733e-05, 1.2624999999998748e-05, 1.2639000000001788e-05, 1.2638999999998318e-05, 1.2596999999999609e-05, 1.2637999999998845e-05, 1.2625000000002218e-05, 1.2598000000002552e-05, 1.2694000000000594e-05, 1.2625000000002218e-05, 1.2665999999997984e-05, 1.2041999999996833e-05, 1.2041999999996833e-05, 1.2028000000000733e-05, 1.2625000000002218e-05, 1.2625000000002218e-05, 1.2625000000002218e-05, 1.2610999999999178e-05, 1.2027999999997263e-05]</msg>
<status status="PASS" starttime="20201029 12:44:27.789" endtime="20201029 12:44:27.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.783" endtime="20201029 12:44:27.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.798" endtime="20201029 12:44:27.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.796" endtime="20201029 12:44:27.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.795" endtime="20201029 12:44:27.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.435" endtime="20201029 12:44:27.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.434" endtime="20201029 12:44:27.820"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.829" endtime="20201029 12:44:27.844"></status>
</kw>
<msg timestamp="20201029 12:44:27.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.827" endtime="20201029 12:44:27.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.846" endtime="20201029 12:44:27.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.848" endtime="20201029 12:44:27.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.825" endtime="20201029 12:44:27.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.823" endtime="20201029 12:44:27.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.857" endtime="20201029 12:44:28.149"></status>
</kw>
<msg timestamp="20201029 12:44:28.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023009167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023022444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.856" endtime="20201029 12:44:28.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023009167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023022444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.154" endtime="20201029 12:44:28.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.162" endtime="20201029 12:44:28.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.853" endtime="20201029 12:44:28.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.851" endtime="20201029 12:44:28.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:28.168" level="INFO">${RESULT} = [{'diff': 1.327699999999904e-05}, {'diff': 1.3833000000001289e-05}, {'diff': 1.3208000000000664e-05}, {'diff': 1.3250000000002843e-05}, {'diff': 1.3847999999996863e-05}, {'diff': 1.3888999999999568e-0...</msg>
<status status="PASS" starttime="20201029 12:44:28.165" endtime="20201029 12:44:28.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:28.174" level="INFO">${ACCURACY} = {'diff': [1.327699999999904e-05, 1.3833000000001289e-05, 1.3208000000000664e-05, 1.3250000000002843e-05, 1.3847999999996863e-05, 1.3888999999999568e-05, 1.3195000000000567e-05, 1.3820000000001192e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:28.169" endtime="20201029 12:44:28.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.178" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 12:44:28.177" endtime="20201029 12:44:28.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.181" level="INFO">VALUE: [1.327699999999904e-05, 1.3833000000001289e-05, 1.3208000000000664e-05, 1.3250000000002843e-05, 1.3847999999996863e-05, 1.3888999999999568e-05, 1.3195000000000567e-05, 1.3820000000001192e-05, 1.3764000000002913e-05, 1.3820000000001192e-05, 1.3860999999996959e-05, 1.3194000000001094e-05, 1.3848000000000332e-05, 1.3194000000001094e-05, 1.3236000000003273e-05, 1.3208000000000664e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3237000000002747e-05, 1.2624999999998748e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3222999999999707e-05, 1.2667000000000928e-05, 1.2598000000002552e-05, 1.3834000000000762e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3847000000000859e-05, 1.3834000000000762e-05, 1.3236999999999277e-05, 1.2610999999999178e-05, 1.3250000000002843e-05, 1.3235999999999803e-05, 1.3834000000000762e-05, 1.3264000000002413e-05, 1.3848000000000332e-05, 1.3249999999999373e-05, 1.3222999999999707e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.380499999999868e-05, 1.3833000000001289e-05, 1.3263999999998943e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.3250000000002843e-05]</msg>
<status status="PASS" starttime="20201029 12:44:28.179" endtime="20201029 12:44:28.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.175" endtime="20201029 12:44:28.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:28.186" endtime="20201029 12:44:28.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.185" endtime="20201029 12:44:28.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.183" endtime="20201029 12:44:28.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.821" endtime="20201029 12:44:28.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.820" endtime="20201029 12:44:28.207"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.215" endtime="20201029 12:44:28.232"></status>
</kw>
<msg timestamp="20201029 12:44:28.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.214" endtime="20201029 12:44:28.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.233" endtime="20201029 12:44:28.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.236" endtime="20201029 12:44:28.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.211" endtime="20201029 12:44:28.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.209" endtime="20201029 12:44:28.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.245" endtime="20201029 12:44:28.546"></status>
</kw>
<msg timestamp="20201029 12:44:28.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223155, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:28.243" endtime="20201029 12:44:28.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223155, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:28.551" endtime="20201029 12:44:28.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.559" endtime="20201029 12:44:28.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.241" endtime="20201029 12:44:28.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.239" endtime="20201029 12:44:28.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:28.566" level="INFO">${RESULT} = [{'diff': 1.384699999999739e-05}, {'diff': 1.3833000000001289e-05}, {'diff': 1.4445000000001817e-05}, {'diff': 1.4445000000001817e-05}, {'diff': 1.4389000000000068e-05}, {'diff': 1.3874999999999998e-0...</msg>
<status status="PASS" starttime="20201029 12:44:28.563" endtime="20201029 12:44:28.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:28.570" level="INFO">${ACCURACY} = {'diff': [1.384699999999739e-05, 1.3833000000001289e-05, 1.4445000000001817e-05, 1.4445000000001817e-05, 1.4389000000000068e-05, 1.3874999999999998e-05, 1.383299999999782e-05, 1.4445000000001817e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:28.567" endtime="20201029 12:44:28.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.575" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 12:44:28.574" endtime="20201029 12:44:28.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.578" level="INFO">VALUE: [1.384699999999739e-05, 1.3833000000001289e-05, 1.4445000000001817e-05, 1.4445000000001817e-05, 1.4389000000000068e-05, 1.3874999999999998e-05, 1.383299999999782e-05, 1.4445000000001817e-05, 1.384699999999739e-05, 1.3820000000001192e-05, 1.4443999999998874e-05, 1.3833000000001289e-05, 1.4429999999999304e-05, 1.4431000000002248e-05, 1.5055999999999403e-05, 1.4444000000002344e-05, 1.4458000000001914e-05, 1.4429999999999304e-05, 1.384699999999739e-05, 1.4445000000001817e-05, 1.4444000000002344e-05, 1.3805999999998153e-05, 1.3819000000001719e-05, 1.4429999999999304e-05, 1.3834000000000762e-05, 1.3834000000000762e-05, 1.381899999999825e-05, 1.4415999999999735e-05, 1.381899999999825e-05, 1.3749999999999873e-05, 1.4443999999998874e-05, 1.4429999999999304e-05, 1.4430999999998778e-05, 1.3833000000001289e-05, 1.3833000000001289e-05, 1.3820000000001192e-05, 1.3805000000002149e-05, 1.4443999999998874e-05, 1.3833000000001289e-05, 1.4402999999999638e-05, 1.4444999999998348e-05, 1.4445000000001817e-05, 1.3833000000001289e-05, 1.3848000000000332e-05, 1.4430999999998778e-05, 1.5041999999999833e-05, 1.3847000000000859e-05, 1.3833000000001289e-05, 1.4431000000002248e-05, 1.4429999999999304e-05]</msg>
<status status="PASS" starttime="20201029 12:44:28.576" endtime="20201029 12:44:28.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.571" endtime="20201029 12:44:28.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:28.583" endtime="20201029 12:44:28.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.581" endtime="20201029 12:44:28.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.580" endtime="20201029 12:44:28.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.208" endtime="20201029 12:44:28.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.207" endtime="20201029 12:44:28.604"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.613" endtime="20201029 12:44:28.629"></status>
</kw>
<msg timestamp="20201029 12:44:28.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.611" endtime="20201029 12:44:28.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.631" endtime="20201029 12:44:28.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.634" endtime="20201029 12:44:28.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.609" endtime="20201029 12:44:28.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.606" endtime="20201029 12:44:28.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.643" endtime="20201029 12:44:28.929"></status>
</kw>
<msg timestamp="20201029 12:44:28.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023483833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023499472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.641" endtime="20201029 12:44:28.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023483833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023499472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.933" endtime="20201029 12:44:28.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.941" endtime="20201029 12:44:28.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.639" endtime="20201029 12:44:28.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.637" endtime="20201029 12:44:28.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:28.948" level="INFO">${RESULT} = [{'diff': 1.563900000000132e-05}, {'diff': 1.5028000000000263e-05}, {'diff': 1.563900000000132e-05}, {'diff': 1.4985999999998084e-05}, {'diff': 1.565300000000089e-05}, {'diff': 1.562499999999828e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:28.944" endtime="20201029 12:44:28.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:28.952" level="INFO">${ACCURACY} = {'diff': [1.563900000000132e-05, 1.5028000000000263e-05, 1.563900000000132e-05, 1.4985999999998084e-05, 1.565300000000089e-05, 1.562499999999828e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:44:28.949" endtime="20201029 12:44:28.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.956" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 12:44:28.955" endtime="20201029 12:44:28.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.959" level="INFO">VALUE: [1.563900000000132e-05, 1.5028000000000263e-05, 1.563900000000132e-05, 1.4985999999998084e-05, 1.565300000000089e-05, 1.562499999999828e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1.504100000000036e-05, 1.5055999999999403e-05, 1.5041999999999833e-05, 1.565300000000089e-05, 1.562500000000175e-05, 1.561099999999871e-05, 1.5708999999999168e-05, 1.566700000000046e-05, 1.5014000000000693e-05, 1.565300000000089e-05, 1.5041999999999833e-05, 1.562500000000175e-05, 1.5665999999997515e-05, 1.5694000000000125e-05, 1.563900000000132e-05, 1.566700000000046e-05, 1.565300000000089e-05, 1.565300000000089e-05, 1.5055999999999403e-05, 1.565300000000089e-05, 1.5014000000000693e-05, 1.563900000000132e-05, 1.4985999999998084e-05, 1.505499999999993e-05, 1.5041999999999833e-05, 1.565299999999742e-05, 1.565300000000089e-05, 1.562500000000175e-05, 1.5000000000001124e-05, 1.5041999999999833e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1.5651999999997945e-05, 1.566700000000046e-05, 1.5055999999999403e-05, 1.563900000000132e-05, 1.505499999999993e-05, 1.504100000000036e-05, 1.5055999999999403e-05, 1.5041999999999833e-05, 1.565299999999742e-05, 1.563900000000132e-05]</msg>
<status status="PASS" starttime="20201029 12:44:28.958" endtime="20201029 12:44:28.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.953" endtime="20201029 12:44:28.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:28.967" endtime="20201029 12:44:28.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.965" endtime="20201029 12:44:28.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.964" endtime="20201029 12:44:28.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.605" endtime="20201029 12:44:28.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.604" endtime="20201029 12:44:28.988"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.996" endtime="20201029 12:44:29.011"></status>
</kw>
<msg timestamp="20201029 12:44:29.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.995" endtime="20201029 12:44:29.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.013" endtime="20201029 12:44:29.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.015" endtime="20201029 12:44:29.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.992" endtime="20201029 12:44:29.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.990" endtime="20201029 12:44:29.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.025" endtime="20201029 12:44:29.325"></status>
</kw>
<msg timestamp="20201029 12:44:29.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057764, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:29.023" endtime="20201029 12:44:29.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057764, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:29.331" endtime="20201029 12:44:29.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.340" endtime="20201029 12:44:29.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.020" endtime="20201029 12:44:29.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.019" endtime="20201029 12:44:29.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.346" level="INFO">${RESULT} = [{'diff': 1.6264000000001944e-05}, {'diff': 1.6250000000002374e-05}, {'diff': 1.686099999999996e-05}, {'diff': 1.686099999999996e-05}, {'diff': 1.6264000000001944e-05}, {'diff': 1.6262999999999e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:29.343" endtime="20201029 12:44:29.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:29.397" level="INFO">${ACCURACY} = {'diff': [1.6264000000001944e-05, 1.6250000000002374e-05, 1.686099999999996e-05, 1.686099999999996e-05, 1.6264000000001944e-05, 1.6262999999999e-05, 1.6249999999998904e-05, 1.690300000000214e-05, 1.68...</msg>
<status status="PASS" starttime="20201029 12:44:29.347" endtime="20201029 12:44:29.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.401" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 12:44:29.400" endtime="20201029 12:44:29.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.404" level="INFO">VALUE: [1.6264000000001944e-05, 1.6250000000002374e-05, 1.686099999999996e-05, 1.686099999999996e-05, 1.6264000000001944e-05, 1.6262999999999e-05, 1.6249999999998904e-05, 1.690300000000214e-05, 1.684700000000039e-05, 1.633299999999685e-05, 1.686099999999996e-05, 1.562499999999828e-05, 1.6249999999998904e-05, 1.566700000000046e-05, 1.683300000000082e-05, 1.6249999999998904e-05, 1.6263999999998474e-05, 1.686099999999996e-05, 1.6208000000000194e-05, 1.6235999999999334e-05, 1.686099999999996e-05, 1.6235999999999334e-05, 1.626300000000247e-05, 1.686099999999996e-05, 1.6236000000002804e-05, 1.6208999999999668e-05, 1.686099999999996e-05, 1.616700000000096e-05, 1.6249999999998904e-05, 1.686099999999996e-05, 1.6221999999999764e-05, 1.683300000000082e-05, 1.6277999999998044e-05, 1.6250000000002374e-05, 1.6249999999998904e-05, 1.6320000000000223e-05, 1.6277999999998044e-05, 1.6263999999998474e-05, 1.6263999999998474e-05, 1.6235999999999334e-05, 1.563900000000132e-05, 1.6250000000002374e-05, 1.6249999999998904e-05, 1.6263999999998474e-05, 1.68889999999991e-05, 1.687499999999953e-05, 1.690299999999867e-05, 1.683299999999735e-05, 1.6249999999998904e-05, 1.6250000000002374e-05]</msg>
<status status="PASS" starttime="20201029 12:44:29.402" endtime="20201029 12:44:29.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.398" endtime="20201029 12:44:29.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:29.409" endtime="20201029 12:44:29.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.407" endtime="20201029 12:44:29.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.406" endtime="20201029 12:44:29.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.989" endtime="20201029 12:44:29.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.988" endtime="20201029 12:44:29.429"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.438" endtime="20201029 12:44:29.453"></status>
</kw>
<msg timestamp="20201029 12:44:29.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.437" endtime="20201029 12:44:29.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.455" endtime="20201029 12:44:29.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.457" endtime="20201029 12:44:29.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.434" endtime="20201029 12:44:29.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.432" endtime="20201029 12:44:29.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.467" endtime="20201029 12:44:29.753"></status>
</kw>
<msg timestamp="20201029 12:44:29.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022076583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022094083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.466" endtime="20201029 12:44:29.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022076583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022094083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.757" endtime="20201029 12:44:29.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.765" endtime="20201029 12:44:29.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.463" endtime="20201029 12:44:29.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.461" endtime="20201029 12:44:29.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.772" level="INFO">${RESULT} = [{'diff': 1.7500000000000154e-05}, {'diff': 1.805499999999946e-05}, {'diff': 1.744500000000135e-05}, {'diff': 1.744499999999788e-05}, {'diff': 1.7458000000001445e-05}, {'diff': 1.8069999999998504e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:29.769" endtime="20201029 12:44:29.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:29.776" level="INFO">${ACCURACY} = {'diff': [1.7500000000000154e-05, 1.805499999999946e-05, 1.744500000000135e-05, 1.744499999999788e-05, 1.7458000000001445e-05, 1.8069999999998504e-05, 1.744500000000135e-05, 1.7457999999997975e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:44:29.773" endtime="20201029 12:44:29.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.781" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 12:44:29.779" endtime="20201029 12:44:29.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.784" level="INFO">VALUE: [1.7500000000000154e-05, 1.805499999999946e-05, 1.744500000000135e-05, 1.744499999999788e-05, 1.7458000000001445e-05, 1.8069999999998504e-05, 1.744500000000135e-05, 1.7457999999997975e-05, 1.752700000000329e-05, 1.687499999999953e-05, 1.7457999999997975e-05, 1.684700000000039e-05, 1.7457999999997975e-05, 1.687499999999953e-05, 1.684700000000039e-05, 1.8027999999999794e-05, 1.7472000000001014e-05, 1.7472000000001014e-05, 1.7472000000001014e-05, 1.6847999999999863e-05, 1.805499999999946e-05, 1.6861999999999433e-05, 1.684699999999692e-05, 1.7457999999997975e-05, 1.7459000000000918e-05, 1.744500000000135e-05, 1.7443999999998405e-05, 1.7459000000000918e-05, 1.6887999999999626e-05, 1.744499999999788e-05, 1.7457999999997975e-05, 1.684700000000039e-05, 1.7457999999997975e-05, 1.740299999999917e-05, 1.7471999999997545e-05, 1.7471999999997545e-05, 1.7444000000001875e-05, 1.684700000000039e-05, 1.687499999999953e-05, 1.7459000000000918e-05, 1.7472000000001014e-05, 1.7472000000001014e-05, 1.8055999999998934e-05, 1.7457999999997975e-05, 1.7401999999999695e-05, 1.740299999999917e-05, 1.7458000000001445e-05, 1.683300000000082e-05, 1.747299999999702e-05, 1.7472000000001014e-05]</msg>
<status status="PASS" starttime="20201029 12:44:29.782" endtime="20201029 12:44:29.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.777" endtime="20201029 12:44:29.785"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:29.789" endtime="20201029 12:44:29.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.787" endtime="20201029 12:44:29.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.786" endtime="20201029 12:44:29.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.430" endtime="20201029 12:44:29.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.430" endtime="20201029 12:44:29.809"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.818" endtime="20201029 12:44:29.833"></status>
</kw>
<msg timestamp="20201029 12:44:29.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.816" endtime="20201029 12:44:29.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.834" endtime="20201029 12:44:29.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.837" endtime="20201029 12:44:29.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.814" endtime="20201029 12:44:29.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.812" endtime="20201029 12:44:29.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.846" endtime="20201029 12:44:30.150"></status>
</kw>
<msg timestamp="20201029 12:44:30.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022099014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.844" endtime="20201029 12:44:30.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022099014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.154" endtime="20201029 12:44:30.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.162" endtime="20201029 12:44:30.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.841" endtime="20201029 12:44:30.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.840" endtime="20201029 12:44:30.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.169" level="INFO">${RESULT} = [{'diff': 1.868099999999956e-05}, {'diff': 1.80690000000025e-05}, {'diff': 1.80690000000025e-05}, {'diff': 1.808300000000207e-05}, {'diff': 1.8014000000000224e-05}, {'diff': 1.805499999999946e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:30.166" endtime="20201029 12:44:30.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.174" level="INFO">${ACCURACY} = {'diff': [1.868099999999956e-05, 1.80690000000025e-05, 1.80690000000025e-05, 1.808300000000207e-05, 1.8014000000000224e-05, 1.805499999999946e-05, 1.806899999999903e-05, 1.8027999999999794e-05, 1.8055...</msg>
<status status="PASS" starttime="20201029 12:44:30.170" endtime="20201029 12:44:30.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.178" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.177" endtime="20201029 12:44:30.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.181" level="INFO">VALUE: [1.868099999999956e-05, 1.80690000000025e-05, 1.80690000000025e-05, 1.808300000000207e-05, 1.8014000000000224e-05, 1.805499999999946e-05, 1.806899999999903e-05, 1.8027999999999794e-05, 1.805500000000293e-05, 1.868099999999956e-05, 1.8055999999998934e-05, 1.8084000000001543e-05, 1.866699999999999e-05, 1.8070000000001973e-05, 1.866699999999999e-05, 1.866699999999999e-05, 1.809700000000164e-05, 1.868099999999956e-05, 1.862500000000128e-05, 1.8084000000001543e-05, 1.80829999999986e-05, 1.804099999999989e-05, 1.8055999999998934e-05, 1.806899999999903e-05, 1.806899999999903e-05, 1.805499999999946e-05, 1.806899999999903e-05, 1.866699999999999e-05, 1.8652000000000946e-05, 1.865300000000042e-05, 1.868099999999956e-05, 1.8680000000000085e-05, 1.7973000000000988e-05, 1.80690000000025e-05, 1.806899999999903e-05, 1.866699999999999e-05, 1.813900000000035e-05, 1.868099999999956e-05, 1.804099999999989e-05, 1.805499999999946e-05, 1.80690000000025e-05, 1.80829999999986e-05, 1.80690000000025e-05, 1.868099999999956e-05, 1.862500000000128e-05, 1.866699999999999e-05, 1.808300000000207e-05, 1.866699999999999e-05, 1.8680000000000085e-05, 1.8055999999998934e-05]</msg>
<status status="PASS" starttime="20201029 12:44:30.180" endtime="20201029 12:44:30.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.175" endtime="20201029 12:44:30.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:30.186" endtime="20201029 12:44:30.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.184" endtime="20201029 12:44:30.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.183" endtime="20201029 12:44:30.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.810" endtime="20201029 12:44:30.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.809" endtime="20201029 12:44:30.207"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.215" endtime="20201029 12:44:30.231"></status>
</kw>
<msg timestamp="20201029 12:44:30.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.214" endtime="20201029 12:44:30.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.232" endtime="20201029 12:44:30.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.235" endtime="20201029 12:44:30.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.211" endtime="20201029 12:44:30.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.209" endtime="20201029 12:44:30.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.244" endtime="20201029 12:44:30.533"></status>
</kw>
<msg timestamp="20201029 12:44:30.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.242" endtime="20201029 12:44:30.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.537" endtime="20201029 12:44:30.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.546" endtime="20201029 12:44:30.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.240" endtime="20201029 12:44:30.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.238" endtime="20201029 12:44:30.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.552" level="INFO">${RESULT} = [{'diff': 1.987499999999906e-05}, {'diff': 1.9264000000001474e-05}, {'diff': 1.865300000000042e-05}, {'diff': 1.9264000000001474e-05}, {'diff': 1.9278000000001044e-05}, {'diff': 1.865299999999695e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:30.549" endtime="20201029 12:44:30.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.556" level="INFO">${ACCURACY} = {'diff': [1.987499999999906e-05, 1.9264000000001474e-05, 1.865300000000042e-05, 1.9264000000001474e-05, 1.9278000000001044e-05, 1.865299999999695e-05, 1.8707999999999225e-05, 1.8666000000000516e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:44:30.553" endtime="20201029 12:44:30.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.561" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.560" endtime="20201029 12:44:30.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.563" level="INFO">VALUE: [1.987499999999906e-05, 1.9264000000001474e-05, 1.865300000000042e-05, 1.9264000000001474e-05, 1.9278000000001044e-05, 1.865299999999695e-05, 1.8707999999999225e-05, 1.8666000000000516e-05, 1.987499999999906e-05, 1.987499999999906e-05, 1.9250000000001904e-05, 1.9292000000000614e-05, 1.9278000000001044e-05, 1.9263999999998005e-05, 1.9292000000000614e-05, 1.9263999999998005e-05, 1.9236000000002335e-05, 1.9278000000001044e-05, 1.9847999999999394e-05, 1.983300000000035e-05, 1.9277999999997575e-05, 1.9292000000000614e-05, 1.987499999999906e-05, 1.927700000000157e-05, 1.9901999999998726e-05, 1.929100000000114e-05, 1.9194000000000155e-05, 1.9278000000001044e-05, 1.930499999999724e-05, 1.9887999999999156e-05, 1.9292000000000614e-05, 1.9263999999998005e-05, 1.9306000000000184e-05, 1.92769999999981e-05, 1.930500000000071e-05, 1.9264000000001474e-05, 1.9916000000001766e-05, 1.987499999999906e-05, 1.9887999999999156e-05, 1.987499999999906e-05, 1.9278000000001044e-05, 1.9264000000001474e-05, 1.931900000000028e-05, 1.9278000000001044e-05, 1.990300000000167e-05, 1.9264000000001474e-05, 1.9278000000001044e-05, 1.9306000000000184e-05, 1.9264000000001474e-05, 1.9292000000000614e-05]</msg>
<status status="PASS" starttime="20201029 12:44:30.562" endtime="20201029 12:44:30.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.557" endtime="20201029 12:44:30.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:30.568" endtime="20201029 12:44:30.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.567" endtime="20201029 12:44:30.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.565" endtime="20201029 12:44:30.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.207" endtime="20201029 12:44:30.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.207" endtime="20201029 12:44:30.589"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.597" endtime="20201029 12:44:30.614"></status>
</kw>
<msg timestamp="20201029 12:44:30.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.596" endtime="20201029 12:44:30.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.615" endtime="20201029 12:44:30.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.618" endtime="20201029 12:44:30.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.593" endtime="20201029 12:44:30.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.591" endtime="20201029 12:44:30.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.627" endtime="20201029 12:44:30.913"></status>
</kw>
<msg timestamp="20201029 12:44:30.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022938611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022959681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.625" endtime="20201029 12:44:30.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022938611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022959681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.917" endtime="20201029 12:44:30.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.925" endtime="20201029 12:44:30.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.623" endtime="20201029 12:44:30.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.621" endtime="20201029 12:44:30.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.932" level="INFO">${RESULT} = [{'diff': 2.1069999999998035e-05}, {'diff': 2.0527999999998825e-05}, {'diff': 1.9929999999997866e-05}, {'diff': 2.0486000000000115e-05}, {'diff': 2.0458000000000975e-05}, {'diff': 1.987500000000253e-0...</msg>
<status status="PASS" starttime="20201029 12:44:30.929" endtime="20201029 12:44:30.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.936" level="INFO">${ACCURACY} = {'diff': [2.1069999999998035e-05, 2.0527999999998825e-05, 1.9929999999997866e-05, 2.0486000000000115e-05, 2.0458000000000975e-05, 1.987500000000253e-05, 2.048699999999959e-05, 2.0499999999999685e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:30.933" endtime="20201029 12:44:30.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.941" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.940" endtime="20201029 12:44:30.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.945" level="INFO">VALUE: [2.1069999999998035e-05, 2.0527999999998825e-05, 1.9929999999997866e-05, 2.0486000000000115e-05, 2.0458000000000975e-05, 1.987500000000253e-05, 2.048699999999959e-05, 2.0499999999999685e-05, 2.045900000000045e-05, 2.0472000000000545e-05, 2.0486000000000115e-05, 1.9887999999999156e-05, 2.0486000000000115e-05, 1.9944000000000905e-05, 2.0471999999997076e-05, 2.0472000000000545e-05, 2.04029999999987e-05, 2.1055999999998465e-05, 2.108299999999813e-05, 2.047300000000002e-05, 2.047300000000002e-05, 1.987499999999906e-05, 2.0472000000000545e-05, 2.045900000000045e-05, 2.0499999999999685e-05, 2.0499999999999685e-05, 2.0472000000000545e-05, 2.0458000000000975e-05, 2.048699999999959e-05, 2.0472000000000545e-05, 2.0486000000000115e-05, 2.0499999999999685e-05, 2.0499999999999685e-05, 2.0458000000000975e-05, 2.0499999999999685e-05, 1.994500000000038e-05, 3.0320000000000347e-05, 1.987499999999906e-05, 2.0486000000000115e-05, 2.0472000000000545e-05, 2.0486000000000115e-05, 1.988899999999863e-05, 2.0443999999997936e-05, 2.106899999999856e-05, 2.054100000000239e-05, 2.10830000000016e-05, 2.0472000000000545e-05, 2.0472000000000545e-05, 2.0499999999999685e-05, 1.98890000000021e-05]</msg>
<status status="PASS" starttime="20201029 12:44:30.943" endtime="20201029 12:44:30.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.937" endtime="20201029 12:44:30.946"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:30.950" endtime="20201029 12:44:30.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.949" endtime="20201029 12:44:30.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.948" endtime="20201029 12:44:30.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.590" endtime="20201029 12:44:30.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.589" endtime="20201029 12:44:30.971"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.980" endtime="20201029 12:44:30.995"></status>
</kw>
<msg timestamp="20201029 12:44:30.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.978" endtime="20201029 12:44:30.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.997" endtime="20201029 12:44:30.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.999" endtime="20201029 12:44:31.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.976" endtime="20201029 12:44:31.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.974" endtime="20201029 12:44:31.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.008" endtime="20201029 12:44:31.294"></status>
</kw>
<msg timestamp="20201029 12:44:31.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022193472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.007" endtime="20201029 12:44:31.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022193472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.299" endtime="20201029 12:44:31.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.307" endtime="20201029 12:44:31.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.004" endtime="20201029 12:44:31.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.002" endtime="20201029 12:44:31.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.314" level="INFO">${RESULT} = [{'diff': 2.108299999999813e-05}, {'diff': 2.108299999999813e-05}, {'diff': 2.1735999999997896e-05}, {'diff': 2.1098000000000644e-05}, {'diff': 2.116699999999902e-05}, {'diff': 2.1652000000000476e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:31.311" endtime="20201029 12:44:31.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:31.320" level="INFO">${ACCURACY} = {'diff': [2.108299999999813e-05, 2.108299999999813e-05, 2.1735999999997896e-05, 2.1098000000000644e-05, 2.116699999999902e-05, 2.1652000000000476e-05, 2.113899999999988e-05, 2.168099999999909e-05, 2.1...</msg>
<status status="PASS" starttime="20201029 12:44:31.315" endtime="20201029 12:44:31.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.326" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 12:44:31.324" endtime="20201029 12:44:31.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.329" level="INFO">VALUE: [2.108299999999813e-05, 2.108299999999813e-05, 2.1735999999997896e-05, 2.1098000000000644e-05, 2.116699999999902e-05, 2.1652000000000476e-05, 2.113899999999988e-05, 2.168099999999909e-05, 2.10830000000016e-05, 2.106899999999856e-05, 2.113899999999988e-05, 2.162499999999734e-05, 2.1679999999999616e-05, 2.1083999999997605e-05, 2.10830000000016e-05, 2.168099999999909e-05, 2.106900000000203e-05, 2.1084000000001074e-05, 2.1069999999998035e-05, 2.10830000000016e-05, 2.1069999999998035e-05, 2.169499999999866e-05, 2.1069999999998035e-05, 2.1112000000000214e-05, 2.106900000000203e-05, 2.109700000000117e-05, 2.111099999999727e-05, 2.1679999999999616e-05, 2.1055999999998465e-05, 2.168099999999909e-05, 2.10830000000016e-05, 2.169500000000213e-05, 2.1694000000002656e-05, 2.1027999999999325e-05, 2.170899999999823e-05, 2.166699999999952e-05, 2.109700000000117e-05, 2.1084000000001074e-05, 2.1694000000002656e-05, 2.108299999999813e-05, 2.104099999999942e-05, 2.1707999999998756e-05, 2.1084000000001074e-05, 2.108299999999813e-05, 2.1693999999999186e-05, 2.108299999999813e-05, 2.17090000000017e-05, 2.1041999999998895e-05, 2.168100000000256e-05, 2.1693999999999186e-05]</msg>
<status status="PASS" starttime="20201029 12:44:31.328" endtime="20201029 12:44:31.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.321" endtime="20201029 12:44:31.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:31.340" endtime="20201029 12:44:31.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.338" endtime="20201029 12:44:31.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.337" endtime="20201029 12:44:31.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.972" endtime="20201029 12:44:31.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.971" endtime="20201029 12:44:31.360"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.369" endtime="20201029 12:44:31.384"></status>
</kw>
<msg timestamp="20201029 12:44:31.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.367" endtime="20201029 12:44:31.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.386" endtime="20201029 12:44:31.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.388" endtime="20201029 12:44:31.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.365" endtime="20201029 12:44:31.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.363" endtime="20201029 12:44:31.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.397" endtime="20201029 12:44:31.696"></status>
</kw>
<msg timestamp="20201029 12:44:31.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02210725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:31.396" endtime="20201029 12:44:31.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02210725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:31.701" endtime="20201029 12:44:31.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.709" endtime="20201029 12:44:31.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.393" endtime="20201029 12:44:31.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.391" endtime="20201029 12:44:31.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.715" level="INFO">${RESULT} = [{'diff': 2.2278000000000575e-05}, {'diff': 2.287499999999859e-05}, {'diff': 2.2304999999996772e-05}, {'diff': 2.233299999999938e-05}, {'diff': 2.286100000000249e-05}, {'diff': 2.233299999999938e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:31.712" endtime="20201029 12:44:31.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:31.720" level="INFO">${ACCURACY} = {'diff': [2.2278000000000575e-05, 2.287499999999859e-05, 2.2304999999996772e-05, 2.233299999999938e-05, 2.286100000000249e-05, 2.233299999999938e-05, 2.2236000000001865e-05, 2.2958000000000006e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:44:31.716" endtime="20201029 12:44:31.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.724" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 12:44:31.723" endtime="20201029 12:44:31.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.727" level="INFO">VALUE: [2.2278000000000575e-05, 2.287499999999859e-05, 2.2304999999996772e-05, 2.233299999999938e-05, 2.286100000000249e-05, 2.233299999999938e-05, 2.2236000000001865e-05, 2.2958000000000006e-05, 2.2305999999999715e-05, 2.233299999999938e-05, 2.1708000000002226e-05, 2.231899999999981e-05, 2.1693999999999186e-05, 2.168099999999909e-05, 2.2292000000000145e-05, 2.29169999999973e-05, 2.2292000000000145e-05, 2.234699999999895e-05, 2.2292000000000145e-05, 2.1666000000000046e-05, 2.2292000000000145e-05, 2.169500000000213e-05, 2.229100000000067e-05, 2.2263999999997536e-05, 2.162500000000081e-05, 2.2305999999999715e-05, 2.237500000000156e-05, 2.2292000000000145e-05, 2.1693999999999186e-05, 2.2306000000003184e-05, 2.290299999999773e-05, 2.2278000000000575e-05, 2.2278000000000575e-05, 2.2278000000000575e-05, 2.22770000000011e-05, 2.169499999999866e-05, 2.29030000000012e-05, 2.169499999999866e-05, 2.2958000000000006e-05, 2.29030000000012e-05, 2.2277999999997106e-05, 2.229100000000067e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.29030000000012e-05, 2.2305999999999715e-05, 2.2292000000000145e-05, 2.233299999999938e-05, 2.288900000000163e-05]</msg>
<status status="PASS" starttime="20201029 12:44:31.725" endtime="20201029 12:44:31.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.720" endtime="20201029 12:44:31.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:31.731" endtime="20201029 12:44:31.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.730" endtime="20201029 12:44:31.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.729" endtime="20201029 12:44:31.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.361" endtime="20201029 12:44:31.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.360" endtime="20201029 12:44:31.752"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.761" endtime="20201029 12:44:31.777"></status>
</kw>
<msg timestamp="20201029 12:44:31.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.759" endtime="20201029 12:44:31.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.778" endtime="20201029 12:44:31.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.781" endtime="20201029 12:44:31.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.757" endtime="20201029 12:44:31.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.755" endtime="20201029 12:44:31.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.790" endtime="20201029 12:44:32.076"></status>
</kw>
<msg timestamp="20201029 12:44:32.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022976278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022999236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.788" endtime="20201029 12:44:32.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022976278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022999236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.080" endtime="20201029 12:44:32.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.088" endtime="20201029 12:44:32.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.786" endtime="20201029 12:44:32.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.784" endtime="20201029 12:44:32.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:32.095" level="INFO">${RESULT} = [{'diff': 2.2958000000000006e-05}, {'diff': 2.287499999999859e-05}, {'diff': 2.288900000000163e-05}, {'diff': 2.3499999999999216e-05}, {'diff': 2.3527999999998356e-05}, {'diff': 2.2930000000000866e-05...</msg>
<status status="PASS" starttime="20201029 12:44:32.092" endtime="20201029 12:44:32.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:32.099" level="INFO">${ACCURACY} = {'diff': [2.2958000000000006e-05, 2.287499999999859e-05, 2.288900000000163e-05, 2.3499999999999216e-05, 2.3527999999998356e-05, 2.2930000000000866e-05, 2.3499999999999216e-05, 2.412499999999984e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:44:32.096" endtime="20201029 12:44:32.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.104" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 12:44:32.103" endtime="20201029 12:44:32.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.107" level="INFO">VALUE: [2.2958000000000006e-05, 2.287499999999859e-05, 2.288900000000163e-05, 2.3499999999999216e-05, 2.3527999999998356e-05, 2.2930000000000866e-05, 2.3499999999999216e-05, 2.412499999999984e-05, 2.3514000000002255e-05, 2.3542000000001395e-05, 2.2929999999997397e-05, 2.3500000000002685e-05, 2.3499999999999216e-05, 2.3499999999999216e-05, 2.290299999999773e-05, 2.2833999999999355e-05, 2.3500000000002685e-05, 2.3499999999999216e-05, 2.344500000000041e-05, 2.3513999999998786e-05, 2.413899999999941e-05, 2.29030000000012e-05, 2.3542000000001395e-05, 2.290299999999773e-05, 2.286100000000249e-05, 2.291700000000077e-05, 2.3485999999999646e-05, 2.3499999999999216e-05, 2.341700000000127e-05, 2.290299999999773e-05, 2.2944000000000436e-05, 2.287500000000206e-05, 2.3499999999999216e-05, 2.3513999999998786e-05, 2.29030000000012e-05, 2.3570000000000535e-05, 2.291700000000077e-05, 2.288900000000163e-05, 2.412499999999984e-05, 2.3526999999998882e-05, 2.4096999999997232e-05, 2.281900000000031e-05, 2.3485999999999646e-05, 2.3528000000001825e-05, 2.3499999999999216e-05, 2.3499999999999216e-05, 2.3485999999999646e-05, 2.3513999999998786e-05, 2.40970000000007e-05, 2.40970000000007e-05]</msg>
<status status="PASS" starttime="20201029 12:44:32.105" endtime="20201029 12:44:32.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.100" endtime="20201029 12:44:32.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:32.112" endtime="20201029 12:44:32.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.110" endtime="20201029 12:44:32.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.109" endtime="20201029 12:44:32.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.753" endtime="20201029 12:44:32.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.753" endtime="20201029 12:44:32.133"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.141" endtime="20201029 12:44:32.156"></status>
</kw>
<msg timestamp="20201029 12:44:32.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.140" endtime="20201029 12:44:32.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.158" endtime="20201029 12:44:32.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.160" endtime="20201029 12:44:32.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.137" endtime="20201029 12:44:32.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.135" endtime="20201029 12:44:32.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.169" endtime="20201029 12:44:32.475"></status>
</kw>
<msg timestamp="20201029 12:44:32.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.168" endtime="20201029 12:44:32.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.479" endtime="20201029 12:44:32.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.488" endtime="20201029 12:44:32.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.165" endtime="20201029 12:44:32.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.164" endtime="20201029 12:44:32.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:32.495" level="INFO">${RESULT} = [{'diff': 2.4693999999998717e-05}, {'diff': 2.4708000000001756e-05}, {'diff': 2.4679999999999147e-05}, {'diff': 2.4707999999998287e-05}, {'diff': 2.4707999999998287e-05}, {'diff': 2.411100000000027e-0...</msg>
<status status="PASS" starttime="20201029 12:44:32.492" endtime="20201029 12:44:32.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:32.500" level="INFO">${ACCURACY} = {'diff': [2.4693999999998717e-05, 2.4708000000001756e-05, 2.4679999999999147e-05, 2.4707999999998287e-05, 2.4707999999998287e-05, 2.411100000000027e-05, 2.4070000000001035e-05, 2.466699999999905e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:32.496" endtime="20201029 12:44:32.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.505" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 12:44:32.504" endtime="20201029 12:44:32.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.507" level="INFO">VALUE: [2.4693999999998717e-05, 2.4708000000001756e-05, 2.4679999999999147e-05, 2.4707999999998287e-05, 2.4707999999998287e-05, 2.411100000000027e-05, 2.4070000000001035e-05, 2.466699999999905e-05, 2.4096999999997232e-05, 2.411100000000027e-05, 2.4693999999998717e-05, 2.4056000000001465e-05, 2.415299999999898e-05, 2.412499999999984e-05, 2.40970000000007e-05, 2.411100000000027e-05, 2.4708000000001756e-05, 2.469500000000166e-05, 2.411100000000027e-05, 2.4708000000001756e-05, 2.416699999999855e-05, 2.4111999999999745e-05, 2.4707999999998287e-05, 2.415299999999898e-05, 2.413900000000288e-05, 2.4082999999997662e-05, 2.470900000000123e-05, 2.4722000000001326e-05, 2.4708000000001756e-05, 2.406900000000156e-05, 2.4068999999998092e-05, 2.4707999999998287e-05, 2.470900000000123e-05, 2.41109999999968e-05, 2.4708000000001756e-05, 2.4098000000000175e-05, 2.41109999999968e-05, 2.4111999999999745e-05, 2.408300000000113e-05, 2.412499999999984e-05, 2.406900000000156e-05, 2.4082999999997662e-05, 2.408300000000113e-05, 2.41109999999968e-05, 2.4707999999998287e-05, 2.4694000000002186e-05, 2.4693999999998717e-05, 2.4708000000001756e-05, 2.465299999999948e-05, 2.4707999999998287e-05]</msg>
<status status="PASS" starttime="20201029 12:44:32.506" endtime="20201029 12:44:32.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.501" endtime="20201029 12:44:32.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:32.512" endtime="20201029 12:44:32.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.511" endtime="20201029 12:44:32.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.510" endtime="20201029 12:44:32.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.134" endtime="20201029 12:44:32.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.133" endtime="20201029 12:44:32.533"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.542" endtime="20201029 12:44:32.557"></status>
</kw>
<msg timestamp="20201029 12:44:32.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.540" endtime="20201029 12:44:32.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.558" endtime="20201029 12:44:32.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.561" endtime="20201029 12:44:32.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.537" endtime="20201029 12:44:32.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.535" endtime="20201029 12:44:32.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.570" endtime="20201029 12:44:32.859"></status>
</kw>
<msg timestamp="20201029 12:44:32.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.568" endtime="20201029 12:44:32.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.863" endtime="20201029 12:44:32.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.871" endtime="20201029 12:44:32.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.566" endtime="20201029 12:44:32.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.564" endtime="20201029 12:44:32.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:32.878" level="INFO">${RESULT} = [{'diff': 2.5915999999997358e-05}, {'diff': 2.4722000000001326e-05}, {'diff': 2.5291999999999676e-05}, {'diff': 2.5332999999998912e-05}, {'diff': 2.5943999999999967e-05}, {'diff': 2.5305999999999246e-...</msg>
<status status="PASS" starttime="20201029 12:44:32.875" endtime="20201029 12:44:32.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:32.882" level="INFO">${ACCURACY} = {'diff': [2.5915999999997358e-05, 2.4722000000001326e-05, 2.5291999999999676e-05, 2.5332999999998912e-05, 2.5943999999999967e-05, 2.5305999999999246e-05, 2.5278000000000106e-05, 2.469499999999819e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:32.879" endtime="20201029 12:44:32.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.887" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 12:44:32.886" endtime="20201029 12:44:32.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.889" level="INFO">VALUE: [2.5915999999997358e-05, 2.4722000000001326e-05, 2.5291999999999676e-05, 2.5332999999998912e-05, 2.5943999999999967e-05, 2.5305999999999246e-05, 2.5278000000000106e-05, 2.469499999999819e-05, 2.5278000000000106e-05, 2.5250000000000966e-05, 2.47230000000008e-05, 2.533300000000238e-05, 2.531900000000281e-05, 2.59170000000003e-05, 2.593099999999987e-05, 2.5249999999997497e-05, 2.4679999999999147e-05, 2.5318999999999342e-05, 2.470899999999776e-05, 2.5304999999999772e-05, 2.5306000000002715e-05, 2.5318999999999342e-05, 2.5930000000000397e-05, 2.5305999999999246e-05, 2.470900000000123e-05, 2.5318999999999342e-05, 2.5291000000000202e-05, 2.5304999999999772e-05, 2.4708000000001756e-05, 2.5305999999999246e-05, 2.5305999999999246e-05, 2.5319999999998816e-05, 2.536100000000152e-05, 2.5304999999999772e-05, 2.4708000000001756e-05, 2.5332999999998912e-05, 2.5291999999999676e-05, 2.5277000000000632e-05, 2.5264000000000536e-05, 2.5291999999999676e-05, 2.468100000000209e-05, 2.5318999999999342e-05, 2.5333999999998386e-05, 2.5291000000000202e-05, 2.59170000000003e-05, 2.5305999999999246e-05, 2.59170000000003e-05, 2.5235999999997927e-05, 2.5305999999999246e-05, 2.470899999999776e-05]</msg>
<status status="PASS" starttime="20201029 12:44:32.888" endtime="20201029 12:44:32.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.883" endtime="20201029 12:44:32.891"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:32.895" endtime="20201029 12:44:32.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.894" endtime="20201029 12:44:32.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.893" endtime="20201029 12:44:32.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.534" endtime="20201029 12:44:32.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.533" endtime="20201029 12:44:32.916"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.924" endtime="20201029 12:44:32.941"></status>
</kw>
<msg timestamp="20201029 12:44:32.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.923" endtime="20201029 12:44:32.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.942" endtime="20201029 12:44:32.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.945" endtime="20201029 12:44:32.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.920" endtime="20201029 12:44:32.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.918" endtime="20201029 12:44:32.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.954" endtime="20201029 12:44:33.239"></status>
</kw>
<msg timestamp="20201029 12:44:33.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022811847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.952" endtime="20201029 12:44:33.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022811847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.244" endtime="20201029 12:44:33.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.252" endtime="20201029 12:44:33.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.950" endtime="20201029 12:44:33.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.948" endtime="20201029 12:44:33.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:33.259" level="INFO">${RESULT} = [{'diff': 2.593099999999987e-05}, {'diff': 2.5930000000000397e-05}, {'diff': 2.6513999999998317e-05}, {'diff': 2.5943999999999967e-05}, {'diff': 2.5916000000000827e-05}, {'diff': 2.6514000000001786e-0...</msg>
<status status="PASS" starttime="20201029 12:44:33.255" endtime="20201029 12:44:33.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:33.263" level="INFO">${ACCURACY} = {'diff': [2.593099999999987e-05, 2.5930000000000397e-05, 2.6513999999998317e-05, 2.5943999999999967e-05, 2.5916000000000827e-05, 2.6514000000001786e-05, 2.59170000000003e-05, 2.6527999999997887e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:44:33.260" endtime="20201029 12:44:33.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.267" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 12:44:33.266" endtime="20201029 12:44:33.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.270" level="INFO">VALUE: [2.593099999999987e-05, 2.5930000000000397e-05, 2.6513999999998317e-05, 2.5943999999999967e-05, 2.5916000000000827e-05, 2.6514000000001786e-05, 2.59170000000003e-05, 2.6527999999997887e-05, 2.6513999999998317e-05, 2.6514000000001786e-05, 2.6527000000001882e-05, 2.6527000000001882e-05, 2.6500000000002216e-05, 2.6486000000002646e-05, 2.5916000000000827e-05, 2.594499999999944e-05, 2.6526999999998413e-05, 2.6514000000001786e-05, 2.6542000000000926e-05, 2.6541999999997457e-05, 2.59170000000003e-05, 2.6444000000000467e-05, 2.5930000000000397e-05, 2.6527999999997887e-05, 2.5916000000000827e-05, 2.5916000000000827e-05, 2.6513999999998317e-05, 2.6528000000001356e-05, 2.6471999999999607e-05, 2.6528000000001356e-05, 2.6528000000001356e-05, 2.6528000000001356e-05, 2.6514000000001786e-05, 2.6528000000001356e-05, 2.6514000000001786e-05, 2.7138999999998942e-05, 2.6500000000002216e-05, 2.6514000000001786e-05, 2.6542000000000926e-05, 2.6485999999999177e-05, 2.6542000000000926e-05, 2.6499999999998747e-05, 2.5930000000000397e-05, 2.6527999999997887e-05, 2.6514000000001786e-05, 2.6555999999997026e-05, 2.6528000000001356e-05, 2.6542000000000926e-05, 2.5957999999999537e-05, 2.5971999999999107e-05]</msg>
<status status="PASS" starttime="20201029 12:44:33.268" endtime="20201029 12:44:33.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.264" endtime="20201029 12:44:33.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:33.275" endtime="20201029 12:44:33.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.274" endtime="20201029 12:44:33.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.273" endtime="20201029 12:44:33.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.917" endtime="20201029 12:44:33.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.916" endtime="20201029 12:44:33.296"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.305" endtime="20201029 12:44:33.321"></status>
</kw>
<msg timestamp="20201029 12:44:33.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.303" endtime="20201029 12:44:33.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.322" endtime="20201029 12:44:33.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.325" endtime="20201029 12:44:33.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.300" endtime="20201029 12:44:33.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.298" endtime="20201029 12:44:33.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.334" endtime="20201029 12:44:33.620"></status>
</kw>
<msg timestamp="20201029 12:44:33.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022408847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.332" endtime="20201029 12:44:33.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022408847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.624" endtime="20201029 12:44:33.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.632" endtime="20201029 12:44:33.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.330" endtime="20201029 12:44:33.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.328" endtime="20201029 12:44:33.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:33.639" level="INFO">${RESULT} = [{'diff': 2.7124999999999372e-05}, {'diff': 2.7110999999999802e-05}, {'diff': 2.713900000000241e-05}, {'diff': 2.7805999999998277e-05}, {'diff': 2.7722000000000857e-05}, {'diff': 2.718100000000112e-05...</msg>
<status status="PASS" starttime="20201029 12:44:33.636" endtime="20201029 12:44:33.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:33.644" level="INFO">${ACCURACY} = {'diff': [2.7124999999999372e-05, 2.7110999999999802e-05, 2.713900000000241e-05, 2.7805999999998277e-05, 2.7722000000000857e-05, 2.718100000000112e-05, 2.7778000000002606e-05, 2.7736000000000427e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:33.640" endtime="20201029 12:44:33.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.649" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 12:44:33.648" endtime="20201029 12:44:33.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.651" level="INFO">VALUE: [2.7124999999999372e-05, 2.7110999999999802e-05, 2.713900000000241e-05, 2.7805999999998277e-05, 2.7722000000000857e-05, 2.718100000000112e-05, 2.7778000000002606e-05, 2.7736000000000427e-05, 2.7124999999999372e-05, 2.7722000000000857e-05, 2.7097000000000232e-05, 2.7138999999998942e-05, 2.7721999999997388e-05, 2.7083000000000662e-05, 2.7124999999999372e-05, 2.7124999999999372e-05, 2.713900000000241e-05, 2.7708000000001287e-05, 2.712500000000284e-05, 2.7084000000000136e-05, 2.712500000000284e-05, 2.7722000000000857e-05, 2.7749999999999997e-05, 2.7749999999999997e-05, 2.7736000000000427e-05, 2.7124999999999372e-05, 2.7805999999998277e-05, 2.7736000000000427e-05, 2.7124999999999372e-05, 2.7124999999999372e-05, 2.7110999999999802e-05, 2.7110999999999802e-05, 2.7694000000001717e-05, 2.7124999999999372e-05, 2.712500000000284e-05, 2.7180000000001647e-05, 2.712500000000284e-05, 2.7749999999999997e-05, 2.7138999999998942e-05, 2.7180000000001647e-05, 2.7736000000000427e-05, 2.7124999999999372e-05, 2.7124999999999372e-05, 2.7693999999998248e-05, 2.7124999999999372e-05, 2.7736000000000427e-05, 2.7722000000000857e-05, 2.7110999999999802e-05, 2.7721999999997388e-05, 2.7111999999999276e-05]</msg>
<status status="PASS" starttime="20201029 12:44:33.650" endtime="20201029 12:44:33.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.645" endtime="20201029 12:44:33.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:33.656" endtime="20201029 12:44:33.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.655" endtime="20201029 12:44:33.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.654" endtime="20201029 12:44:33.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.297" endtime="20201029 12:44:33.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.296" endtime="20201029 12:44:33.677"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.686" endtime="20201029 12:44:33.701"></status>
</kw>
<msg timestamp="20201029 12:44:33.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.684" endtime="20201029 12:44:33.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.703" endtime="20201029 12:44:33.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.706" endtime="20201029 12:44:33.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.681" endtime="20201029 12:44:33.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.679" endtime="20201029 12:44:33.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.715" endtime="20201029 12:44:34.017"></status>
</kw>
<msg timestamp="20201029 12:44:34.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022117764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022146083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.713" endtime="20201029 12:44:34.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022117764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022146083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.022" endtime="20201029 12:44:34.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.030" endtime="20201029 12:44:34.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.710" endtime="20201029 12:44:34.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.709" endtime="20201029 12:44:34.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:34.037" level="INFO">${RESULT} = [{'diff': 2.8318999999998873e-05}, {'diff': 2.8389000000000192e-05}, {'diff': 2.8332999999998443e-05}, {'diff': 2.8402999999999762e-05}, {'diff': 2.8332999999998443e-05}, {'diff': 2.7736000000000427e-...</msg>
<status status="PASS" starttime="20201029 12:44:34.033" endtime="20201029 12:44:34.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:34.041" level="INFO">${ACCURACY} = {'diff': [2.8318999999998873e-05, 2.8389000000000192e-05, 2.8332999999998443e-05, 2.8402999999999762e-05, 2.8332999999998443e-05, 2.7736000000000427e-05, 2.8318999999998873e-05, 2.895899999999854e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:34.038" endtime="20201029 12:44:34.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.046" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 12:44:34.044" endtime="20201029 12:44:34.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.048" level="INFO">VALUE: [2.8318999999998873e-05, 2.8389000000000192e-05, 2.8332999999998443e-05, 2.8402999999999762e-05, 2.8332999999998443e-05, 2.7736000000000427e-05, 2.8318999999998873e-05, 2.895899999999854e-05, 2.8290999999999733e-05, 2.8374999999997152e-05, 2.8929999999999928e-05, 2.8318999999998873e-05, 2.8318999999998873e-05, 2.8333000000001912e-05, 2.8347000000001482e-05, 2.772300000000033e-05, 2.89309999999994e-05, 2.8320000000001816e-05, 2.7638999999999442e-05, 2.8348000000000956e-05, 2.7736000000000427e-05, 2.768100000000162e-05, 2.8388000000000718e-05, 2.8319999999998346e-05, 2.8334000000001386e-05, 2.8929999999999928e-05, 2.8348000000000956e-05, 2.8320000000001816e-05, 2.8346999999998013e-05, 2.8291999999999207e-05, 2.7777999999999137e-05, 2.770900000000076e-05, 2.897300000000158e-05, 2.8333000000001912e-05, 2.8319999999998346e-05, 2.768099999999815e-05, 2.8346999999998013e-05, 2.8347000000001482e-05, 2.8304999999999303e-05, 2.7749999999999997e-05, 2.7722000000000857e-05, 2.897300000000158e-05, 2.8929999999999928e-05, 2.8334000000001386e-05, 2.8320000000001816e-05, 2.7736000000000427e-05, 2.7736000000000427e-05, 2.7722000000000857e-05, 2.772299999999686e-05, 2.8334000000001386e-05]</msg>
<status status="PASS" starttime="20201029 12:44:34.047" endtime="20201029 12:44:34.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.042" endtime="20201029 12:44:34.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:34.053" endtime="20201029 12:44:34.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.052" endtime="20201029 12:44:34.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.050" endtime="20201029 12:44:34.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.678" endtime="20201029 12:44:34.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.677" endtime="20201029 12:44:34.074"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.083" endtime="20201029 12:44:34.099"></status>
</kw>
<msg timestamp="20201029 12:44:34.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.081" endtime="20201029 12:44:34.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.101" endtime="20201029 12:44:34.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.103" endtime="20201029 12:44:34.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.078" endtime="20201029 12:44:34.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.076" endtime="20201029 12:44:34.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.112" endtime="20201029 12:44:34.399"></status>
</kw>
<msg timestamp="20201029 12:44:34.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023046403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023075958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.111" endtime="20201029 12:44:34.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023046403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023075958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.404" endtime="20201029 12:44:34.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.412" endtime="20201029 12:44:34.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.108" endtime="20201029 12:44:34.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.106" endtime="20201029 12:44:34.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:34.419" level="INFO">${RESULT} = [{'diff': 2.9555000000000553e-05}, {'diff': 2.9556000000000027e-05}, {'diff': 2.9527999999997417e-05}, {'diff': 2.9556000000000027e-05}, {'diff': 2.9528000000000887e-05}, {'diff': 2.9541000000000983e-...</msg>
<status status="PASS" starttime="20201029 12:44:34.415" endtime="20201029 12:44:34.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:34.423" level="INFO">${ACCURACY} = {'diff': [2.9555000000000553e-05, 2.9556000000000027e-05, 2.9527999999997417e-05, 2.9556000000000027e-05, 2.9528000000000887e-05, 2.9541000000000983e-05, 2.8916999999999832e-05, 2.8957999999999068e-05...</msg>
<status status="PASS" starttime="20201029 12:44:34.420" endtime="20201029 12:44:34.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.428" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 12:44:34.427" endtime="20201029 12:44:34.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.430" level="INFO">VALUE: [2.9555000000000553e-05, 2.9556000000000027e-05, 2.9527999999997417e-05, 2.9556000000000027e-05, 2.9528000000000887e-05, 2.9541000000000983e-05, 2.8916999999999832e-05, 2.8957999999999068e-05, 2.9541000000000983e-05, 2.8943999999999498e-05, 2.893100000000287e-05, 2.9569000000000123e-05, 2.8971999999998638e-05, 2.9542000000000457e-05, 2.9556000000000027e-05, 2.9527000000001413e-05, 2.8929999999999928e-05, 2.9556000000000027e-05, 2.8943999999999498e-05, 2.9556000000000027e-05, 2.89309999999994e-05, 2.8874999999997653e-05, 2.9569999999999597e-05, 2.894500000000244e-05, 2.9542000000000457e-05, 2.9528000000000887e-05, 2.894499999999897e-05, 2.8943999999999498e-05, 2.9556000000000027e-05, 2.8943999999999498e-05, 2.9542000000000457e-05, 2.9556000000000027e-05, 2.89309999999994e-05, 2.9556000000000027e-05, 2.9541000000000983e-05, 2.8943999999999498e-05, 2.895899999999854e-05, 2.8929999999999928e-05, 2.9554999999997084e-05, 2.9569999999999597e-05, 2.9528000000000887e-05, 2.9556000000000027e-05, 2.9528000000000887e-05, 2.893100000000287e-05, 2.8958000000002537e-05, 2.9027999999996917e-05, 2.894500000000244e-05, 2.8971999999998638e-05, 2.9555000000000553e-05, 2.9542000000000457e-05]</msg>
<status status="PASS" starttime="20201029 12:44:34.429" endtime="20201029 12:44:34.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.424" endtime="20201029 12:44:34.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:34.436" endtime="20201029 12:44:34.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.434" endtime="20201029 12:44:34.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.433" endtime="20201029 12:44:34.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.075" endtime="20201029 12:44:34.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.074" endtime="20201029 12:44:34.457"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.465" endtime="20201029 12:44:34.482"></status>
</kw>
<msg timestamp="20201029 12:44:34.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.464" endtime="20201029 12:44:34.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.483" endtime="20201029 12:44:34.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.486" endtime="20201029 12:44:34.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.461" endtime="20201029 12:44:34.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.459" endtime="20201029 12:44:34.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.495" endtime="20201029 12:44:34.781"></status>
</kw>
<msg timestamp="20201029 12:44:34.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.494" endtime="20201029 12:44:34.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.785" endtime="20201029 12:44:34.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.794" endtime="20201029 12:44:34.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.491" endtime="20201029 12:44:34.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.489" endtime="20201029 12:44:34.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:34.800" level="INFO">${RESULT} = [{'diff': 3.074999999999953e-05}, {'diff': 3.0166999999997612e-05}, {'diff': 3.015199999999857e-05}, {'diff': 3.079200000000171e-05}, {'diff': 3.074999999999953e-05}, {'diff': 3.074999999999953e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:34.797" endtime="20201029 12:44:34.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:34.805" level="INFO">${ACCURACY} = {'diff': [3.074999999999953e-05, 3.0166999999997612e-05, 3.015199999999857e-05, 3.079200000000171e-05, 3.074999999999953e-05, 3.074999999999953e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0...</msg>
<status status="PASS" starttime="20201029 12:44:34.801" endtime="20201029 12:44:34.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.810" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 12:44:34.809" endtime="20201029 12:44:34.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.813" level="INFO">VALUE: [3.074999999999953e-05, 3.0166999999997612e-05, 3.015199999999857e-05, 3.079200000000171e-05, 3.074999999999953e-05, 3.074999999999953e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.017999999999771e-05, 3.0152000000002038e-05, 3.0139000000001942e-05, 3.0750000000003e-05, 3.0153000000001512e-05, 3.0152000000002038e-05, 3.074999999999953e-05, 3.0152999999998042e-05, 3.0166000000001608e-05, 3.0167000000001082e-05, 3.0139000000001942e-05, 3.0762999999999624e-05, 3.0153000000001512e-05, 3.074999999999953e-05, 3.0278000000001637e-05, 3.0221999999999888e-05, 3.0750000000003e-05, 3.0139000000001942e-05, 3.077799999999867e-05, 3.07639999999991e-05, 3.074999999999953e-05, 3.0110999999999333e-05, 3.0124999999998903e-05, 3.0097000000003232e-05, 3.015199999999857e-05, 3.0111000000002802e-05, 3.0153000000001512e-05, 3.074999999999953e-05, 3.0166999999997612e-05, 3.0138999999998473e-05, 3.0152999999998042e-05, 3.0138999999998473e-05, 3.0139000000001942e-05, 3.074999999999953e-05, 3.0221999999999888e-05, 3.019500000000022e-05, 3.0152000000002038e-05, 3.070800000000082e-05, 3.070900000000029e-05, 3.015199999999857e-05, 3.0125000000002372e-05, 3.0138999999998473e-05]</msg>
<status status="PASS" starttime="20201029 12:44:34.811" endtime="20201029 12:44:34.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.806" endtime="20201029 12:44:34.814"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:34.818" endtime="20201029 12:44:34.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.816" endtime="20201029 12:44:34.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.815" endtime="20201029 12:44:34.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.458" endtime="20201029 12:44:34.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.457" endtime="20201029 12:44:34.838"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.847" endtime="20201029 12:44:34.863"></status>
</kw>
<msg timestamp="20201029 12:44:34.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.846" endtime="20201029 12:44:34.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.864" endtime="20201029 12:44:34.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.867" endtime="20201029 12:44:34.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.843" endtime="20201029 12:44:34.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.841" endtime="20201029 12:44:34.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.876" endtime="20201029 12:44:35.163"></status>
</kw>
<msg timestamp="20201029 12:44:35.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022573361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022605333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.874" endtime="20201029 12:44:35.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022573361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022605333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.167" endtime="20201029 12:44:35.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.176" endtime="20201029 12:44:35.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.872" endtime="20201029 12:44:35.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.870" endtime="20201029 12:44:35.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:35.182" level="INFO">${RESULT} = [{'diff': 3.197199999999817e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.197200000000164e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.19449999999985e-05}, {'diff': 3.136100000000058e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:35.179" endtime="20201029 12:44:35.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:35.186" level="INFO">${ACCURACY} = {'diff': [3.197199999999817e-05, 3.137500000000015e-05, 3.197200000000164e-05, 3.137500000000015e-05, 3.19449999999985e-05, 3.136100000000058e-05, 3.133300000000144e-05, 3.136100000000058e-05, 3.07499...</msg>
<status status="PASS" starttime="20201029 12:44:35.183" endtime="20201029 12:44:35.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.191" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 12:44:35.190" endtime="20201029 12:44:35.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.194" level="INFO">VALUE: [3.197199999999817e-05, 3.137500000000015e-05, 3.197200000000164e-05, 3.137500000000015e-05, 3.19449999999985e-05, 3.136100000000058e-05, 3.133300000000144e-05, 3.136100000000058e-05, 3.074999999999953e-05, 3.193099999999893e-05, 3.142999999999896e-05, 3.140199999999982e-05, 3.137500000000015e-05, 3.073599999999996e-05, 3.07639999999991e-05, 3.1348000000000487e-05, 3.077800000000214e-05, 3.195899999999807e-05, 3.134700000000101e-05, 3.1348000000000487e-05, 3.195900000000154e-05, 3.197199999999817e-05, 3.074999999999953e-05, 3.140299999999929e-05, 3.134700000000101e-05, 3.074999999999953e-05, 3.1360999999997113e-05, 3.070800000000082e-05, 3.141699999999886e-05, 3.074999999999953e-05, 3.137500000000015e-05, 3.198600000000121e-05, 3.077800000000214e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.136100000000058e-05, 3.1362000000000056e-05, 3.134799999999702e-05, 3.1360999999997113e-05, 3.127799999999917e-05, 3.136100000000058e-05, 3.1346999999997543e-05, 3.074999999999953e-05, 3.136100000000058e-05, 3.136100000000058e-05, 3.140299999999929e-05, 3.201400000000035e-05, 3.1360999999997113e-05, 3.073599999999996e-05, 3.197200000000164e-05]</msg>
<status status="PASS" starttime="20201029 12:44:35.192" endtime="20201029 12:44:35.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.187" endtime="20201029 12:44:35.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:35.199" endtime="20201029 12:44:35.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.197" endtime="20201029 12:44:35.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.196" endtime="20201029 12:44:35.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.839" endtime="20201029 12:44:35.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.838" endtime="20201029 12:44:35.219"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.228" endtime="20201029 12:44:35.245"></status>
</kw>
<msg timestamp="20201029 12:44:35.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.226" endtime="20201029 12:44:35.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.247" endtime="20201029 12:44:35.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.249" endtime="20201029 12:44:35.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.224" endtime="20201029 12:44:35.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.222" endtime="20201029 12:44:35.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.258" endtime="20201029 12:44:35.546"></status>
</kw>
<msg timestamp="20201029 12:44:35.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023461528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023494083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.257" endtime="20201029 12:44:35.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023461528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023494083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.550" endtime="20201029 12:44:35.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.558" endtime="20201029 12:44:35.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.254" endtime="20201029 12:44:35.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.253" endtime="20201029 12:44:35.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:35.565" level="INFO">${RESULT} = [{'diff': 3.2555000000000084e-05}, {'diff': 3.2596999999998794e-05}, {'diff': 3.197299999999764e-05}, {'diff': 3.195800000000207e-05}, {'diff': 3.2582999999999224e-05}, {'diff': 3.194399999999903e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:35.562" endtime="20201029 12:44:35.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:35.569" level="INFO">${ACCURACY} = {'diff': [3.2555000000000084e-05, 3.2596999999998794e-05, 3.197299999999764e-05, 3.195800000000207e-05, 3.2582999999999224e-05, 3.194399999999903e-05, 3.197200000000164e-05, 3.255599999999956e-05, 3.2...</msg>
<status status="PASS" starttime="20201029 12:44:35.566" endtime="20201029 12:44:35.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.573" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 12:44:35.572" endtime="20201029 12:44:35.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.577" level="INFO">VALUE: [3.2555000000000084e-05, 3.2596999999998794e-05, 3.197299999999764e-05, 3.195800000000207e-05, 3.2582999999999224e-05, 3.194399999999903e-05, 3.197200000000164e-05, 3.255599999999956e-05, 3.2568999999999654e-05, 3.2582999999999224e-05, 3.2555000000000084e-05, 3.255599999999956e-05, 3.2568999999999654e-05, 3.195800000000207e-05, 3.195900000000154e-05, 3.190200000000032e-05, 3.19579999999986e-05, 3.251400000000085e-05, 3.198599999999774e-05, 3.255599999999956e-05, 3.25700000000026e-05, 3.2568999999999654e-05, 3.197300000000111e-05, 3.198600000000121e-05, 3.201400000000035e-05, 3.2582999999999224e-05, 3.197199999999817e-05, 3.2568999999999654e-05, 3.255600000000303e-05, 3.250000000000128e-05, 3.19579999999986e-05, 3.194500000000197e-05, 3.198600000000121e-05, 3.198600000000121e-05, 3.2582999999999224e-05, 3.2555000000000084e-05, 3.198600000000121e-05, 3.201400000000035e-05, 3.255599999999956e-05, 3.259799999999827e-05, 3.197300000000111e-05, 3.2610999999998364e-05, 3.195899999999807e-05, 3.2568999999999654e-05, 3.200000000000078e-05, 3.255600000000303e-05, 3.195800000000207e-05, 3.2582999999999224e-05, 3.2555000000000084e-05, 3.2568999999999654e-05]</msg>
<status status="PASS" starttime="20201029 12:44:35.575" endtime="20201029 12:44:35.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.570" endtime="20201029 12:44:35.578"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:35.582" endtime="20201029 12:44:35.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.580" endtime="20201029 12:44:35.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.579" endtime="20201029 12:44:35.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.220" endtime="20201029 12:44:35.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.220" endtime="20201029 12:44:35.603"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.611" endtime="20201029 12:44:35.627"></status>
</kw>
<msg timestamp="20201029 12:44:35.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.610" endtime="20201029 12:44:35.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.628" endtime="20201029 12:44:35.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.631" endtime="20201029 12:44:35.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.607" endtime="20201029 12:44:35.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.605" endtime="20201029 12:44:35.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.640" endtime="20201029 12:44:35.926"></status>
</kw>
<msg timestamp="20201029 12:44:35.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.638" endtime="20201029 12:44:35.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.930" endtime="20201029 12:44:35.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.938" endtime="20201029 12:44:35.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.636" endtime="20201029 12:44:35.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.634" endtime="20201029 12:44:35.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:35.945" level="INFO">${RESULT} = [{'diff': 3.37779999999982e-05}, {'diff': 3.3138999999998e-05}, {'diff': 3.316599999999767e-05}, {'diff': 3.37779999999982e-05}, {'diff': 3.315299999999757e-05}, {'diff': 3.316699999999714e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:44:35.941" endtime="20201029 12:44:35.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:35.950" level="INFO">${ACCURACY} = {'diff': [3.37779999999982e-05, 3.3138999999998e-05, 3.316599999999767e-05, 3.37779999999982e-05, 3.315299999999757e-05, 3.316699999999714e-05, 3.379199999999777e-05, 3.369400000000078e-05, 3.37640000...</msg>
<status status="PASS" starttime="20201029 12:44:35.946" endtime="20201029 12:44:35.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.954" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 12:44:35.953" endtime="20201029 12:44:35.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.957" level="INFO">VALUE: [3.37779999999982e-05, 3.3138999999998e-05, 3.316599999999767e-05, 3.37779999999982e-05, 3.315299999999757e-05, 3.316699999999714e-05, 3.379199999999777e-05, 3.369400000000078e-05, 3.37640000000021e-05, 3.316600000000114e-05, 3.318000000000071e-05, 3.3124999999998433e-05, 3.3138999999998e-05, 3.318100000000018e-05, 3.37640000000021e-05, 3.316600000000114e-05, 3.3762999999999155e-05, 3.316700000000061e-05, 3.374999999999906e-05, 3.311100000000233e-05, 3.250000000000128e-05, 3.316700000000061e-05, 3.3096999999999294e-05, 3.318000000000071e-05, 3.3819000000000904e-05, 3.37779999999982e-05, 3.315300000000104e-05, 3.380599999999734e-05, 3.315300000000104e-05, 3.318100000000018e-05, 3.3847000000000044e-05, 3.315299999999757e-05, 3.318000000000071e-05, 3.377800000000167e-05, 3.3791000000001764e-05, 3.376399999999863e-05, 3.316699999999714e-05, 3.318000000000071e-05, 3.318100000000018e-05, 3.316700000000061e-05, 3.37779999999982e-05, 3.318100000000018e-05, 3.318100000000018e-05, 3.377800000000167e-05, 3.37640000000021e-05, 3.316700000000061e-05, 3.316599999999767e-05, 3.994400000000009e-05, 3.31250000000019e-05, 3.373599999999949e-05]</msg>
<status status="PASS" starttime="20201029 12:44:35.955" endtime="20201029 12:44:35.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.951" endtime="20201029 12:44:35.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:35.962" endtime="20201029 12:44:35.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.960" endtime="20201029 12:44:35.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.959" endtime="20201029 12:44:35.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.604" endtime="20201029 12:44:35.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.603" endtime="20201029 12:44:35.983"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.991" endtime="20201029 12:44:36.007"></status>
</kw>
<msg timestamp="20201029 12:44:36.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.990" endtime="20201029 12:44:36.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.008" endtime="20201029 12:44:36.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.011" endtime="20201029 12:44:36.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.987" endtime="20201029 12:44:36.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.985" endtime="20201029 12:44:36.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.021" endtime="20201029 12:44:36.313"></status>
</kw>
<msg timestamp="20201029 12:44:36.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022217681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.020" endtime="20201029 12:44:36.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022217681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.317" endtime="20201029 12:44:36.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.325" endtime="20201029 12:44:36.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.017" endtime="20201029 12:44:36.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.015" endtime="20201029 12:44:36.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:36.332" level="INFO">${RESULT} = [{'diff': 3.441699999999839e-05}, {'diff': 3.434800000000002e-05}, {'diff': 3.504200000000249e-05}, {'diff': 3.377800000000167e-05}, {'diff': 3.4388999999999253e-05}, {'diff': 3.377800000000167e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:36.328" endtime="20201029 12:44:36.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:36.336" level="INFO">${ACCURACY} = {'diff': [3.441699999999839e-05, 3.434800000000002e-05, 3.504200000000249e-05, 3.377800000000167e-05, 3.4388999999999253e-05, 3.377800000000167e-05, 3.4374999999999684e-05, 3.440199999999935e-05, 3.44...</msg>
<status status="PASS" starttime="20201029 12:44:36.333" endtime="20201029 12:44:36.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.340" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 12:44:36.339" endtime="20201029 12:44:36.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.343" level="INFO">VALUE: [3.441699999999839e-05, 3.434800000000002e-05, 3.504200000000249e-05, 3.377800000000167e-05, 3.4388999999999253e-05, 3.377800000000167e-05, 3.4374999999999684e-05, 3.440199999999935e-05, 3.445799999999763e-05, 3.376399999999863e-05, 3.37640000000021e-05, 3.37640000000021e-05, 3.4374999999999684e-05, 3.4388999999999253e-05, 3.4374999999999684e-05, 3.4374999999999684e-05, 3.500000000000031e-05, 3.4361000000000114e-05, 3.4374999999999684e-05, 3.438900000000272e-05, 3.498600000000074e-05, 3.369500000000025e-05, 3.4374999999999684e-05, 3.498600000000074e-05, 3.4374999999999684e-05, 3.4374999999999684e-05, 3.498600000000074e-05, 3.373599999999949e-05, 3.49450000000015e-05, 3.4360999999996644e-05, 3.373599999999949e-05, 3.497200000000117e-05, 3.501399999999988e-05, 3.4374999999999684e-05, 3.497200000000117e-05, 3.441699999999839e-05, 3.4374999999999684e-05, 3.4388999999999253e-05, 3.504199999999902e-05, 3.4388999999999253e-05, 3.4361000000000114e-05, 3.4361000000000114e-05, 3.4388999999999253e-05, 3.437500000000315e-05, 3.37779999999982e-05, 3.498600000000074e-05, 3.4388999999999253e-05, 3.440300000000229e-05, 3.4374999999999684e-05, 3.4388999999999253e-05]</msg>
<status status="PASS" starttime="20201029 12:44:36.341" endtime="20201029 12:44:36.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.337" endtime="20201029 12:44:36.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:36.348" endtime="20201029 12:44:36.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.347" endtime="20201029 12:44:36.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.346" endtime="20201029 12:44:36.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.983" endtime="20201029 12:44:36.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.983" endtime="20201029 12:44:36.369"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.378" endtime="20201029 12:44:36.396"></status>
</kw>
<msg timestamp="20201029 12:44:36.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.376" endtime="20201029 12:44:36.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.397" endtime="20201029 12:44:36.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.400" endtime="20201029 12:44:36.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.374" endtime="20201029 12:44:36.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.372" endtime="20201029 12:44:36.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.409" endtime="20201029 12:44:36.696"></status>
</kw>
<msg timestamp="20201029 12:44:36.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023088014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023123, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:36.407" endtime="20201029 12:44:36.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023088014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023123, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:36.700" endtime="20201029 12:44:36.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.708" endtime="20201029 12:44:36.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.405" endtime="20201029 12:44:36.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.403" endtime="20201029 12:44:36.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:36.715" level="INFO">${RESULT} = [{'diff': 3.498600000000074e-05}, {'diff': 3.5554999999999615e-05}, {'diff': 3.500000000000031e-05}, {'diff': 3.5568999999999185e-05}, {'diff': 3.501399999999988e-05}, {'diff': 3.5596999999998324e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:36.711" endtime="20201029 12:44:36.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:36.719" level="INFO">${ACCURACY} = {'diff': [3.498600000000074e-05, 3.5554999999999615e-05, 3.500000000000031e-05, 3.5568999999999185e-05, 3.501399999999988e-05, 3.5596999999998324e-05, 3.559800000000127e-05, 3.494499999999803e-05, 3.5...</msg>
<status status="PASS" starttime="20201029 12:44:36.716" endtime="20201029 12:44:36.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.724" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 12:44:36.722" endtime="20201029 12:44:36.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.726" level="INFO">VALUE: [3.498600000000074e-05, 3.5554999999999615e-05, 3.500000000000031e-05, 3.5568999999999185e-05, 3.501399999999988e-05, 3.5596999999998324e-05, 3.559800000000127e-05, 3.494499999999803e-05, 3.5639000000000504e-05, 3.5597000000001794e-05, 3.5568999999999185e-05, 3.49719999999977e-05, 3.557000000000213e-05, 3.493099999999846e-05, 3.500000000000031e-05, 3.5582999999998755e-05, 3.498600000000074e-05, 3.500000000000031e-05, 3.5596999999998324e-05, 3.498599999999727e-05, 3.497300000000064e-05, 3.497200000000117e-05, 3.558399999999823e-05, 3.498600000000074e-05, 3.556999999999866e-05, 3.498600000000074e-05, 3.5624999999997464e-05, 3.498700000000021e-05, 3.497300000000064e-05, 3.500000000000031e-05, 3.498599999999727e-05, 3.5582999999998755e-05, 3.5597000000001794e-05, 3.558399999999823e-05, 3.494399999999856e-05, 3.5596999999998324e-05, 3.5596999999998324e-05, 3.497299999999717e-05, 3.500000000000031e-05, 3.5583000000002224e-05, 3.493000000000246e-05, 3.5582999999998755e-05, 3.498600000000074e-05, 3.55840000000017e-05, 3.500000000000031e-05, 3.501399999999988e-05, 3.5569000000002654e-05, 3.5569000000002654e-05, 3.5596999999998324e-05, 3.498600000000074e-05]</msg>
<status status="PASS" starttime="20201029 12:44:36.725" endtime="20201029 12:44:36.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.720" endtime="20201029 12:44:36.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:36.732" endtime="20201029 12:44:36.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.730" endtime="20201029 12:44:36.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.729" endtime="20201029 12:44:36.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.370" endtime="20201029 12:44:36.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.369" endtime="20201029 12:44:36.753"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.761" endtime="20201029 12:44:36.777"></status>
</kw>
<msg timestamp="20201029 12:44:36.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.760" endtime="20201029 12:44:36.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.779" endtime="20201029 12:44:36.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.781" endtime="20201029 12:44:36.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.757" endtime="20201029 12:44:36.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.755" endtime="20201029 12:44:36.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.790" endtime="20201029 12:44:37.077"></status>
</kw>
<msg timestamp="20201029 12:44:37.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022168611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.789" endtime="20201029 12:44:37.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022168611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:37.081" endtime="20201029 12:44:37.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.089" endtime="20201029 12:44:37.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.786" endtime="20201029 12:44:37.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.785" endtime="20201029 12:44:37.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:37.096" level="INFO">${RESULT} = [{'diff': 3.6124999999997964e-05}, {'diff': 3.679200000000077e-05}, {'diff': 3.681999999999991e-05}, {'diff': 3.679200000000077e-05}, {'diff': 3.619399999999981e-05}, {'diff': 3.619399999999981e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:37.093" endtime="20201029 12:44:37.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:37.101" level="INFO">${ACCURACY} = {'diff': [3.6124999999997964e-05, 3.679200000000077e-05, 3.681999999999991e-05, 3.679200000000077e-05, 3.619399999999981e-05, 3.619399999999981e-05, 3.619399999999981e-05, 3.616600000000067e-05, 3.679...</msg>
<status status="PASS" starttime="20201029 12:44:37.097" endtime="20201029 12:44:37.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.106" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 12:44:37.105" endtime="20201029 12:44:37.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.108" level="INFO">VALUE: [3.6124999999997964e-05, 3.679200000000077e-05, 3.681999999999991e-05, 3.679200000000077e-05, 3.619399999999981e-05, 3.619399999999981e-05, 3.619399999999981e-05, 3.616600000000067e-05, 3.6791000000001295e-05, 3.618000000000024e-05, 3.6180999999999713e-05, 3.618000000000024e-05, 3.680600000000034e-05, 3.680600000000034e-05, 3.618000000000024e-05, 3.67780000000012e-05, 3.623600000000199e-05, 3.620899999999885e-05, 3.624999999999809e-05, 3.680599999999687e-05, 3.679200000000077e-05, 3.619499999999928e-05, 3.623600000000199e-05, 3.672199999999945e-05, 3.620900000000232e-05, 3.679200000000077e-05, 3.6180999999999713e-05, 3.6805000000000865e-05, 3.616600000000067e-05, 3.6180999999999713e-05, 3.619499999999928e-05, 3.6819000000000435e-05, 3.619399999999981e-05, 3.6805000000000865e-05, 3.673599999999902e-05, 3.619500000000275e-05, 3.619399999999981e-05, 3.619499999999928e-05, 3.6180999999999713e-05, 3.620799999999938e-05, 3.680600000000034e-05, 3.619399999999981e-05, 3.6819000000000435e-05, 3.6805000000000865e-05, 3.6860999999999144e-05, 3.6805000000000865e-05, 3.558399999999823e-05, 3.619499999999928e-05, 3.619499999999928e-05, 3.61520000000011e-05]</msg>
<status status="PASS" starttime="20201029 12:44:37.107" endtime="20201029 12:44:37.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.102" endtime="20201029 12:44:37.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:37.113" endtime="20201029 12:44:37.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.112" endtime="20201029 12:44:37.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.111" endtime="20201029 12:44:37.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.754" endtime="20201029 12:44:37.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.753" endtime="20201029 12:44:37.134"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.143" endtime="20201029 12:44:37.160"></status>
</kw>
<msg timestamp="20201029 12:44:37.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.141" endtime="20201029 12:44:37.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.161" endtime="20201029 12:44:37.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.164" endtime="20201029 12:44:37.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.139" endtime="20201029 12:44:37.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.137" endtime="20201029 12:44:37.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.173" endtime="20201029 12:44:37.461"></status>
</kw>
<msg timestamp="20201029 12:44:37.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02219975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:37.171" endtime="20201029 12:44:37.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02219975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:37.465" endtime="20201029 12:44:37.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.474" endtime="20201029 12:44:37.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.169" endtime="20201029 12:44:37.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.167" endtime="20201029 12:44:37.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:37.480" level="INFO">${RESULT} = [{'diff': 3.7374999999999214e-05}, {'diff': 3.6805000000000865e-05}, {'diff': 3.672199999999945e-05}, {'diff': 3.7416999999997924e-05}, {'diff': 3.738799999999931e-05}, {'diff': 3.7403000000001824e-05...</msg>
<status status="PASS" starttime="20201029 12:44:37.477" endtime="20201029 12:44:37.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:37.484" level="INFO">${ACCURACY} = {'diff': [3.7374999999999214e-05, 3.6805000000000865e-05, 3.672199999999945e-05, 3.7416999999997924e-05, 3.738799999999931e-05, 3.7403000000001824e-05, 3.7403000000001824e-05, 3.6833000000000005e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:37.481" endtime="20201029 12:44:37.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.489" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 12:44:37.488" endtime="20201029 12:44:37.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.491" level="INFO">VALUE: [3.7374999999999214e-05, 3.6805000000000865e-05, 3.672199999999945e-05, 3.7416999999997924e-05, 3.738799999999931e-05, 3.7403000000001824e-05, 3.7403000000001824e-05, 3.6833000000000005e-05, 3.7403000000001824e-05, 3.6805000000000865e-05, 3.7389000000002254e-05, 3.7347000000000075e-05, 3.7360999999999644e-05, 3.6791000000001295e-05, 3.7389000000002254e-05, 3.740199999999888e-05, 3.6875000000002184e-05, 3.6805000000000865e-05, 3.741599999999845e-05, 3.7403000000001824e-05, 3.683399999999948e-05, 3.744400000000106e-05, 3.7388999999998784e-05, 3.795799999999766e-05, 3.7403000000001824e-05, 3.740200000000235e-05, 3.745800000000063e-05, 3.801399999999941e-05, 3.679200000000077e-05, 3.741599999999845e-05, 3.7403000000001824e-05, 3.7402999999998354e-05, 3.7374999999999214e-05, 3.7403000000001824e-05, 3.738799999999931e-05, 3.7318999999997465e-05, 3.7388999999998784e-05, 3.7388999999998784e-05, 3.7374999999999214e-05, 3.742999999999802e-05, 3.6805000000000865e-05, 3.7389000000002254e-05, 3.7417000000001394e-05, 3.7402999999998354e-05, 3.7402999999998354e-05, 3.741599999999845e-05, 3.799999999999984e-05, 3.7375000000002684e-05, 3.7389000000002254e-05, 3.6791000000001295e-05]</msg>
<status status="PASS" starttime="20201029 12:44:37.490" endtime="20201029 12:44:37.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.485" endtime="20201029 12:44:37.493"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:37.496" endtime="20201029 12:44:37.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.495" endtime="20201029 12:44:37.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.494" endtime="20201029 12:44:37.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.135" endtime="20201029 12:44:37.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.135" endtime="20201029 12:44:37.517"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.526" endtime="20201029 12:44:37.544"></status>
</kw>
<msg timestamp="20201029 12:44:37.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.524" endtime="20201029 12:44:37.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.545" endtime="20201029 12:44:37.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.548" endtime="20201029 12:44:37.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.522" endtime="20201029 12:44:37.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.520" endtime="20201029 12:44:37.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.557" endtime="20201029 12:44:37.843"></status>
</kw>
<msg timestamp="20201029 12:44:37.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023161403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:37.555" endtime="20201029 12:44:37.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023161403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:37.847" endtime="20201029 12:44:37.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.856" endtime="20201029 12:44:37.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.553" endtime="20201029 12:44:37.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.551" endtime="20201029 12:44:37.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:37.862" level="INFO">${RESULT} = [{'diff': 5.640300000000001e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.632000000000206e-05}, {'diff': 5.612500000000062e-05}, {'diff': 5.645900000000176e-05}, {'diff': 5.6514000000000564e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:37.859" endtime="20201029 12:44:37.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:37.866" level="INFO">${ACCURACY} = {'diff': [5.640300000000001e-05, 5.6277999999999884e-05, 5.632000000000206e-05, 5.612500000000062e-05, 5.645900000000176e-05, 5.6514000000000564e-05, 5.661100000000155e-05, 5.663900000000069e-05, 5.64...</msg>
<status status="PASS" starttime="20201029 12:44:37.863" endtime="20201029 12:44:37.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.871" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 12:44:37.870" endtime="20201029 12:44:37.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.873" level="INFO">VALUE: [5.640300000000001e-05, 5.6277999999999884e-05, 5.632000000000206e-05, 5.612500000000062e-05, 5.645900000000176e-05, 5.6514000000000564e-05, 5.661100000000155e-05, 5.663900000000069e-05, 5.6472000000001854e-05, 5.663900000000069e-05, 5.6778000000000384e-05, 5.6277999999999884e-05, 5.6305999999999023e-05, 5.5972000000001354e-05, 5.608399999999791e-05, 5.5972000000001354e-05, 5.612500000000062e-05, 5.6277999999999884e-05, 5.613900000000019e-05, 5.594499999999822e-05, 5.6486000000001424e-05, 5.663900000000069e-05, 5.627700000000041e-05, 5.613900000000019e-05, 5.630499999999955e-05, 5.680500000000005e-05, 5.5972000000001354e-05, 5.6791999999999954e-05, 5.5972000000001354e-05, 5.680600000000299e-05, 5.6014000000000064e-05, 5.6458000000002284e-05, 5.6291999999999454e-05, 5.6819999999999093e-05, 5.613900000000019e-05, 5.595900000000126e-05, 5.630499999999955e-05, 5.607000000000181e-05, 5.6138000000000715e-05, 5.6235999999997704e-05, 5.631899999999912e-05, 5.6429999999999675e-05, 5.613900000000019e-05, 5.6778000000000384e-05, 5.6471999999998385e-05, 5.5972000000001354e-05, 5.6778000000000384e-05, 5.663900000000069e-05, 5.6764000000000814e-05, 5.643099999999915e-05]</msg>
<status status="PASS" starttime="20201029 12:44:37.872" endtime="20201029 12:44:37.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.867" endtime="20201029 12:44:37.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:37.879" endtime="20201029 12:44:37.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.878" endtime="20201029 12:44:37.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.877" endtime="20201029 12:44:37.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.518" endtime="20201029 12:44:37.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.518" endtime="20201029 12:44:37.900"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.909" endtime="20201029 12:44:37.926"></status>
</kw>
<msg timestamp="20201029 12:44:37.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.907" endtime="20201029 12:44:37.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.928" endtime="20201029 12:44:37.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.930" endtime="20201029 12:44:37.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.905" endtime="20201029 12:44:37.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.902" endtime="20201029 12:44:37.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.939" endtime="20201029 12:44:38.227"></status>
</kw>
<msg timestamp="20201029 12:44:38.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:37.938" endtime="20201029 12:44:38.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.232" endtime="20201029 12:44:38.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.240" endtime="20201029 12:44:38.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.935" endtime="20201029 12:44:38.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.933" endtime="20201029 12:44:38.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:38.246" level="INFO">${RESULT} = [{'diff': 5.7958000000000315e-05}, {'diff': 5.781900000000062e-05}, {'diff': 5.779099999999801e-05}, {'diff': 5.6957999999999315e-05}, {'diff': 5.7485999999998955e-05}, {'diff': 5.762500000000212e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:38.243" endtime="20201029 12:44:38.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:38.252" level="INFO">${ACCURACY} = {'diff': [5.7958000000000315e-05, 5.781900000000062e-05, 5.779099999999801e-05, 5.6957999999999315e-05, 5.7485999999998955e-05, 5.762500000000212e-05, 5.7500000000001994e-05, 5.7472000000002854e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:44:38.247" endtime="20201029 12:44:38.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.256" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 12:44:38.255" endtime="20201029 12:44:38.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.259" level="INFO">VALUE: [5.7958000000000315e-05, 5.781900000000062e-05, 5.779099999999801e-05, 5.6957999999999315e-05, 5.7485999999998955e-05, 5.762500000000212e-05, 5.7500000000001994e-05, 5.7472000000002854e-05, 5.711099999999858e-05, 5.6957999999999315e-05, 5.712499999999815e-05, 5.694499999999922e-05, 5.747299999999886e-05, 5.695899999999879e-05, 5.7513999999998094e-05, 5.762499999999865e-05, 5.7486000000002424e-05, 5.7458000000003284e-05, 5.7235999999998705e-05, 5.780499999999758e-05, 5.713900000000119e-05, 5.763899999999822e-05, 5.712499999999815e-05, 5.7319999999999593e-05, 5.7806000000000524e-05, 5.762499999999865e-05, 5.765300000000126e-05, 5.712500000000162e-05, 5.784699999999976e-05, 5.7277999999997414e-05, 5.7806000000000524e-05, 5.6887999999997996e-05, 5.780500000000105e-05, 5.761100000000255e-05, 5.777699999999844e-05, 5.730500000000055e-05, 5.7735999999999205e-05, 5.7000000000001494e-05, 5.7278000000000884e-05, 5.7306000000000024e-05, 5.693099999999965e-05, 5.765300000000126e-05, 5.713900000000119e-05, 5.7820000000000094e-05, 5.763899999999822e-05, 5.747299999999886e-05, 5.761100000000255e-05, 5.7820000000000094e-05, 5.7138000000001715e-05, 5.712499999999815e-05]</msg>
<status status="PASS" starttime="20201029 12:44:38.257" endtime="20201029 12:44:38.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.253" endtime="20201029 12:44:38.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:38.264" endtime="20201029 12:44:38.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.262" endtime="20201029 12:44:38.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.261" endtime="20201029 12:44:38.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.901" endtime="20201029 12:44:38.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.900" endtime="20201029 12:44:38.284"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.293" endtime="20201029 12:44:38.311"></status>
</kw>
<msg timestamp="20201029 12:44:38.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.292" endtime="20201029 12:44:38.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.313" endtime="20201029 12:44:38.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.315" endtime="20201029 12:44:38.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.289" endtime="20201029 12:44:38.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.287" endtime="20201029 12:44:38.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.325" endtime="20201029 12:44:38.612"></status>
</kw>
<msg timestamp="20201029 12:44:38.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.323" endtime="20201029 12:44:38.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.616" endtime="20201029 12:44:38.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.624" endtime="20201029 12:44:38.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.320" endtime="20201029 12:44:38.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.319" endtime="20201029 12:44:38.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:38.631" level="INFO">${RESULT} = [{'diff': 5.890299999999904e-05}, {'diff': 5.8305999999997554e-05}, {'diff': 5.862499999999965e-05}, {'diff': 5.8513999999999095e-05}, {'diff': 5.831900000000112e-05}, {'diff': 5.8472000000000385e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:38.628" endtime="20201029 12:44:38.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:38.635" level="INFO">${ACCURACY} = {'diff': [5.890299999999904e-05, 5.8305999999997554e-05, 5.862499999999965e-05, 5.8513999999999095e-05, 5.831900000000112e-05, 5.8472000000000385e-05, 5.83749999999994e-05, 5.812500000000262e-05, 5.81...</msg>
<status status="PASS" starttime="20201029 12:44:38.632" endtime="20201029 12:44:38.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.639" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 12:44:38.638" endtime="20201029 12:44:38.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.642" level="INFO">VALUE: [5.890299999999904e-05, 5.8305999999997554e-05, 5.862499999999965e-05, 5.8513999999999095e-05, 5.831900000000112e-05, 5.8472000000000385e-05, 5.83749999999994e-05, 5.812500000000262e-05, 5.812499999999915e-05, 5.8291999999997984e-05, 5.812499999999915e-05, 5.812499999999915e-05, 5.7971999999999885e-05, 5.863899999999922e-05, 5.794500000000022e-05, 5.813900000000219e-05, 5.812499999999915e-05, 5.862499999999965e-05, 5.845900000000029e-05, 5.812500000000262e-05, 5.7985999999999455e-05, 5.7971999999999885e-05, 5.7971999999999885e-05, 5.812499999999915e-05, 5.8749999999999775e-05, 5.8458000000000815e-05, 5.813900000000219e-05, 5.8834000000000664e-05, 5.8679999999998456e-05, 5.8791999999998484e-05, 5.812499999999915e-05, 5.84870000000029e-05, 5.8291999999997984e-05, 5.862499999999965e-05, 5.811200000000252e-05, 5.879099999999901e-05, 5.8485999999999955e-05, 5.8277999999998414e-05, 5.881899999999815e-05, 5.812499999999915e-05, 5.8763999999999345e-05, 5.811099999999958e-05, 5.8791999999998484e-05, 5.863900000000269e-05, 5.863899999999922e-05, 5.838899999999897e-05, 5.845900000000029e-05, 5.797299999999936e-05, 5.827699999999894e-05, 5.865299999999879e-05]</msg>
<status status="PASS" starttime="20201029 12:44:38.641" endtime="20201029 12:44:38.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.636" endtime="20201029 12:44:38.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:38.647" endtime="20201029 12:44:38.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.645" endtime="20201029 12:44:38.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.644" endtime="20201029 12:44:38.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.285" endtime="20201029 12:44:38.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.285" endtime="20201029 12:44:38.668"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.676" endtime="20201029 12:44:38.695"></status>
</kw>
<msg timestamp="20201029 12:44:38.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.675" endtime="20201029 12:44:38.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.697" endtime="20201029 12:44:38.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.700" endtime="20201029 12:44:38.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.672" endtime="20201029 12:44:38.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.670" endtime="20201029 12:44:38.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.709" endtime="20201029 12:44:38.993"></status>
</kw>
<msg timestamp="20201029 12:44:38.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023119, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023178069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:38.707" endtime="20201029 12:44:38.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023119, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023178069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:38.998" endtime="20201029 12:44:39.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.006" endtime="20201029 12:44:39.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.705" endtime="20201029 12:44:39.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.703" endtime="20201029 12:44:39.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:39.013" level="INFO">${RESULT} = [{'diff': 5.90689999999984e-05}, {'diff': 5.961100000000108e-05}, {'diff': 5.9722000000001635e-05}, {'diff': 5.920900000000104e-05}, {'diff': 5.961099999999761e-05}, {'diff': 5.8958000000001315e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:39.010" endtime="20201029 12:44:39.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:39.017" level="INFO">${ACCURACY} = {'diff': [5.90689999999984e-05, 5.961100000000108e-05, 5.9722000000001635e-05, 5.920900000000104e-05, 5.961099999999761e-05, 5.8958000000001315e-05, 5.9792000000002954e-05, 5.913899999999972e-05, 5.93...</msg>
<status status="PASS" starttime="20201029 12:44:39.014" endtime="20201029 12:44:39.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.022" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 12:44:39.021" endtime="20201029 12:44:39.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.025" level="INFO">VALUE: [5.90689999999984e-05, 5.961100000000108e-05, 5.9722000000001635e-05, 5.920900000000104e-05, 5.961099999999761e-05, 5.8958000000001315e-05, 5.9792000000002954e-05, 5.913899999999972e-05, 5.9320000000001594e-05, 5.962500000000065e-05, 5.963899999999675e-05, 5.895899999999732e-05, 5.9472000000001385e-05, 5.9584000000001414e-05, 5.945899999999782e-05, 5.980499999999958e-05, 5.9415999999999636e-05, 5.968099999999893e-05, 5.9429999999999206e-05, 5.890299999999904e-05, 5.912500000000015e-05, 5.9319999999998124e-05, 5.913899999999972e-05, 5.961099999999761e-05, 5.9805999999999054e-05, 5.912500000000015e-05, 5.915300000000276e-05, 5.961100000000108e-05, 5.9291999999998984e-05, 5.980499999999958e-05, 5.9652000000000316e-05, 5.8972000000000885e-05, 5.930499999999908e-05, 5.9527999999999665e-05, 5.915299999999929e-05, 5.912500000000015e-05, 5.981900000000262e-05, 5.9791999999999484e-05, 5.8958000000001315e-05, 5.9263999999999845e-05, 5.962499999999718e-05, 5.9291999999998984e-05, 5.9291999999998984e-05, 5.9819999999998624e-05, 5.912500000000015e-05, 5.947299999999739e-05, 5.9638000000000746e-05, 5.8958000000001315e-05, 5.9472000000001385e-05, 5.961100000000108e-05]</msg>
<status status="PASS" starttime="20201029 12:44:39.023" endtime="20201029 12:44:39.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.018" endtime="20201029 12:44:39.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:39.030" endtime="20201029 12:44:39.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.028" endtime="20201029 12:44:39.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.027" endtime="20201029 12:44:39.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.669" endtime="20201029 12:44:39.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.668" endtime="20201029 12:44:39.051"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.060" endtime="20201029 12:44:39.077"></status>
</kw>
<msg timestamp="20201029 12:44:39.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.058" endtime="20201029 12:44:39.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.079" endtime="20201029 12:44:39.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.081" endtime="20201029 12:44:39.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.055" endtime="20201029 12:44:39.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.053" endtime="20201029 12:44:39.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.091" endtime="20201029 12:44:39.378"></status>
</kw>
<msg timestamp="20201029 12:44:39.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.089" endtime="20201029 12:44:39.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.382" endtime="20201029 12:44:39.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.390" endtime="20201029 12:44:39.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.086" endtime="20201029 12:44:39.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.085" endtime="20201029 12:44:39.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:39.397" level="INFO">${RESULT} = [{'diff': 6.022300000000161e-05}, {'diff': 6.033300000000269e-05}, {'diff': 6.0819999999999624e-05}, {'diff': 6.00689999999994e-05}, {'diff': 6.079100000000101e-05}, {'diff': 6.0264000000000845e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:39.394" endtime="20201029 12:44:39.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:39.402" level="INFO">${ACCURACY} = {'diff': [6.022300000000161e-05, 6.033300000000269e-05, 6.0819999999999624e-05, 6.00689999999994e-05, 6.079100000000101e-05, 6.0264000000000845e-05, 6.030500000000008e-05, 6.0457999999999346e-05, 6.05...</msg>
<status status="PASS" starttime="20201029 12:44:39.398" endtime="20201029 12:44:39.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.407" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 12:44:39.406" endtime="20201029 12:44:39.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.409" level="INFO">VALUE: [6.022300000000161e-05, 6.033300000000269e-05, 6.0819999999999624e-05, 6.00689999999994e-05, 6.079100000000101e-05, 6.0264000000000845e-05, 6.030500000000008e-05, 6.0457999999999346e-05, 6.0514000000001095e-05, 5.9958000000002315e-05, 5.9972000000001885e-05, 6.040300000000054e-05, 6.0472000000002385e-05, 6.0819999999999624e-05, 6.0806000000000054e-05, 6.0806000000000054e-05, 6.0819999999999624e-05, 6.0806000000000054e-05, 6.0778000000000915e-05, 6.0471999999998916e-05, 6.077699999999797e-05, 6.083299999999972e-05, 6.011100000000158e-05, 6.083299999999972e-05, 5.9943999999999276e-05, 6.063900000000122e-05, 6.054100000000076e-05, 6.0291999999999984e-05, 6.0806000000000054e-05, 6.036099999999836e-05, 6.047300000000186e-05, 6.063899999999775e-05, 6.0291999999999984e-05, 6.0152000000000816e-05, 6.045900000000229e-05, 6.0485999999998485e-05, 5.9929999999999706e-05, 6.009699999999854e-05, 5.9958000000002315e-05, 6.0778000000000915e-05, 6.009699999999854e-05, 6.0291999999999984e-05, 5.9972000000001885e-05, 6.0291999999999984e-05, 6.0792000000000485e-05, 6.0806000000000054e-05, 5.997300000000136e-05, 6.0070000000002344e-05, 5.9958000000002315e-05, 6.0471999999998916e-05]</msg>
<status status="PASS" starttime="20201029 12:44:39.408" endtime="20201029 12:44:39.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.403" endtime="20201029 12:44:39.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:39.414" endtime="20201029 12:44:39.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.413" endtime="20201029 12:44:39.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.412" endtime="20201029 12:44:39.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.052" endtime="20201029 12:44:39.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.051" endtime="20201029 12:44:39.435"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.444" endtime="20201029 12:44:39.461"></status>
</kw>
<msg timestamp="20201029 12:44:39.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.442" endtime="20201029 12:44:39.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.463" endtime="20201029 12:44:39.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.465" endtime="20201029 12:44:39.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.439" endtime="20201029 12:44:39.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.437" endtime="20201029 12:44:39.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.474" endtime="20201029 12:44:39.763"></status>
</kw>
<msg timestamp="20201029 12:44:39.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022425472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.473" endtime="20201029 12:44:39.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022425472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.768" endtime="20201029 12:44:39.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.776" endtime="20201029 12:44:39.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.470" endtime="20201029 12:44:39.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.469" endtime="20201029 12:44:39.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:39.783" level="INFO">${RESULT} = [{'diff': 6.12080000000001e-05}, {'diff': 6.112499999999868e-05}, {'diff': 6.147199999999992e-05}, {'diff': 6.115299999999782e-05}, {'diff': 6.163900000000222e-05}, {'diff': 6.13339999999997e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:39.780" endtime="20201029 12:44:39.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:39.787" level="INFO">${ACCURACY} = {'diff': [6.12080000000001e-05, 6.112499999999868e-05, 6.147199999999992e-05, 6.115299999999782e-05, 6.163900000000222e-05, 6.13339999999997e-05, 6.111100000000258e-05, 6.113900000000172e-05, 6.095899...</msg>
<status status="PASS" starttime="20201029 12:44:39.784" endtime="20201029 12:44:39.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.791" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 12:44:39.790" endtime="20201029 12:44:39.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.794" level="INFO">VALUE: [6.12080000000001e-05, 6.112499999999868e-05, 6.147199999999992e-05, 6.115299999999782e-05, 6.163900000000222e-05, 6.13339999999997e-05, 6.111100000000258e-05, 6.113900000000172e-05, 6.095899999999932e-05, 6.091700000000061e-05, 6.129199999999752e-05, 6.162499999999918e-05, 6.162499999999918e-05, 6.186099999999986e-05, 6.130499999999761e-05, 6.180500000000158e-05, 6.0971999999999416e-05, 6.130500000000108e-05, 6.181900000000115e-05, 6.129200000000098e-05, 6.113899999999825e-05, 6.147199999999992e-05, 6.111099999999911e-05, 6.097299999999889e-05, 6.140299999999807e-05, 6.179200000000148e-05, 6.163899999999875e-05, 6.180500000000158e-05, 6.0957999999999846e-05, 6.145800000000035e-05, 6.129100000000151e-05, 6.115299999999782e-05, 6.1013999999998125e-05, 6.181900000000115e-05, 6.129199999999752e-05, 6.130600000000055e-05, 6.180600000000105e-05, 6.162499999999918e-05, 6.157000000000037e-05, 6.112499999999868e-05, 6.177800000000191e-05, 6.131900000000065e-05, 6.130499999999761e-05, 6.181900000000115e-05, 6.125000000000227e-05, 6.130500000000108e-05, 6.165299999999832e-05, 6.181899999999768e-05, 6.115300000000129e-05, 6.0971999999999416e-05]</msg>
<status status="PASS" starttime="20201029 12:44:39.793" endtime="20201029 12:44:39.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.788" endtime="20201029 12:44:39.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:39.799" endtime="20201029 12:44:39.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.797" endtime="20201029 12:44:39.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.796" endtime="20201029 12:44:39.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.436" endtime="20201029 12:44:39.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.435" endtime="20201029 12:44:39.820"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.829" endtime="20201029 12:44:39.847"></status>
</kw>
<msg timestamp="20201029 12:44:39.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.827" endtime="20201029 12:44:39.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.849" endtime="20201029 12:44:39.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.852" endtime="20201029 12:44:39.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.824" endtime="20201029 12:44:39.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.822" endtime="20201029 12:44:39.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.861" endtime="20201029 12:44:40.147"></status>
</kw>
<msg timestamp="20201029 12:44:40.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023262486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023325042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.859" endtime="20201029 12:44:40.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023262486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023325042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.151" endtime="20201029 12:44:40.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.160" endtime="20201029 12:44:40.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.857" endtime="20201029 12:44:40.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.855" endtime="20201029 12:44:40.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:40.166" level="INFO">${RESULT} = [{'diff': 6.25560000000018e-05}, {'diff': 6.229200000000198e-05}, {'diff': 6.198599999999999e-05}, {'diff': 6.262500000000018e-05}, {'diff': 6.213899999999925e-05}, {'diff': 6.230500000000208e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:40.163" endtime="20201029 12:44:40.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:40.170" level="INFO">${ACCURACY} = {'diff': [6.25560000000018e-05, 6.229200000000198e-05, 6.198599999999999e-05, 6.262500000000018e-05, 6.213899999999925e-05, 6.230500000000208e-05, 6.24439999999983e-05, 6.280499999999911e-05, 6.230499...</msg>
<status status="PASS" starttime="20201029 12:44:40.167" endtime="20201029 12:44:40.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.175" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 12:44:40.174" endtime="20201029 12:44:40.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.178" level="INFO">VALUE: [6.25560000000018e-05, 6.229200000000198e-05, 6.198599999999999e-05, 6.262500000000018e-05, 6.213899999999925e-05, 6.230500000000208e-05, 6.24439999999983e-05, 6.280499999999911e-05, 6.230499999999861e-05, 6.213899999999925e-05, 6.263899999999975e-05, 6.276399999999988e-05, 6.212499999999968e-05, 6.229199999999852e-05, 6.223600000000024e-05, 6.247300000000039e-05, 6.273600000000074e-05, 6.248600000000049e-05, 6.263800000000028e-05, 6.245799999999788e-05, 6.197200000000042e-05, 6.230499999999861e-05, 6.212499999999968e-05, 6.284699999999782e-05, 6.279200000000248e-05, 6.233399999999722e-05, 6.244400000000178e-05, 6.1888999999999e-05, 6.198599999999999e-05, 6.263899999999975e-05, 6.265299999999932e-05, 6.245900000000082e-05, 6.197299999999989e-05, 6.195899999999685e-05, 6.277699999999997e-05, 6.213899999999925e-05, 6.262500000000018e-05, 6.276399999999988e-05, 6.268100000000193e-05, 6.262500000000018e-05, 6.229199999999852e-05, 6.195800000000085e-05, 6.198599999999999e-05, 6.227799999999895e-05, 6.245900000000082e-05, 6.230600000000155e-05, 6.212499999999968e-05, 6.245899999999735e-05, 6.195900000000032e-05, 6.197200000000042e-05]</msg>
<status status="PASS" starttime="20201029 12:44:40.176" endtime="20201029 12:44:40.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.171" endtime="20201029 12:44:40.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:40.183" endtime="20201029 12:44:40.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.182" endtime="20201029 12:44:40.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.181" endtime="20201029 12:44:40.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.821" endtime="20201029 12:44:40.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.820" endtime="20201029 12:44:40.204"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.213" endtime="20201029 12:44:40.232"></status>
</kw>
<msg timestamp="20201029 12:44:40.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.211" endtime="20201029 12:44:40.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.233" endtime="20201029 12:44:40.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.236" endtime="20201029 12:44:40.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.209" endtime="20201029 12:44:40.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.207" endtime="20201029 12:44:40.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.245" endtime="20201029 12:44:40.530"></status>
</kw>
<msg timestamp="20201029 12:44:40.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:40.243" endtime="20201029 12:44:40.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:40.534" endtime="20201029 12:44:40.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.542" endtime="20201029 12:44:40.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.241" endtime="20201029 12:44:40.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.239" endtime="20201029 12:44:40.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:40.549" level="INFO">${RESULT} = [{'diff': 6.393099999999971e-05}, {'diff': 6.295800000000185e-05}, {'diff': 6.313900000000025e-05}, {'diff': 6.348599999999802e-05}, {'diff': 6.327799999999995e-05}, {'diff': 6.37219999999987e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:40.546" endtime="20201029 12:44:40.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:40.554" level="INFO">${ACCURACY} = {'diff': [6.393099999999971e-05, 6.295800000000185e-05, 6.313900000000025e-05, 6.348599999999802e-05, 6.327799999999995e-05, 6.37219999999987e-05, 6.329200000000298e-05, 6.295900000000132e-05, 6.31390...</msg>
<status status="PASS" starttime="20201029 12:44:40.550" endtime="20201029 12:44:40.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.559" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 12:44:40.558" endtime="20201029 12:44:40.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.561" level="INFO">VALUE: [6.393099999999971e-05, 6.295800000000185e-05, 6.313900000000025e-05, 6.348599999999802e-05, 6.327799999999995e-05, 6.37219999999987e-05, 6.329200000000298e-05, 6.295900000000132e-05, 6.313900000000025e-05, 6.362500000000118e-05, 6.298600000000099e-05, 6.312500000000068e-05, 6.345799999999888e-05, 6.379200000000002e-05, 6.379099999999707e-05, 6.3582999999999e-05, 6.345799999999888e-05, 6.312499999999721e-05, 6.38479999999983e-05, 6.379200000000002e-05, 6.313900000000025e-05, 6.312500000000068e-05, 6.380599999999959e-05, 6.334699999999832e-05, 6.311100000000111e-05, 6.348599999999802e-05, 6.329100000000004e-05, 6.312500000000068e-05, 6.313900000000025e-05, 6.311099999999764e-05, 6.297200000000142e-05, 6.298599999999752e-05, 6.354199999999977e-05, 6.347199999999845e-05, 6.329199999999952e-05, 6.347199999999845e-05, 6.379200000000002e-05, 6.297300000000089e-05, 6.312500000000068e-05, 6.362500000000118e-05, 6.347299999999792e-05, 6.313800000000078e-05, 6.347199999999845e-05, 6.365300000000032e-05, 6.369499999999903e-05, 6.348599999999802e-05, 6.330499999999961e-05, 6.345799999999888e-05, 6.356899999999943e-05, 6.379200000000002e-05]</msg>
<status status="PASS" starttime="20201029 12:44:40.560" endtime="20201029 12:44:40.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.555" endtime="20201029 12:44:40.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:40.566" endtime="20201029 12:44:40.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.565" endtime="20201029 12:44:40.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.564" endtime="20201029 12:44:40.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.205" endtime="20201029 12:44:40.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.205" endtime="20201029 12:44:40.591"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.604" endtime="20201029 12:44:40.622"></status>
</kw>
<msg timestamp="20201029 12:44:40.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.602" endtime="20201029 12:44:40.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.623" endtime="20201029 12:44:40.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.626" endtime="20201029 12:44:40.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.598" endtime="20201029 12:44:40.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.595" endtime="20201029 12:44:40.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.635" endtime="20201029 12:44:40.943"></status>
</kw>
<msg timestamp="20201029 12:44:40.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030577847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030642597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.633" endtime="20201029 12:44:40.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030577847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030642597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.947" endtime="20201029 12:44:40.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.956" endtime="20201029 12:44:40.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.631" endtime="20201029 12:44:40.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.629" endtime="20201029 12:44:40.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:40.962" level="INFO">${RESULT} = [{'diff': 6.47500000000023e-05}, {'diff': 6.462500000000218e-05}, {'diff': 6.415300000000082e-05}, {'diff': 6.487500000000243e-05}, {'diff': 6.462499999999871e-05}, {'diff': 6.462500000000218e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:40.959" endtime="20201029 12:44:40.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:40.967" level="INFO">${ACCURACY} = {'diff': [6.47500000000023e-05, 6.462500000000218e-05, 6.415300000000082e-05, 6.487500000000243e-05, 6.462499999999871e-05, 6.462500000000218e-05, 6.412499999999821e-05, 6.462499999999871e-05, 6.48330...</msg>
<status status="PASS" starttime="20201029 12:44:40.963" endtime="20201029 12:44:40.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.971" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 12:44:40.970" endtime="20201029 12:44:40.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.974" level="INFO">VALUE: [6.47500000000023e-05, 6.462500000000218e-05, 6.415300000000082e-05, 6.487500000000243e-05, 6.462499999999871e-05, 6.462500000000218e-05, 6.412499999999821e-05, 6.462499999999871e-05, 6.483300000000025e-05, 6.412500000000168e-05, 6.397300000000189e-05, 6.445900000000282e-05, 6.462499999999871e-05, 6.445799999999641e-05, 6.45280000000012e-05, 6.447200000000292e-05, 6.430499999999367e-05, 6.479100000000154e-05, 6.463899999999828e-05, 6.409699999999907e-05, 6.479200000000102e-05, 6.480600000000059e-05, 6.395800000000285e-05, 6.463899999999828e-05, 6.429200000000052e-05, 6.445900000000282e-05, 6.412500000000515e-05, 6.463799999999881e-05, 6.462499999999871e-05, 6.430500000000061e-05, 6.429100000000104e-05, 6.483299999999331e-05, 6.462499999999871e-05, 6.463899999999828e-05, 6.412499999999821e-05, 6.433399999999923e-05, 6.395899999999538e-05, 6.402700000000122e-05, 6.415299999999735e-05, 6.430600000000009e-05, 6.463899999999828e-05, 6.431900000000018e-05, 6.483300000000025e-05, 6.40280000000007e-05, 6.480500000000111e-05, 6.395799999999591e-05, 6.430500000000061e-05, 6.462499999999871e-05, 6.481900000000068e-05, 6.415300000000429e-05]</msg>
<status status="PASS" starttime="20201029 12:44:40.972" endtime="20201029 12:44:40.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.967" endtime="20201029 12:44:40.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:40.979" endtime="20201029 12:44:40.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.977" endtime="20201029 12:44:40.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.976" endtime="20201029 12:44:40.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.592" endtime="20201029 12:44:40.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.592" endtime="20201029 12:44:40.999"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.008" endtime="20201029 12:44:41.027"></status>
</kw>
<msg timestamp="20201029 12:44:41.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.007" endtime="20201029 12:44:41.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.029" endtime="20201029 12:44:41.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.031" endtime="20201029 12:44:41.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.004" endtime="20201029 12:44:41.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.002" endtime="20201029 12:44:41.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.040" endtime="20201029 12:44:41.325"></status>
</kw>
<msg timestamp="20201029 12:44:41.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023415125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023480361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.039" endtime="20201029 12:44:41.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023415125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023480361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.330" endtime="20201029 12:44:41.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.338" endtime="20201029 12:44:41.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.036" endtime="20201029 12:44:41.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.034" endtime="20201029 12:44:41.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:41.345" level="INFO">${RESULT} = [{'diff': 6.523600000000324e-05}, {'diff': 6.563899999999928e-05}, {'diff': 6.495800000000038e-05}, {'diff': 6.574999999999984e-05}, {'diff': 6.518000000000149e-05}, {'diff': 6.548699999999949e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:41.341" endtime="20201029 12:44:41.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:41.349" level="INFO">${ACCURACY} = {'diff': [6.523600000000324e-05, 6.563899999999928e-05, 6.495800000000038e-05, 6.574999999999984e-05, 6.518000000000149e-05, 6.548699999999949e-05, 6.547299999999992e-05, 6.562499999999971e-05, 6.5624...</msg>
<status status="PASS" starttime="20201029 12:44:41.346" endtime="20201029 12:44:41.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.353" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 12:44:41.352" endtime="20201029 12:44:41.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.356" level="INFO">VALUE: [6.523600000000324e-05, 6.563899999999928e-05, 6.495800000000038e-05, 6.574999999999984e-05, 6.518000000000149e-05, 6.548699999999949e-05, 6.547299999999992e-05, 6.562499999999971e-05, 6.562499999999971e-05, 6.495800000000038e-05, 6.512499999999921e-05, 6.566699999999842e-05, 6.512499999999921e-05, 6.495800000000038e-05, 6.513900000000225e-05, 6.580600000000159e-05, 6.547199999999698e-05, 6.516700000000139e-05, 6.500000000000256e-05, 6.587499999999996e-05, 6.512499999999921e-05, 6.580600000000159e-05, 6.513899999999878e-05, 6.568000000000199e-05, 6.563799999999981e-05, 6.529099999999857e-05, 6.5276999999999e-05, 6.515299999999835e-05, 6.563899999999928e-05, 6.515299999999835e-05, 6.583299999999778e-05, 6.580599999999812e-05, 6.513899999999878e-05, 6.580600000000159e-05, 6.529199999999805e-05, 6.562499999999971e-05, 6.543100000000121e-05, 6.579200000000202e-05, 6.527700000000247e-05, 6.513899999999878e-05, 6.565300000000232e-05, 6.511099999999964e-05, 6.527799999999848e-05, 6.516699999999792e-05, 6.529199999999805e-05, 6.562499999999971e-05, 6.529199999999805e-05, 6.577799999999898e-05, 6.513899999999878e-05, 6.579200000000202e-05]</msg>
<status status="PASS" starttime="20201029 12:44:41.354" endtime="20201029 12:44:41.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.350" endtime="20201029 12:44:41.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:41.366" endtime="20201029 12:44:41.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.364" endtime="20201029 12:44:41.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.363" endtime="20201029 12:44:41.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.000" endtime="20201029 12:44:41.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.000" endtime="20201029 12:44:41.387"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.395" endtime="20201029 12:44:41.414"></status>
</kw>
<msg timestamp="20201029 12:44:41.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.394" endtime="20201029 12:44:41.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.415" endtime="20201029 12:44:41.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.418" endtime="20201029 12:44:41.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.391" endtime="20201029 12:44:41.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.389" endtime="20201029 12:44:41.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.427" endtime="20201029 12:44:41.712"></status>
</kw>
<msg timestamp="20201029 12:44:41.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022210931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022277667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.425" endtime="20201029 12:44:41.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022210931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022277667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.717" endtime="20201029 12:44:41.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.725" endtime="20201029 12:44:41.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.423" endtime="20201029 12:44:41.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.421" endtime="20201029 12:44:41.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:41.731" level="INFO">${RESULT} = [{'diff': 6.673600000000127e-05}, {'diff': 6.615199999999988e-05}, {'diff': 6.622300000000067e-05}, {'diff': 6.647200000000145e-05}, {'diff': 6.638800000000056e-05}, {'diff': 6.631899999999871e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:41.728" endtime="20201029 12:44:41.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:41.737" level="INFO">${ACCURACY} = {'diff': [6.673600000000127e-05, 6.615199999999988e-05, 6.622300000000067e-05, 6.647200000000145e-05, 6.638800000000056e-05, 6.631899999999871e-05, 6.612500000000021e-05, 6.612500000000021e-05, 6.6652...</msg>
<status status="PASS" starttime="20201029 12:44:41.733" endtime="20201029 12:44:41.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.741" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 12:44:41.740" endtime="20201029 12:44:41.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.744" level="INFO">VALUE: [6.673600000000127e-05, 6.615199999999988e-05, 6.622300000000067e-05, 6.647200000000145e-05, 6.638800000000056e-05, 6.631899999999871e-05, 6.612500000000021e-05, 6.612500000000021e-05, 6.665299999999985e-05, 6.64440000000023e-05, 6.677799999999998e-05, 6.612500000000021e-05, 6.595799999999791e-05, 6.682000000000216e-05, 6.661100000000114e-05, 6.620899999999763e-05, 6.680599999999912e-05, 6.642999999999927e-05, 6.680499999999964e-05, 6.629099999999957e-05, 6.686100000000139e-05, 6.631899999999871e-05, 6.595799999999791e-05, 6.627799999999948e-05, 6.630599999999862e-05, 6.661099999999767e-05, 6.609700000000107e-05, 6.611100000000064e-05, 6.627799999999948e-05, 6.615299999999935e-05, 6.662500000000071e-05, 6.630499999999914e-05, 6.595900000000085e-05, 6.612500000000021e-05, 6.613899999999978e-05, 6.602799999999923e-05, 6.679100000000007e-05, 6.680600000000259e-05, 6.673600000000127e-05, 6.627799999999948e-05, 6.630599999999862e-05, 6.661100000000114e-05, 6.615299999999935e-05, 6.613899999999978e-05, 6.629199999999905e-05, 6.611200000000012e-05, 6.62639999999999e-05, 6.680499999999964e-05, 6.662500000000071e-05, 6.594399999999834e-05]</msg>
<status status="PASS" starttime="20201029 12:44:41.742" endtime="20201029 12:44:41.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.737" endtime="20201029 12:44:41.745"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:41.749" endtime="20201029 12:44:41.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.747" endtime="20201029 12:44:41.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.746" endtime="20201029 12:44:41.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.388" endtime="20201029 12:44:41.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.387" endtime="20201029 12:44:41.769"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.778" endtime="20201029 12:44:41.796"></status>
</kw>
<msg timestamp="20201029 12:44:41.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.777" endtime="20201029 12:44:41.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.797" endtime="20201029 12:44:41.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.800" endtime="20201029 12:44:41.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.774" endtime="20201029 12:44:41.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.772" endtime="20201029 12:44:41.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.809" endtime="20201029 12:44:42.095"></status>
</kw>
<msg timestamp="20201029 12:44:42.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022171403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.808" endtime="20201029 12:44:42.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022171403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.100" endtime="20201029 12:44:42.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.108" endtime="20201029 12:44:42.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.805" endtime="20201029 12:44:42.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.803" endtime="20201029 12:44:42.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:42.118" level="INFO">${RESULT} = [{'diff': 6.773600000000227e-05}, {'diff': 6.72640000000009e-05}, {'diff': 6.711100000000164e-05}, {'diff': 6.788899999999806e-05}, {'diff': 6.695900000000185e-05}, {'diff': 6.713899999999731e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:42.113" endtime="20201029 12:44:42.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:42.123" level="INFO">${ACCURACY} = {'diff': [6.773600000000227e-05, 6.72640000000009e-05, 6.711100000000164e-05, 6.788899999999806e-05, 6.695900000000185e-05, 6.713899999999731e-05, 6.745799999999941e-05, 6.779100000000107e-05, 6.76530...</msg>
<status status="PASS" starttime="20201029 12:44:42.119" endtime="20201029 12:44:42.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.127" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 12:44:42.126" endtime="20201029 12:44:42.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.129" level="INFO">VALUE: [6.773600000000227e-05, 6.72640000000009e-05, 6.711100000000164e-05, 6.788899999999806e-05, 6.695900000000185e-05, 6.713899999999731e-05, 6.745799999999941e-05, 6.779100000000107e-05, 6.765300000000085e-05, 6.779100000000107e-05, 6.763900000000128e-05, 6.730500000000014e-05, 6.747200000000245e-05, 6.762500000000171e-05, 6.69030000000001e-05, 6.781999999999969e-05, 6.712500000000121e-05, 6.745899999999888e-05, 6.730599999999962e-05, 6.697300000000142e-05, 6.697199999999848e-05, 6.765200000000138e-05, 6.763900000000128e-05, 6.77770000000015e-05, 6.786100000000239e-05, 6.711099999999817e-05, 6.713899999999731e-05, 6.715300000000035e-05, 6.780600000000012e-05, 6.697200000000195e-05, 6.697200000000195e-05, 6.729200000000005e-05, 6.763900000000128e-05, 6.780600000000012e-05, 6.762499999999824e-05, 6.763900000000128e-05, 6.761099999999867e-05, 6.694400000000281e-05, 6.763900000000128e-05, 6.762500000000171e-05, 6.697200000000195e-05, 6.737500000000146e-05, 6.7583000000003e-05, 6.748599999999855e-05, 6.780600000000012e-05, 6.734699999999885e-05, 6.781999999999969e-05, 6.730599999999962e-05, 6.761200000000162e-05, 6.747199999999898e-05]</msg>
<status status="PASS" starttime="20201029 12:44:42.128" endtime="20201029 12:44:42.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.123" endtime="20201029 12:44:42.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:42.135" endtime="20201029 12:44:42.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.133" endtime="20201029 12:44:42.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.132" endtime="20201029 12:44:42.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.770" endtime="20201029 12:44:42.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.770" endtime="20201029 12:44:42.155"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.164" endtime="20201029 12:44:42.183"></status>
</kw>
<msg timestamp="20201029 12:44:42.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.163" endtime="20201029 12:44:42.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.185" endtime="20201029 12:44:42.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.188" endtime="20201029 12:44:42.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.160" endtime="20201029 12:44:42.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.158" endtime="20201029 12:44:42.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.197" endtime="20201029 12:44:42.483"></status>
</kw>
<msg timestamp="20201029 12:44:42.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023767583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023836208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.195" endtime="20201029 12:44:42.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023767583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023836208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.487" endtime="20201029 12:44:42.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.495" endtime="20201029 12:44:42.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.193" endtime="20201029 12:44:42.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.191" endtime="20201029 12:44:42.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:42.502" level="INFO">${RESULT} = [{'diff': 6.862500000000271e-05}, {'diff': 6.795899999999938e-05}, {'diff': 6.844500000000031e-05}, {'diff': 6.827800000000148e-05}, {'diff': 6.847199999999998e-05}, {'diff': 6.811099999999917e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:42.499" endtime="20201029 12:44:42.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:42.506" level="INFO">${ACCURACY} = {'diff': [6.862500000000271e-05, 6.795899999999938e-05, 6.844500000000031e-05, 6.827800000000148e-05, 6.847199999999998e-05, 6.811099999999917e-05, 6.797199999999948e-05, 6.862499999999924e-05, 6.7944...</msg>
<status status="PASS" starttime="20201029 12:44:42.503" endtime="20201029 12:44:42.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.511" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 12:44:42.510" endtime="20201029 12:44:42.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.514" level="INFO">VALUE: [6.862500000000271e-05, 6.795899999999938e-05, 6.844500000000031e-05, 6.827800000000148e-05, 6.847199999999998e-05, 6.811099999999917e-05, 6.797199999999948e-05, 6.862499999999924e-05, 6.794400000000034e-05, 6.879200000000155e-05, 6.815300000000135e-05, 6.879199999999808e-05, 6.862499999999924e-05, 6.794499999999981e-05, 6.847299999999945e-05, 6.848699999999902e-05, 6.855600000000087e-05, 6.845899999999988e-05, 6.852800000000173e-05, 6.845800000000041e-05, 6.797199999999948e-05, 6.845800000000041e-05, 6.797199999999948e-05, 6.830499999999767e-05, 6.862499999999924e-05, 6.813899999999831e-05, 6.829200000000105e-05, 6.847199999999998e-05, 6.863900000000228e-05, 6.812499999999874e-05, 6.795899999999938e-05, 6.798599999999905e-05, 6.812499999999874e-05, 6.827699999999853e-05, 6.831899999999724e-05, 6.797199999999948e-05, 6.880499999999817e-05, 6.879199999999808e-05, 6.829200000000105e-05, 6.841700000000117e-05, 6.847199999999998e-05, 6.862499999999924e-05, 6.830600000000062e-05, 6.859799999999958e-05, 6.862499999999924e-05, 6.797300000000242e-05, 6.845800000000041e-05, 6.811099999999917e-05, 6.831900000000071e-05, 6.880499999999817e-05]</msg>
<status status="PASS" starttime="20201029 12:44:42.512" endtime="20201029 12:44:42.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.507" endtime="20201029 12:44:42.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:42.519" endtime="20201029 12:44:42.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.518" endtime="20201029 12:44:42.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.517" endtime="20201029 12:44:42.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.156" endtime="20201029 12:44:42.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.156" endtime="20201029 12:44:42.540"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.549" endtime="20201029 12:44:42.567"></status>
</kw>
<msg timestamp="20201029 12:44:42.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.547" endtime="20201029 12:44:42.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.568" endtime="20201029 12:44:42.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.571" endtime="20201029 12:44:42.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.545" endtime="20201029 12:44:42.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.542" endtime="20201029 12:44:42.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.580" endtime="20201029 12:44:42.866"></status>
</kw>
<msg timestamp="20201029 12:44:42.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.578" endtime="20201029 12:44:42.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.870" endtime="20201029 12:44:42.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.878" endtime="20201029 12:44:42.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.576" endtime="20201029 12:44:42.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.574" endtime="20201029 12:44:42.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:42.885" level="INFO">${RESULT} = [{'diff': 6.954199999999883e-05}, {'diff': 6.962500000000024e-05}, {'diff': 6.930599999999815e-05}, {'diff': 6.923699999999977e-05}, {'diff': 6.97909999999996e-05}, {'diff': 6.962500000000024e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:42.882" endtime="20201029 12:44:42.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:42.890" level="INFO">${ACCURACY} = {'diff': [6.954199999999883e-05, 6.962500000000024e-05, 6.930599999999815e-05, 6.923699999999977e-05, 6.97909999999996e-05, 6.962500000000024e-05, 6.918099999999802e-05, 6.966699999999895e-05, 6.89159...</msg>
<status status="PASS" starttime="20201029 12:44:42.886" endtime="20201029 12:44:42.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.894" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 12:44:42.893" endtime="20201029 12:44:42.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.897" level="INFO">VALUE: [6.954199999999883e-05, 6.962500000000024e-05, 6.930599999999815e-05, 6.923699999999977e-05, 6.97909999999996e-05, 6.962500000000024e-05, 6.918099999999802e-05, 6.966699999999895e-05, 6.891599999999873e-05, 6.947200000000098e-05, 6.913899999999931e-05, 6.945799999999794e-05, 6.913899999999931e-05, 6.947300000000045e-05, 6.962499999999677e-05, 6.962500000000024e-05, 6.983300000000178e-05, 6.895900000000038e-05, 6.965199999999991e-05, 6.897199999999701e-05, 6.929100000000257e-05, 6.980499999999917e-05, 6.930499999999867e-05, 6.976399999999994e-05, 6.965300000000285e-05, 6.947200000000098e-05, 6.962500000000024e-05, 6.980600000000212e-05, 6.962500000000024e-05, 6.890299999999863e-05, 6.930600000000162e-05, 6.944400000000184e-05, 6.947200000000098e-05, 6.947200000000098e-05, 6.931899999999824e-05, 6.945800000000141e-05, 6.934700000000085e-05, 6.927799999999901e-05, 6.895799999999744e-05, 6.930599999999815e-05, 6.962500000000024e-05, 6.905600000000137e-05, 6.962500000000024e-05, 6.947300000000045e-05, 6.947300000000045e-05, 6.930500000000214e-05, 6.930499999999867e-05, 6.981899999999874e-05, 6.977700000000003e-05, 6.962500000000024e-05]</msg>
<status status="PASS" starttime="20201029 12:44:42.895" endtime="20201029 12:44:42.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.891" endtime="20201029 12:44:42.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:42.902" endtime="20201029 12:44:42.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.900" endtime="20201029 12:44:42.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.899" endtime="20201029 12:44:42.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.541" endtime="20201029 12:44:42.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.540" endtime="20201029 12:44:42.923"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.931" endtime="20201029 12:44:42.951"></status>
</kw>
<msg timestamp="20201029 12:44:42.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.930" endtime="20201029 12:44:42.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.952" endtime="20201029 12:44:42.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.955" endtime="20201029 12:44:42.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.927" endtime="20201029 12:44:42.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.925" endtime="20201029 12:44:42.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.964" endtime="20201029 12:44:43.254"></status>
</kw>
<msg timestamp="20201029 12:44:43.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022250014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.963" endtime="20201029 12:44:43.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022250014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.258" endtime="20201029 12:44:43.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.266" endtime="20201029 12:44:43.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.960" endtime="20201029 12:44:43.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.958" endtime="20201029 12:44:43.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:43.273" level="INFO">${RESULT} = [{'diff': 7.012500000000074e-05}, {'diff': 7.045799999999894e-05}, {'diff': 7.059699999999863e-05}, {'diff': 6.998600000000105e-05}, {'diff': 7.047200000000198e-05}, {'diff': 7.013900000000031e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:43.270" endtime="20201029 12:44:43.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:43.277" level="INFO">${ACCURACY} = {'diff': [7.012500000000074e-05, 7.045799999999894e-05, 7.059699999999863e-05, 6.998600000000105e-05, 7.047200000000198e-05, 7.013900000000031e-05, 7.04169999999997e-05, 7.080599999999965e-05, 7.04719...</msg>
<status status="PASS" starttime="20201029 12:44:43.274" endtime="20201029 12:44:43.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.282" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 12:44:43.281" endtime="20201029 12:44:43.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.284" level="INFO">VALUE: [7.012500000000074e-05, 7.045799999999894e-05, 7.059699999999863e-05, 6.998600000000105e-05, 7.047200000000198e-05, 7.013900000000031e-05, 7.04169999999997e-05, 7.080599999999965e-05, 7.047199999999851e-05, 6.998600000000105e-05, 7.013900000000031e-05, 7.079200000000008e-05, 7.031899999999924e-05, 7.07910000000006e-05, 7.013900000000031e-05, 7.047199999999851e-05, 7.06109999999982e-05, 7.025000000000087e-05, 7.047200000000198e-05, 7.047200000000198e-05, 6.997199999999801e-05, 7.013900000000031e-05, 7.011100000000117e-05, 7.065300000000038e-05, 7.063900000000081e-05, 6.997300000000095e-05, 7.023700000000077e-05, 7.030500000000314e-05, 7.02910000000001e-05, 7.081899999999974e-05, 7.033300000000228e-05, 7.012499999999727e-05, 7.081999999999922e-05, 7.081999999999922e-05, 7.002700000000028e-05, 6.997199999999801e-05, 6.997299999999748e-05, 7.045899999999841e-05, 7.006999999999847e-05, 7.013800000000084e-05, 7.027800000000001e-05, 7.047199999999851e-05, 7.045800000000241e-05, 7.077699999999756e-05, 7.047200000000198e-05, 7.058299999999906e-05, 7.045799999999894e-05, 7.031999999999872e-05, 7.048600000000155e-05, 6.994499999999834e-05]</msg>
<status status="PASS" starttime="20201029 12:44:43.283" endtime="20201029 12:44:43.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.278" endtime="20201029 12:44:43.286"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:43.289" endtime="20201029 12:44:43.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.288" endtime="20201029 12:44:43.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.287" endtime="20201029 12:44:43.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.924" endtime="20201029 12:44:43.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.923" endtime="20201029 12:44:43.310"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.319" endtime="20201029 12:44:43.337"></status>
</kw>
<msg timestamp="20201029 12:44:43.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.317" endtime="20201029 12:44:43.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.338" endtime="20201029 12:44:43.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.341" endtime="20201029 12:44:43.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.315" endtime="20201029 12:44:43.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.313" endtime="20201029 12:44:43.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.350" endtime="20201029 12:44:43.637"></status>
</kw>
<msg timestamp="20201029 12:44:43.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023038361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023109597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.348" endtime="20201029 12:44:43.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023038361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023109597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.641" endtime="20201029 12:44:43.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.649" endtime="20201029 12:44:43.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.346" endtime="20201029 12:44:43.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.344" endtime="20201029 12:44:43.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:43.656" level="INFO">${RESULT} = [{'diff': 7.123599999999883e-05}, {'diff': 7.127700000000153e-05}, {'diff': 7.131999999999972e-05}, {'diff': 7.133299999999981e-05}, {'diff': 7.177799999999804e-05}, {'diff': 7.147199999999951e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:43.653" endtime="20201029 12:44:43.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:43.660" level="INFO">${ACCURACY} = {'diff': [7.123599999999883e-05, 7.127700000000153e-05, 7.131999999999972e-05, 7.133299999999981e-05, 7.177799999999804e-05, 7.147199999999951e-05, 7.147199999999951e-05, 7.145799999999994e-05, 7.1792...</msg>
<status status="PASS" starttime="20201029 12:44:43.657" endtime="20201029 12:44:43.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.665" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 12:44:43.664" endtime="20201029 12:44:43.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.667" level="INFO">VALUE: [7.123599999999883e-05, 7.127700000000153e-05, 7.131999999999972e-05, 7.133299999999981e-05, 7.177799999999804e-05, 7.147199999999951e-05, 7.147199999999951e-05, 7.145799999999994e-05, 7.179200000000108e-05, 7.117999999999708e-05, 7.127800000000101e-05, 7.162499999999877e-05, 7.17910000000016e-05, 7.129099999999763e-05, 7.176400000000194e-05, 7.147199999999951e-05, 7.147200000000298e-05, 7.095799999999944e-05, 7.113900000000131e-05, 7.182000000000022e-05, 7.129200000000058e-05, 7.182000000000022e-05, 7.166600000000148e-05, 7.147299999999898e-05, 7.163900000000181e-05, 7.148599999999908e-05, 7.094399999999987e-05, 7.148599999999908e-05, 7.102800000000076e-05, 7.145799999999994e-05, 7.163900000000181e-05, 7.130600000000015e-05, 7.145799999999994e-05, 7.09170000000002e-05, 7.163900000000181e-05, 7.129200000000058e-05, 7.182000000000022e-05, 7.130600000000015e-05, 7.162499999999877e-05, 7.177799999999804e-05, 7.090199999999769e-05, 7.147200000000298e-05, 7.097199999999901e-05, 7.154200000000083e-05, 7.162499999999877e-05, 7.163900000000181e-05, 7.179199999999761e-05, 7.162499999999877e-05, 7.163899999999834e-05, 7.145899999999941e-05]</msg>
<status status="PASS" starttime="20201029 12:44:43.666" endtime="20201029 12:44:43.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.661" endtime="20201029 12:44:43.669"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:43.673" endtime="20201029 12:44:43.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.672" endtime="20201029 12:44:43.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.670" endtime="20201029 12:44:43.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.311" endtime="20201029 12:44:43.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.310" endtime="20201029 12:44:43.694"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.702" endtime="20201029 12:44:43.720"></status>
</kw>
<msg timestamp="20201029 12:44:43.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.701" endtime="20201029 12:44:43.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.722" endtime="20201029 12:44:43.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.724" endtime="20201029 12:44:43.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.698" endtime="20201029 12:44:43.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.696" endtime="20201029 12:44:43.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.733" endtime="20201029 12:44:44.020"></status>
</kw>
<msg timestamp="20201029 12:44:44.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022098653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.732" endtime="20201029 12:44:44.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022098653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.024" endtime="20201029 12:44:44.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.033" endtime="20201029 12:44:44.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.729" endtime="20201029 12:44:44.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.728" endtime="20201029 12:44:44.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:44.039" level="INFO">${RESULT} = [{'diff': 7.27499999999999e-05}, {'diff': 7.272200000000076e-05}, {'diff': 7.229200000000158e-05}, {'diff': 7.230600000000115e-05}, {'diff': 7.267999999999858e-05}, {'diff': 7.229199999999811e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:44.036" endtime="20201029 12:44:44.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:44.045" level="INFO">${ACCURACY} = {'diff': [7.27499999999999e-05, 7.272200000000076e-05, 7.229200000000158e-05, 7.230600000000115e-05, 7.267999999999858e-05, 7.229199999999811e-05, 7.265199999999944e-05, 7.263900000000281e-05, 7.21389...</msg>
<status status="PASS" starttime="20201029 12:44:44.040" endtime="20201029 12:44:44.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.049" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 12:44:44.048" endtime="20201029 12:44:44.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.051" level="INFO">VALUE: [7.27499999999999e-05, 7.272200000000076e-05, 7.229200000000158e-05, 7.230600000000115e-05, 7.267999999999858e-05, 7.229199999999811e-05, 7.265199999999944e-05, 7.263900000000281e-05, 7.213899999999884e-05, 7.277800000000251e-05, 7.197200000000001e-05, 7.279199999999861e-05, 7.229200000000158e-05, 7.212499999999927e-05, 7.229200000000158e-05, 7.194500000000034e-05, 7.25699999999975e-05, 7.229199999999811e-05, 7.229200000000158e-05, 7.247199999999704e-05, 7.263899999999934e-05, 7.213899999999884e-05, 7.248600000000008e-05, 7.28049999999987e-05, 7.263900000000281e-05, 7.209700000000013e-05, 7.197200000000001e-05, 7.197200000000001e-05, 7.247299999999998e-05, 7.197299999999948e-05, 7.245899999999694e-05, 7.237500000000299e-05, 7.247200000000051e-05, 7.279099999999913e-05, 7.247200000000051e-05, 7.263899999999934e-05, 7.262499999999977e-05, 7.279199999999861e-05, 7.198599999999958e-05, 7.229199999999811e-05, 7.212499999999927e-05, 7.281999999999775e-05, 7.280600000000165e-05, 7.287500000000002e-05, 7.247299999999998e-05, 7.197200000000001e-05, 7.263899999999934e-05, 7.263899999999934e-05, 7.262499999999977e-05, 7.201399999999872e-05]</msg>
<status status="PASS" starttime="20201029 12:44:44.050" endtime="20201029 12:44:44.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.045" endtime="20201029 12:44:44.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:44.057" endtime="20201029 12:44:44.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.055" endtime="20201029 12:44:44.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.054" endtime="20201029 12:44:44.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.695" endtime="20201029 12:44:44.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.694" endtime="20201029 12:44:44.077"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.086" endtime="20201029 12:44:44.104"></status>
</kw>
<msg timestamp="20201029 12:44:44.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.084" endtime="20201029 12:44:44.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.105" endtime="20201029 12:44:44.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.108" endtime="20201029 12:44:44.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.082" endtime="20201029 12:44:44.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.080" endtime="20201029 12:44:44.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.117" endtime="20201029 12:44:44.404"></status>
</kw>
<msg timestamp="20201029 12:44:44.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.116" endtime="20201029 12:44:44.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.409" endtime="20201029 12:44:44.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.417" endtime="20201029 12:44:44.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.113" endtime="20201029 12:44:44.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.111" endtime="20201029 12:44:44.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:44.426" level="INFO">${RESULT} = [{'diff': 7.312500000000027e-05}, {'diff': 7.350000000000065e-05}, {'diff': 7.379199999999961e-05}, {'diff': 7.295900000000091e-05}, {'diff': 7.313899999999984e-05}, {'diff': 7.377800000000004e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:44.422" endtime="20201029 12:44:44.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:44.430" level="INFO">${ACCURACY} = {'diff': [7.312500000000027e-05, 7.350000000000065e-05, 7.379199999999961e-05, 7.295900000000091e-05, 7.313899999999984e-05, 7.377800000000004e-05, 7.297200000000101e-05, 7.313800000000037e-05, 7.3624...</msg>
<status status="PASS" starttime="20201029 12:44:44.427" endtime="20201029 12:44:44.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.434" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 12:44:44.433" endtime="20201029 12:44:44.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.437" level="INFO">VALUE: [7.312500000000027e-05, 7.350000000000065e-05, 7.379199999999961e-05, 7.295900000000091e-05, 7.313899999999984e-05, 7.377800000000004e-05, 7.297200000000101e-05, 7.313800000000037e-05, 7.36249999999973e-05, 7.345800000000194e-05, 7.38049999999997e-05, 7.329199999999911e-05, 7.345800000000194e-05, 7.31249999999968e-05, 7.379200000000308e-05, 7.36249999999973e-05, 7.333400000000129e-05, 7.337500000000052e-05, 7.344499999999837e-05, 7.297300000000048e-05, 7.330500000000267e-05, 7.312500000000027e-05, 7.373600000000133e-05, 7.33049999999992e-05, 7.359700000000163e-05, 7.330600000000215e-05, 7.363900000000034e-05, 7.312500000000027e-05, 7.373600000000133e-05, 7.320800000000169e-05, 7.329199999999911e-05, 7.329200000000258e-05, 7.386100000000145e-05, 7.329199999999911e-05, 7.363899999999687e-05, 7.38049999999997e-05, 7.298600000000058e-05, 7.36249999999973e-05, 7.334699999999791e-05, 7.376400000000047e-05, 7.381899999999927e-05, 7.380599999999918e-05, 7.30560000000019e-05, 7.379199999999961e-05, 7.344499999999837e-05, 7.363900000000034e-05, 7.379199999999961e-05, 7.351400000000022e-05, 7.381900000000274e-05, 7.31110000000007e-05]</msg>
<status status="PASS" starttime="20201029 12:44:44.436" endtime="20201029 12:44:44.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.431" endtime="20201029 12:44:44.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:44.442" endtime="20201029 12:44:44.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.441" endtime="20201029 12:44:44.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.440" endtime="20201029 12:44:44.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.078" endtime="20201029 12:44:44.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.078" endtime="20201029 12:44:44.463"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.472" endtime="20201029 12:44:44.492"></status>
</kw>
<msg timestamp="20201029 12:44:44.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.471" endtime="20201029 12:44:44.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.494" endtime="20201029 12:44:44.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.496" endtime="20201029 12:44:44.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.468" endtime="20201029 12:44:44.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.466" endtime="20201029 12:44:44.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.505" endtime="20201029 12:44:44.791"></status>
</kw>
<msg timestamp="20201029 12:44:44.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023664819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023739014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.504" endtime="20201029 12:44:44.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023664819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023739014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.795" endtime="20201029 12:44:44.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.804" endtime="20201029 12:44:44.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.501" endtime="20201029 12:44:44.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.499" endtime="20201029 12:44:44.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:44.810" level="INFO">${RESULT} = [{'diff': 7.419499999999912e-05}, {'diff': 7.462500000000177e-05}, {'diff': 7.463900000000134e-05}, {'diff': 7.447299999999851e-05}, {'diff': 7.445899999999894e-05}, {'diff': 7.401400000000072e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:44.807" endtime="20201029 12:44:44.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:44.815" level="INFO">${ACCURACY} = {'diff': [7.419499999999912e-05, 7.462500000000177e-05, 7.463900000000134e-05, 7.447299999999851e-05, 7.445899999999894e-05, 7.401400000000072e-05, 7.43050000000002e-05, 7.43050000000002e-05, 7.397200...</msg>
<status status="PASS" starttime="20201029 12:44:44.811" endtime="20201029 12:44:44.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.819" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 12:44:44.818" endtime="20201029 12:44:44.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.822" level="INFO">VALUE: [7.419499999999912e-05, 7.462500000000177e-05, 7.463900000000134e-05, 7.447299999999851e-05, 7.445899999999894e-05, 7.401400000000072e-05, 7.43050000000002e-05, 7.43050000000002e-05, 7.397200000000201e-05, 7.465300000000091e-05, 7.463900000000134e-05, 7.447199999999904e-05, 7.397199999999854e-05, 7.430599999999968e-05, 7.390300000000016e-05, 7.397299999999801e-05, 7.445899999999894e-05, 7.429200000000011e-05, 7.397199999999854e-05, 7.468100000000005e-05, 7.41249999999978e-05, 7.48050000000007e-05, 7.48050000000007e-05, 7.447200000000251e-05, 7.41249999999978e-05, 7.463899999999787e-05, 7.405499999999995e-05, 7.46249999999983e-05, 7.395900000000191e-05, 7.448700000000155e-05, 7.480600000000018e-05, 7.479199999999714e-05, 7.431899999999977e-05, 7.447199999999904e-05, 7.43050000000002e-05, 7.48050000000007e-05, 7.397199999999854e-05, 7.39439999999994e-05, 7.479200000000061e-05, 7.401400000000072e-05, 7.411099999999823e-05, 7.420800000000269e-05, 7.447299999999851e-05, 7.397299999999801e-05, 7.41379999999979e-05, 7.431899999999977e-05, 7.415300000000041e-05, 7.40829999999991e-05, 7.420899999999869e-05, 7.463900000000134e-05]</msg>
<status status="PASS" starttime="20201029 12:44:44.820" endtime="20201029 12:44:44.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.815" endtime="20201029 12:44:44.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:44.827" endtime="20201029 12:44:44.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.826" endtime="20201029 12:44:44.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.825" endtime="20201029 12:44:44.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.464" endtime="20201029 12:44:44.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.464" endtime="20201029 12:44:44.848"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.857" endtime="20201029 12:44:44.874"></status>
</kw>
<msg timestamp="20201029 12:44:44.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.855" endtime="20201029 12:44:44.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.876" endtime="20201029 12:44:44.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.878" endtime="20201029 12:44:44.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.853" endtime="20201029 12:44:44.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.850" endtime="20201029 12:44:44.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.888" endtime="20201029 12:44:45.173"></status>
</kw>
<msg timestamp="20201029 12:44:45.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022109, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022184069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:44.886" endtime="20201029 12:44:45.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022109, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022184069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:45.177" endtime="20201029 12:44:45.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.185" endtime="20201029 12:44:45.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.883" endtime="20201029 12:44:45.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.882" endtime="20201029 12:44:45.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:45.192" level="INFO">${RESULT} = [{'diff': 7.506900000000052e-05}, {'diff': 7.56249999999993e-05}, {'diff': 7.495799999999997e-05}, {'diff': 7.497199999999954e-05}, {'diff': 7.529100000000163e-05}, {'diff': 7.495799999999997e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:45.189" endtime="20201029 12:44:45.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:45.197" level="INFO">${ACCURACY} = {'diff': [7.506900000000052e-05, 7.56249999999993e-05, 7.495799999999997e-05, 7.497199999999954e-05, 7.529100000000163e-05, 7.495799999999997e-05, 7.58050000000017e-05, 7.545800000000047e-05, 7.563899...</msg>
<status status="PASS" starttime="20201029 12:44:45.193" endtime="20201029 12:44:45.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.201" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 12:44:45.200" endtime="20201029 12:44:45.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.204" level="INFO">VALUE: [7.506900000000052e-05, 7.56249999999993e-05, 7.495799999999997e-05, 7.497199999999954e-05, 7.529100000000163e-05, 7.495799999999997e-05, 7.58050000000017e-05, 7.545800000000047e-05, 7.563899999999887e-05, 7.497199999999954e-05, 7.56249999999993e-05, 7.532000000000025e-05, 7.580600000000118e-05, 7.495899999999944e-05, 7.580499999999823e-05, 7.58050000000017e-05, 7.579100000000213e-05, 7.527700000000206e-05, 7.531900000000077e-05, 7.532000000000025e-05, 7.534800000000286e-05, 7.51249999999988e-05, 7.547200000000004e-05, 7.497299999999901e-05, 7.563899999999887e-05, 7.565300000000191e-05, 7.530600000000068e-05, 7.512500000000227e-05, 7.561099999999973e-05, 7.531900000000077e-05, 7.57769999999991e-05, 7.580499999999823e-05, 7.515300000000141e-05, 7.563900000000234e-05, 7.576400000000247e-05, 7.563900000000234e-05, 7.497199999999954e-05, 7.512500000000227e-05, 7.566600000000201e-05, 7.545899999999994e-05, 7.56379999999994e-05, 7.56379999999994e-05, 7.51249999999988e-05, 7.563899999999887e-05, 7.51249999999988e-05, 7.513899999999837e-05, 7.548600000000308e-05, 7.563899999999887e-05, 7.547200000000004e-05, 7.498599999999911e-05]</msg>
<status status="PASS" starttime="20201029 12:44:45.203" endtime="20201029 12:44:45.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.198" endtime="20201029 12:44:45.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:45.209" endtime="20201029 12:44:45.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.207" endtime="20201029 12:44:45.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.206" endtime="20201029 12:44:45.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.849" endtime="20201029 12:44:45.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.848" endtime="20201029 12:44:45.230"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.238" endtime="20201029 12:44:45.257"></status>
</kw>
<msg timestamp="20201029 12:44:45.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.237" endtime="20201029 12:44:45.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.259" endtime="20201029 12:44:45.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.261" endtime="20201029 12:44:45.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.234" endtime="20201029 12:44:45.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.232" endtime="20201029 12:44:45.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.271" endtime="20201029 12:44:45.556"></status>
</kw>
<msg timestamp="20201029 12:44:45.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.269" endtime="20201029 12:44:45.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.560" endtime="20201029 12:44:45.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.569" endtime="20201029 12:44:45.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.267" endtime="20201029 12:44:45.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.265" endtime="20201029 12:44:45.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:45.576" level="INFO">${RESULT} = [{'diff': 7.65700000000015e-05}, {'diff': 7.663899999999987e-05}, {'diff': 7.663899999999987e-05}, {'diff': 7.597300000000001e-05}, {'diff': 7.59579999999975e-05}, {'diff': 7.63189999999983e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:44:45.572" endtime="20201029 12:44:45.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:45.580" level="INFO">${ACCURACY} = {'diff': [7.65700000000015e-05, 7.663899999999987e-05, 7.663899999999987e-05, 7.597300000000001e-05, 7.59579999999975e-05, 7.63189999999983e-05, 7.68189999999988e-05, 7.680499999999923e-05, 7.64580000...</msg>
<status status="PASS" starttime="20201029 12:44:45.577" endtime="20201029 12:44:45.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.584" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 12:44:45.583" endtime="20201029 12:44:45.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.587" level="INFO">VALUE: [7.65700000000015e-05, 7.663899999999987e-05, 7.663899999999987e-05, 7.597300000000001e-05, 7.59579999999975e-05, 7.63189999999983e-05, 7.68189999999988e-05, 7.680499999999923e-05, 7.645800000000147e-05, 7.61249999999998e-05, 7.645800000000147e-05, 7.647199999999757e-05, 7.59449999999974e-05, 7.597200000000054e-05, 7.623600000000036e-05, 7.645900000000094e-05, 7.636100000000048e-05, 7.591599999999879e-05, 7.615300000000241e-05, 7.597199999999707e-05, 7.670899999999772e-05, 7.663899999999987e-05, 7.648600000000061e-05, 7.66250000000003e-05, 7.613899999999937e-05, 7.677799999999957e-05, 7.598699999999958e-05, 7.64029999999992e-05, 7.681900000000227e-05, 7.680499999999923e-05, 7.61249999999998e-05, 7.681900000000227e-05, 7.665299999999944e-05, 7.677799999999957e-05, 7.68050000000027e-05, 7.62639999999995e-05, 7.675000000000043e-05, 7.66250000000003e-05, 7.630599999999821e-05, 7.613899999999937e-05, 7.683300000000184e-05, 7.663899999999987e-05, 7.609700000000066e-05, 7.597200000000054e-05, 7.61249999999998e-05, 7.598600000000011e-05, 7.680499999999923e-05, 7.675000000000043e-05, 7.663899999999987e-05, 7.629199999999864e-05]</msg>
<status status="PASS" starttime="20201029 12:44:45.585" endtime="20201029 12:44:45.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.581" endtime="20201029 12:44:45.588"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:45.592" endtime="20201029 12:44:45.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.590" endtime="20201029 12:44:45.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.589" endtime="20201029 12:44:45.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.231" endtime="20201029 12:44:45.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.230" endtime="20201029 12:44:45.613"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.621" endtime="20201029 12:44:45.641"></status>
</kw>
<msg timestamp="20201029 12:44:45.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.620" endtime="20201029 12:44:45.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.643" endtime="20201029 12:44:45.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.645" endtime="20201029 12:44:45.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.617" endtime="20201029 12:44:45.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.615" endtime="20201029 12:44:45.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.654" endtime="20201029 12:44:45.940"></status>
</kw>
<msg timestamp="20201029 12:44:45.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023264875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023342792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.653" endtime="20201029 12:44:45.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023264875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023342792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.944" endtime="20201029 12:44:45.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.952" endtime="20201029 12:44:45.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.650" endtime="20201029 12:44:45.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.648" endtime="20201029 12:44:45.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:45.959" level="INFO">${RESULT} = [{'diff': 7.791700000000026e-05}, {'diff': 7.71250000000008e-05}, {'diff': 7.697199999999807e-05}, {'diff': 7.763799999999793e-05}, {'diff': 7.713900000000037e-05}, {'diff': 7.71250000000008e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:45.956" endtime="20201029 12:44:45.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:45.963" level="INFO">${ACCURACY} = {'diff': [7.791700000000026e-05, 7.71250000000008e-05, 7.697199999999807e-05, 7.763799999999793e-05, 7.713900000000037e-05, 7.71250000000008e-05, 7.695800000000197e-05, 7.697200000000154e-05, 7.763900...</msg>
<status status="PASS" starttime="20201029 12:44:45.960" endtime="20201029 12:44:45.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.968" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 12:44:45.967" endtime="20201029 12:44:45.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.971" level="INFO">VALUE: [7.791700000000026e-05, 7.71250000000008e-05, 7.697199999999807e-05, 7.763799999999793e-05, 7.713900000000037e-05, 7.71250000000008e-05, 7.695800000000197e-05, 7.697200000000154e-05, 7.763900000000087e-05, 7.780599999999971e-05, 7.748600000000161e-05, 7.773599999999839e-05, 7.730600000000268e-05, 7.765300000000044e-05, 7.78189999999998e-05, 7.762499999999783e-05, 7.76250000000013e-05, 7.765300000000044e-05, 7.747200000000204e-05, 7.71250000000008e-05, 7.73189999999993e-05, 7.727800000000007e-05, 7.744399999999943e-05, 7.780599999999971e-05, 7.698599999999764e-05, 7.768000000000011e-05, 7.7151999999997e-05, 7.747299999999804e-05, 7.745900000000194e-05, 7.694399999999893e-05, 7.729100000000017e-05, 7.730499999999974e-05, 7.729100000000017e-05, 7.69579999999985e-05, 7.697200000000154e-05, 7.758299999999912e-05, 7.731999999999878e-05, 7.779200000000014e-05, 7.704200000000286e-05, 7.747299999999804e-05, 7.729199999999964e-05, 7.731900000000277e-05, 7.747200000000204e-05, 7.695800000000197e-05, 7.713900000000037e-05, 7.7457999999999e-05, 7.713900000000037e-05, 7.7457999999999e-05, 7.748599999999814e-05, 7.734700000000191e-05]</msg>
<status status="PASS" starttime="20201029 12:44:45.969" endtime="20201029 12:44:45.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.964" endtime="20201029 12:44:45.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:45.976" endtime="20201029 12:44:45.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.975" endtime="20201029 12:44:45.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.973" endtime="20201029 12:44:45.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.614" endtime="20201029 12:44:45.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.613" endtime="20201029 12:44:45.997"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.006" endtime="20201029 12:44:46.024"></status>
</kw>
<msg timestamp="20201029 12:44:46.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.004" endtime="20201029 12:44:46.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.025" endtime="20201029 12:44:46.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.028" endtime="20201029 12:44:46.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.001" endtime="20201029 12:44:46.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.999" endtime="20201029 12:44:46.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.037" endtime="20201029 12:44:46.323"></status>
</kw>
<msg timestamp="20201029 12:44:46.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022365986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.036" endtime="20201029 12:44:46.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022365986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.327" endtime="20201029 12:44:46.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.335" endtime="20201029 12:44:46.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.033" endtime="20201029 12:44:46.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.031" endtime="20201029 12:44:46.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:46.341" level="INFO">${RESULT} = [{'diff': 7.890299999999822e-05}, {'diff': 7.830600000000021e-05}, {'diff': 7.813900000000137e-05}, {'diff': 7.809800000000214e-05}, {'diff': 7.847299999999904e-05}, {'diff': 7.837499999999858e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:46.338" endtime="20201029 12:44:46.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:46.347" level="INFO">${ACCURACY} = {'diff': [7.890299999999822e-05, 7.830600000000021e-05, 7.813900000000137e-05, 7.809800000000214e-05, 7.847299999999904e-05, 7.837499999999858e-05, 7.862499999999883e-05, 7.865299999999797e-05, 7.8695...</msg>
<status status="PASS" starttime="20201029 12:44:46.343" endtime="20201029 12:44:46.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.351" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 12:44:46.350" endtime="20201029 12:44:46.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.354" level="INFO">VALUE: [7.890299999999822e-05, 7.830600000000021e-05, 7.813900000000137e-05, 7.809800000000214e-05, 7.847299999999904e-05, 7.837499999999858e-05, 7.862499999999883e-05, 7.865299999999797e-05, 7.869500000000015e-05, 7.8458e-05, 7.829200000000064e-05, 7.8458e-05, 7.862499999999883e-05, 7.848600000000261e-05, 7.813900000000137e-05, 7.797299999999854e-05, 7.830600000000021e-05, 7.849999999999871e-05, 7.883300000000037e-05, 7.830499999999727e-05, 7.879100000000167e-05, 7.8458e-05, 7.813900000000137e-05, 7.797199999999907e-05, 7.847199999999957e-05, 7.79579999999995e-05, 7.882000000000028e-05, 7.880600000000071e-05, 7.830600000000021e-05, 7.848599999999914e-05, 7.829100000000117e-05, 7.81250000000018e-05, 7.870799999999678e-05, 7.851400000000175e-05, 7.829199999999717e-05, 7.806900000000006e-05, 7.882000000000028e-05, 7.879200000000114e-05, 7.851399999999828e-05, 7.85839999999996e-05, 7.847299999999904e-05, 7.879199999999767e-05, 7.813799999999843e-05, 7.829100000000117e-05, 7.815300000000094e-05, 7.8458e-05, 7.844400000000043e-05, 7.81389999999979e-05, 7.879200000000114e-05, 7.847199999999957e-05]</msg>
<status status="PASS" starttime="20201029 12:44:46.352" endtime="20201029 12:44:46.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.347" endtime="20201029 12:44:46.360"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:46.364" endtime="20201029 12:44:46.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.362" endtime="20201029 12:44:46.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.361" endtime="20201029 12:44:46.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.998" endtime="20201029 12:44:46.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.997" endtime="20201029 12:44:46.384"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.393" endtime="20201029 12:44:46.411"></status>
</kw>
<msg timestamp="20201029 12:44:46.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.392" endtime="20201029 12:44:46.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.413" endtime="20201029 12:44:46.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.416" endtime="20201029 12:44:46.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.389" endtime="20201029 12:44:46.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.387" endtime="20201029 12:44:46.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.425" endtime="20201029 12:44:46.714"></status>
</kw>
<msg timestamp="20201029 12:44:46.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022351625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022431042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.423" endtime="20201029 12:44:46.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022351625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022431042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.718" endtime="20201029 12:44:46.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.729" endtime="20201029 12:44:46.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.421" endtime="20201029 12:44:46.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.419" endtime="20201029 12:44:46.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:46.738" level="INFO">${RESULT} = [{'diff': 7.941700000000176e-05}, {'diff': 7.945900000000047e-05}, {'diff': 7.96389999999994e-05}, {'diff': 7.930600000000121e-05}, {'diff': 7.963799999999993e-05}, {'diff': 7.961100000000026e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:46.734" endtime="20201029 12:44:46.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:46.744" level="INFO">${ACCURACY} = {'diff': [7.941700000000176e-05, 7.945900000000047e-05, 7.96389999999994e-05, 7.930600000000121e-05, 7.963799999999993e-05, 7.961100000000026e-05, 7.901400000000225e-05, 7.911099999999976e-05, 7.96249...</msg>
<status status="PASS" starttime="20201029 12:44:46.740" endtime="20201029 12:44:46.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.751" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 12:44:46.750" endtime="20201029 12:44:46.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.754" level="INFO">VALUE: [7.941700000000176e-05, 7.945900000000047e-05, 7.96389999999994e-05, 7.930600000000121e-05, 7.963799999999993e-05, 7.961100000000026e-05, 7.901400000000225e-05, 7.911099999999976e-05, 7.962499999999983e-05, 7.924999999999946e-05, 7.980599999999824e-05, 7.966700000000201e-05, 7.911099999999976e-05, 7.965299999999897e-05, 7.932000000000078e-05, 7.979199999999867e-05, 7.930500000000174e-05, 7.947200000000057e-05, 7.980500000000224e-05, 7.897200000000007e-05, 7.984699999999748e-05, 7.962499999999983e-05, 7.929199999999817e-05, 7.962499999999983e-05, 7.96389999999994e-05, 7.977800000000257e-05, 7.986100000000051e-05, 7.945900000000047e-05, 7.93190000000013e-05, 7.9458000000001e-05, 7.89580000000005e-05, 7.912499999999933e-05, 7.962499999999983e-05, 7.94719999999971e-05, 7.929199999999817e-05, 7.962499999999983e-05, 7.897200000000007e-05, 7.936100000000001e-05, 7.962499999999983e-05, 7.897299999999954e-05, 7.90970000000002e-05, 7.929199999999817e-05, 7.947200000000057e-05, 7.897200000000007e-05, 7.930499999999827e-05, 7.926399999999903e-05, 7.945799999999753e-05, 7.94030000000022e-05, 7.895799999999703e-05, 7.927800000000207e-05]</msg>
<status status="PASS" starttime="20201029 12:44:46.752" endtime="20201029 12:44:46.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.746" endtime="20201029 12:44:46.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:46.759" endtime="20201029 12:44:46.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.757" endtime="20201029 12:44:46.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.756" endtime="20201029 12:44:46.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.385" endtime="20201029 12:44:46.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.385" endtime="20201029 12:44:46.779"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.788" endtime="20201029 12:44:46.808"></status>
</kw>
<msg timestamp="20201029 12:44:46.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.787" endtime="20201029 12:44:46.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.809" endtime="20201029 12:44:46.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.812" endtime="20201029 12:44:46.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.784" endtime="20201029 12:44:46.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.782" endtime="20201029 12:44:46.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.821" endtime="20201029 12:44:47.106"></status>
</kw>
<msg timestamp="20201029 12:44:47.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023324556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023405458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.819" endtime="20201029 12:44:47.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023324556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023405458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.110" endtime="20201029 12:44:47.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.119" endtime="20201029 12:44:47.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.817" endtime="20201029 12:44:47.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.815" endtime="20201029 12:44:47.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:47.125" level="INFO">${RESULT} = [{'diff': 8.090200000000075e-05}, {'diff': 8.031899999999884e-05}, {'diff': 8.050000000000071e-05}, {'diff': 8.084700000000195e-05}, {'diff': 8.04719999999981e-05}, {'diff': 8.008299999999816e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:47.122" endtime="20201029 12:44:47.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:47.129" level="INFO">${ACCURACY} = {'diff': [8.090200000000075e-05, 8.031899999999884e-05, 8.050000000000071e-05, 8.084700000000195e-05, 8.04719999999981e-05, 8.008299999999816e-05, 8.019399999999871e-05, 8.061100000000126e-05, 8.01529...</msg>
<status status="PASS" starttime="20201029 12:44:47.126" endtime="20201029 12:44:47.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.134" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 12:44:47.133" endtime="20201029 12:44:47.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.136" level="INFO">VALUE: [8.090200000000075e-05, 8.031899999999884e-05, 8.050000000000071e-05, 8.084700000000195e-05, 8.04719999999981e-05, 8.008299999999816e-05, 8.019399999999871e-05, 8.061100000000126e-05, 8.015299999999947e-05, 8.01389999999999e-05, 8.04169999999993e-05, 8.029199999999917e-05, 8.023600000000089e-05, 8.048600000000114e-05, 7.997200000000107e-05, 8.07780000000001e-05, 8.016699999999904e-05, 8.030599999999874e-05, 8.062500000000083e-05, 8.062499999999737e-05, 8.027800000000307e-05, 8.030599999999874e-05, 8.079199999999967e-05, 7.995900000000097e-05, 7.99580000000015e-05, 8.06390000000004e-05, 7.99719999999976e-05, 8.01389999999999e-05, 8.048599999999767e-05, 8.081999999999881e-05, 8.079200000000314e-05, 8.080599999999924e-05, 8.02779999999996e-05, 8.082000000000228e-05, 8.030599999999874e-05, 8.065299999999997e-05, 8.080499999999977e-05, 8.015299999999947e-05, 8.051400000000028e-05, 8.01389999999999e-05, 8.08190000000028e-05, 8.020800000000175e-05, 8.012500000000033e-05, 8.065299999999997e-05, 8.045900000000147e-05, 8.076400000000053e-05, 8.0458999999998e-05, 8.051400000000028e-05, 8.030499999999927e-05, 8.030499999999927e-05]</msg>
<status status="PASS" starttime="20201029 12:44:47.135" endtime="20201029 12:44:47.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.130" endtime="20201029 12:44:47.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:47.142" endtime="20201029 12:44:47.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.141" endtime="20201029 12:44:47.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.139" endtime="20201029 12:44:47.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.780" endtime="20201029 12:44:47.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.780" endtime="20201029 12:44:47.163"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.172" endtime="20201029 12:44:47.190"></status>
</kw>
<msg timestamp="20201029 12:44:47.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.170" endtime="20201029 12:44:47.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.191" endtime="20201029 12:44:47.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.194" endtime="20201029 12:44:47.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.168" endtime="20201029 12:44:47.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.165" endtime="20201029 12:44:47.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.204" endtime="20201029 12:44:47.489"></status>
</kw>
<msg timestamp="20201029 12:44:47.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022444278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.202" endtime="20201029 12:44:47.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022444278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.493" endtime="20201029 12:44:47.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.502" endtime="20201029 12:44:47.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.200" endtime="20201029 12:44:47.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.198" endtime="20201029 12:44:47.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:47.508" level="INFO">${RESULT} = [{'diff': 8.108299999999916e-05}, {'diff': 8.09719999999986e-05}, {'diff': 8.130600000000321e-05}, {'diff': 8.179200000000067e-05}, {'diff': 8.116700000000004e-05}, {'diff': 8.181999999999981e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:47.505" endtime="20201029 12:44:47.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:47.513" level="INFO">${ACCURACY} = {'diff': [8.108299999999916e-05, 8.09719999999986e-05, 8.130600000000321e-05, 8.179200000000067e-05, 8.116700000000004e-05, 8.181999999999981e-05, 8.097299999999807e-05, 8.18049999999973e-05, 8.145899...</msg>
<status status="PASS" starttime="20201029 12:44:47.509" endtime="20201029 12:44:47.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.518" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 12:44:47.517" endtime="20201029 12:44:47.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.520" level="INFO">VALUE: [8.108299999999916e-05, 8.09719999999986e-05, 8.130600000000321e-05, 8.179200000000067e-05, 8.116700000000004e-05, 8.181999999999981e-05, 8.097299999999807e-05, 8.18049999999973e-05, 8.1458999999999e-05, 8.130500000000027e-05, 8.131899999999984e-05, 8.162500000000183e-05, 8.16390000000014e-05, 8.145799999999953e-05, 8.16390000000014e-05, 8.180600000000024e-05, 8.145799999999953e-05, 8.16390000000014e-05, 8.11390000000009e-05, 8.111100000000177e-05, 8.1458999999999e-05, 8.162500000000183e-05, 8.11390000000009e-05, 8.17910000000012e-05, 8.145799999999953e-05, 8.148600000000214e-05, 8.112500000000133e-05, 8.162499999999837e-05, 8.156999999999956e-05, 8.181999999999981e-05, 8.130599999999974e-05, 8.09589999999985e-05, 8.162500000000183e-05, 8.145799999999953e-05, 8.130500000000027e-05, 8.127699999999766e-05, 8.112499999999787e-05, 8.147200000000257e-05, 8.09719999999986e-05, 8.126400000000103e-05, 8.132000000000278e-05, 8.151299999999834e-05, 8.16390000000014e-05, 8.147300000000204e-05, 8.144499999999943e-05, 8.148600000000214e-05, 8.14719999999991e-05, 8.162500000000183e-05, 8.133300000000288e-05, 8.152800000000085e-05]</msg>
<status status="PASS" starttime="20201029 12:44:47.519" endtime="20201029 12:44:47.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.514" endtime="20201029 12:44:47.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:47.526" endtime="20201029 12:44:47.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.524" endtime="20201029 12:44:47.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.523" endtime="20201029 12:44:47.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.164" endtime="20201029 12:44:47.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.163" endtime="20201029 12:44:47.546"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.555" endtime="20201029 12:44:47.573"></status>
</kw>
<msg timestamp="20201029 12:44:47.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.553" endtime="20201029 12:44:47.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.575" endtime="20201029 12:44:47.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.577" endtime="20201029 12:44:47.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.551" endtime="20201029 12:44:47.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.549" endtime="20201029 12:44:47.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.586" endtime="20201029 12:44:47.873"></status>
</kw>
<msg timestamp="20201029 12:44:47.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022312375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.585" endtime="20201029 12:44:47.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022312375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.877" endtime="20201029 12:44:47.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.885" endtime="20201029 12:44:47.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.582" endtime="20201029 12:44:47.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.581" endtime="20201029 12:44:47.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:47.892" level="INFO">${RESULT} = [{'diff': 8.273599999999992e-05}, {'diff': 8.231999999999684e-05}, {'diff': 8.280600000000124e-05}, {'diff': 8.194499999999993e-05}, {'diff': 8.22919999999977e-05}, {'diff': 8.286100000000005e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:47.889" endtime="20201029 12:44:47.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:47.896" level="INFO">${ACCURACY} = {'diff': [8.273599999999992e-05, 8.231999999999684e-05, 8.280600000000124e-05, 8.194499999999993e-05, 8.22919999999977e-05, 8.286100000000005e-05, 8.229200000000117e-05, 8.265199999999903e-05, 8.27909...</msg>
<status status="PASS" starttime="20201029 12:44:47.893" endtime="20201029 12:44:47.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.901" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 12:44:47.900" endtime="20201029 12:44:47.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.903" level="INFO">VALUE: [8.273599999999992e-05, 8.231999999999684e-05, 8.280600000000124e-05, 8.194499999999993e-05, 8.22919999999977e-05, 8.286100000000005e-05, 8.229200000000117e-05, 8.265199999999903e-05, 8.279099999999873e-05, 8.220899999999975e-05, 8.262499999999937e-05, 8.27919999999982e-05, 8.24720000000001e-05, 8.229200000000117e-05, 8.279200000000167e-05, 8.234699999999998e-05, 8.2459e-05, 8.19589999999995e-05, 8.197299999999907e-05, 8.281899999999787e-05, 8.245800000000053e-05, 8.19719999999996e-05, 8.262499999999937e-05, 8.23049999999978e-05, 8.26109999999998e-05, 8.194400000000046e-05, 8.265300000000197e-05, 8.19719999999996e-05, 8.243100000000086e-05, 8.248699999999914e-05, 8.27919999999982e-05, 8.258299999999719e-05, 8.195800000000003e-05, 8.263899999999894e-05, 8.219500000000018e-05, 8.19719999999996e-05, 8.266700000000154e-05, 8.244500000000043e-05, 8.265300000000197e-05, 8.280600000000124e-05, 8.212500000000234e-05, 8.229200000000117e-05, 8.229200000000117e-05, 8.197200000000307e-05, 8.26109999999998e-05, 8.262499999999937e-05, 8.19719999999996e-05, 8.24720000000001e-05, 8.279200000000167e-05, 8.211100000000277e-05]</msg>
<status status="PASS" starttime="20201029 12:44:47.902" endtime="20201029 12:44:47.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.897" endtime="20201029 12:44:47.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:47.908" endtime="20201029 12:44:47.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.907" endtime="20201029 12:44:47.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.906" endtime="20201029 12:44:47.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.547" endtime="20201029 12:44:47.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.547" endtime="20201029 12:44:47.929"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.938" endtime="20201029 12:44:47.957"></status>
</kw>
<msg timestamp="20201029 12:44:47.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.936" endtime="20201029 12:44:47.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.959" endtime="20201029 12:44:47.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.961" endtime="20201029 12:44:47.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.934" endtime="20201029 12:44:47.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.931" endtime="20201029 12:44:47.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.971" endtime="20201029 12:44:48.257"></status>
</kw>
<msg timestamp="20201029 12:44:48.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023505625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023589028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.969" endtime="20201029 12:44:48.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023505625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023589028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:48.261" endtime="20201029 12:44:48.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.269" endtime="20201029 12:44:48.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.966" endtime="20201029 12:44:48.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.965" endtime="20201029 12:44:48.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:48.276" level="INFO">${RESULT} = [{'diff': 8.340300000000272e-05}, {'diff': 8.323600000000042e-05}, {'diff': 8.34309999999984e-05}, {'diff': 8.348600000000067e-05}, {'diff': 8.347199999999763e-05}, {'diff': 8.29720000000006e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:48.273" endtime="20201029 12:44:48.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:48.280" level="INFO">${ACCURACY} = {'diff': [8.340300000000272e-05, 8.323600000000042e-05, 8.34309999999984e-05, 8.348600000000067e-05, 8.347199999999763e-05, 8.29720000000006e-05, 8.3152999999999e-05, 8.379099999999973e-05, 8.31389999...</msg>
<status status="PASS" starttime="20201029 12:44:48.277" endtime="20201029 12:44:48.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.285" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 12:44:48.284" endtime="20201029 12:44:48.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.287" level="INFO">VALUE: [8.340300000000272e-05, 8.323600000000042e-05, 8.34309999999984e-05, 8.348600000000067e-05, 8.347199999999763e-05, 8.29720000000006e-05, 8.3152999999999e-05, 8.379099999999973e-05, 8.313899999999944e-05, 8.318099999999815e-05, 8.362500000000037e-05, 8.295800000000103e-05, 8.329200000000217e-05, 8.347300000000057e-05, 8.313899999999944e-05, 8.294500000000093e-05, 8.298600000000017e-05, 8.313899999999944e-05, 8.348600000000067e-05, 8.362500000000037e-05, 8.36529999999995e-05, 8.362500000000037e-05, 8.37919999999992e-05, 8.36110000000008e-05, 8.34859999999972e-05, 8.313899999999944e-05, 8.344499999999797e-05, 8.361200000000027e-05, 8.377700000000016e-05, 8.331899999999837e-05, 8.363899999999994e-05, 8.312499999999987e-05, 8.362500000000037e-05, 8.313899999999944e-05, 8.361099999999733e-05, 8.313899999999944e-05, 8.379200000000267e-05, 8.329200000000217e-05, 8.315199999999953e-05, 8.312499999999987e-05, 8.377700000000016e-05, 8.294400000000146e-05, 8.363899999999994e-05, 8.330599999999827e-05, 8.381899999999887e-05, 8.32919999999987e-05, 8.382000000000181e-05, 8.332000000000131e-05, 8.319400000000171e-05, 8.313899999999944e-05]</msg>
<status status="PASS" starttime="20201029 12:44:48.286" endtime="20201029 12:44:48.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.281" endtime="20201029 12:44:48.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:48.293" endtime="20201029 12:44:48.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.292" endtime="20201029 12:44:48.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.290" endtime="20201029 12:44:48.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.930" endtime="20201029 12:44:48.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.929" endtime="20201029 12:44:48.314"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.323" endtime="20201029 12:44:48.341"></status>
</kw>
<msg timestamp="20201029 12:44:48.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:48.321" endtime="20201029 12:44:48.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:48.343" endtime="20201029 12:44:48.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.346" endtime="20201029 12:44:48.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.318" endtime="20201029 12:44:48.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.316" endtime="20201029 12:44:48.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.355" endtime="20201029 12:44:48.641"></status>
</kw>
<msg timestamp="20201029 12:44:48.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022331972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:48.353" endtime="20201029 12:44:48.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022331972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:48.646" endtime="20201029 12:44:48.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.654" endtime="20201029 12:44:48.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.351" endtime="20201029 12:44:48.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.349" endtime="20201029 12:44:48.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:48.660" level="INFO">${RESULT} = [{'diff': 8.407000000000206e-05}, {'diff': 8.412500000000087e-05}, {'diff': 8.39729999999976e-05}, {'diff': 8.4846999999999e-05}, {'diff': 8.479100000000073e-05}, {'diff': 8.431899999999937e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:44:48.657" endtime="20201029 12:44:48.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:48.665" level="INFO">${ACCURACY} = {'diff': [8.407000000000206e-05, 8.412500000000087e-05, 8.39729999999976e-05, 8.4846999999999e-05, 8.479100000000073e-05, 8.431899999999937e-05, 8.48050000000003e-05, 8.393000000000289e-05, 8.4153e-05...</msg>
<status status="PASS" starttime="20201029 12:44:48.661" endtime="20201029 12:44:48.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.670" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 12:44:48.669" endtime="20201029 12:44:48.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.673" level="INFO">VALUE: [8.407000000000206e-05, 8.412500000000087e-05, 8.39729999999976e-05, 8.4846999999999e-05, 8.479100000000073e-05, 8.431899999999937e-05, 8.48050000000003e-05, 8.393000000000289e-05, 8.4153e-05, 8.466700000000008e-05, 8.42919999999997e-05, 8.444500000000243e-05, 8.44729999999981e-05, 8.397300000000107e-05, 8.43049999999998e-05, 8.481899999999987e-05, 8.427700000000066e-05, 8.41249999999974e-05, 8.481899999999987e-05, 8.477800000000063e-05, 8.430600000000274e-05, 8.483400000000238e-05, 8.47920000000002e-05, 8.444500000000243e-05, 8.4153e-05, 8.463900000000094e-05, 8.44720000000021e-05, 8.462500000000137e-05, 8.441600000000035e-05, 8.481899999999987e-05, 8.463900000000094e-05, 8.42919999999997e-05, 8.411099999999783e-05, 8.481999999999934e-05, 8.46249999999979e-05, 8.434700000000198e-05, 8.42919999999997e-05, 8.4459000000002e-05, 8.44720000000021e-05, 8.427700000000066e-05, 8.39720000000016e-05, 8.440300000000026e-05, 8.455500000000005e-05, 8.477800000000063e-05, 8.412500000000087e-05, 8.430599999999927e-05, 8.413900000000044e-05, 8.394500000000193e-05, 8.41110000000013e-05, 8.44309999999994e-05]</msg>
<status status="PASS" starttime="20201029 12:44:48.671" endtime="20201029 12:44:48.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.666" endtime="20201029 12:44:48.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:48.678" endtime="20201029 12:44:48.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.676" endtime="20201029 12:44:48.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.675" endtime="20201029 12:44:48.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.315" endtime="20201029 12:44:48.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.314" endtime="20201029 12:44:48.698"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.707" endtime="20201029 12:44:48.726"></status>
</kw>
<msg timestamp="20201029 12:44:48.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:48.705" endtime="20201029 12:44:48.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:48.728" endtime="20201029 12:44:48.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.730" endtime="20201029 12:44:48.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.703" endtime="20201029 12:44:48.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.701" endtime="20201029 12:44:48.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.740" endtime="20201029 12:44:49.026"></status>
</kw>
<msg timestamp="20201029 12:44:49.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022587625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022673528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:48.738" endtime="20201029 12:44:49.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022587625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022673528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.030" endtime="20201029 12:44:49.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.038" endtime="20201029 12:44:49.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.735" endtime="20201029 12:44:49.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.734" endtime="20201029 12:44:49.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:49.045" level="INFO">${RESULT} = [{'diff': 8.590299999999829e-05}, {'diff': 8.57920000000012e-05}, {'diff': 8.531900000000037e-05}, {'diff': 8.527800000000113e-05}, {'diff': 8.58050000000013e-05}, {'diff': 8.495799999999956e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:49.042" endtime="20201029 12:44:49.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:49.049" level="INFO">${ACCURACY} = {'diff': [8.590299999999829e-05, 8.57920000000012e-05, 8.531900000000037e-05, 8.527800000000113e-05, 8.58050000000013e-05, 8.495799999999956e-05, 8.545800000000006e-05, 8.58050000000013e-05, 8.5610999...</msg>
<status status="PASS" starttime="20201029 12:44:49.046" endtime="20201029 12:44:49.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.054" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 12:44:49.053" endtime="20201029 12:44:49.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.056" level="INFO">VALUE: [8.590299999999829e-05, 8.57920000000012e-05, 8.531900000000037e-05, 8.527800000000113e-05, 8.58050000000013e-05, 8.495799999999956e-05, 8.545800000000006e-05, 8.58050000000013e-05, 8.561099999999933e-05, 8.548600000000267e-05, 8.54859999999992e-05, 8.5153000000001e-05, 8.577800000000163e-05, 8.515200000000153e-05, 8.513899999999797e-05, 8.53050000000008e-05, 8.53050000000008e-05, 8.545800000000006e-05, 8.51110000000023e-05, 8.565299999999804e-05, 8.497199999999913e-05, 8.509699999999926e-05, 8.561099999999933e-05, 8.566700000000108e-05, 8.563899999999847e-05, 8.58050000000013e-05, 8.513900000000144e-05, 8.513899999999797e-05, 8.56530000000015e-05, 8.497199999999913e-05, 8.51110000000023e-05, 8.51110000000023e-05, 8.531999999999984e-05, 8.513900000000144e-05, 8.580600000000077e-05, 8.577800000000163e-05, 8.56249999999989e-05, 8.563899999999847e-05, 8.547199999999963e-05, 8.563900000000194e-05, 8.51249999999984e-05, 8.495800000000303e-05, 8.547199999999963e-05, 8.513899999999797e-05, 8.54859999999992e-05, 8.582000000000034e-05, 8.536099999999908e-05, 8.56249999999989e-05, 8.54729999999991e-05, 8.501400000000131e-05]</msg>
<status status="PASS" starttime="20201029 12:44:49.055" endtime="20201029 12:44:49.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.050" endtime="20201029 12:44:49.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:49.061" endtime="20201029 12:44:49.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.060" endtime="20201029 12:44:49.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.058" endtime="20201029 12:44:49.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.699" endtime="20201029 12:44:49.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.699" endtime="20201029 12:44:49.082"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.090" endtime="20201029 12:44:49.110"></status>
</kw>
<msg timestamp="20201029 12:44:49.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.089" endtime="20201029 12:44:49.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.112" endtime="20201029 12:44:49.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.115" endtime="20201029 12:44:49.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.086" endtime="20201029 12:44:49.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.084" endtime="20201029 12:44:49.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.124" endtime="20201029 12:44:49.409"></status>
</kw>
<msg timestamp="20201029 12:44:49.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023330236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023416639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.122" endtime="20201029 12:44:49.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023330236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023416639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.414" endtime="20201029 12:44:49.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.422" endtime="20201029 12:44:49.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.119" endtime="20201029 12:44:49.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.118" endtime="20201029 12:44:49.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:49.429" level="INFO">${RESULT} = [{'diff': 8.640299999999879e-05}, {'diff': 8.629199999999823e-05}, {'diff': 8.640300000000226e-05}, {'diff': 8.66249999999999e-05}, {'diff': 8.647200000000063e-05}, {'diff': 8.630499999999833e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:49.426" endtime="20201029 12:44:49.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:49.433" level="INFO">${ACCURACY} = {'diff': [8.640299999999879e-05, 8.629199999999823e-05, 8.640300000000226e-05, 8.66249999999999e-05, 8.647200000000063e-05, 8.630499999999833e-05, 8.645800000000106e-05, 8.66249999999999e-05, 8.680500...</msg>
<status status="PASS" starttime="20201029 12:44:49.430" endtime="20201029 12:44:49.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.438" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 12:44:49.437" endtime="20201029 12:44:49.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.441" level="INFO">VALUE: [8.640299999999879e-05, 8.629199999999823e-05, 8.640300000000226e-05, 8.66249999999999e-05, 8.647200000000063e-05, 8.630499999999833e-05, 8.645800000000106e-05, 8.66249999999999e-05, 8.68050000000023e-05, 8.61249999999994e-05, 8.59859999999997e-05, 8.680600000000177e-05, 8.613900000000244e-05, 8.590300000000176e-05, 8.663899999999947e-05, 8.613900000000244e-05, 8.663899999999947e-05, 8.629100000000223e-05, 8.629099999999876e-05, 8.68189999999984e-05, 8.663899999999947e-05, 8.665299999999904e-05, 8.644399999999802e-05, 8.63059999999978e-05, 8.645900000000054e-05, 8.598699999999918e-05, 8.630600000000127e-05, 8.597200000000013e-05, 8.663799999999999e-05, 8.63050000000018e-05, 8.629199999999823e-05, 8.597200000000013e-05, 8.66249999999999e-05, 8.611099999999983e-05, 8.632000000000084e-05, 8.647200000000063e-05, 8.595900000000004e-05, 8.661100000000033e-05, 8.595900000000004e-05, 8.680499999999883e-05, 8.683299999999797e-05, 8.613899999999897e-05, 8.644400000000149e-05, 8.615299999999854e-05, 8.684800000000048e-05, 8.658300000000119e-05, 8.673599999999698e-05, 8.62920000000017e-05, 8.66249999999999e-05, 8.59729999999996e-05]</msg>
<status status="PASS" starttime="20201029 12:44:49.439" endtime="20201029 12:44:49.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.434" endtime="20201029 12:44:49.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:49.446" endtime="20201029 12:44:49.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.444" endtime="20201029 12:44:49.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.443" endtime="20201029 12:44:49.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.083" endtime="20201029 12:44:49.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.082" endtime="20201029 12:44:49.467"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.476" endtime="20201029 12:44:49.494"></status>
</kw>
<msg timestamp="20201029 12:44:49.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.474" endtime="20201029 12:44:49.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.496" endtime="20201029 12:44:49.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.498" endtime="20201029 12:44:49.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.471" endtime="20201029 12:44:49.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.469" endtime="20201029 12:44:49.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.508" endtime="20201029 12:44:49.793"></status>
</kw>
<msg timestamp="20201029 12:44:49.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022468833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.506" endtime="20201029 12:44:49.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022468833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.798" endtime="20201029 12:44:49.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.806" endtime="20201029 12:44:49.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.503" endtime="20201029 12:44:49.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.502" endtime="20201029 12:44:49.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:49.812" level="INFO">${RESULT} = [{'diff': 8.790300000000029e-05}, {'diff': 8.747199999999816e-05}, {'diff': 8.713899999999997e-05}, {'diff': 8.697200000000113e-05}, {'diff': 8.765300000000004e-05}, {'diff': 8.732000000000184e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:49.809" endtime="20201029 12:44:49.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:49.817" level="INFO">${ACCURACY} = {'diff': [8.790300000000029e-05, 8.747199999999816e-05, 8.713899999999997e-05, 8.697200000000113e-05, 8.765300000000004e-05, 8.732000000000184e-05, 8.765200000000056e-05, 8.709700000000126e-05, 8.7290...</msg>
<status status="PASS" starttime="20201029 12:44:49.813" endtime="20201029 12:44:49.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.822" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 12:44:49.821" endtime="20201029 12:44:49.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.825" level="INFO">VALUE: [8.790300000000029e-05, 8.747199999999816e-05, 8.713899999999997e-05, 8.697200000000113e-05, 8.765300000000004e-05, 8.732000000000184e-05, 8.765200000000056e-05, 8.709700000000126e-05, 8.729099999999976e-05, 8.726400000000009e-05, 8.762499999999743e-05, 8.783399999999844e-05, 8.729199999999923e-05, 8.71250000000004e-05, 8.762499999999743e-05, 8.713899999999997e-05, 8.71250000000004e-05, 8.715200000000006e-05, 8.744500000000197e-05, 8.697199999999766e-05, 8.729099999999976e-05, 8.729100000000323e-05, 8.697200000000113e-05, 8.76250000000009e-05, 8.731999999999837e-05, 8.76250000000009e-05, 8.78059999999993e-05, 8.700000000000027e-05, 8.729199999999923e-05, 8.74730000000011e-05, 8.713800000000049e-05, 8.713899999999997e-05, 8.76250000000009e-05, 8.697199999999766e-05, 8.69860000000007e-05, 8.713899999999997e-05, 8.743099999999893e-05, 8.754199999999948e-05, 8.715299999999954e-05, 8.759800000000123e-05, 8.707000000000159e-05, 8.729199999999923e-05, 8.71250000000004e-05, 8.781900000000287e-05, 8.76669999999996e-05, 8.78189999999994e-05, 8.745799999999859e-05, 8.763900000000047e-05, 8.782000000000234e-05, 8.745899999999807e-05]</msg>
<status status="PASS" starttime="20201029 12:44:49.823" endtime="20201029 12:44:49.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.818" endtime="20201029 12:44:49.826"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:49.830" endtime="20201029 12:44:49.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.828" endtime="20201029 12:44:49.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.827" endtime="20201029 12:44:49.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.467" endtime="20201029 12:44:49.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.467" endtime="20201029 12:44:49.850"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.859" endtime="20201029 12:44:49.878"></status>
</kw>
<msg timestamp="20201029 12:44:49.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.857" endtime="20201029 12:44:49.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.880" endtime="20201029 12:44:49.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.882" endtime="20201029 12:44:49.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.855" endtime="20201029 12:44:49.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.853" endtime="20201029 12:44:49.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.891" endtime="20201029 12:44:50.180"></status>
</kw>
<msg timestamp="20201029 12:44:50.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022045319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022134222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.890" endtime="20201029 12:44:50.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022045319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022134222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:50.185" endtime="20201029 12:44:50.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.193" endtime="20201029 12:44:50.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.887" endtime="20201029 12:44:50.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.885" endtime="20201029 12:44:50.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:50.200" level="INFO">${RESULT} = [{'diff': 8.890299999999782e-05}, {'diff': 8.830500000000033e-05}, {'diff': 8.879200000000073e-05}, {'diff': 8.845799999999959e-05}, {'diff': 8.88060000000003e-05}, {'diff': 8.858399999999919e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:50.196" endtime="20201029 12:44:50.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:50.204" level="INFO">${ACCURACY} = {'diff': [8.890299999999782e-05, 8.830500000000033e-05, 8.879200000000073e-05, 8.845799999999959e-05, 8.88060000000003e-05, 8.858399999999919e-05, 8.811100000000183e-05, 8.861099999999886e-05, 8.81379...</msg>
<status status="PASS" starttime="20201029 12:44:50.201" endtime="20201029 12:44:50.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.208" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 12:44:50.207" endtime="20201029 12:44:50.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.211" level="INFO">VALUE: [8.890299999999782e-05, 8.830500000000033e-05, 8.879200000000073e-05, 8.845799999999959e-05, 8.88060000000003e-05, 8.858399999999919e-05, 8.811100000000183e-05, 8.861099999999886e-05, 8.813799999999802e-05, 8.880500000000083e-05, 8.880500000000083e-05, 8.880500000000083e-05, 8.830500000000033e-05, 8.792999999999995e-05, 8.86250000000019e-05, 8.815300000000054e-05, 8.819399999999977e-05, 8.86250000000019e-05, 8.795900000000204e-05, 8.8638999999998e-05, 8.8638999999998e-05, 8.841600000000088e-05, 8.861099999999886e-05, 8.845799999999959e-05, 8.880500000000083e-05, 8.836200000000155e-05, 8.81389999999975e-05, 8.81389999999975e-05, 8.845899999999907e-05, 8.877800000000116e-05, 8.795799999999909e-05, 8.81250000000014e-05, 8.795799999999909e-05, 8.862499999999843e-05, 8.862499999999843e-05, 8.840300000000079e-05, 8.832000000000284e-05, 8.829200000000023e-05, 8.83059999999998e-05, 8.797299999999814e-05, 8.79730000000016e-05, 8.794500000000247e-05, 8.861199999999833e-05, 8.83189999999999e-05, 8.880500000000083e-05, 8.88190000000004e-05, 8.794399999999952e-05, 8.881999999999987e-05, 8.797199999999866e-05, 8.865300000000104e-05]</msg>
<status status="PASS" starttime="20201029 12:44:50.209" endtime="20201029 12:44:50.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.205" endtime="20201029 12:44:50.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:50.216" endtime="20201029 12:44:50.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.214" endtime="20201029 12:44:50.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.213" endtime="20201029 12:44:50.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.851" endtime="20201029 12:44:50.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.851" endtime="20201029 12:44:50.237"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.246" endtime="20201029 12:44:50.266"></status>
</kw>
<msg timestamp="20201029 12:44:50.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.245" endtime="20201029 12:44:50.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.268" endtime="20201029 12:44:50.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.270" endtime="20201029 12:44:50.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.242" endtime="20201029 12:44:50.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.239" endtime="20201029 12:44:50.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.279" endtime="20201029 12:44:50.565"></status>
</kw>
<msg timestamp="20201029 12:44:50.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024131792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0242215, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:50.278" endtime="20201029 12:44:50.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024131792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0242215, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:50.569" endtime="20201029 12:44:50.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.578" endtime="20201029 12:44:50.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.275" endtime="20201029 12:44:50.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.274" endtime="20201029 12:44:50.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:50.585" level="INFO">${RESULT} = [{'diff': 8.970800000000084e-05}, {'diff': 8.911100000000283e-05}, {'diff': 8.912499999999893e-05}, {'diff': 8.913900000000197e-05}, {'diff': 8.915300000000154e-05}, {'diff': 8.976299999999965e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:50.581" endtime="20201029 12:44:50.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:50.589" level="INFO">${ACCURACY} = {'diff': [8.970800000000084e-05, 8.911100000000283e-05, 8.912499999999893e-05, 8.913900000000197e-05, 8.915300000000154e-05, 8.976299999999965e-05, 8.982000000000087e-05, 8.912499999999893e-05, 8.9319...</msg>
<status status="PASS" starttime="20201029 12:44:50.586" endtime="20201029 12:44:50.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.593" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 12:44:50.592" endtime="20201029 12:44:50.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.596" level="INFO">VALUE: [8.970800000000084e-05, 8.911100000000283e-05, 8.912499999999893e-05, 8.913900000000197e-05, 8.915300000000154e-05, 8.976299999999965e-05, 8.982000000000087e-05, 8.912499999999893e-05, 8.93190000000009e-05, 8.944400000000102e-05, 8.912499999999893e-05, 8.962499999999943e-05, 8.895800000000009e-05, 8.912499999999893e-05, 8.965299999999857e-05, 8.94869999999992e-05, 8.912499999999893e-05, 8.91250000000024e-05, 8.963900000000247e-05, 8.897200000000313e-05, 8.983300000000097e-05, 8.979100000000226e-05, 8.894400000000052e-05, 8.9638999999999e-05, 8.941700000000136e-05, 8.893100000000043e-05, 8.929200000000123e-05, 8.91250000000024e-05, 8.930499999999786e-05, 8.963799999999952e-05, 8.89860000000027e-05, 8.929100000000176e-05, 8.979199999999826e-05, 8.982000000000087e-05, 8.932000000000037e-05, 8.89999999999988e-05, 8.959800000000323e-05, 8.913900000000197e-05, 8.929200000000123e-05, 8.986100000000011e-05, 8.980500000000183e-05, 8.962499999999943e-05, 8.947200000000016e-05, 8.915300000000154e-05, 8.912499999999893e-05, 8.947200000000016e-05, 8.915300000000154e-05, 8.895899999999957e-05, 8.93060000000008e-05, 8.93060000000008e-05]</msg>
<status status="PASS" starttime="20201029 12:44:50.594" endtime="20201029 12:44:50.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.589" endtime="20201029 12:44:50.598"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:50.602" endtime="20201029 12:44:50.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.600" endtime="20201029 12:44:50.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.599" endtime="20201029 12:44:50.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.238" endtime="20201029 12:44:50.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.237" endtime="20201029 12:44:50.623"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.638" endtime="20201029 12:44:50.657"></status>
</kw>
<msg timestamp="20201029 12:44:50.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.635" endtime="20201029 12:44:50.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.659" endtime="20201029 12:44:50.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.661" endtime="20201029 12:44:50.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.631" endtime="20201029 12:44:50.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.628" endtime="20201029 12:44:50.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.671" endtime="20201029 12:44:50.975"></status>
</kw>
<msg timestamp="20201029 12:44:50.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029318486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029409236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:50.669" endtime="20201029 12:44:50.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029318486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029409236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:50.980" endtime="20201029 12:44:50.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.988" endtime="20201029 12:44:50.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.666" endtime="20201029 12:44:50.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.665" endtime="20201029 12:44:50.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:50.995" level="INFO">${RESULT} = [{'diff': 9.074999999999708e-05}, {'diff': 9.080499999999936e-05}, {'diff': 9.047200000000116e-05}, {'diff': 9.045800000000159e-05}, {'diff': 9.026399999999962e-05}, {'diff': 8.997199999999719e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:50.992" endtime="20201029 12:44:50.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:51.000" level="INFO">${ACCURACY} = {'diff': [9.074999999999708e-05, 9.080499999999936e-05, 9.047200000000116e-05, 9.045800000000159e-05, 9.026399999999962e-05, 8.997199999999719e-05, 9.0639e-05, 9.047300000000064e-05, 9.045799999999812...</msg>
<status status="PASS" starttime="20201029 12:44:50.996" endtime="20201029 12:44:51.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.005" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 12:44:51.004" endtime="20201029 12:44:51.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.008" level="INFO">VALUE: [9.074999999999708e-05, 9.080499999999936e-05, 9.047200000000116e-05, 9.045800000000159e-05, 9.026399999999962e-05, 8.997199999999719e-05, 9.0639e-05, 9.047300000000064e-05, 9.045799999999812e-05, 9.079099999999979e-05, 9.048600000000073e-05, 9.029100000000276e-05, 9.03199999999979e-05, 9.08060000000023e-05, 9.027799999999919e-05, 9.076399999999665e-05, 9.08060000000023e-05, 9.055600000000205e-05, 9.013800000000002e-05, 9.01250000000034e-05, 8.994400000000152e-05, 9.013899999999603e-05, 9.047200000000116e-05, 9.080499999999936e-05, 9.047200000000116e-05, 9.079199999999926e-05, 9.063900000000347e-05, 8.997199999999372e-05, 9.047300000000064e-05, 9.031900000000537e-05, 9.01120000000033e-05, 9.047200000000116e-05, 9.063899999999653e-05, 8.997200000000066e-05, 9.029199999999876e-05, 9.045799999999465e-05, 9.045800000000159e-05, 9.047199999999422e-05, 9.06250000000039e-05, 9.01250000000034e-05, 9.013900000000297e-05, 8.995900000000057e-05, 9.011099999999689e-05, 9.031900000000537e-05, 9.081900000000587e-05, 9.029199999999876e-05, 9.030599999999833e-05, 9.013900000000297e-05, 9.03199999999979e-05, 8.998600000000023e-05]</msg>
<status status="PASS" starttime="20201029 12:44:51.006" endtime="20201029 12:44:51.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.001" endtime="20201029 12:44:51.009"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:51.013" endtime="20201029 12:44:51.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.011" endtime="20201029 12:44:51.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.010" endtime="20201029 12:44:51.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.624" endtime="20201029 12:44:51.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.623" endtime="20201029 12:44:51.034"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.043" endtime="20201029 12:44:51.062"></status>
</kw>
<msg timestamp="20201029 12:44:51.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.041" endtime="20201029 12:44:51.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.064" endtime="20201029 12:44:51.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.066" endtime="20201029 12:44:51.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.038" endtime="20201029 12:44:51.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.036" endtime="20201029 12:44:51.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.076" endtime="20201029 12:44:51.361"></status>
</kw>
<msg timestamp="20201029 12:44:51.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022790611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.074" endtime="20201029 12:44:51.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022790611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.366" endtime="20201029 12:44:51.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.374" endtime="20201029 12:44:51.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.071" endtime="20201029 12:44:51.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.070" endtime="20201029 12:44:51.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:51.380" level="INFO">${RESULT} = [{'diff': 9.174999999999808e-05}, {'diff': 9.119499999999878e-05}, {'diff': 9.162500000000143e-05}, {'diff': 9.10000000000008e-05}, {'diff': 9.130599999999933e-05}, {'diff': 9.168000000000023e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:51.377" endtime="20201029 12:44:51.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:51.385" level="INFO">${ACCURACY} = {'diff': [9.174999999999808e-05, 9.119499999999878e-05, 9.162500000000143e-05, 9.10000000000008e-05, 9.130599999999933e-05, 9.168000000000023e-05, 9.11390000000005e-05, 9.162500000000143e-05, 9.145900...</msg>
<status status="PASS" starttime="20201029 12:44:51.381" endtime="20201029 12:44:51.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.389" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 12:44:51.388" endtime="20201029 12:44:51.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.391" level="INFO">VALUE: [9.174999999999808e-05, 9.119499999999878e-05, 9.162500000000143e-05, 9.10000000000008e-05, 9.130599999999933e-05, 9.168000000000023e-05, 9.11390000000005e-05, 9.162500000000143e-05, 9.145900000000207e-05, 9.130499999999986e-05, 9.147200000000216e-05, 9.11390000000005e-05, 9.129199999999976e-05, 9.177800000000069e-05, 9.112499999999746e-05, 9.129199999999976e-05, 9.130599999999933e-05, 9.162500000000143e-05, 9.158400000000219e-05, 9.179100000000079e-05, 9.162500000000143e-05, 9.124999999999758e-05, 9.097200000000166e-05, 9.097200000000166e-05, 9.186099999999864e-05, 9.18060000000033e-05, 9.130599999999933e-05, 9.108399999999822e-05, 9.180599999999983e-05, 9.131899999999943e-05, 9.127800000000019e-05, 9.162500000000143e-05, 9.162500000000143e-05, 9.14719999999987e-05, 9.11390000000005e-05, 9.148600000000173e-05, 9.136100000000161e-05, 9.102700000000047e-05, 9.09870000000007e-05, 9.147300000000164e-05, 9.11390000000005e-05, 9.11520000000006e-05, 9.112500000000093e-05, 9.11390000000005e-05, 9.168100000000318e-05, 9.109700000000179e-05, 9.132000000000237e-05, 9.1639000000001e-05, 9.11390000000005e-05, 9.142999999999998e-05]</msg>
<status status="PASS" starttime="20201029 12:44:51.390" endtime="20201029 12:44:51.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.385" endtime="20201029 12:44:51.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:51.400" endtime="20201029 12:44:51.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.399" endtime="20201029 12:44:51.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.397" endtime="20201029 12:44:51.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.035" endtime="20201029 12:44:51.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.034" endtime="20201029 12:44:51.421"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.430" endtime="20201029 12:44:51.450"></status>
</kw>
<msg timestamp="20201029 12:44:51.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.428" endtime="20201029 12:44:51.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.451" endtime="20201029 12:44:51.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.454" endtime="20201029 12:44:51.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.425" endtime="20201029 12:44:51.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.423" endtime="20201029 12:44:51.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.463" endtime="20201029 12:44:51.767"></status>
</kw>
<msg timestamp="20201029 12:44:51.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023119181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.461" endtime="20201029 12:44:51.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023119181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.771" endtime="20201029 12:44:51.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.779" endtime="20201029 12:44:51.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.459" endtime="20201029 12:44:51.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.457" endtime="20201029 12:44:51.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:51.786" level="INFO">${RESULT} = [{'diff': 9.275000000000255e-05}, {'diff': 9.281900000000093e-05}, {'diff': 9.213899999999803e-05}, {'diff': 9.194400000000005e-05}, {'diff': 9.229100000000129e-05}, {'diff': 9.227800000000119e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:51.783" endtime="20201029 12:44:51.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:51.790" level="INFO">${ACCURACY} = {'diff': [9.275000000000255e-05, 9.281900000000093e-05, 9.213899999999803e-05, 9.194400000000005e-05, 9.229100000000129e-05, 9.227800000000119e-05, 9.263899999999853e-05, 9.244399999999708e-05, 9.2458...</msg>
<status status="PASS" starttime="20201029 12:44:51.787" endtime="20201029 12:44:51.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.794" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 12:44:51.793" endtime="20201029 12:44:51.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.797" level="INFO">VALUE: [9.275000000000255e-05, 9.281900000000093e-05, 9.213899999999803e-05, 9.194400000000005e-05, 9.229100000000129e-05, 9.227800000000119e-05, 9.263899999999853e-05, 9.244399999999708e-05, 9.245800000000012e-05, 9.24719999999997e-05, 9.229199999999729e-05, 9.212499999999846e-05, 9.248599999999926e-05, 9.2333e-05, 9.19719999999992e-05, 9.24719999999997e-05, 9.195799999999962e-05, 9.212499999999846e-05, 9.265300000000157e-05, 9.262499999999896e-05, 9.212499999999846e-05, 9.230600000000033e-05, 9.286099999999964e-05, 9.230499999999739e-05, 9.26659999999982e-05, 9.266699999999767e-05, 9.245800000000012e-05, 9.226399999999815e-05, 9.263899999999853e-05, 9.212500000000193e-05, 9.24589999999996e-05, 9.26529999999981e-05, 9.2639000000002e-05, 9.280600000000083e-05, 9.280499999999789e-05, 9.277699999999875e-05, 9.279100000000179e-05, 9.263899999999853e-05, 9.226400000000162e-05, 9.280599999999736e-05, 9.26529999999981e-05, 9.243100000000046e-05, 9.279200000000126e-05, 9.230600000000033e-05, 9.280599999999736e-05, 9.281900000000093e-05, 9.19719999999992e-05, 9.28330000000005e-05, 9.262500000000243e-05, 9.263899999999853e-05]</msg>
<status status="PASS" starttime="20201029 12:44:51.796" endtime="20201029 12:44:51.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.791" endtime="20201029 12:44:51.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:51.803" endtime="20201029 12:44:51.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.801" endtime="20201029 12:44:51.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.800" endtime="20201029 12:44:51.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.422" endtime="20201029 12:44:51.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.421" endtime="20201029 12:44:51.824"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.832" endtime="20201029 12:44:51.851"></status>
</kw>
<msg timestamp="20201029 12:44:51.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.831" endtime="20201029 12:44:51.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.853" endtime="20201029 12:44:51.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.856" endtime="20201029 12:44:51.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.828" endtime="20201029 12:44:51.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.826" endtime="20201029 12:44:51.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.865" endtime="20201029 12:44:52.151"></status>
</kw>
<msg timestamp="20201029 12:44:52.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022249681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02234325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:51.863" endtime="20201029 12:44:52.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022249681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02234325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:52.155" endtime="20201029 12:44:52.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.164" endtime="20201029 12:44:52.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.860" endtime="20201029 12:44:52.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.859" endtime="20201029 12:44:52.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:52.170" level="INFO">${RESULT} = [{'diff': 9.356899999999821e-05}, {'diff': 9.381999999999793e-05}, {'diff': 9.34590000000006e-05}, {'diff': 9.381999999999793e-05}, {'diff': 9.330499999999839e-05}, {'diff': 9.362499999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:52.167" endtime="20201029 12:44:52.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:52.175" level="INFO">${ACCURACY} = {'diff': [9.356899999999821e-05, 9.381999999999793e-05, 9.34590000000006e-05, 9.381999999999793e-05, 9.330499999999839e-05, 9.362499999999996e-05, 9.298599999999976e-05, 9.344400000000155e-05, 9.29859...</msg>
<status status="PASS" starttime="20201029 12:44:52.171" endtime="20201029 12:44:52.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.180" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 12:44:52.179" endtime="20201029 12:44:52.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.182" level="INFO">VALUE: [9.356899999999821e-05, 9.381999999999793e-05, 9.34590000000006e-05, 9.381999999999793e-05, 9.330499999999839e-05, 9.362499999999996e-05, 9.298599999999976e-05, 9.344400000000155e-05, 9.298599999999976e-05, 9.329200000000176e-05, 9.336199999999961e-05, 9.312499999999946e-05, 9.344500000000103e-05, 9.380600000000183e-05, 9.312499999999946e-05, 9.331900000000143e-05, 9.311099999999989e-05, 9.361100000000039e-05, 9.295799999999715e-05, 9.330500000000186e-05, 9.330500000000186e-05, 9.34720000000007e-05, 9.330600000000133e-05, 9.34590000000006e-05, 9.361100000000039e-05, 9.29590000000001e-05, 9.377799999999922e-05, 9.358300000000125e-05, 9.379099999999932e-05, 9.298600000000323e-05, 9.313899999999903e-05, 9.380599999999836e-05, 9.302700000000247e-05, 9.345800000000112e-05, 9.34720000000007e-05, 9.347300000000017e-05, 9.347300000000017e-05, 9.36529999999991e-05, 9.347199999999722e-05, 9.330500000000186e-05, 9.34720000000007e-05, 9.313899999999903e-05, 9.309700000000032e-05, 9.327799999999872e-05, 9.327800000000219e-05, 9.312500000000293e-05, 9.365300000000257e-05, 9.30139999999989e-05, 9.31520000000026e-05, 9.361100000000039e-05]</msg>
<status status="PASS" starttime="20201029 12:44:52.181" endtime="20201029 12:44:52.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.176" endtime="20201029 12:44:52.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:52.187" endtime="20201029 12:44:52.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.186" endtime="20201029 12:44:52.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.184" endtime="20201029 12:44:52.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.825" endtime="20201029 12:44:52.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.824" endtime="20201029 12:44:52.208"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.216" endtime="20201029 12:44:52.236"></status>
</kw>
<msg timestamp="20201029 12:44:52.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.215" endtime="20201029 12:44:52.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.237" endtime="20201029 12:44:52.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.240" endtime="20201029 12:44:52.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.212" endtime="20201029 12:44:52.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.210" endtime="20201029 12:44:52.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.249" endtime="20201029 12:44:52.535"></status>
</kw>
<msg timestamp="20201029 12:44:52.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022149736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:52.247" endtime="20201029 12:44:52.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022149736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:52.539" endtime="20201029 12:44:52.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.548" endtime="20201029 12:44:52.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.245" endtime="20201029 12:44:52.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.243" endtime="20201029 12:44:52.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:52.555" level="INFO">${RESULT} = [{'diff': 9.440299999999985e-05}, {'diff': 9.404099999999957e-05}, {'diff': 9.407000000000165e-05}, {'diff': 9.447199999999822e-05}, {'diff': 9.413900000000003e-05}, {'diff': 9.429199999999929e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:52.552" endtime="20201029 12:44:52.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:52.560" level="INFO">${ACCURACY} = {'diff': [9.440299999999985e-05, 9.404099999999957e-05, 9.407000000000165e-05, 9.447199999999822e-05, 9.413900000000003e-05, 9.429199999999929e-05, 9.39590000000011e-05, 9.445799999999865e-05, 9.41390...</msg>
<status status="PASS" starttime="20201029 12:44:52.556" endtime="20201029 12:44:52.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.564" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 12:44:52.563" endtime="20201029 12:44:52.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.566" level="INFO">VALUE: [9.440299999999985e-05, 9.404099999999957e-05, 9.407000000000165e-05, 9.447199999999822e-05, 9.413900000000003e-05, 9.429199999999929e-05, 9.39590000000011e-05, 9.445799999999865e-05, 9.413900000000003e-05, 9.430499999999939e-05, 9.412500000000046e-05, 9.413900000000003e-05, 9.44859999999978e-05, 9.46530000000001e-05, 9.413900000000003e-05, 9.448699999999727e-05, 9.44729999999977e-05, 9.480499999999989e-05, 9.413900000000003e-05, 9.413900000000003e-05, 9.479199999999979e-05, 9.430499999999939e-05, 9.395799999999815e-05, 9.479199999999979e-05, 9.46530000000001e-05, 9.461100000000139e-05, 9.462500000000096e-05, 9.433299999999853e-05, 9.39859999999973e-05, 9.39720000000012e-05, 9.40139999999999e-05, 9.445799999999865e-05, 9.397199999999772e-05, 9.426400000000015e-05, 9.413900000000003e-05, 9.433400000000147e-05, 9.44729999999977e-05, 9.459800000000129e-05, 9.402799999999947e-05, 9.459699999999835e-05, 9.406899999999871e-05, 9.411100000000089e-05, 9.477800000000022e-05, 9.416699999999917e-05, 9.480600000000283e-05, 9.430599999999886e-05, 9.469399999999933e-05, 9.412500000000046e-05, 9.463800000000105e-05, 9.444399999999908e-05]</msg>
<status status="PASS" starttime="20201029 12:44:52.565" endtime="20201029 12:44:52.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.560" endtime="20201029 12:44:52.568"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:52.571" endtime="20201029 12:44:52.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.570" endtime="20201029 12:44:52.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.569" endtime="20201029 12:44:52.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.209" endtime="20201029 12:44:52.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.208" endtime="20201029 12:44:52.592"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.601" endtime="20201029 12:44:52.621"></status>
</kw>
<msg timestamp="20201029 12:44:52.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.599" endtime="20201029 12:44:52.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.622" endtime="20201029 12:44:52.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.625" endtime="20201029 12:44:52.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.597" endtime="20201029 12:44:52.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.595" endtime="20201029 12:44:52.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.634" endtime="20201029 12:44:52.920"></status>
</kw>
<msg timestamp="20201029 12:44:52.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023128069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023223306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:52.632" endtime="20201029 12:44:52.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023128069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023223306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:52.924" endtime="20201029 12:44:52.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.932" endtime="20201029 12:44:52.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.629" endtime="20201029 12:44:52.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.628" endtime="20201029 12:44:52.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:52.939" level="INFO">${RESULT} = [{'diff': 9.523699999999802e-05}, {'diff': 9.531899999999996e-05}, {'diff': 9.580500000000089e-05}, {'diff': 9.504200000000004e-05}, {'diff': 9.581900000000046e-05}, {'diff': 9.513900000000103e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:52.936" endtime="20201029 12:44:52.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:52.943" level="INFO">${ACCURACY} = {'diff': [9.523699999999802e-05, 9.531899999999996e-05, 9.580500000000089e-05, 9.504200000000004e-05, 9.581900000000046e-05, 9.513900000000103e-05, 9.513900000000103e-05, 9.547199999999922e-05, 9.5471...</msg>
<status status="PASS" starttime="20201029 12:44:52.940" endtime="20201029 12:44:52.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.947" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 12:44:52.946" endtime="20201029 12:44:52.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.952" level="INFO">VALUE: [9.523699999999802e-05, 9.531899999999996e-05, 9.580500000000089e-05, 9.504200000000004e-05, 9.581900000000046e-05, 9.513900000000103e-05, 9.513900000000103e-05, 9.547199999999922e-05, 9.547199999999922e-05, 9.512500000000146e-05, 9.518000000000026e-05, 9.511200000000136e-05, 9.513799999999809e-05, 9.580500000000089e-05, 9.497199999999872e-05, 9.561100000000239e-05, 9.579200000000079e-05, 9.512499999999799e-05, 9.5027000000001e-05, 9.547199999999922e-05, 9.54729999999987e-05, 9.530599999999986e-05, 9.562499999999849e-05, 9.547199999999922e-05, 9.561099999999892e-05, 9.495799999999915e-05, 9.495799999999915e-05, 9.516700000000017e-05, 9.56530000000011e-05, 9.497300000000167e-05, 9.51530000000006e-05, 9.512500000000146e-05, 9.577800000000122e-05, 9.544400000000008e-05, 9.563900000000153e-05, 9.524999999999811e-05, 9.530500000000039e-05, 9.512500000000146e-05, 9.495800000000262e-05, 9.495899999999863e-05, 9.545899999999913e-05, 9.561099999999892e-05, 9.54859999999988e-05, 9.563799999999859e-05, 9.563899999999806e-05, 9.531899999999996e-05, 9.493000000000001e-05, 9.561100000000239e-05, 9.577800000000122e-05, 9.55270000000015e-05]</msg>
<status status="PASS" starttime="20201029 12:44:52.950" endtime="20201029 12:44:52.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.944" endtime="20201029 12:44:52.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:52.957" endtime="20201029 12:44:52.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.955" endtime="20201029 12:44:52.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.954" endtime="20201029 12:44:52.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.593" endtime="20201029 12:44:52.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.593" endtime="20201029 12:44:52.978"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.986" endtime="20201029 12:44:53.006"></status>
</kw>
<msg timestamp="20201029 12:44:53.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.985" endtime="20201029 12:44:53.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.007" endtime="20201029 12:44:53.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.010" endtime="20201029 12:44:53.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.982" endtime="20201029 12:44:53.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.980" endtime="20201029 12:44:53.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.019" endtime="20201029 12:44:53.305"></status>
</kw>
<msg timestamp="20201029 12:44:53.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022092792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.017" endtime="20201029 12:44:53.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022092792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.309" endtime="20201029 12:44:53.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.317" endtime="20201029 12:44:53.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.015" endtime="20201029 12:44:53.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.013" endtime="20201029 12:44:53.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:53.324" level="INFO">${RESULT} = [{'diff': 9.623599999999954e-05}, {'diff': 9.629199999999782e-05}, {'diff': 9.626399999999868e-05}, {'diff': 9.615200000000212e-05}, {'diff': 9.631899999999749e-05}, {'diff': 9.630499999999792e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:53.321" endtime="20201029 12:44:53.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:53.329" level="INFO">${ACCURACY} = {'diff': [9.623599999999954e-05, 9.629199999999782e-05, 9.626399999999868e-05, 9.615200000000212e-05, 9.631899999999749e-05, 9.630499999999792e-05, 9.68059999999979e-05, 9.626399999999868e-05, 9.66109...</msg>
<status status="PASS" starttime="20201029 12:44:53.325" endtime="20201029 12:44:53.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.334" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 12:44:53.333" endtime="20201029 12:44:53.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.336" level="INFO">VALUE: [9.623599999999954e-05, 9.629199999999782e-05, 9.626399999999868e-05, 9.615200000000212e-05, 9.631899999999749e-05, 9.630499999999792e-05, 9.68059999999979e-05, 9.626399999999868e-05, 9.661099999999992e-05, 9.594500000000006e-05, 9.682000000000093e-05, 9.599999999999886e-05, 9.649999999999936e-05, 9.676299999999971e-05, 9.612499999999899e-05, 9.64859999999998e-05, 9.680500000000189e-05, 9.65279999999985e-05, 9.61530000000016e-05, 9.632000000000043e-05, 9.612499999999899e-05, 9.598700000000224e-05, 9.663900000000253e-05, 9.62920000000013e-05, 9.611099999999942e-05, 9.679099999999885e-05, 9.59859999999993e-05, 9.643000000000151e-05, 9.663899999999906e-05, 9.632000000000043e-05, 9.647200000000022e-05, 9.613899999999856e-05, 9.613899999999856e-05, 9.613900000000203e-05, 9.666700000000167e-05, 9.613899999999856e-05, 9.630500000000139e-05, 9.629199999999782e-05, 9.630600000000086e-05, 9.594400000000058e-05, 9.663900000000253e-05, 9.59729999999992e-05, 9.645900000000013e-05, 9.64729999999997e-05, 9.680500000000189e-05, 9.65140000000024e-05, 9.663899999999906e-05, 9.611099999999942e-05, 9.647199999999675e-05, 9.59859999999993e-05]</msg>
<status status="PASS" starttime="20201029 12:44:53.335" endtime="20201029 12:44:53.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.330" endtime="20201029 12:44:53.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:53.341" endtime="20201029 12:44:53.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.339" endtime="20201029 12:44:53.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.338" endtime="20201029 12:44:53.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.978" endtime="20201029 12:44:53.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.978" endtime="20201029 12:44:53.362"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.370" endtime="20201029 12:44:53.390"></status>
</kw>
<msg timestamp="20201029 12:44:53.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.369" endtime="20201029 12:44:53.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.391" endtime="20201029 12:44:53.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.394" endtime="20201029 12:44:53.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.366" endtime="20201029 12:44:53.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.364" endtime="20201029 12:44:53.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.403" endtime="20201029 12:44:53.691"></status>
</kw>
<msg timestamp="20201029 12:44:53.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022146403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022243778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.401" endtime="20201029 12:44:53.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022146403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022243778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.696" endtime="20201029 12:44:53.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.704" endtime="20201029 12:44:53.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.399" endtime="20201029 12:44:53.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.397" endtime="20201029 12:44:53.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:53.710" level="INFO">${RESULT} = [{'diff': 9.737500000000024e-05}, {'diff': 9.782000000000193e-05}, {'diff': 9.772200000000147e-05}, {'diff': 9.69860000000003e-05}, {'diff': 9.750000000000036e-05}, {'diff': 9.731899999999849e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:53.707" endtime="20201029 12:44:53.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:53.714" level="INFO">${ACCURACY} = {'diff': [9.737500000000024e-05, 9.782000000000193e-05, 9.772200000000147e-05, 9.69860000000003e-05, 9.750000000000036e-05, 9.731899999999849e-05, 9.765299999999963e-05, 9.697199999999725e-05, 9.77779...</msg>
<status status="PASS" starttime="20201029 12:44:53.711" endtime="20201029 12:44:53.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.719" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 12:44:53.718" endtime="20201029 12:44:53.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.721" level="INFO">VALUE: [9.737500000000024e-05, 9.782000000000193e-05, 9.772200000000147e-05, 9.69860000000003e-05, 9.750000000000036e-05, 9.731899999999849e-05, 9.765299999999963e-05, 9.697199999999725e-05, 9.777799999999975e-05, 9.730600000000186e-05, 9.782000000000193e-05, 9.722200000000097e-05, 9.779199999999932e-05, 9.747200000000122e-05, 9.713800000000009e-05, 9.763900000000006e-05, 9.729099999999935e-05, 9.711100000000042e-05, 9.699999999999986e-05, 9.747199999999775e-05, 9.69860000000003e-05, 9.758400000000125e-05, 9.713899999999956e-05, 9.711100000000042e-05, 9.744499999999809e-05, 9.775000000000061e-05, 9.715299999999913e-05, 9.697200000000072e-05, 9.712499999999999e-05, 9.715299999999913e-05, 9.694399999999812e-05, 9.745799999999818e-05, 9.747200000000122e-05, 9.723600000000054e-05, 9.758300000000178e-05, 9.763800000000059e-05, 9.697200000000072e-05, 9.740300000000285e-05, 9.748599999999732e-05, 9.761100000000092e-05, 9.77920000000028e-05, 9.695800000000115e-05, 9.763900000000006e-05, 9.745900000000113e-05, 9.745899999999766e-05, 9.727699999999978e-05, 9.733299999999806e-05, 9.750000000000036e-05, 9.763900000000006e-05, 9.75279999999995e-05]</msg>
<status status="PASS" starttime="20201029 12:44:53.720" endtime="20201029 12:44:53.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.715" endtime="20201029 12:44:53.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:53.726" endtime="20201029 12:44:53.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.725" endtime="20201029 12:44:53.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.724" endtime="20201029 12:44:53.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.363" endtime="20201029 12:44:53.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.362" endtime="20201029 12:44:53.747"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.757" endtime="20201029 12:44:53.778"></status>
</kw>
<msg timestamp="20201029 12:44:53.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.755" endtime="20201029 12:44:53.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.779" endtime="20201029 12:44:53.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.782" endtime="20201029 12:44:53.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.753" endtime="20201029 12:44:53.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.750" endtime="20201029 12:44:53.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.791" endtime="20201029 12:44:54.076"></status>
</kw>
<msg timestamp="20201029 12:44:54.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024435583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024533861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.789" endtime="20201029 12:44:54.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024435583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024533861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:54.080" endtime="20201029 12:44:54.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.088" endtime="20201029 12:44:54.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.787" endtime="20201029 12:44:54.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.785" endtime="20201029 12:44:54.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:54.095" level="INFO">${RESULT} = [{'diff': 9.827800000000025e-05}, {'diff': 9.830499999999992e-05}, {'diff': 9.880500000000042e-05}, {'diff': 9.88059999999999e-05}, {'diff': 9.854099999999713e-05}, {'diff': 9.83479999999981e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:54.092" endtime="20201029 12:44:54.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:54.099" level="INFO">${ACCURACY} = {'diff': [9.827800000000025e-05, 9.830499999999992e-05, 9.880500000000042e-05, 9.88059999999999e-05, 9.854099999999713e-05, 9.83479999999981e-05, 9.830600000000286e-05, 9.79730000000012e-05, 9.8139000...</msg>
<status status="PASS" starttime="20201029 12:44:54.096" endtime="20201029 12:44:54.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.103" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 12:44:54.102" endtime="20201029 12:44:54.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.106" level="INFO">VALUE: [9.827800000000025e-05, 9.830499999999992e-05, 9.880500000000042e-05, 9.88059999999999e-05, 9.854099999999713e-05, 9.83479999999981e-05, 9.830600000000286e-05, 9.79730000000012e-05, 9.813900000000056e-05, 9.827800000000025e-05, 9.879099999999738e-05, 9.880500000000042e-05, 9.877800000000075e-05, 9.824999999999764e-05, 9.877800000000075e-05, 9.851400000000093e-05, 9.862499999999802e-05, 9.865300000000063e-05, 9.833299999999906e-05, 9.847199999999875e-05, 9.795800000000215e-05, 9.827700000000078e-05, 9.843000000000005e-05, 9.847200000000222e-05, 9.848599999999832e-05, 9.811100000000142e-05, 9.862499999999802e-05, 9.84730000000017e-05, 9.831899999999949e-05, 9.795900000000163e-05, 9.845799999999919e-05, 9.862500000000149e-05, 9.833299999999906e-05, 9.831900000000296e-05, 9.863899999999759e-05, 9.863900000000106e-05, 9.877799999999728e-05, 9.82219999999985e-05, 9.795900000000163e-05, 9.865199999999769e-05, 9.813800000000109e-05, 9.865299999999716e-05, 9.88059999999999e-05, 9.797199999999825e-05, 9.797200000000172e-05, 9.881999999999946e-05, 9.795900000000163e-05, 9.816600000000023e-05, 9.815300000000013e-05, 9.823700000000102e-05]</msg>
<status status="PASS" starttime="20201029 12:44:54.105" endtime="20201029 12:44:54.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.100" endtime="20201029 12:44:54.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:54.112" endtime="20201029 12:44:54.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.110" endtime="20201029 12:44:54.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.109" endtime="20201029 12:44:54.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.748" endtime="20201029 12:44:54.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.747" endtime="20201029 12:44:54.132"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.143" endtime="20201029 12:44:54.163"></status>
</kw>
<msg timestamp="20201029 12:44:54.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.141" endtime="20201029 12:44:54.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.165" endtime="20201029 12:44:54.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.167" endtime="20201029 12:44:54.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.139" endtime="20201029 12:44:54.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.136" endtime="20201029 12:44:54.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.176" endtime="20201029 12:44:54.463"></status>
</kw>
<msg timestamp="20201029 12:44:54.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024553597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024653375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:54.175" endtime="20201029 12:44:54.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024553597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024653375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:54.467" endtime="20201029 12:44:54.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.475" endtime="20201029 12:44:54.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.172" endtime="20201029 12:44:54.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.170" endtime="20201029 12:44:54.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:54.481" level="INFO">${RESULT} = [{'diff': 9.977800000000175e-05}, {'diff': 9.930500000000092e-05}, {'diff': 9.912499999999852e-05}, {'diff': 9.945800000000019e-05}, {'diff': 9.962500000000249e-05}, {'diff': 9.901400000000143e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:54.478" endtime="20201029 12:44:54.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:54.486" level="INFO">${ACCURACY} = {'diff': [9.977800000000175e-05, 9.930500000000092e-05, 9.912499999999852e-05, 9.945800000000019e-05, 9.962500000000249e-05, 9.901400000000143e-05, 9.898599999999882e-05, 9.897299999999873e-05, 9.9431...</msg>
<status status="PASS" starttime="20201029 12:44:54.482" endtime="20201029 12:44:54.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.491" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 12:44:54.490" endtime="20201029 12:44:54.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.493" level="INFO">VALUE: [9.977800000000175e-05, 9.930500000000092e-05, 9.912499999999852e-05, 9.945800000000019e-05, 9.962500000000249e-05, 9.901400000000143e-05, 9.898599999999882e-05, 9.897299999999873e-05, 9.943100000000052e-05, 9.963799999999912e-05, 9.930499999999745e-05, 9.980500000000142e-05, 9.930500000000092e-05, 9.948599999999932e-05, 9.898599999999882e-05, 9.904200000000057e-05, 9.979200000000132e-05, 9.982000000000046e-05, 9.923699999999855e-05, 9.979099999999838e-05, 9.898599999999882e-05, 9.898599999999882e-05, 9.948599999999932e-05, 9.965299999999816e-05, 9.945900000000313e-05, 9.890300000000088e-05, 9.917999999999733e-05, 9.983300000000056e-05, 9.931900000000049e-05, 9.897200000000272e-05, 9.959700000000335e-05, 9.94999999999989e-05, 9.944400000000062e-05, 9.969500000000034e-05, 9.98060000000009e-05, 9.947199999999976e-05, 9.943100000000052e-05, 9.93060000000004e-05, 9.963899999999859e-05, 9.963799999999912e-05, 9.945800000000019e-05, 9.947199999999976e-05, 9.912499999999852e-05, 9.94999999999989e-05, 9.924999999999864e-05, 9.963899999999859e-05, 9.982000000000046e-05, 9.929199999999735e-05, 9.963800000000259e-05, 9.980500000000142e-05]</msg>
<status status="PASS" starttime="20201029 12:44:54.492" endtime="20201029 12:44:54.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.487" endtime="20201029 12:44:54.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:54.498" endtime="20201029 12:44:54.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.497" endtime="20201029 12:44:54.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.496" endtime="20201029 12:44:54.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.134" endtime="20201029 12:44:54.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.133" endtime="20201029 12:44:54.519"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.528" endtime="20201029 12:44:54.549"></status>
</kw>
<msg timestamp="20201029 12:44:54.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.526" endtime="20201029 12:44:54.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.551" endtime="20201029 12:44:54.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.553" endtime="20201029 12:44:54.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.524" endtime="20201029 12:44:54.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.521" endtime="20201029 12:44:54.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.562" endtime="20201029 12:44:54.863"></status>
</kw>
<msg timestamp="20201029 12:44:54.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022580264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:54.561" endtime="20201029 12:44:54.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022580264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:54.868" endtime="20201029 12:44:54.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.876" endtime="20201029 12:44:54.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.558" endtime="20201029 12:44:54.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.556" endtime="20201029 12:44:54.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:54.882" level="INFO">${RESULT} = [{'diff': 0.00010084699999999766}, {'diff': 0.0001004999999999999}, {'diff': 0.00010063900000000306}, {'diff': 0.00010062500000000002}, {'diff': 0.00010082000000000146}, {'diff': 0.0001006380000000001...</msg>
<status status="PASS" starttime="20201029 12:44:54.879" endtime="20201029 12:44:54.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:54.886" level="INFO">${ACCURACY} = {'diff': [0.00010084699999999766, 0.0001004999999999999, 0.00010063900000000306, 0.00010062500000000002, 0.00010082000000000146, 0.00010063800000000012, 0.00010077799999999928, 0.00010012499999999952,...</msg>
<status status="PASS" starttime="20201029 12:44:54.883" endtime="20201029 12:44:54.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.890" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 12:44:54.889" endtime="20201029 12:44:54.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.893" level="INFO">VALUE: [0.00010084699999999766, 0.0001004999999999999, 0.00010063900000000306, 0.00010062500000000002, 0.00010082000000000146, 0.00010063800000000012, 0.00010077799999999928, 0.00010012499999999952, 0.00010081899999999852, 0.00010029199999999835, 0.00010047199999999729, 0.00010011099999999995, 0.00010043100000000152, 0.00010029199999999835, 0.00010012499999999952, 9.993000000000155e-05, 0.00010081899999999852, 0.00010063899999999959, 0.00010045800000000119, 0.00010011099999999995, 0.00010029200000000182, 9.995800000000069e-05, 0.00010048600000000033, 9.995900000000016e-05, 0.00010062500000000002, 0.00010080499999999895, 0.00010030500000000192, 0.00010015300000000213, 0.00010029099999999888, 9.995800000000069e-05, 0.00010079199999999885, 0.00010062500000000002, 9.998599999999983e-05, 9.997299999999973e-05, 0.00010081899999999852, 0.000100415999999999, 0.00010031900000000149, 0.00010066699999999873, 0.00010045800000000119, 0.00010079199999999885, 0.00010029200000000182, 0.00010082000000000146, 0.0001001939999999979, 0.00010044500000000109, 0.00010015199999999919, 0.00010013800000000309, 0.00010063899999999959, 0.00010030499999999845, 0.00010047200000000076, 0.00010012499999999952]</msg>
<status status="PASS" starttime="20201029 12:44:54.892" endtime="20201029 12:44:54.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.887" endtime="20201029 12:44:54.894"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:54.898" endtime="20201029 12:44:54.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.896" endtime="20201029 12:44:54.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.895" endtime="20201029 12:44:54.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.520" endtime="20201029 12:44:54.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.519" endtime="20201029 12:44:54.918"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.927" endtime="20201029 12:44:54.947"></status>
</kw>
<msg timestamp="20201029 12:44:54.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.926" endtime="20201029 12:44:54.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.949" endtime="20201029 12:44:54.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.951" endtime="20201029 12:44:54.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.923" endtime="20201029 12:44:54.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.921" endtime="20201029 12:44:54.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.960" endtime="20201029 12:44:55.246"></status>
</kw>
<msg timestamp="20201029 12:44:55.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022854, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022955222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:54.959" endtime="20201029 12:44:55.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022854, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022955222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:55.250" endtime="20201029 12:44:55.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.258" endtime="20201029 12:44:55.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.956" endtime="20201029 12:44:55.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.955" endtime="20201029 12:44:55.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:55.264" level="INFO">${RESULT} = [{'diff': 0.0001012220000000015}, {'diff': 0.00010129199999999935}, {'diff': 0.00010129199999999935}, {'diff': 0.00010163899999999712}, {'diff': 0.00010161200000000092}, {'diff': 0.0001012500000000006...</msg>
<status status="PASS" starttime="20201029 12:44:55.261" endtime="20201029 12:44:55.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:55.268" level="INFO">${ACCURACY} = {'diff': [0.0001012220000000015, 0.00010129199999999935, 0.00010129199999999935, 0.00010163899999999712, 0.00010161200000000092, 0.00010125000000000065, 0.00010098599999999736, 0.00010162499999999755,...</msg>
<status status="PASS" starttime="20201029 12:44:55.265" endtime="20201029 12:44:55.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.273" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 12:44:55.272" endtime="20201029 12:44:55.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.275" level="INFO">VALUE: [0.0001012220000000015, 0.00010129199999999935, 0.00010129199999999935, 0.00010163899999999712, 0.00010161200000000092, 0.00010125000000000065, 0.00010098599999999736, 0.00010162499999999755, 0.00010148599999999786, 0.00010177700000000081, 0.00010179100000000038, 0.00010179199999999985, 0.00010177800000000028, 0.00010099999999999693, 0.0001018749999999978, 0.00010180599999999942, 0.00010181899999999952, 0.00010131899999999902, 0.00010131900000000249, 0.00010165300000000016, 0.00010098600000000083, 0.00010094400000000212, 0.00010169400000000287, 0.00010148600000000133, 0.00010090299999999941, 0.00010097299999999726, 0.00010115200000000019, 0.00010129099999999988, 0.00010180499999999995, 0.00010148599999999786, 0.0001013610000000012, 0.00010112499999999705, 0.00010141700000000295, 0.0001016939999999994, 0.00010095899999999769, 0.00010148699999999733, 0.00010180599999999942, 0.00010095800000000169, 0.00010130499999999945, 0.00010162499999999755, 0.00010113900000000009, 0.00010127799999999978, 0.00010093099999999855, 0.000101819999999999, 0.0001018060000000029, 0.00010145900000000166, 0.00010101399999999996, 0.00010147199999999829, 0.00010131899999999902, 0.00010131899999999902]</msg>
<status status="PASS" starttime="20201029 12:44:55.274" endtime="20201029 12:44:55.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.269" endtime="20201029 12:44:55.277"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:55.281" endtime="20201029 12:44:55.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.279" endtime="20201029 12:44:55.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.278" endtime="20201029 12:44:55.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.919" endtime="20201029 12:44:55.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.919" endtime="20201029 12:44:55.302"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.311" endtime="20201029 12:44:55.331"></status>
</kw>
<msg timestamp="20201029 12:44:55.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.309" endtime="20201029 12:44:55.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.333" endtime="20201029 12:44:55.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.339" endtime="20201029 12:44:55.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.306" endtime="20201029 12:44:55.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.304" endtime="20201029 12:44:55.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.352" endtime="20201029 12:44:55.638"></status>
</kw>
<msg timestamp="20201029 12:44:55.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023329403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023431472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:55.350" endtime="20201029 12:44:55.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023329403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023431472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:55.642" endtime="20201029 12:44:55.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.650" endtime="20201029 12:44:55.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.347" endtime="20201029 12:44:55.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.342" endtime="20201029 12:44:55.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:55.657" level="INFO">${RESULT} = [{'diff': 0.00010206899999999977}, {'diff': 0.00010215300000000066}, {'diff': 0.00010197199999999879}, {'diff': 0.00010211099999999848}, {'diff': 0.00010233399999999906}, {'diff': 0.000102473000000002...</msg>
<status status="PASS" starttime="20201029 12:44:55.654" endtime="20201029 12:44:55.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:55.661" level="INFO">${ACCURACY} = {'diff': [0.00010206899999999977, 0.00010215300000000066, 0.00010197199999999879, 0.00010211099999999848, 0.00010233399999999906, 0.00010247300000000223, 0.00010195899999999869, 0.00010247199999999929...</msg>
<status status="PASS" starttime="20201029 12:44:55.658" endtime="20201029 12:44:55.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.666" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 12:44:55.665" endtime="20201029 12:44:55.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.668" level="INFO">VALUE: [0.00010206899999999977, 0.00010215300000000066, 0.00010197199999999879, 0.00010211099999999848, 0.00010233399999999906, 0.00010247300000000223, 0.00010195899999999869, 0.00010247199999999929, 0.00010212500000000152, 0.00010241599999999754, 0.00010212499999999805, 0.00010229200000000035, 0.0001023060000000034, 0.00010230599999999992, 0.00010205599999999967, 0.00010248699999999833, 0.00010266600000000126, 0.00010270799999999997, 0.00010215300000000066, 0.00010197200000000226, 0.00010277799999999782, 0.00010263900000000159, 0.00010213900000000109, 0.00010193099999999955, 0.00010194499999999912, 0.00010279200000000085, 0.00010193100000000302, 0.00010236099999999873, 0.00010197199999999879, 0.00010234699999999916, 0.00010263900000000159, 0.00010262500000000202, 0.00010263899999999812, 0.00010282, 0.00010213900000000109, 0.00010262500000000202, 0.00010261199999999845, 0.00010245799999999972, 0.00010262499999999855, 0.00010230500000000045, 0.00010248600000000233, 0.00010230599999999992, 0.00010252699999999809, 0.00010282, 0.00010230599999999992, 0.00010212500000000152, 0.00010245799999999972, 0.00010195800000000269, 0.00010226399999999775, 0.00010263900000000159]</msg>
<status status="PASS" starttime="20201029 12:44:55.667" endtime="20201029 12:44:55.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.662" endtime="20201029 12:44:55.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:55.673" endtime="20201029 12:44:55.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.672" endtime="20201029 12:44:55.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.671" endtime="20201029 12:44:55.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.302" endtime="20201029 12:44:55.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.302" endtime="20201029 12:44:55.694"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.703" endtime="20201029 12:44:55.723"></status>
</kw>
<msg timestamp="20201029 12:44:55.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.701" endtime="20201029 12:44:55.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.724" endtime="20201029 12:44:55.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.727" endtime="20201029 12:44:55.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.698" endtime="20201029 12:44:55.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.696" endtime="20201029 12:44:55.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.736" endtime="20201029 12:44:56.022"></status>
</kw>
<msg timestamp="20201029 12:44:56.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:55.734" endtime="20201029 12:44:56.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:56.026" endtime="20201029 12:44:56.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.034" endtime="20201029 12:44:56.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.731" endtime="20201029 12:44:56.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.730" endtime="20201029 12:44:56.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:56.041" level="INFO">${RESULT} = [{'diff': 0.00010391700000000198}, {'diff': 0.00010312499999999905}, {'diff': 0.00010315300000000166}, {'diff': 0.00010344500000000062}, {'diff': 0.00010295899999999969}, {'diff': 0.000103014000000001...</msg>
<status status="PASS" starttime="20201029 12:44:56.038" endtime="20201029 12:44:56.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:56.045" level="INFO">${ACCURACY} = {'diff': [0.00010391700000000198, 0.00010312499999999905, 0.00010315300000000166, 0.00010344500000000062, 0.00010295899999999969, 0.00010301400000000197, 0.00010331900000000102, 0.0001035689999999978,...</msg>
<status status="PASS" starttime="20201029 12:44:56.042" endtime="20201029 12:44:56.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.049" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 12:44:56.048" endtime="20201029 12:44:56.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.052" level="INFO">VALUE: [0.00010391700000000198, 0.00010312499999999905, 0.00010315300000000166, 0.00010344500000000062, 0.00010295899999999969, 0.00010301400000000197, 0.00010331900000000102, 0.0001035689999999978, 0.00010348600000000333, 0.0001030000000000024, 0.00010312499999999905, 0.00010348599999999986, 0.00010349999999999943, 0.00010297299999999926, 0.00010347200000000029, 0.00010313899999999862, 0.00010379099999999891, 0.0001036810000000013, 0.00010345800000000072, 0.00010330600000000092, 0.00010352699999999909, 0.00010297299999999926, 0.00010347300000000323, 0.00010347299999999976, 0.00010347199999999682, 0.00010380499999999848, 0.00010334700000000016, 0.00010330500000000145, 0.00010347199999999682, 0.00010381899999999805, 0.00010313899999999862, 0.00010345900000000019, 0.00010315300000000166, 0.00010363900000000259, 0.00010330499999999798, 0.00010379099999999891, 0.00010297199999999979, 0.00010313900000000209, 0.00010295800000000022, 0.00010298599999999936, 0.00010345900000000019, 0.00010363899999999912, 0.00010295899999999969, 0.00010347200000000029, 0.00010361099999999998, 0.00010297199999999979, 0.00010297199999999979, 0.00010345800000000072, 0.00010363900000000259, 0.00010313899999999862]</msg>
<status status="PASS" starttime="20201029 12:44:56.050" endtime="20201029 12:44:56.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.046" endtime="20201029 12:44:56.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:56.057" endtime="20201029 12:44:56.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.055" endtime="20201029 12:44:56.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.054" endtime="20201029 12:44:56.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.695" endtime="20201029 12:44:56.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.694" endtime="20201029 12:44:56.077"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.086" endtime="20201029 12:44:56.107"></status>
</kw>
<msg timestamp="20201029 12:44:56.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.084" endtime="20201029 12:44:56.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.109" endtime="20201029 12:44:56.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.111" endtime="20201029 12:44:56.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.082" endtime="20201029 12:44:56.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.080" endtime="20201029 12:44:56.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.120" endtime="20201029 12:44:56.405"></status>
</kw>
<msg timestamp="20201029 12:44:56.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023098097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023203014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:56.119" endtime="20201029 12:44:56.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023098097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023203014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:56.409" endtime="20201029 12:44:56.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.417" endtime="20201029 12:44:56.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.116" endtime="20201029 12:44:56.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.115" endtime="20201029 12:44:56.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:56.424" level="INFO">${RESULT} = [{'diff': 0.00010491699999999951}, {'diff': 0.00010462500000000055}, {'diff': 0.00010430600000000192}, {'diff': 0.00010402799999999907}, {'diff': 0.00010411199999999995}, {'diff': 0.000103944000000001...</msg>
<status status="PASS" starttime="20201029 12:44:56.420" endtime="20201029 12:44:56.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:56.428" level="INFO">${ACCURACY} = {'diff': [0.00010491699999999951, 0.00010462500000000055, 0.00010430600000000192, 0.00010402799999999907, 0.00010411199999999995, 0.00010394400000000165, 0.00010465299999999969, 0.00010412500000000005...</msg>
<status status="PASS" starttime="20201029 12:44:56.425" endtime="20201029 12:44:56.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.432" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 12:44:56.431" endtime="20201029 12:44:56.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.435" level="INFO">VALUE: [0.00010491699999999951, 0.00010462500000000055, 0.00010430600000000192, 0.00010402799999999907, 0.00010411199999999995, 0.00010394400000000165, 0.00010465299999999969, 0.00010412500000000005, 0.00010413899999999962, 0.00010395800000000122, 0.00010445799999999825, 0.00010413899999999962, 0.00010413899999999962, 0.00010481899999999905, 0.00010481900000000252, 0.00010430499999999898, 0.00010398600000000036, 0.00010463900000000012, 0.00010462500000000055, 0.00010445800000000172, 0.00010448600000000086, 0.0001040139999999995, 0.00010413900000000309, 0.00010447199999999782, 0.00010412500000000005, 0.00010431899999999855, 0.00010395799999999775, 0.00010445800000000172, 0.00010447199999999782, 0.00010413899999999962, 0.00010452700000000009, 0.00010480600000000242, 0.00010393100000000155, 0.00010425000000000018, 0.00010462500000000055, 0.00010447200000000129, 0.0001040689999999983, 0.00010412500000000005, 0.00010397200000000079, 0.00010445799999999825, 0.00010413899999999962, 0.00010445900000000119, 0.00010483299999999862, 0.00010447200000000129, 0.00010447199999999782, 0.00010440299999999944, 0.00010412500000000005, 0.00010408300000000134, 0.00010430599999999846, 0.00010411100000000048]</msg>
<status status="PASS" starttime="20201029 12:44:56.433" endtime="20201029 12:44:56.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.428" endtime="20201029 12:44:56.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:56.441" endtime="20201029 12:44:56.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.439" endtime="20201029 12:44:56.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.438" endtime="20201029 12:44:56.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.078" endtime="20201029 12:44:56.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.078" endtime="20201029 12:44:56.461"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.470" endtime="20201029 12:44:56.489"></status>
</kw>
<msg timestamp="20201029 12:44:56.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.468" endtime="20201029 12:44:56.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.491" endtime="20201029 12:44:56.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.493" endtime="20201029 12:44:56.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.466" endtime="20201029 12:44:56.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.464" endtime="20201029 12:44:56.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.502" endtime="20201029 12:44:56.788"></status>
</kw>
<msg timestamp="20201029 12:44:56.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:56.501" endtime="20201029 12:44:56.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:56.792" endtime="20201029 12:44:56.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.800" endtime="20201029 12:44:56.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.498" endtime="20201029 12:44:56.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.496" endtime="20201029 12:44:56.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:56.807" level="INFO">${RESULT} = [{'diff': 0.00010540300000000044}, {'diff': 0.00010563900000000112}, {'diff': 0.00010581900000000005}, {'diff': 0.00010513900000000062}, {'diff': 0.00010504199999999964}, {'diff': 0.000105805000000000...</msg>
<status status="PASS" starttime="20201029 12:44:56.803" endtime="20201029 12:44:56.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:56.811" level="INFO">${ACCURACY} = {'diff': [0.00010540300000000044, 0.00010563900000000112, 0.00010581900000000005, 0.00010513900000000062, 0.00010504199999999964, 0.00010580500000000048, 0.00010579200000000039, 0.00010580599999999996...</msg>
<status status="PASS" starttime="20201029 12:44:56.808" endtime="20201029 12:44:56.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.816" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 12:44:56.815" endtime="20201029 12:44:56.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.818" level="INFO">VALUE: [0.00010540300000000044, 0.00010563900000000112, 0.00010581900000000005, 0.00010513900000000062, 0.00010504199999999964, 0.00010580500000000048, 0.00010579200000000039, 0.00010580599999999996, 0.00010501300000000102, 0.00010512499999999758, 0.00010579200000000039, 0.00010518099999999933, 0.00010580500000000048, 0.00010580500000000048, 0.00010545799999999925, 0.00010512499999999758, 0.00010497200000000179, 0.00010495900000000169, 0.00010493099999999908, 0.00010515300000000019, 0.00010498600000000136, 0.00010558299999999937, 0.00010568099999999983, 0.00010563900000000112, 0.00010531900000000302, 0.00010581999999999953, 0.00010529199999999989, 0.00010547199999999882, 0.00010495899999999822, 0.00010513900000000062, 0.00010547200000000229, 0.00010497200000000179, 0.00010498599999999789, 0.00010562499999999808, 0.00010495800000000222, 0.00010579200000000039, 0.00010530600000000293, 0.00010580599999999996, 0.00010579200000000039, 0.00010548600000000186, 0.00010526300000000127, 0.00010562500000000155, 0.00010580599999999996, 0.0001052360000000016, 0.00010530599999999946, 0.00010579200000000039, 0.00010530599999999946, 0.00010530599999999946, 0.00010580599999999996, 0.00010545899999999872]</msg>
<status status="PASS" starttime="20201029 12:44:56.817" endtime="20201029 12:44:56.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.812" endtime="20201029 12:44:56.820"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:56.823" endtime="20201029 12:44:56.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.822" endtime="20201029 12:44:56.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.821" endtime="20201029 12:44:56.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.462" endtime="20201029 12:44:56.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.462" endtime="20201029 12:44:56.844"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.853" endtime="20201029 12:44:56.872"></status>
</kw>
<msg timestamp="20201029 12:44:56.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.851" endtime="20201029 12:44:56.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.874" endtime="20201029 12:44:56.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.876" endtime="20201029 12:44:56.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.848" endtime="20201029 12:44:56.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.846" endtime="20201029 12:44:56.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.885" endtime="20201029 12:44:57.173"></status>
</kw>
<msg timestamp="20201029 12:44:57.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:56.884" endtime="20201029 12:44:57.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:57.177" endtime="20201029 12:44:57.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.185" endtime="20201029 12:44:57.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.881" endtime="20201029 12:44:57.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.880" endtime="20201029 12:44:57.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:57.192" level="INFO">${RESULT} = [{'diff': 0.00010661099999999951}, {'diff': 0.00010645800000000025}, {'diff': 0.00010597199999999932}, {'diff': 0.00010630600000000046}, {'diff': 0.0001067499999999992}, {'diff': 0.0001068330000000006...</msg>
<status status="PASS" starttime="20201029 12:44:57.189" endtime="20201029 12:44:57.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:57.196" level="INFO">${ACCURACY} = {'diff': [0.00010661099999999951, 0.00010645800000000025, 0.00010597199999999932, 0.00010630600000000046, 0.0001067499999999992, 0.00010683300000000062, 0.00010629200000000089, 0.00010595799999999975,...</msg>
<status status="PASS" starttime="20201029 12:44:57.193" endtime="20201029 12:44:57.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.200" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 12:44:57.199" endtime="20201029 12:44:57.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.203" level="INFO">VALUE: [0.00010661099999999951, 0.00010645800000000025, 0.00010597199999999932, 0.00010630600000000046, 0.0001067499999999992, 0.00010683300000000062, 0.00010629200000000089, 0.00010595799999999975, 0.00010663899999999865, 0.00010679100000000191, 0.00010630499999999751, 0.00010647199999999982, 0.0001067499999999992, 0.00010682000000000053, 0.0001060279999999976, 0.00010679200000000139, 0.00010662500000000255, 0.00010642999999999764, 0.00010662499999999908, 0.00010649999999999896, 0.00010597199999999932, 0.00010613899999999815, 0.00010595799999999975, 0.00010597199999999932, 0.00010630600000000046, 0.00010647299999999929, 0.00010647199999999982, 0.00010680500000000148, 0.00010663899999999865, 0.00010681900000000105, 0.00010663899999999865, 0.00010645800000000025, 0.00010595899999999922, 0.00010613900000000162, 0.00010684700000000019, 0.00010644400000000068, 0.00010613899999999815, 0.00010612499999999858, 0.00010613899999999815, 0.00010663899999999865, 0.00010663899999999865, 0.00010665299999999822, 0.00010641700000000101, 0.00010679200000000139, 0.00010648599999999939, 0.0001065279999999981, 0.00010680600000000096, 0.00010629099999999794, 0.00010661100000000298, 0.00010630600000000046]</msg>
<status status="PASS" starttime="20201029 12:44:57.201" endtime="20201029 12:44:57.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.197" endtime="20201029 12:44:57.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:57.208" endtime="20201029 12:44:57.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.206" endtime="20201029 12:44:57.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.205" endtime="20201029 12:44:57.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.845" endtime="20201029 12:44:57.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.844" endtime="20201029 12:44:57.228"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.237" endtime="20201029 12:44:57.258"></status>
</kw>
<msg timestamp="20201029 12:44:57.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:57.236" endtime="20201029 12:44:57.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:57.260" endtime="20201029 12:44:57.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.262" endtime="20201029 12:44:57.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.233" endtime="20201029 12:44:57.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.231" endtime="20201029 12:44:57.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.271" endtime="20201029 12:44:57.556"></status>
</kw>
<msg timestamp="20201029 12:44:57.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023069181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02317625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:57.270" endtime="20201029 12:44:57.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023069181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02317625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:57.560" endtime="20201029 12:44:57.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.568" endtime="20201029 12:44:57.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.267" endtime="20201029 12:44:57.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.265" endtime="20201029 12:44:57.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:57.575" level="INFO">${RESULT} = [{'diff': 0.00010706899999999783}, {'diff': 0.00010747200000000082}, {'diff': 0.00010780600000000196}, {'diff': 0.00010713899999999915}, {'diff': 0.00010731900000000155}, {'diff': 0.000107625000000000...</msg>
<status status="PASS" starttime="20201029 12:44:57.571" endtime="20201029 12:44:57.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:57.579" level="INFO">${ACCURACY} = {'diff': [0.00010706899999999783, 0.00010747200000000082, 0.00010780600000000196, 0.00010713899999999915, 0.00010731900000000155, 0.00010762500000000008, 0.00010730499999999851, 0.00010762500000000008...</msg>
<status status="PASS" starttime="20201029 12:44:57.576" endtime="20201029 12:44:57.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.583" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 12:44:57.582" endtime="20201029 12:44:57.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.585" level="INFO">VALUE: [0.00010706899999999783, 0.00010747200000000082, 0.00010780600000000196, 0.00010713899999999915, 0.00010731900000000155, 0.00010762500000000008, 0.00010730499999999851, 0.00010762500000000008, 0.00010718100000000133, 0.00010759699999999747, 0.00010780600000000196, 0.00010779199999999892, 0.00010730600000000146, 0.00010709799999999992, 0.00010763800000000018, 0.00010692999999999814, 0.00010777699999999987, 0.00010765299999999922, 0.00010777800000000282, 0.00010697200000000032, 0.00010695800000000075, 0.00010731999999999756, 0.00010751399999999953, 0.00010780600000000196, 0.00010748600000000039, 0.00010780499999999901, 0.00010780499999999901, 0.00010713899999999915, 0.00010726399999999928, 0.00010747200000000082, 0.00010784800000000067, 0.00010763899999999965, 0.00010715199999999925, 0.0001076950000000014, 0.0001070829999999974, 0.00010729099999999894, 0.00010745800000000125, 0.00010697200000000032, 0.00010694399999999771, 0.00010779200000000239, 0.00010786100000000076, 0.00010699999999999946, 0.00010704199999999817, 0.00010731900000000155, 0.00010713899999999915, 0.00010766699999999879, 0.00010740299999999897, 0.00010697200000000032, 0.00010730600000000146, 0.00010763899999999965]</msg>
<status status="PASS" starttime="20201029 12:44:57.584" endtime="20201029 12:44:57.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.579" endtime="20201029 12:44:57.588"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:57.591" endtime="20201029 12:44:57.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.590" endtime="20201029 12:44:57.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.589" endtime="20201029 12:44:57.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.229" endtime="20201029 12:44:57.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.229" endtime="20201029 12:44:57.612"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.620" endtime="20201029 12:44:57.640"></status>
</kw>
<msg timestamp="20201029 12:44:57.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:57.619" endtime="20201029 12:44:57.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:57.642" endtime="20201029 12:44:57.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.644" endtime="20201029 12:44:57.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.616" endtime="20201029 12:44:57.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.614" endtime="20201029 12:44:57.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.653" endtime="20201029 12:44:57.938"></status>
</kw>
<msg timestamp="20201029 12:44:57.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021958306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:57.652" endtime="20201029 12:44:57.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021958306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:57.943" endtime="20201029 12:44:57.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.950" endtime="20201029 12:44:57.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.649" endtime="20201029 12:44:57.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.647" endtime="20201029 12:44:57.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:57.957" level="INFO">${RESULT} = [{'diff': 0.0001082630000000008}, {'diff': 0.00010824999999999724}, {'diff': 0.00010811100000000101}, {'diff': 0.00010880500000000001}, {'diff': 0.00010847199999999835}, {'diff': 0.0001079860000000008...</msg>
<status status="PASS" starttime="20201029 12:44:57.954" endtime="20201029 12:44:57.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:57.962" level="INFO">${ACCURACY} = {'diff': [0.0001082630000000008, 0.00010824999999999724, 0.00010811100000000101, 0.00010880500000000001, 0.00010847199999999835, 0.00010798600000000089, 0.00010851300000000105, 0.00010865300000000022,...</msg>
<status status="PASS" starttime="20201029 12:44:57.958" endtime="20201029 12:44:57.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.966" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 12:44:57.965" endtime="20201029 12:44:57.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.969" level="INFO">VALUE: [0.0001082630000000008, 0.00010824999999999724, 0.00010811100000000101, 0.00010880500000000001, 0.00010847199999999835, 0.00010798600000000089, 0.00010851300000000105, 0.00010865300000000022, 0.00010880599999999949, 0.00010834699999999822, 0.00010863800000000118, 0.00010795799999999828, 0.00010847199999999835, 0.00010812500000000058, 0.00010812500000000058, 0.00010811100000000101, 0.00010812499999999711, 0.00010830600000000246, 0.00010793100000000208, 0.00010847299999999782, 0.00010848599999999792, 0.00010880500000000001, 0.00010830500000000298, 0.00010813900000000015, 0.00010797199999999785, 0.00010880599999999949, 0.00010847200000000182, 0.00010847299999999782, 0.00010880500000000001, 0.00010797199999999785, 0.00010798600000000089, 0.00010813900000000015, 0.00010845800000000225, 0.00010815299999999972, 0.00010816699999999929, 0.00010870799999999903, 0.00010795900000000122, 0.00010880599999999949, 0.00010863799999999771, 0.00010813900000000015, 0.00010795799999999828, 0.00010881899999999958, 0.00010843099999999911, 0.00010798600000000089, 0.00010880599999999949, 0.00010881999999999906, 0.00010847299999999782, 0.00010883299999999915, 0.00010815299999999972, 0.00010865300000000022]</msg>
<status status="PASS" starttime="20201029 12:44:57.967" endtime="20201029 12:44:57.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.963" endtime="20201029 12:44:57.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:57.974" endtime="20201029 12:44:57.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.972" endtime="20201029 12:44:57.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.971" endtime="20201029 12:44:57.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.613" endtime="20201029 12:44:57.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.612" endtime="20201029 12:44:57.994"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.003" endtime="20201029 12:44:58.022"></status>
</kw>
<msg timestamp="20201029 12:44:58.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.001" endtime="20201029 12:44:58.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.024" endtime="20201029 12:44:58.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.026" endtime="20201029 12:44:58.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.999" endtime="20201029 12:44:58.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.997" endtime="20201029 12:44:58.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.035" endtime="20201029 12:44:58.322"></status>
</kw>
<msg timestamp="20201029 12:44:58.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022177583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:58.034" endtime="20201029 12:44:58.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022177583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:58.326" endtime="20201029 12:44:58.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.334" endtime="20201029 12:44:58.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.031" endtime="20201029 12:44:58.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.030" endtime="20201029 12:44:58.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:58.340" level="INFO">${RESULT} = [{'diff': 0.00010902700000000112}, {'diff': 0.00010930499999999704}, {'diff': 0.00010897199999999885}, {'diff': 0.00010950000000000196}, {'diff': 0.00010963899999999818}, {'diff': 0.000109653000000001...</msg>
<status status="PASS" starttime="20201029 12:44:58.337" endtime="20201029 12:44:58.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:58.344" level="INFO">${ACCURACY} = {'diff': [0.00010902700000000112, 0.00010930499999999704, 0.00010897199999999885, 0.00010950000000000196, 0.00010963899999999818, 0.00010965300000000122, 0.00010916699999999682, 0.00010894499999999918...</msg>
<status status="PASS" starttime="20201029 12:44:58.341" endtime="20201029 12:44:58.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.349" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 12:44:58.348" endtime="20201029 12:44:58.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.351" level="INFO">VALUE: [0.00010902700000000112, 0.00010930499999999704, 0.00010897199999999885, 0.00010950000000000196, 0.00010963899999999818, 0.00010965300000000122, 0.00010916699999999682, 0.00010894499999999918, 0.00010980600000000049, 0.00010977700000000187, 0.00010966700000000079, 0.00010913900000000115, 0.00010947200000000282, 0.00010916699999999682, 0.00010983299999999668, 0.00010949999999999849, 0.00010948699999999839, 0.00010929200000000042, 0.00010980500000000101, 0.00010897199999999885, 0.00010912500000000158, 0.00010913899999999768, 0.00010913900000000115, 0.00010962499999999861, 0.00010895800000000275, 0.00010965300000000122, 0.00010980600000000049, 0.00010981900000000058, 0.0001094159999999976, 0.00010963900000000165, 0.00010969499999999993, 0.00010897199999999885, 0.00010982000000000006, 0.00010931999999999956, 0.00010897199999999885, 0.00010982000000000006, 0.00010898599999999842, 0.00010915199999999778, 0.00010944400000000021, 0.00010945799999999978, 0.00010963900000000165, 0.00010980600000000049, 0.00010915299999999725, 0.00010963899999999818, 0.00010912499999999811, 0.00010897300000000179, 0.00010980500000000101, 0.00010981900000000058, 0.00010977800000000135, 0.00010930500000000051]</msg>
<status status="PASS" starttime="20201029 12:44:58.350" endtime="20201029 12:44:58.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.345" endtime="20201029 12:44:58.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:58.357" endtime="20201029 12:44:58.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.355" endtime="20201029 12:44:58.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.354" endtime="20201029 12:44:58.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.995" endtime="20201029 12:44:58.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.995" endtime="20201029 12:44:58.378"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.386" endtime="20201029 12:44:58.407"></status>
</kw>
<msg timestamp="20201029 12:44:58.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.385" endtime="20201029 12:44:58.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.408" endtime="20201029 12:44:58.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.411" endtime="20201029 12:44:58.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.382" endtime="20201029 12:44:58.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.380" endtime="20201029 12:44:58.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.420" endtime="20201029 12:44:58.705"></status>
</kw>
<msg timestamp="20201029 12:44:58.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023237778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02334875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:58.418" endtime="20201029 12:44:58.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023237778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02334875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:58.709" endtime="20201029 12:44:58.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.717" endtime="20201029 12:44:58.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.416" endtime="20201029 12:44:58.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.414" endtime="20201029 12:44:58.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:58.724" level="INFO">${RESULT} = [{'diff': 0.00011097200000000085}, {'diff': 0.00011080499999999854}, {'diff': 0.00011024999999999924}, {'diff': 0.00011049999999999949}, {'diff': 0.00011047200000000035}, {'diff': 0.000110638999999999...</msg>
<status status="PASS" starttime="20201029 12:44:58.721" endtime="20201029 12:44:58.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:58.728" level="INFO">${ACCURACY} = {'diff': [0.00011097200000000085, 0.00011080499999999854, 0.00011024999999999924, 0.00011049999999999949, 0.00011047200000000035, 0.00011063899999999918, 0.00011030600000000099, 0.00011045900000000025...</msg>
<status status="PASS" starttime="20201029 12:44:58.725" endtime="20201029 12:44:58.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.732" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 12:44:58.731" endtime="20201029 12:44:58.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.735" level="INFO">VALUE: [0.00011097200000000085, 0.00011080499999999854, 0.00011024999999999924, 0.00011049999999999949, 0.00011047200000000035, 0.00011063899999999918, 0.00011030600000000099, 0.00011045900000000025, 0.00011030599999999752, 0.00011013899999999868, 0.00011048599999999992, 0.00011012500000000258, 0.00011081900000000158, 0.00011055500000000176, 0.0001103479999999997, 0.00011065299999999875, 0.0001105700000000008, 0.00010995899999999975, 0.00010997299999999932, 0.00011063799999999971, 0.00011045800000000078, 0.00011013899999999868, 0.00011048599999999992, 0.00011030599999999752, 0.00011062500000000308, 0.00011062499999999961, 0.00011082000000000106, 0.00011081900000000158, 0.00011080499999999854, 0.00010997199999999985, 0.00010997199999999985, 0.00011044399999999774, 0.00011032000000000056, 0.00011065300000000222, 0.00011080599999999802, 0.00011030600000000099, 0.00011066600000000232, 0.00011084700000000072, 0.00010997199999999985, 0.00011048600000000339, 0.00011030499999999804, 0.00010997199999999985, 0.00010998599999999942, 0.00011045900000000025, 0.00011080599999999802, 0.00011027799999999838, 0.00011047200000000035, 0.00011013899999999868, 0.00011044400000000121, 0.00011079099999999897]</msg>
<status status="PASS" starttime="20201029 12:44:58.733" endtime="20201029 12:44:58.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.729" endtime="20201029 12:44:58.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:58.741" endtime="20201029 12:44:58.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.739" endtime="20201029 12:44:58.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.738" endtime="20201029 12:44:58.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.379" endtime="20201029 12:44:58.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.378" endtime="20201029 12:44:58.761"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.770" endtime="20201029 12:44:58.790"></status>
</kw>
<msg timestamp="20201029 12:44:58.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.768" endtime="20201029 12:44:58.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.792" endtime="20201029 12:44:58.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.795" endtime="20201029 12:44:58.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.766" endtime="20201029 12:44:58.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.764" endtime="20201029 12:44:58.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.804" endtime="20201029 12:44:59.089"></status>
</kw>
<msg timestamp="20201029 12:44:59.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022031444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022143347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:58.802" endtime="20201029 12:44:59.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022031444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022143347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.093" endtime="20201029 12:44:59.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.101" endtime="20201029 12:44:59.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.799" endtime="20201029 12:44:59.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.798" endtime="20201029 12:44:59.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:59.107" level="INFO">${RESULT} = [{'diff': 0.000111903}, {'diff': 0.00011163900000000018}, {'diff': 0.00011180600000000249}, {'diff': 0.00011095799999999781}, {'diff': 0.00011180600000000249}, {'diff': 0.00011145900000000125}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:44:59.104" endtime="20201029 12:44:59.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:59.112" level="INFO">${ACCURACY} = {'diff': [0.000111903, 0.00011163900000000018, 0.00011180600000000249, 0.00011095799999999781, 0.00011180600000000249, 0.00011145900000000125, 0.00011180599999999902, 0.00011130499999999904, 0.0001111...</msg>
<status status="PASS" starttime="20201029 12:44:59.108" endtime="20201029 12:44:59.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.117" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 12:44:59.116" endtime="20201029 12:44:59.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.119" level="INFO">VALUE: [0.000111903, 0.00011163900000000018, 0.00011180600000000249, 0.00011095799999999781, 0.00011180600000000249, 0.00011145900000000125, 0.00011180599999999902, 0.00011130499999999904, 0.00011113899999999968, 0.00011113899999999968, 0.00011112500000000011, 0.00011127799999999938, 0.00011095800000000128, 0.00011180599999999902, 0.00011097300000000032, 0.00011163899999999671, 0.00011150000000000049, 0.00011163900000000018, 0.0001115419999999992, 0.00011162499999999714, 0.00011130599999999852, 0.00011131999999999809, 0.00011162500000000061, 0.00011130599999999852, 0.00011187500000000086, 0.00011090199999999953, 0.00011113899999999968, 0.00011147199999999788, 0.00011113899999999968, 0.00011181999999999859, 0.00011163900000000018, 0.00011179199999999945, 0.00011145899999999778, 0.00011162500000000061, 0.00011143100000000211, 0.00011145799999999831, 0.00011129100000000294, 0.00011177799999999988, 0.00011148600000000092, 0.00011104099999999922, 0.00011115300000000272, 0.00011127799999999938, 0.00011097300000000032, 0.00011147299999999735, 0.00011113800000000021, 0.00011115299999999925, 0.00011180499999999954, 0.00011170899999999803, 0.00011104099999999922, 0.00011098600000000042]</msg>
<status status="PASS" starttime="20201029 12:44:59.118" endtime="20201029 12:44:59.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.113" endtime="20201029 12:44:59.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:59.124" endtime="20201029 12:44:59.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.123" endtime="20201029 12:44:59.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.121" endtime="20201029 12:44:59.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.762" endtime="20201029 12:44:59.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.762" endtime="20201029 12:44:59.145"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.153" endtime="20201029 12:44:59.173"></status>
</kw>
<msg timestamp="20201029 12:44:59.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.152" endtime="20201029 12:44:59.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.175" endtime="20201029 12:44:59.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.177" endtime="20201029 12:44:59.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.149" endtime="20201029 12:44:59.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.147" endtime="20201029 12:44:59.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.186" endtime="20201029 12:44:59.473"></status>
</kw>
<msg timestamp="20201029 12:44:59.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.185" endtime="20201029 12:44:59.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.477" endtime="20201029 12:44:59.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.485" endtime="20201029 12:44:59.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.182" endtime="20201029 12:44:59.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.180" endtime="20201029 12:44:59.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:59.492" level="INFO">${RESULT} = [{'diff': 0.00011241700000000007}, {'diff': 0.00011230599999999952}, {'diff': 0.00011263900000000118}, {'diff': 0.00011245800000000278}, {'diff': 0.00011263800000000171}, {'diff': 0.000112805000000000...</msg>
<status status="PASS" starttime="20201029 12:44:59.489" endtime="20201029 12:44:59.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:59.496" level="INFO">${ACCURACY} = {'diff': [0.00011241700000000007, 0.00011230599999999952, 0.00011263900000000118, 0.00011245800000000278, 0.00011263800000000171, 0.00011280500000000054, 0.00011280499999999707, 0.00011288799999999849...</msg>
<status status="PASS" starttime="20201029 12:44:59.493" endtime="20201029 12:44:59.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.500" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 12:44:59.499" endtime="20201029 12:44:59.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.503" level="INFO">VALUE: [0.00011241700000000007, 0.00011230599999999952, 0.00011263900000000118, 0.00011245800000000278, 0.00011263800000000171, 0.00011280500000000054, 0.00011280499999999707, 0.00011288799999999849, 0.00011195800000000228, 0.00011197199999999838, 0.00011197300000000132, 0.00011195899999999828, 0.00011280499999999707, 0.00011195799999999881, 0.00011279100000000097, 0.00011230500000000004, 0.00011245799999999931, 0.00011194399999999924, 0.00011256999999999934, 0.00011280600000000002, 0.000111903, 0.00011230599999999952, 0.00011215200000000078, 0.0001124160000000006, 0.00011262499999999814, 0.00011263899999999771, 0.00011197199999999838, 0.00011247199999999888, 0.00011280600000000002, 0.00011230599999999952, 0.00011195899999999828, 0.00011262500000000161, 0.00011245799999999931, 0.00011226400000000081, 0.00011223600000000167, 0.00011245799999999931, 0.00011198600000000142, 0.00011279200000000045, 0.00011197300000000132, 0.00011241700000000007, 0.00011213799999999774, 0.00011251400000000106, 0.0001120969999999985, 0.00011282000000000306, 0.00011197199999999838, 0.00011223600000000167, 0.00011229199999999995, 0.00011279199999999698, 0.00011245800000000278, 0.00011222199999999863]</msg>
<status status="PASS" starttime="20201029 12:44:59.501" endtime="20201029 12:44:59.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.497" endtime="20201029 12:44:59.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:59.508" endtime="20201029 12:44:59.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.506" endtime="20201029 12:44:59.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.505" endtime="20201029 12:44:59.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.146" endtime="20201029 12:44:59.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.145" endtime="20201029 12:44:59.529"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.537" endtime="20201029 12:44:59.558"></status>
</kw>
<msg timestamp="20201029 12:44:59.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.536" endtime="20201029 12:44:59.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.560" endtime="20201029 12:44:59.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.562" endtime="20201029 12:44:59.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.533" endtime="20201029 12:44:59.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.531" endtime="20201029 12:44:59.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.571" endtime="20201029 12:44:59.857"></status>
</kw>
<msg timestamp="20201029 12:44:59.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023318042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023431792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.570" endtime="20201029 12:44:59.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023318042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023431792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.861" endtime="20201029 12:44:59.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.869" endtime="20201029 12:44:59.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.567" endtime="20201029 12:44:59.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.566" endtime="20201029 12:44:59.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:59.876" level="INFO">${RESULT} = [{'diff': 0.00011374999999999927}, {'diff': 0.00011313900000000168}, {'diff': 0.00011362499999999914}, {'diff': 0.00011365199999999881}, {'diff': 0.00011330499999999757}, {'diff': 0.000113167000000000...</msg>
<status status="PASS" starttime="20201029 12:44:59.872" endtime="20201029 12:44:59.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:59.880" level="INFO">${ACCURACY} = {'diff': [0.00011374999999999927, 0.00011313900000000168, 0.00011362499999999914, 0.00011365199999999881, 0.00011330499999999757, 0.00011316700000000082, 0.00011313900000000168, 0.00011297200000000285...</msg>
<status status="PASS" starttime="20201029 12:44:59.877" endtime="20201029 12:44:59.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.884" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 12:44:59.883" endtime="20201029 12:44:59.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.887" level="INFO">VALUE: [0.00011374999999999927, 0.00011313900000000168, 0.00011362499999999914, 0.00011365199999999881, 0.00011330499999999757, 0.00011316700000000082, 0.00011313900000000168, 0.00011297200000000285, 0.00011297199999999938, 0.00011379200000000145, 0.00011361200000000252, 0.00011363900000000218, 0.00011299999999999852, 0.00011363899999999871, 0.00011313900000000168, 0.0001135420000000012, 0.00011347199999999988, 0.00011347199999999988, 0.00011313899999999821, 0.00011330600000000052, 0.00011359799999999948, 0.00011331900000000061, 0.00011386099999999982, 0.00011327799999999791, 0.00011369499999999699, 0.00011363899999999871, 0.00011329199999999748, 0.00011295899999999928, 0.00011295899999999928, 0.00011297299999999885, 0.00011330500000000104, 0.00011329100000000147, 0.00011379200000000145, 0.00011324999999999877, 0.00011330599999999705, 0.00011330600000000052, 0.00011327800000000138, 0.00011313900000000168, 0.00011380499999999807, 0.00011312500000000211, 0.00011348599999999945, 0.00011379199999999798, 0.00011365299999999828, 0.00011319400000000049, 0.00011347199999999988, 0.00011327799999999791, 0.00011320800000000006, 0.00011297199999999938, 0.00011363899999999871, 0.00011315300000000125]</msg>
<status status="PASS" starttime="20201029 12:44:59.885" endtime="20201029 12:44:59.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.880" endtime="20201029 12:44:59.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:59.892" endtime="20201029 12:44:59.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.891" endtime="20201029 12:44:59.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.890" endtime="20201029 12:44:59.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.529" endtime="20201029 12:44:59.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.529" endtime="20201029 12:44:59.913"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.921" endtime="20201029 12:44:59.942"></status>
</kw>
<msg timestamp="20201029 12:44:59.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.920" endtime="20201029 12:44:59.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.944" endtime="20201029 12:44:59.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.946" endtime="20201029 12:44:59.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.917" endtime="20201029 12:44:59.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.915" endtime="20201029 12:44:59.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.955" endtime="20201029 12:45:00.240"></status>
</kw>
<msg timestamp="20201029 12:45:00.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022161667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.954" endtime="20201029 12:45:00.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022161667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:00.244" endtime="20201029 12:45:00.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.252" endtime="20201029 12:45:00.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.951" endtime="20201029 12:45:00.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.949" endtime="20201029 12:45:00.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:00.259" level="INFO">${RESULT} = [{'diff': 0.0001147230000000006}, {'diff': 0.00011465199999999981}, {'diff': 0.00011484700000000125}, {'diff': 0.00011479100000000297}, {'diff': 0.00011431900000000161}, {'diff': 0.0001143610000000003...</msg>
<status status="PASS" starttime="20201029 12:45:00.255" endtime="20201029 12:45:00.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:00.263" level="INFO">${ACCURACY} = {'diff': [0.0001147230000000006, 0.00011465199999999981, 0.00011484700000000125, 0.00011479100000000297, 0.00011431900000000161, 0.00011436100000000032, 0.00011477799999999941, 0.00011445900000000078,...</msg>
<status status="PASS" starttime="20201029 12:45:00.260" endtime="20201029 12:45:00.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.268" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 12:45:00.267" endtime="20201029 12:45:00.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.270" level="INFO">VALUE: [0.0001147230000000006, 0.00011465199999999981, 0.00011484700000000125, 0.00011479100000000297, 0.00011431900000000161, 0.00011436100000000032, 0.00011477799999999941, 0.00011445900000000078, 0.00011447200000000088, 0.00011462500000000014, 0.00011452800000000263, 0.00011394400000000124, 0.00011461100000000057, 0.00011430499999999857, 0.00011480600000000202, 0.00011391700000000157, 0.00011448699999999992, 0.00011398699999999942, 0.00011447300000000035, 0.00011430499999999857, 0.00011480500000000254, 0.00011465299999999928, 0.00011480499999999907, 0.00011465299999999928, 0.00011443100000000164, 0.00011426399999999934, 0.00011398699999999942, 0.00011463900000000318, 0.00011450000000000002, 0.00011416699999999835, 0.00011397200000000038, 0.00011411100000000007, 0.00011395800000000081, 0.00011463900000000318, 0.00011426400000000281, 0.00011465299999999928, 0.00011463899999999971, 0.00011463800000000024, 0.00011397200000000038, 0.00011447200000000088, 0.00011479199999999898, 0.00011407000000000084, 0.00011411100000000007, 0.00011447299999999688, 0.00011465199999999981, 0.0001140970000000005, 0.00011443000000000217, 0.00011399999999999952, 0.00011412499999999964, 0.00011398599999999995]</msg>
<status status="PASS" starttime="20201029 12:45:00.269" endtime="20201029 12:45:00.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.264" endtime="20201029 12:45:00.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:00.275" endtime="20201029 12:45:00.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.274" endtime="20201029 12:45:00.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.273" endtime="20201029 12:45:00.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.914" endtime="20201029 12:45:00.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.913" endtime="20201029 12:45:00.296"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.305" endtime="20201029 12:45:00.325"></status>
</kw>
<msg timestamp="20201029 12:45:00.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:00.303" endtime="20201029 12:45:00.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:00.327" endtime="20201029 12:45:00.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.329" endtime="20201029 12:45:00.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.300" endtime="20201029 12:45:00.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.298" endtime="20201029 12:45:00.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.338" endtime="20201029 12:45:00.627"></status>
</kw>
<msg timestamp="20201029 12:45:00.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022019972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:00.337" endtime="20201029 12:45:00.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022019972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:00.631" endtime="20201029 12:45:00.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.639" endtime="20201029 12:45:00.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.334" endtime="20201029 12:45:00.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.332" endtime="20201029 12:45:00.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:00.646" level="INFO">${RESULT} = [{'diff': 0.0001152360000000012}, {'diff': 0.00011494399999999877}, {'diff': 0.00011494399999999877}, {'diff': 0.00011515300000000325}, {'diff': 0.00011497200000000138}, {'diff': 0.0001149730000000008...</msg>
<status status="PASS" starttime="20201029 12:45:00.643" endtime="20201029 12:45:00.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:00.650" level="INFO">${ACCURACY} = {'diff': [0.0001152360000000012, 0.00011494399999999877, 0.00011494399999999877, 0.00011515300000000325, 0.00011497200000000138, 0.00011497300000000085, 0.00011545900000000178, 0.00011515200000000031,...</msg>
<status status="PASS" starttime="20201029 12:45:00.647" endtime="20201029 12:45:00.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.654" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 12:45:00.653" endtime="20201029 12:45:00.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.656" level="INFO">VALUE: [0.0001152360000000012, 0.00011494399999999877, 0.00011494399999999877, 0.00011515300000000325, 0.00011497200000000138, 0.00011497300000000085, 0.00011545900000000178, 0.00011515200000000031, 0.00011501400000000009, 0.00011554199999999973, 0.00011512500000000064, 0.00011545799999999884, 0.00011547199999999841, 0.00011580599999999955, 0.00011519399999999902, 0.00011498599999999748, 0.00011533300000000218, 0.00011580500000000007, 0.00011565300000000028, 0.00011563900000000071, 0.00011525000000000077, 0.0001155559999999993, 0.00011513900000000021, 0.00011548700000000092, 0.00011563899999999724, 0.00011547200000000188, 0.00011531899999999914, 0.0001157910000000005, 0.00011577800000000041, 0.00011562499999999767, 0.00011495799999999834, 0.00011562500000000114, 0.00011563900000000071, 0.00011580500000000007, 0.00011512500000000064, 0.00011533300000000218, 0.00011581999999999912, 0.0001150970000000015, 0.00011547199999999841, 0.00011515199999999684, 0.00011570800000000256, 0.00011530600000000252, 0.00011531899999999914, 0.00011583299999999921, 0.00011561100000000157, 0.00011513900000000021, 0.00011515299999999978, 0.00011580599999999955, 0.00011515299999999978, 0.00011562499999999767]</msg>
<status status="PASS" starttime="20201029 12:45:00.655" endtime="20201029 12:45:00.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.650" endtime="20201029 12:45:00.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:00.661" endtime="20201029 12:45:00.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.660" endtime="20201029 12:45:00.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.659" endtime="20201029 12:45:00.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.297" endtime="20201029 12:45:00.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.296" endtime="20201029 12:45:00.682"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.691" endtime="20201029 12:45:00.711"></status>
</kw>
<msg timestamp="20201029 12:45:00.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:00.689" endtime="20201029 12:45:00.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:00.713" endtime="20201029 12:45:00.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.715" endtime="20201029 12:45:00.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.687" endtime="20201029 12:45:00.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.685" endtime="20201029 12:45:00.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.724" endtime="20201029 12:45:01.010"></status>
</kw>
<msg timestamp="20201029 12:45:01.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022881347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022998097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:00.723" endtime="20201029 12:45:01.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022881347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022998097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.014" endtime="20201029 12:45:01.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.022" endtime="20201029 12:45:01.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.720" endtime="20201029 12:45:01.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.719" endtime="20201029 12:45:01.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:01.029" level="INFO">${RESULT} = [{'diff': 0.0001167499999999988}, {'diff': 0.00011615300000000078}, {'diff': 0.00011647199999999941}, {'diff': 0.00011662500000000214}, {'diff': 0.00011597199999999891}, {'diff': 0.0001164719999999994...</msg>
<status status="PASS" starttime="20201029 12:45:01.026" endtime="20201029 12:45:01.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:01.033" level="INFO">${ACCURACY} = {'diff': [0.0001167499999999988, 0.00011615300000000078, 0.00011647199999999941, 0.00011662500000000214, 0.00011597199999999891, 0.00011647199999999941, 0.00011613900000000121, 0.00011662499999999867,...</msg>
<status status="PASS" starttime="20201029 12:45:01.030" endtime="20201029 12:45:01.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.038" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 12:45:01.037" endtime="20201029 12:45:01.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.040" level="INFO">VALUE: [0.0001167499999999988, 0.00011615300000000078, 0.00011647199999999941, 0.00011662500000000214, 0.00011597199999999891, 0.00011647199999999941, 0.00011613900000000121, 0.00011662499999999867, 0.00011597200000000238, 0.00011677699999999847, 0.00011627800000000091, 0.00011612500000000164, 0.00011683399999999969, 0.00011630600000000005, 0.00011630600000000005, 0.00011647299999999888, 0.00011595799999999934, 0.0001168049999999976, 0.00011613899999999774, 0.00011630500000000057, 0.00011648599999999898, 0.00011647199999999941, 0.00011648599999999898, 0.00011615300000000078, 0.00011663799999999877, 0.00011680500000000107, 0.00011681899999999718, 0.00011630500000000057, 0.00011629200000000048, 0.00011630600000000005, 0.00011647199999999941, 0.00011677800000000141, 0.00011595899999999881, 0.00011663799999999877, 0.00011650000000000202, 0.00011662499999999867, 0.00011613900000000121, 0.00011630600000000005, 0.00011681999999999665, 0.00011677799999999794, 0.00011680600000000055, 0.00011630600000000005, 0.00011629099999999754, 0.0001166109999999991, 0.00011662500000000214, 0.00011648599999999898, 0.00011597199999999891, 0.00011613900000000121, 0.00011647300000000235, 0.00011647299999999888]</msg>
<status status="PASS" starttime="20201029 12:45:01.039" endtime="20201029 12:45:01.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.034" endtime="20201029 12:45:01.042"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:01.046" endtime="20201029 12:45:01.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.044" endtime="20201029 12:45:01.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.043" endtime="20201029 12:45:01.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.683" endtime="20201029 12:45:01.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.682" endtime="20201029 12:45:01.067"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.078" endtime="20201029 12:45:01.099"></status>
</kw>
<msg timestamp="20201029 12:45:01.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.074" endtime="20201029 12:45:01.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.101" endtime="20201029 12:45:01.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.104" endtime="20201029 12:45:01.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.071" endtime="20201029 12:45:01.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.069" endtime="20201029 12:45:01.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.113" endtime="20201029 12:45:01.397"></status>
</kw>
<msg timestamp="20201029 12:45:01.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025578819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025696208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.111" endtime="20201029 12:45:01.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025578819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025696208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.402" endtime="20201029 12:45:01.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.410" endtime="20201029 12:45:01.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.108" endtime="20201029 12:45:01.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.107" endtime="20201029 12:45:01.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:01.417" level="INFO">${RESULT} = [{'diff': 0.00011738900000000246}, {'diff': 0.0001176110000000001}, {'diff': 0.00011712499999999917}, {'diff': 0.00011712500000000264}, {'diff': 0.00011763899999999924}, {'diff': 0.0001172919999999980...</msg>
<status status="PASS" starttime="20201029 12:45:01.414" endtime="20201029 12:45:01.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:01.422" level="INFO">${ACCURACY} = {'diff': [0.00011738900000000246, 0.0001176110000000001, 0.00011712499999999917, 0.00011712500000000264, 0.00011763899999999924, 0.00011729199999999801, 0.00011695899999999981, 0.00011731900000000114,...</msg>
<status status="PASS" starttime="20201029 12:45:01.418" endtime="20201029 12:45:01.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.427" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 12:45:01.426" endtime="20201029 12:45:01.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.429" level="INFO">VALUE: [0.00011738900000000246, 0.0001176110000000001, 0.00011712499999999917, 0.00011712500000000264, 0.00011763899999999924, 0.00011729199999999801, 0.00011695899999999981, 0.00011731900000000114, 0.0001173049999999981, 0.0001178049999999986, 0.00011697199999999991, 0.00011715299999999831, 0.00011698600000000295, 0.00011762499999999967, 0.00011700000000000252, 0.00011747299999999988, 0.00011698599999999948, 0.00011767999999999848, 0.00011695800000000034, 0.00011697199999999991, 0.00011695800000000034, 0.00011762499999999967, 0.00011765299999999881, 0.00011698600000000295, 0.00011695899999999981, 0.00011745800000000084, 0.0001169300000000012, 0.00011744400000000127, 0.00011768100000000142, 0.00011732000000000062, 0.00011782000000000112, 0.0001177499999999998, 0.00011713899999999874, 0.00011780599999999808, 0.00011695800000000034, 0.000117291000000002, 0.00011748599999999998, 0.00011763899999999924, 0.00011762499999999967, 0.00011730600000000105, 0.00011747299999999988, 0.00011780500000000207, 0.00011695899999999981, 0.00011697199999999991, 0.00011776399999999937, 0.0001178049999999986, 0.00011747200000000041, 0.00011730600000000452, 0.0001170970000000035, 0.00011730599999999758]</msg>
<status status="PASS" starttime="20201029 12:45:01.428" endtime="20201029 12:45:01.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.423" endtime="20201029 12:45:01.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:01.434" endtime="20201029 12:45:01.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.432" endtime="20201029 12:45:01.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.431" endtime="20201029 12:45:01.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.067" endtime="20201029 12:45:01.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.067" endtime="20201029 12:45:01.455"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.463" endtime="20201029 12:45:01.483"></status>
</kw>
<msg timestamp="20201029 12:45:01.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.462" endtime="20201029 12:45:01.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.485" endtime="20201029 12:45:01.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.487" endtime="20201029 12:45:01.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.459" endtime="20201029 12:45:01.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.457" endtime="20201029 12:45:01.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.496" endtime="20201029 12:45:01.794"></status>
</kw>
<msg timestamp="20201029 12:45:01.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022247903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.495" endtime="20201029 12:45:01.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022247903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.804" endtime="20201029 12:45:01.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.824" endtime="20201029 12:45:01.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.492" endtime="20201029 12:45:01.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.490" endtime="20201029 12:45:01.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:01.838" level="INFO">${RESULT} = [{'diff': 0.00011869499999999852}, {'diff': 0.00011863900000000024}, {'diff': 0.0001178889999999995}, {'diff': 0.00011795899999999734}, {'diff': 0.00011879100000000004}, {'diff': 0.0001183050000000025...</msg>
<status status="PASS" starttime="20201029 12:45:01.831" endtime="20201029 12:45:01.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:01.848" level="INFO">${ACCURACY} = {'diff': [0.00011869499999999852, 0.00011863900000000024, 0.0001178889999999995, 0.00011795899999999734, 0.00011879100000000004, 0.00011830500000000257, 0.0001186249999999972, 0.00011830599999999858, ...</msg>
<status status="PASS" starttime="20201029 12:45:01.840" endtime="20201029 12:45:01.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.856" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 12:45:01.855" endtime="20201029 12:45:01.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.858" level="INFO">VALUE: [0.00011869499999999852, 0.00011863900000000024, 0.0001178889999999995, 0.00011795899999999734, 0.00011879100000000004, 0.00011830500000000257, 0.0001186249999999972, 0.00011830599999999858, 0.00011830600000000205, 0.00011798600000000048, 0.00011863900000000024, 0.00011834699999999782, 0.00011847199999999794, 0.00011797200000000091, 0.00011852799999999969, 0.00011795800000000134, 0.00011847200000000141, 0.00011869400000000252, 0.00011863900000000024, 0.00011862500000000067, 0.00011833299999999825, 0.00011863800000000077, 0.00011848600000000098, 0.00011829099999999954, 0.00011865299999999981, 0.00011830600000000205, 0.00011813899999999974, 0.00011863900000000024, 0.00011876299999999743, 0.00011813800000000027, 0.00011831900000000214, 0.00011795800000000134, 0.00011798599999999701, 0.00011847200000000141, 0.00011845799999999837, 0.00011880599999999908, 0.00011847300000000088, 0.00011858399999999797, 0.00011797199999999744, 0.00011847199999999794, 0.00011850000000000055, 0.00011847200000000141, 0.00011795799999999787, 0.00011863900000000024, 0.00011879199999999951, 0.00011826399999999987, 0.00011804199999999876, 0.00011836100000000085, 0.00011829099999999954, 0.0001188049999999996]</msg>
<status status="PASS" starttime="20201029 12:45:01.857" endtime="20201029 12:45:01.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.849" endtime="20201029 12:45:01.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:01.864" endtime="20201029 12:45:01.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.862" endtime="20201029 12:45:01.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.861" endtime="20201029 12:45:01.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.456" endtime="20201029 12:45:01.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.455" endtime="20201029 12:45:01.884"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.894" endtime="20201029 12:45:01.916"></status>
</kw>
<msg timestamp="20201029 12:45:01.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.892" endtime="20201029 12:45:01.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.918" endtime="20201029 12:45:01.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.920" endtime="20201029 12:45:01.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.889" endtime="20201029 12:45:01.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.887" endtime="20201029 12:45:01.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.930" endtime="20201029 12:45:02.216"></status>
</kw>
<msg timestamp="20201029 12:45:02.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023701667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023821236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.928" endtime="20201029 12:45:02.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023701667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023821236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:02.221" endtime="20201029 12:45:02.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.229" endtime="20201029 12:45:02.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.926" endtime="20201029 12:45:02.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.924" endtime="20201029 12:45:02.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:02.236" level="INFO">${RESULT} = [{'diff': 0.00011956899999999993}, {'diff': 0.00011973599999999876}, {'diff': 0.00011911099999999814}, {'diff': 0.00011897299999999791}, {'diff': 0.00011930599999999958}, {'diff': 0.000119082999999999...</msg>
<status status="PASS" starttime="20201029 12:45:02.233" endtime="20201029 12:45:02.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:02.240" level="INFO">${ACCURACY} = {'diff': [0.00011956899999999993, 0.00011973599999999876, 0.00011911099999999814, 0.00011897299999999791, 0.00011930599999999958, 0.000119082999999999, 0.00011948599999999851, 0.00011947199999999894, ...</msg>
<status status="PASS" starttime="20201029 12:45:02.237" endtime="20201029 12:45:02.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.245" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 12:45:02.244" endtime="20201029 12:45:02.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.247" level="INFO">VALUE: [0.00011956899999999993, 0.00011973599999999876, 0.00011911099999999814, 0.00011897299999999791, 0.00011930599999999958, 0.000119082999999999, 0.00011948599999999851, 0.00011947199999999894, 0.00011966700000000038, 0.00011979200000000051, 0.00011947199999999894, 0.00011929200000000001, 0.00011913900000000074, 0.00011913900000000074, 0.00011913900000000074, 0.0001191249999999977, 0.0001194439999999998, 0.0001196249999999982, 0.00011979200000000051, 0.00011961099999999864, 0.00011913900000000074, 0.00011965200000000134, 0.00011966600000000091, 0.00011961099999999864, 0.00011948599999999851, 0.00011913899999999727, 0.00011980600000000008, 0.00011930599999999958, 0.00011913900000000074, 0.00011965300000000081, 0.00011959699999999907, 0.0001198050000000006, 0.00011913899999999727, 0.00011891699999999963, 0.00011986199999999836, 0.00011945800000000284, 0.00011897200000000191, 0.00011898700000000095, 0.00011897299999999791, 0.00011941600000000066, 0.0001198050000000006, 0.00011913900000000074, 0.0001194439999999998, 0.00011915300000000031, 0.00011963900000000124, 0.0001191249999999977, 0.00011941600000000066, 0.0001196379999999983, 0.00011963900000000124, 0.00011945799999999937]</msg>
<status status="PASS" starttime="20201029 12:45:02.246" endtime="20201029 12:45:02.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.241" endtime="20201029 12:45:02.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:02.254" endtime="20201029 12:45:02.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.252" endtime="20201029 12:45:02.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.251" endtime="20201029 12:45:02.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.885" endtime="20201029 12:45:02.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.885" endtime="20201029 12:45:02.274"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.283" endtime="20201029 12:45:02.304"></status>
</kw>
<msg timestamp="20201029 12:45:02.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.282" endtime="20201029 12:45:02.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.305" endtime="20201029 12:45:02.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.308" endtime="20201029 12:45:02.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.279" endtime="20201029 12:45:02.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.277" endtime="20201029 12:45:02.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.317" endtime="20201029 12:45:02.612"></status>
</kw>
<msg timestamp="20201029 12:45:02.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022645236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02276575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:02.316" endtime="20201029 12:45:02.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022645236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02276575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:02.621" endtime="20201029 12:45:02.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.639" endtime="20201029 12:45:02.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.313" endtime="20201029 12:45:02.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.311" endtime="20201029 12:45:02.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:02.653" level="INFO">${RESULT} = [{'diff': 0.00012051400000000212}, {'diff': 0.00012015299999999784}, {'diff': 0.00012063900000000224}, {'diff': 0.00012030600000000058}, {'diff': 0.00012079200000000151}, {'diff': 0.000120777000000002...</msg>
<status status="PASS" starttime="20201029 12:45:02.646" endtime="20201029 12:45:02.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:02.663" level="INFO">${ACCURACY} = {'diff': [0.00012051400000000212, 0.00012015299999999784, 0.00012063900000000224, 0.00012030600000000058, 0.00012079200000000151, 0.00012077700000000247, 0.00012048599999999951, 0.00012015300000000131...</msg>
<status status="PASS" starttime="20201029 12:45:02.655" endtime="20201029 12:45:02.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.668" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 12:45:02.667" endtime="20201029 12:45:02.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.670" level="INFO">VALUE: [0.00012051400000000212, 0.00012015299999999784, 0.00012063900000000224, 0.00012030600000000058, 0.00012079200000000151, 0.00012077700000000247, 0.00012048599999999951, 0.00012015300000000131, 0.00012045800000000037, 0.00012084799999999979, 0.00012013900000000174, 0.00012030600000000058, 0.00012004200000000076, 0.00012030499999999764, 0.00012004200000000076, 0.00012081900000000118, 0.00011997200000000291, 0.00012031900000000068, 0.00012029200000000101, 0.00012030600000000058, 0.00012079200000000151, 0.00012047199999999994, 0.00012031900000000068, 0.0001203050000000011, 0.00011997199999999944, 0.00012013899999999827, 0.00011995799999999987, 0.00012045800000000037, 0.00012079200000000151, 0.00012047299999999941, 0.0001206379999999993, 0.0001207500000000028, 0.00012080499999999814, 0.00012063899999999877, 0.00012080599999999761, 0.00012062500000000267, 0.00011995899999999934, 0.00011997299999999891, 0.00012065199999999887, 0.00012009700000000303, 0.00012012500000000217, 0.0001208050000000016, 0.00012045800000000037, 0.00011995799999999987, 0.00012013899999999827, 0.00012012500000000217, 0.00012030600000000058, 0.00012024999999999883, 0.0001206249999999992, 0.0001208189999999977]</msg>
<status status="PASS" starttime="20201029 12:45:02.669" endtime="20201029 12:45:02.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.664" endtime="20201029 12:45:02.672"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:02.676" endtime="20201029 12:45:02.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.674" endtime="20201029 12:45:02.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.673" endtime="20201029 12:45:02.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.275" endtime="20201029 12:45:02.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.275" endtime="20201029 12:45:02.696"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.705" endtime="20201029 12:45:02.725"></status>
</kw>
<msg timestamp="20201029 12:45:02.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.703" endtime="20201029 12:45:02.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.727" endtime="20201029 12:45:02.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.730" endtime="20201029 12:45:02.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.701" endtime="20201029 12:45:02.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.699" endtime="20201029 12:45:02.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.739" endtime="20201029 12:45:03.025"></status>
</kw>
<msg timestamp="20201029 12:45:03.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022294653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:02.737" endtime="20201029 12:45:03.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022294653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:03.029" endtime="20201029 12:45:03.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.037" endtime="20201029 12:45:03.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.734" endtime="20201029 12:45:03.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.733" endtime="20201029 12:45:03.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:03.043" level="INFO">${RESULT} = [{'diff': 0.00012172200000000119}, {'diff': 0.00012145900000000084}, {'diff': 0.00012147300000000041}, {'diff': 0.00012163900000000324}, {'diff': 0.0001211379999999998}, {'diff': 0.0001218049999999991...</msg>
<status status="PASS" starttime="20201029 12:45:03.040" endtime="20201029 12:45:03.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:03.047" level="INFO">${ACCURACY} = {'diff': [0.00012172200000000119, 0.00012145900000000084, 0.00012147300000000041, 0.00012163900000000324, 0.0001211379999999998, 0.00012180499999999914, 0.00012163899999999978, 0.00012163899999999978,...</msg>
<status status="PASS" starttime="20201029 12:45:03.044" endtime="20201029 12:45:03.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.052" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 12:45:03.051" endtime="20201029 12:45:03.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.054" level="INFO">VALUE: [0.00012172200000000119, 0.00012145900000000084, 0.00012147300000000041, 0.00012163900000000324, 0.0001211379999999998, 0.00012180499999999914, 0.00012163899999999978, 0.00012163899999999978, 0.00012165299999999934, 0.00012165299999999934, 0.00012166599999999944, 0.00012099999999999958, 0.00012129099999999907, 0.0001216250000000002, 0.00012111100000000014, 0.0001217639999999999, 0.00012180599999999861, 0.00012113899999999928, 0.0001215700000000014, 0.0001218189999999987, 0.00012148600000000051, 0.00012113900000000274, 0.00012130499999999864, 0.00012129199999999854, 0.00012175000000000033, 0.00012180600000000208, 0.00012138899999999953, 0.00012113899999999928, 0.00012147300000000041, 0.00012148600000000051, 0.00012097199999999697, 0.00012095800000000087, 0.00012129199999999854, 0.00012147199999999747, 0.00012165299999999934, 0.00012136100000000039, 0.0001218050000000026, 0.00012145800000000137, 0.00012097200000000044, 0.00012147200000000094, 0.00012097200000000044, 0.00012151399999999965, 0.0001216250000000002, 0.00012180599999999861, 0.00012165199999999987, 0.00012183300000000175, 0.00012163899999999978, 0.0001211249999999997, 0.00012166699999999891, 0.0001209310000000012]</msg>
<status status="PASS" starttime="20201029 12:45:03.053" endtime="20201029 12:45:03.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.048" endtime="20201029 12:45:03.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:03.059" endtime="20201029 12:45:03.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.058" endtime="20201029 12:45:03.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.057" endtime="20201029 12:45:03.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.697" endtime="20201029 12:45:03.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.697" endtime="20201029 12:45:03.080"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.088" endtime="20201029 12:45:03.111"></status>
</kw>
<msg timestamp="20201029 12:45:03.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.087" endtime="20201029 12:45:03.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.112" endtime="20201029 12:45:03.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.115" endtime="20201029 12:45:03.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.084" endtime="20201029 12:45:03.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.082" endtime="20201029 12:45:03.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.124" endtime="20201029 12:45:03.422"></status>
</kw>
<msg timestamp="20201029 12:45:03.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022942556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023065306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:03.122" endtime="20201029 12:45:03.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022942556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023065306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:03.434" endtime="20201029 12:45:03.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.452" endtime="20201029 12:45:03.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.120" endtime="20201029 12:45:03.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.118" endtime="20201029 12:45:03.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:03.467" level="INFO">${RESULT} = [{'diff': 0.00012275000000000133}, {'diff': 0.0001221250000000007}, {'diff': 0.00012247199999999847}, {'diff': 0.0001219579999999984}, {'diff': 0.00012197199999999797}, {'diff': 0.0001221250000000007}...</msg>
<status status="PASS" starttime="20201029 12:45:03.460" endtime="20201029 12:45:03.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:03.475" level="INFO">${ACCURACY} = {'diff': [0.00012275000000000133, 0.0001221250000000007, 0.00012247199999999847, 0.0001219579999999984, 0.00012197199999999797, 0.0001221250000000007, 0.0001223059999999991, 0.00012263900000000078, 0....</msg>
<status status="PASS" starttime="20201029 12:45:03.469" endtime="20201029 12:45:03.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.479" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 12:45:03.478" endtime="20201029 12:45:03.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.483" level="INFO">VALUE: [0.00012275000000000133, 0.0001221250000000007, 0.00012247199999999847, 0.0001219579999999984, 0.00012197199999999797, 0.0001221250000000007, 0.0001223059999999991, 0.00012263900000000078, 0.00012244500000000227, 0.00012195900000000134, 0.00012256900000000293, 0.0001224860000000015, 0.00012194399999999883, 0.00012236099999999792, 0.0001221250000000007, 0.00012265300000000035, 0.00012263900000000078, 0.0001223189999999992, 0.00012213900000000028, 0.00012265200000000087, 0.0001226389999999973, 0.00012213900000000028, 0.00012247200000000194, 0.00012232000000000215, 0.0001228059999999996, 0.00012197300000000091, 0.00012195899999999787, 0.00012263799999999783, 0.00012283299999999928, 0.0001223189999999992, 0.00012212499999999724, 0.0001228059999999996, 0.0001228059999999996, 0.00012197299999999744, 0.00012284700000000232, 0.0001228189999999997, 0.00012261099999999817, 0.0001228189999999997, 0.0001223050000000031, 0.0001224579999999989, 0.00012230600000000258, 0.00012269399999999958, 0.00012270799999999915, 0.0001223189999999992, 0.0001226250000000012, 0.00012263900000000078, 0.00012197199999999797, 0.0001221250000000007, 0.00012279200000000004, 0.0001228059999999996]</msg>
<status status="PASS" starttime="20201029 12:45:03.480" endtime="20201029 12:45:03.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.476" endtime="20201029 12:45:03.484"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:03.488" endtime="20201029 12:45:03.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.486" endtime="20201029 12:45:03.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.485" endtime="20201029 12:45:03.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.081" endtime="20201029 12:45:03.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.080" endtime="20201029 12:45:03.508"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.517" endtime="20201029 12:45:03.538"></status>
</kw>
<msg timestamp="20201029 12:45:03.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.515" endtime="20201029 12:45:03.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.539" endtime="20201029 12:45:03.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.542" endtime="20201029 12:45:03.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.513" endtime="20201029 12:45:03.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.511" endtime="20201029 12:45:03.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.552" endtime="20201029 12:45:03.837"></status>
</kw>
<msg timestamp="20201029 12:45:03.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022255472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:03.551" endtime="20201029 12:45:03.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022255472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:03.841" endtime="20201029 12:45:03.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.849" endtime="20201029 12:45:03.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.547" endtime="20201029 12:45:03.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.545" endtime="20201029 12:45:03.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:03.856" level="INFO">${RESULT} = [{'diff': 0.00012374999999999886}, {'diff': 0.0001236389999999983}, {'diff': 0.00012316700000000042}, {'diff': 0.0001236389999999983}, {'diff': 0.00012345899999999937}, {'diff': 0.00012356999999999993...</msg>
<status status="PASS" starttime="20201029 12:45:03.853" endtime="20201029 12:45:03.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:03.861" level="INFO">${ACCURACY} = {'diff': [0.00012374999999999886, 0.0001236389999999983, 0.00012316700000000042, 0.0001236389999999983, 0.00012345899999999937, 0.00012356999999999993, 0.00012365200000000187, 0.00012384699999999985, ...</msg>
<status status="PASS" starttime="20201029 12:45:03.857" endtime="20201029 12:45:03.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.865" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 12:45:03.864" endtime="20201029 12:45:03.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.868" level="INFO">VALUE: [0.00012374999999999886, 0.0001236389999999983, 0.00012316700000000042, 0.0001236389999999983, 0.00012345899999999937, 0.00012356999999999993, 0.00012365200000000187, 0.00012384699999999985, 0.0001232779999999975, 0.0001229579999999994, 0.00012379199999999757, 0.00012382000000000018, 0.00012312499999999824, 0.0001233060000000001, 0.00012298599999999854, 0.0001238190000000007, 0.00012312499999999824, 0.00012347199999999947, 0.00012302800000000072, 0.00012379200000000104, 0.00012347300000000241, 0.00012347200000000294, 0.00012365200000000187, 0.0001231250000000017, 0.00012312499999999824, 0.00012298599999999854, 0.00012365299999999788, 0.00012294399999999983, 0.00012347299999999894, 0.0001238060000000006, 0.00012366600000000144, 0.00012340200000000162, 0.00012365300000000135, 0.0001231389999999978, 0.00012361099999999917, 0.00012330599999999664, 0.0001238060000000006, 0.00012298699999999801, 0.0001233060000000001, 0.00012361100000000264, 0.00012361099999999917, 0.00012313900000000128, 0.00012348599999999904, 0.00012348599999999904, 0.00012380599999999714, 0.00012329199999999707, 0.0001231389999999978, 0.00012384699999999985, 0.00012347199999999947, 0.00012362499999999874]</msg>
<status status="PASS" starttime="20201029 12:45:03.867" endtime="20201029 12:45:03.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.862" endtime="20201029 12:45:03.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:03.873" endtime="20201029 12:45:03.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.871" endtime="20201029 12:45:03.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.870" endtime="20201029 12:45:03.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.509" endtime="20201029 12:45:03.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.509" endtime="20201029 12:45:03.894"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.902" endtime="20201029 12:45:03.924"></status>
</kw>
<msg timestamp="20201029 12:45:03.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.901" endtime="20201029 12:45:03.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.925" endtime="20201029 12:45:03.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.928" endtime="20201029 12:45:03.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.898" endtime="20201029 12:45:03.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.896" endtime="20201029 12:45:03.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.937" endtime="20201029 12:45:04.226"></status>
</kw>
<msg timestamp="20201029 12:45:04.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022502528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022627278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:03.935" endtime="20201029 12:45:04.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022502528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022627278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:04.230" endtime="20201029 12:45:04.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.238" endtime="20201029 12:45:04.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.933" endtime="20201029 12:45:04.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.931" endtime="20201029 12:45:04.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:04.244" level="INFO">${RESULT} = [{'diff': 0.00012474999999999986}, {'diff': 0.0001248060000000016}, {'diff': 0.00012432000000000068}, {'diff': 0.00012447200000000047}, {'diff': 0.00012397199999999997}, {'diff': 0.0001244720000000004...</msg>
<status status="PASS" starttime="20201029 12:45:04.241" endtime="20201029 12:45:04.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:04.249" level="INFO">${ACCURACY} = {'diff': [0.00012474999999999986, 0.0001248060000000016, 0.00012432000000000068, 0.00012447200000000047, 0.00012397199999999997, 0.00012447200000000047, 0.000124471999999997, 0.00012397199999999997, 0...</msg>
<status status="PASS" starttime="20201029 12:45:04.245" endtime="20201029 12:45:04.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.253" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 12:45:04.252" endtime="20201029 12:45:04.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.256" level="INFO">VALUE: [0.00012474999999999986, 0.0001248060000000016, 0.00012432000000000068, 0.00012447200000000047, 0.00012397199999999997, 0.00012447200000000047, 0.000124471999999997, 0.00012397199999999997, 0.0001248060000000016, 0.00012412499999999924, 0.0001248060000000016, 0.0001239999999999991, 0.00012477699999999953, 0.00012430500000000164, 0.00012462499999999974, 0.00012447200000000047, 0.00012415300000000185, 0.00012432000000000068, 0.00012397300000000291, 0.0001239580000000004, 0.00012415200000000237, 0.00012413900000000228, 0.00012480499999999867, 0.0001241389999999988, 0.0001239580000000004, 0.00012447299999999994, 0.0001243060000000011, 0.0001246519999999994, 0.0001246519999999994, 0.00012397199999999997, 0.00012430500000000164, 0.00012412499999999924, 0.00012487499999999999, 0.0001241389999999988, 0.00012445900000000037, 0.00012398599999999954, 0.0001241519999999989, 0.0001241389999999988, 0.00012447200000000047, 0.00012462499999999974, 0.0001239999999999991, 0.00012424999999999936, 0.0001241389999999988, 0.0001248060000000016, 0.0001243190000000012, 0.00012447200000000047, 0.00012465300000000235, 0.00012462499999999974, 0.00012465299999999888, 0.0001243060000000011]</msg>
<status status="PASS" starttime="20201029 12:45:04.255" endtime="20201029 12:45:04.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.249" endtime="20201029 12:45:04.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:04.261" endtime="20201029 12:45:04.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.259" endtime="20201029 12:45:04.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.258" endtime="20201029 12:45:04.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.894" endtime="20201029 12:45:04.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.894" endtime="20201029 12:45:04.281"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.290" endtime="20201029 12:45:04.311"></status>
</kw>
<msg timestamp="20201029 12:45:04.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.288" endtime="20201029 12:45:04.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.313" endtime="20201029 12:45:04.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.315" endtime="20201029 12:45:04.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.286" endtime="20201029 12:45:04.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.284" endtime="20201029 12:45:04.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.325" endtime="20201029 12:45:04.611"></status>
</kw>
<msg timestamp="20201029 12:45:04.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022838542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022963931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:04.323" endtime="20201029 12:45:04.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022838542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022963931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:04.616" endtime="20201029 12:45:04.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.624" endtime="20201029 12:45:04.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.320" endtime="20201029 12:45:04.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.319" endtime="20201029 12:45:04.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:04.630" level="INFO">${RESULT} = [{'diff': 0.00012538900000000006}, {'diff': 0.00012530500000000264}, {'diff': 0.0001252909999999996}, {'diff': 0.00012498600000000054}, {'diff': 0.00012583400000000175}, {'diff': 0.0001255409999999998...</msg>
<status status="PASS" starttime="20201029 12:45:04.627" endtime="20201029 12:45:04.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:04.634" level="INFO">${ACCURACY} = {'diff': [0.00012538900000000006, 0.00012530500000000264, 0.0001252909999999996, 0.00012498600000000054, 0.00012583400000000175, 0.00012554099999999985, 0.00012497300000000044, 0.0001251389999999998, ...</msg>
<status status="PASS" starttime="20201029 12:45:04.631" endtime="20201029 12:45:04.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.639" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 12:45:04.638" endtime="20201029 12:45:04.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.641" level="INFO">VALUE: [0.00012538900000000006, 0.00012530500000000264, 0.0001252909999999996, 0.00012498600000000054, 0.00012583400000000175, 0.00012554099999999985, 0.00012497300000000044, 0.0001251389999999998, 0.0001256390000000003, 0.0001256520000000004, 0.00012512499999999677, 0.00012515299999999938, 0.00012565299999999988, 0.0001256390000000003, 0.00012515299999999938, 0.00012532000000000168, 0.0001255979999999976, 0.00012530499999999917, 0.00012547200000000147, 0.00012565299999999988, 0.00012511100000000067, 0.0001254580000000019, 0.00012530599999999864, 0.0001251389999999998, 0.00012497300000000044, 0.0001258329999999988, 0.0001258190000000027, 0.00012530499999999917, 0.00012579199999999957, 0.00012516700000000242, 0.000125471999999998, 0.00012531899999999874, 0.00012545900000000137, 0.0001250000000000001, 0.0001256390000000003, 0.0001249719999999975, 0.00012497200000000097, 0.00012579199999999957, 0.0001251389999999998, 0.00012547300000000094, 0.00012497300000000044, 0.0001258190000000027, 0.00012515299999999938, 0.0001251389999999998, 0.00012513900000000328, 0.00012586099999999795, 0.00012513900000000328, 0.0001251389999999998, 0.0001258329999999988, 0.000125471999999998]</msg>
<status status="PASS" starttime="20201029 12:45:04.640" endtime="20201029 12:45:04.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.635" endtime="20201029 12:45:04.644"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:04.647" endtime="20201029 12:45:04.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.646" endtime="20201029 12:45:04.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.645" endtime="20201029 12:45:04.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.282" endtime="20201029 12:45:04.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.282" endtime="20201029 12:45:04.668"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.677" endtime="20201029 12:45:04.698"></status>
</kw>
<msg timestamp="20201029 12:45:04.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.675" endtime="20201029 12:45:04.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.700" endtime="20201029 12:45:04.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.703" endtime="20201029 12:45:04.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.673" endtime="20201029 12:45:04.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.670" endtime="20201029 12:45:04.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.712" endtime="20201029 12:45:05.015"></status>
</kw>
<msg timestamp="20201029 12:45:05.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022954403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:04.710" endtime="20201029 12:45:05.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022954403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:05.019" endtime="20201029 12:45:05.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.027" endtime="20201029 12:45:05.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.707" endtime="20201029 12:45:05.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.706" endtime="20201029 12:45:05.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:05.034" level="INFO">${RESULT} = [{'diff': 0.00012601400000000068}, {'diff': 0.00012629200000000007}, {'diff': 0.00012613899999999734}, {'diff': 0.0001262910000000006}, {'diff': 0.00012597200000000197}, {'diff': 0.0001259860000000015...</msg>
<status status="PASS" starttime="20201029 12:45:05.031" endtime="20201029 12:45:05.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:05.039" level="INFO">${ACCURACY} = {'diff': [0.00012601400000000068, 0.00012629200000000007, 0.00012613899999999734, 0.0001262910000000006, 0.00012597200000000197, 0.00012598600000000154, 0.00012597200000000197, 0.00012665300000000088,...</msg>
<status status="PASS" starttime="20201029 12:45:05.035" endtime="20201029 12:45:05.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.043" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 12:45:05.042" endtime="20201029 12:45:05.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.046" level="INFO">VALUE: [0.00012601400000000068, 0.00012629200000000007, 0.00012613899999999734, 0.0001262910000000006, 0.00012597200000000197, 0.00012598600000000154, 0.00012597200000000197, 0.00012665300000000088, 0.0001261390000000008, 0.0001264589999999989, 0.00012647300000000194, 0.0001264580000000029, 0.00012658299999999956, 0.00012630599999999964, 0.00012595799999999893, 0.0001261390000000008, 0.00012615300000000038, 0.00012644499999999934, 0.00012680500000000067, 0.0001267910000000011, 0.0001266390000000013, 0.00012640300000000063, 0.00012662500000000174, 0.00012630599999999964, 0.00012680600000000014, 0.00012595900000000188, 0.0001262780000000005, 0.00012637500000000149, 0.00012666700000000045, 0.00012612499999999777, 0.0001268199999999997, 0.0001266390000000013, 0.00012597200000000197, 0.00012615300000000038, 0.0001268329999999998, 0.0001267910000000011, 0.0001266390000000013, 0.00012623599999999832, 0.00012594400000000283, 0.0001268199999999997, 0.00012612500000000124, 0.0001266390000000013, 0.00012627700000000103, 0.00012627700000000103, 0.00012648599999999857, 0.00012597200000000197, 0.00012680600000000014, 0.00012598599999999807, 0.00012636100000000192, 0.0001261390000000008]</msg>
<status status="PASS" starttime="20201029 12:45:05.044" endtime="20201029 12:45:05.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.039" endtime="20201029 12:45:05.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:05.051" endtime="20201029 12:45:05.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.049" endtime="20201029 12:45:05.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.048" endtime="20201029 12:45:05.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.669" endtime="20201029 12:45:05.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.668" endtime="20201029 12:45:05.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.292" endtime="20201029 12:45:05.072"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:26.223" endtime="20201029 12:45:05.072" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:43:46.261" endtime="20201029 12:45:05.076"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.129" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:45:05.138" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:45:06.297" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:45:05.128" endtime="20201029 12:45:06.298"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.300" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:45:06.299" endtime="20201029 12:45:06.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.127" endtime="20201029 12:45:06.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:06.304" endtime="20201029 12:45:06.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.302" endtime="20201029 12:45:06.488"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.502" endtime="20201029 12:45:06.520"></status>
</kw>
<msg timestamp="20201029 12:45:06.521" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.500" endtime="20201029 12:45:06.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.527" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.524" endtime="20201029 12:45:06.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.534" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:06.529" endtime="20201029 12:45:06.534"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:06.497" endtime="20201029 12:45:06.536"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:06.495" endtime="20201029 12:45:06.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.494" endtime="20201029 12:45:06.537"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:06.545" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:06.544" endtime="20201029 12:45:06.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.539" endtime="20201029 12:45:06.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.493" endtime="20201029 12:45:06.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.492" endtime="20201029 12:45:06.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.549" endtime="20201029 12:45:06.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.491" endtime="20201029 12:45:06.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.555" endtime="20201029 12:45:06.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.489" endtime="20201029 12:45:06.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.125" endtime="20201029 12:45:06.560"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:06.572" endtime="20201029 12:45:06.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.569" endtime="20201029 12:45:06.595"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.618" endtime="20201029 12:45:06.633"></status>
</kw>
<msg timestamp="20201029 12:45:06.633" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.617" endtime="20201029 12:45:06.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.636" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.634" endtime="20201029 12:45:06.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.640" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:06.637" endtime="20201029 12:45:06.640"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:06.614" endtime="20201029 12:45:06.641"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:06.609" endtime="20201029 12:45:06.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.606" endtime="20201029 12:45:06.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:06.645" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:06.645" endtime="20201029 12:45:06.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.642" endtime="20201029 12:45:06.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.604" endtime="20201029 12:45:06.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.603" endtime="20201029 12:45:06.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.647" endtime="20201029 12:45:06.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.600" endtime="20201029 12:45:06.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.597" endtime="20201029 12:45:06.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.567" endtime="20201029 12:45:06.650"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.658" endtime="20201029 12:45:12.780"></status>
</kw>
<msg timestamp="20201029 12:45:12.781" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.657" endtime="20201029 12:45:12.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.787" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:12.784" endtime="20201029 12:45:12.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.789" endtime="20201029 12:45:12.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.654" endtime="20201029 12:45:12.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.652" endtime="20201029 12:45:12.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:12.800" level="INFO">${RESULT} = {'bg-timer-count': 0, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:45:12.796" endtime="20201029 12:45:12.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.809" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:12.807" endtime="20201029 12:45:12.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.814" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:12.812" endtime="20201029 12:45:12.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.802" endtime="20201029 12:45:12.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.821" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:12.820" endtime="20201029 12:45:12.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.823" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:12.822" endtime="20201029 12:45:12.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.817" endtime="20201029 12:45:12.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.828" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:12.827" endtime="20201029 12:45:12.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.830" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 12:45:12.829" endtime="20201029 12:45:12.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.824" endtime="20201029 12:45:12.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.837" endtime="20201029 12:45:13.139"></status>
</kw>
<msg timestamp="20201029 12:45:13.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075720208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.175756986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:12.835" endtime="20201029 12:45:13.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075720208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.175756986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:13.143" endtime="20201029 12:45:13.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.152" endtime="20201029 12:45:13.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.833" endtime="20201029 12:45:13.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.831" endtime="20201029 12:45:13.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:13.158" level="INFO">${FILTERED} = [{'diff': 0.100036778}, {'diff': 0.100011917}, {'diff': 0.10001091699999998}, {'diff': 0.10001094399999999}, {'diff': 0.10001094500000002}, {'diff': 0.10001093100000003}, {'diff': 0.10001095900000001}...</msg>
<status status="PASS" starttime="20201029 12:45:13.155" endtime="20201029 12:45:13.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:13.162" level="INFO">${RESULT} = {'diff': [0.100036778, 0.100011917, 0.10001091699999998, 0.10001094399999999, 0.10001094500000002, 0.10001093100000003, 0.10001095900000001, 0.10001095900000001, 0.10001094500000007, 0.100010916999999...</msg>
<status status="PASS" starttime="20201029 12:45:13.159" endtime="20201029 12:45:13.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.167" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:13.166" endtime="20201029 12:45:13.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.169" level="INFO">VALUE: [0.100036778, 0.100011917, 0.10001091699999998, 0.10001094399999999, 0.10001094500000002, 0.10001093100000003, 0.10001095900000001, 0.10001095900000001, 0.10001094500000007, 0.10001091699999998, 0.10001094499999996, 0.10001093100000014, 0.10001091700000009, 0.1000109440000001, 0.10001093000000005, 0.10001093000000005, 0.10001091599999978, 0.1000109440000001, 0.100010916, 0.10001088900000021, 0.10001093099999991, 0.10001095799999993, 0.10001087500000017, 0.10001087499999972, 0.10001088899999999, 0.10001088899999999, 0.10001087500000017, 0.10001088800000035, 0.1000109440000001, 0.1000108609999999, 0.10001088899999999, 0.10001092999999983, 0.10001088899999999, 0.10001091700000009, 0.10001087500000017, 0.10001092999999983, 0.10001087500000017, 0.10001091700000009, 0.10001090299999982, 0.10001090299999982, 0.10001087500000061, 0.10001091599999956, 0.10001091699999964, 0.10001088899999999, 0.10001090300000026, 0.10001091599999956, 0.10001087500000061, 0.10001091699999964, 0.10001091599999956, 0.10001087499999972, 0.10001090300000026]</msg>
<status status="PASS" starttime="20201029 12:45:13.168" endtime="20201029 12:45:13.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.163" endtime="20201029 12:45:13.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.650" endtime="20201029 12:45:13.171"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:06.561" endtime="20201029 12:45:13.172" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:13.178" endtime="20201029 12:45:13.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.177" endtime="20201029 12:45:13.198"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.212" endtime="20201029 12:45:13.225"></status>
</kw>
<msg timestamp="20201029 12:45:13.226" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:13.210" endtime="20201029 12:45:13.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.228" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:13.227" endtime="20201029 12:45:13.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.231" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:13.229" endtime="20201029 12:45:13.232"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:13.208" endtime="20201029 12:45:13.232"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:13.205" endtime="20201029 12:45:13.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.203" endtime="20201029 12:45:13.233"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:13.237" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:13.236" endtime="20201029 12:45:13.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.234" endtime="20201029 12:45:13.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.202" endtime="20201029 12:45:13.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.202" endtime="20201029 12:45:13.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.239" endtime="20201029 12:45:13.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.200" endtime="20201029 12:45:13.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.199" endtime="20201029 12:45:13.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.175" endtime="20201029 12:45:13.241"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.250" endtime="20201029 12:45:19.368"></status>
</kw>
<msg timestamp="20201029 12:45:19.368" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:13.248" endtime="20201029 12:45:19.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.371" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:19.369" endtime="20201029 12:45:19.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.372" endtime="20201029 12:45:19.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.245" endtime="20201029 12:45:19.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.244" endtime="20201029 12:45:19.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:19.377" level="INFO">${RESULT} = {'bg-timer-count': 5, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:45:19.375" endtime="20201029 12:45:19.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.382" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:19.381" endtime="20201029 12:45:19.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.384" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:19.383" endtime="20201029 12:45:19.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.378" endtime="20201029 12:45:19.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.390" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:19.388" endtime="20201029 12:45:19.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.392" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:19.391" endtime="20201029 12:45:19.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.385" endtime="20201029 12:45:19.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.397" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:19.396" endtime="20201029 12:45:19.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.399" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 12:45:19.398" endtime="20201029 12:45:19.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.394" endtime="20201029 12:45:19.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.406" endtime="20201029 12:45:19.703"></status>
</kw>
<msg timestamp="20201029 12:45:19.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062260972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162390125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:19.405" endtime="20201029 12:45:19.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062260972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162390125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:19.707" endtime="20201029 12:45:19.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.715" endtime="20201029 12:45:19.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.402" endtime="20201029 12:45:19.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.400" endtime="20201029 12:45:19.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:19.721" level="INFO">${FILTERED} = [{'diff': 0.100129153}, {'diff': 0.099924403}, {'diff': 0.10001193000000003}, {'diff': 0.10001090300000004}, {'diff': 0.10001090299999998}, {'diff': 0.10001093100000003}, {'diff': 0.10001090299999993}...</msg>
<status status="PASS" starttime="20201029 12:45:19.718" endtime="20201029 12:45:19.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:19.725" level="INFO">${RESULT} = {'diff': [0.100129153, 0.099924403, 0.10001193000000003, 0.10001090300000004, 0.10001090299999998, 0.10001093100000003, 0.10001090299999993, 0.10001090300000004, 0.10001088899999999, 0.100010902000000...</msg>
<status status="PASS" starttime="20201029 12:45:19.722" endtime="20201029 12:45:19.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.730" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:19.729" endtime="20201029 12:45:19.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.733" level="INFO">VALUE: [0.100129153, 0.099924403, 0.10001193000000003, 0.10001090300000004, 0.10001090299999998, 0.10001093100000003, 0.10001090299999993, 0.10001090300000004, 0.10001088899999999, 0.10001090200000007, 0.10001093000000005, 0.10001090299999982, 0.10001088899999999, 0.10001091700000009, 0.10001094499999996, 0.10001093100000014, 0.10001088899999999, 0.100010916, 0.10001090200000018, 0.10001088900000021, 0.10001091699999964, 0.10001091699999964, 0.1000108609999999, 0.10001084700000007, 0.10001088899999999, 0.1000108329999998, 0.1000108609999999, 0.10001091700000009, 0.10001081899999997, 0.1000108609999999, 0.10001087499999972, 0.10001083399999988, 0.10001084700000007, 0.10001084700000007, 0.10001083400000033, 0.10001084700000007, 0.1000108609999999, 0.1000108609999999, 0.10001084700000007, 0.10001084799999971, 0.10001086100000034, 0.10001087499999972, 0.10001084700000007, 0.10001086100000034, 0.10001086200000042, 0.10001084700000007, 0.10001086100000034, 0.10001088899999999, 0.10001086099999945, 0.10001086100000034, 0.10001086099999945]</msg>
<status status="PASS" starttime="20201029 12:45:19.732" endtime="20201029 12:45:19.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.726" endtime="20201029 12:45:19.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.242" endtime="20201029 12:45:19.735"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:13.173" endtime="20201029 12:45:19.735" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:19.741" endtime="20201029 12:45:19.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.740" endtime="20201029 12:45:19.762"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.775" endtime="20201029 12:45:19.788"></status>
</kw>
<msg timestamp="20201029 12:45:19.789" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:19.773" endtime="20201029 12:45:19.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.791" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:19.790" endtime="20201029 12:45:19.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.794" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:19.792" endtime="20201029 12:45:19.795"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:19.770" endtime="20201029 12:45:19.795"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:19.768" endtime="20201029 12:45:19.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.767" endtime="20201029 12:45:19.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:19.800" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:19.799" endtime="20201029 12:45:19.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.797" endtime="20201029 12:45:19.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.766" endtime="20201029 12:45:19.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.765" endtime="20201029 12:45:19.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.802" endtime="20201029 12:45:19.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.764" endtime="20201029 12:45:19.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.762" endtime="20201029 12:45:19.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.739" endtime="20201029 12:45:19.804"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.816" endtime="20201029 12:45:25.938"></status>
</kw>
<msg timestamp="20201029 12:45:25.939" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:19.811" endtime="20201029 12:45:25.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.945" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:25.941" endtime="20201029 12:45:25.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.947" endtime="20201029 12:45:25.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.808" endtime="20201029 12:45:25.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.806" endtime="20201029 12:45:25.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:25.958" level="INFO">${RESULT} = {'bg-timer-count': 10, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:45:25.954" endtime="20201029 12:45:25.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.967" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:25.965" endtime="20201029 12:45:25.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.973" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:25.970" endtime="20201029 12:45:25.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.960" endtime="20201029 12:45:25.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.985" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:25.983" endtime="20201029 12:45:25.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.991" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:25.988" endtime="20201029 12:45:25.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.978" endtime="20201029 12:45:25.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.999" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:25.998" endtime="20201029 12:45:25.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.001" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 12:45:26.000" endtime="20201029 12:45:26.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.995" endtime="20201029 12:45:26.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.009" endtime="20201029 12:45:26.307"></status>
</kw>
<msg timestamp="20201029 12:45:26.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064683875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164902528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:26.007" endtime="20201029 12:45:26.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064683875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164902528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:26.311" endtime="20201029 12:45:26.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.319" endtime="20201029 12:45:26.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.005" endtime="20201029 12:45:26.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.003" endtime="20201029 12:45:26.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:26.325" level="INFO">${FILTERED} = [{'diff': 0.10021865299999999}, {'diff': 0.10006695799999998}, {'diff': 0.099785236}, {'diff': 0.10001190300000001}, {'diff': 0.10001088899999999}, {'diff': 0.10001088899999999}, {'diff': 0.100010861}...</msg>
<status status="PASS" starttime="20201029 12:45:26.322" endtime="20201029 12:45:26.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:26.330" level="INFO">${RESULT} = {'diff': [0.10021865299999999, 0.10006695799999998, 0.099785236, 0.10001190300000001, 0.10001088899999999, 0.10001088899999999, 0.100010861, 0.10001087500000005, 0.10001088899999999, 0.100010930999999...</msg>
<status status="PASS" starttime="20201029 12:45:26.326" endtime="20201029 12:45:26.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.334" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:26.333" endtime="20201029 12:45:26.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.336" level="INFO">VALUE: [0.10021865299999999, 0.10006695799999998, 0.099785236, 0.10001190300000001, 0.10001088899999999, 0.10001088899999999, 0.100010861, 0.10001087500000005, 0.10001088899999999, 0.10001093099999991, 0.10001090199999996, 0.10001088899999999, 0.10001087500000017, 0.1000109440000001, 0.10001088899999999, 0.10001087499999994, 0.10001081899999997, 0.1000108340000001, 0.10001088899999999, 0.1000108609999999, 0.10001080500000015, 0.10001084800000015, 0.10001084800000015, 0.1000108329999998, 0.10001081899999997, 0.10001087499999972, 0.10001088899999999, 0.10001081899999997, 0.10001081899999997, 0.10001084700000007, 0.10001083399999988, 0.10001081899999997, 0.1000108609999999, 0.10001083400000033, 0.1000108609999999, 0.10001083300000024, 0.10001083300000024, 0.10001083400000033, 0.10001081899999997, 0.1000108329999998, 0.10001083399999988, 0.10001086100000034, 0.1000108329999998, 0.1000108329999998, 0.10001084800000015, 0.10001081899999953, 0.10001087499999972, 0.10001084700000007, 0.10001084700000007, 0.10001086099999945, 0.1000108329999998]</msg>
<status status="PASS" starttime="20201029 12:45:26.335" endtime="20201029 12:45:26.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.331" endtime="20201029 12:45:26.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.805" endtime="20201029 12:45:26.338"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:19.737" endtime="20201029 12:45:26.339" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:26.345" endtime="20201029 12:45:26.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.344" endtime="20201029 12:45:26.365"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.378" endtime="20201029 12:45:26.392"></status>
</kw>
<msg timestamp="20201029 12:45:26.393" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.376" endtime="20201029 12:45:26.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.395" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.394" endtime="20201029 12:45:26.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.399" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:26.396" endtime="20201029 12:45:26.399"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:26.374" endtime="20201029 12:45:26.400"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:26.371" endtime="20201029 12:45:26.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.370" endtime="20201029 12:45:26.401"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:26.404" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:26.404" endtime="20201029 12:45:26.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.402" endtime="20201029 12:45:26.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.369" endtime="20201029 12:45:26.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.369" endtime="20201029 12:45:26.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.406" endtime="20201029 12:45:26.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.367" endtime="20201029 12:45:26.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.366" endtime="20201029 12:45:26.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.342" endtime="20201029 12:45:26.409"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.417" endtime="20201029 12:45:32.539"></status>
</kw>
<msg timestamp="20201029 12:45:32.540" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.415" endtime="20201029 12:45:32.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.545" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.542" endtime="20201029 12:45:32.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.548" endtime="20201029 12:45:32.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.413" endtime="20201029 12:45:32.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.411" endtime="20201029 12:45:32.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:32.559" level="INFO">${RESULT} = {'bg-timer-count': 15, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:45:32.554" endtime="20201029 12:45:32.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.567" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:32.565" endtime="20201029 12:45:32.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.572" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:32.570" endtime="20201029 12:45:32.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.560" endtime="20201029 12:45:32.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.581" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:32.579" endtime="20201029 12:45:32.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.586" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:32.584" endtime="20201029 12:45:32.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.575" endtime="20201029 12:45:32.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.595" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:32.593" endtime="20201029 12:45:32.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.600" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 12:45:32.598" endtime="20201029 12:45:32.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.589" endtime="20201029 12:45:32.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.611" endtime="20201029 12:45:32.909"></status>
</kw>
<msg timestamp="20201029 12:45:32.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062727792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163114056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:32.610" endtime="20201029 12:45:32.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062727792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163114056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:32.913" endtime="20201029 12:45:32.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.925" endtime="20201029 12:45:32.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.607" endtime="20201029 12:45:32.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.603" endtime="20201029 12:45:32.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:32.935" level="INFO">${FILTERED} = [{'diff': 0.100386264}, {'diff': 0.100077056}, {'diff': 0.099613069}, {'diff': 0.10001184699999999}, {'diff': 0.10001088899999994}, {'diff': 0.100010861}, {'diff': 0.10001084700000007}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201029 12:45:32.929" endtime="20201029 12:45:32.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:32.939" level="INFO">${RESULT} = {'diff': [0.100386264, 0.100077056, 0.099613069, 0.10001184699999999, 0.10001088899999994, 0.100010861, 0.10001084700000007, 0.10001090300000004, 0.100010861, 0.100010861, 0.1000108609999999, 0.100010...</msg>
<status status="PASS" starttime="20201029 12:45:32.936" endtime="20201029 12:45:32.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.945" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:32.942" endtime="20201029 12:45:32.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.948" level="INFO">VALUE: [0.100386264, 0.100077056, 0.099613069, 0.10001184699999999, 0.10001088899999994, 0.100010861, 0.10001084700000007, 0.10001090300000004, 0.100010861, 0.100010861, 0.1000108609999999, 0.10001091700000009, 0.10001088899999999, 0.1000108609999999, 0.10001079200000018, 0.10001080500000015, 0.10001086199999998, 0.10001091700000009, 0.10001093099999991, 0.10001093100000014, 0.1000109720000002, 0.10001093099999991, 0.10001091700000009, 0.100010916, 0.100010916, 0.10001090299999982, 0.10001095799999993, 0.10001090299999982, 0.10001094500000018, 0.10001095800000037, 0.10001092999999983, 0.10001088799999991, 0.10001092999999983, 0.10001091699999964, 0.10001091700000009, 0.10001090299999982, 0.10001088899999999, 0.10001093000000028, 0.100010916, 0.10001095799999993, 0.10001090199999929, 0.10001091700000053, 0.10001091699999964, 0.10001091699999964, 0.10001094500000018, 0.10001090299999937, 0.10001094399999921, 0.1000109440000001, 0.10001091599999956, 0.10001091600000045, 0.10001088899999999]</msg>
<status status="PASS" starttime="20201029 12:45:32.947" endtime="20201029 12:45:32.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.940" endtime="20201029 12:45:32.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.409" endtime="20201029 12:45:32.950"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:26.340" endtime="20201029 12:45:32.951" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:32.957" endtime="20201029 12:45:32.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.956" endtime="20201029 12:45:32.977"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.991" endtime="20201029 12:45:33.005"></status>
</kw>
<msg timestamp="20201029 12:45:33.006" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.990" endtime="20201029 12:45:33.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.008" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:33.007" endtime="20201029 12:45:33.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.011" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:33.009" endtime="20201029 12:45:33.012"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:32.987" endtime="20201029 12:45:33.012"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:32.984" endtime="20201029 12:45:33.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.982" endtime="20201029 12:45:33.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:33.017" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:33.016" endtime="20201029 12:45:33.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.014" endtime="20201029 12:45:33.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.981" endtime="20201029 12:45:33.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.981" endtime="20201029 12:45:33.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.018" endtime="20201029 12:45:33.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.980" endtime="20201029 12:45:33.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.978" endtime="20201029 12:45:33.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.954" endtime="20201029 12:45:33.021"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.029" endtime="20201029 12:45:39.152"></status>
</kw>
<msg timestamp="20201029 12:45:39.153" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:33.028" endtime="20201029 12:45:39.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.158" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:39.155" endtime="20201029 12:45:39.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.160" endtime="20201029 12:45:39.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.025" endtime="20201029 12:45:39.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.023" endtime="20201029 12:45:39.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:39.172" level="INFO">${RESULT} = {'bg-timer-count': 20, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:45:39.167" endtime="20201029 12:45:39.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.180" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:39.178" endtime="20201029 12:45:39.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.185" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:39.183" endtime="20201029 12:45:39.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.174" endtime="20201029 12:45:39.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.195" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:39.192" endtime="20201029 12:45:39.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.199" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:39.197" endtime="20201029 12:45:39.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.188" endtime="20201029 12:45:39.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.209" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:39.207" endtime="20201029 12:45:39.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.215" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 12:45:39.211" endtime="20201029 12:45:39.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.202" endtime="20201029 12:45:39.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.231" endtime="20201029 12:45:39.535"></status>
</kw>
<msg timestamp="20201029 12:45:39.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062724597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163311319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:39.228" endtime="20201029 12:45:39.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062724597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163311319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:39.539" endtime="20201029 12:45:39.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.547" endtime="20201029 12:45:39.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.222" endtime="20201029 12:45:39.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.218" endtime="20201029 12:45:39.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:39.554" level="INFO">${FILTERED} = [{'diff': 0.100586722}, {'diff': 0.10008820800000001}, {'diff': 0.09940898600000003}, {'diff': 0.10001094499999996}, {'diff': 0.10001093099999997}, {'diff': 0.10001098600000002}, {'diff': 0.1000109999...</msg>
<status status="PASS" starttime="20201029 12:45:39.551" endtime="20201029 12:45:39.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:39.558" level="INFO">${RESULT} = {'diff': [0.100586722, 0.10008820800000001, 0.09940898600000003, 0.10001094499999996, 0.10001093099999997, 0.10001098600000002, 0.10001099999999996, 0.10001094399999999, 0.100010916, 0.100010944000000...</msg>
<status status="PASS" starttime="20201029 12:45:39.555" endtime="20201029 12:45:39.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.563" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:39.561" endtime="20201029 12:45:39.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.566" level="INFO">VALUE: [0.100586722, 0.10008820800000001, 0.09940898600000003, 0.10001094499999996, 0.10001093099999997, 0.10001098600000002, 0.10001099999999996, 0.10001094399999999, 0.100010916, 0.1000109440000001, 0.1000109440000001, 0.10001095900000001, 0.10001095900000001, 0.10001094499999996, 0.10001095900000001, 0.10001088899999999, 0.10001086100000012, 0.10001087499999994, 0.10001088899999999, 0.10001090300000004, 0.10001090299999982, 0.10001090299999982, 0.10001086199999998, 0.10001090300000026, 0.1000108609999999, 0.10001087499999972, 0.10001088899999999, 0.10001090300000026, 0.100010916, 0.10001088900000044, 0.10001087500000017, 0.10001090299999982, 0.10001093099999991, 0.10001088899999999, 0.10001087500000017, 0.1000108609999999, 0.10001088899999999, 0.10001087500000017, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001090200000018, 0.10001090299999937, 0.10001086099999945, 0.10001088799999991, 0.10001088899999999, 0.10001087499999972, 0.10001088899999999, 0.10001088899999999]</msg>
<status status="PASS" starttime="20201029 12:45:39.564" endtime="20201029 12:45:39.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.559" endtime="20201029 12:45:39.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.022" endtime="20201029 12:45:39.568"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:32.952" endtime="20201029 12:45:39.569" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:39.575" endtime="20201029 12:45:39.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.574" endtime="20201029 12:45:39.595"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.608" endtime="20201029 12:45:39.622"></status>
</kw>
<msg timestamp="20201029 12:45:39.623" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:39.606" endtime="20201029 12:45:39.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.625" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:39.624" endtime="20201029 12:45:39.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.628" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:39.626" endtime="20201029 12:45:39.629"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:39.604" endtime="20201029 12:45:39.629"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:39.601" endtime="20201029 12:45:39.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.600" endtime="20201029 12:45:39.630"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:39.634" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:39.633" endtime="20201029 12:45:39.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.631" endtime="20201029 12:45:39.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.599" endtime="20201029 12:45:39.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.599" endtime="20201029 12:45:39.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.636" endtime="20201029 12:45:39.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.597" endtime="20201029 12:45:39.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.596" endtime="20201029 12:45:39.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.573" endtime="20201029 12:45:39.638"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.648" endtime="20201029 12:45:45.770"></status>
</kw>
<msg timestamp="20201029 12:45:45.771" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:39.645" endtime="20201029 12:45:45.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.776" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.773" endtime="20201029 12:45:45.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.778" endtime="20201029 12:45:45.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.642" endtime="20201029 12:45:45.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.640" endtime="20201029 12:45:45.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:45.790" level="INFO">${RESULT} = {'bg-timer-count': 25, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:45:45.785" endtime="20201029 12:45:45.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.799" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:45.796" endtime="20201029 12:45:45.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.804" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:45.801" endtime="20201029 12:45:45.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.791" endtime="20201029 12:45:45.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.813" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:45.811" endtime="20201029 12:45:45.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.818" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:45.816" endtime="20201029 12:45:45.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.807" endtime="20201029 12:45:45.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.827" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:45.825" endtime="20201029 12:45:45.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.832" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 12:45:45.830" endtime="20201029 12:45:45.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.821" endtime="20201029 12:45:45.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.842" endtime="20201029 12:45:46.139"></status>
</kw>
<msg timestamp="20201029 12:45:46.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063504167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164353792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:45.841" endtime="20201029 12:45:46.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063504167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164353792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.143" endtime="20201029 12:45:46.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.151" endtime="20201029 12:45:46.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.838" endtime="20201029 12:45:46.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.835" endtime="20201029 12:45:46.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:46.157" level="INFO">${FILTERED} = [{'diff': 0.100849625}, {'diff': 0.10009104199999996}, {'diff': 0.10009207000000003}, {'diff': 0.09906719399999997}, {'diff': 0.10001093}, {'diff': 0.10001093100000003}, {'diff': 0.10001093100000003},...</msg>
<status status="PASS" starttime="20201029 12:45:46.154" endtime="20201029 12:45:46.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:46.162" level="INFO">${RESULT} = {'diff': [0.100849625, 0.10009104199999996, 0.10009207000000003, 0.09906719399999997, 0.10001093, 0.10001093100000003, 0.10001093100000003, 0.10001094500000007, 0.10001090299999993, 0.1000109169999998...</msg>
<status status="PASS" starttime="20201029 12:45:46.158" endtime="20201029 12:45:46.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.167" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:46.166" endtime="20201029 12:45:46.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.169" level="INFO">VALUE: [0.100849625, 0.10009104199999996, 0.10009207000000003, 0.09906719399999997, 0.10001093, 0.10001093100000003, 0.10001093100000003, 0.10001094500000007, 0.10001090299999993, 0.10001091699999987, 0.10001090300000004, 0.10001094399999988, 0.10001093000000005, 0.1000108609999999, 0.10001084800000015, 0.10001084700000007, 0.10001087499999994, 0.1000108609999999, 0.10001090199999996, 0.10001088900000021, 0.10001084799999971, 0.10001087499999972, 0.10001087500000017, 0.10001087500000017, 0.10001087500000017, 0.10001086100000034, 0.10001086199999998, 0.1000108609999999, 0.10001088899999999, 0.10001086100000034, 0.10001086100000034, 0.1000108609999999, 0.10001084799999971, 0.10001088899999999, 0.10001088899999999, 0.1000108609999999, 0.10001086199999998, 0.1000108609999999, 0.10001088899999999, 0.10001088899999999, 0.10001091699999964, 0.10001084700000007, 0.10001093099999991, 0.10001086100000034, 0.10001087500000061, 0.10001087499999972, 0.10001087500000061, 0.10001088899999999, 0.10001087499999972, 0.10001086100000034, 0.10001087499999972]</msg>
<status status="PASS" starttime="20201029 12:45:46.168" endtime="20201029 12:45:46.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.163" endtime="20201029 12:45:46.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.639" endtime="20201029 12:45:46.171"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:39.570" endtime="20201029 12:45:46.171" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:45:05.084" endtime="20201029 12:45:46.178"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 12:43:01.123" endtime="20201029 12:45:46.210"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
