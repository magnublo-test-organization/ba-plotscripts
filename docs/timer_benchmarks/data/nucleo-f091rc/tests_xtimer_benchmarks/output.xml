<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 18:27:22.205" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.810" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:22.819" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:24.026" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:22.809" endtime="20201030 18:27:24.027"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.030" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:27:24.028" endtime="20201030 18:27:24.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.808" endtime="20201030 18:27:24.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:24.033" endtime="20201030 18:27:24.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.031" endtime="20201030 18:27:24.232"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.259" endtime="20201030 18:27:24.280"></status>
</kw>
<msg timestamp="20201030 18:27:24.282" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['sion: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.255" endtime="20201030 18:27:24.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.287" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['sion: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.284" endtime="20201030 18:27:24.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.294" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:24.290" endtime="20201030 18:27:24.295"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:24.250" endtime="20201030 18:27:24.296"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:24.245" endtime="20201030 18:27:24.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.243" endtime="20201030 18:27:24.296"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:24.301" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:24.300" endtime="20201030 18:27:24.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.297" endtime="20201030 18:27:24.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.241" endtime="20201030 18:27:24.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.239" endtime="20201030 18:27:24.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.303" endtime="20201030 18:27:24.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.236" endtime="20201030 18:27:24.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.306" endtime="20201030 18:27:24.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.233" endtime="20201030 18:27:24.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.806" endtime="20201030 18:27:24.308"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:24.315" endtime="20201030 18:27:24.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.313" endtime="20201030 18:27:24.335"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.377" endtime="20201030 18:27:24.390"></status>
</kw>
<msg timestamp="20201030 18:27:24.391" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.375" endtime="20201030 18:27:24.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.393" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.392" endtime="20201030 18:27:24.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.397" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:24.395" endtime="20201030 18:27:24.397"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:24.372" endtime="20201030 18:27:24.398"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:24.369" endtime="20201030 18:27:24.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.340" endtime="20201030 18:27:24.399"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:24.403" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:24.402" endtime="20201030 18:27:24.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.400" endtime="20201030 18:27:24.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.339" endtime="20201030 18:27:24.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.339" endtime="20201030 18:27:24.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.406" endtime="20201030 18:27:24.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.337" endtime="20201030 18:27:24.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.335" endtime="20201030 18:27:24.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.312" endtime="20201030 18:27:24.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.425" endtime="20201030 18:27:24.439"></status>
</kw>
<msg timestamp="20201030 18:27:24.440" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.421" endtime="20201030 18:27:24.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.443" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.442" endtime="20201030 18:27:24.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.444" endtime="20201030 18:27:24.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.417" endtime="20201030 18:27:24.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.413" endtime="20201030 18:27:24.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.452" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 18:27:24.451" endtime="20201030 18:27:24.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.454" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 18:27:24.453" endtime="20201030 18:27:24.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.449" endtime="20201030 18:27:24.455"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:24.309" endtime="20201030 18:27:24.455" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:27:22.325" endtime="20201030 18:27:24.458"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.509" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:24.518" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:25.729" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:24.508" endtime="20201030 18:27:25.729"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.732" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:27:25.730" endtime="20201030 18:27:25.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.506" endtime="20201030 18:27:25.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:25.735" endtime="20201030 18:27:26.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.733" endtime="20201030 18:27:26.019"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.031" endtime="20201030 18:27:26.045"></status>
</kw>
<msg timestamp="20201030 18:27:26.046" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.030" endtime="20201030 18:27:26.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.048" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.047" endtime="20201030 18:27:26.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.051" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:26.049" endtime="20201030 18:27:26.051"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:26.027" endtime="20201030 18:27:26.052"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:26.025" endtime="20201030 18:27:26.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.024" endtime="20201030 18:27:26.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:26.057" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:26.056" endtime="20201030 18:27:26.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.054" endtime="20201030 18:27:26.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.023" endtime="20201030 18:27:26.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.022" endtime="20201030 18:27:26.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.058" endtime="20201030 18:27:26.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.021" endtime="20201030 18:27:26.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.061" endtime="20201030 18:27:26.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.019" endtime="20201030 18:27:26.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.505" endtime="20201030 18:27:26.063"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:26.070" endtime="20201030 18:27:26.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.067" endtime="20201030 18:27:26.090"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.103" endtime="20201030 18:27:26.117"></status>
</kw>
<msg timestamp="20201030 18:27:26.118" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.101" endtime="20201030 18:27:26.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.120" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.119" endtime="20201030 18:27:26.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.123" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:26.122" endtime="20201030 18:27:26.124"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:26.099" endtime="20201030 18:27:26.124"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:26.096" endtime="20201030 18:27:26.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.095" endtime="20201030 18:27:26.125"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:26.129" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:26.128" endtime="20201030 18:27:26.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.126" endtime="20201030 18:27:26.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.094" endtime="20201030 18:27:26.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.094" endtime="20201030 18:27:26.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.131" endtime="20201030 18:27:26.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.092" endtime="20201030 18:27:26.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.090" endtime="20201030 18:27:26.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.066" endtime="20201030 18:27:26.133"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.142" endtime="20201030 18:27:26.153"></status>
</kw>
<msg timestamp="20201030 18:27:26.154" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.140" endtime="20201030 18:27:26.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.156" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.155" endtime="20201030 18:27:26.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.157" endtime="20201030 18:27:26.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.138" endtime="20201030 18:27:26.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.136" endtime="20201030 18:27:26.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.166" endtime="20201030 18:27:26.456"></status>
</kw>
<msg timestamp="20201030 18:27:26.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062810833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062811375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.165" endtime="20201030 18:27:26.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062810833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062811375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.460" endtime="20201030 18:27:26.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.469" endtime="20201030 18:27:26.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.162" endtime="20201030 18:27:26.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.160" endtime="20201030 18:27:26.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:26.495" level="INFO">${debug} = {'diff': [0, 5.420000000061487e-07, 1.1485999999991114e-05, 4.86000000007869e-07, 1.2846999999996389e-05, 5.420000000061487e-07, 1.2930999999993809e-05, 5.41000000006675e-07, 1.1791999999996583e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:27:26.472" endtime="20201030 18:27:26.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.497" endtime="20201030 18:27:26.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.502" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:26.501" endtime="20201030 18:27:26.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.506" level="INFO">VALUE: {'diff': [0, 5.420000000061487e-07, 1.1485999999991114e-05, 4.86000000007869e-07, 1.2846999999996389e-05, 5.420000000061487e-07, 1.2930999999993809e-05, 5.41000000006675e-07, 1.1791999999996583e-05, 4.859999999939912e-07, 1.0944999999998317e-05, 4.86000000007869e-07, 1.2846999999996389e-05, 4.86000000007869e-07, 1.10969999999877e-05, 5.420000000061487e-07, 9.152999999997857e-06, 4.86000000007869e-07, 1.3415999999988326e-05, 5.420000000061487e-07, 9.875000000006406e-06, 5.419999999922709e-07, 1.0639000000006726e-05, 4.720000000013602e-07, 1.2721999999992795e-05, 4.720000000013602e-07, 1.0931000000005686e-05, 5.419999999922709e-07, 1.2499999999998623e-05, 5.41000000006675e-07, 1.2958999999992948e-05, 4.86000000007869e-07, 1.2110999999995209e-05, 5.41000000006675e-07, 9.583999999993043e-06, 5.41000000006675e-07, 1.1263999999996943e-05, 4.7300000000083386e-07, 1.27769999999916e-05, 5.420000000061487e-07, 1.3263999999998943e-05, 4.720000000013602e-07, 1.0070000000000912e-05, 5.409999999927972e-07, 9.152999999997857e-06, 4.86000000007869e-07, 1.0666999999991988e-05, 4.86000000007869e-07, 9.916999999998177e-06, 5.41000000006675e-07, 1.0027999999995263e-05, 4.859999999939912e-07, 9.195000000003506e-06, 5.41000000006675e-07, 1.2945000000000317e-05, 5.409999999927972e-07, 1.3374999999996029e-05, 5.420000000061487e-07, 1.3542000000005272e-05, 4.7199999998748243e-07, 1.1083000000008947e-05, 5.419999999922709e-07, 1.0179999999998524e-05, 4.870000000073427e-07, 1.2569000000003938e-05, 4.859999999939912e-07, 9.333000000000258e-06, 5.420000000061487e-07, 1.2499999999998623e-05, 5.419999999922709e-07, 1.1333000000002258e-05, 5.420000000061487e-07, 1.2971999999999984e-05, 4.720000000013602e-07, 1.1805999999989214e-05, 5.41000000006675e-07, 1.2362000000001871e-05, 5.409999999927972e-07, 1.0597000000001078e-05, 5.420000000061487e-07, 1.1346999999994889e-05, 4.86000000007869e-07, 1.2694999999993128e-05, 5.420000000061487e-07, 1.1625000000001218e-05, 5.409999999927972e-07, 1.0375000000006906e-05, 4.7199999998748243e-07, 1.3098000000003052e-05, 5.41000000006675e-07, 1.2222999999991768e-05, 4.86000000007869e-07, 9.915999999998704e-06, 5.419999999922709e-07, 1.2500000000012501e-05, 5.419999999922709e-07, 1.2944000000000844e-05, 5.420000000061487e-07, 1.3527999999998763e-05, 4.859999999939912e-07], 'time': [0.062810833, 0.062811375, 0.062822861, 0.062823347, 0.062836194, 0.062836736, 0.062849667, 0.062850208, 0.062862, 0.062862486, 0.062873431, 0.062873917, 0.062886764, 0.06288725, 0.062898347, 0.062898889, 0.062908042, 0.062908528, 0.062921944, 0.062922486, 0.062932361, 0.062932903, 0.062943542, 0.062944014, 0.062956736, 0.062957208, 0.062968139, 0.062968681, 0.062981181, 0.062981722, 0.062994681, 0.062995167, 0.063007278, 0.063007819, 0.063017403, 0.063017944, 0.063029208, 0.063029681, 0.063042458, 0.063043, 0.063056264, 0.063056736, 0.063066806, 0.063067347, 0.0630765, 0.063076986, 0.063087653, 0.063088139, 0.063098056, 0.063098597, 0.063108625, 0.063109111, 0.063118306, 0.063118847, 0.063131792, 0.063132333, 0.063145708, 0.06314625, 0.063159792, 0.063160264, 0.063171347, 0.063171889, 0.063182069, 0.063182556, 0.063195125, 0.063195611, 0.063204944, 0.063205486, 0.063217986, 0.063218528, 0.063229861, 0.063230403, 0.063243375, 0.063243847, 0.063255653, 0.063256194, 0.063268556, 0.063269097, 0.063279694, 0.063280236, 0.063291583, 0.063292069, 0.063304764, 0.063305306, 0.063316931, 0.063317472, 0.063327847, 0.063328319, 0.063341417, 0.063341958, 0.063354181, 0.063354667, 0.063364583, 0.063365125, 0.063377625, 0.063378167, 0.063391111, 0.063391653, 0.063405181, 0.063405667], 'eventsource_diff': [0, 5.420000000061487e-07, 1.1485999999991114e-05, 4.86000000007869e-07, 1.2846999999996389e-05, 5.420000000061487e-07, 1.2930999999993809e-05, 5.41000000006675e-07, 1.1791999999996583e-05, 4.859999999939912e-07, 1.0944999999998317e-05, 4.86000000007869e-07, 1.2846999999996389e-05, 4.86000000007869e-07, 1.10969999999877e-05, 5.420000000061487e-07, 9.152999999997857e-06, 4.86000000007869e-07, 1.3415999999988326e-05, 5.420000000061487e-07, 9.875000000006406e-06, 5.419999999922709e-07, 1.0639000000006726e-05, 4.720000000013602e-07, 1.2721999999992795e-05, 4.720000000013602e-07, 1.0931000000005686e-05, 5.419999999922709e-07, 1.2499999999998623e-05, 5.41000000006675e-07, 1.2958999999992948e-05, 4.86000000007869e-07, 1.2110999999995209e-05, 5.41000000006675e-07, 9.583999999993043e-06, 5.41000000006675e-07, 1.1263999999996943e-05, 4.7300000000083386e-07, 1.27769999999916e-05, 5.420000000061487e-07, 1.3263999999998943e-05, 4.720000000013602e-07, 1.0070000000000912e-05, 5.409999999927972e-07, 9.152999999997857e-06, 4.86000000007869e-07, 1.0666999999991988e-05, 4.86000000007869e-07, 9.916999999998177e-06, 5.41000000006675e-07, 1.0027999999995263e-05, 4.859999999939912e-07, 9.195000000003506e-06, 5.41000000006675e-07, 1.2945000000000317e-05, 5.409999999927972e-07, 1.3374999999996029e-05, 5.420000000061487e-07, 1.3542000000005272e-05, 4.7199999998748243e-07, 1.1083000000008947e-05, 5.419999999922709e-07, 1.0179999999998524e-05, 4.870000000073427e-07, 1.2569000000003938e-05, 4.859999999939912e-07, 9.333000000000258e-06, 5.420000000061487e-07, 1.2499999999998623e-05, 5.419999999922709e-07, 1.1333000000002258e-05, 5.420000000061487e-07, 1.2971999999999984e-05, 4.720000000013602e-07, 1.1805999999989214e-05, 5.41000000006675e-07, 1.2362000000001871e-05, 5.409999999927972e-07, 1.0597000000001078e-05, 5.420000000061487e-07, 1.1346999999994889e-05, 4.86000000007869e-07, 1.2694999999993128e-05, 5.420000000061487e-07, 1.1625000000001218e-05, 5.409999999927972e-07, 1.0375000000006906e-05, 4.7199999998748243e-07, 1.3098000000003052e-05, 5.41000000006675e-07, 1.2222999999991768e-05, 4.86000000007869e-07, 9.915999999998704e-06, 5.419999999922709e-07, 1.2500000000012501e-05, 5.419999999922709e-07, 1.2944000000000844e-05, 5.420000000061487e-07, 1.3527999999998763e-05, 4.859999999939912e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201030 18:27:26.503" endtime="20201030 18:27:26.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.499" endtime="20201030 18:27:26.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:26.514" level="INFO">${RESULT} = [{'diff': 5.420000000061487e-07}, {'diff': 4.86000000007869e-07}, {'diff': 5.420000000061487e-07}, {'diff': 5.41000000006675e-07}, {'diff': 4.859999999939912e-07}, {'diff': 4.86000000007869e-07}, {'di...</msg>
<status status="PASS" starttime="20201030 18:27:26.509" endtime="20201030 18:27:26.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:26.520" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000061487e-07, 4.86000000007869e-07, 5.420000000061487e-07, 5.41000000006675e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.86000000007869e-07, 5.420000000061487e-07, 4.86000000...</msg>
<status status="PASS" starttime="20201030 18:27:26.515" endtime="20201030 18:27:26.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.527" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:26.525" endtime="20201030 18:27:26.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.530" level="INFO">VALUE: [5.420000000061487e-07, 4.86000000007869e-07, 5.420000000061487e-07, 5.41000000006675e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.86000000007869e-07, 5.420000000061487e-07, 4.86000000007869e-07, 5.420000000061487e-07, 5.419999999922709e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999922709e-07, 5.41000000006675e-07, 4.86000000007869e-07, 5.41000000006675e-07, 5.41000000006675e-07, 4.7300000000083386e-07, 5.420000000061487e-07, 4.720000000013602e-07, 5.409999999927972e-07, 4.86000000007869e-07, 4.86000000007869e-07, 5.41000000006675e-07, 4.859999999939912e-07, 5.41000000006675e-07, 5.409999999927972e-07, 5.420000000061487e-07, 4.7199999998748243e-07, 5.419999999922709e-07, 4.870000000073427e-07, 4.859999999939912e-07, 5.420000000061487e-07, 5.419999999922709e-07, 5.420000000061487e-07, 4.720000000013602e-07, 5.41000000006675e-07, 5.409999999927972e-07, 5.420000000061487e-07, 4.86000000007869e-07, 5.420000000061487e-07, 5.409999999927972e-07, 4.7199999998748243e-07, 5.41000000006675e-07, 4.86000000007869e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000000061487e-07, 4.859999999939912e-07]</msg>
<status status="PASS" starttime="20201030 18:27:26.528" endtime="20201030 18:27:26.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.523" endtime="20201030 18:27:26.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:26.536" endtime="20201030 18:27:26.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.534" endtime="20201030 18:27:26.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.533" endtime="20201030 18:27:26.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.135" endtime="20201030 18:27:26.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.134" endtime="20201030 18:27:26.557"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.565" endtime="20201030 18:27:26.575"></status>
</kw>
<msg timestamp="20201030 18:27:26.576" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.563" endtime="20201030 18:27:26.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.578" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.577" endtime="20201030 18:27:26.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.579" endtime="20201030 18:27:26.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.561" endtime="20201030 18:27:26.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.559" endtime="20201030 18:27:26.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.588" endtime="20201030 18:27:26.891"></status>
</kw>
<msg timestamp="20201030 18:27:26.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018378333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018378875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.587" endtime="20201030 18:27:26.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018378333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018378875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.895" endtime="20201030 18:27:26.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.904" endtime="20201030 18:27:26.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.584" endtime="20201030 18:27:26.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.582" endtime="20201030 18:27:26.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:26.931" level="INFO">${debug} = {'diff': [0, 5.419999999992098e-07, 1.1041999999999302e-05, 5.409999999997361e-07, 1.2361000000002398e-05, 5.419999999992098e-07, 9.292000000001022e-06, 5.409999999997361e-07, 1.1624999999997748e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:26.907" endtime="20201030 18:27:26.931"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.932" endtime="20201030 18:27:26.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.937" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:26.936" endtime="20201030 18:27:26.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.941" level="INFO">VALUE: {'diff': [0, 5.419999999992098e-07, 1.1041999999999302e-05, 5.409999999997361e-07, 1.2361000000002398e-05, 5.419999999992098e-07, 9.292000000001022e-06, 5.409999999997361e-07, 1.1624999999997748e-05, 5.420000000026792e-07, 1.0889000000000038e-05, 5.419999999992098e-07, 9.180000000000993e-06, 4.7199999999789077e-07, 1.3042000000001303e-05, 4.7199999999789077e-07, 9.735999999999773e-06, 5.420000000026792e-07, 1.2069999999999442e-05, 5.409999999997361e-07, 1.3222000000000234e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 1.1208000000002133e-05, 4.859999999974607e-07, 1.2542000000000803e-05, 5.419999999992098e-07, 1.1625000000001218e-05, 5.409999999997361e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.1098000000001051e-05, 4.859999999974607e-07, 1.2250000000001843e-05, 5.409999999997361e-07, 1.1041999999999302e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 1.1527000000000759e-05, 4.7300000000083386e-07, 9.763999999998912e-06, 5.409999999997361e-07, 1.2208999999999137e-05, 5.410000000032056e-07, 9.305999999997122e-06, 4.860000000009301e-07, 1.3555000000001899e-05, 5.419999999992098e-07, 1.1194999999998567e-05, 5.409999999997361e-07, 9.292000000001022e-06, 5.419999999992098e-07, 9.901999999999134e-06, 4.7300000000083386e-07, 1.3416000000002204e-05, 5.419999999992098e-07, 9.610999999999648e-06, 4.720000000013602e-07, 1.1819999999999192e-05, 5.409999999997361e-07, 1.2110999999998678e-05, 4.7300000000083386e-07, 9.471999999999953e-06, 4.860000000009301e-07, 9.042000000000772e-06, 5.409999999997361e-07, 1.1638999999997318e-05, 4.860000000009301e-07, 1.0209000000000606e-05, 5.409999999997361e-07, 1.0777999999999482e-05, 4.720000000013602e-07, 1.3430999999997778e-05, 5.420000000026792e-07, 1.2929999999997804e-05, 5.419999999992098e-07, 1.0319000000001688e-05, 5.419999999992098e-07, 1.2680000000001024e-05, 4.7300000000083386e-07, 9.763999999998912e-06, 5.409999999997361e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 1.0167000000001897e-05, 5.409999999997361e-07, 1.1180999999998997e-05, 5.419999999992098e-07, 9.887999999999564e-06, 4.870000000004038e-07, 1.2985999999999553e-05, 5.409999999997361e-07, 1.0042000000001772e-05, 4.860000000009301e-07, 1.2888999999998568e-05, 4.720000000013602e-07], 'time': [0.018378333, 0.018378875, 0.018389917, 0.018390458, 0.018402819, 0.018403361, 0.018412653, 0.018413194, 0.018424819, 0.018425361, 0.01843625, 0.018436792, 0.018445972, 0.018446444, 0.018459486, 0.018459958, 0.018469694, 0.018470236, 0.018482306, 0.018482847, 0.018496069, 0.018496611, 0.018507222, 0.018507764, 0.018517347, 0.018517889, 0.018529097, 0.018529583, 0.018542125, 0.018542667, 0.018554292, 0.018554833, 0.018565597, 0.018566083, 0.018577181, 0.018577667, 0.018589917, 0.018590458, 0.0186015, 0.018602042, 0.018611625, 0.018612167, 0.018623694, 0.018624167, 0.018633931, 0.018634472, 0.018646681, 0.018647222, 0.018656528, 0.018657014, 0.018670569, 0.018671111, 0.018682306, 0.018682847, 0.018692139, 0.018692681, 0.018702583, 0.018703056, 0.018716472, 0.018717014, 0.018726625, 0.018727097, 0.018738917, 0.018739458, 0.018751569, 0.018752042, 0.018761514, 0.018762, 0.018771042, 0.018771583, 0.018783222, 0.018783708, 0.018793917, 0.018794458, 0.018805236, 0.018805708, 0.018819139, 0.018819681, 0.018832611, 0.018833153, 0.018843472, 0.018844014, 0.018856694, 0.018857167, 0.018866931, 0.018867472, 0.018878083, 0.018878625, 0.018888792, 0.018889333, 0.018900514, 0.018901056, 0.018910944, 0.018911431, 0.018924417, 0.018924958, 0.018935, 0.018935486, 0.018948375, 0.018948847], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 5.419999999992098e-07, 1.1041999999999302e-05, 5.409999999997361e-07, 1.2361000000002398e-05, 5.419999999992098e-07, 9.292000000001022e-06, 5.409999999997361e-07, 1.1624999999997748e-05, 5.420000000026792e-07, 1.0889000000000038e-05, 5.419999999992098e-07, 9.180000000000993e-06, 4.7199999999789077e-07, 1.3042000000001303e-05, 4.7199999999789077e-07, 9.735999999999773e-06, 5.420000000026792e-07, 1.2069999999999442e-05, 5.409999999997361e-07, 1.3222000000000234e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 1.1208000000002133e-05, 4.859999999974607e-07, 1.2542000000000803e-05, 5.419999999992098e-07, 1.1625000000001218e-05, 5.409999999997361e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.1098000000001051e-05, 4.859999999974607e-07, 1.2250000000001843e-05, 5.409999999997361e-07, 1.1041999999999302e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 1.1527000000000759e-05, 4.7300000000083386e-07, 9.763999999998912e-06, 5.409999999997361e-07, 1.2208999999999137e-05, 5.410000000032056e-07, 9.305999999997122e-06, 4.860000000009301e-07, 1.3555000000001899e-05, 5.419999999992098e-07, 1.1194999999998567e-05, 5.409999999997361e-07, 9.292000000001022e-06, 5.419999999992098e-07, 9.901999999999134e-06, 4.7300000000083386e-07, 1.3416000000002204e-05, 5.419999999992098e-07, 9.610999999999648e-06, 4.720000000013602e-07, 1.1819999999999192e-05, 5.409999999997361e-07, 1.2110999999998678e-05, 4.7300000000083386e-07, 9.471999999999953e-06, 4.860000000009301e-07, 9.042000000000772e-06, 5.409999999997361e-07, 1.1638999999997318e-05, 4.860000000009301e-07, 1.0209000000000606e-05, 5.409999999997361e-07, 1.0777999999999482e-05, 4.720000000013602e-07, 1.3430999999997778e-05, 5.420000000026792e-07, 1.2929999999997804e-05, 5.419999999992098e-07, 1.0319000000001688e-05, 5.419999999992098e-07, 1.2680000000001024e-05, 4.7300000000083386e-07, 9.763999999998912e-06, 5.409999999997361e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 1.0167000000001897e-05, 5.409999999997361e-07, 1.1180999999998997e-05, 5.419999999992098e-07, 9.887999999999564e-06, 4.870000000004038e-07, 1.2985999999999553e-05, 5.409999999997361e-07, 1.0042000000001772e-05, 4.860000000009301e-07, 1.2888999999998568e-05, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:26.938" endtime="20201030 18:27:26.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.934" endtime="20201030 18:27:26.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:26.946" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.420000000026792e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:26.943" endtime="20201030 18:27:26.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:26.950" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 5.42...</msg>
<status status="PASS" starttime="20201030 18:27:26.947" endtime="20201030 18:27:26.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.955" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:26.954" endtime="20201030 18:27:26.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.958" level="INFO">VALUE: [5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.410000000032056e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:27:26.957" endtime="20201030 18:27:26.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.951" endtime="20201030 18:27:26.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:26.963" endtime="20201030 18:27:26.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.961" endtime="20201030 18:27:26.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.960" endtime="20201030 18:27:26.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.558" endtime="20201030 18:27:26.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.557" endtime="20201030 18:27:26.984"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.992" endtime="20201030 18:27:27.003"></status>
</kw>
<msg timestamp="20201030 18:27:27.003" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.991" endtime="20201030 18:27:27.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.005" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.004" endtime="20201030 18:27:27.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.006" endtime="20201030 18:27:27.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.988" endtime="20201030 18:27:27.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.986" endtime="20201030 18:27:27.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.015" endtime="20201030 18:27:27.305"></status>
</kw>
<msg timestamp="20201030 18:27:27.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018507722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018508264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.014" endtime="20201030 18:27:27.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018507722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018508264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.309" endtime="20201030 18:27:27.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.318" endtime="20201030 18:27:27.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.011" endtime="20201030 18:27:27.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.009" endtime="20201030 18:27:27.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:27.357" level="INFO">${debug} = {'diff': [0, 5.419999999992098e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 1.2930000000001274e-05, 5.419999999992098e-07, 1.3527999999998763e-05, 5.409999999997361e-07, 9.889000000002507e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:27.321" endtime="20201030 18:27:27.358"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.360" endtime="20201030 18:27:27.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.374" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:27.372" endtime="20201030 18:27:27.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.383" level="INFO">VALUE: {'diff': [0, 5.419999999992098e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 1.2930000000001274e-05, 5.419999999992098e-07, 1.3527999999998763e-05, 5.409999999997361e-07, 9.889000000002507e-06, 4.859999999974607e-07, 1.1666999999999927e-05, 5.420000000026792e-07, 1.1638999999997318e-05, 4.860000000009301e-07, 1.1541000000000329e-05, 4.860000000009301e-07, 1.894499999999938e-05, 5.419999999992098e-07, 1.3374999999999498e-05, 5.409999999997361e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.2971999999999984e-05, 5.419999999992098e-07, 1.2361000000002398e-05, 5.419999999992098e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 1.1054999999999399e-05, 4.860000000009301e-07, 1.1514000000000663e-05, 5.419999999992098e-07, 1.0972000000001453e-05, 4.7199999999789077e-07, 1.0625000000000218e-05, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.859999999974607e-07, 1.0819000000002188e-05, 4.7300000000083386e-07, 1.1082999999998538e-05, 5.419999999992098e-07, 1.0319000000001688e-05, 5.419999999992098e-07, 8.999999999998592e-06, 5.409999999997361e-07, 1.1125000000000718e-05, 4.7300000000083386e-07, 1.2068999999999969e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 4.860000000009301e-07, 9.333999999999731e-06, 5.409999999997361e-07, 1.2791999999997583e-05, 5.420000000026792e-07, 1.2360999999998928e-05, 5.419999999992098e-07, 9.944000000001313e-06, 4.7199999999789077e-07, 1.2222000000002703e-05, 4.870000000004038e-07, 1.2693999999997124e-05, 5.420000000026792e-07, 9.582999999997038e-06, 5.420000000026792e-07, 9.443999999997343e-06, 4.860000000009301e-07, 9.195000000000036e-06, 5.409999999997361e-07, 1.1625000000001218e-05, 5.419999999992098e-07, 9.735999999999773e-06, 5.419999999992098e-07, 1.3375000000002968e-05, 5.409999999997361e-07, 1.1333999999998262e-05, 5.409999999997361e-07, 1.3097999999999582e-05, 4.860000000009301e-07, 9.778000000001952e-06, 5.409999999997361e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 1.3277999999998513e-05, 5.419999999992098e-07, 1.2500000000002093e-05, 5.409999999997361e-07, 1.3555999999997903e-05, 4.720000000013602e-07, 1.0930999999998747e-05, 5.409999999997361e-07, 1.1639000000000788e-05, 4.860000000009301e-07, 9.777999999998482e-06, 5.420000000026792e-07, 1.3235999999999803e-05, 4.859999999974607e-07, 1.2986000000003023e-05, 5.419999999992098e-07], 'time': [0.018507722, 0.018508264, 0.018518875, 0.018519417, 0.018532347, 0.018532889, 0.018546417, 0.018546958, 0.018556847, 0.018557333, 0.018569, 0.018569542, 0.018581181, 0.018581667, 0.018593208, 0.018593694, 0.018612639, 0.018613181, 0.018626556, 0.018627097, 0.018637861, 0.018638347, 0.018651319, 0.018651861, 0.018664222, 0.018664764, 0.018678, 0.018678542, 0.018689597, 0.018690083, 0.018701597, 0.018702139, 0.018713111, 0.018713583, 0.018724208, 0.018724681, 0.018734764, 0.01873525, 0.018746069, 0.018746542, 0.018757625, 0.018758167, 0.018768486, 0.018769028, 0.018778028, 0.018778569, 0.018789694, 0.018790167, 0.018802236, 0.018802722, 0.018815708, 0.018816194, 0.018825528, 0.018826069, 0.018838861, 0.018839403, 0.018851764, 0.018852306, 0.01886225, 0.018862722, 0.018874944, 0.018875431, 0.018888125, 0.018888667, 0.01889825, 0.018898792, 0.018908236, 0.018908722, 0.018917917, 0.018918458, 0.018930083, 0.018930625, 0.018940361, 0.018940903, 0.018954278, 0.018954819, 0.018966153, 0.018966694, 0.018979792, 0.018980278, 0.018990056, 0.018990597, 0.019000625, 0.019001111, 0.019014389, 0.019014931, 0.019027431, 0.019027972, 0.019041528, 0.019042, 0.019052931, 0.019053472, 0.019065111, 0.019065597, 0.019075375, 0.019075917, 0.019089153, 0.019089639, 0.019102625, 0.019103167], 'eventsource_diff': [0, 5.419999999992098e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 1.2930000000001274e-05, 5.419999999992098e-07, 1.3527999999998763e-05, 5.409999999997361e-07, 9.889000000002507e-06, 4.859999999974607e-07, 1.1666999999999927e-05, 5.420000000026792e-07, 1.1638999999997318e-05, 4.860000000009301e-07, 1.1541000000000329e-05, 4.860000000009301e-07, 1.894499999999938e-05, 5.419999999992098e-07, 1.3374999999999498e-05, 5.409999999997361e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.2971999999999984e-05, 5.419999999992098e-07, 1.2361000000002398e-05, 5.419999999992098e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 1.1054999999999399e-05, 4.860000000009301e-07, 1.1514000000000663e-05, 5.419999999992098e-07, 1.0972000000001453e-05, 4.7199999999789077e-07, 1.0625000000000218e-05, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.859999999974607e-07, 1.0819000000002188e-05, 4.7300000000083386e-07, 1.1082999999998538e-05, 5.419999999992098e-07, 1.0319000000001688e-05, 5.419999999992098e-07, 8.999999999998592e-06, 5.409999999997361e-07, 1.1125000000000718e-05, 4.7300000000083386e-07, 1.2068999999999969e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 4.860000000009301e-07, 9.333999999999731e-06, 5.409999999997361e-07, 1.2791999999997583e-05, 5.420000000026792e-07, 1.2360999999998928e-05, 5.419999999992098e-07, 9.944000000001313e-06, 4.7199999999789077e-07, 1.2222000000002703e-05, 4.870000000004038e-07, 1.2693999999997124e-05, 5.420000000026792e-07, 9.582999999997038e-06, 5.420000000026792e-07, 9.443999999997343e-06, 4.860000000009301e-07, 9.195000000000036e-06, 5.409999999997361e-07, 1.1625000000001218e-05, 5.419999999992098e-07, 9.735999999999773e-06, 5.419999999992098e-07, 1.3375000000002968e-05, 5.409999999997361e-07, 1.1333999999998262e-05, 5.409999999997361e-07, 1.3097999999999582e-05, 4.860000000009301e-07, 9.778000000001952e-06, 5.409999999997361e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 1.3277999999998513e-05, 5.419999999992098e-07, 1.2500000000002093e-05, 5.409999999997361e-07, 1.3555999999997903e-05, 4.720000000013602e-07, 1.0930999999998747e-05, 5.409999999997361e-07, 1.1639000000000788e-05, 4.860000000009301e-07, 9.777999999998482e-06, 5.420000000026792e-07, 1.3235999999999803e-05, 4.859999999974607e-07, 1.2986000000003023e-05, 5.419999999992098e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:27.377" endtime="20201030 18:27:27.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.366" endtime="20201030 18:27:27.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:27.392" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.859999999974607e-07}, {'diff': 5.420000000026792e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:27.388" endtime="20201030 18:27:27.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:27.400" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:27:27.394" endtime="20201030 18:27:27.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.412" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:27.410" endtime="20201030 18:27:27.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.416" level="INFO">VALUE: [5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 5.420000000026792e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:27:27.414" endtime="20201030 18:27:27.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.403" endtime="20201030 18:27:27.417"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:27.421" endtime="20201030 18:27:27.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.419" endtime="20201030 18:27:27.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.418" endtime="20201030 18:27:27.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.985" endtime="20201030 18:27:27.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.985" endtime="20201030 18:27:27.442"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.451" endtime="20201030 18:27:27.462"></status>
</kw>
<msg timestamp="20201030 18:27:27.463" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.449" endtime="20201030 18:27:27.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.465" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.464" endtime="20201030 18:27:27.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.466" endtime="20201030 18:27:27.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.446" endtime="20201030 18:27:27.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.444" endtime="20201030 18:27:27.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.475" endtime="20201030 18:27:27.761"></status>
</kw>
<msg timestamp="20201030 18:27:27.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020514486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:27.474" endtime="20201030 18:27:27.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020514486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:27.765" endtime="20201030 18:27:27.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.778" endtime="20201030 18:27:27.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.471" endtime="20201030 18:27:27.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.469" endtime="20201030 18:27:27.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:27.806" level="INFO">${debug} = {'diff': [0, 4.859999999974607e-07, 9.069999999999911e-06, 4.720000000013602e-07, 1.1097000000001578e-05, 5.419999999992098e-07, 1.3235999999999803e-05, 4.860000000009301e-07, 1.1666999999999927e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:27.782" endtime="20201030 18:27:27.806"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.807" endtime="20201030 18:27:27.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.812" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:27.811" endtime="20201030 18:27:27.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.816" level="INFO">VALUE: {'diff': [0, 4.859999999974607e-07, 9.069999999999911e-06, 4.720000000013602e-07, 1.1097000000001578e-05, 5.419999999992098e-07, 1.3235999999999803e-05, 4.860000000009301e-07, 1.1666999999999927e-05, 5.409999999997361e-07, 1.1792000000000052e-05, 4.859999999974607e-07, 1.2833000000000289e-05, 5.420000000026792e-07, 1.3541999999998333e-05, 4.860000000009301e-07, 1.3429999999998304e-05, 4.860000000009301e-07, 1.1084000000001482e-05, 5.409999999997361e-07, 9.138999999998287e-06, 5.419999999992098e-07, 1.0028000000002202e-05, 5.409999999997361e-07, 1.3527999999998763e-05, 5.419999999992098e-07, 9.903000000002077e-06, 4.7199999999789077e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 4.860000000009301e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 1.1332999999998788e-05, 5.420000000026792e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.0179999999998524e-05, 4.860000000009301e-07, 1.0652999999999357e-05, 5.420000000026792e-07, 1.280499999999768e-05, 4.860000000009301e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 1.2708999999999637e-05, 4.860000000009301e-07, 1.1388999999997068e-05, 4.860000000009301e-07, 1.3263999999998943e-05, 5.410000000032056e-07, 9.902999999998607e-06, 4.720000000013602e-07, 9.347999999999301e-06, 5.409999999997361e-07, 1.2806000000000622e-05, 4.859999999974607e-07, 1.2139000000001288e-05, 4.720000000013602e-07, 1.1832999999999289e-05, 4.7300000000083386e-07, 1.3137999999999345e-05, 4.870000000004038e-07, 1.0361000000000398e-05, 5.409999999997361e-07, 9.138999999998287e-06, 5.419999999992098e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 1.2070000000002912e-05, 4.859999999974607e-07, 1.2694000000000594e-05, 5.419999999992098e-07, 1.3528000000002233e-05, 5.409999999997361e-07, 1.0166999999998427e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 9.737000000002716e-06, 4.859999999974607e-07, 1.1818999999999719e-05, 5.420000000026792e-07, 1.0457999999997913e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.420000000026792e-07, 1.1971999999998983e-05, 4.7199999999789077e-07, 1.0334000000000731e-05, 5.409999999997361e-07, 1.1625000000001218e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 9.444000000000813e-06, 5.419999999992098e-07], 'time': [0.020514, 0.020514486, 0.020523556, 0.020524028, 0.020535125, 0.020535667, 0.020548903, 0.020549389, 0.020561056, 0.020561597, 0.020573389, 0.020573875, 0.020586708, 0.02058725, 0.020600792, 0.020601278, 0.020614708, 0.020615194, 0.020626278, 0.020626819, 0.020635958, 0.0206365, 0.020646528, 0.020647069, 0.020660597, 0.020661139, 0.020671042, 0.020671514, 0.020681722, 0.020682264, 0.020692875, 0.020693361, 0.020703722, 0.020704264, 0.020715597, 0.020716139, 0.020729514, 0.020730056, 0.020740236, 0.020740722, 0.020751375, 0.020751917, 0.020764722, 0.020765208, 0.020775722, 0.020776208, 0.020788917, 0.020789403, 0.020800792, 0.020801278, 0.020814542, 0.020815083, 0.020824986, 0.020825458, 0.020834806, 0.020835347, 0.020848153, 0.020848639, 0.020860778, 0.02086125, 0.020873083, 0.020873556, 0.020886694, 0.020887181, 0.020897542, 0.020898083, 0.020907222, 0.020907764, 0.020918375, 0.020918917, 0.020929667, 0.020930208, 0.020942278, 0.020942764, 0.020955458, 0.020956, 0.020969528, 0.020970069, 0.020980236, 0.020980778, 0.020991528, 0.020992069, 0.021001806, 0.021002292, 0.021014111, 0.021014653, 0.021025111, 0.021025653, 0.021038736, 0.021039278, 0.02105125, 0.021051722, 0.021062056, 0.021062597, 0.021074222, 0.021074764, 0.021084347, 0.021084889, 0.021094333, 0.021094875], 'eventsource_diff': [0, 4.859999999974607e-07, 9.069999999999911e-06, 4.720000000013602e-07, 1.1097000000001578e-05, 5.419999999992098e-07, 1.3235999999999803e-05, 4.860000000009301e-07, 1.1666999999999927e-05, 5.409999999997361e-07, 1.1792000000000052e-05, 4.859999999974607e-07, 1.2833000000000289e-05, 5.420000000026792e-07, 1.3541999999998333e-05, 4.860000000009301e-07, 1.3429999999998304e-05, 4.860000000009301e-07, 1.1084000000001482e-05, 5.409999999997361e-07, 9.138999999998287e-06, 5.419999999992098e-07, 1.0028000000002202e-05, 5.409999999997361e-07, 1.3527999999998763e-05, 5.419999999992098e-07, 9.903000000002077e-06, 4.7199999999789077e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 4.860000000009301e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 1.1332999999998788e-05, 5.420000000026792e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.0179999999998524e-05, 4.860000000009301e-07, 1.0652999999999357e-05, 5.420000000026792e-07, 1.280499999999768e-05, 4.860000000009301e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 1.2708999999999637e-05, 4.860000000009301e-07, 1.1388999999997068e-05, 4.860000000009301e-07, 1.3263999999998943e-05, 5.410000000032056e-07, 9.902999999998607e-06, 4.720000000013602e-07, 9.347999999999301e-06, 5.409999999997361e-07, 1.2806000000000622e-05, 4.859999999974607e-07, 1.2139000000001288e-05, 4.720000000013602e-07, 1.1832999999999289e-05, 4.7300000000083386e-07, 1.3137999999999345e-05, 4.870000000004038e-07, 1.0361000000000398e-05, 5.409999999997361e-07, 9.138999999998287e-06, 5.419999999992098e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 1.2070000000002912e-05, 4.859999999974607e-07, 1.2694000000000594e-05, 5.419999999992098e-07, 1.3528000000002233e-05, 5.409999999997361e-07, 1.0166999999998427e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 9.737000000002716e-06, 4.859999999974607e-07, 1.1818999999999719e-05, 5.420000000026792e-07, 1.0457999999997913e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.420000000026792e-07, 1.1971999999998983e-05, 4.7199999999789077e-07, 1.0334000000000731e-05, 5.409999999997361e-07, 1.1625000000001218e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 9.444000000000813e-06, 5.419999999992098e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:27.813" endtime="20201030 18:27:27.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.809" endtime="20201030 18:27:27.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:27.822" level="INFO">${RESULT} = [{'diff': 4.859999999974607e-07}, {'diff': 4.720000000013602e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.859999999974607e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:27.819" endtime="20201030 18:27:27.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:27.826" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999974607e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.8600...</msg>
<status status="PASS" starttime="20201030 18:27:27.823" endtime="20201030 18:27:27.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.830" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:27.829" endtime="20201030 18:27:27.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.833" level="INFO">VALUE: [4.859999999974607e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.410000000032056e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:27:27.831" endtime="20201030 18:27:27.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.827" endtime="20201030 18:27:27.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:27.837" endtime="20201030 18:27:27.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.836" endtime="20201030 18:27:27.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.835" endtime="20201030 18:27:27.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.442" endtime="20201030 18:27:27.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.442" endtime="20201030 18:27:27.858"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.866" endtime="20201030 18:27:27.876"></status>
</kw>
<msg timestamp="20201030 18:27:27.876" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.864" endtime="20201030 18:27:27.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.878" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.877" endtime="20201030 18:27:27.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.879" endtime="20201030 18:27:27.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.861" endtime="20201030 18:27:27.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.860" endtime="20201030 18:27:27.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.888" endtime="20201030 18:27:28.175"></status>
</kw>
<msg timestamp="20201030 18:27:28.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01829325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018293736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:27.887" endtime="20201030 18:27:28.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01829325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018293736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:28.179" endtime="20201030 18:27:28.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.187" endtime="20201030 18:27:28.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.884" endtime="20201030 18:27:28.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.883" endtime="20201030 18:27:28.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:28.214" level="INFO">${debug} = {'diff': [0, 4.860000000009301e-07, 1.1374999999997498e-05, 5.420000000026792e-07, 1.2943999999997374e-05, 5.420000000026792e-07, 1.0457999999997913e-05, 5.419999999992098e-07, 1.3083000000000539e-05,...</msg>
<status status="PASS" starttime="20201030 18:27:28.191" endtime="20201030 18:27:28.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.215" endtime="20201030 18:27:28.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.220" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:28.219" endtime="20201030 18:27:28.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.224" level="INFO">VALUE: {'diff': [0, 4.860000000009301e-07, 1.1374999999997498e-05, 5.420000000026792e-07, 1.2943999999997374e-05, 5.420000000026792e-07, 1.0457999999997913e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.0167000000001897e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 5.409999999997361e-07, 9.138999999998287e-06, 5.419999999992098e-07, 1.1639000000000788e-05, 5.409999999997361e-07, 9.874999999999468e-06, 5.420000000026792e-07, 1.1471999999998483e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.2360999999998928e-05, 5.420000000026792e-07, 1.2207999999999664e-05, 5.419999999992098e-07, 1.176299999999797e-05, 5.420000000026792e-07, 9.902999999998607e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.859999999974607e-07, 1.2112000000001621e-05, 5.409999999997361e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 1.1040999999999829e-05, 5.420000000026792e-07, 1.2207999999999664e-05, 5.419999999992098e-07, 1.1500000000001093e-05, 4.7199999999789077e-07, 9.792000000001522e-06, 4.859999999974607e-07, 1.1666999999999927e-05, 5.410000000032056e-07, 1.3527999999998763e-05, 5.419999999992098e-07, 1.3222000000000234e-05, 5.419999999992098e-07, 1.1639000000000788e-05, 4.860000000009301e-07, 1.1096999999998108e-05, 5.420000000026792e-07, 1.2221999999999233e-05, 4.860000000009301e-07, 9.179999999997523e-06, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.0027999999998732e-05, 5.420000000026792e-07, 1.2207999999999664e-05, 5.419999999992098e-07, 1.3387999999999595e-05, 4.870000000004038e-07, 1.1832999999999289e-05, 4.860000000009301e-07, 1.0055999999997872e-05, 5.410000000032056e-07, 9.735999999999773e-06, 5.419999999992098e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.0763999999999913e-05, 4.859999999974607e-07, 1.2986000000003023e-05, 5.419999999992098e-07, 1.2249999999998373e-05, 4.720000000013602e-07, 1.2139000000001288e-05, 4.7199999999789077e-07, 1.2375000000001968e-05, 5.419999999992098e-07, 1.0318999999998218e-05, 5.420000000026792e-07, 9.735999999999773e-06, 4.859999999974607e-07, 9.195000000000036e-06, 5.409999999997361e-07, 9.735999999999773e-06, 4.860000000009301e-07], 'time': [0.01829325, 0.018293736, 0.018305111, 0.018305653, 0.018318597, 0.018319139, 0.018329597, 0.018330139, 0.018343222, 0.018343764, 0.018356556, 0.018357097, 0.018367264, 0.018367806, 0.018378417, 0.018378958, 0.018388097, 0.018388639, 0.018400278, 0.018400819, 0.018410694, 0.018411236, 0.018422708, 0.01842325, 0.018433861, 0.018434403, 0.018445736, 0.018446278, 0.018458639, 0.018459181, 0.018471389, 0.018471931, 0.018483694, 0.018484236, 0.018494139, 0.018494611, 0.018503958, 0.018504444, 0.018516556, 0.018517097, 0.018527708, 0.01852825, 0.018539, 0.018539542, 0.018550583, 0.018551125, 0.018563333, 0.018563875, 0.018575375, 0.018575847, 0.018585639, 0.018586125, 0.018597792, 0.018598333, 0.018611861, 0.018612403, 0.018625625, 0.018626167, 0.018637806, 0.018638292, 0.018649389, 0.018649931, 0.018662153, 0.018662639, 0.018671819, 0.018672361, 0.018683694, 0.018684236, 0.018694264, 0.018694806, 0.018707014, 0.018707556, 0.018720944, 0.018721431, 0.018733264, 0.01873375, 0.018743806, 0.018744347, 0.018754083, 0.018754625, 0.018765153, 0.018765625, 0.018776389, 0.018776875, 0.018789861, 0.018790403, 0.018802653, 0.018803125, 0.018815264, 0.018815736, 0.018828111, 0.018828653, 0.018838972, 0.018839514, 0.01884925, 0.018849736, 0.018858931, 0.018859472, 0.018869208, 0.018869694], 'eventsource_diff': [0, 4.860000000009301e-07, 1.1374999999997498e-05, 5.420000000026792e-07, 1.2943999999997374e-05, 5.420000000026792e-07, 1.0457999999997913e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.0167000000001897e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 5.409999999997361e-07, 9.138999999998287e-06, 5.419999999992098e-07, 1.1639000000000788e-05, 5.409999999997361e-07, 9.874999999999468e-06, 5.420000000026792e-07, 1.1471999999998483e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.2360999999998928e-05, 5.420000000026792e-07, 1.2207999999999664e-05, 5.419999999992098e-07, 1.176299999999797e-05, 5.420000000026792e-07, 9.902999999998607e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.859999999974607e-07, 1.2112000000001621e-05, 5.409999999997361e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 1.1040999999999829e-05, 5.420000000026792e-07, 1.2207999999999664e-05, 5.419999999992098e-07, 1.1500000000001093e-05, 4.7199999999789077e-07, 9.792000000001522e-06, 4.859999999974607e-07, 1.1666999999999927e-05, 5.410000000032056e-07, 1.3527999999998763e-05, 5.419999999992098e-07, 1.3222000000000234e-05, 5.419999999992098e-07, 1.1639000000000788e-05, 4.860000000009301e-07, 1.1096999999998108e-05, 5.420000000026792e-07, 1.2221999999999233e-05, 4.860000000009301e-07, 9.179999999997523e-06, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.0027999999998732e-05, 5.420000000026792e-07, 1.2207999999999664e-05, 5.419999999992098e-07, 1.3387999999999595e-05, 4.870000000004038e-07, 1.1832999999999289e-05, 4.860000000009301e-07, 1.0055999999997872e-05, 5.410000000032056e-07, 9.735999999999773e-06, 5.419999999992098e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.0763999999999913e-05, 4.859999999974607e-07, 1.2986000000003023e-05, 5.419999999992098e-07, 1.2249999999998373e-05, 4.720000000013602e-07, 1.2139000000001288e-05, 4.7199999999789077e-07, 1.2375000000001968e-05, 5.419999999992098e-07, 1.0318999999998218e-05, 5.420000000026792e-07, 9.735999999999773e-06, 4.859999999974607e-07, 9.195000000000036e-06, 5.409999999997361e-07, 9.735999999999773e-06, 4.860000000009301e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:28.221" endtime="20201030 18:27:28.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.217" endtime="20201030 18:27:28.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:28.229" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 5.420000000026792e-07}, {'diff': 5.420000000026792e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:28.226" endtime="20201030 18:27:28.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:28.234" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:27:28.230" endtime="20201030 18:27:28.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.238" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:28.237" endtime="20201030 18:27:28.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.241" level="INFO">VALUE: [4.860000000009301e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.720000000013602e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 5.410000000032056e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.870000000004038e-07, 4.860000000009301e-07, 5.410000000032056e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201030 18:27:28.240" endtime="20201030 18:27:28.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.235" endtime="20201030 18:27:28.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:28.245" endtime="20201030 18:27:28.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.244" endtime="20201030 18:27:28.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.243" endtime="20201030 18:27:28.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.859" endtime="20201030 18:27:28.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.858" endtime="20201030 18:27:28.266"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.274" endtime="20201030 18:27:28.283"></status>
</kw>
<msg timestamp="20201030 18:27:28.284" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.272" endtime="20201030 18:27:28.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.286" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.285" endtime="20201030 18:27:28.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.287" endtime="20201030 18:27:28.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.270" endtime="20201030 18:27:28.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.268" endtime="20201030 18:27:28.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.296" endtime="20201030 18:27:28.583"></status>
</kw>
<msg timestamp="20201030 18:27:28.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018425056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018425528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.295" endtime="20201030 18:27:28.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018425056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018425528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.587" endtime="20201030 18:27:28.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.595" endtime="20201030 18:27:28.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.292" endtime="20201030 18:27:28.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.290" endtime="20201030 18:27:28.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:28.623" level="INFO">${debug} = {'diff': [0, 4.720000000013602e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.1625000000001218e-05, 5.409999999997361e-07, 9.736999999999246e-06, 5.409999999997361e-07, 1.0013999999999162e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:28.599" endtime="20201030 18:27:28.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.624" endtime="20201030 18:27:28.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.629" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:28.628" endtime="20201030 18:27:28.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.633" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.1625000000001218e-05, 5.409999999997361e-07, 9.736999999999246e-06, 5.409999999997361e-07, 1.0013999999999162e-05, 5.419999999992098e-07, 1.0028000000002202e-05, 5.409999999997361e-07, 1.0472000000000953e-05, 4.869999999969343e-07, 9.486000000002992e-06, 5.409999999997361e-07, 1.0305999999998122e-05, 5.419999999992098e-07, 1.3541000000002329e-05, 4.859999999974607e-07, 1.0361000000000398e-05, 4.870000000004038e-07, 9.652000000002353e-06, 4.859999999974607e-07, 1.3264000000002413e-05, 5.419999999992098e-07, 1.0805999999998622e-05, 4.720000000013602e-07, 1.0763999999999913e-05, 5.409999999997361e-07, 9.735999999999773e-06, 5.419999999992098e-07, 1.2820000000000192e-05, 4.720000000013602e-07, 1.1541000000000329e-05, 4.870000000004038e-07, 1.254099999999786e-05, 5.419999999992098e-07, 1.1625000000001218e-05, 5.419999999992098e-07, 1.1652000000000884e-05, 4.7300000000083386e-07, 1.2249999999998373e-05, 5.409999999997361e-07, 1.2833999999999762e-05, 4.720000000013602e-07, 1.2819000000000719e-05, 5.419999999992098e-07, 1.3388999999999068e-05, 4.860000000009301e-07, 1.2999999999999123e-05, 4.860000000009301e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 9.305000000001118e-06, 4.859999999974607e-07, 1.1236000000001273e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.1222000000001703e-05, 4.729999999973644e-07, 1.3125000000002718e-05, 5.409999999997361e-07, 1.1333999999998262e-05, 5.409999999997361e-07, 1.1042000000002772e-05, 5.419999999992098e-07, 1.2651999999998415e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 9.472999999999426e-06, 4.720000000013602e-07, 1.1680000000000024e-05, 4.7300000000083386e-07, 1.2569000000000469e-05, 4.859999999974607e-07, 9.333000000000258e-06, 5.420000000026792e-07, 1.1916999999996708e-05, 5.410000000032056e-07, 1.3513999999999193e-05, 5.419999999992098e-07, 9.444000000000813e-06, 5.419999999992098e-07, 1.0027999999998732e-05, 5.420000000026792e-07, 9.290999999998079e-06, 5.419999999992098e-07, 9.875000000002937e-06, 5.419999999992098e-07, 9.887999999999564e-06, 4.870000000004038e-07, 1.1221999999998233e-05, 5.409999999997361e-07], 'time': [0.018425056, 0.018425528, 0.018435736, 0.018436278, 0.018447903, 0.018448444, 0.018458181, 0.018458722, 0.018468736, 0.018469278, 0.018479306, 0.018479847, 0.018490319, 0.018490806, 0.018500292, 0.018500833, 0.018511139, 0.018511681, 0.018525222, 0.018525708, 0.018536069, 0.018536556, 0.018546208, 0.018546694, 0.018559958, 0.0185605, 0.018571306, 0.018571778, 0.018582542, 0.018583083, 0.018592819, 0.018593361, 0.018606181, 0.018606653, 0.018618194, 0.018618681, 0.018631222, 0.018631764, 0.018643389, 0.018643931, 0.018655583, 0.018656056, 0.018668306, 0.018668847, 0.018681681, 0.018682153, 0.018694972, 0.018695514, 0.018708903, 0.018709389, 0.018722389, 0.018722875, 0.018733083, 0.018733625, 0.018747, 0.018747542, 0.018758875, 0.018759417, 0.018768722, 0.018769208, 0.018780444, 0.018780986, 0.018794069, 0.018794611, 0.018805833, 0.018806306, 0.018819431, 0.018819972, 0.018831306, 0.018831847, 0.018842889, 0.018843431, 0.018856083, 0.018856625, 0.018869417, 0.018869958, 0.018879431, 0.018879903, 0.018891583, 0.018892056, 0.018904625, 0.018905111, 0.018914444, 0.018914986, 0.018926903, 0.018927444, 0.018940958, 0.0189415, 0.018950944, 0.018951486, 0.018961514, 0.018962056, 0.018971347, 0.018971889, 0.018981764, 0.018982306, 0.018992194, 0.018992681, 0.019003903, 0.019004444], 'eventsource_diff': [0, 4.720000000013602e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.1625000000001218e-05, 5.409999999997361e-07, 9.736999999999246e-06, 5.409999999997361e-07, 1.0013999999999162e-05, 5.419999999992098e-07, 1.0028000000002202e-05, 5.409999999997361e-07, 1.0472000000000953e-05, 4.869999999969343e-07, 9.486000000002992e-06, 5.409999999997361e-07, 1.0305999999998122e-05, 5.419999999992098e-07, 1.3541000000002329e-05, 4.859999999974607e-07, 1.0361000000000398e-05, 4.870000000004038e-07, 9.652000000002353e-06, 4.859999999974607e-07, 1.3264000000002413e-05, 5.419999999992098e-07, 1.0805999999998622e-05, 4.720000000013602e-07, 1.0763999999999913e-05, 5.409999999997361e-07, 9.735999999999773e-06, 5.419999999992098e-07, 1.2820000000000192e-05, 4.720000000013602e-07, 1.1541000000000329e-05, 4.870000000004038e-07, 1.254099999999786e-05, 5.419999999992098e-07, 1.1625000000001218e-05, 5.419999999992098e-07, 1.1652000000000884e-05, 4.7300000000083386e-07, 1.2249999999998373e-05, 5.409999999997361e-07, 1.2833999999999762e-05, 4.720000000013602e-07, 1.2819000000000719e-05, 5.419999999992098e-07, 1.3388999999999068e-05, 4.860000000009301e-07, 1.2999999999999123e-05, 4.860000000009301e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 9.305000000001118e-06, 4.859999999974607e-07, 1.1236000000001273e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.1222000000001703e-05, 4.729999999973644e-07, 1.3125000000002718e-05, 5.409999999997361e-07, 1.1333999999998262e-05, 5.409999999997361e-07, 1.1042000000002772e-05, 5.419999999992098e-07, 1.2651999999998415e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 9.472999999999426e-06, 4.720000000013602e-07, 1.1680000000000024e-05, 4.7300000000083386e-07, 1.2569000000000469e-05, 4.859999999974607e-07, 9.333000000000258e-06, 5.420000000026792e-07, 1.1916999999996708e-05, 5.410000000032056e-07, 1.3513999999999193e-05, 5.419999999992098e-07, 9.444000000000813e-06, 5.419999999992098e-07, 1.0027999999998732e-05, 5.420000000026792e-07, 9.290999999998079e-06, 5.419999999992098e-07, 9.875000000002937e-06, 5.419999999992098e-07, 9.887999999999564e-06, 4.870000000004038e-07, 1.1221999999998233e-05, 5.409999999997361e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:28.630" endtime="20201030 18:27:28.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.626" endtime="20201030 18:27:28.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:28.638" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:28.635" endtime="20201030 18:27:28.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:28.642" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.869999999969343e-07, 5.409999999997361e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:27:28.639" endtime="20201030 18:27:28.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.646" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:28.645" endtime="20201030 18:27:28.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.649" level="INFO">VALUE: [4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.869999999969343e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.870000000004038e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.870000000004038e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.729999999973644e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.410000000032056e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:27:28.647" endtime="20201030 18:27:28.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.643" endtime="20201030 18:27:28.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:28.653" endtime="20201030 18:27:28.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.652" endtime="20201030 18:27:28.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.651" endtime="20201030 18:27:28.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.267" endtime="20201030 18:27:28.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.266" endtime="20201030 18:27:28.674"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.682" endtime="20201030 18:27:28.693"></status>
</kw>
<msg timestamp="20201030 18:27:28.693" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.681" endtime="20201030 18:27:28.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.696" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.694" endtime="20201030 18:27:28.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.697" endtime="20201030 18:27:28.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.677" endtime="20201030 18:27:28.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.676" endtime="20201030 18:27:28.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.706" endtime="20201030 18:27:28.991"></status>
</kw>
<msg timestamp="20201030 18:27:28.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019123736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019124222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.704" endtime="20201030 18:27:28.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019123736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019124222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.995" endtime="20201030 18:27:29.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.004" endtime="20201030 18:27:29.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.702" endtime="20201030 18:27:29.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.700" endtime="20201030 18:27:29.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:29.032" level="INFO">${debug} = {'diff': [0, 4.860000000009301e-07, 1.3624999999999748e-05, 4.720000000013602e-07, 1.2972999999999457e-05, 4.860000000009301e-07, 1.1805000000000149e-05, 5.419999999992098e-07, 1.0916999999999177e-05,...</msg>
<status status="PASS" starttime="20201030 18:27:29.008" endtime="20201030 18:27:29.032"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.033" endtime="20201030 18:27:29.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.039" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:29.038" endtime="20201030 18:27:29.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.043" level="INFO">VALUE: {'diff': [0, 4.860000000009301e-07, 1.3624999999999748e-05, 4.720000000013602e-07, 1.2972999999999457e-05, 4.860000000009301e-07, 1.1805000000000149e-05, 5.419999999992098e-07, 1.0916999999999177e-05, 4.860000000009301e-07, 9.346999999999828e-06, 4.860000000009301e-07, 1.1082999999998538e-05, 5.419999999992098e-07, 9.485999999999523e-06, 4.720000000013602e-07, 1.0791999999999052e-05, 4.860000000009301e-07, 9.624999999999218e-06, 5.419999999992098e-07, 1.1778000000000483e-05, 4.860000000009301e-07, 9.360999999999398e-06, 4.720000000013602e-07, 1.0944999999998317e-05, 5.409999999997361e-07, 1.2361000000002398e-05, 5.419999999992098e-07, 1.3513999999999193e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 9.875000000002937e-06, 5.409999999997361e-07, 1.1194999999998567e-05, 5.409999999997361e-07, 1.1334000000001732e-05, 5.409999999997361e-07, 1.1194999999998567e-05, 5.409999999997361e-07, 1.3374999999999498e-05, 5.420000000026792e-07, 1.2638999999998318e-05, 5.419999999992098e-07, 9.889000000002507e-06, 4.859999999974607e-07, 1.2111000000002148e-05, 5.409999999997361e-07, 9.583999999999981e-06, 5.409999999997361e-07, 1.0320000000001162e-05, 5.419999999992098e-07, 1.280499999999768e-05, 4.860000000009301e-07, 1.3431000000001247e-05, 4.860000000009301e-07, 9.541999999997802e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7199999999789077e-07, 1.3417000000001678e-05, 5.419999999992098e-07, 9.165999999997954e-06, 4.860000000009301e-07, 1.1375000000000968e-05, 5.419999999992098e-07, 9.292000000001022e-06, 5.409999999997361e-07, 9.013999999998162e-06, 4.860000000009301e-07, 9.485999999999523e-06, 5.420000000026792e-07, 1.2346999999999358e-05, 5.419999999992098e-07, 1.2653000000001358e-05, 5.1400000000007e-07, 1.2860999999999428e-05, 4.7199999999789077e-07, 1.0944000000002313e-05, 4.870000000004038e-07, 1.355499999999843e-05, 5.419999999992098e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.3569000000001469e-05, 5.1400000000007e-07, 9.027999999997732e-06, 5.419999999992098e-07, 9.597000000000078e-06, 4.860000000009301e-07, 9.333000000000258e-06, 5.419999999992098e-07, 9.014000000001632e-06, 4.860000000009301e-07, 1.3124999999999248e-05, 5.419999999992098e-07, 9.333000000000258e-06, 4.720000000013602e-07, 1.1527999999996763e-05, 4.860000000009301e-07], 'time': [0.019123736, 0.019124222, 0.019137847, 0.019138319, 0.019151292, 0.019151778, 0.019163583, 0.019164125, 0.019175042, 0.019175528, 0.019184875, 0.019185361, 0.019196444, 0.019196986, 0.019206472, 0.019206944, 0.019217736, 0.019218222, 0.019227847, 0.019228389, 0.019240167, 0.019240653, 0.019250014, 0.019250486, 0.019261431, 0.019261972, 0.019274333, 0.019274875, 0.019288389, 0.019288931, 0.019298514, 0.019299056, 0.019308931, 0.019309472, 0.019320667, 0.019321208, 0.019332542, 0.019333083, 0.019344278, 0.019344819, 0.019358194, 0.019358736, 0.019371375, 0.019371917, 0.019381806, 0.019382292, 0.019394403, 0.019394944, 0.019404528, 0.019405069, 0.019415389, 0.019415931, 0.019428736, 0.019429222, 0.019442653, 0.019443139, 0.019452681, 0.019453153, 0.0194635, 0.019463972, 0.019477389, 0.019477931, 0.019487097, 0.019487583, 0.019498958, 0.0194995, 0.019508792, 0.019509333, 0.019518347, 0.019518833, 0.019528319, 0.019528861, 0.019541208, 0.01954175, 0.019554403, 0.019554917, 0.019567778, 0.01956825, 0.019579194, 0.019579681, 0.019593236, 0.019593778, 0.019604542, 0.019605028, 0.019618597, 0.019619111, 0.019628139, 0.019628681, 0.019638278, 0.019638764, 0.019648097, 0.019648639, 0.019657653, 0.019658139, 0.019671264, 0.019671806, 0.019681139, 0.019681611, 0.019693139, 0.019693625], 'eventsource_diff': [0, 4.860000000009301e-07, 1.3624999999999748e-05, 4.720000000013602e-07, 1.2972999999999457e-05, 4.860000000009301e-07, 1.1805000000000149e-05, 5.419999999992098e-07, 1.0916999999999177e-05, 4.860000000009301e-07, 9.346999999999828e-06, 4.860000000009301e-07, 1.1082999999998538e-05, 5.419999999992098e-07, 9.485999999999523e-06, 4.720000000013602e-07, 1.0791999999999052e-05, 4.860000000009301e-07, 9.624999999999218e-06, 5.419999999992098e-07, 1.1778000000000483e-05, 4.860000000009301e-07, 9.360999999999398e-06, 4.720000000013602e-07, 1.0944999999998317e-05, 5.409999999997361e-07, 1.2361000000002398e-05, 5.419999999992098e-07, 1.3513999999999193e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 9.875000000002937e-06, 5.409999999997361e-07, 1.1194999999998567e-05, 5.409999999997361e-07, 1.1334000000001732e-05, 5.409999999997361e-07, 1.1194999999998567e-05, 5.409999999997361e-07, 1.3374999999999498e-05, 5.420000000026792e-07, 1.2638999999998318e-05, 5.419999999992098e-07, 9.889000000002507e-06, 4.859999999974607e-07, 1.2111000000002148e-05, 5.409999999997361e-07, 9.583999999999981e-06, 5.409999999997361e-07, 1.0320000000001162e-05, 5.419999999992098e-07, 1.280499999999768e-05, 4.860000000009301e-07, 1.3431000000001247e-05, 4.860000000009301e-07, 9.541999999997802e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7199999999789077e-07, 1.3417000000001678e-05, 5.419999999992098e-07, 9.165999999997954e-06, 4.860000000009301e-07, 1.1375000000000968e-05, 5.419999999992098e-07, 9.292000000001022e-06, 5.409999999997361e-07, 9.013999999998162e-06, 4.860000000009301e-07, 9.485999999999523e-06, 5.420000000026792e-07, 1.2346999999999358e-05, 5.419999999992098e-07, 1.2653000000001358e-05, 5.1400000000007e-07, 1.2860999999999428e-05, 4.7199999999789077e-07, 1.0944000000002313e-05, 4.870000000004038e-07, 1.355499999999843e-05, 5.419999999992098e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.3569000000001469e-05, 5.1400000000007e-07, 9.027999999997732e-06, 5.419999999992098e-07, 9.597000000000078e-06, 4.860000000009301e-07, 9.333000000000258e-06, 5.419999999992098e-07, 9.014000000001632e-06, 4.860000000009301e-07, 1.3124999999999248e-05, 5.419999999992098e-07, 9.333000000000258e-06, 4.720000000013602e-07, 1.1527999999996763e-05, 4.860000000009301e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:29.040" endtime="20201030 18:27:29.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.036" endtime="20201030 18:27:29.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:29.049" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.860000000009301e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:29.045" endtime="20201030 18:27:29.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:29.054" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.8600...</msg>
<status status="PASS" starttime="20201030 18:27:29.050" endtime="20201030 18:27:29.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.058" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:29.057" endtime="20201030 18:27:29.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.060" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.1400000000007e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.1400000000007e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201030 18:27:29.059" endtime="20201030 18:27:29.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.054" endtime="20201030 18:27:29.061"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:29.065" endtime="20201030 18:27:29.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.063" endtime="20201030 18:27:29.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.062" endtime="20201030 18:27:29.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.675" endtime="20201030 18:27:29.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.674" endtime="20201030 18:27:29.086"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.094" endtime="20201030 18:27:29.103"></status>
</kw>
<msg timestamp="20201030 18:27:29.104" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.092" endtime="20201030 18:27:29.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.107" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.105" endtime="20201030 18:27:29.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.108" endtime="20201030 18:27:29.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.090" endtime="20201030 18:27:29.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.088" endtime="20201030 18:27:29.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.117" endtime="20201030 18:27:29.402"></status>
</kw>
<msg timestamp="20201030 18:27:29.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018810653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018811125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.115" endtime="20201030 18:27:29.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018810653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018811125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.407" endtime="20201030 18:27:29.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.424" endtime="20201030 18:27:29.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.113" endtime="20201030 18:27:29.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.111" endtime="20201030 18:27:29.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:29.454" level="INFO">${debug} = {'diff': [0, 4.720000000013602e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 1.3416999999998208e-05, 5.409999999997361e-07, 1.3528000000002233e-05, 4.860000000009301e-07, 1.2402999999997638e-05,...</msg>
<status status="PASS" starttime="20201030 18:27:29.429" endtime="20201030 18:27:29.455"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.455" endtime="20201030 18:27:29.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.461" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:29.460" endtime="20201030 18:27:29.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.465" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 1.3416999999998208e-05, 5.409999999997361e-07, 1.3528000000002233e-05, 4.860000000009301e-07, 1.2402999999997638e-05, 5.419999999992098e-07, 1.2500000000002093e-05, 5.409999999997361e-07, 9.499999999999093e-06, 4.7300000000083386e-07, 1.0054999999998399e-05, 4.720000000013602e-07, 1.3277999999998513e-05, 5.420000000026792e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.1041999999999302e-05, 5.409999999997361e-07, 1.1930999999999747e-05, 4.860000000009301e-07, 1.3417000000001678e-05, 5.409999999997361e-07, 1.0763999999999913e-05, 4.859999999974607e-07, 9.931000000001217e-06, 5.419999999992098e-07, 1.0180000000001993e-05, 4.859999999974607e-07, 1.0639000000003257e-05, 5.419999999992098e-07, 1.1207999999998663e-05, 4.860000000009301e-07, 1.1833999999998762e-05, 4.720000000013602e-07, 1.2985999999999553e-05, 5.419999999992098e-07, 1.2791000000001579e-05, 5.419999999992098e-07, 9.513999999998662e-06, 4.720000000013602e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.2499999999998623e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.1916000000000704e-05, 5.419999999992098e-07, 9.458000000000383e-06, 4.870000000004038e-07, 1.3124999999999248e-05, 5.409999999997361e-07, 1.2806000000000622e-05, 4.860000000009301e-07, 9.804999999998149e-06, 4.7300000000083386e-07, 1.1514000000000663e-05, 5.409999999997361e-07, 1.0459000000000857e-05, 5.409999999997361e-07, 1.0319999999997692e-05, 5.409999999997361e-07, 9.736000000003242e-06, 5.419999999992098e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.1471999999998483e-05, 5.420000000026792e-07, 1.2805999999997153e-05, 5.409999999997361e-07, 1.1931000000003217e-05, 4.859999999974607e-07, 9.792000000001522e-06, 4.7199999999789077e-07, 1.0944000000002313e-05, 5.419999999992098e-07, 1.1041999999999302e-05, 5.409999999997361e-07, 9.014000000001632e-06, 4.860000000009301e-07, 1.3124999999999248e-05, 5.419999999992098e-07, 1.2653000000001358e-05, 5.409999999997361e-07, 1.0319999999997692e-05, 4.860000000009301e-07, 9.624999999999218e-06, 5.420000000026792e-07, 1.2957999999996944e-05, 4.860000000009301e-07], 'time': [0.018810653, 0.018811125, 0.018823639, 0.018824125, 0.018837542, 0.018838083, 0.018851611, 0.018852097, 0.0188645, 0.018865042, 0.018877542, 0.018878083, 0.018887583, 0.018888056, 0.018898111, 0.018898583, 0.018911861, 0.018912403, 0.018923153, 0.018923694, 0.018937069, 0.018937611, 0.018948653, 0.018949194, 0.018961125, 0.018961611, 0.018975028, 0.018975569, 0.018986333, 0.018986819, 0.01899675, 0.018997292, 0.019007472, 0.019007958, 0.019018597, 0.019019139, 0.019030347, 0.019030833, 0.019042667, 0.019043139, 0.019056125, 0.019056667, 0.019069458, 0.01907, 0.019079514, 0.019079986, 0.019092778, 0.019093319, 0.019105819, 0.019106361, 0.019117111, 0.019117653, 0.019128986, 0.019129528, 0.019141444, 0.019141986, 0.019151444, 0.019151931, 0.019165056, 0.019165597, 0.019178403, 0.019178889, 0.019188694, 0.019189167, 0.019200681, 0.019201222, 0.019211681, 0.019212222, 0.019222542, 0.019223083, 0.019232819, 0.019233361, 0.019245875, 0.019246361, 0.019256569, 0.019257111, 0.019268583, 0.019269125, 0.019281931, 0.019282472, 0.019294403, 0.019294889, 0.019304681, 0.019305153, 0.019316097, 0.019316639, 0.019327681, 0.019328222, 0.019337236, 0.019337722, 0.019350847, 0.019351389, 0.019364042, 0.019364583, 0.019374903, 0.019375389, 0.019385014, 0.019385556, 0.019398514, 0.019399], 'eventsource_diff': [0, 4.720000000013602e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 1.3416999999998208e-05, 5.409999999997361e-07, 1.3528000000002233e-05, 4.860000000009301e-07, 1.2402999999997638e-05, 5.419999999992098e-07, 1.2500000000002093e-05, 5.409999999997361e-07, 9.499999999999093e-06, 4.7300000000083386e-07, 1.0054999999998399e-05, 4.720000000013602e-07, 1.3277999999998513e-05, 5.420000000026792e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.1041999999999302e-05, 5.409999999997361e-07, 1.1930999999999747e-05, 4.860000000009301e-07, 1.3417000000001678e-05, 5.409999999997361e-07, 1.0763999999999913e-05, 4.859999999974607e-07, 9.931000000001217e-06, 5.419999999992098e-07, 1.0180000000001993e-05, 4.859999999974607e-07, 1.0639000000003257e-05, 5.419999999992098e-07, 1.1207999999998663e-05, 4.860000000009301e-07, 1.1833999999998762e-05, 4.720000000013602e-07, 1.2985999999999553e-05, 5.419999999992098e-07, 1.2791000000001579e-05, 5.419999999992098e-07, 9.513999999998662e-06, 4.720000000013602e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.2499999999998623e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.1916000000000704e-05, 5.419999999992098e-07, 9.458000000000383e-06, 4.870000000004038e-07, 1.3124999999999248e-05, 5.409999999997361e-07, 1.2806000000000622e-05, 4.860000000009301e-07, 9.804999999998149e-06, 4.7300000000083386e-07, 1.1514000000000663e-05, 5.409999999997361e-07, 1.0459000000000857e-05, 5.409999999997361e-07, 1.0319999999997692e-05, 5.409999999997361e-07, 9.736000000003242e-06, 5.419999999992098e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.1471999999998483e-05, 5.420000000026792e-07, 1.2805999999997153e-05, 5.409999999997361e-07, 1.1931000000003217e-05, 4.859999999974607e-07, 9.792000000001522e-06, 4.7199999999789077e-07, 1.0944000000002313e-05, 5.419999999992098e-07, 1.1041999999999302e-05, 5.409999999997361e-07, 9.014000000001632e-06, 4.860000000009301e-07, 1.3124999999999248e-05, 5.419999999992098e-07, 1.2653000000001358e-05, 5.409999999997361e-07, 1.0319999999997692e-05, 4.860000000009301e-07, 9.624999999999218e-06, 5.420000000026792e-07, 1.2957999999996944e-05, 4.860000000009301e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:29.462" endtime="20201030 18:27:29.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.458" endtime="20201030 18:27:29.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:29.471" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:29.467" endtime="20201030 18:27:29.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:29.475" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.420...</msg>
<status status="PASS" starttime="20201030 18:27:29.472" endtime="20201030 18:27:29.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.480" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:29.478" endtime="20201030 18:27:29.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.482" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201030 18:27:29.481" endtime="20201030 18:27:29.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.476" endtime="20201030 18:27:29.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:29.487" endtime="20201030 18:27:29.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.486" endtime="20201030 18:27:29.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.484" endtime="20201030 18:27:29.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.087" endtime="20201030 18:27:29.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.086" endtime="20201030 18:27:29.508"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.516" endtime="20201030 18:27:29.526"></status>
</kw>
<msg timestamp="20201030 18:27:29.527" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.514" endtime="20201030 18:27:29.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.529" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.528" endtime="20201030 18:27:29.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.530" endtime="20201030 18:27:29.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.512" endtime="20201030 18:27:29.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.510" endtime="20201030 18:27:29.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.540" endtime="20201030 18:27:29.826"></status>
</kw>
<msg timestamp="20201030 18:27:29.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018873389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018873875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.538" endtime="20201030 18:27:29.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018873389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018873875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.830" endtime="20201030 18:27:29.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.839" endtime="20201030 18:27:29.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.536" endtime="20201030 18:27:29.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.534" endtime="20201030 18:27:29.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:29.868" level="INFO">${debug} = {'diff': [0, 4.859999999974607e-07, 9.042000000000772e-06, 5.409999999997361e-07, 1.3514000000002663e-05, 5.419999999992098e-07, 1.1346999999998358e-05, 4.860000000009301e-07, 1.1152999999999857e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:29.843" endtime="20201030 18:27:29.868"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.869" endtime="20201030 18:27:29.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.874" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:29.873" endtime="20201030 18:27:29.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.879" level="INFO">VALUE: {'diff': [0, 4.859999999974607e-07, 9.042000000000772e-06, 5.409999999997361e-07, 1.3514000000002663e-05, 5.419999999992098e-07, 1.1346999999998358e-05, 4.860000000009301e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 9.485999999999523e-06, 4.7300000000083386e-07, 1.2999999999999123e-05, 4.7199999999789077e-07, 1.2250000000001843e-05, 5.409999999997361e-07, 1.2945000000000317e-05, 4.860000000009301e-07, 1.2263999999997943e-05, 5.419999999992098e-07, 1.0166000000002423e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 9.041000000001298e-06, 4.7199999999789077e-07, 1.0486999999999996e-05, 5.409999999997361e-07, 1.1195000000002037e-05, 5.409999999997361e-07, 1.1764000000000913e-05, 5.419999999992098e-07, 1.1375000000000968e-05, 4.7199999999789077e-07, 1.1361000000001398e-05, 5.419999999992098e-07, 9.153000000001327e-06, 5.409999999997361e-07, 1.0333999999997262e-05, 4.720000000013602e-07, 1.0818999999998719e-05, 4.860000000009301e-07, 1.0361999999999871e-05, 4.860000000009301e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.0318999999998218e-05, 5.420000000026792e-07, 1.2374999999998498e-05, 4.720000000013602e-07, 1.2721999999999734e-05, 4.7199999999789077e-07, 1.1375000000000968e-05, 5.419999999992098e-07, 9.069999999999911e-06, 4.720000000013602e-07, 1.1778000000000483e-05, 5.409999999997361e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.1971999999998983e-05, 4.7300000000083386e-07, 1.3555000000001899e-05, 4.859999999974607e-07, 1.2098000000002052e-05, 5.409999999997361e-07, 1.3110999999999678e-05, 4.7300000000083386e-07, 1.0221999999997233e-05, 5.409999999997361e-07, 9.875000000002937e-06, 5.419999999992098e-07, 9.722000000000203e-06, 5.419999999992098e-07, 9.888999999999037e-06, 4.860000000009301e-07, 9.777999999998482e-06, 5.410000000032056e-07, 1.0902999999999607e-05, 4.859999999974607e-07, 1.3570000000000942e-05, 5.409999999997361e-07, 1.2362000000001871e-05, 5.409999999997361e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 1.0222000000000703e-05, 4.870000000004038e-07, 1.3415999999998734e-05, 5.419999999992098e-07, 1.1805000000000149e-05, 4.7300000000083386e-07, 1.0361000000000398e-05, 4.860000000009301e-07, 9.193999999997093e-06, 5.420000000026792e-07, 1.1777999999997013e-05, 4.860000000009301e-07], 'time': [0.018873389, 0.018873875, 0.018882917, 0.018883458, 0.018896972, 0.018897514, 0.018908861, 0.018909347, 0.0189205, 0.018920972, 0.018930458, 0.018930931, 0.018943931, 0.018944403, 0.018956653, 0.018957194, 0.018970139, 0.018970625, 0.018982889, 0.018983431, 0.018993597, 0.018994139, 0.019004889, 0.019005431, 0.019014472, 0.019014944, 0.019025431, 0.019025972, 0.019037167, 0.019037708, 0.019049472, 0.019050014, 0.019061389, 0.019061861, 0.019073222, 0.019073764, 0.019082917, 0.019083458, 0.019093792, 0.019094264, 0.019105083, 0.019105569, 0.019115931, 0.019116417, 0.019126625, 0.019127167, 0.019137486, 0.019138028, 0.019150403, 0.019150875, 0.019163597, 0.019164069, 0.019175444, 0.019175986, 0.019185056, 0.019185528, 0.019197306, 0.019197847, 0.019207722, 0.019208264, 0.019221056, 0.019221597, 0.019233569, 0.019234042, 0.019247597, 0.019248083, 0.019260181, 0.019260722, 0.019273833, 0.019274306, 0.019284528, 0.019285069, 0.019294944, 0.019295486, 0.019305208, 0.01930575, 0.019315639, 0.019316125, 0.019325903, 0.019326444, 0.019337347, 0.019337833, 0.019351403, 0.019351944, 0.019364306, 0.019364847, 0.019377361, 0.019377847, 0.019388069, 0.019388556, 0.019401972, 0.019402514, 0.019414319, 0.019414792, 0.019425153, 0.019425639, 0.019434833, 0.019435375, 0.019447153, 0.019447639], 'eventsource_diff': [0, 4.859999999974607e-07, 9.042000000000772e-06, 5.409999999997361e-07, 1.3514000000002663e-05, 5.419999999992098e-07, 1.1346999999998358e-05, 4.860000000009301e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 9.485999999999523e-06, 4.7300000000083386e-07, 1.2999999999999123e-05, 4.7199999999789077e-07, 1.2250000000001843e-05, 5.409999999997361e-07, 1.2945000000000317e-05, 4.860000000009301e-07, 1.2263999999997943e-05, 5.419999999992098e-07, 1.0166000000002423e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 9.041000000001298e-06, 4.7199999999789077e-07, 1.0486999999999996e-05, 5.409999999997361e-07, 1.1195000000002037e-05, 5.409999999997361e-07, 1.1764000000000913e-05, 5.419999999992098e-07, 1.1375000000000968e-05, 4.7199999999789077e-07, 1.1361000000001398e-05, 5.419999999992098e-07, 9.153000000001327e-06, 5.409999999997361e-07, 1.0333999999997262e-05, 4.720000000013602e-07, 1.0818999999998719e-05, 4.860000000009301e-07, 1.0361999999999871e-05, 4.860000000009301e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.0318999999998218e-05, 5.420000000026792e-07, 1.2374999999998498e-05, 4.720000000013602e-07, 1.2721999999999734e-05, 4.7199999999789077e-07, 1.1375000000000968e-05, 5.419999999992098e-07, 9.069999999999911e-06, 4.720000000013602e-07, 1.1778000000000483e-05, 5.409999999997361e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.1971999999998983e-05, 4.7300000000083386e-07, 1.3555000000001899e-05, 4.859999999974607e-07, 1.2098000000002052e-05, 5.409999999997361e-07, 1.3110999999999678e-05, 4.7300000000083386e-07, 1.0221999999997233e-05, 5.409999999997361e-07, 9.875000000002937e-06, 5.419999999992098e-07, 9.722000000000203e-06, 5.419999999992098e-07, 9.888999999999037e-06, 4.860000000009301e-07, 9.777999999998482e-06, 5.410000000032056e-07, 1.0902999999999607e-05, 4.859999999974607e-07, 1.3570000000000942e-05, 5.409999999997361e-07, 1.2362000000001871e-05, 5.409999999997361e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 1.0222000000000703e-05, 4.870000000004038e-07, 1.3415999999998734e-05, 5.419999999992098e-07, 1.1805000000000149e-05, 4.7300000000083386e-07, 1.0361000000000398e-05, 4.860000000009301e-07, 9.193999999997093e-06, 5.420000000026792e-07, 1.1777999999997013e-05, 4.860000000009301e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:29.875" endtime="20201030 18:27:29.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.871" endtime="20201030 18:27:29.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:29.884" level="INFO">${RESULT} = [{'diff': 4.859999999974607e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:27:29.881" endtime="20201030 18:27:29.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:29.889" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999974607e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 4.86...</msg>
<status status="PASS" starttime="20201030 18:27:29.885" endtime="20201030 18:27:29.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.893" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:29.892" endtime="20201030 18:27:29.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.896" level="INFO">VALUE: [4.859999999974607e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.410000000032056e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201030 18:27:29.894" endtime="20201030 18:27:29.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.890" endtime="20201030 18:27:29.897"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:29.900" endtime="20201030 18:27:29.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.899" endtime="20201030 18:27:29.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.898" endtime="20201030 18:27:29.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.509" endtime="20201030 18:27:29.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.508" endtime="20201030 18:27:29.921"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.930" endtime="20201030 18:27:29.941"></status>
</kw>
<msg timestamp="20201030 18:27:29.941" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.929" endtime="20201030 18:27:29.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.944" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.942" endtime="20201030 18:27:29.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.945" endtime="20201030 18:27:29.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.925" endtime="20201030 18:27:29.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.923" endtime="20201030 18:27:29.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.954" endtime="20201030 18:27:30.240"></status>
</kw>
<msg timestamp="20201030 18:27:30.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019765917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.952" endtime="20201030 18:27:30.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019765917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.245" endtime="20201030 18:27:30.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.254" endtime="20201030 18:27:30.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.950" endtime="20201030 18:27:30.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.948" endtime="20201030 18:27:30.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:30.282" level="INFO">${debug} = {'diff': [0, 4.860000000009301e-07, 1.0361000000000398e-05, 5.409999999997361e-07, 1.2791999999997583e-05, 5.420000000026792e-07, 1.2207999999999664e-05, 5.419999999992098e-07, 1.3083000000000539e-05,...</msg>
<status status="PASS" starttime="20201030 18:27:30.257" endtime="20201030 18:27:30.282"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.283" endtime="20201030 18:27:30.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.288" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:30.287" endtime="20201030 18:27:30.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.293" level="INFO">VALUE: {'diff': [0, 4.860000000009301e-07, 1.0361000000000398e-05, 5.409999999997361e-07, 1.2791999999997583e-05, 5.420000000026792e-07, 1.2207999999999664e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.0027999999998732e-05, 5.409999999997361e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.1805999999999622e-05, 5.409999999997361e-07, 9.181000000000467e-06, 4.720000000013602e-07, 9.485999999999523e-06, 5.419999999992098e-07, 1.3513999999999193e-05, 5.420000000026792e-07, 9.901999999999134e-06, 4.7300000000083386e-07, 9.624999999999218e-06, 5.409999999997361e-07, 1.0027999999998732e-05, 5.420000000026792e-07, 9.151999999998384e-06, 4.870000000004038e-07, 9.055000000000868e-06, 5.419999999992098e-07, 1.1818999999999719e-05, 4.720000000013602e-07, 1.1069999999998442e-05, 4.860000000009301e-07, 1.2694000000000594e-05, 5.419999999992098e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 1.1236000000001273e-05, 5.419999999992098e-07, 1.2499999999998623e-05, 5.409999999997361e-07, 9.583999999999981e-06, 5.409999999997361e-07, 1.2000000000001593e-05, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.870000000004038e-07, 1.1666000000000454e-05, 5.419999999992098e-07, 1.0332999999997788e-05, 4.860000000009301e-07, 1.1223000000001176e-05, 5.409999999997361e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 9.444000000000813e-06, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.2945000000000317e-05, 5.409999999997361e-07, 1.1472999999997957e-05, 5.410000000032056e-07, 1.0902999999999607e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 1.1487000000000996e-05, 5.409999999997361e-07, 1.1624999999997748e-05, 5.419999999992098e-07, 1.2208000000003133e-05, 5.419999999992098e-07, 1.1764000000000913e-05, 5.409999999997361e-07, 1.3236999999999277e-05, 5.409999999997361e-07, 1.1917000000000177e-05, 5.419999999992098e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 9.054999999997398e-06, 4.870000000004038e-07, 9.055000000000868e-06, 4.860000000009301e-07, 1.0652999999999357e-05, 5.419999999992098e-07, 1.2375000000001968e-05, 4.859999999974607e-07, 1.2097000000002578e-05, 5.419999999992098e-07, 1.0165999999998954e-05, 5.419999999992098e-07, 1.0902999999999607e-05, 5.409999999997361e-07, 9.431000000000717e-06, 5.419999999992098e-07], 'time': [0.019765431, 0.019765917, 0.019776278, 0.019776819, 0.019789611, 0.019790153, 0.019802361, 0.019802903, 0.019815986, 0.019816528, 0.019826556, 0.019827097, 0.019837861, 0.019838347, 0.019850153, 0.019850694, 0.019859875, 0.019860347, 0.019869833, 0.019870375, 0.019883889, 0.019884431, 0.019894333, 0.019894806, 0.019904431, 0.019904972, 0.019915, 0.019915542, 0.019924694, 0.019925181, 0.019934236, 0.019934778, 0.019946597, 0.019947069, 0.019958139, 0.019958625, 0.019971319, 0.019971861, 0.019985389, 0.019985875, 0.019997111, 0.019997653, 0.020010153, 0.020010694, 0.020020278, 0.020020819, 0.020032819, 0.020033292, 0.020043319, 0.020043806, 0.020055472, 0.020056014, 0.020066347, 0.020066833, 0.020078056, 0.020078597, 0.020089347, 0.020089889, 0.020099333, 0.020099875, 0.020112667, 0.020113208, 0.020126153, 0.020126694, 0.020138167, 0.020138708, 0.020149611, 0.020150153, 0.020160903, 0.020161444, 0.020172931, 0.020173472, 0.020185097, 0.020185639, 0.020197847, 0.020198389, 0.020210153, 0.020210694, 0.020223931, 0.020224472, 0.020236389, 0.020236931, 0.020247417, 0.020247889, 0.020256944, 0.020257431, 0.020266486, 0.020266972, 0.020277625, 0.020278167, 0.020290542, 0.020291028, 0.020303125, 0.020303667, 0.020313833, 0.020314375, 0.020325278, 0.020325819, 0.02033525, 0.020335792], 'eventsource_diff': [0, 4.860000000009301e-07, 1.0361000000000398e-05, 5.409999999997361e-07, 1.2791999999997583e-05, 5.420000000026792e-07, 1.2207999999999664e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.0027999999998732e-05, 5.409999999997361e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.1805999999999622e-05, 5.409999999997361e-07, 9.181000000000467e-06, 4.720000000013602e-07, 9.485999999999523e-06, 5.419999999992098e-07, 1.3513999999999193e-05, 5.420000000026792e-07, 9.901999999999134e-06, 4.7300000000083386e-07, 9.624999999999218e-06, 5.409999999997361e-07, 1.0027999999998732e-05, 5.420000000026792e-07, 9.151999999998384e-06, 4.870000000004038e-07, 9.055000000000868e-06, 5.419999999992098e-07, 1.1818999999999719e-05, 4.720000000013602e-07, 1.1069999999998442e-05, 4.860000000009301e-07, 1.2694000000000594e-05, 5.419999999992098e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 1.1236000000001273e-05, 5.419999999992098e-07, 1.2499999999998623e-05, 5.409999999997361e-07, 9.583999999999981e-06, 5.409999999997361e-07, 1.2000000000001593e-05, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.870000000004038e-07, 1.1666000000000454e-05, 5.419999999992098e-07, 1.0332999999997788e-05, 4.860000000009301e-07, 1.1223000000001176e-05, 5.409999999997361e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 9.444000000000813e-06, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.2945000000000317e-05, 5.409999999997361e-07, 1.1472999999997957e-05, 5.410000000032056e-07, 1.0902999999999607e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 1.1487000000000996e-05, 5.409999999997361e-07, 1.1624999999997748e-05, 5.419999999992098e-07, 1.2208000000003133e-05, 5.419999999992098e-07, 1.1764000000000913e-05, 5.409999999997361e-07, 1.3236999999999277e-05, 5.409999999997361e-07, 1.1917000000000177e-05, 5.419999999992098e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 9.054999999997398e-06, 4.870000000004038e-07, 9.055000000000868e-06, 4.860000000009301e-07, 1.0652999999999357e-05, 5.419999999992098e-07, 1.2375000000001968e-05, 4.859999999974607e-07, 1.2097000000002578e-05, 5.419999999992098e-07, 1.0165999999998954e-05, 5.419999999992098e-07, 1.0902999999999607e-05, 5.409999999997361e-07, 9.431000000000717e-06, 5.419999999992098e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:30.289" endtime="20201030 18:27:30.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.285" endtime="20201030 18:27:30.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:30.298" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.420000000026792e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:30.295" endtime="20201030 18:27:30.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:30.303" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.7200...</msg>
<status status="PASS" starttime="20201030 18:27:30.299" endtime="20201030 18:27:30.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.307" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:30.306" endtime="20201030 18:27:30.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.310" level="INFO">VALUE: [4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.410000000032056e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:27:30.309" endtime="20201030 18:27:30.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.304" endtime="20201030 18:27:30.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:30.315" endtime="20201030 18:27:30.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.313" endtime="20201030 18:27:30.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.312" endtime="20201030 18:27:30.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.922" endtime="20201030 18:27:30.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.922" endtime="20201030 18:27:30.335"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.344" endtime="20201030 18:27:30.354"></status>
</kw>
<msg timestamp="20201030 18:27:30.354" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.342" endtime="20201030 18:27:30.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.357" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.355" endtime="20201030 18:27:30.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.358" endtime="20201030 18:27:30.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.339" endtime="20201030 18:27:30.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.337" endtime="20201030 18:27:30.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.367" endtime="20201030 18:27:30.653"></status>
</kw>
<msg timestamp="20201030 18:27:30.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018863361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018863847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.365" endtime="20201030 18:27:30.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018863361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018863847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.658" endtime="20201030 18:27:30.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.667" endtime="20201030 18:27:30.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.363" endtime="20201030 18:27:30.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.361" endtime="20201030 18:27:30.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:30.704" level="INFO">${debug} = {'diff': [0, 4.860000000009301e-07, 1.2264000000001413e-05, 4.859999999974607e-07, 1.0209000000000606e-05, 5.409999999997361e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.0500000000000093e-05,...</msg>
<status status="PASS" starttime="20201030 18:27:30.670" endtime="20201030 18:27:30.704"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.705" endtime="20201030 18:27:30.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.710" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:30.709" endtime="20201030 18:27:30.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.715" level="INFO">VALUE: {'diff': [0, 4.860000000009301e-07, 1.2264000000001413e-05, 4.859999999974607e-07, 1.0209000000000606e-05, 5.409999999997361e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.0500000000000093e-05, 5.419999999992098e-07, 1.2361000000002398e-05, 5.419999999992098e-07, 1.2068999999999969e-05, 4.860000000009301e-07, 1.2416999999997208e-05, 4.860000000009301e-07, 1.2542000000000803e-05, 5.409999999997361e-07, 1.0166999999998427e-05, 5.420000000026792e-07, 1.1930000000000274e-05, 4.859999999974607e-07, 9.485999999999523e-06, 5.420000000026792e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.1917000000000177e-05, 5.409999999997361e-07, 9.431000000000717e-06, 5.419999999992098e-07, 1.0193999999998093e-05, 4.860000000009301e-07, 1.1819999999999192e-05, 4.860000000009301e-07, 1.1236000000001273e-05, 5.419999999992098e-07, 1.176299999999797e-05, 5.420000000026792e-07, 1.1778000000000483e-05, 5.419999999992098e-07, 1.0763000000000439e-05, 4.870000000004038e-07, 1.1818999999999719e-05, 5.419999999992098e-07, 1.0597000000001078e-05, 5.419999999992098e-07, 1.1916000000000704e-05, 5.419999999992098e-07, 1.0027999999998732e-05, 5.409999999997361e-07, 1.2514000000001663e-05, 4.859999999974607e-07, 1.2403000000001108e-05, 5.419999999992098e-07, 1.0014000000002632e-05, 5.409999999997361e-07, 1.3527999999998763e-05, 5.419999999992098e-07, 1.2346999999999358e-05, 5.420000000026792e-07, 1.2401999999998164e-05, 4.7300000000083386e-07, 1.2527000000001759e-05, 5.419999999992098e-07, 1.1624999999997748e-05, 5.420000000026792e-07, 9.152999999997857e-06, 5.409999999997361e-07, 1.1917000000000177e-05, 5.419999999992098e-07, 1.2513000000002189e-05, 4.870000000004038e-07, 9.040999999997829e-06, 5.420000000026792e-07, 1.1624999999997748e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 1.0195000000001037e-05, 4.720000000013602e-07, 1.1389000000000538e-05, 4.859999999974607e-07, 1.1972000000002453e-05, 5.419999999992098e-07, 1.0165999999998954e-05, 5.419999999992098e-07, 9.431000000000717e-06, 5.409999999997361e-07, 1.0167000000001897e-05, 5.419999999992098e-07, 1.0472000000000953e-05, 4.859999999974607e-07, 1.3153000000001858e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 1.2388999999998068e-05, 5.409999999997361e-07, 1.3278000000001983e-05, 4.7199999999789077e-07], 'time': [0.018863361, 0.018863847, 0.018876111, 0.018876597, 0.018886806, 0.018887347, 0.018898111, 0.018898597, 0.018909097, 0.018909639, 0.018922, 0.018922542, 0.018934611, 0.018935097, 0.018947514, 0.018948, 0.018960542, 0.018961083, 0.01897125, 0.018971792, 0.018983722, 0.018984208, 0.018993694, 0.018994236, 0.019007319, 0.019007861, 0.019019778, 0.019020319, 0.01902975, 0.019030292, 0.019040486, 0.019040972, 0.019052792, 0.019053278, 0.019064514, 0.019065056, 0.019076819, 0.019077361, 0.019089139, 0.019089681, 0.019100444, 0.019100931, 0.01911275, 0.019113292, 0.019123889, 0.019124431, 0.019136347, 0.019136889, 0.019146917, 0.019147458, 0.019159972, 0.019160458, 0.019172861, 0.019173403, 0.019183417, 0.019183958, 0.019197486, 0.019198028, 0.019210375, 0.019210917, 0.019223319, 0.019223792, 0.019236319, 0.019236861, 0.019248486, 0.019249028, 0.019258181, 0.019258722, 0.019270639, 0.019271181, 0.019283694, 0.019284181, 0.019293222, 0.019293764, 0.019305389, 0.019305931, 0.019316681, 0.019317222, 0.019327417, 0.019327889, 0.019339278, 0.019339764, 0.019351736, 0.019352278, 0.019362444, 0.019362986, 0.019372417, 0.019372958, 0.019383125, 0.019383667, 0.019394139, 0.019394625, 0.019407778, 0.019408264, 0.019421403, 0.019421889, 0.019434278, 0.019434819, 0.019448097, 0.019448569], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.860000000009301e-07, 1.2264000000001413e-05, 4.859999999974607e-07, 1.0209000000000606e-05, 5.409999999997361e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.0500000000000093e-05, 5.419999999992098e-07, 1.2361000000002398e-05, 5.419999999992098e-07, 1.2068999999999969e-05, 4.860000000009301e-07, 1.2416999999997208e-05, 4.860000000009301e-07, 1.2542000000000803e-05, 5.409999999997361e-07, 1.0166999999998427e-05, 5.420000000026792e-07, 1.1930000000000274e-05, 4.859999999974607e-07, 9.485999999999523e-06, 5.420000000026792e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.1917000000000177e-05, 5.409999999997361e-07, 9.431000000000717e-06, 5.419999999992098e-07, 1.0193999999998093e-05, 4.860000000009301e-07, 1.1819999999999192e-05, 4.860000000009301e-07, 1.1236000000001273e-05, 5.419999999992098e-07, 1.176299999999797e-05, 5.420000000026792e-07, 1.1778000000000483e-05, 5.419999999992098e-07, 1.0763000000000439e-05, 4.870000000004038e-07, 1.1818999999999719e-05, 5.419999999992098e-07, 1.0597000000001078e-05, 5.419999999992098e-07, 1.1916000000000704e-05, 5.419999999992098e-07, 1.0027999999998732e-05, 5.409999999997361e-07, 1.2514000000001663e-05, 4.859999999974607e-07, 1.2403000000001108e-05, 5.419999999992098e-07, 1.0014000000002632e-05, 5.409999999997361e-07, 1.3527999999998763e-05, 5.419999999992098e-07, 1.2346999999999358e-05, 5.420000000026792e-07, 1.2401999999998164e-05, 4.7300000000083386e-07, 1.2527000000001759e-05, 5.419999999992098e-07, 1.1624999999997748e-05, 5.420000000026792e-07, 9.152999999997857e-06, 5.409999999997361e-07, 1.1917000000000177e-05, 5.419999999992098e-07, 1.2513000000002189e-05, 4.870000000004038e-07, 9.040999999997829e-06, 5.420000000026792e-07, 1.1624999999997748e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 1.0195000000001037e-05, 4.720000000013602e-07, 1.1389000000000538e-05, 4.859999999974607e-07, 1.1972000000002453e-05, 5.419999999992098e-07, 1.0165999999998954e-05, 5.419999999992098e-07, 9.431000000000717e-06, 5.409999999997361e-07, 1.0167000000001897e-05, 5.419999999992098e-07, 1.0472000000000953e-05, 4.859999999974607e-07, 1.3153000000001858e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 1.2388999999998068e-05, 5.409999999997361e-07, 1.3278000000001983e-05, 4.7199999999789077e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:30.711" endtime="20201030 18:27:30.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.707" endtime="20201030 18:27:30.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:30.720" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.859999999974607e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:30.717" endtime="20201030 18:27:30.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:30.725" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.4099...</msg>
<status status="PASS" starttime="20201030 18:27:30.721" endtime="20201030 18:27:30.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.729" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:30.728" endtime="20201030 18:27:30.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.732" level="INFO">VALUE: [4.860000000009301e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 18:27:30.730" endtime="20201030 18:27:30.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.725" endtime="20201030 18:27:30.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:30.736" endtime="20201030 18:27:30.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.735" endtime="20201030 18:27:30.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.734" endtime="20201030 18:27:30.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.336" endtime="20201030 18:27:30.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.336" endtime="20201030 18:27:30.757"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.765" endtime="20201030 18:27:30.775"></status>
</kw>
<msg timestamp="20201030 18:27:30.776" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.763" endtime="20201030 18:27:30.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.778" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.777" endtime="20201030 18:27:30.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.779" endtime="20201030 18:27:30.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.761" endtime="20201030 18:27:30.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.759" endtime="20201030 18:27:30.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.788" endtime="20201030 18:27:31.089"></status>
</kw>
<msg timestamp="20201030 18:27:31.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018511111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018511597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.786" endtime="20201030 18:27:31.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018511111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018511597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.093" endtime="20201030 18:27:31.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.101" endtime="20201030 18:27:31.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.784" endtime="20201030 18:27:31.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.782" endtime="20201030 18:27:31.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:31.129" level="INFO">${debug} = {'diff': [0, 4.860000000009301e-07, 1.0527999999999232e-05, 4.7199999999789077e-07, 1.0653000000002827e-05, 5.419999999992098e-07, 1.1193999999999094e-05, 5.419999999992098e-07, 1.0903000000003077e-05...</msg>
<status status="PASS" starttime="20201030 18:27:31.105" endtime="20201030 18:27:31.129"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.130" endtime="20201030 18:27:31.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.135" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:31.134" endtime="20201030 18:27:31.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.139" level="INFO">VALUE: {'diff': [0, 4.860000000009301e-07, 1.0527999999999232e-05, 4.7199999999789077e-07, 1.0653000000002827e-05, 5.419999999992098e-07, 1.1193999999999094e-05, 5.419999999992098e-07, 1.0903000000003077e-05, 4.859999999974607e-07, 1.1832999999999289e-05, 4.860000000009301e-07, 1.3570000000000942e-05, 4.860000000009301e-07, 1.3429999999998304e-05, 5.419999999992098e-07, 1.1625000000001218e-05, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.351299999999972e-05, 5.419999999992098e-07, 9.445000000000286e-06, 5.409999999997361e-07, 1.1486000000001523e-05, 5.419999999992098e-07, 1.3222000000000234e-05, 5.419999999992098e-07, 1.2958000000000414e-05, 4.860000000009301e-07, 1.1958999999998887e-05, 5.409999999997361e-07, 1.1792000000000052e-05, 4.720000000013602e-07, 1.3138999999998818e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.409999999997361e-07, 1.0028000000002202e-05, 4.860000000009301e-07, 1.2695000000000067e-05, 5.409999999997361e-07, 1.2945000000000317e-05, 4.859999999974607e-07, 1.0513999999999663e-05, 5.420000000026792e-07, 1.0304999999998649e-05, 5.419999999992098e-07, 1.1778000000000483e-05, 5.409999999997361e-07, 1.1472000000001953e-05, 5.419999999992098e-07, 9.735999999999773e-06, 5.419999999992098e-07, 1.0319000000001688e-05, 5.1400000000007e-07, 1.1069999999998442e-05, 5.409999999997361e-07, 1.3235999999999803e-05, 4.870000000004038e-07, 1.3415999999998734e-05, 5.420000000026792e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 1.1528000000000233e-05, 5.409999999997361e-07, 1.0180999999997997e-05, 4.860000000009301e-07, 1.1666999999999927e-05, 5.409999999997361e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 9.305000000001118e-06, 4.860000000009301e-07, 1.2263999999997943e-05, 4.860000000009301e-07, 1.2695000000000067e-05, 5.419999999992098e-07, 1.3375000000002968e-05, 5.409999999997361e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 1.3570000000000942e-05, 5.409999999997361e-07, 1.1472999999997957e-05, 5.409999999997361e-07, 1.3375000000002968e-05, 5.419999999992098e-07, 1.3249999999999373e-05, 4.860000000009301e-07, 1.2110999999998678e-05, 5.419999999992098e-07, 1.0680000000002493e-05, 4.729999999973644e-07, 9.138000000002283e-06, 5.419999999992098e-07, 1.0305999999998122e-05, 5.409999999997361e-07], 'time': [0.018511111, 0.018511597, 0.018522125, 0.018522597, 0.01853325, 0.018533792, 0.018544986, 0.018545528, 0.018556431, 0.018556917, 0.01856875, 0.018569236, 0.018582806, 0.018583292, 0.018596722, 0.018597264, 0.018608889, 0.018609431, 0.018620764, 0.018621306, 0.018634819, 0.018635361, 0.018644806, 0.018645347, 0.018656833, 0.018657375, 0.018670597, 0.018671139, 0.018684097, 0.018684583, 0.018696542, 0.018697083, 0.018708875, 0.018709347, 0.018722486, 0.018723028, 0.018732903, 0.018733444, 0.018743472, 0.018743958, 0.018756653, 0.018757194, 0.018770139, 0.018770625, 0.018781139, 0.018781681, 0.018791986, 0.018792528, 0.018804306, 0.018804847, 0.018816319, 0.018816861, 0.018826597, 0.018827139, 0.018837458, 0.018837972, 0.018849042, 0.018849583, 0.018862819, 0.018863306, 0.018876722, 0.018877264, 0.018889778, 0.018890264, 0.018901792, 0.018902333, 0.018912514, 0.018913, 0.018924667, 0.018925208, 0.018935958, 0.0189365, 0.018947111, 0.018947653, 0.018956958, 0.018957444, 0.018969708, 0.018970194, 0.018982889, 0.018983431, 0.018996806, 0.018997347, 0.019009861, 0.019010347, 0.019023917, 0.019024458, 0.019035931, 0.019036472, 0.019049847, 0.019050389, 0.019063639, 0.019064125, 0.019076236, 0.019076778, 0.019087458, 0.019087931, 0.019097069, 0.019097611, 0.019107917, 0.019108458], 'eventsource_diff': [0, 4.860000000009301e-07, 1.0527999999999232e-05, 4.7199999999789077e-07, 1.0653000000002827e-05, 5.419999999992098e-07, 1.1193999999999094e-05, 5.419999999992098e-07, 1.0903000000003077e-05, 4.859999999974607e-07, 1.1832999999999289e-05, 4.860000000009301e-07, 1.3570000000000942e-05, 4.860000000009301e-07, 1.3429999999998304e-05, 5.419999999992098e-07, 1.1625000000001218e-05, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.351299999999972e-05, 5.419999999992098e-07, 9.445000000000286e-06, 5.409999999997361e-07, 1.1486000000001523e-05, 5.419999999992098e-07, 1.3222000000000234e-05, 5.419999999992098e-07, 1.2958000000000414e-05, 4.860000000009301e-07, 1.1958999999998887e-05, 5.409999999997361e-07, 1.1792000000000052e-05, 4.720000000013602e-07, 1.3138999999998818e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.409999999997361e-07, 1.0028000000002202e-05, 4.860000000009301e-07, 1.2695000000000067e-05, 5.409999999997361e-07, 1.2945000000000317e-05, 4.859999999974607e-07, 1.0513999999999663e-05, 5.420000000026792e-07, 1.0304999999998649e-05, 5.419999999992098e-07, 1.1778000000000483e-05, 5.409999999997361e-07, 1.1472000000001953e-05, 5.419999999992098e-07, 9.735999999999773e-06, 5.419999999992098e-07, 1.0319000000001688e-05, 5.1400000000007e-07, 1.1069999999998442e-05, 5.409999999997361e-07, 1.3235999999999803e-05, 4.870000000004038e-07, 1.3415999999998734e-05, 5.420000000026792e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 1.1528000000000233e-05, 5.409999999997361e-07, 1.0180999999997997e-05, 4.860000000009301e-07, 1.1666999999999927e-05, 5.409999999997361e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 9.305000000001118e-06, 4.860000000009301e-07, 1.2263999999997943e-05, 4.860000000009301e-07, 1.2695000000000067e-05, 5.419999999992098e-07, 1.3375000000002968e-05, 5.409999999997361e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 1.3570000000000942e-05, 5.409999999997361e-07, 1.1472999999997957e-05, 5.409999999997361e-07, 1.3375000000002968e-05, 5.419999999992098e-07, 1.3249999999999373e-05, 4.860000000009301e-07, 1.2110999999998678e-05, 5.419999999992098e-07, 1.0680000000002493e-05, 4.729999999973644e-07, 9.138000000002283e-06, 5.419999999992098e-07, 1.0305999999998122e-05, 5.409999999997361e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:31.136" endtime="20201030 18:27:31.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.132" endtime="20201030 18:27:31.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:31.145" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.860000000009301e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:27:31.142" endtime="20201030 18:27:31.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:31.149" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419...</msg>
<status status="PASS" starttime="20201030 18:27:31.146" endtime="20201030 18:27:31.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.153" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:31.152" endtime="20201030 18:27:31.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.155" level="INFO">VALUE: [4.860000000009301e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.1400000000007e-07, 5.409999999997361e-07, 4.870000000004038e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.729999999973644e-07, 5.419999999992098e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:27:31.154" endtime="20201030 18:27:31.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.150" endtime="20201030 18:27:31.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:31.160" endtime="20201030 18:27:31.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.158" endtime="20201030 18:27:31.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.157" endtime="20201030 18:27:31.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.758" endtime="20201030 18:27:31.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.757" endtime="20201030 18:27:31.181"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.190" endtime="20201030 18:27:31.200"></status>
</kw>
<msg timestamp="20201030 18:27:31.201" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.188" endtime="20201030 18:27:31.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.203" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.202" endtime="20201030 18:27:31.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.204" endtime="20201030 18:27:31.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.185" endtime="20201030 18:27:31.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.183" endtime="20201030 18:27:31.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.213" endtime="20201030 18:27:31.501"></status>
</kw>
<msg timestamp="20201030 18:27:31.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.212" endtime="20201030 18:27:31.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.506" endtime="20201030 18:27:31.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.514" endtime="20201030 18:27:31.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.209" endtime="20201030 18:27:31.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.207" endtime="20201030 18:27:31.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:31.541" level="INFO">${debug} = {'diff': [0, 5.409999999997361e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 9.195000000000036e-06, 5.409999999997361e-07, 1.0320000000001162e-05, 5.409999999997361e-07, 9.152999999997857e-06, 4...</msg>
<status status="PASS" starttime="20201030 18:27:31.518" endtime="20201030 18:27:31.541"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.542" endtime="20201030 18:27:31.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.547" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:31.546" endtime="20201030 18:27:31.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.551" level="INFO">VALUE: {'diff': [0, 5.409999999997361e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 9.195000000000036e-06, 5.409999999997361e-07, 1.0320000000001162e-05, 5.409999999997361e-07, 9.152999999997857e-06, 4.860000000009301e-07, 1.2985999999999553e-05, 5.419999999992098e-07, 1.2207999999999664e-05, 5.420000000026792e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.0319000000001688e-05, 5.419999999992098e-07, 1.2638999999998318e-05, 5.409999999997361e-07, 9.597999999999551e-06, 4.860000000009301e-07, 1.3416000000002204e-05, 5.419999999992098e-07, 9.306000000000592e-06, 5.409999999997361e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.0458000000001383e-05, 5.419999999992098e-07, 1.1346999999998358e-05, 4.860000000009301e-07, 1.3472000000000484e-05, 4.7300000000083386e-07, 1.2819000000000719e-05, 4.859999999974607e-07, 1.0792000000002522e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.409999999997361e-07, 1.1639000000000788e-05, 4.859999999974607e-07, 1.3570000000000942e-05, 5.409999999997361e-07, 1.2069999999999442e-05, 5.410000000032056e-07, 9.583999999999981e-06, 5.409999999997361e-07, 1.3222999999999707e-05, 5.409999999997361e-07, 9.291999999997552e-06, 5.420000000026792e-07, 9.597000000000078e-06, 4.859999999974607e-07, 1.0513999999999663e-05, 5.420000000026792e-07, 1.0596999999997608e-05, 5.409999999997361e-07, 1.3084000000000012e-05, 5.410000000032056e-07, 1.0612000000000121e-05, 5.409999999997361e-07, 1.0166999999998427e-05, 5.419999999992098e-07, 1.3097000000000109e-05, 4.860000000009301e-07, 1.1403000000000107e-05, 4.720000000013602e-07, 1.2999999999999123e-05, 4.860000000009301e-07, 1.1680999999999497e-05, 4.859999999974607e-07, 1.3277000000002509e-05, 4.870000000004038e-07, 1.2693999999997124e-05, 5.420000000026792e-07, 9.443999999997343e-06, 5.420000000026792e-07, 1.1179999999999524e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.2374999999998498e-05, 4.860000000009301e-07, 1.2695000000000067e-05, 5.419999999992098e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 1.0763999999999913e-05, 5.409999999997361e-07, 1.1486999999997527e-05, 5.410000000032056e-07, 1.0166999999998427e-05, 5.419999999992098e-07, 1.0902000000000134e-05, 5.419999999992098e-07, 1.2639000000001788e-05, 5.419999999992098e-07, 1.2500000000002093e-05, 5.409999999997361e-07], 'time': [0.019551681, 0.019552222, 0.019562264, 0.019562736, 0.019571931, 0.019572472, 0.019582792, 0.019583333, 0.019592486, 0.019592972, 0.019605958, 0.0196065, 0.019618708, 0.01961925, 0.019629125, 0.019629667, 0.019639986, 0.019640528, 0.019653167, 0.019653708, 0.019663306, 0.019663792, 0.019677208, 0.01967775, 0.019687056, 0.019687597, 0.019697472, 0.019698014, 0.019708472, 0.019709014, 0.019720361, 0.019720847, 0.019734319, 0.019734792, 0.019747611, 0.019748097, 0.019758889, 0.019759431, 0.019769306, 0.019769847, 0.019781486, 0.019781972, 0.019795542, 0.019796083, 0.019808153, 0.019808694, 0.019818278, 0.019818819, 0.019832042, 0.019832583, 0.019841875, 0.019842417, 0.019852014, 0.0198525, 0.019863014, 0.019863556, 0.019874153, 0.019874694, 0.019887778, 0.019888319, 0.019898931, 0.019899472, 0.019909639, 0.019910181, 0.019923278, 0.019923764, 0.019935167, 0.019935639, 0.019948639, 0.019949125, 0.019960806, 0.019961292, 0.019974569, 0.019975056, 0.01998775, 0.019988292, 0.019997736, 0.019998278, 0.020009458, 0.02001, 0.020022792, 0.020023333, 0.020035708, 0.020036194, 0.020048889, 0.020049431, 0.020059792, 0.020060264, 0.020071028, 0.020071569, 0.020083056, 0.020083597, 0.020093764, 0.020094306, 0.020105208, 0.02010575, 0.020118389, 0.020118931, 0.020131431, 0.020131972], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 5.409999999997361e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 9.195000000000036e-06, 5.409999999997361e-07, 1.0320000000001162e-05, 5.409999999997361e-07, 9.152999999997857e-06, 4.860000000009301e-07, 1.2985999999999553e-05, 5.419999999992098e-07, 1.2207999999999664e-05, 5.420000000026792e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.0319000000001688e-05, 5.419999999992098e-07, 1.2638999999998318e-05, 5.409999999997361e-07, 9.597999999999551e-06, 4.860000000009301e-07, 1.3416000000002204e-05, 5.419999999992098e-07, 9.306000000000592e-06, 5.409999999997361e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.0458000000001383e-05, 5.419999999992098e-07, 1.1346999999998358e-05, 4.860000000009301e-07, 1.3472000000000484e-05, 4.7300000000083386e-07, 1.2819000000000719e-05, 4.859999999974607e-07, 1.0792000000002522e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.409999999997361e-07, 1.1639000000000788e-05, 4.859999999974607e-07, 1.3570000000000942e-05, 5.409999999997361e-07, 1.2069999999999442e-05, 5.410000000032056e-07, 9.583999999999981e-06, 5.409999999997361e-07, 1.3222999999999707e-05, 5.409999999997361e-07, 9.291999999997552e-06, 5.420000000026792e-07, 9.597000000000078e-06, 4.859999999974607e-07, 1.0513999999999663e-05, 5.420000000026792e-07, 1.0596999999997608e-05, 5.409999999997361e-07, 1.3084000000000012e-05, 5.410000000032056e-07, 1.0612000000000121e-05, 5.409999999997361e-07, 1.0166999999998427e-05, 5.419999999992098e-07, 1.3097000000000109e-05, 4.860000000009301e-07, 1.1403000000000107e-05, 4.720000000013602e-07, 1.2999999999999123e-05, 4.860000000009301e-07, 1.1680999999999497e-05, 4.859999999974607e-07, 1.3277000000002509e-05, 4.870000000004038e-07, 1.2693999999997124e-05, 5.420000000026792e-07, 9.443999999997343e-06, 5.420000000026792e-07, 1.1179999999999524e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.2374999999998498e-05, 4.860000000009301e-07, 1.2695000000000067e-05, 5.419999999992098e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 1.0763999999999913e-05, 5.409999999997361e-07, 1.1486999999997527e-05, 5.410000000032056e-07, 1.0166999999998427e-05, 5.419999999992098e-07, 1.0902000000000134e-05, 5.419999999992098e-07, 1.2639000000001788e-05, 5.419999999992098e-07, 1.2500000000002093e-05, 5.409999999997361e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:31.548" endtime="20201030 18:27:31.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.544" endtime="20201030 18:27:31.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:31.556" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 4.720000000013602e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:31.553" endtime="20201030 18:27:31.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:31.561" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:27:31.557" endtime="20201030 18:27:31.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.565" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:31.564" endtime="20201030 18:27:31.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.568" level="INFO">VALUE: [5.409999999997361e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.410000000032056e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.410000000032056e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.870000000004038e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.410000000032056e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:27:31.566" endtime="20201030 18:27:31.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.562" endtime="20201030 18:27:31.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:31.572" endtime="20201030 18:27:31.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.571" endtime="20201030 18:27:31.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.570" endtime="20201030 18:27:31.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.181" endtime="20201030 18:27:31.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.181" endtime="20201030 18:27:31.593"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.601" endtime="20201030 18:27:31.611"></status>
</kw>
<msg timestamp="20201030 18:27:31.612" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.599" endtime="20201030 18:27:31.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.614" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.613" endtime="20201030 18:27:31.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.615" endtime="20201030 18:27:31.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.597" endtime="20201030 18:27:31.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.595" endtime="20201030 18:27:31.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.624" endtime="20201030 18:27:31.910"></status>
</kw>
<msg timestamp="20201030 18:27:31.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018166917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018167458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.623" endtime="20201030 18:27:31.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018166917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018167458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.915" endtime="20201030 18:27:31.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.923" endtime="20201030 18:27:31.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.620" endtime="20201030 18:27:31.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.618" endtime="20201030 18:27:31.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:31.949" level="INFO">${debug} = {'diff': [0, 5.409999999997361e-07, 1.1403000000000107e-05, 4.7199999999789077e-07, 1.2639000000001788e-05, 5.419999999992098e-07, 9.735999999999773e-06, 5.419999999992098e-07, 1.1333000000002258e-05,...</msg>
<status status="PASS" starttime="20201030 18:27:31.926" endtime="20201030 18:27:31.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.950" endtime="20201030 18:27:31.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.955" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:31.954" endtime="20201030 18:27:31.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.959" level="INFO">VALUE: {'diff': [0, 5.409999999997361e-07, 1.1403000000000107e-05, 4.7199999999789077e-07, 1.2639000000001788e-05, 5.419999999992098e-07, 9.735999999999773e-06, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.3235999999999803e-05, 5.409999999997361e-07, 1.0459000000000857e-05, 5.409999999997361e-07, 1.1055999999998872e-05, 4.860000000009301e-07, 1.0500000000000093e-05, 5.419999999992098e-07, 1.1472000000001953e-05, 5.419999999992098e-07, 1.1499999999997623e-05, 4.860000000009301e-07, 1.1528000000000233e-05, 5.409999999997361e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 1.2944000000000844e-05, 4.860000000009301e-07, 1.1082999999998538e-05, 5.419999999992098e-07, 1.3528000000002233e-05, 5.419999999992098e-07, 1.352699999999929e-05, 5.419999999992098e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 1.3417000000001678e-05, 5.409999999997361e-07, 1.2360999999998928e-05, 5.419999999992098e-07, 1.2346999999999358e-05, 5.420000000026792e-07, 1.0457999999997913e-05, 5.419999999992098e-07, 1.1486000000001523e-05, 5.419999999992098e-07, 9.000000000002062e-06, 5.409999999997361e-07, 1.2499999999998623e-05, 5.419999999992098e-07, 9.153000000001327e-06, 5.419999999992098e-07, 1.0166000000002423e-05, 5.419999999992098e-07, 9.722000000000203e-06, 5.419999999992098e-07, 1.0472000000000953e-05, 4.859999999974607e-07, 1.2695000000000067e-05, 5.409999999997361e-07, 9.014000000001632e-06, 4.860000000009301e-07, 1.1819999999999192e-05, 5.409999999997361e-07, 9.902999999998607e-06, 4.720000000013602e-07, 1.2542000000000803e-05, 5.419999999992098e-07, 1.2235999999998803e-05, 4.720000000013602e-07, 1.1097000000001578e-05, 4.859999999974607e-07, 9.917000000001647e-06, 5.419999999992098e-07, 1.1625000000001218e-05, 5.409999999997361e-07, 1.2791999999997583e-05, 5.420000000026792e-07, 1.0193999999998093e-05, 4.720000000013602e-07, 1.1972999999998457e-05, 5.409999999997361e-07, 1.3374999999999498e-05, 5.420000000026792e-07, 1.2638999999998318e-05, 5.409999999997361e-07, 1.2514000000001663e-05, 4.860000000009301e-07, 1.3430999999997778e-05, 5.419999999992098e-07, 1.1833000000002758e-05, 4.7199999999789077e-07, 1.1347000000001828e-05, 4.870000000004038e-07, 1.327699999999904e-05, 5.419999999992098e-07, 1.2444000000000344e-05, 4.7300000000083386e-07], 'time': [0.018166917, 0.018167458, 0.018178861, 0.018179333, 0.018191972, 0.018192514, 0.01820225, 0.018202792, 0.018214125, 0.018214667, 0.018227903, 0.018228444, 0.018238903, 0.018239444, 0.0182505, 0.018250986, 0.018261486, 0.018262028, 0.0182735, 0.018274042, 0.018285542, 0.018286028, 0.018297556, 0.018298097, 0.018307458, 0.018307931, 0.018320875, 0.018321361, 0.018332444, 0.018332986, 0.018346514, 0.018347056, 0.018360583, 0.018361125, 0.018371889, 0.018372375, 0.018385514, 0.018386, 0.018399417, 0.018399958, 0.018412319, 0.018412861, 0.018425208, 0.01842575, 0.018436208, 0.01843675, 0.018448236, 0.018448778, 0.018457778, 0.018458319, 0.018470819, 0.018471361, 0.018480514, 0.018481056, 0.018491222, 0.018491764, 0.018501486, 0.018502028, 0.0185125, 0.018512986, 0.018525681, 0.018526222, 0.018535236, 0.018535722, 0.018547542, 0.018548083, 0.018557986, 0.018558458, 0.018571, 0.018571542, 0.018583778, 0.01858425, 0.018595347, 0.018595833, 0.01860575, 0.018606292, 0.018617917, 0.018618458, 0.01863125, 0.018631792, 0.018641986, 0.018642458, 0.018654431, 0.018654972, 0.018668347, 0.018668889, 0.018681528, 0.018682069, 0.018694583, 0.018695069, 0.0187085, 0.018709042, 0.018720875, 0.018721347, 0.018732694, 0.018733181, 0.018746458, 0.018747, 0.018759444, 0.018759917], 'eventsource_diff': [0, 5.409999999997361e-07, 1.1403000000000107e-05, 4.7199999999789077e-07, 1.2639000000001788e-05, 5.419999999992098e-07, 9.735999999999773e-06, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.3235999999999803e-05, 5.409999999997361e-07, 1.0459000000000857e-05, 5.409999999997361e-07, 1.1055999999998872e-05, 4.860000000009301e-07, 1.0500000000000093e-05, 5.419999999992098e-07, 1.1472000000001953e-05, 5.419999999992098e-07, 1.1499999999997623e-05, 4.860000000009301e-07, 1.1528000000000233e-05, 5.409999999997361e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 1.2944000000000844e-05, 4.860000000009301e-07, 1.1082999999998538e-05, 5.419999999992098e-07, 1.3528000000002233e-05, 5.419999999992098e-07, 1.352699999999929e-05, 5.419999999992098e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 1.3417000000001678e-05, 5.409999999997361e-07, 1.2360999999998928e-05, 5.419999999992098e-07, 1.2346999999999358e-05, 5.420000000026792e-07, 1.0457999999997913e-05, 5.419999999992098e-07, 1.1486000000001523e-05, 5.419999999992098e-07, 9.000000000002062e-06, 5.409999999997361e-07, 1.2499999999998623e-05, 5.419999999992098e-07, 9.153000000001327e-06, 5.419999999992098e-07, 1.0166000000002423e-05, 5.419999999992098e-07, 9.722000000000203e-06, 5.419999999992098e-07, 1.0472000000000953e-05, 4.859999999974607e-07, 1.2695000000000067e-05, 5.409999999997361e-07, 9.014000000001632e-06, 4.860000000009301e-07, 1.1819999999999192e-05, 5.409999999997361e-07, 9.902999999998607e-06, 4.720000000013602e-07, 1.2542000000000803e-05, 5.419999999992098e-07, 1.2235999999998803e-05, 4.720000000013602e-07, 1.1097000000001578e-05, 4.859999999974607e-07, 9.917000000001647e-06, 5.419999999992098e-07, 1.1625000000001218e-05, 5.409999999997361e-07, 1.2791999999997583e-05, 5.420000000026792e-07, 1.0193999999998093e-05, 4.720000000013602e-07, 1.1972999999998457e-05, 5.409999999997361e-07, 1.3374999999999498e-05, 5.420000000026792e-07, 1.2638999999998318e-05, 5.409999999997361e-07, 1.2514000000001663e-05, 4.860000000009301e-07, 1.3430999999997778e-05, 5.419999999992098e-07, 1.1833000000002758e-05, 4.7199999999789077e-07, 1.1347000000001828e-05, 4.870000000004038e-07, 1.327699999999904e-05, 5.419999999992098e-07, 1.2444000000000344e-05, 4.7300000000083386e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:31.956" endtime="20201030 18:27:31.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.952" endtime="20201030 18:27:31.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:31.965" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:27:31.962" endtime="20201030 18:27:31.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:31.969" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419...</msg>
<status status="PASS" starttime="20201030 18:27:31.966" endtime="20201030 18:27:31.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.975" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:31.973" endtime="20201030 18:27:31.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.977" level="INFO">VALUE: [5.409999999997361e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 18:27:31.976" endtime="20201030 18:27:31.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.970" endtime="20201030 18:27:31.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:31.981" endtime="20201030 18:27:32.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.980" endtime="20201030 18:27:32.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.979" endtime="20201030 18:27:32.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.594" endtime="20201030 18:27:32.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.593" endtime="20201030 18:27:32.002"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.010" endtime="20201030 18:27:32.020"></status>
</kw>
<msg timestamp="20201030 18:27:32.020" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.008" endtime="20201030 18:27:32.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.023" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.021" endtime="20201030 18:27:32.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.024" endtime="20201030 18:27:32.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.006" endtime="20201030 18:27:32.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.004" endtime="20201030 18:27:32.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.032" endtime="20201030 18:27:32.317"></status>
</kw>
<msg timestamp="20201030 18:27:32.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018268208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018268681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.031" endtime="20201030 18:27:32.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018268208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018268681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.321" endtime="20201030 18:27:32.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.329" endtime="20201030 18:27:32.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.028" endtime="20201030 18:27:32.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.027" endtime="20201030 18:27:32.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:32.356" level="INFO">${debug} = {'diff': [0, 4.729999999973644e-07, 1.1458000000002383e-05, 5.419999999992098e-07, 1.0026999999999259e-05, 5.419999999992098e-07, 1.2653000000001358e-05, 5.409999999997361e-07, 1.0013999999999162e-05,...</msg>
<status status="PASS" starttime="20201030 18:27:32.333" endtime="20201030 18:27:32.357"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.358" endtime="20201030 18:27:32.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.362" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:32.361" endtime="20201030 18:27:32.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.367" level="INFO">VALUE: {'diff': [0, 4.729999999973644e-07, 1.1458000000002383e-05, 5.419999999992098e-07, 1.0026999999999259e-05, 5.419999999992098e-07, 1.2653000000001358e-05, 5.409999999997361e-07, 1.0013999999999162e-05, 5.420000000026792e-07, 1.0457999999997913e-05, 5.419999999992098e-07, 1.2208000000003133e-05, 5.419999999992098e-07, 9.152999999997857e-06, 5.409999999997361e-07, 1.3389000000002538e-05, 4.859999999974607e-07, 1.0806000000002092e-05, 4.860000000009301e-07, 1.3277999999998513e-05, 5.419999999992098e-07, 9.930000000001743e-06, 4.7199999999789077e-07, 9.750000000002812e-06, 4.859999999974607e-07, 9.417000000001147e-06, 4.720000000013602e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.2944000000000844e-05, 4.870000000004038e-07, 9.193999999997093e-06, 5.420000000026792e-07, 1.2360999999998928e-05, 4.860000000009301e-07, 1.0943999999998844e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.420000000026792e-07, 1.279099999999811e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 9.888999999999037e-06, 4.860000000009301e-07, 1.3638999999999318e-05, 4.720000000013602e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.2361000000002398e-05, 5.419999999992098e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 9.915999999998704e-06, 5.420000000026792e-07, 1.0027999999998732e-05, 5.419999999992098e-07, 1.1916000000000704e-05, 5.419999999992098e-07, 1.2082999999999539e-05, 4.860000000009301e-07, 1.0638999999999788e-05, 5.419999999992098e-07, 1.2528000000001233e-05, 4.720000000013602e-07, 1.3138999999998818e-05, 5.409999999997361e-07, 1.2528000000001233e-05, 4.7199999999789077e-07, 9.181000000000467e-06, 5.419999999992098e-07, 1.2082999999999539e-05, 4.860000000009301e-07, 1.0070000000000912e-05, 4.860000000009301e-07, 1.2401999999998164e-05, 5.419999999992098e-07, 9.611000000003117e-06, 4.7199999999789077e-07, 1.1834000000002232e-05, 4.859999999974607e-07, 1.2694000000000594e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 1.1291999999999552e-05, 4.720000000013602e-07, 1.1069999999998442e-05, 4.860000000009301e-07, 9.916999999998177e-06, 5.409999999997361e-07, 1.0167000000001897e-05, 5.419999999992098e-07, 9.291000000001548e-06, 5.419999999992098e-07, 9.013999999998162e-06, 4.860000000009301e-07, 1.1389000000000538e-05, 5.409999999997361e-07], 'time': [0.018268208, 0.018268681, 0.018280139, 0.018280681, 0.018290708, 0.01829125, 0.018303903, 0.018304444, 0.018314458, 0.018315, 0.018325458, 0.018326, 0.018338208, 0.01833875, 0.018347903, 0.018348444, 0.018361833, 0.018362319, 0.018373125, 0.018373611, 0.018386889, 0.018387431, 0.018397361, 0.018397833, 0.018407583, 0.018408069, 0.018417486, 0.018417958, 0.018427833, 0.018428375, 0.018441319, 0.018441806, 0.018451, 0.018451542, 0.018463903, 0.018464389, 0.018475333, 0.018475875, 0.01848575, 0.018486292, 0.018499083, 0.018499625, 0.018512417, 0.018512958, 0.018522847, 0.018523333, 0.018536972, 0.018537444, 0.018547319, 0.018547861, 0.018560222, 0.018560764, 0.018574292, 0.018574778, 0.018584694, 0.018585236, 0.018595264, 0.018595806, 0.018607722, 0.018608264, 0.018620347, 0.018620833, 0.018631472, 0.018632014, 0.018644542, 0.018645014, 0.018658153, 0.018658694, 0.018671222, 0.018671694, 0.018680875, 0.018681417, 0.0186935, 0.018693986, 0.018704056, 0.018704542, 0.018716944, 0.018717486, 0.018727097, 0.018727569, 0.018739403, 0.018739889, 0.018752583, 0.018753069, 0.018766208, 0.018766694, 0.018777986, 0.018778458, 0.018789528, 0.018790014, 0.018799931, 0.018800472, 0.018810639, 0.018811181, 0.018820472, 0.018821014, 0.018830028, 0.018830514, 0.018841903, 0.018842444], 'eventsource_diff': [0, 4.729999999973644e-07, 1.1458000000002383e-05, 5.419999999992098e-07, 1.0026999999999259e-05, 5.419999999992098e-07, 1.2653000000001358e-05, 5.409999999997361e-07, 1.0013999999999162e-05, 5.420000000026792e-07, 1.0457999999997913e-05, 5.419999999992098e-07, 1.2208000000003133e-05, 5.419999999992098e-07, 9.152999999997857e-06, 5.409999999997361e-07, 1.3389000000002538e-05, 4.859999999974607e-07, 1.0806000000002092e-05, 4.860000000009301e-07, 1.3277999999998513e-05, 5.419999999992098e-07, 9.930000000001743e-06, 4.7199999999789077e-07, 9.750000000002812e-06, 4.859999999974607e-07, 9.417000000001147e-06, 4.720000000013602e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.2944000000000844e-05, 4.870000000004038e-07, 9.193999999997093e-06, 5.420000000026792e-07, 1.2360999999998928e-05, 4.860000000009301e-07, 1.0943999999998844e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.420000000026792e-07, 1.279099999999811e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 9.888999999999037e-06, 4.860000000009301e-07, 1.3638999999999318e-05, 4.720000000013602e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.2361000000002398e-05, 5.419999999992098e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 9.915999999998704e-06, 5.420000000026792e-07, 1.0027999999998732e-05, 5.419999999992098e-07, 1.1916000000000704e-05, 5.419999999992098e-07, 1.2082999999999539e-05, 4.860000000009301e-07, 1.0638999999999788e-05, 5.419999999992098e-07, 1.2528000000001233e-05, 4.720000000013602e-07, 1.3138999999998818e-05, 5.409999999997361e-07, 1.2528000000001233e-05, 4.7199999999789077e-07, 9.181000000000467e-06, 5.419999999992098e-07, 1.2082999999999539e-05, 4.860000000009301e-07, 1.0070000000000912e-05, 4.860000000009301e-07, 1.2401999999998164e-05, 5.419999999992098e-07, 9.611000000003117e-06, 4.7199999999789077e-07, 1.1834000000002232e-05, 4.859999999974607e-07, 1.2694000000000594e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 1.1291999999999552e-05, 4.720000000013602e-07, 1.1069999999998442e-05, 4.860000000009301e-07, 9.916999999998177e-06, 5.409999999997361e-07, 1.0167000000001897e-05, 5.419999999992098e-07, 9.291000000001548e-06, 5.419999999992098e-07, 9.013999999998162e-06, 4.860000000009301e-07, 1.1389000000000538e-05, 5.409999999997361e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:32.364" endtime="20201030 18:27:32.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.360" endtime="20201030 18:27:32.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:32.372" level="INFO">${RESULT} = [{'diff': 4.729999999973644e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.420000000026792e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:32.369" endtime="20201030 18:27:32.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:32.376" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.729999999973644e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.8599...</msg>
<status status="PASS" starttime="20201030 18:27:32.373" endtime="20201030 18:27:32.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.380" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:32.379" endtime="20201030 18:27:32.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.383" level="INFO">VALUE: [4.729999999973644e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:27:32.381" endtime="20201030 18:27:32.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.377" endtime="20201030 18:27:32.384"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:32.387" endtime="20201030 18:27:32.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.386" endtime="20201030 18:27:32.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.385" endtime="20201030 18:27:32.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.003" endtime="20201030 18:27:32.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.002" endtime="20201030 18:27:32.408"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.417" endtime="20201030 18:27:32.427"></status>
</kw>
<msg timestamp="20201030 18:27:32.427" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.415" endtime="20201030 18:27:32.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.430" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.428" endtime="20201030 18:27:32.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.431" endtime="20201030 18:27:32.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.411" endtime="20201030 18:27:32.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.410" endtime="20201030 18:27:32.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.440" endtime="20201030 18:27:32.727"></status>
</kw>
<msg timestamp="20201030 18:27:32.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019382028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019382569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.438" endtime="20201030 18:27:32.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019382028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019382569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.732" endtime="20201030 18:27:32.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.740" endtime="20201030 18:27:32.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.436" endtime="20201030 18:27:32.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.434" endtime="20201030 18:27:32.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:32.767" level="INFO">${debug} = {'diff': [0, 5.409999999997361e-07, 9.583999999999981e-06, 5.409999999997361e-07, 9.153000000001327e-06, 4.860000000009301e-07, 1.1958999999998887e-05, 5.409999999997361e-07, 1.1486000000001523e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:27:32.744" endtime="20201030 18:27:32.767"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.768" endtime="20201030 18:27:32.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.773" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:32.772" endtime="20201030 18:27:32.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.777" level="INFO">VALUE: {'diff': [0, 5.409999999997361e-07, 9.583999999999981e-06, 5.409999999997361e-07, 9.153000000001327e-06, 4.860000000009301e-07, 1.1958999999998887e-05, 5.409999999997361e-07, 1.1486000000001523e-05, 5.419999999992098e-07, 1.2958000000000414e-05, 4.870000000004038e-07, 1.0500000000000093e-05, 5.409999999997361e-07, 9.138999999998287e-06, 5.419999999992098e-07, 1.0180000000001993e-05, 4.860000000009301e-07, 1.3180999999997528e-05, 4.720000000013602e-07, 1.1375000000000968e-05, 4.859999999974607e-07, 9.334000000003201e-06, 5.409999999997361e-07, 1.0180999999997997e-05, 4.860000000009301e-07, 1.1375000000000968e-05, 5.419999999992098e-07, 1.3374999999999498e-05, 5.409999999997361e-07, 1.0320000000001162e-05, 5.409999999997361e-07, 9.195000000000036e-06, 4.7199999999789077e-07, 1.1347000000001828e-05, 5.419999999992098e-07, 1.1930999999999747e-05, 4.860000000009301e-07, 1.2263999999997943e-05, 4.860000000009301e-07, 1.2555000000000899e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.1472000000001953e-05, 5.419999999992098e-07, 1.3388999999999068e-05, 4.860000000009301e-07, 9.069000000000438e-06, 4.7199999999789077e-07, 9.487000000002466e-06, 5.409999999997361e-07, 1.2806000000000622e-05, 4.859999999974607e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.1500000000001093e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 4.860000000009301e-07, 1.1860999999998428e-05, 4.7300000000083386e-07, 9.915999999998704e-06, 4.860000000009301e-07, 1.2833999999999762e-05, 5.409999999997361e-07, 1.1625000000001218e-05, 5.419999999992098e-07, 1.0166999999998427e-05, 5.409999999997361e-07, 9.458999999999856e-06, 4.860000000009301e-07, 1.3569000000001469e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.129999999971269e-07, 1.0917000000002647e-05, 5.419999999992098e-07, 1.0625000000000218e-05, 4.860000000009301e-07, 1.2416999999997208e-05, 4.720000000013602e-07, 1.2264000000001413e-05, 5.1400000000007e-07, 1.2957999999996944e-05, 5.420000000026792e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 1.2945000000000317e-05, 5.409999999997361e-07, 1.0458999999997387e-05, 5.410000000032056e-07, 1.2360999999998928e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.2055999999999872e-05, 5.419999999992098e-07, 1.0763999999999913e-05, 5.409999999997361e-07], 'time': [0.019382028, 0.019382569, 0.019392153, 0.019392694, 0.019401847, 0.019402333, 0.019414292, 0.019414833, 0.019426319, 0.019426861, 0.019439819, 0.019440306, 0.019450806, 0.019451347, 0.019460486, 0.019461028, 0.019471208, 0.019471694, 0.019484875, 0.019485347, 0.019496722, 0.019497208, 0.019506542, 0.019507083, 0.019517264, 0.01951775, 0.019529125, 0.019529667, 0.019543042, 0.019543583, 0.019553903, 0.019554444, 0.019563639, 0.019564111, 0.019575458, 0.019576, 0.019587931, 0.019588417, 0.019600681, 0.019601167, 0.019613722, 0.019614264, 0.019627347, 0.019627889, 0.019639361, 0.019639903, 0.019653292, 0.019653778, 0.019662847, 0.019663319, 0.019672806, 0.019673347, 0.019686153, 0.019686639, 0.019696847, 0.019697389, 0.019708889, 0.019709375, 0.019722361, 0.019722847, 0.019734708, 0.019735181, 0.019745097, 0.019745583, 0.019758417, 0.019758958, 0.019770583, 0.019771125, 0.019781292, 0.019781833, 0.019791292, 0.019791778, 0.019805347, 0.019805889, 0.019818681, 0.019819194, 0.019830111, 0.019830653, 0.019841278, 0.019841764, 0.019854181, 0.019854653, 0.019866917, 0.019867431, 0.019880389, 0.019880931, 0.019891681, 0.019892222, 0.019905167, 0.019905708, 0.019916167, 0.019916708, 0.019929069, 0.019929611, 0.019942403, 0.019942944, 0.019955, 0.019955542, 0.019966306, 0.019966847], 'eventsource_diff': [0, 5.409999999997361e-07, 9.583999999999981e-06, 5.409999999997361e-07, 9.153000000001327e-06, 4.860000000009301e-07, 1.1958999999998887e-05, 5.409999999997361e-07, 1.1486000000001523e-05, 5.419999999992098e-07, 1.2958000000000414e-05, 4.870000000004038e-07, 1.0500000000000093e-05, 5.409999999997361e-07, 9.138999999998287e-06, 5.419999999992098e-07, 1.0180000000001993e-05, 4.860000000009301e-07, 1.3180999999997528e-05, 4.720000000013602e-07, 1.1375000000000968e-05, 4.859999999974607e-07, 9.334000000003201e-06, 5.409999999997361e-07, 1.0180999999997997e-05, 4.860000000009301e-07, 1.1375000000000968e-05, 5.419999999992098e-07, 1.3374999999999498e-05, 5.409999999997361e-07, 1.0320000000001162e-05, 5.409999999997361e-07, 9.195000000000036e-06, 4.7199999999789077e-07, 1.1347000000001828e-05, 5.419999999992098e-07, 1.1930999999999747e-05, 4.860000000009301e-07, 1.2263999999997943e-05, 4.860000000009301e-07, 1.2555000000000899e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.1472000000001953e-05, 5.419999999992098e-07, 1.3388999999999068e-05, 4.860000000009301e-07, 9.069000000000438e-06, 4.7199999999789077e-07, 9.487000000002466e-06, 5.409999999997361e-07, 1.2806000000000622e-05, 4.859999999974607e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.1500000000001093e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 4.860000000009301e-07, 1.1860999999998428e-05, 4.7300000000083386e-07, 9.915999999998704e-06, 4.860000000009301e-07, 1.2833999999999762e-05, 5.409999999997361e-07, 1.1625000000001218e-05, 5.419999999992098e-07, 1.0166999999998427e-05, 5.409999999997361e-07, 9.458999999999856e-06, 4.860000000009301e-07, 1.3569000000001469e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.129999999971269e-07, 1.0917000000002647e-05, 5.419999999992098e-07, 1.0625000000000218e-05, 4.860000000009301e-07, 1.2416999999997208e-05, 4.720000000013602e-07, 1.2264000000001413e-05, 5.1400000000007e-07, 1.2957999999996944e-05, 5.420000000026792e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 1.2945000000000317e-05, 5.409999999997361e-07, 1.0458999999997387e-05, 5.410000000032056e-07, 1.2360999999998928e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.2055999999999872e-05, 5.419999999992098e-07, 1.0763999999999913e-05, 5.409999999997361e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:32.774" endtime="20201030 18:27:32.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.770" endtime="20201030 18:27:32.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:32.782" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.870000000004038e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:32.779" endtime="20201030 18:27:32.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:32.787" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.8600...</msg>
<status status="PASS" starttime="20201030 18:27:32.783" endtime="20201030 18:27:32.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.791" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:32.790" endtime="20201030 18:27:32.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.794" level="INFO">VALUE: [5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.129999999971269e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.1400000000007e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.410000000032056e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:27:32.792" endtime="20201030 18:27:32.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.788" endtime="20201030 18:27:32.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:32.798" endtime="20201030 18:27:32.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.797" endtime="20201030 18:27:32.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.796" endtime="20201030 18:27:32.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.409" endtime="20201030 18:27:32.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.408" endtime="20201030 18:27:32.819"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.827" endtime="20201030 18:27:32.837"></status>
</kw>
<msg timestamp="20201030 18:27:32.837" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.825" endtime="20201030 18:27:32.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.839" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.838" endtime="20201030 18:27:32.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.840" endtime="20201030 18:27:32.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.822" endtime="20201030 18:27:32.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.821" endtime="20201030 18:27:32.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.849" endtime="20201030 18:27:33.138"></status>
</kw>
<msg timestamp="20201030 18:27:33.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018275472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018276014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.848" endtime="20201030 18:27:33.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018275472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018276014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.144" endtime="20201030 18:27:33.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.153" endtime="20201030 18:27:33.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.845" endtime="20201030 18:27:33.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.844" endtime="20201030 18:27:33.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:33.179" level="INFO">${debug} = {'diff': [0, 5.419999999992098e-07, 1.3097000000000109e-05, 4.860000000009301e-07, 1.3277999999998513e-05, 5.419999999992098e-07, 1.3514000000002663e-05, 5.409999999997361e-07, 1.3235999999999803e-05,...</msg>
<status status="PASS" starttime="20201030 18:27:33.156" endtime="20201030 18:27:33.179"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.180" endtime="20201030 18:27:33.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.185" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:33.184" endtime="20201030 18:27:33.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.189" level="INFO">VALUE: {'diff': [0, 5.419999999992098e-07, 1.3097000000000109e-05, 4.860000000009301e-07, 1.3277999999998513e-05, 5.419999999992098e-07, 1.3514000000002663e-05, 5.409999999997361e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 1.1332999999998788e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 4.860000000009301e-07, 1.0652999999999357e-05, 5.419999999992098e-07, 1.2222000000002703e-05, 4.859999999974607e-07, 9.917000000001647e-06, 5.409999999997361e-07, 1.2792000000001053e-05, 5.419999999992098e-07, 1.2068999999999969e-05, 5.419999999992098e-07, 1.0165999999998954e-05, 5.420000000026792e-07, 1.2791999999997583e-05, 5.409999999997361e-07, 1.2500000000002093e-05, 5.419999999992098e-07, 1.2667000000000928e-05, 4.860000000009301e-07, 1.283299999999682e-05, 5.420000000026792e-07, 1.3124999999999248e-05, 4.720000000013602e-07, 1.3277999999998513e-05, 4.860000000009301e-07, 9.471999999999953e-06, 5.419999999992098e-07, 1.0458000000001383e-05, 5.419999999992098e-07, 1.2360999999998928e-05, 5.419999999992098e-07, 1.0319000000001688e-05, 5.419999999992098e-07, 1.2055000000000399e-05, 5.419999999992098e-07, 1.2653000000001358e-05, 5.409999999997361e-07, 1.1472999999997957e-05, 5.409999999997361e-07, 9.306000000000592e-06, 5.420000000026792e-07, 1.0304999999998649e-05, 5.419999999992098e-07, 1.0319000000001688e-05, 5.419999999992098e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 9.944000000001313e-06, 4.7199999999789077e-07, 1.1973000000001927e-05, 5.409999999997361e-07, 1.1097999999997582e-05, 4.720000000013602e-07, 1.1778000000000483e-05, 5.409999999997361e-07, 9.471999999999953e-06, 4.7300000000083386e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 1.1082999999998538e-05, 5.419999999992098e-07, 1.0458000000001383e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 1.2652000000001884e-05, 5.419999999992098e-07, 1.0597000000001078e-05, 5.419999999992098e-07, 9.444000000000813e-06, 5.419999999992098e-07, 1.1485999999998053e-05, 5.420000000026792e-07, 9.721999999996733e-06, 5.1400000000007e-07, 1.1361000000001398e-05, 5.419999999992098e-07, 1.1930000000000274e-05, 4.860000000009301e-07, 1.0361999999999871e-05, 5.409999999997361e-07, 1.3097000000000109e-05, 4.870000000004038e-07, 1.0943999999998844e-05, 5.419999999992098e-07, 1.0458000000001383e-05, 5.419999999992098e-07], 'time': [0.018275472, 0.018276014, 0.018289111, 0.018289597, 0.018302875, 0.018303417, 0.018316931, 0.018317472, 0.018330708, 0.01833125, 0.018342583, 0.018343125, 0.018353736, 0.018354222, 0.018364875, 0.018365417, 0.018377639, 0.018378125, 0.018388042, 0.018388583, 0.018401375, 0.018401917, 0.018413986, 0.018414528, 0.018424694, 0.018425236, 0.018438028, 0.018438569, 0.018451069, 0.018451611, 0.018464278, 0.018464764, 0.018477597, 0.018478139, 0.018491264, 0.018491736, 0.018505014, 0.0185055, 0.018514972, 0.018515514, 0.018525972, 0.018526514, 0.018538875, 0.018539417, 0.018549736, 0.018550278, 0.018562333, 0.018562875, 0.018575528, 0.018576069, 0.018587542, 0.018588083, 0.018597389, 0.018597931, 0.018608236, 0.018608778, 0.018619097, 0.018619639, 0.018633167, 0.018633653, 0.018643597, 0.018644069, 0.018656042, 0.018656583, 0.018667681, 0.018668153, 0.018679931, 0.018680472, 0.018689944, 0.018690417, 0.018700931, 0.018701417, 0.0187125, 0.018713042, 0.0187235, 0.018724042, 0.018733625, 0.018734167, 0.018746819, 0.018747361, 0.018757958, 0.0187585, 0.018767944, 0.018768486, 0.018779972, 0.018780514, 0.018790236, 0.01879075, 0.018802111, 0.018802653, 0.018814583, 0.018815069, 0.018825431, 0.018825972, 0.018839069, 0.018839556, 0.0188505, 0.018851042, 0.0188615, 0.018862042], 'eventsource_diff': [0, 5.419999999992098e-07, 1.3097000000000109e-05, 4.860000000009301e-07, 1.3277999999998513e-05, 5.419999999992098e-07, 1.3514000000002663e-05, 5.409999999997361e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 1.1332999999998788e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 4.860000000009301e-07, 1.0652999999999357e-05, 5.419999999992098e-07, 1.2222000000002703e-05, 4.859999999974607e-07, 9.917000000001647e-06, 5.409999999997361e-07, 1.2792000000001053e-05, 5.419999999992098e-07, 1.2068999999999969e-05, 5.419999999992098e-07, 1.0165999999998954e-05, 5.420000000026792e-07, 1.2791999999997583e-05, 5.409999999997361e-07, 1.2500000000002093e-05, 5.419999999992098e-07, 1.2667000000000928e-05, 4.860000000009301e-07, 1.283299999999682e-05, 5.420000000026792e-07, 1.3124999999999248e-05, 4.720000000013602e-07, 1.3277999999998513e-05, 4.860000000009301e-07, 9.471999999999953e-06, 5.419999999992098e-07, 1.0458000000001383e-05, 5.419999999992098e-07, 1.2360999999998928e-05, 5.419999999992098e-07, 1.0319000000001688e-05, 5.419999999992098e-07, 1.2055000000000399e-05, 5.419999999992098e-07, 1.2653000000001358e-05, 5.409999999997361e-07, 1.1472999999997957e-05, 5.409999999997361e-07, 9.306000000000592e-06, 5.420000000026792e-07, 1.0304999999998649e-05, 5.419999999992098e-07, 1.0319000000001688e-05, 5.419999999992098e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 9.944000000001313e-06, 4.7199999999789077e-07, 1.1973000000001927e-05, 5.409999999997361e-07, 1.1097999999997582e-05, 4.720000000013602e-07, 1.1778000000000483e-05, 5.409999999997361e-07, 9.471999999999953e-06, 4.7300000000083386e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 1.1082999999998538e-05, 5.419999999992098e-07, 1.0458000000001383e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 1.2652000000001884e-05, 5.419999999992098e-07, 1.0597000000001078e-05, 5.419999999992098e-07, 9.444000000000813e-06, 5.419999999992098e-07, 1.1485999999998053e-05, 5.420000000026792e-07, 9.721999999996733e-06, 5.1400000000007e-07, 1.1361000000001398e-05, 5.419999999992098e-07, 1.1930000000000274e-05, 4.860000000009301e-07, 1.0361999999999871e-05, 5.409999999997361e-07, 1.3097000000000109e-05, 4.870000000004038e-07, 1.0943999999998844e-05, 5.419999999992098e-07, 1.0458000000001383e-05, 5.419999999992098e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:33.186" endtime="20201030 18:27:33.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.182" endtime="20201030 18:27:33.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:33.195" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:33.192" endtime="20201030 18:27:33.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:33.199" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.8599...</msg>
<status status="PASS" starttime="20201030 18:27:33.196" endtime="20201030 18:27:33.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.204" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:33.203" endtime="20201030 18:27:33.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.206" level="INFO">VALUE: [5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.1400000000007e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.870000000004038e-07, 5.419999999992098e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:27:33.205" endtime="20201030 18:27:33.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.200" endtime="20201030 18:27:33.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:33.211" endtime="20201030 18:27:33.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.209" endtime="20201030 18:27:33.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.208" endtime="20201030 18:27:33.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.820" endtime="20201030 18:27:33.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.819" endtime="20201030 18:27:33.231"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.239" endtime="20201030 18:27:33.249"></status>
</kw>
<msg timestamp="20201030 18:27:33.249" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.237" endtime="20201030 18:27:33.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.252" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.250" endtime="20201030 18:27:33.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.253" endtime="20201030 18:27:33.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.235" endtime="20201030 18:27:33.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.233" endtime="20201030 18:27:33.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.261" endtime="20201030 18:27:33.547"></status>
</kw>
<msg timestamp="20201030 18:27:33.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018293472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018293958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.260" endtime="20201030 18:27:33.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018293472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018293958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.551" endtime="20201030 18:27:33.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.560" endtime="20201030 18:27:33.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.257" endtime="20201030 18:27:33.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.256" endtime="20201030 18:27:33.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:33.587" level="INFO">${debug} = {'diff': [0, 4.859999999974607e-07, 1.2417000000000677e-05, 4.860000000009301e-07, 9.374999999998967e-06, 4.720000000013602e-07, 1.2097999999998582e-05, 5.409999999997361e-07, 1.3097000000000109e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:33.563" endtime="20201030 18:27:33.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.588" endtime="20201030 18:27:33.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.594" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:33.593" endtime="20201030 18:27:33.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.598" level="INFO">VALUE: {'diff': [0, 4.859999999974607e-07, 1.2417000000000677e-05, 4.860000000009301e-07, 9.374999999998967e-06, 4.720000000013602e-07, 1.2097999999998582e-05, 5.409999999997361e-07, 1.3097000000000109e-05, 4.870000000004038e-07, 1.2833000000000289e-05, 5.419999999992098e-07, 1.3541000000002329e-05, 4.859999999974607e-07, 9.042000000000772e-06, 5.419999999992098e-07, 1.0597000000001078e-05, 5.419999999992098e-07, 1.3124999999999248e-05, 4.720000000013602e-07, 1.0290999999999079e-05, 4.7300000000083386e-07, 1.1082999999998538e-05, 4.720000000013602e-07, 1.3527999999998763e-05, 5.420000000026792e-07, 9.151999999998384e-06, 5.419999999992098e-07, 1.1195000000002037e-05, 4.859999999974607e-07, 9.930000000001743e-06, 4.860000000009301e-07, 9.638999999998787e-06, 5.419999999992098e-07, 1.3374999999999498e-05, 5.420000000026792e-07, 1.1915999999997234e-05, 5.420000000026792e-07, 1.1471999999998483e-05, 5.419999999992098e-07, 1.0777999999999482e-05, 4.720000000013602e-07, 1.3597000000000609e-05, 4.720000000013602e-07, 1.2249999999998373e-05, 5.419999999992098e-07, 1.3403000000002108e-05, 4.7199999999789077e-07, 1.1389000000000538e-05, 4.860000000009301e-07, 1.2278000000000983e-05, 4.859999999974607e-07, 1.1097000000001578e-05, 4.860000000009301e-07, 1.0930999999998747e-05, 5.409999999997361e-07, 1.2499999999998623e-05, 5.420000000026792e-07, 1.0610999999997178e-05, 5.420000000026792e-07, 9.165999999997954e-06, 4.870000000004038e-07, 1.1083000000002008e-05, 5.419999999992098e-07, 8.999999999998592e-06, 5.409999999997361e-07, 1.1930999999999747e-05, 4.860000000009301e-07, 1.1097000000001578e-05, 4.859999999974607e-07, 1.3570000000000942e-05, 4.860000000009301e-07, 9.485999999999523e-06, 5.419999999992098e-07, 1.2791000000001579e-05, 5.419999999992098e-07, 1.3541999999998333e-05, 4.860000000009301e-07, 1.1375000000000968e-05, 5.409999999997361e-07, 9.458999999999856e-06, 4.720000000013602e-07, 9.054999999997398e-06, 5.420000000026792e-07, 1.2820000000000192e-05, 4.7199999999789077e-07, 1.0943999999998844e-05, 4.860000000009301e-07, 9.485999999999523e-06, 5.420000000026792e-07, 9.152999999997857e-06, 4.860000000009301e-07, 9.485999999999523e-06, 5.419999999992098e-07, 1.1916000000000704e-05, 5.1400000000007e-07, 1.0348000000000301e-05, 5.409999999997361e-07, 1.1471999999998483e-05, 5.420000000026792e-07], 'time': [0.018293472, 0.018293958, 0.018306375, 0.018306861, 0.018316236, 0.018316708, 0.018328806, 0.018329347, 0.018342444, 0.018342931, 0.018355764, 0.018356306, 0.018369847, 0.018370333, 0.018379375, 0.018379917, 0.018390514, 0.018391056, 0.018404181, 0.018404653, 0.018414944, 0.018415417, 0.0184265, 0.018426972, 0.0184405, 0.018441042, 0.018450194, 0.018450736, 0.018461931, 0.018462417, 0.018472347, 0.018472833, 0.018482472, 0.018483014, 0.018496389, 0.018496931, 0.018508847, 0.018509389, 0.018520861, 0.018521403, 0.018532181, 0.018532653, 0.01854625, 0.018546722, 0.018558972, 0.018559514, 0.018572917, 0.018573389, 0.018584778, 0.018585264, 0.018597542, 0.018598028, 0.018609125, 0.018609611, 0.018620542, 0.018621083, 0.018633583, 0.018634125, 0.018644736, 0.018645278, 0.018654444, 0.018654931, 0.018666014, 0.018666556, 0.018675556, 0.018676097, 0.018688028, 0.018688514, 0.018699611, 0.018700097, 0.018713667, 0.018714153, 0.018723639, 0.018724181, 0.018736972, 0.018737514, 0.018751056, 0.018751542, 0.018762917, 0.018763458, 0.018772917, 0.018773389, 0.018782444, 0.018782986, 0.018795806, 0.018796278, 0.018807222, 0.018807708, 0.018817194, 0.018817736, 0.018826889, 0.018827375, 0.018836861, 0.018837403, 0.018849319, 0.018849833, 0.018860181, 0.018860722, 0.018872194, 0.018872736], 'eventsource_diff': [0, 4.859999999974607e-07, 1.2417000000000677e-05, 4.860000000009301e-07, 9.374999999998967e-06, 4.720000000013602e-07, 1.2097999999998582e-05, 5.409999999997361e-07, 1.3097000000000109e-05, 4.870000000004038e-07, 1.2833000000000289e-05, 5.419999999992098e-07, 1.3541000000002329e-05, 4.859999999974607e-07, 9.042000000000772e-06, 5.419999999992098e-07, 1.0597000000001078e-05, 5.419999999992098e-07, 1.3124999999999248e-05, 4.720000000013602e-07, 1.0290999999999079e-05, 4.7300000000083386e-07, 1.1082999999998538e-05, 4.720000000013602e-07, 1.3527999999998763e-05, 5.420000000026792e-07, 9.151999999998384e-06, 5.419999999992098e-07, 1.1195000000002037e-05, 4.859999999974607e-07, 9.930000000001743e-06, 4.860000000009301e-07, 9.638999999998787e-06, 5.419999999992098e-07, 1.3374999999999498e-05, 5.420000000026792e-07, 1.1915999999997234e-05, 5.420000000026792e-07, 1.1471999999998483e-05, 5.419999999992098e-07, 1.0777999999999482e-05, 4.720000000013602e-07, 1.3597000000000609e-05, 4.720000000013602e-07, 1.2249999999998373e-05, 5.419999999992098e-07, 1.3403000000002108e-05, 4.7199999999789077e-07, 1.1389000000000538e-05, 4.860000000009301e-07, 1.2278000000000983e-05, 4.859999999974607e-07, 1.1097000000001578e-05, 4.860000000009301e-07, 1.0930999999998747e-05, 5.409999999997361e-07, 1.2499999999998623e-05, 5.420000000026792e-07, 1.0610999999997178e-05, 5.420000000026792e-07, 9.165999999997954e-06, 4.870000000004038e-07, 1.1083000000002008e-05, 5.419999999992098e-07, 8.999999999998592e-06, 5.409999999997361e-07, 1.1930999999999747e-05, 4.860000000009301e-07, 1.1097000000001578e-05, 4.859999999974607e-07, 1.3570000000000942e-05, 4.860000000009301e-07, 9.485999999999523e-06, 5.419999999992098e-07, 1.2791000000001579e-05, 5.419999999992098e-07, 1.3541999999998333e-05, 4.860000000009301e-07, 1.1375000000000968e-05, 5.409999999997361e-07, 9.458999999999856e-06, 4.720000000013602e-07, 9.054999999997398e-06, 5.420000000026792e-07, 1.2820000000000192e-05, 4.7199999999789077e-07, 1.0943999999998844e-05, 4.860000000009301e-07, 9.485999999999523e-06, 5.420000000026792e-07, 9.152999999997857e-06, 4.860000000009301e-07, 9.485999999999523e-06, 5.419999999992098e-07, 1.1916000000000704e-05, 5.1400000000007e-07, 1.0348000000000301e-05, 5.409999999997361e-07, 1.1471999999998483e-05, 5.420000000026792e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:33.595" endtime="20201030 18:27:33.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.591" endtime="20201030 18:27:33.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:33.604" level="INFO">${RESULT} = [{'diff': 4.859999999974607e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.870000000004038e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:33.601" endtime="20201030 18:27:33.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:33.608" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:27:33.605" endtime="20201030 18:27:33.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.613" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:33.612" endtime="20201030 18:27:33.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.615" level="INFO">VALUE: [4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.420000000026792e-07, 4.870000000004038e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.1400000000007e-07, 5.409999999997361e-07, 5.420000000026792e-07]</msg>
<status status="PASS" starttime="20201030 18:27:33.614" endtime="20201030 18:27:33.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.609" endtime="20201030 18:27:33.616"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:33.620" endtime="20201030 18:27:33.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.618" endtime="20201030 18:27:33.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.617" endtime="20201030 18:27:33.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.232" endtime="20201030 18:27:33.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.231" endtime="20201030 18:27:33.640"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.649" endtime="20201030 18:27:33.659"></status>
</kw>
<msg timestamp="20201030 18:27:33.660" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.648" endtime="20201030 18:27:33.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.662" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.661" endtime="20201030 18:27:33.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.663" endtime="20201030 18:27:33.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.645" endtime="20201030 18:27:33.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.642" endtime="20201030 18:27:33.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.672" endtime="20201030 18:27:33.961"></status>
</kw>
<msg timestamp="20201030 18:27:33.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019487208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01948775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:33.671" endtime="20201030 18:27:33.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019487208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01948775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:33.966" endtime="20201030 18:27:33.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.975" endtime="20201030 18:27:33.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.668" endtime="20201030 18:27:33.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.667" endtime="20201030 18:27:33.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:34.001" level="INFO">${debug} = {'diff': [0, 5.420000000026792e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 1.3527999999998763e-05, 5.419999999992098e-07, 9.346999999999828e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:33.978" endtime="20201030 18:27:34.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.003" endtime="20201030 18:27:34.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.008" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:34.007" endtime="20201030 18:27:34.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.012" level="INFO">VALUE: {'diff': [0, 5.420000000026792e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 1.3527999999998763e-05, 5.419999999992098e-07, 9.346999999999828e-06, 4.720000000013602e-07, 1.3388999999999068e-05, 5.420000000026792e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 9.444000000000813e-06, 5.419999999992098e-07, 1.1193999999999094e-05, 4.860000000009301e-07, 9.333999999999731e-06, 5.409999999997361e-07, 1.3388999999999068e-05, 4.860000000009301e-07, 9.056000000000342e-06, 5.409999999997361e-07, 1.0598000000000551e-05, 5.409999999997361e-07, 1.0320000000001162e-05, 5.409999999997361e-07, 1.1917000000000177e-05, 5.419999999992098e-07, 9.888999999999037e-06, 4.860000000009301e-07, 1.0361000000000398e-05, 4.859999999974607e-07, 1.2694000000000594e-05, 5.420000000026792e-07, 1.2499999999998623e-05, 5.419999999992098e-07, 1.3374999999999498e-05, 5.409999999997361e-07, 1.3528000000002233e-05, 5.419999999992098e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.1930000000000274e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 1.3124999999999248e-05, 5.420000000026792e-07, 1.2221999999999233e-05, 4.859999999974607e-07, 1.1542000000003272e-05, 4.859999999974607e-07, 1.0792000000002522e-05, 5.409999999997361e-07, 1.2208999999999137e-05, 5.409999999997361e-07, 9.167000000000897e-06, 4.859999999974607e-07, 1.2250000000001843e-05, 5.419999999992098e-07, 1.1778000000000483e-05, 5.409999999997361e-07, 1.0597000000001078e-05, 5.419999999992098e-07, 1.3527999999998763e-05, 5.420000000026792e-07, 9.137999999998814e-06, 5.419999999992098e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 9.389000000002007e-06, 4.7199999999789077e-07, 9.611000000003117e-06, 5.419999999992098e-07, 1.0638999999999788e-05, 4.7199999999789077e-07, 1.2833000000000289e-05, 4.870000000004038e-07, 1.2263000000001939e-05, 4.870000000004038e-07, 9.193999999997093e-06, 5.420000000026792e-07, 1.2207999999999664e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 9.166000000001423e-06, 4.859999999974607e-07, 9.042000000000772e-06, 5.419999999992098e-07, 1.2666000000001454e-05, 4.7300000000083386e-07, 1.2110999999998678e-05, 5.409999999997361e-07, 1.3542000000001803e-05, 4.859999999974607e-07, 1.2542000000000803e-05, 5.419999999992098e-07], 'time': [0.019487208, 0.01948775, 0.019500986, 0.019501528, 0.019512278, 0.019512819, 0.019526347, 0.019526889, 0.019536236, 0.019536708, 0.019550097, 0.019550639, 0.019564014, 0.019564556, 0.019574, 0.019574542, 0.019585736, 0.019586222, 0.019595556, 0.019596097, 0.019609486, 0.019609972, 0.019619028, 0.019619569, 0.019630167, 0.019630708, 0.019641028, 0.019641569, 0.019653486, 0.019654028, 0.019663917, 0.019664403, 0.019674764, 0.01967525, 0.019687944, 0.019688486, 0.019700986, 0.019701528, 0.019714903, 0.019715444, 0.019728972, 0.019729514, 0.019742889, 0.019743431, 0.019755361, 0.019755847, 0.019768986, 0.019769472, 0.019782597, 0.019783139, 0.019795361, 0.019795847, 0.019807389, 0.019807875, 0.019818667, 0.019819208, 0.019831417, 0.019831958, 0.019841125, 0.019841611, 0.019853861, 0.019854403, 0.019866181, 0.019866722, 0.019877319, 0.019877861, 0.019891389, 0.019891931, 0.019901069, 0.019901611, 0.019910639, 0.019911111, 0.0199205, 0.019920972, 0.019930583, 0.019931125, 0.019941764, 0.019942236, 0.019955069, 0.019955556, 0.019967819, 0.019968306, 0.0199775, 0.019978042, 0.01999025, 0.019990792, 0.020000375, 0.020000917, 0.020010083, 0.020010569, 0.020019611, 0.020020153, 0.020032819, 0.020033292, 0.020045403, 0.020045944, 0.020059486, 0.020059972, 0.020072514, 0.020073056], 'eventsource_diff': [0, 5.420000000026792e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 1.3527999999998763e-05, 5.419999999992098e-07, 9.346999999999828e-06, 4.720000000013602e-07, 1.3388999999999068e-05, 5.420000000026792e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 9.444000000000813e-06, 5.419999999992098e-07, 1.1193999999999094e-05, 4.860000000009301e-07, 9.333999999999731e-06, 5.409999999997361e-07, 1.3388999999999068e-05, 4.860000000009301e-07, 9.056000000000342e-06, 5.409999999997361e-07, 1.0598000000000551e-05, 5.409999999997361e-07, 1.0320000000001162e-05, 5.409999999997361e-07, 1.1917000000000177e-05, 5.419999999992098e-07, 9.888999999999037e-06, 4.860000000009301e-07, 1.0361000000000398e-05, 4.859999999974607e-07, 1.2694000000000594e-05, 5.420000000026792e-07, 1.2499999999998623e-05, 5.419999999992098e-07, 1.3374999999999498e-05, 5.409999999997361e-07, 1.3528000000002233e-05, 5.419999999992098e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.1930000000000274e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 1.3124999999999248e-05, 5.420000000026792e-07, 1.2221999999999233e-05, 4.859999999974607e-07, 1.1542000000003272e-05, 4.859999999974607e-07, 1.0792000000002522e-05, 5.409999999997361e-07, 1.2208999999999137e-05, 5.409999999997361e-07, 9.167000000000897e-06, 4.859999999974607e-07, 1.2250000000001843e-05, 5.419999999992098e-07, 1.1778000000000483e-05, 5.409999999997361e-07, 1.0597000000001078e-05, 5.419999999992098e-07, 1.3527999999998763e-05, 5.420000000026792e-07, 9.137999999998814e-06, 5.419999999992098e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 9.389000000002007e-06, 4.7199999999789077e-07, 9.611000000003117e-06, 5.419999999992098e-07, 1.0638999999999788e-05, 4.7199999999789077e-07, 1.2833000000000289e-05, 4.870000000004038e-07, 1.2263000000001939e-05, 4.870000000004038e-07, 9.193999999997093e-06, 5.420000000026792e-07, 1.2207999999999664e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 9.166000000001423e-06, 4.859999999974607e-07, 9.042000000000772e-06, 5.419999999992098e-07, 1.2666000000001454e-05, 4.7300000000083386e-07, 1.2110999999998678e-05, 5.409999999997361e-07, 1.3542000000001803e-05, 4.859999999974607e-07, 1.2542000000000803e-05, 5.419999999992098e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:34.009" endtime="20201030 18:27:34.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.005" endtime="20201030 18:27:34.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:34.017" level="INFO">${RESULT} = [{'diff': 5.420000000026792e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.720000000013602e-07}, {'diff': 5.420000000026792e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:34.014" endtime="20201030 18:27:34.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:34.022" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.8600...</msg>
<status status="PASS" starttime="20201030 18:27:34.018" endtime="20201030 18:27:34.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.026" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:34.025" endtime="20201030 18:27:34.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.029" level="INFO">VALUE: [5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.859999999974607e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.870000000004038e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:27:34.027" endtime="20201030 18:27:34.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.023" endtime="20201030 18:27:34.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:34.033" endtime="20201030 18:27:34.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.031" endtime="20201030 18:27:34.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.030" endtime="20201030 18:27:34.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.641" endtime="20201030 18:27:34.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.641" endtime="20201030 18:27:34.054"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.061" endtime="20201030 18:27:34.072"></status>
</kw>
<msg timestamp="20201030 18:27:34.072" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.060" endtime="20201030 18:27:34.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.075" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.073" endtime="20201030 18:27:34.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.076" endtime="20201030 18:27:34.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.057" endtime="20201030 18:27:34.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.056" endtime="20201030 18:27:34.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.085" endtime="20201030 18:27:34.372"></status>
</kw>
<msg timestamp="20201030 18:27:34.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018408361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018408875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:34.083" endtime="20201030 18:27:34.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018408361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018408875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:34.376" endtime="20201030 18:27:34.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.385" endtime="20201030 18:27:34.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.081" endtime="20201030 18:27:34.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.079" endtime="20201030 18:27:34.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:34.411" level="INFO">${debug} = {'diff': [0, 5.1400000000007e-07, 1.0193999999998093e-05, 5.419999999992098e-07, 1.2514000000001663e-05, 4.860000000009301e-07, 1.0805999999998622e-05, 4.860000000009301e-07, 1.3568999999998e-05, 4.86...</msg>
<status status="PASS" starttime="20201030 18:27:34.388" endtime="20201030 18:27:34.412"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.412" endtime="20201030 18:27:34.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.418" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:34.417" endtime="20201030 18:27:34.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.422" level="INFO">VALUE: {'diff': [0, 5.1400000000007e-07, 1.0193999999998093e-05, 5.419999999992098e-07, 1.2514000000001663e-05, 4.860000000009301e-07, 1.0805999999998622e-05, 4.860000000009301e-07, 1.3568999999998e-05, 4.860000000009301e-07, 1.1416999999999677e-05, 4.720000000013602e-07, 1.2833999999999762e-05, 5.409999999997361e-07, 1.3306000000001122e-05, 4.7199999999789077e-07, 1.0943999999998844e-05, 4.7300000000083386e-07, 9.305000000001118e-06, 5.419999999992098e-07, 1.0625000000000218e-05, 4.860000000009301e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.1666999999999927e-05, 5.419999999992098e-07, 1.1777000000001009e-05, 4.869999999969343e-07, 1.2986000000003023e-05, 5.409999999997361e-07, 1.1194999999998567e-05, 5.409999999997361e-07, 1.0598000000000551e-05, 5.409999999997361e-07, 9.153000000001327e-06, 5.419999999992098e-07, 1.2652999999997888e-05, 4.860000000009301e-07, 1.3430000000001774e-05, 5.419999999992098e-07, 1.1971999999998983e-05, 4.720000000013602e-07, 1.3416999999998208e-05, 4.720000000013602e-07, 9.056000000000342e-06, 4.860000000009301e-07, 1.0207999999997663e-05, 5.419999999992098e-07, 9.153000000001327e-06, 4.860000000009301e-07, 1.2555000000000899e-05, 5.419999999992098e-07, 9.722000000000203e-06, 5.419999999992098e-07, 1.1041999999999302e-05, 5.409999999997361e-07, 1.1041999999999302e-05, 5.420000000026792e-07, 9.443999999997343e-06, 5.420000000026792e-07, 1.281899999999725e-05, 4.720000000013602e-07, 9.806000000001092e-06, 4.7199999999789077e-07, 1.3431000000001247e-05, 4.860000000009301e-07, 1.0429999999998774e-05, 4.7300000000083386e-07, 9.722000000000203e-06, 5.409999999997361e-07, 9.736999999999246e-06, 5.409999999997361e-07, 1.1917000000000177e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 9.888000000003033e-06, 4.869999999969343e-07, 1.2694000000000594e-05, 4.860000000009301e-07, 1.1528000000000233e-05, 5.419999999992098e-07, 9.291000000001548e-06, 5.419999999992098e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 1.2055000000000399e-05, 5.419999999992098e-07, 1.2222000000002703e-05, 4.859999999974607e-07, 1.3278000000001983e-05, 5.419999999992098e-07, 1.2499999999998623e-05, 5.409999999997361e-07, 1.1486000000001523e-05, 5.419999999992098e-07, 1.2500000000002093e-05, 5.419999999992098e-07, 1.1485999999998053e-05, 5.420000000026792e-07], 'time': [0.018408361, 0.018408875, 0.018419069, 0.018419611, 0.018432125, 0.018432611, 0.018443417, 0.018443903, 0.018457472, 0.018457958, 0.018469375, 0.018469847, 0.018482681, 0.018483222, 0.018496528, 0.018497, 0.018507944, 0.018508417, 0.018517722, 0.018518264, 0.018528889, 0.018529375, 0.018542222, 0.018542708, 0.018554375, 0.018554917, 0.018566694, 0.018567181, 0.018580167, 0.018580708, 0.018591903, 0.018592444, 0.018603042, 0.018603583, 0.018612736, 0.018613278, 0.018625931, 0.018626417, 0.018639847, 0.018640389, 0.018652361, 0.018652833, 0.01866625, 0.018666722, 0.018675778, 0.018676264, 0.018686472, 0.018687014, 0.018696167, 0.018696653, 0.018709208, 0.01870975, 0.018719472, 0.018720014, 0.018731056, 0.018731597, 0.018742639, 0.018743181, 0.018752625, 0.018753167, 0.018765986, 0.018766458, 0.018776264, 0.018776736, 0.018790167, 0.018790653, 0.018801083, 0.018801556, 0.018811278, 0.018811819, 0.018821556, 0.018822097, 0.018834014, 0.018834556, 0.018844139, 0.018844681, 0.018854569, 0.018855056, 0.01886775, 0.018868236, 0.018879764, 0.018880306, 0.018889597, 0.018890139, 0.018903375, 0.018903917, 0.018915972, 0.018916514, 0.018928736, 0.018929222, 0.0189425, 0.018943042, 0.018955542, 0.018956083, 0.018967569, 0.018968111, 0.018980611, 0.018981153, 0.018992639, 0.018993181], 'eventsource_diff': [0, 5.1400000000007e-07, 1.0193999999998093e-05, 5.419999999992098e-07, 1.2514000000001663e-05, 4.860000000009301e-07, 1.0805999999998622e-05, 4.860000000009301e-07, 1.3568999999998e-05, 4.860000000009301e-07, 1.1416999999999677e-05, 4.720000000013602e-07, 1.2833999999999762e-05, 5.409999999997361e-07, 1.3306000000001122e-05, 4.7199999999789077e-07, 1.0943999999998844e-05, 4.7300000000083386e-07, 9.305000000001118e-06, 5.419999999992098e-07, 1.0625000000000218e-05, 4.860000000009301e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.1666999999999927e-05, 5.419999999992098e-07, 1.1777000000001009e-05, 4.869999999969343e-07, 1.2986000000003023e-05, 5.409999999997361e-07, 1.1194999999998567e-05, 5.409999999997361e-07, 1.0598000000000551e-05, 5.409999999997361e-07, 9.153000000001327e-06, 5.419999999992098e-07, 1.2652999999997888e-05, 4.860000000009301e-07, 1.3430000000001774e-05, 5.419999999992098e-07, 1.1971999999998983e-05, 4.720000000013602e-07, 1.3416999999998208e-05, 4.720000000013602e-07, 9.056000000000342e-06, 4.860000000009301e-07, 1.0207999999997663e-05, 5.419999999992098e-07, 9.153000000001327e-06, 4.860000000009301e-07, 1.2555000000000899e-05, 5.419999999992098e-07, 9.722000000000203e-06, 5.419999999992098e-07, 1.1041999999999302e-05, 5.409999999997361e-07, 1.1041999999999302e-05, 5.420000000026792e-07, 9.443999999997343e-06, 5.420000000026792e-07, 1.281899999999725e-05, 4.720000000013602e-07, 9.806000000001092e-06, 4.7199999999789077e-07, 1.3431000000001247e-05, 4.860000000009301e-07, 1.0429999999998774e-05, 4.7300000000083386e-07, 9.722000000000203e-06, 5.409999999997361e-07, 9.736999999999246e-06, 5.409999999997361e-07, 1.1917000000000177e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 9.888000000003033e-06, 4.869999999969343e-07, 1.2694000000000594e-05, 4.860000000009301e-07, 1.1528000000000233e-05, 5.419999999992098e-07, 9.291000000001548e-06, 5.419999999992098e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 1.2055000000000399e-05, 5.419999999992098e-07, 1.2222000000002703e-05, 4.859999999974607e-07, 1.3278000000001983e-05, 5.419999999992098e-07, 1.2499999999998623e-05, 5.409999999997361e-07, 1.1486000000001523e-05, 5.419999999992098e-07, 1.2500000000002093e-05, 5.419999999992098e-07, 1.1485999999998053e-05, 5.420000000026792e-07], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:34.419" endtime="20201030 18:27:34.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.415" endtime="20201030 18:27:34.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:34.427" level="INFO">${RESULT} = [{'diff': 5.1400000000007e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:34.424" endtime="20201030 18:27:34.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:34.431" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.1400000000007e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 4.73000...</msg>
<status status="PASS" starttime="20201030 18:27:34.428" endtime="20201030 18:27:34.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.436" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:34.435" endtime="20201030 18:27:34.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.439" level="INFO">VALUE: [5.1400000000007e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.869999999969343e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.420000000026792e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.869999999969343e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07]</msg>
<status status="PASS" starttime="20201030 18:27:34.437" endtime="20201030 18:27:34.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.432" endtime="20201030 18:27:34.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:34.443" endtime="20201030 18:27:34.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.442" endtime="20201030 18:27:34.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.441" endtime="20201030 18:27:34.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.054" endtime="20201030 18:27:34.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.054" endtime="20201030 18:27:34.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.134" endtime="20201030 18:27:34.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:34.469" endtime="20201030 18:27:34.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.467" endtime="20201030 18:27:34.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.466" endtime="20201030 18:27:34.489"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:26.064" endtime="20201030 18:27:34.490" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:34.496" endtime="20201030 18:27:34.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.495" endtime="20201030 18:27:34.517"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.530" endtime="20201030 18:27:34.544"></status>
</kw>
<msg timestamp="20201030 18:27:34.544" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.528" endtime="20201030 18:27:34.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.547" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.545" endtime="20201030 18:27:34.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.550" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:34.548" endtime="20201030 18:27:34.550"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:34.526" endtime="20201030 18:27:34.551"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:34.524" endtime="20201030 18:27:34.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.522" endtime="20201030 18:27:34.552"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:34.557" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:34.555" endtime="20201030 18:27:34.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.553" endtime="20201030 18:27:34.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.521" endtime="20201030 18:27:34.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.521" endtime="20201030 18:27:34.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.559" endtime="20201030 18:27:34.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.519" endtime="20201030 18:27:34.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.517" endtime="20201030 18:27:34.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.494" endtime="20201030 18:27:34.561"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.570" endtime="20201030 18:27:34.582"></status>
</kw>
<msg timestamp="20201030 18:27:34.583" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.569" endtime="20201030 18:27:34.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.585" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.584" endtime="20201030 18:27:34.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.586" endtime="20201030 18:27:34.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.566" endtime="20201030 18:27:34.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.564" endtime="20201030 18:27:34.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.595" endtime="20201030 18:27:34.883"></status>
</kw>
<msg timestamp="20201030 18:27:34.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065052639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065055, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:34.594" endtime="20201030 18:27:34.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065052639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065055, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:34.888" endtime="20201030 18:27:34.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.896" endtime="20201030 18:27:34.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.591" endtime="20201030 18:27:34.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.589" endtime="20201030 18:27:34.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:34.902" level="INFO">${RESULT} = [{'diff': 2.3610000000062747e-06}, {'diff': 2.360999999992397e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.3049999999941173e-06}, {'diff': 2.360999999992397e-06}, {'diff': 2.3479999999992396e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:34.899" endtime="20201030 18:27:34.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:34.908" level="INFO">${OVERHEAD} = {'diff': [2.3610000000062747e-06, 2.360999999992397e-06, 2.346999999999766e-06, 2.3049999999941173e-06, 2.360999999992397e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.319000000000626e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 18:27:34.903" endtime="20201030 18:27:34.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.913" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:34.912" endtime="20201030 18:27:34.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.915" level="INFO">VALUE: [2.3610000000062747e-06, 2.360999999992397e-06, 2.346999999999766e-06, 2.3049999999941173e-06, 2.360999999992397e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.319000000000626e-06, 2.346999999999766e-06, 2.332999999993257e-06, 2.277999999994451e-06, 2.3620000000057484e-06, 2.3049999999941173e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3339999999927308e-06, 2.3610000000062747e-06, 2.3889999999915368e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.4029999999980456e-06, 2.360999999992397e-06, 2.3610000000062747e-06, 2.346999999999766e-06, 2.360999999992397e-06, 2.346999999999766e-06, 2.360999999992397e-06, 2.360999999992397e-06, 2.3619999999918706e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.333000000007135e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.388000000005941e-06, 2.332999999993257e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3339999999927308e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.3610000000062747e-06, 2.346999999999766e-06, 2.3610000000062747e-06, 2.3610000000062747e-06]</msg>
<status status="PASS" starttime="20201030 18:27:34.914" endtime="20201030 18:27:34.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.909" endtime="20201030 18:27:34.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:34.920" endtime="20201030 18:27:34.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.918" endtime="20201030 18:27:34.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.917" endtime="20201030 18:27:34.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.563" endtime="20201030 18:27:34.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.562" endtime="20201030 18:27:34.940"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.948" endtime="20201030 18:27:34.959"></status>
</kw>
<msg timestamp="20201030 18:27:34.960" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.946" endtime="20201030 18:27:34.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.962" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.961" endtime="20201030 18:27:34.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.963" endtime="20201030 18:27:34.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.944" endtime="20201030 18:27:34.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.942" endtime="20201030 18:27:34.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.972" endtime="20201030 18:27:35.260"></status>
</kw>
<msg timestamp="20201030 18:27:35.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019234375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019236722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:34.971" endtime="20201030 18:27:35.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019234375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019236722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:35.264" endtime="20201030 18:27:35.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.273" endtime="20201030 18:27:35.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.968" endtime="20201030 18:27:35.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.966" endtime="20201030 18:27:35.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:35.280" level="INFO">${RESULT} = [{'diff': 2.346999999999766e-06}, {'diff': 2.3470000000032354e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.3479999999992396e-06}, {'diff': 2.3059999999970604e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:35.276" endtime="20201030 18:27:35.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:35.285" level="INFO">${OVERHEAD} = {'diff': [2.346999999999766e-06, 2.3470000000032354e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.3059999999970604e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 18:27:35.281" endtime="20201030 18:27:35.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.289" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:35.288" endtime="20201030 18:27:35.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.291" level="INFO">VALUE: [2.346999999999766e-06, 2.3470000000032354e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.3059999999970604e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.333000000000196e-06, 2.348000000002709e-06, 2.3749999999989058e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.3889999999984757e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.333000000000196e-06, 2.4309999999971854e-06, 2.3479999999992396e-06, 2.3610000000028053e-06, 2.333000000000196e-06, 2.348000000002709e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.389000000001945e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.348000000002709e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.3470000000032354e-06]</msg>
<status status="PASS" starttime="20201030 18:27:35.290" endtime="20201030 18:27:35.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.285" endtime="20201030 18:27:35.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:35.295" endtime="20201030 18:27:35.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.294" endtime="20201030 18:27:35.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.293" endtime="20201030 18:27:35.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.941" endtime="20201030 18:27:35.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.941" endtime="20201030 18:27:35.316"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.324" endtime="20201030 18:27:35.337"></status>
</kw>
<msg timestamp="20201030 18:27:35.337" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.322" endtime="20201030 18:27:35.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.340" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.338" endtime="20201030 18:27:35.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.342" endtime="20201030 18:27:35.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.320" endtime="20201030 18:27:35.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.318" endtime="20201030 18:27:35.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.356" endtime="20201030 18:27:35.641"></status>
</kw>
<msg timestamp="20201030 18:27:35.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:35.354" endtime="20201030 18:27:35.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:35.645" endtime="20201030 18:27:35.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.654" endtime="20201030 18:27:35.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.349" endtime="20201030 18:27:35.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.347" endtime="20201030 18:27:35.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:35.661" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.3049999999975868e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.3619999999988095e-06}, {'diff': 2.348000000002709e-06}, {'diff': 2.346999999999766e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:35.657" endtime="20201030 18:27:35.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:35.665" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.3049999999975868e-06, 2.360999999999336e-06, 2.3619999999988095e-06, 2.348000000002709e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 18:27:35.662" endtime="20201030 18:27:35.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.669" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:35.668" endtime="20201030 18:27:35.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.671" level="INFO">VALUE: [2.3749999999989058e-06, 2.3049999999975868e-06, 2.360999999999336e-06, 2.3619999999988095e-06, 2.348000000002709e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3200000000000998e-06, 2.375000000002375e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.362000000002279e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.2779999999979206e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.3619999999988095e-06, 2.3889999999984757e-06, 2.403000000001515e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3200000000000998e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.3610000000028053e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.362000000002279e-06, 2.360999999999336e-06, 2.389000000001945e-06]</msg>
<status status="PASS" starttime="20201030 18:27:35.670" endtime="20201030 18:27:35.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.666" endtime="20201030 18:27:35.672"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:35.676" endtime="20201030 18:27:35.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.674" endtime="20201030 18:27:35.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.673" endtime="20201030 18:27:35.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.317" endtime="20201030 18:27:35.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.316" endtime="20201030 18:27:35.697"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.705" endtime="20201030 18:27:35.717"></status>
</kw>
<msg timestamp="20201030 18:27:35.718" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.704" endtime="20201030 18:27:35.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.720" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.719" endtime="20201030 18:27:35.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.721" endtime="20201030 18:27:35.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.701" endtime="20201030 18:27:35.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.699" endtime="20201030 18:27:35.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.731" endtime="20201030 18:27:36.023"></status>
</kw>
<msg timestamp="20201030 18:27:36.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02019875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:35.729" endtime="20201030 18:27:36.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02019875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:36.032" endtime="20201030 18:27:36.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.051" endtime="20201030 18:27:36.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.726" endtime="20201030 18:27:36.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.724" endtime="20201030 18:27:36.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:36.065" level="INFO">${RESULT} = [{'diff': 2.333000000000196e-06}, {'diff': 2.3479999999992396e-06}, {'diff': 2.333000000000196e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.346999999999766e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:36.058" endtime="20201030 18:27:36.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:36.075" level="INFO">${OVERHEAD} = {'diff': [2.333000000000196e-06, 2.3479999999992396e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346...</msg>
<status status="PASS" starttime="20201030 18:27:36.067" endtime="20201030 18:27:36.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.084" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:36.082" endtime="20201030 18:27:36.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.089" level="INFO">VALUE: [2.333000000000196e-06, 2.3479999999992396e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.3479999999992396e-06, 2.3339999999996697e-06, 2.4300000000011812e-06, 2.3610000000028053e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.30600000000053e-06, 2.3189999999971567e-06, 2.360999999999336e-06, 2.375000000002375e-06, 2.319000000000626e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.389000000001945e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.2639999999983507e-06, 2.3619999999988095e-06, 2.360999999999336e-06, 2.4309999999971854e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.362000000002279e-06, 2.3329999999967266e-06, 2.346999999999766e-06, 2.403000000001515e-06, 2.3610000000028053e-06, 2.360999999999336e-06]</msg>
<status status="PASS" starttime="20201030 18:27:36.086" endtime="20201030 18:27:36.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.077" endtime="20201030 18:27:36.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:36.098" endtime="20201030 18:27:36.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.095" endtime="20201030 18:27:36.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.093" endtime="20201030 18:27:36.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.697" endtime="20201030 18:27:36.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.697" endtime="20201030 18:27:36.120"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.127" endtime="20201030 18:27:36.139"></status>
</kw>
<msg timestamp="20201030 18:27:36.139" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.126" endtime="20201030 18:27:36.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.142" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.141" endtime="20201030 18:27:36.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.143" endtime="20201030 18:27:36.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.123" endtime="20201030 18:27:36.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.122" endtime="20201030 18:27:36.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.152" endtime="20201030 18:27:36.440"></status>
</kw>
<msg timestamp="20201030 18:27:36.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019444639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019446972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.150" endtime="20201030 18:27:36.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019444639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019446972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.444" endtime="20201030 18:27:36.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.453" endtime="20201030 18:27:36.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.148" endtime="20201030 18:27:36.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.146" endtime="20201030 18:27:36.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:36.459" level="INFO">${RESULT} = [{'diff': 2.333000000000196e-06}, {'diff': 2.3200000000000998e-06}, {'diff': 2.3200000000000998e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.3610000000028053e-06}, {'diff': 2.3610000000028053e-06...</msg>
<status status="PASS" starttime="20201030 18:27:36.456" endtime="20201030 18:27:36.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:36.464" level="INFO">${OVERHEAD} = {'diff': [2.333000000000196e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.3610000000028053e-06, 2.417000000001085e-06, 2.360999999999336e-06, 2....</msg>
<status status="PASS" starttime="20201030 18:27:36.460" endtime="20201030 18:27:36.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.468" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:36.467" endtime="20201030 18:27:36.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.471" level="INFO">VALUE: [2.333000000000196e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.3610000000028053e-06, 2.417000000001085e-06, 2.360999999999336e-06, 2.3470000000032354e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.3470000000032354e-06, 2.403000000001515e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.3470000000032354e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.3619999999988095e-06, 2.389000000001945e-06, 2.3749999999989058e-06, 2.3479999999992396e-06, 2.375000000002375e-06, 2.403000000001515e-06, 2.3479999999992396e-06, 2.333000000000196e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.387999999999002e-06, 2.3619999999988095e-06, 2.3889999999984757e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.333000000000196e-06]</msg>
<status status="PASS" starttime="20201030 18:27:36.470" endtime="20201030 18:27:36.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.465" endtime="20201030 18:27:36.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:36.476" endtime="20201030 18:27:36.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.474" endtime="20201030 18:27:36.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.473" endtime="20201030 18:27:36.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.120" endtime="20201030 18:27:36.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.120" endtime="20201030 18:27:36.496"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.504" endtime="20201030 18:27:36.516"></status>
</kw>
<msg timestamp="20201030 18:27:36.517" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.502" endtime="20201030 18:27:36.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.519" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.518" endtime="20201030 18:27:36.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.520" endtime="20201030 18:27:36.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.500" endtime="20201030 18:27:36.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.498" endtime="20201030 18:27:36.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.534" endtime="20201030 18:27:36.827"></status>
</kw>
<msg timestamp="20201030 18:27:36.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019454181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019456514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.528" endtime="20201030 18:27:36.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019454181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019456514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.839" endtime="20201030 18:27:36.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.860" endtime="20201030 18:27:36.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.525" endtime="20201030 18:27:36.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.523" endtime="20201030 18:27:36.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:36.877" level="INFO">${RESULT} = [{'diff': 2.333000000000196e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.375000000002375e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.333000000000196e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:36.869" endtime="20201030 18:27:36.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:36.888" level="INFO">${OVERHEAD} = {'diff': [2.333000000000196e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.3749999999989058e-06, 2.333000000000196e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.36...</msg>
<status status="PASS" starttime="20201030 18:27:36.880" endtime="20201030 18:27:36.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.898" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:36.896" endtime="20201030 18:27:36.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.905" level="INFO">VALUE: [2.333000000000196e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.3749999999989058e-06, 2.333000000000196e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.3619999999988095e-06, 2.375000000002375e-06, 2.346999999999766e-06, 2.3619999999988095e-06, 2.346999999999766e-06, 2.305000000001056e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.375000000002375e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3339999999996697e-06, 2.3479999999992396e-06, 2.3610000000028053e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.403000000001515e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3049999999975868e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.3610000000028053e-06, 2.3610000000028053e-06, 2.346999999999766e-06, 2.305000000001056e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.30600000000053e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.348000000002709e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.346999999999766e-06]</msg>
<status status="PASS" starttime="20201030 18:27:36.901" endtime="20201030 18:27:36.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.890" endtime="20201030 18:27:36.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:36.918" endtime="20201030 18:27:36.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.914" endtime="20201030 18:27:36.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.910" endtime="20201030 18:27:36.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.497" endtime="20201030 18:27:36.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.497" endtime="20201030 18:27:36.943"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.959" endtime="20201030 18:27:36.975"></status>
</kw>
<msg timestamp="20201030 18:27:36.976" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.956" endtime="20201030 18:27:36.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.979" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.977" endtime="20201030 18:27:36.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.980" endtime="20201030 18:27:36.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.951" endtime="20201030 18:27:36.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.948" endtime="20201030 18:27:36.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.990" endtime="20201030 18:27:37.278"></status>
</kw>
<msg timestamp="20201030 18:27:37.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033801389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033803736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.989" endtime="20201030 18:27:37.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033801389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033803736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.282" endtime="20201030 18:27:37.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.290" endtime="20201030 18:27:37.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.985" endtime="20201030 18:27:37.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.983" endtime="20201030 18:27:37.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:37.297" level="INFO">${RESULT} = [{'diff': 2.346999999999766e-06}, {'diff': 2.3479999999992396e-06}, {'diff': 2.3479999999992396e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.346999999999766e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:37.294" endtime="20201030 18:27:37.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:37.301" level="INFO">${OVERHEAD} = {'diff': [2.346999999999766e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 18:27:37.298" endtime="20201030 18:27:37.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.305" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:37.304" endtime="20201030 18:27:37.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.307" level="INFO">VALUE: [2.346999999999766e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.2629999999954076e-06, 2.3339999999996697e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.4029999999980456e-06, 2.360999999999336e-06, 2.3339999999996697e-06, 2.29200000000096e-06, 2.346999999999766e-06, 2.3750000000058447e-06, 2.3610000000062747e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.3889999999984757e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3610000000062747e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3890000000054146e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.3619999999988095e-06, 2.4029999999980456e-06]</msg>
<status status="PASS" starttime="20201030 18:27:37.306" endtime="20201030 18:27:37.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.302" endtime="20201030 18:27:37.309"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:37.313" endtime="20201030 18:27:37.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.311" endtime="20201030 18:27:37.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.310" endtime="20201030 18:27:37.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.945" endtime="20201030 18:27:37.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.944" endtime="20201030 18:27:37.333"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.341" endtime="20201030 18:27:37.353"></status>
</kw>
<msg timestamp="20201030 18:27:37.354" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.339" endtime="20201030 18:27:37.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.356" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.355" endtime="20201030 18:27:37.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.357" endtime="20201030 18:27:37.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.337" endtime="20201030 18:27:37.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.335" endtime="20201030 18:27:37.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.366" endtime="20201030 18:27:37.654"></status>
</kw>
<msg timestamp="20201030 18:27:37.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019291431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019293764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.365" endtime="20201030 18:27:37.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019291431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019293764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.658" endtime="20201030 18:27:37.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.667" endtime="20201030 18:27:37.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.362" endtime="20201030 18:27:37.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.361" endtime="20201030 18:27:37.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:37.673" level="INFO">${RESULT} = [{'diff': 2.333000000000196e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3329999999967266e-06}, {'diff': 2.3189999999971567e-06}, {'diff': 2.3610000000028053e-06...</msg>
<status status="PASS" starttime="20201030 18:27:37.670" endtime="20201030 18:27:37.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:37.678" level="INFO">${OVERHEAD} = {'diff': [2.333000000000196e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.3329999999967266e-06, 2.3189999999971567e-06, 2.3610000000028053e-06, 2.334000000003139e-06, 2.360999999999336e-06, 2....</msg>
<status status="PASS" starttime="20201030 18:27:37.674" endtime="20201030 18:27:37.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.682" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:37.681" endtime="20201030 18:27:37.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.685" level="INFO">VALUE: [2.333000000000196e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.3329999999967266e-06, 2.3189999999971567e-06, 2.3610000000028053e-06, 2.334000000003139e-06, 2.360999999999336e-06, 2.3889999999984757e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.3610000000028053e-06, 2.346999999999766e-06, 2.389000000001945e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3470000000032354e-06, 2.3339999999996697e-06, 2.348000000002709e-06, 2.4029999999980456e-06, 2.3889999999984757e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3200000000000998e-06, 2.3470000000032354e-06, 2.3749999999989058e-06, 2.4160000000016113e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.403000000001515e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06]</msg>
<status status="PASS" starttime="20201030 18:27:37.683" endtime="20201030 18:27:37.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.679" endtime="20201030 18:27:37.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:37.689" endtime="20201030 18:27:37.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.688" endtime="20201030 18:27:37.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.687" endtime="20201030 18:27:37.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.334" endtime="20201030 18:27:37.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.334" endtime="20201030 18:27:37.710"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.718" endtime="20201030 18:27:37.729"></status>
</kw>
<msg timestamp="20201030 18:27:37.730" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.716" endtime="20201030 18:27:37.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.732" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.731" endtime="20201030 18:27:37.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.733" endtime="20201030 18:27:37.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.714" endtime="20201030 18:27:37.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.712" endtime="20201030 18:27:37.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.743" endtime="20201030 18:27:38.032"></status>
</kw>
<msg timestamp="20201030 18:27:38.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019362111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019364458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.741" endtime="20201030 18:27:38.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019362111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019364458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.036" endtime="20201030 18:27:38.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.044" endtime="20201030 18:27:38.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.738" endtime="20201030 18:27:38.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.737" endtime="20201030 18:27:38.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:38.051" level="INFO">${RESULT} = [{'diff': 2.346999999999766e-06}, {'diff': 2.3889999999984757e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.362000000002279e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.346999999999766e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:38.048" endtime="20201030 18:27:38.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:38.055" level="INFO">${OVERHEAD} = {'diff': [2.346999999999766e-06, 2.3889999999984757e-06, 2.346999999999766e-06, 2.362000000002279e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.347...</msg>
<status status="PASS" starttime="20201030 18:27:38.052" endtime="20201030 18:27:38.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.059" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:38.058" endtime="20201030 18:27:38.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.061" level="INFO">VALUE: [2.346999999999766e-06, 2.3889999999984757e-06, 2.346999999999766e-06, 2.362000000002279e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.30600000000053e-06, 2.387999999999002e-06, 2.3059999999970604e-06, 2.3339999999996697e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.2910000000014863e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.3619999999988095e-06, 2.3619999999988095e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.3749999999989058e-06, 2.403000000001515e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3619999999988095e-06, 2.3610000000028053e-06, 2.3329999999967266e-06, 2.319000000000626e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.360999999999336e-06]</msg>
<status status="PASS" starttime="20201030 18:27:38.060" endtime="20201030 18:27:38.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.056" endtime="20201030 18:27:38.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:38.066" endtime="20201030 18:27:38.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.064" endtime="20201030 18:27:38.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.063" endtime="20201030 18:27:38.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.711" endtime="20201030 18:27:38.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.710" endtime="20201030 18:27:38.086"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.094" endtime="20201030 18:27:38.106"></status>
</kw>
<msg timestamp="20201030 18:27:38.107" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.093" endtime="20201030 18:27:38.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.109" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.108" endtime="20201030 18:27:38.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.110" endtime="20201030 18:27:38.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.090" endtime="20201030 18:27:38.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.088" endtime="20201030 18:27:38.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.120" endtime="20201030 18:27:38.406"></status>
</kw>
<msg timestamp="20201030 18:27:38.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019831014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.119" endtime="20201030 18:27:38.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019831014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.410" endtime="20201030 18:27:38.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.418" endtime="20201030 18:27:38.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.116" endtime="20201030 18:27:38.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.114" endtime="20201030 18:27:38.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:38.425" level="INFO">${RESULT} = [{'diff': 2.375000000002375e-06}, {'diff': 2.375000000002375e-06}, {'diff': 2.333000000000196e-06}, {'diff': 2.3479999999992396e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.30600000000053e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:38.421" endtime="20201030 18:27:38.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:38.429" level="INFO">${OVERHEAD} = {'diff': [2.375000000002375e-06, 2.375000000002375e-06, 2.333000000000196e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.30600000000053e-06, 2.346999999999766e-06, 2.362000000002279e-06, 2.3469...</msg>
<status status="PASS" starttime="20201030 18:27:38.426" endtime="20201030 18:27:38.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.433" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:38.432" endtime="20201030 18:27:38.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.436" level="INFO">VALUE: [2.375000000002375e-06, 2.375000000002375e-06, 2.333000000000196e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.30600000000053e-06, 2.346999999999766e-06, 2.362000000002279e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.3189999999971567e-06, 2.3749999999989058e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.319000000000626e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.3470000000032354e-06, 2.3470000000032354e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.3619999999988095e-06, 2.346999999999766e-06, 2.3200000000000998e-06, 2.3189999999971567e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.3049999999975868e-06, 2.362000000002279e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06]</msg>
<status status="PASS" starttime="20201030 18:27:38.434" endtime="20201030 18:27:38.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.430" endtime="20201030 18:27:38.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:38.443" endtime="20201030 18:27:38.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.441" endtime="20201030 18:27:38.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.440" endtime="20201030 18:27:38.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.087" endtime="20201030 18:27:38.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.087" endtime="20201030 18:27:38.463"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.471" endtime="20201030 18:27:38.483"></status>
</kw>
<msg timestamp="20201030 18:27:38.483" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.470" endtime="20201030 18:27:38.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.486" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.484" endtime="20201030 18:27:38.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.487" endtime="20201030 18:27:38.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.467" endtime="20201030 18:27:38.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.465" endtime="20201030 18:27:38.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.496" endtime="20201030 18:27:38.779"></status>
</kw>
<msg timestamp="20201030 18:27:38.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019777083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.494" endtime="20201030 18:27:38.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019777083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.784" endtime="20201030 18:27:38.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.792" endtime="20201030 18:27:38.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.491" endtime="20201030 18:27:38.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.490" endtime="20201030 18:27:38.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:38.798" level="INFO">${RESULT} = [{'diff': 2.3889999999984757e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.362000000002279e-06}, {'diff': 2.3610000000028053e-06}, {'diff': 2.3749999999989058e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:38.795" endtime="20201030 18:27:38.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:38.803" level="INFO">${OVERHEAD} = {'diff': [2.3889999999984757e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.362000000002279e-06, 2.3610000000028053e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.4...</msg>
<status status="PASS" starttime="20201030 18:27:38.799" endtime="20201030 18:27:38.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.807" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:38.806" endtime="20201030 18:27:38.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.810" level="INFO">VALUE: [2.3889999999984757e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.362000000002279e-06, 2.3610000000028053e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.401999999998572e-06, 2.360999999999336e-06, 2.3619999999988095e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.3619999999988095e-06, 2.333000000000196e-06, 2.3339999999996697e-06, 2.401999999998572e-06, 2.360999999999336e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.333000000000196e-06, 2.3619999999988095e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.3749999999989058e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.3339999999996697e-06, 2.375000000002375e-06, 2.3339999999996697e-06, 2.3479999999992396e-06, 2.403000000001515e-06, 2.360999999999336e-06, 2.360999999999336e-06]</msg>
<status status="PASS" starttime="20201030 18:27:38.808" endtime="20201030 18:27:38.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.804" endtime="20201030 18:27:38.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:38.814" endtime="20201030 18:27:38.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.813" endtime="20201030 18:27:38.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.811" endtime="20201030 18:27:38.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.464" endtime="20201030 18:27:38.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.464" endtime="20201030 18:27:38.835"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.843" endtime="20201030 18:27:38.855"></status>
</kw>
<msg timestamp="20201030 18:27:38.855" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.841" endtime="20201030 18:27:38.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.858" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.856" endtime="20201030 18:27:38.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.859" endtime="20201030 18:27:38.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.839" endtime="20201030 18:27:38.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.837" endtime="20201030 18:27:38.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.868" endtime="20201030 18:27:39.152"></status>
</kw>
<msg timestamp="20201030 18:27:39.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019783583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.866" endtime="20201030 18:27:39.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019783583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.157" endtime="20201030 18:27:39.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.167" endtime="20201030 18:27:39.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.864" endtime="20201030 18:27:39.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.862" endtime="20201030 18:27:39.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:39.175" level="INFO">${RESULT} = [{'diff': 2.3479999999992396e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.333000000000196e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.3610000000028053e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:39.171" endtime="20201030 18:27:39.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:39.180" level="INFO">${OVERHEAD} = {'diff': [2.3479999999992396e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2....</msg>
<status status="PASS" starttime="20201030 18:27:39.176" endtime="20201030 18:27:39.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.185" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:39.183" endtime="20201030 18:27:39.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.188" level="INFO">VALUE: [2.3479999999992396e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.375000000002375e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3889999999984757e-06, 2.333000000000196e-06, 2.4020000000020414e-06, 2.3889999999984757e-06, 2.375000000002375e-06, 2.3189999999971567e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.3749999999989058e-06, 2.3619999999988095e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3619999999988095e-06, 2.319000000000626e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3200000000000998e-06, 2.360999999999336e-06, 2.403000000001515e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.362000000002279e-06]</msg>
<status status="PASS" starttime="20201030 18:27:39.187" endtime="20201030 18:27:39.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.181" endtime="20201030 18:27:39.189"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:39.195" endtime="20201030 18:27:39.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.193" endtime="20201030 18:27:39.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.191" endtime="20201030 18:27:39.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.836" endtime="20201030 18:27:39.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.835" endtime="20201030 18:27:39.216"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.224" endtime="20201030 18:27:39.235"></status>
</kw>
<msg timestamp="20201030 18:27:39.236" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.223" endtime="20201030 18:27:39.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.238" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.237" endtime="20201030 18:27:39.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.239" endtime="20201030 18:27:39.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.220" endtime="20201030 18:27:39.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.218" endtime="20201030 18:27:39.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.249" endtime="20201030 18:27:39.533"></status>
</kw>
<msg timestamp="20201030 18:27:39.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019751958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019754292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.247" endtime="20201030 18:27:39.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019751958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019754292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.537" endtime="20201030 18:27:39.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.546" endtime="20201030 18:27:39.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.245" endtime="20201030 18:27:39.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.243" endtime="20201030 18:27:39.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:39.552" level="INFO">${RESULT} = [{'diff': 2.3339999999996697e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.333000000000196e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.375000000002375e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:39.549" endtime="20201030 18:27:39.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:39.556" level="INFO">${OVERHEAD} = {'diff': [2.3339999999996697e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.333...</msg>
<status status="PASS" starttime="20201030 18:27:39.553" endtime="20201030 18:27:39.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.560" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:39.559" endtime="20201030 18:27:39.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.563" level="INFO">VALUE: [2.3339999999996697e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.3610000000028053e-06, 2.333000000000196e-06, 2.403000000001515e-06, 2.3749999999989058e-06, 2.333000000000196e-06, 2.334000000003139e-06, 2.3479999999992396e-06, 2.3610000000028053e-06, 2.319000000000626e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.417000000001085e-06, 2.30600000000053e-06, 2.348000000002709e-06, 2.346999999999766e-06, 2.3619999999988095e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.389000000001945e-06, 2.360999999999336e-06, 2.3339999999996697e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.346999999999766e-06]</msg>
<status status="PASS" starttime="20201030 18:27:39.561" endtime="20201030 18:27:43.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.557" endtime="20201030 18:27:43.500"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:43.509" endtime="20201030 18:27:43.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.506" endtime="20201030 18:27:43.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.503" endtime="20201030 18:27:43.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.217" endtime="20201030 18:27:43.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.217" endtime="20201030 18:27:43.533"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.550" endtime="20201030 18:27:43.564"></status>
</kw>
<msg timestamp="20201030 18:27:43.565" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.547" endtime="20201030 18:27:43.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.570" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.567" endtime="20201030 18:27:43.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.572" endtime="20201030 18:27:43.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.541" endtime="20201030 18:27:43.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.538" endtime="20201030 18:27:43.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.592" endtime="20201030 18:27:43.884"></status>
</kw>
<msg timestamp="20201030 18:27:43.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032472958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032475306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.589" endtime="20201030 18:27:43.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032472958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032475306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.888" endtime="20201030 18:27:43.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.897" endtime="20201030 18:27:43.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.583" endtime="20201030 18:27:43.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.580" endtime="20201030 18:27:43.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:43.903" level="INFO">${RESULT} = [{'diff': 2.3479999999992396e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.3610000000062747e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:43.900" endtime="20201030 18:27:43.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:43.908" level="INFO">${OVERHEAD} = {'diff': [2.3479999999992396e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.360999999999336e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 18:27:43.904" endtime="20201030 18:27:43.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.912" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:43.911" endtime="20201030 18:27:43.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.914" level="INFO">VALUE: [2.3479999999992396e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3890000000054146e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.332999999993257e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.2910000000014863e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.27800000000139e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.4169999999976155e-06, 2.3339999999996697e-06, 2.4299999999977118e-06, 2.3749999999989058e-06, 2.4309999999971854e-06, 2.3890000000054146e-06, 2.346999999999766e-06, 2.3480000000061785e-06, 2.346999999999766e-06, 2.3200000000000998e-06, 2.4169999999976155e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.360999999999336e-06]</msg>
<status status="PASS" starttime="20201030 18:27:43.913" endtime="20201030 18:27:43.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.909" endtime="20201030 18:27:43.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:43.919" endtime="20201030 18:27:43.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.918" endtime="20201030 18:27:43.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.917" endtime="20201030 18:27:43.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.535" endtime="20201030 18:27:43.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.534" endtime="20201030 18:27:43.940"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.948" endtime="20201030 18:27:43.959"></status>
</kw>
<msg timestamp="20201030 18:27:43.960" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.946" endtime="20201030 18:27:43.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.962" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.961" endtime="20201030 18:27:43.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.963" endtime="20201030 18:27:43.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.944" endtime="20201030 18:27:43.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.942" endtime="20201030 18:27:43.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.972" endtime="20201030 18:27:44.258"></status>
</kw>
<msg timestamp="20201030 18:27:44.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019607556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019609917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.971" endtime="20201030 18:27:44.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019607556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019609917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.262" endtime="20201030 18:27:44.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.271" endtime="20201030 18:27:44.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.968" endtime="20201030 18:27:44.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.966" endtime="20201030 18:27:44.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:44.278" level="INFO">${RESULT} = [{'diff': 2.360999999999336e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.333000000000196e-06}, {'diff': 2.3610000000028053e-06}, {'diff': 2.360999999999336e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:44.275" endtime="20201030 18:27:44.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:44.282" level="INFO">${OVERHEAD} = {'diff': [2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.319000000000626e-06, 2.360...</msg>
<status status="PASS" starttime="20201030 18:27:44.279" endtime="20201030 18:27:44.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.286" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:44.285" endtime="20201030 18:27:44.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.289" level="INFO">VALUE: [2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.319000000000626e-06, 2.360999999999336e-06, 2.362000000002279e-06, 2.362000000002279e-06, 2.3339999999996697e-06, 2.3470000000032354e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3200000000000998e-06, 2.3749999999989058e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.375000000002375e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3619999999988095e-06, 2.3619999999988095e-06, 2.2639999999983507e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.362000000002279e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3200000000000998e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.346999999999766e-06, 2.431000000000655e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.3889999999984757e-06, 2.3329999999967266e-06]</msg>
<status status="PASS" starttime="20201030 18:27:44.287" endtime="20201030 18:27:44.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.283" endtime="20201030 18:27:44.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:44.294" endtime="20201030 18:27:44.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.292" endtime="20201030 18:27:44.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.291" endtime="20201030 18:27:44.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.941" endtime="20201030 18:27:44.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.940" endtime="20201030 18:27:44.314"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.322" endtime="20201030 18:27:44.334"></status>
</kw>
<msg timestamp="20201030 18:27:44.335" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.320" endtime="20201030 18:27:44.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.337" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.336" endtime="20201030 18:27:44.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.338" endtime="20201030 18:27:44.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.318" endtime="20201030 18:27:44.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.316" endtime="20201030 18:27:44.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.348" endtime="20201030 18:27:44.637"></status>
</kw>
<msg timestamp="20201030 18:27:44.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019370375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01937275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:44.347" endtime="20201030 18:27:44.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019370375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01937275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:44.641" endtime="20201030 18:27:44.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.649" endtime="20201030 18:27:44.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.344" endtime="20201030 18:27:44.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.342" endtime="20201030 18:27:44.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:44.656" level="INFO">${RESULT} = [{'diff': 2.375000000002375e-06}, {'diff': 2.30600000000053e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.3470000000032354e-06}, {'diff': 2.362000000002279e-06}, {'diff': 2.3339999999996697e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:44.653" endtime="20201030 18:27:44.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:44.660" level="INFO">${OVERHEAD} = {'diff': [2.375000000002375e-06, 2.30600000000053e-06, 2.360999999999336e-06, 2.3470000000032354e-06, 2.362000000002279e-06, 2.3339999999996697e-06, 2.346999999999766e-06, 2.348000000002709e-06, 2.346...</msg>
<status status="PASS" starttime="20201030 18:27:44.657" endtime="20201030 18:27:44.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.664" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:44.663" endtime="20201030 18:27:44.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.666" level="INFO">VALUE: [2.375000000002375e-06, 2.30600000000053e-06, 2.360999999999336e-06, 2.3470000000032354e-06, 2.362000000002279e-06, 2.3339999999996697e-06, 2.346999999999766e-06, 2.348000000002709e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.401999999998572e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.375000000002375e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.305000000001056e-06, 2.3610000000028053e-06, 2.30600000000053e-06, 2.3749999999989058e-06, 2.3470000000032354e-06, 2.362000000002279e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.3749999999989058e-06, 2.319000000000626e-06, 2.360999999999336e-06, 2.3200000000000998e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.30600000000053e-06, 2.4169999999976155e-06, 2.319000000000626e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.375000000002375e-06, 2.3479999999992396e-06, 2.346999999999766e-06]</msg>
<status status="PASS" starttime="20201030 18:27:44.665" endtime="20201030 18:27:44.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.661" endtime="20201030 18:27:44.677"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:44.680" endtime="20201030 18:27:44.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.679" endtime="20201030 18:27:44.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.678" endtime="20201030 18:27:44.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.315" endtime="20201030 18:27:44.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.315" endtime="20201030 18:27:44.701"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.710" endtime="20201030 18:27:44.722"></status>
</kw>
<msg timestamp="20201030 18:27:44.723" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.708" endtime="20201030 18:27:44.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.725" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.724" endtime="20201030 18:27:44.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.726" endtime="20201030 18:27:44.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.705" endtime="20201030 18:27:44.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.703" endtime="20201030 18:27:44.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.735" endtime="20201030 18:27:45.019"></status>
</kw>
<msg timestamp="20201030 18:27:45.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020741986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020744361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.733" endtime="20201030 18:27:45.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020741986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020744361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.024" endtime="20201030 18:27:45.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.032" endtime="20201030 18:27:45.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.731" endtime="20201030 18:27:45.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.729" endtime="20201030 18:27:45.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:45.038" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.333000000000196e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.387999999999002e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:45.035" endtime="20201030 18:27:45.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:45.043" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.387999999999002e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.4029999999980456e-06, 2....</msg>
<status status="PASS" starttime="20201030 18:27:45.039" endtime="20201030 18:27:45.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.047" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:45.046" endtime="20201030 18:27:45.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.050" level="INFO">VALUE: [2.3749999999989058e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.387999999999002e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.4029999999980456e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.3619999999988095e-06, 2.375000000002375e-06, 2.360999999999336e-06, 2.4029999999980456e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.3619999999988095e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.3200000000000998e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.27800000000139e-06, 2.3889999999984757e-06, 2.30600000000053e-06, 2.3610000000028053e-06, 2.3610000000028053e-06, 2.3610000000028053e-06, 2.29200000000096e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.3470000000032354e-06, 2.346999999999766e-06, 2.319000000000626e-06, 2.3749999999989058e-06, 2.3889999999984757e-06, 2.3610000000028053e-06, 2.346999999999766e-06, 2.348000000002709e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.2779999999979206e-06]</msg>
<status status="PASS" starttime="20201030 18:27:45.049" endtime="20201030 18:27:45.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.044" endtime="20201030 18:27:45.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:45.055" endtime="20201030 18:27:45.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.053" endtime="20201030 18:27:45.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.052" endtime="20201030 18:27:45.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.702" endtime="20201030 18:27:45.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.701" endtime="20201030 18:27:45.075"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.083" endtime="20201030 18:27:45.094"></status>
</kw>
<msg timestamp="20201030 18:27:45.095" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.082" endtime="20201030 18:27:45.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.097" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.096" endtime="20201030 18:27:45.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.098" endtime="20201030 18:27:45.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.079" endtime="20201030 18:27:45.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.077" endtime="20201030 18:27:45.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.107" endtime="20201030 18:27:45.395"></status>
</kw>
<msg timestamp="20201030 18:27:45.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019295111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019297486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.106" endtime="20201030 18:27:45.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019295111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019297486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.399" endtime="20201030 18:27:45.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.407" endtime="20201030 18:27:45.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.103" endtime="20201030 18:27:45.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.101" endtime="20201030 18:27:45.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:45.415" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.3339999999996697e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.3610000000028053e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.346999999999766e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:45.411" endtime="20201030 18:27:45.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:45.419" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 18:27:45.416" endtime="20201030 18:27:45.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.423" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:45.422" endtime="20201030 18:27:45.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.425" level="INFO">VALUE: [2.3749999999989058e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.3470000000032354e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.4029999999980456e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.27800000000139e-06, 2.3479999999992396e-06, 2.3339999999996697e-06, 2.2919999999974905e-06, 2.27800000000139e-06, 2.346999999999766e-06, 2.3619999999988095e-06, 2.3889999999984757e-06, 2.3749999999989058e-06, 2.3479999999992396e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.4300000000011812e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.362000000002279e-06, 2.333000000000196e-06, 2.389000000001945e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3339999999996697e-06]</msg>
<status status="PASS" starttime="20201030 18:27:45.424" endtime="20201030 18:27:45.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.420" endtime="20201030 18:27:45.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:45.430" endtime="20201030 18:27:45.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.429" endtime="20201030 18:27:45.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.428" endtime="20201030 18:27:45.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.076" endtime="20201030 18:27:45.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.076" endtime="20201030 18:27:45.451"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.459" endtime="20201030 18:27:45.470"></status>
</kw>
<msg timestamp="20201030 18:27:45.471" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.457" endtime="20201030 18:27:45.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.473" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.472" endtime="20201030 18:27:45.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.474" endtime="20201030 18:27:45.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.455" endtime="20201030 18:27:45.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.453" endtime="20201030 18:27:45.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.484" endtime="20201030 18:27:45.770"></status>
</kw>
<msg timestamp="20201030 18:27:45.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.483" endtime="20201030 18:27:45.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.774" endtime="20201030 18:27:45.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.784" endtime="20201030 18:27:45.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.480" endtime="20201030 18:27:45.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.478" endtime="20201030 18:27:45.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:45.790" level="INFO">${RESULT} = [{'diff': 2.3479999999992396e-06}, {'diff': 2.29200000000096e-06}, {'diff': 2.3200000000000998e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.360999999999336e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:45.787" endtime="20201030 18:27:45.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:45.794" level="INFO">${OVERHEAD} = {'diff': [2.3479999999992396e-06, 2.29200000000096e-06, 2.3200000000000998e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346...</msg>
<status status="PASS" starttime="20201030 18:27:45.791" endtime="20201030 18:27:45.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.798" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:45.797" endtime="20201030 18:27:45.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.801" level="INFO">VALUE: [2.3479999999992396e-06, 2.29200000000096e-06, 2.3200000000000998e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.2779999999979206e-06, 2.3339999999996697e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.27800000000139e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.348000000002709e-06, 2.3889999999984757e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.3619999999988095e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.389000000001945e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.3339999999996697e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.3470000000032354e-06, 2.346999999999766e-06, 2.4160000000016113e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3889999999984757e-06, 2.346999999999766e-06]</msg>
<status status="PASS" starttime="20201030 18:27:45.800" endtime="20201030 18:27:45.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.795" endtime="20201030 18:27:45.805"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:45.809" endtime="20201030 18:27:45.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.807" endtime="20201030 18:27:45.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.806" endtime="20201030 18:27:45.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.452" endtime="20201030 18:27:45.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.451" endtime="20201030 18:27:45.829"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.837" endtime="20201030 18:27:45.849"></status>
</kw>
<msg timestamp="20201030 18:27:45.850" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.836" endtime="20201030 18:27:45.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.852" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.851" endtime="20201030 18:27:45.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.853" endtime="20201030 18:27:45.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.833" endtime="20201030 18:27:45.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.831" endtime="20201030 18:27:45.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.862" endtime="20201030 18:27:46.149"></status>
</kw>
<msg timestamp="20201030 18:27:46.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019381583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019383972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.860" endtime="20201030 18:27:46.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019381583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019383972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.153" endtime="20201030 18:27:46.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.162" endtime="20201030 18:27:46.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.858" endtime="20201030 18:27:46.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.856" endtime="20201030 18:27:46.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:46.168" level="INFO">${RESULT} = [{'diff': 2.3889999999984757e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.3329999999967266e-06}, {'diff': 2.3889999999984757e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.3610000000028053e-06...</msg>
<status status="PASS" starttime="20201030 18:27:46.165" endtime="20201030 18:27:46.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:46.173" level="INFO">${OVERHEAD} = {'diff': [2.3889999999984757e-06, 2.360999999999336e-06, 2.3329999999967266e-06, 2.3889999999984757e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2...</msg>
<status status="PASS" starttime="20201030 18:27:46.169" endtime="20201030 18:27:46.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.178" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:46.177" endtime="20201030 18:27:46.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.180" level="INFO">VALUE: [2.3889999999984757e-06, 2.360999999999336e-06, 2.3329999999967266e-06, 2.3889999999984757e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.29200000000096e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.346999999999766e-06, 2.3200000000000998e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.389000000001945e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3470000000032354e-06, 2.334000000003139e-06, 2.389000000001945e-06, 2.360999999999336e-06, 2.417000000001085e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.3339999999996697e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.3889999999984757e-06, 2.3059999999970604e-06]</msg>
<status status="PASS" starttime="20201030 18:27:46.179" endtime="20201030 18:27:46.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.174" endtime="20201030 18:27:46.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:46.186" endtime="20201030 18:27:46.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.184" endtime="20201030 18:27:46.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.183" endtime="20201030 18:27:46.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.830" endtime="20201030 18:27:46.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.830" endtime="20201030 18:27:46.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.562" endtime="20201030 18:27:46.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:46.210" endtime="20201030 18:27:46.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.209" endtime="20201030 18:27:46.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.207" endtime="20201030 18:27:46.230"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:34.491" endtime="20201030 18:27:46.230" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:46.237" endtime="20201030 18:27:46.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.236" endtime="20201030 18:27:46.257"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.270" endtime="20201030 18:27:46.286"></status>
</kw>
<msg timestamp="20201030 18:27:46.286" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.268" endtime="20201030 18:27:46.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.289" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.287" endtime="20201030 18:27:46.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.292" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:46.290" endtime="20201030 18:27:46.292"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:46.266" endtime="20201030 18:27:46.293"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:46.263" endtime="20201030 18:27:46.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.262" endtime="20201030 18:27:46.294"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:46.297" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:46.297" endtime="20201030 18:27:46.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.295" endtime="20201030 18:27:46.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.261" endtime="20201030 18:27:46.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.261" endtime="20201030 18:27:46.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.299" endtime="20201030 18:27:46.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.259" endtime="20201030 18:27:46.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.258" endtime="20201030 18:27:46.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.235" endtime="20201030 18:27:46.302"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.310" endtime="20201030 18:27:46.330"></status>
</kw>
<msg timestamp="20201030 18:27:46.331" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.308" endtime="20201030 18:27:46.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.333" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.332" endtime="20201030 18:27:46.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.334" endtime="20201030 18:27:46.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.306" endtime="20201030 18:27:46.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.304" endtime="20201030 18:27:46.337"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.339" endtime="20201030 18:27:46.341"></status>
</kw>
<msg timestamp="20201030 18:27:46.341" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:46.338" endtime="20201030 18:27:46.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.345" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:46.344" endtime="20201030 18:27:46.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.347" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:46.346" endtime="20201030 18:27:46.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.342" endtime="20201030 18:27:46.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.352" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:46.351" endtime="20201030 18:27:46.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.354" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:46.353" endtime="20201030 18:27:46.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.349" endtime="20201030 18:27:46.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.361" endtime="20201030 18:27:46.648"></status>
</kw>
<msg timestamp="20201030 18:27:46.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065336528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065344, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:46.359" endtime="20201030 18:27:46.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065336528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065344, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:46.652" endtime="20201030 18:27:46.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.661" endtime="20201030 18:27:46.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.357" endtime="20201030 18:27:46.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.355" endtime="20201030 18:27:46.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:46.667" level="INFO">${RESULT} = [{'diff': 7.471999999994483e-06}, {'diff': 7.667000000002866e-06}, {'diff': 7.667000000002866e-06}, {'diff': 7.722000000001672e-06}, {'diff': 7.667000000002866e-06}, {'diff': 7.694000000002532e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:46.664" endtime="20201030 18:27:46.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:46.671" level="INFO">${OVERHEAD} = {'diff': [7.471999999994483e-06, 7.667000000002866e-06, 7.667000000002866e-06, 7.722000000001672e-06, 7.667000000002866e-06, 7.694000000002532e-06, 7.625000000011095e-06, 7.667000000002866e-06, 7.7359...</msg>
<status status="PASS" starttime="20201030 18:27:46.668" endtime="20201030 18:27:46.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.676" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 18:27:46.675" endtime="20201030 18:27:46.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.679" level="INFO">VALUE: [7.471999999994483e-06, 7.667000000002866e-06, 7.667000000002866e-06, 7.722000000001672e-06, 7.667000000002866e-06, 7.694000000002532e-06, 7.625000000011095e-06, 7.667000000002866e-06, 7.735999999994303e-06, 7.652999999996357e-06, 7.638999999989848e-06, 7.680999999995497e-06, 7.695000000002006e-06, 7.667000000002866e-06, 7.598000000011429e-06, 7.679999999996023e-06, 7.667000000002866e-06, 7.667000000002866e-06, 7.750000000000812e-06, 7.611000000004586e-06, 7.666000000003392e-06, 7.665999999989515e-06, 7.667000000002866e-06, 7.694000000002532e-06, 7.680000000009901e-06, 7.624999999997217e-06, 7.722000000001672e-06, 7.665999999989515e-06, 7.679999999996023e-06, 7.652999999996357e-06, 7.666000000003392e-06, 7.707999999995163e-06, 7.651999999996884e-06, 7.652999999996357e-06, 7.681000000009375e-06, 7.694000000002532e-06, 7.693999999988654e-06, 7.694000000002532e-06, 7.665999999989515e-06, 7.652999999996357e-06, 7.651999999996884e-06, 7.666000000003392e-06, 7.680999999995497e-06, 7.624999999997217e-06, 7.651999999996884e-06, 7.666000000003392e-06, 7.652000000010761e-06, 7.666000000003392e-06, 7.666000000003392e-06, 7.735999999994303e-06]</msg>
<status status="PASS" starttime="20201030 18:27:46.677" endtime="20201030 18:27:46.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.672" endtime="20201030 18:27:46.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:46.683" endtime="20201030 18:27:46.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.681" endtime="20201030 18:27:46.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.680" endtime="20201030 18:27:46.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.302" endtime="20201030 18:27:46.704"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:46.232" endtime="20201030 18:27:46.704" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:46.711" endtime="20201030 18:27:46.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.709" endtime="20201030 18:27:46.731"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.746" endtime="20201030 18:27:46.760"></status>
</kw>
<msg timestamp="20201030 18:27:46.760" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.744" endtime="20201030 18:27:46.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.763" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.762" endtime="20201030 18:27:46.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.766" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:46.764" endtime="20201030 18:27:46.766"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:46.741" endtime="20201030 18:27:46.767"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:46.739" endtime="20201030 18:27:46.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.737" endtime="20201030 18:27:46.768"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:46.772" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:46.771" endtime="20201030 18:27:46.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.769" endtime="20201030 18:27:46.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.736" endtime="20201030 18:27:46.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.736" endtime="20201030 18:27:46.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.773" endtime="20201030 18:27:46.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.733" endtime="20201030 18:27:46.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.731" endtime="20201030 18:27:46.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.708" endtime="20201030 18:27:46.777"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.786" endtime="20201030 18:27:46.890"></status>
</kw>
<msg timestamp="20201030 18:27:46.890" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.784" endtime="20201030 18:27:46.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.893" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.892" endtime="20201030 18:27:46.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.894" endtime="20201030 18:27:46.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.781" endtime="20201030 18:27:46.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.779" endtime="20201030 18:27:46.897"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.899" endtime="20201030 18:27:46.900"></status>
</kw>
<msg timestamp="20201030 18:27:46.901" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:46.898" endtime="20201030 18:27:46.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.906" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:46.904" endtime="20201030 18:27:46.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.908" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:46.907" endtime="20201030 18:27:46.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.902" endtime="20201030 18:27:46.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.913" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:46.912" endtime="20201030 18:27:46.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.915" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:46.914" endtime="20201030 18:27:46.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.909" endtime="20201030 18:27:46.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.922" endtime="20201030 18:27:47.225"></status>
</kw>
<msg timestamp="20201030 18:27:47.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069315028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069374639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.920" endtime="20201030 18:27:47.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069315028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069374639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.234" endtime="20201030 18:27:47.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.252" endtime="20201030 18:27:47.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.918" endtime="20201030 18:27:47.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.916" endtime="20201030 18:27:47.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:47.265" level="INFO">${RESULT} = [{'diff': 5.961100000000108e-05}, {'diff': 5.940299999999954e-05}, {'diff': 5.941699999999217e-05}, {'diff': 5.941700000000605e-05}, {'diff': 5.938899999999303e-05}, {'diff': 5.940299999999954e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:47.259" endtime="20201030 18:27:47.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:47.274" level="INFO">${OVERHEAD} = {'diff': [5.961100000000108e-05, 5.940299999999954e-05, 5.941699999999217e-05, 5.941700000000605e-05, 5.938899999999303e-05, 5.940299999999954e-05, 5.9457999999998346e-05, 5.941699999999217e-05, 5.938...</msg>
<status status="PASS" starttime="20201030 18:27:47.267" endtime="20201030 18:27:47.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.280" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 18:27:47.279" endtime="20201030 18:27:47.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.282" level="INFO">VALUE: [5.961100000000108e-05, 5.940299999999954e-05, 5.941699999999217e-05, 5.941700000000605e-05, 5.938899999999303e-05, 5.940299999999954e-05, 5.9457999999998346e-05, 5.941699999999217e-05, 5.938900000000691e-05, 5.938900000000691e-05, 5.933299999999475e-05, 5.940299999999954e-05, 5.9472000000004854e-05, 5.9457999999998346e-05, 5.9402000000000066e-05, 5.938799999999356e-05, 5.9402000000000066e-05, 5.93750000000004e-05, 5.934699999998738e-05, 5.941699999999217e-05, 5.940299999999954e-05, 5.9402000000000066e-05, 5.940299999999954e-05, 5.943100000001256e-05, 5.941700000000605e-05, 5.940299999999954e-05, 5.940299999999954e-05, 5.940299999999954e-05, 5.9402000000000066e-05, 5.936099999999389e-05, 5.9457999999998346e-05, 5.9485999999997485e-05, 5.940299999999954e-05, 5.9402000000013944e-05, 5.940199999998619e-05, 5.945799999998447e-05, 5.940299999998566e-05, 5.945899999998394e-05, 5.945800000001222e-05, 5.93750000000004e-05, 5.9402000000013944e-05, 5.938899999999303e-05, 5.9402000000013944e-05, 5.938899999999303e-05, 5.9389000000020786e-05, 5.938899999999303e-05, 5.93750000000004e-05, 5.944499999999131e-05, 5.944499999999131e-05, 5.938800000002131e-05]</msg>
<status status="PASS" starttime="20201030 18:27:47.281" endtime="20201030 18:27:47.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.275" endtime="20201030 18:27:47.283"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:47.286" endtime="20201030 18:27:47.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.285" endtime="20201030 18:27:47.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.284" endtime="20201030 18:27:47.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.778" endtime="20201030 18:27:47.307"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:46.706" endtime="20201030 18:27:47.307" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:47.314" endtime="20201030 18:27:47.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.313" endtime="20201030 18:27:47.334"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.347" endtime="20201030 18:27:47.361"></status>
</kw>
<msg timestamp="20201030 18:27:47.361" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.345" endtime="20201030 18:27:47.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.364" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.362" endtime="20201030 18:27:47.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.367" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:47.365" endtime="20201030 18:27:47.367"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:47.343" endtime="20201030 18:27:47.368"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:47.340" endtime="20201030 18:27:47.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.339" endtime="20201030 18:27:47.368"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:47.372" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:47.371" endtime="20201030 18:27:47.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.369" endtime="20201030 18:27:47.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.338" endtime="20201030 18:27:47.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.338" endtime="20201030 18:27:47.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.374" endtime="20201030 18:27:47.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.336" endtime="20201030 18:27:47.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.335" endtime="20201030 18:27:47.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.311" endtime="20201030 18:27:47.377"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.387" endtime="20201030 18:27:47.721"></status>
</kw>
<msg timestamp="20201030 18:27:47.721" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.386" endtime="20201030 18:27:47.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.725" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.723" endtime="20201030 18:27:47.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.726" endtime="20201030 18:27:47.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.382" endtime="20201030 18:27:47.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.380" endtime="20201030 18:27:47.731"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.733" endtime="20201030 18:27:47.736"></status>
</kw>
<msg timestamp="20201030 18:27:47.737" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:47.732" endtime="20201030 18:27:47.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.742" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:47.741" endtime="20201030 18:27:47.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.745" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:47.743" endtime="20201030 18:27:47.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.738" endtime="20201030 18:27:47.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.750" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:47.748" endtime="20201030 18:27:47.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.752" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:47.751" endtime="20201030 18:27:47.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.746" endtime="20201030 18:27:47.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.760" endtime="20201030 18:27:48.072"></status>
</kw>
<msg timestamp="20201030 18:27:48.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071262236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071376014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.758" endtime="20201030 18:27:48.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071262236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071376014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.080" endtime="20201030 18:27:48.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.089" endtime="20201030 18:27:48.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.755" endtime="20201030 18:27:48.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.754" endtime="20201030 18:27:48.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.097" level="INFO">${RESULT} = [{'diff': 0.00011377799999999494}, {'diff': 0.00011222199999999516}, {'diff': 0.00011225000000000818}, {'diff': 0.0001122499999999943}, {'diff': 0.0001122499999999943}, {'diff': 0.0001122499999999943}...</msg>
<status status="PASS" starttime="20201030 18:27:48.093" endtime="20201030 18:27:48.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:48.102" level="INFO">${OVERHEAD} = {'diff': [0.00011377799999999494, 0.00011222199999999516, 0.00011225000000000818, 0.0001122499999999943, 0.0001122499999999943, 0.0001122499999999943, 0.00011230599999999258, 0.0001122499999999943, 0....</msg>
<status status="PASS" starttime="20201030 18:27:48.098" endtime="20201030 18:27:48.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.107" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 18:27:48.106" endtime="20201030 18:27:48.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.109" level="INFO">VALUE: [0.00011377799999999494, 0.00011222199999999516, 0.00011225000000000818, 0.0001122499999999943, 0.0001122499999999943, 0.0001122499999999943, 0.00011230599999999258, 0.0001122499999999943, 0.00011220800000000253, 0.00011223599999998779, 0.00011226400000000081, 0.00011223699999998726, 0.00011226300000000133, 0.00011225000000000818, 0.00011226400000000081, 0.00011220800000000253, 0.00011222199999999516, 0.00011226300000000133, 0.00011222200000002291, 0.00011227699999999396, 0.00011226400000000081, 0.00011223599999998779, 0.00011230500000000698, 0.00011223699999998726, 0.00011225000000000818, 0.00011222199999999516, 0.00011223600000001555, 0.00011225000000000818, 0.00011223600000001555, 0.00011222300000002239, 0.00011225000000003593, 0.00011223599999998779, 0.00011223599999998779, 0.00011222199999999516, 0.00011220800000000253, 0.00011223599999998779, 0.00011225000000003593, 0.00011227799999996568, 0.00011222199999999516, 0.00011220800000000253, 0.00011223599999998779, 0.00011223599999998779, 0.0001122780000000212, 0.00011226400000002856, 0.00011227799999996568, 0.00011226400000002856, 0.00011226400000002856, 0.00011223599999998779, 0.00011220800000000253, 0.00011226399999997305]</msg>
<status status="PASS" starttime="20201030 18:27:48.108" endtime="20201030 18:27:48.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.103" endtime="20201030 18:27:48.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.114" endtime="20201030 18:27:48.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.112" endtime="20201030 18:27:48.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.111" endtime="20201030 18:27:48.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.378" endtime="20201030 18:27:48.134"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:47.309" endtime="20201030 18:27:48.135" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.142" endtime="20201030 18:27:48.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.140" endtime="20201030 18:27:48.161"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.174" endtime="20201030 18:27:48.191"></status>
</kw>
<msg timestamp="20201030 18:27:48.191" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.173" endtime="20201030 18:27:48.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.194" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.192" endtime="20201030 18:27:48.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.197" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:48.195" endtime="20201030 18:27:48.197"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:48.170" endtime="20201030 18:27:48.198"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:48.168" endtime="20201030 18:27:48.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.167" endtime="20201030 18:27:48.198"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:48.202" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:48.201" endtime="20201030 18:27:48.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.199" endtime="20201030 18:27:48.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.166" endtime="20201030 18:27:48.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.165" endtime="20201030 18:27:48.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.204" endtime="20201030 18:27:48.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.164" endtime="20201030 18:27:48.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.162" endtime="20201030 18:27:48.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.139" endtime="20201030 18:27:48.207"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.215" endtime="20201030 18:27:48.236"></status>
</kw>
<msg timestamp="20201030 18:27:48.237" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.214" endtime="20201030 18:27:48.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.239" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.238" endtime="20201030 18:27:48.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.240" endtime="20201030 18:27:48.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.211" endtime="20201030 18:27:48.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.209" endtime="20201030 18:27:48.243"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.245" endtime="20201030 18:27:48.246"></status>
</kw>
<msg timestamp="20201030 18:27:48.247" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:48.243" endtime="20201030 18:27:48.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.251" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:48.250" endtime="20201030 18:27:48.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.253" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:48.252" endtime="20201030 18:27:48.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.248" endtime="20201030 18:27:48.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.257" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:48.256" endtime="20201030 18:27:48.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.259" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:48.259" endtime="20201030 18:27:48.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.254" endtime="20201030 18:27:48.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.267" endtime="20201030 18:27:48.555"></status>
</kw>
<msg timestamp="20201030 18:27:48.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066420847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066423194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.265" endtime="20201030 18:27:48.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066420847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066423194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.559" endtime="20201030 18:27:48.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.567" endtime="20201030 18:27:48.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.262" endtime="20201030 18:27:48.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.261" endtime="20201030 18:27:48.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.574" level="INFO">${RESULT} = [{'diff': 2.346999999999766e-06}, {'diff': 2.431000000011063e-06}, {'diff': 2.3610000000062747e-06}, {'diff': 2.360999999992397e-06}, {'diff': 2.360999999992397e-06}, {'diff': 2.3610000000062747e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:48.570" endtime="20201030 18:27:48.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:48.579" level="INFO">${OVERHEAD} = {'diff': [2.346999999999766e-06, 2.431000000011063e-06, 2.3610000000062747e-06, 2.360999999992397e-06, 2.360999999992397e-06, 2.3610000000062747e-06, 2.3339999999927308e-06, 2.332999999993257e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 18:27:48.575" endtime="20201030 18:27:48.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.584" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 18:27:48.583" endtime="20201030 18:27:48.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.586" level="INFO">VALUE: [2.346999999999766e-06, 2.431000000011063e-06, 2.3610000000062747e-06, 2.360999999992397e-06, 2.360999999992397e-06, 2.3610000000062747e-06, 2.3339999999927308e-06, 2.332999999993257e-06, 2.3610000000062747e-06, 2.333000000007135e-06, 2.3620000000057484e-06, 2.360999999992397e-06, 2.3479999999992396e-06, 2.360999999992397e-06, 2.346999999999766e-06, 2.4029999999980456e-06, 2.3340000000066086e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.3339999999927308e-06, 2.3890000000054146e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3610000000062747e-06, 2.3340000000066086e-06, 2.3620000000057484e-06, 2.360999999992397e-06, 2.346999999999766e-06, 2.3610000000062747e-06, 2.3479999999992396e-06, 2.3339999999927308e-06, 2.2910000000014863e-06, 2.26400000000182e-06, 2.4029999999980456e-06, 2.346999999999766e-06, 2.3200000000000998e-06, 2.3620000000057484e-06, 2.360999999992397e-06, 2.3610000000062747e-06, 2.3479999999992396e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.4029999999980456e-06, 2.3620000000057484e-06, 2.360999999992397e-06, 2.3610000000062747e-06, 2.346999999999766e-06, 2.360999999992397e-06, 2.3200000000000998e-06, 2.3619999999918706e-06]</msg>
<status status="PASS" starttime="20201030 18:27:48.585" endtime="20201030 18:27:48.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.580" endtime="20201030 18:27:48.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.591" endtime="20201030 18:27:48.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.589" endtime="20201030 18:27:48.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.588" endtime="20201030 18:27:48.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.207" endtime="20201030 18:27:48.611"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:48.136" endtime="20201030 18:27:48.612" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.618" endtime="20201030 18:27:48.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.617" endtime="20201030 18:27:48.638"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.652" endtime="20201030 18:27:48.666"></status>
</kw>
<msg timestamp="20201030 18:27:48.667" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.651" endtime="20201030 18:27:48.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.669" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.668" endtime="20201030 18:27:48.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.672" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:48.670" endtime="20201030 18:27:48.673"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:48.648" endtime="20201030 18:27:48.673"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:48.646" endtime="20201030 18:27:48.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.644" endtime="20201030 18:27:48.674"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:48.678" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:48.677" endtime="20201030 18:27:48.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.675" endtime="20201030 18:27:48.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.643" endtime="20201030 18:27:48.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.643" endtime="20201030 18:27:48.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.680" endtime="20201030 18:27:48.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.641" endtime="20201030 18:27:48.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.639" endtime="20201030 18:27:48.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.616" endtime="20201030 18:27:48.683"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.691" endtime="20201030 18:27:48.797"></status>
</kw>
<msg timestamp="20201030 18:27:48.798" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.689" endtime="20201030 18:27:48.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.800" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.799" endtime="20201030 18:27:48.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.801" endtime="20201030 18:27:48.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.687" endtime="20201030 18:27:48.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.685" endtime="20201030 18:27:48.804"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.806" endtime="20201030 18:27:48.808"></status>
</kw>
<msg timestamp="20201030 18:27:48.808" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:48.805" endtime="20201030 18:27:48.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.816" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:48.811" endtime="20201030 18:27:48.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.818" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:48.817" endtime="20201030 18:27:48.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.809" endtime="20201030 18:27:48.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.823" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:48.822" endtime="20201030 18:27:48.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.825" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:48.824" endtime="20201030 18:27:48.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.819" endtime="20201030 18:27:48.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.832" endtime="20201030 18:27:49.125"></status>
</kw>
<msg timestamp="20201030 18:27:49.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06718325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067201931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:48.830" endtime="20201030 18:27:49.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06718325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067201931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:49.129" endtime="20201030 18:27:49.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.138" endtime="20201030 18:27:49.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.828" endtime="20201030 18:27:49.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.826" endtime="20201030 18:27:49.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:49.145" level="INFO">${RESULT} = [{'diff': 1.8681000000006498e-05}, {'diff': 1.8693999999999655e-05}, {'diff': 1.8749999999997935e-05}, {'diff': 1.8679999999993147e-05}, {'diff': 1.8693999999999655e-05}, {'diff': 1.8693999999999655e-...</msg>
<status status="PASS" starttime="20201030 18:27:49.141" endtime="20201030 18:27:49.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:49.149" level="INFO">${OVERHEAD} = {'diff': [1.8681000000006498e-05, 1.8693999999999655e-05, 1.8749999999997935e-05, 1.8679999999993147e-05, 1.8693999999999655e-05, 1.8693999999999655e-05, 1.869499999999913e-05, 1.8707999999992286e-05,...</msg>
<status status="PASS" starttime="20201030 18:27:49.146" endtime="20201030 18:27:49.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.155" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 18:27:49.154" endtime="20201030 18:27:49.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.157" level="INFO">VALUE: [1.8681000000006498e-05, 1.8693999999999655e-05, 1.8749999999997935e-05, 1.8679999999993147e-05, 1.8693999999999655e-05, 1.8693999999999655e-05, 1.869499999999913e-05, 1.8707999999992286e-05, 1.8681000000006498e-05, 1.869499999999913e-05, 1.8721999999998795e-05, 1.8680000000007024e-05, 1.8707999999992286e-05, 1.8708000000006164e-05, 1.8679999999993147e-05, 1.8693999999999655e-05, 1.8680000000007024e-05, 1.8693999999999655e-05, 1.8680000000007024e-05, 1.8708000000006164e-05, 1.8681000000006498e-05, 1.8597999999994674e-05, 1.8693999999999655e-05, 1.8679999999993147e-05, 1.866699999999999e-05, 1.8681000000006498e-05, 1.8693999999999655e-05, 1.869499999999913e-05, 1.8666000000000516e-05, 1.8693999999999655e-05, 1.8708000000006164e-05, 1.862500000000822e-05, 1.868099999999262e-05, 1.8693999999999655e-05, 1.862499999999434e-05, 1.8679999999993147e-05, 1.8679999999993147e-05, 1.8693999999985778e-05, 1.8708999999977882e-05, 1.868099999999262e-05, 1.8679999999993147e-05, 1.862499999999434e-05, 1.866699999999999e-05, 1.869499999998525e-05, 1.868099999999262e-05, 1.8763999999976688e-05, 1.8708000000006164e-05, 1.8695000000013007e-05, 1.869499999998525e-05, 1.8679999999993147e-05]</msg>
<status status="PASS" starttime="20201030 18:27:49.156" endtime="20201030 18:27:49.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.150" endtime="20201030 18:27:49.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:49.162" endtime="20201030 18:27:49.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.161" endtime="20201030 18:27:49.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.159" endtime="20201030 18:27:49.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.683" endtime="20201030 18:27:49.183"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:48.613" endtime="20201030 18:27:49.183" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:49.190" endtime="20201030 18:27:49.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.189" endtime="20201030 18:27:49.210"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.224" endtime="20201030 18:27:49.238"></status>
</kw>
<msg timestamp="20201030 18:27:49.238" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.222" endtime="20201030 18:27:49.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.241" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.239" endtime="20201030 18:27:49.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.244" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:49.242" endtime="20201030 18:27:49.244"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:49.219" endtime="20201030 18:27:49.245"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:49.217" endtime="20201030 18:27:49.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.216" endtime="20201030 18:27:49.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:49.250" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:49.249" endtime="20201030 18:27:49.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.247" endtime="20201030 18:27:49.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.215" endtime="20201030 18:27:49.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.214" endtime="20201030 18:27:49.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.252" endtime="20201030 18:27:49.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.213" endtime="20201030 18:27:49.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.211" endtime="20201030 18:27:49.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.188" endtime="20201030 18:27:49.255"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.265" endtime="20201030 18:27:49.604"></status>
</kw>
<msg timestamp="20201030 18:27:49.605" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.263" endtime="20201030 18:27:49.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.610" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.607" endtime="20201030 18:27:49.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.613" endtime="20201030 18:27:49.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.259" endtime="20201030 18:27:49.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.257" endtime="20201030 18:27:49.619"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.624" endtime="20201030 18:27:49.627"></status>
</kw>
<msg timestamp="20201030 18:27:49.628" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:49.621" endtime="20201030 18:27:49.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.637" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:49.635" endtime="20201030 18:27:49.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.641" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:49.639" endtime="20201030 18:27:49.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.630" endtime="20201030 18:27:49.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.652" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:49.650" endtime="20201030 18:27:49.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.657" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:49.655" endtime="20201030 18:27:49.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.645" endtime="20201030 18:27:49.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.694" endtime="20201030 18:27:50.002"></status>
</kw>
<msg timestamp="20201030 18:27:50.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073033583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073068972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.690" endtime="20201030 18:27:50.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073033583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073068972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.006" endtime="20201030 18:27:50.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.014" endtime="20201030 18:27:50.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.676" endtime="20201030 18:27:50.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.668" endtime="20201030 18:27:50.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:50.022" level="INFO">${RESULT} = [{'diff': 3.5388999999996784e-05}, {'diff': 3.543100000000243e-05}, {'diff': 3.538900000001066e-05}, {'diff': 3.5416999999995924e-05}, {'diff': 3.5374999999990275e-05}, {'diff': 3.533300000001238e-05}...</msg>
<status status="PASS" starttime="20201030 18:27:50.018" endtime="20201030 18:27:50.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:50.031" level="INFO">${OVERHEAD} = {'diff': [3.5388999999996784e-05, 3.543100000000243e-05, 3.538900000001066e-05, 3.5416999999995924e-05, 3.5374999999990275e-05, 3.533300000001238e-05, 3.5332999999998504e-05, 3.5360999999997644e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:27:50.023" endtime="20201030 18:27:50.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.037" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 18:27:50.036" endtime="20201030 18:27:50.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.040" level="INFO">VALUE: [3.5388999999996784e-05, 3.543100000000243e-05, 3.538900000001066e-05, 3.5416999999995924e-05, 3.5374999999990275e-05, 3.533300000001238e-05, 3.5332999999998504e-05, 3.5360999999997644e-05, 3.5332999999998504e-05, 3.536100000001152e-05, 3.536100000001152e-05, 3.537500000000415e-05, 3.53749999999764e-05, 3.5360999999983767e-05, 3.537500000000415e-05, 3.530599999998496e-05, 3.5388999999996784e-05, 3.5360999999983767e-05, 3.537500000000415e-05, 3.5362000000010996e-05, 3.537500000000415e-05, 3.537500000000415e-05, 3.5332999999998504e-05, 3.534700000001889e-05, 3.5346999999991136e-05, 3.5332999999998504e-05, 3.5292000000020085e-05, 3.5362000000010996e-05, 3.534699999996338e-05, 3.5388999999996784e-05, 3.536199999998324e-05, 3.5290999999992856e-05, 3.537500000000415e-05, 3.537500000000415e-05, 3.543000000000296e-05, 3.533399999999798e-05, 3.537499999994864e-05, 3.536100000001152e-05, 3.532000000000535e-05, 3.536100000001152e-05, 3.5388999999996784e-05, 3.531899999997812e-05, 3.531900000003363e-05, 3.532000000000535e-05, 3.536100000001152e-05, 3.534699999996338e-05, 3.5416999999982046e-05, 3.534700000001889e-05, 3.534700000001889e-05, 3.534700000001889e-05]</msg>
<status status="PASS" starttime="20201030 18:27:50.038" endtime="20201030 18:27:50.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.032" endtime="20201030 18:27:50.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.046" endtime="20201030 18:27:50.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.044" endtime="20201030 18:27:50.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.043" endtime="20201030 18:27:50.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.255" endtime="20201030 18:27:50.067"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:49.185" endtime="20201030 18:27:50.067" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.074" endtime="20201030 18:27:50.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.073" endtime="20201030 18:27:50.094"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.107" endtime="20201030 18:27:50.122"></status>
</kw>
<msg timestamp="20201030 18:27:50.122" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.105" endtime="20201030 18:27:50.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.125" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.123" endtime="20201030 18:27:50.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.128" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:50.126" endtime="20201030 18:27:50.128"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:50.103" endtime="20201030 18:27:50.129"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:50.100" endtime="20201030 18:27:50.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.099" endtime="20201030 18:27:50.130"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:50.134" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:50.133" endtime="20201030 18:27:50.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.131" endtime="20201030 18:27:50.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.098" endtime="20201030 18:27:50.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.098" endtime="20201030 18:27:50.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.135" endtime="20201030 18:27:50.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.096" endtime="20201030 18:27:50.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.095" endtime="20201030 18:27:50.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.071" endtime="20201030 18:27:50.138"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.141" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:50.150" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:51.396" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:50.140" endtime="20201030 18:27:51.398"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.403" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:27:51.400" endtime="20201030 18:27:51.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.139" endtime="20201030 18:27:51.405"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.424" endtime="20201030 18:27:51.434"></status>
</kw>
<msg timestamp="20201030 18:27:51.434" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.421" endtime="20201030 18:27:51.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.437" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.435" endtime="20201030 18:27:51.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.438" endtime="20201030 18:27:51.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.416" endtime="20201030 18:27:51.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.411" endtime="20201030 18:27:51.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.447" endtime="20201030 18:27:51.743"></status>
</kw>
<msg timestamp="20201030 18:27:51.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.908372042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.231414583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.446" endtime="20201030 18:27:51.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.908372042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.231414583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.748" endtime="20201030 18:27:51.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.757" endtime="20201030 18:27:51.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.443" endtime="20201030 18:27:51.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.441" endtime="20201030 18:27:51.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:51.764" level="INFO">${PHILIP_RES} = [{'diff': 0.32304254100000007}, {'diff': 7.80599999994358e-06}, {'diff': 7.791000000034742e-06}, {'diff': 7.832999999957124e-06}, {'diff': 7.847000000005266e-06}, {'diff': 7.832999999957124e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 18:27:51.760" endtime="20201030 18:27:51.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:51.769" level="INFO">${RESULT} = {'diff': [0.32304254100000007, 7.80599999994358e-06, 7.791000000034742e-06, 7.832999999957124e-06, 7.847000000005266e-06, 7.832999999957124e-06, 7.792000000117483e-06, 7.80599999994358e-06, 7.84700000...</msg>
<status status="PASS" starttime="20201030 18:27:51.765" endtime="20201030 18:27:51.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.774" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:51.773" endtime="20201030 18:27:51.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.777" level="INFO">VALUE: [0.32304254100000007, 7.80599999994358e-06, 7.791000000034742e-06, 7.832999999957124e-06, 7.847000000005266e-06, 7.832999999957124e-06, 7.792000000117483e-06, 7.80599999994358e-06, 7.847000000005266e-06, 7.792000000117483e-06, 7.777999999847296e-06, 7.819000000131027e-06, 7.832999999957124e-06, 7.80599999994358e-06, 7.832999999957124e-06, 7.80599999994358e-06, 7.819999999991722e-06, 7.818999999908982e-06, 7.832999999957124e-06, 7.791999999895438e-06, 7.805000000082885e-06, 7.832999999957124e-06, 7.80599999994358e-06, 7.832999999957124e-06, 7.80599999994358e-06, 7.83399999981782e-06, 7.805000000082885e-06, 7.832999999957124e-06, 7.806000000165625e-06, 7.832999999957124e-06, 7.80599999994358e-06, 7.834000000039865e-06, 7.805000000082885e-06, 7.832999999957124e-06, 7.833000000179169e-06, 7.805000000082885e-06, 7.834000000039865e-06, 7.805000000082885e-06, 7.832999999957124e-06, 7.806000000165625e-06, 7.832999999957124e-06, 7.805000000082885e-06, 7.834000000039865e-06, 7.805000000082885e-06, 7.832999999957124e-06, 7.80599999994358e-06, 7.819000000131027e-06, 7.818999999908982e-06, 7.80599999994358e-06, 7.847000000005266e-06, 7.791999999895438e-06]</msg>
<status status="PASS" starttime="20201030 18:27:51.775" endtime="20201030 18:27:51.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.770" endtime="20201030 18:27:51.777"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:51.781" endtime="20201030 18:27:51.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.780" endtime="20201030 18:27:51.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.778" endtime="20201030 18:27:51.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.408" endtime="20201030 18:27:51.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.407" endtime="20201030 18:27:51.802"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.811" endtime="20201030 18:27:51.819"></status>
</kw>
<msg timestamp="20201030 18:27:51.820" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.809" endtime="20201030 18:27:51.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.823" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.821" endtime="20201030 18:27:51.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.824" endtime="20201030 18:27:51.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.806" endtime="20201030 18:27:51.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.804" endtime="20201030 18:27:51.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.835" endtime="20201030 18:27:52.124"></status>
</kw>
<msg timestamp="20201030 18:27:52.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.832" endtime="20201030 18:27:52.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.128" endtime="20201030 18:27:52.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.142" endtime="20201030 18:27:52.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.829" endtime="20201030 18:27:52.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.827" endtime="20201030 18:27:52.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:52.156" level="INFO">${PHILIP_RES} = [{'diff': 1.5319999999999223e-05}, {'diff': 1.534699999999889e-05}, {'diff': 1.534700000000236e-05}, {'diff': 1.534699999999889e-05}, {'diff': 1.53750000000015e-05}, {'diff': 1.5333999999998793e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:52.149" endtime="20201030 18:27:52.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.167" level="INFO">${RESULT} = {'diff': [1.5319999999999223e-05, 1.534699999999889e-05, 1.534700000000236e-05, 1.534699999999889e-05, 1.53750000000015e-05, 1.5333999999998793e-05, 1.540300000000064e-05, 1.536100000000193e-05, 1.536...</msg>
<status status="PASS" starttime="20201030 18:27:52.159" endtime="20201030 18:27:52.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.176" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:52.174" endtime="20201030 18:27:52.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.182" level="INFO">VALUE: [1.5319999999999223e-05, 1.534699999999889e-05, 1.534700000000236e-05, 1.534699999999889e-05, 1.53750000000015e-05, 1.5333999999998793e-05, 1.540300000000064e-05, 1.536100000000193e-05, 1.536099999999846e-05, 1.53750000000015e-05, 1.5401999999997695e-05, 1.5347999999998363e-05, 1.536100000000193e-05, 1.537499999999803e-05, 1.534700000000236e-05, 1.536099999999846e-05, 1.536100000000193e-05, 1.5333999999998793e-05, 1.536099999999846e-05, 1.53750000000015e-05, 1.534699999999889e-05, 1.53750000000015e-05, 1.538900000000107e-05, 1.531899999999975e-05, 1.531899999999975e-05, 1.536099999999846e-05, 1.534700000000236e-05, 1.537499999999803e-05, 1.536099999999846e-05, 1.536100000000193e-05, 1.541700000000021e-05, 1.534700000000236e-05, 1.5333999999998793e-05, 1.540300000000064e-05, 1.53750000000015e-05, 1.534699999999889e-05, 1.53750000000015e-05, 1.534699999999889e-05, 1.53750000000015e-05, 1.536100000000193e-05, 1.536100000000193e-05, 1.534700000000236e-05, 1.537499999999803e-05, 1.53750000000015e-05, 1.533299999999932e-05, 1.53750000000015e-05, 1.536100000000193e-05, 1.536099999999846e-05, 1.5333999999998793e-05, 1.5361999999997933e-05]</msg>
<status status="PASS" starttime="20201030 18:27:52.179" endtime="20201030 18:27:52.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.169" endtime="20201030 18:27:52.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.192" endtime="20201030 18:27:52.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.188" endtime="20201030 18:27:52.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.186" endtime="20201030 18:27:52.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.803" endtime="20201030 18:27:52.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.802" endtime="20201030 18:27:52.217"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.236" endtime="20201030 18:27:52.245"></status>
</kw>
<msg timestamp="20201030 18:27:52.245" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.234" endtime="20201030 18:27:52.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.248" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.246" endtime="20201030 18:27:52.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.249" endtime="20201030 18:27:52.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.227" endtime="20201030 18:27:52.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.222" endtime="20201030 18:27:52.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.258" endtime="20201030 18:27:52.546"></status>
</kw>
<msg timestamp="20201030 18:27:52.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032970958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032994889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.257" endtime="20201030 18:27:52.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032970958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032994889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.551" endtime="20201030 18:27:52.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.561" endtime="20201030 18:27:52.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.254" endtime="20201030 18:27:52.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.252" endtime="20201030 18:27:52.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:52.568" level="INFO">${PHILIP_RES} = [{'diff': 2.393099999999787e-05}, {'diff': 2.3986000000003616e-05}, {'diff': 2.393099999999787e-05}, {'diff': 2.3999999999996247e-05}, {'diff': 2.3958000000004476e-05}, {'diff': 2.4013999999995816e-05...</msg>
<status status="PASS" starttime="20201030 18:27:52.565" endtime="20201030 18:27:52.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.573" level="INFO">${RESULT} = {'diff': [2.393099999999787e-05, 2.3986000000003616e-05, 2.393099999999787e-05, 2.3999999999996247e-05, 2.3958000000004476e-05, 2.4013999999995816e-05, 2.395900000000395e-05, 2.3943999999997967e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:27:52.569" endtime="20201030 18:27:52.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.578" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:52.577" endtime="20201030 18:27:52.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.582" level="INFO">VALUE: [2.393099999999787e-05, 2.3986000000003616e-05, 2.393099999999787e-05, 2.3999999999996247e-05, 2.3958000000004476e-05, 2.4013999999995816e-05, 2.395900000000395e-05, 2.3943999999997967e-05, 2.3943999999997967e-05, 2.397300000000352e-05, 2.3943999999997967e-05, 2.3944000000004906e-05, 2.394499999999744e-05, 2.3972000000004046e-05, 2.3957999999997537e-05, 2.395899999999701e-05, 2.39169999999983e-05, 2.3985999999996677e-05, 2.3944000000004906e-05, 2.395899999999701e-05, 2.3929999999998397e-05, 2.3957999999997537e-05, 2.39169999999983e-05, 2.3958000000004476e-05, 2.3943999999997967e-05, 2.394500000000438e-05, 2.3957999999997537e-05, 2.3957999999997537e-05, 2.395900000000395e-05, 2.397299999999658e-05, 2.3944000000004906e-05, 2.3971999999997107e-05, 2.395899999999701e-05, 2.3957999999997537e-05, 2.3943999999997967e-05, 2.395900000000395e-05, 2.3957999999997537e-05, 2.3930000000005336e-05, 2.394499999999744e-05, 2.3957999999997537e-05, 2.3958000000004476e-05, 2.3943999999997967e-05, 2.397300000000352e-05, 2.3943999999997967e-05, 2.3943999999997967e-05, 2.397299999999658e-05, 2.3957999999997537e-05, 2.3958000000004476e-05, 2.395899999999701e-05, 2.395900000000395e-05]</msg>
<status status="PASS" starttime="20201030 18:27:52.580" endtime="20201030 18:27:52.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.574" endtime="20201030 18:27:52.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.587" endtime="20201030 18:27:52.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.586" endtime="20201030 18:27:52.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.584" endtime="20201030 18:27:52.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.219" endtime="20201030 18:27:52.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.218" endtime="20201030 18:27:52.608"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.616" endtime="20201030 18:27:52.626"></status>
</kw>
<msg timestamp="20201030 18:27:52.626" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.615" endtime="20201030 18:27:52.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.629" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.627" endtime="20201030 18:27:52.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.630" endtime="20201030 18:27:52.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.612" endtime="20201030 18:27:52.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.610" endtime="20201030 18:27:52.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.639" endtime="20201030 18:27:52.924"></status>
</kw>
<msg timestamp="20201030 18:27:52.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018399069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018432667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.637" endtime="20201030 18:27:52.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018399069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018432667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.928" endtime="20201030 18:27:52.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.937" endtime="20201030 18:27:52.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.634" endtime="20201030 18:27:52.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.633" endtime="20201030 18:27:52.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:52.944" level="INFO">${PHILIP_RES} = [{'diff': 3.359799999999927e-05}, {'diff': 3.368100000000068e-05}, {'diff': 3.3610999999999364e-05}, {'diff': 3.363900000000197e-05}, {'diff': 3.3638999999998503e-05}, {'diff': 3.366599999999817e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:52.940" endtime="20201030 18:27:52.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.955" level="INFO">${RESULT} = {'diff': [3.359799999999927e-05, 3.368100000000068e-05, 3.3610999999999364e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.366599999999817e-05, 3.3596999999999794e-05, 3.365299999999807e-05, 3.3...</msg>
<status status="PASS" starttime="20201030 18:27:52.946" endtime="20201030 18:27:52.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.964" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:52.962" endtime="20201030 18:27:52.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.969" level="INFO">VALUE: [3.359799999999927e-05, 3.368100000000068e-05, 3.3610999999999364e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.366599999999817e-05, 3.3596999999999794e-05, 3.365299999999807e-05, 3.365299999999807e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.366700000000111e-05, 3.3638999999998503e-05, 3.366599999999817e-05, 3.365200000000207e-05, 3.365299999999807e-05, 3.365299999999807e-05, 3.365300000000154e-05, 3.365299999999807e-05, 3.363900000000197e-05, 3.365299999999807e-05, 3.36519999999986e-05, 3.365200000000207e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.3610999999999364e-05, 3.3638999999998503e-05, 3.365300000000154e-05, 3.36519999999986e-05, 3.3610999999999364e-05, 3.3638999999998503e-05, 3.373600000000296e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.365300000000154e-05, 3.365300000000154e-05, 3.363799999999903e-05, 3.3610999999999364e-05, 3.365299999999807e-05, 3.368099999999721e-05, 3.370800000000035e-05, 3.3624999999998934e-05, 3.365299999999807e-05, 3.363900000000197e-05, 3.369400000000078e-05, 3.366600000000164e-05, 3.365299999999807e-05, 3.365299999999807e-05, 3.366700000000111e-05]</msg>
<status status="PASS" starttime="20201030 18:27:52.966" endtime="20201030 18:27:52.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.957" endtime="20201030 18:27:52.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.978" endtime="20201030 18:27:53.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.975" endtime="20201030 18:27:53.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.973" endtime="20201030 18:27:53.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.609" endtime="20201030 18:27:53.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.608" endtime="20201030 18:27:53.003"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.020" endtime="20201030 18:27:53.033"></status>
</kw>
<msg timestamp="20201030 18:27:53.034" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.017" endtime="20201030 18:27:53.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.039" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.036" endtime="20201030 18:27:53.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.041" endtime="20201030 18:27:53.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.012" endtime="20201030 18:27:53.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.008" endtime="20201030 18:27:53.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.052" endtime="20201030 18:27:53.339"></status>
</kw>
<msg timestamp="20201030 18:27:53.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032129319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032173708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.050" endtime="20201030 18:27:53.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032129319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032173708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.344" endtime="20201030 18:27:53.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.353" endtime="20201030 18:27:53.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.048" endtime="20201030 18:27:53.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.046" endtime="20201030 18:27:53.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:53.359" level="INFO">${PHILIP_RES} = [{'diff': 4.4388999999998846e-05}, {'diff': 4.4416999999997986e-05}, {'diff': 4.4430999999997556e-05}, {'diff': 4.441599999999851e-05}, {'diff': 4.4402999999998416e-05}, {'diff': 4.4431000000004495e-0...</msg>
<status status="PASS" starttime="20201030 18:27:53.356" endtime="20201030 18:27:53.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:53.363" level="INFO">${RESULT} = {'diff': [4.4388999999998846e-05, 4.4416999999997986e-05, 4.4430999999997556e-05, 4.441599999999851e-05, 4.4402999999998416e-05, 4.4431000000004495e-05, 4.4416999999997986e-05, 4.445799999999722e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:53.360" endtime="20201030 18:27:53.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.367" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:53.366" endtime="20201030 18:27:53.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.370" level="INFO">VALUE: [4.4388999999998846e-05, 4.4416999999997986e-05, 4.4430999999997556e-05, 4.441599999999851e-05, 4.4402999999998416e-05, 4.4431000000004495e-05, 4.4416999999997986e-05, 4.445799999999722e-05, 4.445799999999722e-05, 4.4472999999996266e-05, 4.441599999999851e-05, 4.441599999999851e-05, 4.4402999999998416e-05, 4.4431000000004495e-05, 4.441599999999851e-05, 4.4416999999997986e-05, 4.4430999999997556e-05, 4.441599999999851e-05, 4.4347000000000136e-05, 4.4402999999998416e-05, 4.4430999999997556e-05, 4.441599999999851e-05, 4.4416999999997986e-05, 4.4417000000004925e-05, 4.4430999999997556e-05, 4.440199999999894e-05, 4.4431000000004495e-05, 4.4402999999998416e-05, 4.441599999999851e-05, 4.4416999999997986e-05, 4.4416999999997986e-05, 4.4375000000006215e-05, 4.441599999999851e-05, 4.4444999999997126e-05, 4.4403000000005355e-05, 4.4360999999999706e-05, 4.442999999999808e-05, 4.4430999999997556e-05, 4.4388999999998846e-05, 4.441600000000545e-05, 4.4402999999998416e-05, 4.4388999999998846e-05, 4.441599999999851e-05, 4.442999999999808e-05, 4.4403000000005355e-05, 4.4374999999999276e-05, 4.444399999999765e-05, 4.4431000000004495e-05, 4.4416999999997986e-05, 4.44860000000033e-05]</msg>
<status status="PASS" starttime="20201030 18:27:53.368" endtime="20201030 18:27:53.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.364" endtime="20201030 18:27:53.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:53.374" endtime="20201030 18:27:53.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.373" endtime="20201030 18:27:53.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.372" endtime="20201030 18:27:53.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.005" endtime="20201030 18:27:53.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.004" endtime="20201030 18:27:53.395"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.403" endtime="20201030 18:27:53.416"></status>
</kw>
<msg timestamp="20201030 18:27:53.416" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.402" endtime="20201030 18:27:53.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.418" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.417" endtime="20201030 18:27:53.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.419" endtime="20201030 18:27:53.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.399" endtime="20201030 18:27:53.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.397" endtime="20201030 18:27:53.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.428" endtime="20201030 18:27:53.715"></status>
</kw>
<msg timestamp="20201030 18:27:53.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019450431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019506667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.427" endtime="20201030 18:27:53.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019450431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019506667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.719" endtime="20201030 18:27:53.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.728" endtime="20201030 18:27:53.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.424" endtime="20201030 18:27:53.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.423" endtime="20201030 18:27:53.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:53.734" level="INFO">${PHILIP_RES} = [{'diff': 5.6235999999997704e-05}, {'diff': 5.626300000000084e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.6263999999996844e-05}, {'diff': 5.627700000000041e-05...</msg>
<status status="PASS" starttime="20201030 18:27:53.731" endtime="20201030 18:27:53.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:53.738" level="INFO">${RESULT} = {'diff': [5.6235999999997704e-05, 5.626300000000084e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6263999999996844e-05, 5.627700000000041e-05, 5.6236000000001174e-05, 5.6277999999999884e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:53.735" endtime="20201030 18:27:53.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.743" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:53.742" endtime="20201030 18:27:53.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.745" level="INFO">VALUE: [5.6235999999997704e-05, 5.626300000000084e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6263999999996844e-05, 5.627700000000041e-05, 5.6236000000001174e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6291999999999454e-05, 5.627700000000041e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.631899999999912e-05, 5.6264000000000314e-05, 5.6250000000000744e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.623700000000065e-05, 5.627699999999694e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.629099999999998e-05, 5.6305999999999023e-05, 5.6291999999999454e-05, 5.6277999999999884e-05, 5.6250000000000744e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.627700000000041e-05, 5.6250000000000744e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.627700000000041e-05, 5.6291999999999454e-05, 5.632000000000206e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.632000000000206e-05, 5.6263999999996844e-05, 5.6291999999999454e-05, 5.626300000000084e-05, 5.6250000000000744e-05]</msg>
<status status="PASS" starttime="20201030 18:27:53.744" endtime="20201030 18:27:53.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.739" endtime="20201030 18:27:53.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:53.753" endtime="20201030 18:27:53.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.751" endtime="20201030 18:27:53.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.750" endtime="20201030 18:27:53.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.396" endtime="20201030 18:27:53.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.395" endtime="20201030 18:27:53.774"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.782" endtime="20201030 18:27:53.793"></status>
</kw>
<msg timestamp="20201030 18:27:53.794" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.780" endtime="20201030 18:27:53.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.796" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.795" endtime="20201030 18:27:53.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.797" endtime="20201030 18:27:53.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.778" endtime="20201030 18:27:53.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.776" endtime="20201030 18:27:53.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.807" endtime="20201030 18:27:54.094"></status>
</kw>
<msg timestamp="20201030 18:27:54.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018504278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018573472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.805" endtime="20201030 18:27:54.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018504278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018573472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.098" endtime="20201030 18:27:54.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.106" endtime="20201030 18:27:54.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.803" endtime="20201030 18:27:54.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.800" endtime="20201030 18:27:54.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:54.113" level="INFO">${PHILIP_RES} = [{'diff': 6.919400000000159e-05}, {'diff': 6.919400000000159e-05}, {'diff': 6.924999999999987e-05}, {'diff': 6.917999999999855e-05}, {'diff': 6.929200000000205e-05}, {'diff': 6.919399999999812e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:54.110" endtime="20201030 18:27:54.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:54.118" level="INFO">${RESULT} = {'diff': [6.919400000000159e-05, 6.919400000000159e-05, 6.924999999999987e-05, 6.917999999999855e-05, 6.929200000000205e-05, 6.919399999999812e-05, 6.922199999999726e-05, 6.913799999999984e-05, 6.9208...</msg>
<status status="PASS" starttime="20201030 18:27:54.114" endtime="20201030 18:27:54.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.122" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:54.121" endtime="20201030 18:27:54.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.124" level="INFO">VALUE: [6.919400000000159e-05, 6.919400000000159e-05, 6.924999999999987e-05, 6.917999999999855e-05, 6.929200000000205e-05, 6.919399999999812e-05, 6.922199999999726e-05, 6.913799999999984e-05, 6.920800000000116e-05, 6.920900000000063e-05, 6.920800000000116e-05, 6.920800000000116e-05, 6.922200000000073e-05, 6.922200000000073e-05, 6.92230000000002e-05, 6.922199999999726e-05, 6.920900000000063e-05, 6.919399999999812e-05, 6.927799999999901e-05, 6.927799999999901e-05, 6.920800000000116e-05, 6.919500000000106e-05, 6.919399999999812e-05, 6.920799999999769e-05, 6.919499999999759e-05, 6.92360000000003e-05, 6.92230000000002e-05, 6.920800000000116e-05, 6.92360000000003e-05, 6.920800000000116e-05, 6.919400000000159e-05, 6.92230000000002e-05, 6.922200000000073e-05, 6.920799999999769e-05, 6.919399999999812e-05, 6.92360000000003e-05, 6.92360000000003e-05, 6.919400000000159e-05, 6.922200000000073e-05, 6.922200000000073e-05, 6.922200000000073e-05, 6.919499999999759e-05, 6.916699999999845e-05, 6.920899999999716e-05, 6.920799999999769e-05, 6.92360000000003e-05, 6.919500000000106e-05, 6.920800000000116e-05, 6.929200000000205e-05, 6.919399999999812e-05]</msg>
<status status="PASS" starttime="20201030 18:27:54.123" endtime="20201030 18:27:54.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.119" endtime="20201030 18:27:54.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.129" endtime="20201030 18:27:54.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.127" endtime="20201030 18:27:54.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.126" endtime="20201030 18:27:54.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.775" endtime="20201030 18:27:54.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.774" endtime="20201030 18:27:54.149"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.158" endtime="20201030 18:27:54.171"></status>
</kw>
<msg timestamp="20201030 18:27:54.171" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.156" endtime="20201030 18:27:54.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.174" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.172" endtime="20201030 18:27:54.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.175" endtime="20201030 18:27:54.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.154" endtime="20201030 18:27:54.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.152" endtime="20201030 18:27:54.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.184" endtime="20201030 18:27:54.471"></status>
</kw>
<msg timestamp="20201030 18:27:54.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018713792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018796986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.183" endtime="20201030 18:27:54.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018713792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018796986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.475" endtime="20201030 18:27:54.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.484" endtime="20201030 18:27:54.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.180" endtime="20201030 18:27:54.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.178" endtime="20201030 18:27:54.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:54.491" level="INFO">${PHILIP_RES} = [{'diff': 8.319400000000171e-05}, {'diff': 8.322200000000085e-05}, {'diff': 8.326300000000009e-05}, {'diff': 8.323599999999695e-05}, {'diff': 8.323600000000042e-05}, {'diff': 8.324999999999999e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:54.488" endtime="20201030 18:27:54.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:54.496" level="INFO">${RESULT} = {'diff': [8.319400000000171e-05, 8.322200000000085e-05, 8.326300000000009e-05, 8.323599999999695e-05, 8.323600000000042e-05, 8.324999999999999e-05, 8.322300000000032e-05, 8.323600000000042e-05, 8.3249...</msg>
<status status="PASS" starttime="20201030 18:27:54.492" endtime="20201030 18:27:54.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.500" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:54.499" endtime="20201030 18:27:54.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.502" level="INFO">VALUE: [8.319400000000171e-05, 8.322200000000085e-05, 8.326300000000009e-05, 8.323599999999695e-05, 8.323600000000042e-05, 8.324999999999999e-05, 8.322300000000032e-05, 8.323600000000042e-05, 8.324999999999999e-05, 8.324999999999999e-05, 8.32369999999999e-05, 8.324999999999999e-05, 8.323600000000042e-05, 8.324999999999999e-05, 8.324999999999999e-05, 8.322200000000085e-05, 8.323600000000042e-05, 8.323600000000042e-05, 8.322200000000085e-05, 8.322199999999738e-05, 8.323600000000042e-05, 8.323600000000042e-05, 8.323599999999695e-05, 8.324999999999999e-05, 8.323600000000042e-05, 8.323599999999695e-05, 8.324999999999999e-05, 8.323600000000042e-05, 8.323599999999695e-05, 8.324999999999999e-05, 8.31659999999991e-05, 8.324999999999999e-05, 8.324999999999999e-05, 8.319500000000118e-05, 8.323600000000042e-05, 8.324999999999999e-05, 8.323600000000042e-05, 8.32369999999999e-05, 8.323600000000042e-05, 8.324999999999999e-05, 8.323600000000042e-05, 8.324999999999999e-05, 8.324999999999999e-05, 8.323600000000042e-05, 8.324999999999999e-05, 8.323600000000042e-05, 8.323600000000042e-05, 8.322199999999738e-05, 8.324999999999999e-05, 8.323600000000042e-05]</msg>
<status status="PASS" starttime="20201030 18:27:54.501" endtime="20201030 18:27:54.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.496" endtime="20201030 18:27:54.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.507" endtime="20201030 18:27:54.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.505" endtime="20201030 18:27:54.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.504" endtime="20201030 18:27:54.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.150" endtime="20201030 18:27:54.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.150" endtime="20201030 18:27:54.527"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.536" endtime="20201030 18:27:54.549"></status>
</kw>
<msg timestamp="20201030 18:27:54.550" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.534" endtime="20201030 18:27:54.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.552" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.551" endtime="20201030 18:27:54.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.554" endtime="20201030 18:27:54.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.531" endtime="20201030 18:27:54.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.530" endtime="20201030 18:27:54.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.563" endtime="20201030 18:27:54.848"></status>
</kw>
<msg timestamp="20201030 18:27:54.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01931425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019412556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:54.561" endtime="20201030 18:27:54.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01931425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019412556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:54.852" endtime="20201030 18:27:54.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.861" endtime="20201030 18:27:54.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.558" endtime="20201030 18:27:54.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.557" endtime="20201030 18:27:54.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:54.869" level="INFO">${PHILIP_RES} = [{'diff': 9.83059999999994e-05}, {'diff': 9.83470000000021e-05}, {'diff': 9.834699999999863e-05}, {'diff': 9.840300000000038e-05}, {'diff': 9.834699999999863e-05}, {'diff': 9.837499999999777e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:54.865" endtime="20201030 18:27:54.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:54.873" level="INFO">${RESULT} = {'diff': [9.83059999999994e-05, 9.83470000000021e-05, 9.834699999999863e-05, 9.840300000000038e-05, 9.834699999999863e-05, 9.837499999999777e-05, 9.834699999999863e-05, 9.83470000000021e-05, 9.8361000...</msg>
<status status="PASS" starttime="20201030 18:27:54.870" endtime="20201030 18:27:54.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.878" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:54.877" endtime="20201030 18:27:54.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.880" level="INFO">VALUE: [9.83059999999994e-05, 9.83470000000021e-05, 9.834699999999863e-05, 9.840300000000038e-05, 9.834699999999863e-05, 9.837499999999777e-05, 9.834699999999863e-05, 9.83470000000021e-05, 9.836100000000167e-05, 9.834800000000157e-05, 9.834699999999863e-05, 9.83609999999982e-05, 9.83609999999982e-05, 9.834699999999863e-05, 9.833399999999853e-05, 9.83059999999994e-05, 9.83470000000021e-05, 9.83470000000021e-05, 9.83470000000021e-05, 9.831999999999896e-05, 9.833299999999906e-05, 9.834699999999863e-05, 9.834699999999863e-05, 9.834800000000157e-05, 9.83470000000021e-05, 9.840300000000038e-05, 9.838900000000081e-05, 9.833399999999853e-05, 9.83479999999981e-05, 9.834699999999863e-05, 9.833299999999906e-05, 9.831999999999896e-05, 9.831999999999896e-05, 9.83470000000021e-05, 9.833299999999906e-05, 9.833299999999906e-05, 9.836199999999767e-05, 9.83609999999982e-05, 9.83609999999982e-05, 9.836100000000167e-05, 9.834800000000157e-05, 9.836100000000167e-05, 9.837500000000124e-05, 9.834699999999863e-05, 9.833299999999906e-05, 9.83479999999981e-05, 9.834699999999863e-05, 9.83470000000021e-05, 9.833300000000253e-05, 9.838900000000081e-05]</msg>
<status status="PASS" starttime="20201030 18:27:54.879" endtime="20201030 18:27:54.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.874" endtime="20201030 18:27:54.882"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.886" endtime="20201030 18:27:54.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.884" endtime="20201030 18:27:54.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.883" endtime="20201030 18:27:54.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.528" endtime="20201030 18:27:54.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.528" endtime="20201030 18:27:54.907"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.916" endtime="20201030 18:27:54.931"></status>
</kw>
<msg timestamp="20201030 18:27:54.932" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.914" endtime="20201030 18:27:54.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.936" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.934" endtime="20201030 18:27:54.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.938" endtime="20201030 18:27:54.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.911" endtime="20201030 18:27:54.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.909" endtime="20201030 18:27:54.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.956" endtime="20201030 18:27:55.265"></status>
</kw>
<msg timestamp="20201030 18:27:55.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019810444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019924958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.954" endtime="20201030 18:27:55.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019810444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019924958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.269" endtime="20201030 18:27:55.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.277" endtime="20201030 18:27:55.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.948" endtime="20201030 18:27:55.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.945" endtime="20201030 18:27:55.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:55.284" level="INFO">${PHILIP_RES} = [{'diff': 0.00011451399999999959}, {'diff': 0.00011454099999999925}, {'diff': 0.00011447300000000035}, {'diff': 0.0001145420000000022}, {'diff': 0.00011455499999999882}, {'diff': 0.0001145279999999991...</msg>
<status status="PASS" starttime="20201030 18:27:55.281" endtime="20201030 18:27:55.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:55.289" level="INFO">${RESULT} = {'diff': [0.00011451399999999959, 0.00011454099999999925, 0.00011447300000000035, 0.0001145420000000022, 0.00011455499999999882, 0.00011452799999999916, 0.00011452799999999916, 0.00011451400000000306,...</msg>
<status status="PASS" starttime="20201030 18:27:55.285" endtime="20201030 18:27:55.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.294" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:55.293" endtime="20201030 18:27:55.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.296" level="INFO">VALUE: [0.00011451399999999959, 0.00011454099999999925, 0.00011447300000000035, 0.0001145420000000022, 0.00011455499999999882, 0.00011452799999999916, 0.00011452799999999916, 0.00011451400000000306, 0.00011454199999999873, 0.0001145559999999983, 0.0001145559999999983, 0.00011457000000000134, 0.00011452800000000263, 0.00011452799999999916, 0.00011452799999999916, 0.00011458399999999744, 0.00011451399999999959, 0.00011448599999999698, 0.00011458300000000143, 0.00011452699999999968, 0.00011452699999999968, 0.00011454100000000272, 0.00011452699999999968, 0.00011452699999999968, 0.00011445800000000131, 0.00011452799999999916, 0.0001145550000000023, 0.0001145420000000022, 0.00011451399999999959, 0.00011452799999999916, 0.00011454199999999873, 0.00011458300000000143, 0.00011451399999999959, 0.00013102800000000178, 0.00011454199999999873, 0.00011456999999999787, 0.00011454199999999873, 0.0001145420000000022, 0.00011452799999999916, 0.00011454199999999873, 0.00011454199999999873, 0.00011452800000000263, 0.0001145420000000022, 0.00011456900000000186, 0.00011451399999999959, 0.00011454099999999925, 0.00011454099999999925, 0.00011447199999999741, 0.000114597000000001, 0.00011452799999999916]</msg>
<status status="PASS" starttime="20201030 18:27:55.295" endtime="20201030 18:27:55.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.290" endtime="20201030 18:27:55.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.301" endtime="20201030 18:27:55.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.299" endtime="20201030 18:27:55.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.298" endtime="20201030 18:27:55.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.908" endtime="20201030 18:27:55.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.907" endtime="20201030 18:27:55.321"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.350" endtime="20201030 18:27:55.365"></status>
</kw>
<msg timestamp="20201030 18:27:55.365" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.348" endtime="20201030 18:27:55.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.368" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.366" endtime="20201030 18:27:55.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.369" endtime="20201030 18:27:55.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.326" endtime="20201030 18:27:55.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.324" endtime="20201030 18:27:55.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.378" endtime="20201030 18:27:55.664"></status>
</kw>
<msg timestamp="20201030 18:27:55.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038699222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038830986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.377" endtime="20201030 18:27:55.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038699222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038830986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.669" endtime="20201030 18:27:55.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.677" endtime="20201030 18:27:55.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.374" endtime="20201030 18:27:55.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.372" endtime="20201030 18:27:55.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:55.685" level="INFO">${PHILIP_RES} = [{'diff': 0.0001317639999999995}, {'diff': 0.00013188899999999615}, {'diff': 0.00013179099999999916}, {'diff': 0.0001318059999999982}, {'diff': 0.00013180600000000514}, {'diff': 0.0001318059999999982}...</msg>
<status status="PASS" starttime="20201030 18:27:55.682" endtime="20201030 18:27:55.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:55.689" level="INFO">${RESULT} = {'diff': [0.0001317639999999995, 0.00013188899999999615, 0.00013179099999999916, 0.0001318059999999982, 0.00013180600000000514, 0.0001318059999999982, 0.0001318330000000048, 0.00013180499999999873, 0....</msg>
<status status="PASS" starttime="20201030 18:27:55.686" endtime="20201030 18:27:55.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.693" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:55.692" endtime="20201030 18:27:55.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.696" level="INFO">VALUE: [0.0001317639999999995, 0.00013188899999999615, 0.00013179099999999916, 0.0001318059999999982, 0.00013180600000000514, 0.0001318059999999982, 0.0001318330000000048, 0.00013180499999999873, 0.00013173699999999983, 0.00013183299999999787, 0.00013180600000000514, 0.00013179199999999863, 0.00013180499999999873, 0.0001318059999999982, 0.0001318059999999982, 0.0001318059999999982, 0.0001318189999999983, 0.00013180499999999873, 0.00013180499999999873, 0.0001318059999999982, 0.00013179199999999863, 0.00013179199999999863, 0.00013177799999999906, 0.00013180500000000567, 0.0001318059999999982, 0.00013177799999999906, 0.00013177799999999906, 0.00013180500000000567, 0.00013176300000000002, 0.0001318189999999983, 0.00013181999999999777, 0.0001318059999999982, 0.0001318189999999983, 0.00013180499999999873, 0.00013179199999999863, 0.00013177799999999906, 0.00013180600000000514, 0.00013180499999999873, 0.00013177700000000653, 0.00013180499999999873, 0.00013177799999999906, 0.0001318059999999982, 0.00013180500000000567, 0.00013180499999999873, 0.00013180499999999873, 0.00013183299999999787, 0.00013183299999999787, 0.0001318059999999982, 0.00013180499999999873, 0.00013180600000000514]</msg>
<status status="PASS" starttime="20201030 18:27:55.694" endtime="20201030 18:27:55.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.690" endtime="20201030 18:27:55.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.700" endtime="20201030 18:27:55.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.699" endtime="20201030 18:27:55.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.698" endtime="20201030 18:27:55.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.322" endtime="20201030 18:27:55.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.322" endtime="20201030 18:27:55.722"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.730" endtime="20201030 18:27:55.748"></status>
</kw>
<msg timestamp="20201030 18:27:55.748" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.729" endtime="20201030 18:27:55.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.751" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.750" endtime="20201030 18:27:55.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.752" endtime="20201030 18:27:55.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.726" endtime="20201030 18:27:55.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.724" endtime="20201030 18:27:55.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.761" endtime="20201030 18:27:56.051"></status>
</kw>
<msg timestamp="20201030 18:27:56.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020506444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020656583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.760" endtime="20201030 18:27:56.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020506444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020656583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.056" endtime="20201030 18:27:56.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.071" endtime="20201030 18:27:56.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.757" endtime="20201030 18:27:56.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.755" endtime="20201030 18:27:56.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:56.078" level="INFO">${PHILIP_RES} = [{'diff': 0.00015013900000000052}, {'diff': 0.00015012500000000095}, {'diff': 0.00015018099999999923}, {'diff': 0.00015022200000000194}, {'diff': 0.0001501530000000001}, {'diff': 0.0001501939999999993...</msg>
<status status="PASS" starttime="20201030 18:27:56.075" endtime="20201030 18:27:56.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:56.082" level="INFO">${RESULT} = {'diff': [0.00015013900000000052, 0.00015012500000000095, 0.00015018099999999923, 0.00015022200000000194, 0.0001501530000000001, 0.00015019399999999933, 0.0001501660000000002, 0.00015016699999999966, ...</msg>
<status status="PASS" starttime="20201030 18:27:56.079" endtime="20201030 18:27:56.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.087" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:56.086" endtime="20201030 18:27:56.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.089" level="INFO">VALUE: [0.00015013900000000052, 0.00015012500000000095, 0.00015018099999999923, 0.00015022200000000194, 0.0001501530000000001, 0.00015019399999999933, 0.0001501660000000002, 0.00015016699999999966, 0.00015016699999999966, 0.0001501660000000002, 0.0001501530000000001, 0.00015016699999999966, 0.00015015299999999662, 0.0001501530000000001, 0.00015022199999999847, 0.0001501530000000001, 0.00015018099999999923, 0.0001501530000000001, 0.00015013900000000052, 0.0001501530000000001, 0.00015016699999999966, 0.00015016699999999966, 0.0001501530000000001, 0.00015016699999999966, 0.00015017999999999976, 0.0001501660000000002, 0.00015020800000000237, 0.00015017999999999976, 0.0001501530000000001, 0.0001501530000000001, 0.00015016699999999966, 0.0001501660000000002, 0.00015018099999999923, 0.00015022199999999847, 0.0001501660000000002, 0.0001501530000000001, 0.00015019399999999933, 0.00015013900000000052, 0.0001501530000000001, 0.00015016699999999966, 0.00015015200000000062, 0.0001501810000000027, 0.0001501530000000001, 0.00015015200000000062, 0.00015016699999999966, 0.00015016699999999966, 0.0001501530000000001, 0.00015023599999999804, 0.00015013899999999705, 0.00016122199999999906]</msg>
<status status="PASS" starttime="20201030 18:27:56.088" endtime="20201030 18:27:56.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.083" endtime="20201030 18:27:56.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:56.095" endtime="20201030 18:27:56.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.094" endtime="20201030 18:27:56.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.092" endtime="20201030 18:27:56.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.723" endtime="20201030 18:27:56.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.722" endtime="20201030 18:27:56.116"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.125" endtime="20201030 18:27:56.142"></status>
</kw>
<msg timestamp="20201030 18:27:56.143" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.123" endtime="20201030 18:27:56.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.145" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.144" endtime="20201030 18:27:56.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.146" endtime="20201030 18:27:56.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.120" endtime="20201030 18:27:56.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.118" endtime="20201030 18:27:56.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.156" endtime="20201030 18:27:56.441"></status>
</kw>
<msg timestamp="20201030 18:27:56.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019263639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019433194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.154" endtime="20201030 18:27:56.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019263639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019433194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.446" endtime="20201030 18:27:56.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.454" endtime="20201030 18:27:56.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.151" endtime="20201030 18:27:56.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.150" endtime="20201030 18:27:56.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:56.461" level="INFO">${PHILIP_RES} = [{'diff': 0.0001695550000000018}, {'diff': 0.0001695970000000005}, {'diff': 0.00016961100000000007}, {'diff': 0.0001695970000000005}, {'diff': 0.00016958300000000093}, {'diff': 0.0001695970000000005},...</msg>
<status status="PASS" starttime="20201030 18:27:56.458" endtime="20201030 18:27:56.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:56.466" level="INFO">${RESULT} = {'diff': [0.0001695550000000018, 0.0001695970000000005, 0.00016961100000000007, 0.0001695970000000005, 0.00016958300000000093, 0.0001695970000000005, 0.00016962499999999964, 0.00016961100000000007, 0....</msg>
<status status="PASS" starttime="20201030 18:27:56.462" endtime="20201030 18:27:56.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.470" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:56.469" endtime="20201030 18:27:56.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.473" level="INFO">VALUE: [0.0001695550000000018, 0.0001695970000000005, 0.00016961100000000007, 0.0001695970000000005, 0.00016958300000000093, 0.0001695970000000005, 0.00016962499999999964, 0.00016961100000000007, 0.00016961100000000007, 0.00016961100000000007, 0.00016961100000000007, 0.00016963799999999973, 0.00016969500000000096, 0.0001695840000000004, 0.0001695689999999979, 0.0001695840000000004, 0.0001695970000000005, 0.00016961100000000007, 0.00016961100000000007, 0.00016959799999999997, 0.00016961100000000007, 0.00016959799999999997, 0.0001695970000000005, 0.00016961100000000007, 0.0001695970000000005, 0.00016959799999999997, 0.00016961100000000007, 0.00016961100000000007, 0.0001695970000000005, 0.0001695559999999978, 0.00016958300000000093, 0.00016962499999999964, 0.00016961100000000007, 0.0001696389999999992, 0.00016962499999999964, 0.0001696250000000031, 0.00016966600000000234, 0.0001695970000000005, 0.00016962499999999964, 0.00016962499999999964, 0.00016955600000000126, 0.00016955499999999832, 0.00018766599999999953, 0.0001695970000000005, 0.00016961100000000007, 0.00016959699999999703, 0.00016962499999999964, 0.00016955600000000126, 0.00016961100000000007, 0.00016961100000000007]</msg>
<status status="PASS" starttime="20201030 18:27:56.471" endtime="20201030 18:27:56.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.467" endtime="20201030 18:27:56.474"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:56.478" endtime="20201030 18:27:56.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.476" endtime="20201030 18:27:56.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.475" endtime="20201030 18:27:56.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.117" endtime="20201030 18:27:56.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.116" endtime="20201030 18:27:56.499"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.507" endtime="20201030 18:27:56.526"></status>
</kw>
<msg timestamp="20201030 18:27:56.527" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.506" endtime="20201030 18:27:56.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.529" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.528" endtime="20201030 18:27:56.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.530" endtime="20201030 18:27:56.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.503" endtime="20201030 18:27:56.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.501" endtime="20201030 18:27:56.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.540" endtime="20201030 18:27:56.826"></status>
</kw>
<msg timestamp="20201030 18:27:56.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019068944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019259028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.538" endtime="20201030 18:27:56.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019068944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019259028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.830" endtime="20201030 18:27:56.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.838" endtime="20201030 18:27:56.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.535" endtime="20201030 18:27:56.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.534" endtime="20201030 18:27:56.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:56.846" level="INFO">${PHILIP_RES} = [{'diff': 0.00019008400000000009}, {'diff': 0.0001900830000000006}, {'diff': 0.00019006900000000104}, {'diff': 0.00019011099999999975}, {'diff': 0.0001901250000000028}, {'diff': 0.0001901250000000028}...</msg>
<status status="PASS" starttime="20201030 18:27:56.843" endtime="20201030 18:27:56.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:56.850" level="INFO">${RESULT} = {'diff': [0.00019008400000000009, 0.0001900830000000006, 0.00019006900000000104, 0.00019011099999999975, 0.0001901250000000028, 0.0001901250000000028, 0.00019012499999999932, 0.00019011099999999975, 0...</msg>
<status status="PASS" starttime="20201030 18:27:56.847" endtime="20201030 18:27:56.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.854" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:56.853" endtime="20201030 18:27:56.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.857" level="INFO">VALUE: [0.00019008400000000009, 0.0001900830000000006, 0.00019006900000000104, 0.00019011099999999975, 0.0001901250000000028, 0.0001901250000000028, 0.00019012499999999932, 0.00019011099999999975, 0.0001901389999999989, 0.00019012499999999932, 0.00019012499999999932, 0.00019012499999999932, 0.00019011099999999975, 0.0001901389999999989, 0.00019012499999999932, 0.00019009700000000018, 0.00019009700000000018, 0.00019013799999999942, 0.00019012499999999932, 0.00019012499999999932, 0.00019015299999999846, 0.0001901809999999976, 0.00019012499999999932, 0.00019012499999999932, 0.0001901389999999989, 0.0001901389999999989, 0.0001901389999999989, 0.00019011099999999975, 0.00019012499999999932, 0.0001901389999999989, 0.00019008400000000009, 0.00019011099999999975, 0.0001901389999999989, 0.00019016599999999856, 0.00019011099999999975, 0.00019012499999999932, 0.00019012499999999932, 0.00019019500000000064, 0.0001901389999999989, 0.00019012499999999932, 0.00019012499999999932, 0.00019012499999999932, 0.00019006900000000104, 0.00019012499999999932, 0.00019012499999999932, 0.00019011099999999975, 0.00019012499999999932, 0.00019009799999999966, 0.00019012499999999932, 0.00019011099999999975]</msg>
<status status="PASS" starttime="20201030 18:27:56.855" endtime="20201030 18:27:56.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.851" endtime="20201030 18:27:56.858"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:56.862" endtime="20201030 18:27:56.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.860" endtime="20201030 18:27:56.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.859" endtime="20201030 18:27:56.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.499" endtime="20201030 18:27:56.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.499" endtime="20201030 18:27:56.883"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.893" endtime="20201030 18:27:56.915"></status>
</kw>
<msg timestamp="20201030 18:27:56.915" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.891" endtime="20201030 18:27:56.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.918" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.916" endtime="20201030 18:27:56.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.919" endtime="20201030 18:27:56.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.888" endtime="20201030 18:27:56.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.886" endtime="20201030 18:27:56.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.928" endtime="20201030 18:27:57.215"></status>
</kw>
<msg timestamp="20201030 18:27:57.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021512944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021724625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.927" endtime="20201030 18:27:57.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021512944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021724625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.219" endtime="20201030 18:27:57.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.227" endtime="20201030 18:27:57.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.924" endtime="20201030 18:27:57.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.922" endtime="20201030 18:27:57.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:57.234" level="INFO">${PHILIP_RES} = [{'diff': 0.00021168100000000176}, {'diff': 0.00021173600000000056}, {'diff': 0.0002117639999999997}, {'diff': 0.000211722000000001}, {'diff': 0.0002117639999999997}, {'diff': 0.00021173600000000056},...</msg>
<status status="PASS" starttime="20201030 18:27:57.230" endtime="20201030 18:27:57.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:57.238" level="INFO">${RESULT} = {'diff': [0.00021168100000000176, 0.00021173600000000056, 0.0002117639999999997, 0.000211722000000001, 0.0002117639999999997, 0.00021173600000000056, 0.00021173700000000004, 0.00021175000000000013, 0....</msg>
<status status="PASS" starttime="20201030 18:27:57.235" endtime="20201030 18:27:57.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.242" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:57.241" endtime="20201030 18:27:57.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.245" level="INFO">VALUE: [0.00021168100000000176, 0.00021173600000000056, 0.0002117639999999997, 0.000211722000000001, 0.0002117639999999997, 0.00021173600000000056, 0.00021173700000000004, 0.00021175000000000013, 0.00021173600000000056, 0.000211722000000001, 0.00021179099999999937, 0.00021173600000000056, 0.00021173600000000056, 0.00021175000000000013, 0.00021173600000000056, 0.00021173700000000004, 0.00021173600000000056, 0.00021173600000000056, 0.00021173600000000056, 0.00021173600000000056, 0.00021173600000000056, 0.00021177799999999927, 0.00021172199999999752, 0.00021170800000000142, 0.00021172300000000047, 0.00021173700000000004, 0.000211722000000001, 0.00021175000000000013, 0.000211722000000001, 0.000211722000000001, 0.00021175000000000013, 0.00021173600000000056, 0.0002117359999999971, 0.00021173600000000056, 0.000211722000000001, 0.00021179099999999937, 0.00021173600000000056, 0.00021175000000000013, 0.00021173600000000056, 0.0002117359999999971, 0.0002117500000000036, 0.00021177800000000274, 0.00021174999999999666, 0.00021173699999999657, 0.000211722999999997, 0.0002117500000000036, 0.0002117500000000036, 0.0002117359999999971, 0.00021174999999999666, 0.00021170799999999795]</msg>
<status status="PASS" starttime="20201030 18:27:57.243" endtime="20201030 18:27:57.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.238" endtime="20201030 18:27:57.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.253" endtime="20201030 18:27:57.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.251" endtime="20201030 18:27:57.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.250" endtime="20201030 18:27:57.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.884" endtime="20201030 18:27:57.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.883" endtime="20201030 18:27:57.274"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.282" endtime="20201030 18:27:57.303"></status>
</kw>
<msg timestamp="20201030 18:27:57.303" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.281" endtime="20201030 18:27:57.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.306" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.304" endtime="20201030 18:27:57.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.307" endtime="20201030 18:27:57.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.278" endtime="20201030 18:27:57.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.276" endtime="20201030 18:27:57.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.316" endtime="20201030 18:27:57.603"></status>
</kw>
<msg timestamp="20201030 18:27:57.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019075556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019309917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.315" endtime="20201030 18:27:57.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019075556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019309917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.607" endtime="20201030 18:27:57.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.615" endtime="20201030 18:27:57.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.312" endtime="20201030 18:27:57.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.310" endtime="20201030 18:27:57.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:57.622" level="INFO">${PHILIP_RES} = [{'diff': 0.0002343609999999989}, {'diff': 0.00023440300000000108}, {'diff': 0.00023441700000000065}, {'diff': 0.0002344029999999976}, {'diff': 0.0002344579999999999}, {'diff': 0.00023441600000000118}...</msg>
<status status="PASS" starttime="20201030 18:27:57.619" endtime="20201030 18:27:57.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:57.627" level="INFO">${RESULT} = {'diff': [0.0002343609999999989, 0.00023440300000000108, 0.00023441700000000065, 0.0002344029999999976, 0.0002344579999999999, 0.00023441600000000118, 0.00023444400000000032, 0.00023441699999999718, 0...</msg>
<status status="PASS" starttime="20201030 18:27:57.623" endtime="20201030 18:27:57.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.631" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:57.630" endtime="20201030 18:27:57.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.634" level="INFO">VALUE: [0.0002343609999999989, 0.00023440300000000108, 0.00023441700000000065, 0.0002344029999999976, 0.0002344579999999999, 0.00023441600000000118, 0.00023444400000000032, 0.00023441699999999718, 0.00023443100000000022, 0.00023447299999999893, 0.00023443100000000022, 0.00023445899999999936, 0.00023440300000000108, 0.00023440300000000108, 0.00023441700000000065, 0.0002344029999999976, 0.00023443000000000075, 0.00023443000000000075, 0.00023441600000000118, 0.00023441699999999718, 0.00023443100000000022, 0.0002344449999999998, 0.0002344449999999998, 0.00023441699999999718, 0.00023441700000000065, 0.0002344449999999998, 0.00023443100000000022, 0.00023440199999999814, 0.00023443000000000075, 0.00023443000000000075, 0.0002344020000000016, 0.0002344029999999976, 0.0002344029999999976, 0.0002344449999999998, 0.00023440300000000108, 0.00023441699999999718, 0.0002343609999999989, 0.00023441700000000065, 0.00023441700000000065, 0.00023441700000000065, 0.00023442999999999728, 0.00023441600000000118, 0.00023441600000000118, 0.0002344029999999976, 0.0002344029999999976, 0.0002344730000000024, 0.00023443100000000022, 0.00023441700000000065, 0.0002344449999999998, 0.00023443100000000022]</msg>
<status status="PASS" starttime="20201030 18:27:57.632" endtime="20201030 18:27:57.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.628" endtime="20201030 18:27:57.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.639" endtime="20201030 18:27:57.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.637" endtime="20201030 18:27:57.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.636" endtime="20201030 18:27:57.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.275" endtime="20201030 18:27:57.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.274" endtime="20201030 18:27:57.660"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.668" endtime="20201030 18:27:57.691"></status>
</kw>
<msg timestamp="20201030 18:27:57.691" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.667" endtime="20201030 18:27:57.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.694" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.692" endtime="20201030 18:27:57.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.695" endtime="20201030 18:27:57.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.664" endtime="20201030 18:27:57.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.662" endtime="20201030 18:27:57.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.704" endtime="20201030 18:27:57.991"></status>
</kw>
<msg timestamp="20201030 18:27:57.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019147097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019405264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.703" endtime="20201030 18:27:57.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019147097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019405264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.995" endtime="20201030 18:27:58.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.003" endtime="20201030 18:27:58.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.700" endtime="20201030 18:27:58.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.698" endtime="20201030 18:27:58.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:58.011" level="INFO">${PHILIP_RES} = [{'diff': 0.0002581670000000001}, {'diff': 0.0002581800000000002}, {'diff': 0.00025820799999999935}, {'diff': 0.00025820799999999935}, {'diff': 0.0002581800000000002}, {'diff': 0.0002581939999999998},...</msg>
<status status="PASS" starttime="20201030 18:27:58.008" endtime="20201030 18:27:58.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:58.015" level="INFO">${RESULT} = {'diff': [0.0002581670000000001, 0.0002581800000000002, 0.00025820799999999935, 0.00025820799999999935, 0.0002581800000000002, 0.0002581939999999998, 0.00025816600000000064, 0.00025820799999999935, 0....</msg>
<status status="PASS" starttime="20201030 18:27:58.012" endtime="20201030 18:27:58.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.020" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:58.019" endtime="20201030 18:27:58.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.022" level="INFO">VALUE: [0.0002581670000000001, 0.0002581800000000002, 0.00025820799999999935, 0.00025820799999999935, 0.0002581800000000002, 0.0002581939999999998, 0.00025816600000000064, 0.00025820799999999935, 0.00025819400000000325, 0.00025819499999999926, 0.00025819499999999926, 0.00025819499999999926, 0.00025820899999999883, 0.0002582090000000023, 0.00025825000000000153, 0.0002581670000000001, 0.0002582219999999989, 0.00027976299999999885, 0.0002582080000000028, 0.0002581809999999997, 0.00025820899999999883, 0.0002581809999999997, 0.0002582229999999984, 0.00025823700000000144, 0.00025822300000000187, 0.0002581939999999998, 0.00025820799999999935, 0.0002581939999999998, 0.0002581939999999998, 0.00025820799999999935, 0.0002581800000000002, 0.0002581939999999998, 0.0002581800000000002, 0.0002581939999999998, 0.0002581809999999997, 0.00025819499999999926, 0.00025825000000000153, 0.00025819500000000273, 0.0002581809999999997, 0.0002581809999999997, 0.00025824999999999806, 0.0002582080000000028, 0.00025818100000000316, 0.00025819400000000325, 0.0002582080000000028, 0.00025819400000000325, 0.0002582080000000028, 0.00025819400000000325, 0.0002582079999999959, 0.0002582079999999959]</msg>
<status status="PASS" starttime="20201030 18:27:58.021" endtime="20201030 18:27:58.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.016" endtime="20201030 18:27:58.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:58.027" endtime="20201030 18:27:58.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.026" endtime="20201030 18:27:58.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.024" endtime="20201030 18:27:58.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.660" endtime="20201030 18:27:58.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.660" endtime="20201030 18:27:58.048"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.056" endtime="20201030 18:27:58.081"></status>
</kw>
<msg timestamp="20201030 18:27:58.082" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.055" endtime="20201030 18:27:58.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.084" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.083" endtime="20201030 18:27:58.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.085" endtime="20201030 18:27:58.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.052" endtime="20201030 18:27:58.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.050" endtime="20201030 18:27:58.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.095" endtime="20201030 18:27:58.380"></status>
</kw>
<msg timestamp="20201030 18:27:58.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020159486, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:58.093" endtime="20201030 18:27:58.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020159486, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:58.385" endtime="20201030 18:27:58.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.393" endtime="20201030 18:27:58.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.090" endtime="20201030 18:27:58.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.088" endtime="20201030 18:27:58.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:58.399" level="INFO">${PHILIP_RES} = [{'diff': 0.00028298600000000243}, {'diff': 0.0002830560000000003}, {'diff': 0.0002830690000000004}, {'diff': 0.0002830560000000003}, {'diff': 0.00028304099999999777}, {'diff': 0.0002830559999999968},...</msg>
<status status="PASS" starttime="20201030 18:27:58.396" endtime="20201030 18:27:58.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:58.404" level="INFO">${RESULT} = {'diff': [0.00028298600000000243, 0.0002830560000000003, 0.0002830690000000004, 0.0002830560000000003, 0.00028304099999999777, 0.0002830559999999968, 0.0002830550000000008, 0.0002830560000000003, 0.00...</msg>
<status status="PASS" starttime="20201030 18:27:58.401" endtime="20201030 18:27:58.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.408" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:58.407" endtime="20201030 18:27:58.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.410" level="INFO">VALUE: [0.00028298600000000243, 0.0002830560000000003, 0.0002830690000000004, 0.0002830560000000003, 0.00028304099999999777, 0.0002830559999999968, 0.0002830550000000008, 0.0002830560000000003, 0.0002830550000000008, 0.0002830560000000003, 0.0002830420000000007, 0.00028306999999999985, 0.0002830560000000003, 0.0002830550000000008, 0.0002830420000000007, 0.0002830560000000003, 0.0002830420000000007, 0.00028305499999999734, 0.00028304199999999724, 0.0002830550000000008, 0.0002830560000000003, 0.0002830550000000008, 0.00028306999999999985, 0.0002830550000000008, 0.0002830560000000003, 0.0002830550000000008, 0.0002831109999999991, 0.000283000000000002, 0.0002830690000000004, 0.0003028749999999976, 0.0002830560000000003, 0.0002830550000000008, 0.00028301400000000157, 0.0002830550000000008, 0.00028301400000000157, 0.00028305499999999734, 0.0002830559999999968, 0.0002830829999999965, 0.0002830699999999964, 0.00028302799999999767, 0.0002830699999999964, 0.00028302799999999767, 0.00028305499999999734, 0.0002830559999999968, 0.00028302799999999767, 0.0002830559999999968, 0.00028304099999999777, 0.0002830420000000042, 0.0002830410000000047, 0.00028305600000000375]</msg>
<status status="PASS" starttime="20201030 18:27:58.409" endtime="20201030 18:27:58.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.405" endtime="20201030 18:27:58.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:58.417" endtime="20201030 18:27:58.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.415" endtime="20201030 18:27:58.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.414" endtime="20201030 18:27:58.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.049" endtime="20201030 18:27:58.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.048" endtime="20201030 18:27:58.437"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.446" endtime="20201030 18:27:58.470"></status>
</kw>
<msg timestamp="20201030 18:27:58.471" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.444" endtime="20201030 18:27:58.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.473" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.472" endtime="20201030 18:27:58.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.474" endtime="20201030 18:27:58.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.442" endtime="20201030 18:27:58.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.440" endtime="20201030 18:27:58.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.484" endtime="20201030 18:27:58.770"></status>
</kw>
<msg timestamp="20201030 18:27:58.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019124944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019433903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.482" endtime="20201030 18:27:58.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019124944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019433903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.774" endtime="20201030 18:27:58.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.782" endtime="20201030 18:27:58.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.479" endtime="20201030 18:27:58.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.478" endtime="20201030 18:27:58.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:58.789" level="INFO">${PHILIP_RES} = [{'diff': 0.00030895899999999754}, {'diff': 0.00030900000000000025}, {'diff': 0.0003089860000000007}, {'diff': 0.00030897199999999764}, {'diff': 0.00030897199999999764}, {'diff': 0.0003089730000000006...</msg>
<status status="PASS" starttime="20201030 18:27:58.786" endtime="20201030 18:27:58.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:58.794" level="INFO">${RESULT} = {'diff': [0.00030895899999999754, 0.00030900000000000025, 0.0003089860000000007, 0.00030897199999999764, 0.00030897199999999764, 0.0003089730000000006, 0.0003089999999999968, 0.00030892999999999893, 0...</msg>
<status status="PASS" starttime="20201030 18:27:58.790" endtime="20201030 18:27:58.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.798" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:58.797" endtime="20201030 18:27:58.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.801" level="INFO">VALUE: [0.00030895899999999754, 0.00030900000000000025, 0.0003089860000000007, 0.00030897199999999764, 0.00030897199999999764, 0.0003089730000000006, 0.0003089999999999968, 0.00030892999999999893, 0.0003090409999999995, 0.0003089999999999968, 0.0003089999999999968, 0.00030900000000000025, 0.00030900000000000025, 0.00030895799999999807, 0.0003089860000000007, 0.00030894400000000197, 0.00030900000000000025, 0.0003089860000000007, 0.00030900000000000025, 0.0003089860000000007, 0.0003089860000000007, 0.00030900000000000025, 0.00030904199999999896, 0.00030900000000000025, 0.00030900000000000025, 0.0003089730000000006, 0.0003089860000000007, 0.00030900000000000025, 0.000308959000000001, 0.0003090409999999995, 0.0003089860000000007, 0.0003089730000000006, 0.0003089860000000007, 0.0003089860000000007, 0.00030900000000000025, 0.00030895899999999754, 0.0003090279999999959, 0.0003089729999999971, 0.00030901399999999635, 0.00030895799999999807, 0.00032005499999999965, 0.0003090000000000037, 0.0003090000000000037, 0.00030892999999999893, 0.0003089870000000036, 0.00030897199999999764, 0.0003089859999999972, 0.00030905599999999506, 0.0003089859999999972, 0.00030901399999999635]</msg>
<status status="PASS" starttime="20201030 18:27:58.800" endtime="20201030 18:27:58.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.795" endtime="20201030 18:27:58.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:58.806" endtime="20201030 18:27:58.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.805" endtime="20201030 18:27:58.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.803" endtime="20201030 18:27:58.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.438" endtime="20201030 18:27:58.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.438" endtime="20201030 18:27:58.827"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.836" endtime="20201030 18:27:58.862"></status>
</kw>
<msg timestamp="20201030 18:27:58.862" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.834" endtime="20201030 18:27:58.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.865" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.863" endtime="20201030 18:27:58.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.866" endtime="20201030 18:27:58.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.831" endtime="20201030 18:27:58.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.829" endtime="20201030 18:27:58.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.875" endtime="20201030 18:27:59.162"></status>
</kw>
<msg timestamp="20201030 18:27:59.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019066236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019402194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.874" endtime="20201030 18:27:59.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019066236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019402194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.166" endtime="20201030 18:27:59.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.174" endtime="20201030 18:27:59.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.871" endtime="20201030 18:27:59.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.869" endtime="20201030 18:27:59.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:59.182" level="INFO">${PHILIP_RES} = [{'diff': 0.0003359580000000008}, {'diff': 0.00033601399999999906}, {'diff': 0.00033602799999999863}, {'diff': 0.00033601399999999906}, {'diff': 0.00033601399999999906}, {'diff': 0.0003360279999999986...</msg>
<status status="PASS" starttime="20201030 18:27:59.179" endtime="20201030 18:27:59.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.186" level="INFO">${RESULT} = {'diff': [0.0003359580000000008, 0.00033601399999999906, 0.00033602799999999863, 0.00033601399999999906, 0.00033601399999999906, 0.00033602799999999863, 0.0003360280000000021, 0.0003359999999999995, 0...</msg>
<status status="PASS" starttime="20201030 18:27:59.183" endtime="20201030 18:27:59.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.190" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:59.189" endtime="20201030 18:27:59.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.192" level="INFO">VALUE: [0.0003359580000000008, 0.00033601399999999906, 0.00033602799999999863, 0.00033601399999999906, 0.00033601399999999906, 0.00033602799999999863, 0.0003360280000000021, 0.0003359999999999995, 0.0003359580000000008, 0.00033601399999999906, 0.0003359580000000008, 0.00033601400000000253, 0.0003359999999999995, 0.00033601399999999906, 0.00033604200000000167, 0.00033601399999999906, 0.00033601399999999906, 0.00033602799999999863, 0.0003359999999999995, 0.00033601399999999906, 0.0003359859999999999, 0.00033604099999999873, 0.0003359999999999995, 0.00033605500000000177, 0.00033608299999999744, 0.00033602699999999916, 0.0003359580000000008, 0.0003360280000000021, 0.00033601399999999906, 0.00033605500000000177, 0.0003359859999999999, 0.00033601399999999906, 0.0003360139999999956, 0.00033601400000000253, 0.00033604200000000167, 0.000335999999999996, 0.0003360139999999956, 0.00033604200000000167, 0.00033601400000000253, 0.0003360139999999956, 0.00033604200000000167, 0.00033601400000000253, 0.0003360410000000022, 0.00033604199999999473, 0.000335999999999996, 0.0003360280000000021, 0.00033601300000000306, 0.00033601400000000253, 0.00033604200000000167, 0.0003359589999999968]</msg>
<status status="PASS" starttime="20201030 18:27:59.191" endtime="20201030 18:27:59.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.187" endtime="20201030 18:27:59.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.197" endtime="20201030 18:27:59.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.196" endtime="20201030 18:27:59.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.195" endtime="20201030 18:27:59.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.828" endtime="20201030 18:27:59.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.827" endtime="20201030 18:27:59.218"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.226" endtime="20201030 18:27:59.255"></status>
</kw>
<msg timestamp="20201030 18:27:59.255" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.225" endtime="20201030 18:27:59.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.258" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.256" endtime="20201030 18:27:59.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.259" endtime="20201030 18:27:59.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.222" endtime="20201030 18:27:59.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.220" endtime="20201030 18:27:59.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.268" endtime="20201030 18:27:59.563"></status>
</kw>
<msg timestamp="20201030 18:27:59.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019614042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019978125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.266" endtime="20201030 18:27:59.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019614042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019978125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.572" endtime="20201030 18:27:59.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.591" endtime="20201030 18:27:59.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.264" endtime="20201030 18:27:59.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.262" endtime="20201030 18:27:59.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:59.604" level="INFO">${PHILIP_RES} = [{'diff': 0.0003640829999999977}, {'diff': 0.00036412499999999987}, {'diff': 0.000364152999999999}, {'diff': 0.00036413899999999944}, {'diff': 0.00036413899999999944}, {'diff': 0.00036413899999999944}...</msg>
<status status="PASS" starttime="20201030 18:27:59.598" endtime="20201030 18:27:59.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.613" level="INFO">${RESULT} = {'diff': [0.0003640829999999977, 0.00036412499999999987, 0.000364152999999999, 0.00036413899999999944, 0.00036413899999999944, 0.00036413899999999944, 0.00036413899999999944, 0.00036412499999999987, 0...</msg>
<status status="PASS" starttime="20201030 18:27:59.606" endtime="20201030 18:27:59.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.618" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:59.617" endtime="20201030 18:27:59.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.621" level="INFO">VALUE: [0.0003640829999999977, 0.00036412499999999987, 0.000364152999999999, 0.00036413899999999944, 0.00036413899999999944, 0.00036413899999999944, 0.00036413899999999944, 0.00036412499999999987, 0.00036413899999999944, 0.00036412499999999987, 0.0003640420000000019, 0.00036412499999999987, 0.00036412499999999987, 0.00036412499999999987, 0.00036413899999999944, 0.00036413899999999944, 0.00036412499999999987, 0.0003641110000000003, 0.0003641110000000003, 0.0003641390000000029, 0.0003640690000000016, 0.00036412499999999987, 0.0003641390000000029, 0.00036413899999999944, 0.00036412499999999987, 0.00036412499999999987, 0.0003640970000000007, 0.00036412499999999987, 0.0003641110000000003, 0.00036412499999999987, 0.00036412499999999987, 0.00036412499999999987, 0.0003641670000000055, 0.0003641110000000003, 0.00036412499999999987, 0.0003640970000000007, 0.00036412499999999987, 0.00036412499999999987, 0.00036412499999999987, 0.00036412499999999987, 0.0003641110000000003, 0.00036412499999999987, 0.00036413899999999944, 0.00036412499999999987, 0.00036413899999999944, 0.00036413899999999944, 0.00036412499999999987, 0.0003865000000000049, 0.00036412499999999987, 0.0003641669999999986]</msg>
<status status="PASS" starttime="20201030 18:27:59.619" endtime="20201030 18:27:59.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.615" endtime="20201030 18:27:59.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.626" endtime="20201030 18:27:59.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.625" endtime="20201030 18:27:59.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.624" endtime="20201030 18:27:59.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.219" endtime="20201030 18:27:59.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.218" endtime="20201030 18:27:59.647"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.655" endtime="20201030 18:27:59.686"></status>
</kw>
<msg timestamp="20201030 18:27:59.686" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.654" endtime="20201030 18:27:59.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.689" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.687" endtime="20201030 18:27:59.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.690" endtime="20201030 18:27:59.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.651" endtime="20201030 18:27:59.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.649" endtime="20201030 18:27:59.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.699" endtime="20201030 18:27:59.999"></status>
</kw>
<msg timestamp="20201030 18:28:00.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018693125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019086403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.697" endtime="20201030 18:28:00.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018693125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019086403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.003" endtime="20201030 18:28:00.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.011" endtime="20201030 18:28:00.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.695" endtime="20201030 18:28:00.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.693" endtime="20201030 18:28:00.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:00.017" level="INFO">${PHILIP_RES} = [{'diff': 0.0003932779999999969}, {'diff': 0.0003933059999999995}, {'diff': 0.0003932640000000008}, {'diff': 0.0003933189999999996}, {'diff': 0.00039332000000000256}, {'diff': 0.0003933059999999995}, ...</msg>
<status status="PASS" starttime="20201030 18:28:00.014" endtime="20201030 18:28:00.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.022" level="INFO">${RESULT} = {'diff': [0.0003932779999999969, 0.0003933059999999995, 0.0003932640000000008, 0.0003933189999999996, 0.00039332000000000256, 0.0003933059999999995, 0.0003933190000000031, 0.00039329199999999995, 0.00...</msg>
<status status="PASS" starttime="20201030 18:28:00.018" endtime="20201030 18:28:00.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.027" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:00.026" endtime="20201030 18:28:00.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.029" level="INFO">VALUE: [0.0003932779999999969, 0.0003933059999999995, 0.0003932640000000008, 0.0003933189999999996, 0.00039332000000000256, 0.0003933059999999995, 0.0003933190000000031, 0.00039329199999999995, 0.00039332000000000256, 0.0003933189999999996, 0.00039333300000000265, 0.00039334699999999875, 0.0003933199999999991, 0.00039329199999999995, 0.00039330500000000004, 0.0003933329999999992, 0.0003933340000000021, 0.0003933609999999983, 0.0003933189999999996, 0.0003933329999999992, 0.0003934030000000005, 0.0003933199999999991, 0.0003933190000000031, 0.0003932780000000004, 0.000393306000000003, 0.00039329199999999995, 0.0003933329999999992, 0.0003933189999999996, 0.0003933189999999996, 0.00039337500000000136, 0.0003932919999999965, 0.00039329100000000394, 0.0003933190000000031, 0.00039330599999999605, 0.00039337500000000136, 0.0003932500000000047, 0.0003933050000000035, 0.00039330599999999605, 0.0003933199999999956, 0.0004070420000000033, 0.0003933190000000031, 0.0003933199999999956, 0.00039330599999999605, 0.00039332000000000256, 0.00039329100000000394, 0.00039326399999999734, 0.0003932919999999965, 0.00039333300000000265, 0.00039333300000000265, 0.00039336099999999485]</msg>
<status status="PASS" starttime="20201030 18:28:00.028" endtime="20201030 18:28:00.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.023" endtime="20201030 18:28:00.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.034" endtime="20201030 18:28:00.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.032" endtime="20201030 18:28:00.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.031" endtime="20201030 18:28:00.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.648" endtime="20201030 18:28:00.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.647" endtime="20201030 18:28:00.055"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.063" endtime="20201030 18:28:00.094"></status>
</kw>
<msg timestamp="20201030 18:28:00.094" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.061" endtime="20201030 18:28:00.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.097" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.095" endtime="20201030 18:28:00.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.098" endtime="20201030 18:28:00.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.059" endtime="20201030 18:28:00.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.057" endtime="20201030 18:28:00.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.107" endtime="20201030 18:28:00.393"></status>
</kw>
<msg timestamp="20201030 18:28:00.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018561389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018984972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.105" endtime="20201030 18:28:00.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018561389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018984972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.397" endtime="20201030 18:28:00.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.405" endtime="20201030 18:28:00.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.103" endtime="20201030 18:28:00.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.101" endtime="20201030 18:28:00.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:00.412" level="INFO">${PHILIP_RES} = [{'diff': 0.0004235829999999982}, {'diff': 0.00042359700000000125}, {'diff': 0.0004235969999999978}, {'diff': 0.0004235969999999978}, {'diff': 0.00042361099999999735}, {'diff': 0.0004235969999999978},...</msg>
<status status="PASS" starttime="20201030 18:28:00.409" endtime="20201030 18:28:00.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.416" level="INFO">${RESULT} = {'diff': [0.0004235829999999982, 0.00042359700000000125, 0.0004235969999999978, 0.0004235969999999978, 0.00042361099999999735, 0.0004235969999999978, 0.00044779199999999894, 0.00042359700000000125, 0....</msg>
<status status="PASS" starttime="20201030 18:28:00.413" endtime="20201030 18:28:00.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.420" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:00.419" endtime="20201030 18:28:00.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.423" level="INFO">VALUE: [0.0004235829999999982, 0.00042359700000000125, 0.0004235969999999978, 0.0004235969999999978, 0.00042361099999999735, 0.0004235969999999978, 0.00044779199999999894, 0.00042359700000000125, 0.0004235829999999982, 0.0004235839999999977, 0.00042358400000000115, 0.0004235839999999977, 0.0004235839999999977, 0.0004235969999999978, 0.0004235969999999978, 0.00042351399999999984, 0.00042356899999999864, 0.00042359700000000125, 0.0004235830000000017, 0.00042359700000000125, 0.0004236120000000003, 0.00042358400000000115, 0.00042359700000000125, 0.0004235829999999982, 0.0004236110000000008, 0.00042359700000000125, 0.0004236110000000043, 0.0004236110000000043, 0.0004235829999999982, 0.0004235699999999981, 0.00042357000000000505, 0.0004235970000000047, 0.0004235690000000056, 0.0004236110000000043, 0.0004235690000000056, 0.00042358300000000515, 0.0004235970000000047, 0.0004235970000000047, 0.0004235980000000042, 0.0004236110000000043, 0.0004235980000000042, 0.0004235970000000047, 0.00042358300000000515, 0.0004235970000000047, 0.0004235829999999982, 0.0004235829999999982, 0.0004235279999999994, 0.0004235699999999981, 0.0004235839999999977, 0.0004235839999999977]</msg>
<status status="PASS" starttime="20201030 18:28:00.421" endtime="20201030 18:28:00.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.417" endtime="20201030 18:28:00.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.435" endtime="20201030 18:28:00.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.433" endtime="20201030 18:28:00.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.432" endtime="20201030 18:28:00.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.055" endtime="20201030 18:28:00.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.055" endtime="20201030 18:28:00.455"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.464" endtime="20201030 18:28:00.496"></status>
</kw>
<msg timestamp="20201030 18:28:00.497" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.462" endtime="20201030 18:28:00.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.499" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.498" endtime="20201030 18:28:00.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.500" endtime="20201030 18:28:00.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.459" endtime="20201030 18:28:00.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.458" endtime="20201030 18:28:00.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.509" endtime="20201030 18:28:00.795"></status>
</kw>
<msg timestamp="20201030 18:28:00.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019558653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.508" endtime="20201030 18:28:00.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019558653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.799" endtime="20201030 18:28:00.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.807" endtime="20201030 18:28:00.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.505" endtime="20201030 18:28:00.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.503" endtime="20201030 18:28:00.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:00.814" level="INFO">${PHILIP_RES} = [{'diff': 0.00045490299999999956}, {'diff': 0.0004549720000000014}, {'diff': 0.00045495799999999836}, {'diff': 0.0004549309999999987}, {'diff': 0.00045497199999999793}, {'diff': 0.0004549439999999988}...</msg>
<status status="PASS" starttime="20201030 18:28:00.810" endtime="20201030 18:28:00.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.818" level="INFO">${RESULT} = {'diff': [0.00045490299999999956, 0.0004549720000000014, 0.00045495799999999836, 0.0004549309999999987, 0.00045497199999999793, 0.0004549439999999988, 0.0004549309999999987, 0.0004550140000000001, 0.0...</msg>
<status status="PASS" starttime="20201030 18:28:00.815" endtime="20201030 18:28:00.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.822" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:00.821" endtime="20201030 18:28:00.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.824" level="INFO">VALUE: [0.00045490299999999956, 0.0004549720000000014, 0.00045495799999999836, 0.0004549309999999987, 0.00045497199999999793, 0.0004549439999999988, 0.0004549309999999987, 0.0004550140000000001, 0.0004549439999999988, 0.0004549730000000009, 0.00045495800000000183, 0.00045493100000000217, 0.0004549720000000014, 0.0004549439999999988, 0.00045494500000000174, 0.0004549439999999988, 0.0004549439999999988, 0.00045487499999999695, 0.0004549439999999988, 0.0004549439999999988, 0.00045495899999999784, 0.0004549439999999988, 0.00045494499999999827, 0.00045494500000000174, 0.00045495799999999836, 0.00045494499999999827, 0.0004549439999999988, 0.00045495799999999836, 0.00045494499999999827, 0.00045490299999999956, 0.00045497200000000487, 0.0004549450000000052, 0.0004549580000000053, 0.0004549450000000052, 0.0004549450000000052, 0.00045494400000000573, 0.0004549450000000052, 0.00045493100000000564, 0.00045498600000000444, 0.00045494499999999827, 0.00045495799999999836, 0.000454889, 0.0004549309999999987, 0.0004549859999999975, 0.0004549309999999987, 0.00045494499999999827, 0.0004549439999999988, 0.00045494499999999827, 0.0004549309999999987, 0.0004548880000000005]</msg>
<status status="PASS" starttime="20201030 18:28:00.823" endtime="20201030 18:28:00.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.818" endtime="20201030 18:28:00.829"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.834" endtime="20201030 18:28:00.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.832" endtime="20201030 18:28:00.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.830" endtime="20201030 18:28:00.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.456" endtime="20201030 18:28:00.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.456" endtime="20201030 18:28:00.856"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.867" endtime="20201030 18:28:00.902"></status>
</kw>
<msg timestamp="20201030 18:28:00.902" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.864" endtime="20201030 18:28:00.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.906" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.904" endtime="20201030 18:28:00.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.908" endtime="20201030 18:28:00.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.861" endtime="20201030 18:28:00.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.859" endtime="20201030 18:28:00.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.921" endtime="20201030 18:28:01.227"></status>
</kw>
<msg timestamp="20201030 18:28:01.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022824889, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:00.919" endtime="20201030 18:28:01.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022824889, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:01.231" endtime="20201030 18:28:01.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.239" endtime="20201030 18:28:01.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.915" endtime="20201030 18:28:01.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.913" endtime="20201030 18:28:01.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:01.246" level="INFO">${PHILIP_RES} = [{'diff': 0.00048738900000000127}, {'diff': 0.0004873889999999978}, {'diff': 0.00048740299999999737}, {'diff': 0.00048740300000000084}, {'diff': 0.00048740300000000084}, {'diff': 0.0004873749999999982...</msg>
<status status="PASS" starttime="20201030 18:28:01.243" endtime="20201030 18:28:01.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.251" level="INFO">${RESULT} = {'diff': [0.00048738900000000127, 0.0004873889999999978, 0.00048740299999999737, 0.00048740300000000084, 0.00048740300000000084, 0.0004873749999999982, 0.0004873889999999978, 0.0004873750000000017, 0....</msg>
<status status="PASS" starttime="20201030 18:28:01.247" endtime="20201030 18:28:01.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.255" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:01.254" endtime="20201030 18:28:01.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.258" level="INFO">VALUE: [0.00048738900000000127, 0.0004873889999999978, 0.00048740299999999737, 0.00048740300000000084, 0.00048740300000000084, 0.0004873749999999982, 0.0004873889999999978, 0.0004873750000000017, 0.00048740300000000084, 0.0004873750000000017, 0.0004873749999999982, 0.0004873889999999978, 0.0004873749999999982, 0.0004873750000000017, 0.00048738900000000127, 0.00048734799999999856, 0.0004873749999999982, 0.00048740299999999737, 0.0004873889999999978, 0.00048736199999999813, 0.0004873749999999982, 0.00048738900000000474, 0.00048738900000000474, 0.0004873610000000056, 0.0004874030000000043, 0.0004873889999999978, 0.0004873889999999978, 0.0004874309999999965, 0.0004873889999999978, 0.0004873749999999982, 0.0004873329999999995, 0.0004873889999999978, 0.0004873610000000056, 0.0005142080000000021, 0.0004874439999999966, 0.0004873749999999982, 0.0004873749999999982, 0.0004873749999999982, 0.0004874030000000043, 0.0004874030000000043, 0.00048738900000000474, 0.00048736199999999813, 0.0004873889999999978, 0.0004873889999999978, 0.0004873889999999978, 0.0004873469999999991, 0.0004873749999999982, 0.0004873889999999978, 0.000487333999999999, 0.00048736099999999866]</msg>
<status status="PASS" starttime="20201030 18:28:01.256" endtime="20201030 18:28:01.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.252" endtime="20201030 18:28:01.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.263" endtime="20201030 18:28:01.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.261" endtime="20201030 18:28:01.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.260" endtime="20201030 18:28:01.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.857" endtime="20201030 18:28:01.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.857" endtime="20201030 18:28:01.284"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.292" endtime="20201030 18:28:01.329"></status>
</kw>
<msg timestamp="20201030 18:28:01.329" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.291" endtime="20201030 18:28:01.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.332" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.330" endtime="20201030 18:28:01.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.333" endtime="20201030 18:28:01.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.288" endtime="20201030 18:28:01.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.286" endtime="20201030 18:28:01.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.342" endtime="20201030 18:28:01.630"></status>
</kw>
<msg timestamp="20201030 18:28:01.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019028806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019549667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.341" endtime="20201030 18:28:01.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019028806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019549667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.635" endtime="20201030 18:28:01.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.643" endtime="20201030 18:28:01.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.338" endtime="20201030 18:28:01.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.336" endtime="20201030 18:28:01.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:01.650" level="INFO">${PHILIP_RES} = [{'diff': 0.0005208610000000009}, {'diff': 0.0005208890000000001}, {'diff': 0.0005209030000000031}, {'diff': 0.0005209029999999996}, {'diff': 0.0005209029999999996}, {'diff': 0.0005209309999999988}, {...</msg>
<status status="PASS" starttime="20201030 18:28:01.647" endtime="20201030 18:28:01.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.654" level="INFO">${RESULT} = {'diff': [0.0005208610000000009, 0.0005208890000000001, 0.0005209030000000031, 0.0005209029999999996, 0.0005209029999999996, 0.0005209309999999988, 0.0005208880000000006, 0.0005209169999999992, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:28:01.651" endtime="20201030 18:28:01.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.658" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:01.657" endtime="20201030 18:28:01.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.661" level="INFO">VALUE: [0.0005208610000000009, 0.0005208890000000001, 0.0005209030000000031, 0.0005209029999999996, 0.0005209029999999996, 0.0005209309999999988, 0.0005208880000000006, 0.0005209169999999992, 0.0005209310000000023, 0.0005209159999999997, 0.0005209029999999996, 0.0005209169999999992, 0.0005209300000000028, 0.0005208479999999974, 0.0005209309999999988, 0.0005209029999999996, 0.0005208880000000006, 0.0005209169999999992, 0.0005209169999999992, 0.0005209590000000014, 0.0005208620000000004, 0.0005209169999999992, 0.0005209030000000031, 0.0005209299999999958, 0.0005209169999999957, 0.0005209030000000031, 0.0005209019999999967, 0.0005209170000000027, 0.0005209030000000031, 0.0005209159999999963, 0.0005209300000000028, 0.0005209029999999962, 0.0005209030000000031, 0.000537250000000003, 0.0005209019999999967, 0.0005209030000000031, 0.0005209310000000023, 0.0005209299999999958, 0.0005209020000000036, 0.0005208889999999966, 0.0005208330000000053, 0.0005209020000000036, 0.0005209169999999957, 0.0005209590000000014, 0.0005209019999999967, 0.0005209170000000027, 0.0005209170000000027, 0.0005208889999999966, 0.0005209160000000032, 0.0005209309999999953]</msg>
<status status="PASS" starttime="20201030 18:28:01.659" endtime="20201030 18:28:01.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.655" endtime="20201030 18:28:01.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.666" endtime="20201030 18:28:01.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.664" endtime="20201030 18:28:01.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.663" endtime="20201030 18:28:01.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.285" endtime="20201030 18:28:01.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.284" endtime="20201030 18:28:01.686"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.695" endtime="20201030 18:28:01.733"></status>
</kw>
<msg timestamp="20201030 18:28:01.734" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.693" endtime="20201030 18:28:01.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.736" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.735" endtime="20201030 18:28:01.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.737" endtime="20201030 18:28:01.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.691" endtime="20201030 18:28:01.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.689" endtime="20201030 18:28:01.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.746" endtime="20201030 18:28:02.045"></status>
</kw>
<msg timestamp="20201030 18:28:02.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019449431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020004917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.744" endtime="20201030 18:28:02.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019449431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020004917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.049" endtime="20201030 18:28:02.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.057" endtime="20201030 18:28:02.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.742" endtime="20201030 18:28:02.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.740" endtime="20201030 18:28:02.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:02.064" level="INFO">${PHILIP_RES} = [{'diff': 0.0005554860000000009}, {'diff': 0.0005555410000000031}, {'diff': 0.000555514}, {'diff': 0.0005555279999999996}, {'diff': 0.0005555000000000004}, {'diff': 0.000555514}, {'diff': 0.0005554720...</msg>
<status status="PASS" starttime="20201030 18:28:02.061" endtime="20201030 18:28:02.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.068" level="INFO">${RESULT} = {'diff': [0.0005554860000000009, 0.0005555410000000031, 0.000555514, 0.0005555279999999996, 0.0005555000000000004, 0.000555514, 0.0005554720000000013, 0.0005555559999999987, 0.0005554720000000013, 0.0...</msg>
<status status="PASS" starttime="20201030 18:28:02.065" endtime="20201030 18:28:02.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.072" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:02.071" endtime="20201030 18:28:02.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.074" level="INFO">VALUE: [0.0005554860000000009, 0.0005555410000000031, 0.000555514, 0.0005555279999999996, 0.0005555000000000004, 0.000555514, 0.0005554720000000013, 0.0005555559999999987, 0.0005554720000000013, 0.000555528000000003, 0.0005555270000000001, 0.0005555419999999991, 0.0005555279999999996, 0.000555499999999997, 0.000588458, 0.000555514, 0.0005555130000000005, 0.000555514, 0.0005554439999999987, 0.0005555000000000004, 0.0005555689999999988, 0.0005554720000000013, 0.0005555280000000065, 0.000555514, 0.000555514, 0.0005555419999999991, 0.0005555279999999996, 0.0005555829999999984, 0.000555514, 0.000555514, 0.0005555279999999996, 0.0005554859999999939, 0.0005555279999999996, 0.0005555409999999997, 0.0005555279999999996, 0.000555514, 0.0005555279999999996, 0.0005555000000000004, 0.0005555279999999996, 0.0005555700000000052, 0.0005555279999999996, 0.0005555279999999996, 0.0005555839999999979, 0.0005555279999999996, 0.000555514, 0.000555514, 0.0005555130000000005, 0.0005555000000000004, 0.0005555419999999991, 0.0005555279999999996]</msg>
<status status="PASS" starttime="20201030 18:28:02.073" endtime="20201030 18:28:02.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.068" endtime="20201030 18:28:02.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.080" endtime="20201030 18:28:02.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.078" endtime="20201030 18:28:02.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.077" endtime="20201030 18:28:02.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.687" endtime="20201030 18:28:02.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.687" endtime="20201030 18:28:02.100"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.109" endtime="20201030 18:28:02.149"></status>
</kw>
<msg timestamp="20201030 18:28:02.149" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.107" endtime="20201030 18:28:02.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.152" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.150" endtime="20201030 18:28:02.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.153" endtime="20201030 18:28:02.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.105" endtime="20201030 18:28:02.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.103" endtime="20201030 18:28:02.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.162" endtime="20201030 18:28:02.447"></status>
</kw>
<msg timestamp="20201030 18:28:02.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018601069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019192278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.160" endtime="20201030 18:28:02.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018601069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019192278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.451" endtime="20201030 18:28:02.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.459" endtime="20201030 18:28:02.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.158" endtime="20201030 18:28:02.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.156" endtime="20201030 18:28:02.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:02.465" level="INFO">${PHILIP_RES} = [{'diff': 0.0005912089999999988}, {'diff': 0.0005911949999999992}, {'diff': 0.0005912079999999993}, {'diff': 0.0005912090000000023}, {'diff': 0.0005911939999999997}, {'diff': 0.0005911949999999992}, {...</msg>
<status status="PASS" starttime="20201030 18:28:02.462" endtime="20201030 18:28:02.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.470" level="INFO">${RESULT} = {'diff': [0.0005912089999999988, 0.0005911949999999992, 0.0005912079999999993, 0.0005912090000000023, 0.0005911939999999997, 0.0005911949999999992, 0.0005912219999999989, 0.0005912079999999993, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:28:02.466" endtime="20201030 18:28:02.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.475" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:02.474" endtime="20201030 18:28:02.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.477" level="INFO">VALUE: [0.0005912089999999988, 0.0005911949999999992, 0.0005912079999999993, 0.0005912090000000023, 0.0005911939999999997, 0.0005911949999999992, 0.0005912219999999989, 0.0005912079999999993, 0.0005912229999999984, 0.0005911670000000001, 0.0005911670000000001, 0.0005912079999999993, 0.0005911530000000005, 0.0005912219999999989, 0.0005911939999999997, 0.0005912090000000023, 0.0005912079999999993, 0.0005912090000000023, 0.0005912220000000024, 0.0005912780000000006, 0.0005912640000000011, 0.0005912220000000024, 0.0005912219999999954, 0.0005912220000000024, 0.0005912220000000024, 0.0005912080000000028, 0.0005911950000000027, 0.000591152999999997, 0.0005912080000000028, 0.0005912499999999946, 0.0005912360000000019, 0.0005911659999999971, 0.0005911940000000032, 0.0006189309999999962, 0.0005912090000000023, 0.0005912080000000028, 0.0005912080000000028, 0.0005911799999999967, 0.0005912080000000028, 0.0005911949999999958, 0.0005912780000000006, 0.0005911949999999958, 0.0005911940000000032, 0.0005912219999999954, 0.0005912220000000024, 0.0005912219999999954, 0.0005912090000000023, 0.0005912500000000015, 0.0005911950000000027, 0.0005912079999999958]</msg>
<status status="PASS" starttime="20201030 18:28:02.476" endtime="20201030 18:28:02.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.471" endtime="20201030 18:28:02.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.482" endtime="20201030 18:28:02.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.480" endtime="20201030 18:28:02.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.479" endtime="20201030 18:28:02.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.101" endtime="20201030 18:28:02.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.101" endtime="20201030 18:28:02.502"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.511" endtime="20201030 18:28:02.553"></status>
</kw>
<msg timestamp="20201030 18:28:02.554" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.509" endtime="20201030 18:28:02.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.556" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.555" endtime="20201030 18:28:02.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.557" endtime="20201030 18:28:02.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.507" endtime="20201030 18:28:02.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.505" endtime="20201030 18:28:02.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.566" endtime="20201030 18:28:02.867"></status>
</kw>
<msg timestamp="20201030 18:28:02.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018719806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019347736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.565" endtime="20201030 18:28:02.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018719806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019347736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.871" endtime="20201030 18:28:02.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.879" endtime="20201030 18:28:02.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.562" endtime="20201030 18:28:02.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.561" endtime="20201030 18:28:02.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:02.887" level="INFO">${PHILIP_RES} = [{'diff': 0.0006279300000000022}, {'diff': 0.0006279030000000026}, {'diff': 0.0006279860000000005}, {'diff': 0.0006279580000000014}, {'diff': 0.0006280000000000001}, {'diff': 0.0006280420000000023}, {...</msg>
<status status="PASS" starttime="20201030 18:28:02.884" endtime="20201030 18:28:02.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.890" level="INFO">${RESULT} = {'diff': [0.0006279300000000022, 0.0006279030000000026, 0.0006279860000000005, 0.0006279580000000014, 0.0006280000000000001, 0.0006280420000000023, 0.0006279860000000005, 0.0006280279999999992, 0.0006...</msg>
<status status="PASS" starttime="20201030 18:28:02.887" endtime="20201030 18:28:02.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.895" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:02.894" endtime="20201030 18:28:02.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.897" level="INFO">VALUE: [0.0006279300000000022, 0.0006279030000000026, 0.0006279860000000005, 0.0006279580000000014, 0.0006280000000000001, 0.0006280420000000023, 0.0006279860000000005, 0.0006280279999999992, 0.0006279860000000005, 0.0006279860000000005, 0.000627972000000001, 0.0006280139999999997, 0.0006279439999999983, 0.000627972000000001, 0.0006279860000000005, 0.0006280000000000001, 0.000627985999999997, 0.000627972000000001, 0.0006280000000000001, 0.0006280000000000036, 0.0006280139999999962, 0.0006280000000000036, 0.000627972999999997, 0.0006279719999999975, 0.000627986000000004, 0.0006279719999999975, 0.0006279999999999966, 0.000627986000000004, 0.0006280139999999962, 0.0006279999999999966, 0.0006280140000000031, 0.000627985999999997, 0.0006280000000000036, 0.0006280000000000036, 0.0006279999999999966, 0.0006279590000000043, 0.000627985999999997, 0.000627985999999997, 0.0006280270000000032, 0.000627985999999997, 0.000627985999999997, 0.0006280270000000032, 0.0006280139999999962, 0.000627986000000004, 0.0006280000000000036, 0.0006280139999999962, 0.000627986000000004, 0.000627985999999997, 0.0006279719999999975, 0.0006279720000000044]</msg>
<status status="PASS" starttime="20201030 18:28:02.896" endtime="20201030 18:28:02.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.891" endtime="20201030 18:28:02.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.902" endtime="20201030 18:28:02.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.900" endtime="20201030 18:28:02.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.899" endtime="20201030 18:28:02.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.503" endtime="20201030 18:28:02.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.503" endtime="20201030 18:28:02.923"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.931" endtime="20201030 18:28:02.976"></status>
</kw>
<msg timestamp="20201030 18:28:02.977" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.929" endtime="20201030 18:28:02.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.979" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.978" endtime="20201030 18:28:02.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.980" endtime="20201030 18:28:02.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.927" endtime="20201030 18:28:02.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.925" endtime="20201030 18:28:02.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.990" endtime="20201030 18:28:03.281"></status>
</kw>
<msg timestamp="20201030 18:28:03.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019426153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020091944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.988" endtime="20201030 18:28:03.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019426153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020091944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.286" endtime="20201030 18:28:03.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.294" endtime="20201030 18:28:03.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.986" endtime="20201030 18:28:03.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.984" endtime="20201030 18:28:03.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:03.300" level="INFO">${PHILIP_RES} = [{'diff': 0.0006657909999999989}, {'diff': 0.0006658340000000006}, {'diff': 0.0006658199999999975}, {'diff': 0.0006658610000000002}, {'diff': 0.0006657919999999984}, {'diff': 0.0006658470000000007}, {...</msg>
<status status="PASS" starttime="20201030 18:28:03.297" endtime="20201030 18:28:03.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:03.305" level="INFO">${RESULT} = {'diff': [0.0006657909999999989, 0.0006658340000000006, 0.0006658199999999975, 0.0006658610000000002, 0.0006657919999999984, 0.0006658470000000007, 0.0006658469999999972, 0.0006658480000000001, 0.0006...</msg>
<status status="PASS" starttime="20201030 18:28:03.301" endtime="20201030 18:28:03.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.309" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:03.308" endtime="20201030 18:28:03.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.311" level="INFO">VALUE: [0.0006657909999999989, 0.0006658340000000006, 0.0006658199999999975, 0.0006658610000000002, 0.0006657919999999984, 0.0006658470000000007, 0.0006658469999999972, 0.0006658480000000001, 0.0006658610000000002, 0.0006658470000000007, 0.0006658889999999994, 0.0006658470000000007, 0.0006657639999999992, 0.0006658470000000007, 0.0006658339999999971, 0.0006658470000000007, 0.0006658610000000002, 0.0006658469999999972, 0.0006658470000000041, 0.0006658469999999972, 0.0006658479999999967, 0.0006658750000000033, 0.0006658329999999976, 0.0006658470000000041, 0.0006658470000000041, 0.0006777499999999978, 0.0006658330000000046, 0.0006658609999999968, 0.0006658469999999972, 0.0006658750000000033, 0.0006658479999999967, 0.0006658610000000037, 0.0006658329999999976, 0.0006659030000000024, 0.0006658330000000046, 0.0006658469999999972, 0.0006658609999999968, 0.0006658610000000037, 0.0006658749999999963, 0.0006658330000000046, 0.0006658470000000041, 0.0006658469999999972, 0.0006658610000000037, 0.0006658339999999971, 0.0006658469999999972, 0.0006658330000000046, 0.0006657779999999988, 0.0006658610000000037, 0.0006658470000000041, 0.0006657779999999988]</msg>
<status status="PASS" starttime="20201030 18:28:03.310" endtime="20201030 18:28:03.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.305" endtime="20201030 18:28:03.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:03.317" endtime="20201030 18:28:03.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.316" endtime="20201030 18:28:03.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.315" endtime="20201030 18:28:03.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.924" endtime="20201030 18:28:03.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.923" endtime="20201030 18:28:03.338"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.347" endtime="20201030 18:28:03.393"></status>
</kw>
<msg timestamp="20201030 18:28:03.394" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.345" endtime="20201030 18:28:03.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.396" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.395" endtime="20201030 18:28:03.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.397" endtime="20201030 18:28:03.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.343" endtime="20201030 18:28:03.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.341" endtime="20201030 18:28:03.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.407" endtime="20201030 18:28:03.713"></status>
</kw>
<msg timestamp="20201030 18:28:03.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018985889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019690722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.405" endtime="20201030 18:28:03.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018985889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019690722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.717" endtime="20201030 18:28:03.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.725" endtime="20201030 18:28:03.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.402" endtime="20201030 18:28:03.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.400" endtime="20201030 18:28:03.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:03.732" level="INFO">${PHILIP_RES} = [{'diff': 0.0007048330000000019}, {'diff': 0.0007047779999999997}, {'diff': 0.0007048330000000019}, {'diff': 0.0007047920000000027}, {'diff': 0.0007047500000000005}, {'diff': 0.0007047919999999992}, {...</msg>
<status status="PASS" starttime="20201030 18:28:03.728" endtime="20201030 18:28:03.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:03.737" level="INFO">${RESULT} = {'diff': [0.0007048330000000019, 0.0007047779999999997, 0.0007048330000000019, 0.0007047920000000027, 0.0007047500000000005, 0.0007047919999999992, 0.0007047919999999992, 0.0007047909999999998, 0.0007...</msg>
<status status="PASS" starttime="20201030 18:28:03.733" endtime="20201030 18:28:03.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.741" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:03.740" endtime="20201030 18:28:03.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.744" level="INFO">VALUE: [0.0007048330000000019, 0.0007047779999999997, 0.0007048330000000019, 0.0007047920000000027, 0.0007047500000000005, 0.0007047919999999992, 0.0007047919999999992, 0.0007047909999999998, 0.0007047919999999992, 0.0007047779999999997, 0.0007047909999999998, 0.0007048470000000015, 0.0007047909999999998, 0.0007047909999999998, 0.0007047640000000001, 0.0007047919999999992, 0.0007047360000000044, 0.000704749999999997, 0.0007047780000000031, 0.0007047919999999958, 0.0007047920000000027, 0.0007047779999999962, 0.0007048060000000023, 0.0007047919999999958, 0.0007047639999999966, 0.0007047780000000031, 0.0007047779999999962, 0.0007047780000000031, 0.0007048189999999954, 0.0007047920000000027, 0.0007047779999999962, 0.0007047910000000032, 0.0007048050000000028, 0.0007047769999999967, 0.0007048050000000028, 0.0007047909999999963, 0.0007047780000000031, 0.0007412359999999993, 0.0007047919999999958, 0.0007047920000000027, 0.0007048050000000028, 0.0007048189999999954, 0.0007048050000000028, 0.0007047359999999975, 0.0007047910000000032, 0.0007047909999999963, 0.0007048200000000018, 0.0007048050000000028, 0.0007047780000000031, 0.000704750000000004]</msg>
<status status="PASS" starttime="20201030 18:28:03.742" endtime="20201030 18:28:03.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.738" endtime="20201030 18:28:03.745"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:03.749" endtime="20201030 18:28:03.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.747" endtime="20201030 18:28:03.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.746" endtime="20201030 18:28:03.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.339" endtime="20201030 18:28:03.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.339" endtime="20201030 18:28:03.769"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.778" endtime="20201030 18:28:03.826"></status>
</kw>
<msg timestamp="20201030 18:28:03.826" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.777" endtime="20201030 18:28:03.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.829" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.827" endtime="20201030 18:28:03.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.830" endtime="20201030 18:28:03.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.774" endtime="20201030 18:28:03.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.772" endtime="20201030 18:28:03.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.840" endtime="20201030 18:28:04.127"></status>
</kw>
<msg timestamp="20201030 18:28:04.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019149056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019893819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.838" endtime="20201030 18:28:04.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019149056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019893819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.131" endtime="20201030 18:28:04.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.139" endtime="20201030 18:28:04.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.835" endtime="20201030 18:28:04.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.833" endtime="20201030 18:28:04.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:04.146" level="INFO">${PHILIP_RES} = [{'diff': 0.000744762999999999}, {'diff': 0.0007448050000000012}, {'diff': 0.0007448330000000003}, {'diff': 0.0007448060000000006}, {'diff': 0.0007447919999999976}, {'diff': 0.0007448200000000002}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:04.143" endtime="20201030 18:28:04.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.150" level="INFO">${RESULT} = {'diff': [0.000744762999999999, 0.0007448050000000012, 0.0007448330000000003, 0.0007448060000000006, 0.0007447919999999976, 0.0007448200000000002, 0.0007448200000000002, 0.0007447920000000011, 0.00074...</msg>
<status status="PASS" starttime="20201030 18:28:04.147" endtime="20201030 18:28:04.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.154" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:04.153" endtime="20201030 18:28:04.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.157" level="INFO">VALUE: [0.000744762999999999, 0.0007448050000000012, 0.0007448330000000003, 0.0007448060000000006, 0.0007447919999999976, 0.0007448200000000002, 0.0007448200000000002, 0.0007447920000000011, 0.0007448190000000007, 0.0007448609999999994, 0.0007448330000000003, 0.0007448049999999977, 0.0007448330000000003, 0.0007448049999999977, 0.0007448050000000012, 0.0007448060000000006, 0.0007448339999999998, 0.0007448200000000002, 0.0007447920000000011, 0.0007448200000000002, 0.0007447920000000011, 0.0007448330000000003, 0.0007448190000000007, 0.0007448469999999999, 0.0007448190000000007, 0.0007448050000000012, 0.0007447920000000011, 0.0007448200000000002, 0.0007448200000000002, 0.000771624999999998, 0.0007448050000000012, 0.0007448190000000007, 0.0007448330000000003, 0.0007448060000000006, 0.0007448200000000002, 0.0007448469999999999, 0.0007448200000000002, 0.0007447780000000015, 0.0007448060000000006, 0.0007448190000000007, 0.0007448190000000007, 0.0007448190000000007, 0.0007447909999999947, 0.0007448049999999942, 0.0007448190000000007, 0.0007448049999999942, 0.0007447920000000011, 0.0007448200000000002, 0.0007448200000000002, 0.0007448060000000006]</msg>
<status status="PASS" starttime="20201030 18:28:04.156" endtime="20201030 18:28:04.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.151" endtime="20201030 18:28:04.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.162" endtime="20201030 18:28:04.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.160" endtime="20201030 18:28:04.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.159" endtime="20201030 18:28:04.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.770" endtime="20201030 18:28:04.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.770" endtime="20201030 18:28:04.183"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.191" endtime="20201030 18:28:04.243"></status>
</kw>
<msg timestamp="20201030 18:28:04.243" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.190" endtime="20201030 18:28:04.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.246" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.244" endtime="20201030 18:28:04.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.247" endtime="20201030 18:28:04.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.187" endtime="20201030 18:28:04.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.185" endtime="20201030 18:28:04.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.256" endtime="20201030 18:28:04.543"></status>
</kw>
<msg timestamp="20201030 18:28:04.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02009975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020885611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:04.255" endtime="20201030 18:28:04.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02009975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020885611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:04.548" endtime="20201030 18:28:04.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.556" endtime="20201030 18:28:04.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.252" endtime="20201030 18:28:04.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.250" endtime="20201030 18:28:04.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:04.563" level="INFO">${PHILIP_RES} = [{'diff': 0.0007858609999999988}, {'diff': 0.0007859169999999971}, {'diff': 0.0007859579999999998}, {'diff': 0.0008083750000000001}, {'diff': 0.0007858890000000014}, {'diff': 0.0007859439999999968}, {...</msg>
<status status="PASS" starttime="20201030 18:28:04.560" endtime="20201030 18:28:04.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.567" level="INFO">${RESULT} = {'diff': [0.0007858609999999988, 0.0007859169999999971, 0.0007859579999999998, 0.0008083750000000001, 0.0007858890000000014, 0.0007859439999999968, 0.0007859310000000001, 0.0007859300000000007, 0.0007...</msg>
<status status="PASS" starttime="20201030 18:28:04.564" endtime="20201030 18:28:04.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.571" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:04.570" endtime="20201030 18:28:04.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.574" level="INFO">VALUE: [0.0007858609999999988, 0.0007859169999999971, 0.0007859579999999998, 0.0008083750000000001, 0.0007858890000000014, 0.0007859439999999968, 0.0007859310000000001, 0.0007859300000000007, 0.000785903000000001, 0.0007859160000000011, 0.0007859170000000006, 0.0007858479999999987, 0.0007859449999999997, 0.0007859440000000002, 0.0007859169999999971, 0.0007859310000000036, 0.0007859159999999976, 0.000785917000000004, 0.0007859159999999976, 0.000785917000000004, 0.0007859159999999976, 0.0007859590000000027, 0.0007859439999999968, 0.0007859030000000045, 0.0007859169999999971, 0.0007859310000000036, 0.0007859309999999967, 0.0007859160000000046, 0.0007859169999999971, 0.0007858890000000049, 0.0007859309999999967, 0.000785901999999998, 0.0007859309999999967, 0.0007859159999999976, 0.000785917000000004, 0.0007859169999999971, 0.0007859310000000036, 0.0007859309999999967, 0.0007858609999999988, 0.0007859169999999971, 0.0007859300000000041, 0.0008170829999999962, 0.0007859169999999971, 0.0007859299999999972, 0.000785917000000004, 0.0007859299999999972, 0.0007859310000000036, 0.000785901999999998, 0.000785917000000004, 0.0007859160000000046]</msg>
<status status="PASS" starttime="20201030 18:28:04.573" endtime="20201030 18:28:04.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.568" endtime="20201030 18:28:04.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.582" endtime="20201030 18:28:04.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.581" endtime="20201030 18:28:04.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.580" endtime="20201030 18:28:04.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.184" endtime="20201030 18:28:04.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.183" endtime="20201030 18:28:04.603"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.612" endtime="20201030 18:28:04.665"></status>
</kw>
<msg timestamp="20201030 18:28:04.665" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.610" endtime="20201030 18:28:04.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.668" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.666" endtime="20201030 18:28:04.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.669" endtime="20201030 18:28:04.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.608" endtime="20201030 18:28:04.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.606" endtime="20201030 18:28:04.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.678" endtime="20201030 18:28:04.967"></status>
</kw>
<msg timestamp="20201030 18:28:04.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01909375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:04.676" endtime="20201030 18:28:04.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01909375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:04.972" endtime="20201030 18:28:04.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.980" endtime="20201030 18:28:04.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.674" endtime="20201030 18:28:04.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.672" endtime="20201030 18:28:04.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:04.987" level="INFO">${PHILIP_RES} = [{'diff': 0.0008280830000000003}, {'diff': 0.0008280419999999976}, {'diff': 0.0008281389999999986}, {'diff': 0.0008281109999999994}, {'diff': 0.0008280969999999999}, {'diff': 0.0008281109999999994}, {...</msg>
<status status="PASS" starttime="20201030 18:28:04.984" endtime="20201030 18:28:04.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.992" level="INFO">${RESULT} = {'diff': [0.0008280830000000003, 0.0008280419999999976, 0.0008281389999999986, 0.0008281109999999994, 0.0008280969999999999, 0.0008281109999999994, 0.0008280969999999999, 0.0008281109999999994, 0.0008...</msg>
<status status="PASS" starttime="20201030 18:28:04.988" endtime="20201030 18:28:04.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.996" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:04.995" endtime="20201030 18:28:04.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.999" level="INFO">VALUE: [0.0008280830000000003, 0.0008280419999999976, 0.0008281389999999986, 0.0008281109999999994, 0.0008280969999999999, 0.0008281109999999994, 0.0008280969999999999, 0.0008281109999999994, 0.0008281109999999994, 0.0008281109999999994, 0.0008628049999999977, 0.0008281119999999989, 0.000828124999999999, 0.0008281109999999994, 0.0008281120000000058, 0.0008280830000000003, 0.0008281389999999986, 0.0008280979999999993, 0.0008281109999999994, 0.0008280829999999934, 0.0008281109999999994, 0.000828124999999999, 0.0008281109999999994, 0.000828124999999999, 0.0008281250000000059, 0.000828124999999999, 0.0008280550000000012, 0.000828124999999999, 0.0008280969999999999, 0.0008281119999999989, 0.000828124999999999, 0.0008281109999999994, 0.0008280979999999993, 0.0008280969999999999, 0.0008281109999999994, 0.000828124999999999, 0.0008281529999999981, 0.0008281109999999994, 0.0008281109999999994, 0.000828124999999999, 0.000828124999999999, 0.0008280830000000003, 0.000828124999999999, 0.000828124999999999, 0.0008281119999999989, 0.0008281659999999982, 0.0008281109999999994, 0.0008444449999999992, 0.0008281110000000064, 0.0008280700000000002]</msg>
<status status="PASS" starttime="20201030 18:28:04.997" endtime="20201030 18:28:04.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.993" endtime="20201030 18:28:05.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:05.005" endtime="20201030 18:28:05.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.003" endtime="20201030 18:28:05.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.001" endtime="20201030 18:28:05.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.604" endtime="20201030 18:28:05.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.604" endtime="20201030 18:28:05.026"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.034" endtime="20201030 18:28:05.089"></status>
</kw>
<msg timestamp="20201030 18:28:05.090" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.033" endtime="20201030 18:28:05.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.092" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.091" endtime="20201030 18:28:05.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.094" endtime="20201030 18:28:05.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.030" endtime="20201030 18:28:05.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.028" endtime="20201030 18:28:05.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.103" endtime="20201030 18:28:05.390"></status>
</kw>
<msg timestamp="20201030 18:28:05.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019232264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020103611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.101" endtime="20201030 18:28:05.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019232264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020103611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.395" endtime="20201030 18:28:05.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.403" endtime="20201030 18:28:05.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.098" endtime="20201030 18:28:05.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.097" endtime="20201030 18:28:05.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:05.409" level="INFO">${PHILIP_RES} = [{'diff': 0.0008713470000000015}, {'diff': 0.0008714159999999999}, {'diff': 0.0008713890000000002}, {'diff': 0.0008713889999999967}, {'diff': 0.0008713890000000002}, {'diff': 0.0008713470000000015}, {...</msg>
<status status="PASS" starttime="20201030 18:28:05.406" endtime="20201030 18:28:05.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:05.414" level="INFO">${RESULT} = {'diff': [0.0008713470000000015, 0.0008714159999999999, 0.0008713890000000002, 0.0008713889999999967, 0.0008713890000000002, 0.0008713470000000015, 0.0008714029999999998, 0.0008713750000000006, 0.0008...</msg>
<status status="PASS" starttime="20201030 18:28:05.411" endtime="20201030 18:28:05.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.418" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:05.417" endtime="20201030 18:28:05.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.421" level="INFO">VALUE: [0.0008713470000000015, 0.0008714159999999999, 0.0008713890000000002, 0.0008713889999999967, 0.0008713890000000002, 0.0008713470000000015, 0.0008714029999999998, 0.0008713750000000006, 0.0008714169999999993, 0.0008713890000000002, 0.0008714029999999998, 0.0008714029999999998, 0.0008713890000000002, 0.0009122090000000041, 0.0008714309999999989, 0.0008714020000000003, 0.0008713890000000002, 0.000871443999999999, 0.0008713750000000006, 0.0008713890000000002, 0.0008714029999999998, 0.000871361000000001, 0.0008713889999999933, 0.0008714029999999998, 0.0008713750000000006, 0.000871361000000001, 0.0008713890000000002, 0.0008713890000000002, 0.0008713750000000006, 0.0008713890000000002, 0.000871361000000001, 0.0008714029999999998, 0.0008713469999999945, 0.0008713749999999937, 0.0008713890000000002, 0.0008713890000000002, 0.0008714449999999985, 0.0008713890000000002, 0.0008713750000000006, 0.0008713750000000006, 0.000871361000000001, 0.0008713750000000006, 0.0008713750000000006, 0.0008714029999999998, 0.0008713890000000002, 0.0008713889999999933, 0.0008714030000000067, 0.0008714030000000067, 0.0009052080000000046, 0.0008714020000000072]</msg>
<status status="PASS" starttime="20201030 18:28:05.419" endtime="20201030 18:28:05.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.414" endtime="20201030 18:28:05.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:05.426" endtime="20201030 18:28:05.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.424" endtime="20201030 18:28:05.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.423" endtime="20201030 18:28:05.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.026" endtime="20201030 18:28:05.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.026" endtime="20201030 18:28:05.446"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.455" endtime="20201030 18:28:05.513"></status>
</kw>
<msg timestamp="20201030 18:28:05.514" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.453" endtime="20201030 18:28:05.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.516" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.515" endtime="20201030 18:28:05.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.517" endtime="20201030 18:28:05.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.451" endtime="20201030 18:28:05.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.449" endtime="20201030 18:28:05.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.527" endtime="20201030 18:28:05.834"></status>
</kw>
<msg timestamp="20201030 18:28:05.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020020389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020936097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.525" endtime="20201030 18:28:05.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020020389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020936097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.838" endtime="20201030 18:28:05.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.847" endtime="20201030 18:28:05.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.523" endtime="20201030 18:28:05.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.521" endtime="20201030 18:28:05.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:05.853" level="INFO">${PHILIP_RES} = [{'diff': 0.0009157080000000012}, {'diff': 0.0009157920000000021}, {'diff': 0.0009157360000000003}, {'diff': 0.0009157220000000008}, {'diff': 0.0009158050000000022}, {'diff': 0.0009157499999999999}, {...</msg>
<status status="PASS" starttime="20201030 18:28:05.850" endtime="20201030 18:28:05.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:05.857" level="INFO">${RESULT} = {'diff': [0.0009157080000000012, 0.0009157920000000021, 0.0009157360000000003, 0.0009157220000000008, 0.0009158050000000022, 0.0009157499999999999, 0.0009158189999999983, 0.0009157360000000003, 0.0009...</msg>
<status status="PASS" starttime="20201030 18:28:05.854" endtime="20201030 18:28:05.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.862" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:05.861" endtime="20201030 18:28:05.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.864" level="INFO">VALUE: [0.0009157080000000012, 0.0009157920000000021, 0.0009157360000000003, 0.0009157220000000008, 0.0009158050000000022, 0.0009157499999999999, 0.0009158189999999983, 0.0009157360000000003, 0.0009157499999999999, 0.0009158060000000016, 0.0009158060000000016, 0.000915777999999999, 0.0009157360000000003, 0.0009157499999999999, 0.0009157499999999999, 0.0009157499999999999, 0.0009157220000000008, 0.0009522079999999961, 0.0009157499999999999, 0.0009157080000000012, 0.0009156810000000015, 0.0009158049999999987, 0.0009157360000000003, 0.0009157360000000003, 0.0009157499999999999, 0.0009157369999999998, 0.0009157499999999999, 0.0009157639999999995, 0.0009157639999999995, 0.0009157639999999995, 0.0009157080000000012, 0.000915777999999999, 0.0009157639999999995, 0.0009157639999999995, 0.0009157499999999999, 0.0009157639999999995, 0.0009157369999999998, 0.000915763, 0.0009157639999999995, 0.0009157639999999995, 0.0009157499999999999, 0.0009157360000000003, 0.0009157220000000008, 0.0009157360000000003, 0.0009157360000000003, 0.0009157219999999938, 0.0009157360000000003, 0.000915749999999993, 0.0009157639999999995, 0.0009158050000000056]</msg>
<status status="PASS" starttime="20201030 18:28:05.863" endtime="20201030 18:28:05.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.858" endtime="20201030 18:28:05.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:05.878" endtime="20201030 18:28:05.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.876" endtime="20201030 18:28:05.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.874" endtime="20201030 18:28:05.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.447" endtime="20201030 18:28:05.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.447" endtime="20201030 18:28:05.898"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.907" endtime="20201030 18:28:05.967"></status>
</kw>
<msg timestamp="20201030 18:28:05.967" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.905" endtime="20201030 18:28:05.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.970" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.969" endtime="20201030 18:28:05.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.971" endtime="20201030 18:28:05.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.903" endtime="20201030 18:28:05.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.901" endtime="20201030 18:28:05.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.985" endtime="20201030 18:28:06.274"></status>
</kw>
<msg timestamp="20201030 18:28:06.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019045514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020006694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.983" endtime="20201030 18:28:06.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019045514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020006694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.278" endtime="20201030 18:28:06.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.286" endtime="20201030 18:28:06.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.980" endtime="20201030 18:28:06.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.977" endtime="20201030 18:28:06.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:06.293" level="INFO">${PHILIP_RES} = [{'diff': 0.000961179999999999}, {'diff': 0.0009612639999999999}, {'diff': 0.0009612079999999981}, {'diff': 0.0009611810000000019}, {'diff': 0.0009611950000000015}, {'diff': 0.0009612080000000016}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:06.290" endtime="20201030 18:28:06.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:06.298" level="INFO">${RESULT} = {'diff': [0.000961179999999999, 0.0009612639999999999, 0.0009612079999999981, 0.0009611810000000019, 0.0009611950000000015, 0.0009612080000000016, 0.000961194999999998, 0.000961194999999998, 0.0009611...</msg>
<status status="PASS" starttime="20201030 18:28:06.294" endtime="20201030 18:28:06.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.302" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:06.301" endtime="20201030 18:28:06.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.305" level="INFO">VALUE: [0.000961179999999999, 0.0009612639999999999, 0.0009612079999999981, 0.0009611810000000019, 0.0009611950000000015, 0.0009612080000000016, 0.000961194999999998, 0.000961194999999998, 0.0009611939999999985, 0.000961179999999999, 0.0009611950000000015, 0.000961194000000002, 0.0009612079999999981, 0.000961195000000005, 0.000961179999999999, 0.0009611940000000055, 0.000961194999999998, 0.0009612090000000045, 0.0009611939999999985, 0.0009611529999999993, 0.000961194999999998, 0.0009611809999999985, 0.0009612080000000051, 0.000961194999999998, 0.0009950840000000002, 0.000961194999999998, 0.000961195000000005, 0.000961179999999999, 0.0009611810000000054, 0.0009612089999999976, 0.000961179999999999, 0.0009612219999999977, 0.000961194999999998, 0.0009611940000000055, 0.0009611659999999994, 0.000961195000000005, 0.0009612079999999981, 0.000961179999999999, 0.0009611669999999989, 0.0009612359999999973, 0.0009611800000000059, 0.0009612079999999981, 0.0009612229999999972, 0.000961194999999998, 0.0009611939999999985, 0.000961194999999998, 0.0009611810000000054, 0.0009611939999999985, 0.0009611939999999985, 0.000961194999999998]</msg>
<status status="PASS" starttime="20201030 18:28:06.303" endtime="20201030 18:28:06.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.299" endtime="20201030 18:28:06.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.310" endtime="20201030 18:28:06.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.308" endtime="20201030 18:28:06.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.307" endtime="20201030 18:28:06.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.899" endtime="20201030 18:28:06.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.899" endtime="20201030 18:28:06.331"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.339" endtime="20201030 18:28:06.402"></status>
</kw>
<msg timestamp="20201030 18:28:06.402" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.338" endtime="20201030 18:28:06.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.405" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.403" endtime="20201030 18:28:06.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.406" endtime="20201030 18:28:06.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.335" endtime="20201030 18:28:06.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.333" endtime="20201030 18:28:06.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.415" endtime="20201030 18:28:06.724"></status>
</kw>
<msg timestamp="20201030 18:28:06.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019076222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020083917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.414" endtime="20201030 18:28:06.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019076222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020083917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.729" endtime="20201030 18:28:06.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.737" endtime="20201030 18:28:06.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.411" endtime="20201030 18:28:06.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.409" endtime="20201030 18:28:06.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:06.743" level="INFO">${PHILIP_RES} = [{'diff': 0.0010076949999999994}, {'diff': 0.001007723000000002}, {'diff': 0.0010077780000000008}, {'diff': 0.001007721999999999}, {'diff': 0.0010077359999999987}, {'diff': 0.0010077220000000026}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:06.740" endtime="20201030 18:28:06.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:06.747" level="INFO">${RESULT} = {'diff': [0.0010076949999999994, 0.001007723000000002, 0.0010077780000000008, 0.001007721999999999, 0.0010077359999999987, 0.0010077220000000026, 0.001007708999999999, 0.0010077229999999986, 0.0010076...</msg>
<status status="PASS" starttime="20201030 18:28:06.744" endtime="20201030 18:28:06.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.752" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:06.751" endtime="20201030 18:28:06.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.754" level="INFO">VALUE: [0.0010076949999999994, 0.001007723000000002, 0.0010077780000000008, 0.001007721999999999, 0.0010077359999999987, 0.0010077220000000026, 0.001007708999999999, 0.0010077229999999986, 0.001007694, 0.001007721999999999, 0.001007721999999999, 0.0010076809999999964, 0.001007722999999995, 0.0010077780000000008, 0.0010077360000000021, 0.0010076940000000034, 0.0010077360000000021, 0.0010450280000000034, 0.001007707999999996, 0.0010077219999999956, 0.0010077220000000026, 0.001007723000000002, 0.0010077220000000026, 0.001007695000000003, 0.001007708000000003, 0.001007707999999996, 0.0010077219999999956, 0.0010077089999999955, 0.0010076800000000039, 0.0010077220000000026, 0.0010077360000000021, 0.0010077220000000026, 0.0010076670000000038, 0.001007722999999995, 0.001007707999999996, 0.0010077220000000026, 0.0010077640000000013, 0.0010077090000000025, 0.0010077370000000016, 0.0010077219999999956, 0.0010077500000000017, 0.0010077359999999952, 0.0010077220000000026, 0.0010077500000000017, 0.0010077639999999943, 0.001007736000000009, 0.00100770800000001, 0.001048528000000007, 0.0010077220000000026, 0.0010077220000000026]</msg>
<status status="PASS" starttime="20201030 18:28:06.753" endtime="20201030 18:28:06.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.748" endtime="20201030 18:28:06.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.760" endtime="20201030 18:28:06.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.758" endtime="20201030 18:28:06.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.757" endtime="20201030 18:28:06.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.331" endtime="20201030 18:28:06.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.331" endtime="20201030 18:28:06.780"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.789" endtime="20201030 18:28:06.855"></status>
</kw>
<msg timestamp="20201030 18:28:06.855" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.787" endtime="20201030 18:28:06.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.858" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.856" endtime="20201030 18:28:06.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.859" endtime="20201030 18:28:06.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.785" endtime="20201030 18:28:06.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.783" endtime="20201030 18:28:06.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.868" endtime="20201030 18:28:07.152"></status>
</kw>
<msg timestamp="20201030 18:28:07.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019912806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020968097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.866" endtime="20201030 18:28:07.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019912806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020968097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.157" endtime="20201030 18:28:07.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.165" endtime="20201030 18:28:07.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.864" endtime="20201030 18:28:07.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.862" endtime="20201030 18:28:07.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:07.172" level="INFO">${PHILIP_RES} = [{'diff': 0.0010552909999999999}, {'diff': 0.001055348000000001}, {'diff': 0.0010553610000000012}, {'diff': 0.0010553329999999986}, {'diff': 0.0010553329999999986}, {'diff': 0.0010553049999999994}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:07.168" endtime="20201030 18:28:07.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:07.176" level="INFO">${RESULT} = {'diff': [0.0010552909999999999, 0.001055348000000001, 0.0010553610000000012, 0.0010553329999999986, 0.0010553329999999986, 0.0010553049999999994, 0.0010553329999999986, 0.0010553469999999981, 0.00105...</msg>
<status status="PASS" starttime="20201030 18:28:07.173" endtime="20201030 18:28:07.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.180" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:07.179" endtime="20201030 18:28:07.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.183" level="INFO">VALUE: [0.0010552909999999999, 0.001055348000000001, 0.0010553610000000012, 0.0010553329999999986, 0.0010553329999999986, 0.0010553049999999994, 0.0010553329999999986, 0.0010553469999999981, 0.0010553199999999985, 0.0010553329999999986, 0.0010553329999999986, 0.0010553469999999981, 0.0010553749999999973, 0.0010552779999999998, 0.0010553049999999994, 0.0010554030000000034, 0.001055305999999999, 0.0010553329999999986, 0.001055318999999999, 0.0010553199999999985, 0.0010553330000000055, 0.001055318999999999, 0.001055347000000005, 0.001055333999999998, 0.001081291000000005, 0.0010553479999999976, 0.001055319000000006, 0.0010553329999999986, 0.0010553610000000047, 0.0010553199999999985, 0.0010552640000000002, 0.001055333999999998, 0.0010553479999999976, 0.0010553329999999986, 0.0010553750000000042, 0.001055333999999998, 0.001055305999999999, 0.001055318999999992, 0.0010553049999999925, 0.0010553199999999985, 0.0010553050000000064, 0.0010553049999999925, 0.0010553200000000124, 0.001055334000000005, 0.0010553890000000038, 0.00105538899999999, 0.0010553480000000115, 0.0010553329999999916, 0.0010553469999999981, 0.0010553330000000055]</msg>
<status status="PASS" starttime="20201030 18:28:07.181" endtime="20201030 18:28:07.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.177" endtime="20201030 18:28:07.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:07.189" endtime="20201030 18:28:07.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.187" endtime="20201030 18:28:07.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.186" endtime="20201030 18:28:07.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.781" endtime="20201030 18:28:07.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.781" endtime="20201030 18:28:07.210"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.218" endtime="20201030 18:28:07.286"></status>
</kw>
<msg timestamp="20201030 18:28:07.287" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.217" endtime="20201030 18:28:07.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.293" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.290" endtime="20201030 18:28:07.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.295" endtime="20201030 18:28:07.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.214" endtime="20201030 18:28:07.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.212" endtime="20201030 18:28:07.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.315" endtime="20201030 18:28:07.610"></status>
</kw>
<msg timestamp="20201030 18:28:07.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019081736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020185708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.311" endtime="20201030 18:28:07.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019081736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020185708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.614" endtime="20201030 18:28:07.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.622" endtime="20201030 18:28:07.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.306" endtime="20201030 18:28:07.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.302" endtime="20201030 18:28:07.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:07.629" level="INFO">${PHILIP_RES} = [{'diff': 0.0011039720000000017}, {'diff': 0.0011040000000000008}, {'diff': 0.0011040830000000022}, {'diff': 0.0011040270000000005}, {'diff': 0.0011039719999999982}, {'diff': 0.0011040270000000005}, {...</msg>
<status status="PASS" starttime="20201030 18:28:07.626" endtime="20201030 18:28:07.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:07.634" level="INFO">${RESULT} = {'diff': [0.0011039720000000017, 0.0011040000000000008, 0.0011040830000000022, 0.0011040270000000005, 0.0011039719999999982, 0.0011040270000000005, 0.0011039729999999977, 0.0011040000000000008, 0.0011...</msg>
<status status="PASS" starttime="20201030 18:28:07.630" endtime="20201030 18:28:07.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.638" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:07.637" endtime="20201030 18:28:07.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.641" level="INFO">VALUE: [0.0011039720000000017, 0.0011040000000000008, 0.0011040830000000022, 0.0011040270000000005, 0.0011039719999999982, 0.0011040270000000005, 0.0011039729999999977, 0.0011040000000000008, 0.0011039589999999981, 0.0011040140000000004, 0.0011039999999999973, 0.001104028, 0.0011040140000000004, 0.0011040419999999995, 0.001104028, 0.0011040140000000004, 0.001104041, 0.0011040000000000008, 0.0011040270000000005, 0.001104028, 0.0011040140000000004, 0.0011264440000000042, 0.001104028, 0.0011040000000000008, 0.0011040270000000005, 0.0011040689999999992, 0.001104013000000001, 0.0011040140000000004, 0.0011039859999999943, 0.001104028, 0.0011040140000000004, 0.0011040140000000004, 0.0011040139999999934, 0.001104028, 0.001104028, 0.001104028, 0.0011039719999999947, 0.001104028000000007, 0.0011040269999999935, 0.0011039719999999947, 0.001104013000000001, 0.0011040000000000078, 0.001104013000000001, 0.001104028000000007, 0.0011040000000000078, 0.0011039859999999874, 0.0011040140000000004, 0.001104027999999993, 0.0011448329999999979, 0.0011040000000000078]</msg>
<status status="PASS" starttime="20201030 18:28:07.639" endtime="20201030 18:28:07.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.635" endtime="20201030 18:28:07.642"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:07.646" endtime="20201030 18:28:07.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.644" endtime="20201030 18:28:07.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.643" endtime="20201030 18:28:07.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.211" endtime="20201030 18:28:07.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.210" endtime="20201030 18:28:07.667"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.675" endtime="20201030 18:28:07.746"></status>
</kw>
<msg timestamp="20201030 18:28:07.746" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.674" endtime="20201030 18:28:07.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.748" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.747" endtime="20201030 18:28:07.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.750" endtime="20201030 18:28:07.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.671" endtime="20201030 18:28:07.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.669" endtime="20201030 18:28:07.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.759" endtime="20201030 18:28:08.046"></status>
</kw>
<msg timestamp="20201030 18:28:08.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019297694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020451431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.757" endtime="20201030 18:28:08.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019297694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020451431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.050" endtime="20201030 18:28:08.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.059" endtime="20201030 18:28:08.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.755" endtime="20201030 18:28:08.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.753" endtime="20201030 18:28:08.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:08.066" level="INFO">${PHILIP_RES} = [{'diff': 0.0011537369999999984}, {'diff': 0.0011537920000000007}, {'diff': 0.0011538199999999998}, {'diff': 0.0011538190000000004}, {'diff': 0.001153833}, {'diff': 0.0011538049999999973}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 18:28:08.063" endtime="20201030 18:28:08.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:08.070" level="INFO">${RESULT} = {'diff': [0.0011537369999999984, 0.0011537920000000007, 0.0011538199999999998, 0.0011538190000000004, 0.001153833, 0.0011538049999999973, 0.0011537920000000007, 0.0011537919999999972, 0.00115379200000...</msg>
<status status="PASS" starttime="20201030 18:28:08.067" endtime="20201030 18:28:08.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.074" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:08.073" endtime="20201030 18:28:08.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.077" level="INFO">VALUE: [0.0011537369999999984, 0.0011537920000000007, 0.0011538199999999998, 0.0011538190000000004, 0.001153833, 0.0011538049999999973, 0.0011537920000000007, 0.0011537919999999972, 0.0011537920000000007, 0.0011538050000000008, 0.0011537909999999943, 0.0011537920000000007, 0.0011538749999999987, 0.0011538060000000003, 0.0011538050000000008, 0.0011538190000000004, 0.0011538060000000003, 0.0011537780000000011, 0.001153847999999999, 0.0011537919999999938, 0.0011537770000000017, 0.00119118, 0.0011537359999999955, 0.0011537639999999946, 0.0011537780000000011, 0.0011538190000000004, 0.0011537910000000012, 0.0011537920000000007, 0.0011538060000000003, 0.001153833, 0.0011537770000000017, 0.0011538050000000008, 0.001153750000000002, 0.0011537780000000011, 0.0011537780000000011, 0.0011538049999999939, 0.0011538469999999995, 0.0011538190000000004, 0.0011538059999999933, 0.0011538060000000072, 0.0011538050000000077, 0.0011538050000000077, 0.0011538049999999939, 0.0011538199999999998, 0.0011537920000000007, 0.0011537920000000007, 0.0011538049999999939, 0.0011538049999999939, 0.0011538049999999939, 0.0011537909999999874]</msg>
<status status="PASS" starttime="20201030 18:28:08.075" endtime="20201030 18:28:08.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.071" endtime="20201030 18:28:08.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:08.082" endtime="20201030 18:28:08.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.080" endtime="20201030 18:28:08.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.079" endtime="20201030 18:28:08.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.667" endtime="20201030 18:28:08.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.667" endtime="20201030 18:28:08.103"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.111" endtime="20201030 18:28:08.185"></status>
</kw>
<msg timestamp="20201030 18:28:08.185" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.110" endtime="20201030 18:28:08.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.188" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.186" endtime="20201030 18:28:08.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.189" endtime="20201030 18:28:08.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.107" endtime="20201030 18:28:08.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.105" endtime="20201030 18:28:08.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.198" endtime="20201030 18:28:08.484"></status>
</kw>
<msg timestamp="20201030 18:28:08.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021308681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.197" endtime="20201030 18:28:08.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021308681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.488" endtime="20201030 18:28:08.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.496" endtime="20201030 18:28:08.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.194" endtime="20201030 18:28:08.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.192" endtime="20201030 18:28:08.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:08.503" level="INFO">${PHILIP_RES} = [{'diff': 0.0012046250000000008}, {'diff': 0.001204653}, {'diff': 0.0012046809999999991}, {'diff': 0.001204666}, {'diff': 0.0012046669999999995}, {'diff': 0.0012046390000000004}, {'diff': 0.0012046799...</msg>
<status status="PASS" starttime="20201030 18:28:08.500" endtime="20201030 18:28:08.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:08.507" level="INFO">${RESULT} = {'diff': [0.0012046250000000008, 0.001204653, 0.0012046809999999991, 0.001204666, 0.0012046669999999995, 0.0012046390000000004, 0.0012046799999999996, 0.001204653, 0.0012047360000000014, 0.00120461100...</msg>
<status status="PASS" starttime="20201030 18:28:08.504" endtime="20201030 18:28:08.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.511" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:08.510" endtime="20201030 18:28:08.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.514" level="INFO">VALUE: [0.0012046250000000008, 0.001204653, 0.0012046809999999991, 0.001204666, 0.0012046669999999995, 0.0012046390000000004, 0.0012046799999999996, 0.001204653, 0.0012047360000000014, 0.0012046110000000013, 0.0012046110000000013, 0.0012046799999999996, 0.0012384729999999969, 0.0012045970000000017, 0.0012046669999999995, 0.001204653, 0.0012046799999999996, 0.0012046390000000004, 0.0012045980000000012, 0.0012046809999999991, 0.0012046809999999991, 0.0012046520000000005, 0.001204653, 0.0012046670000000065, 0.001204666, 0.0012046669999999995, 0.0012046669999999995, 0.001204666, 0.001204653, 0.001204653, 0.001204653, 0.0012046669999999995, 0.0012046520000000005, 0.0012046390000000073, 0.0012046389999999935, 0.0012046799999999996, 0.001204653, 0.0012480970000000036, 0.001204653, 0.0012046520000000005, 0.0012046669999999926, 0.001204653, 0.0012046659999999931, 0.001204653, 0.0012045839999999947, 0.001204653, 0.0012046109999999943, 0.0012046520000000005, 0.001204653, 0.0012046390000000073]</msg>
<status status="PASS" starttime="20201030 18:28:08.512" endtime="20201030 18:28:08.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.508" endtime="20201030 18:28:08.518"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:08.522" endtime="20201030 18:28:08.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.521" endtime="20201030 18:28:08.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.519" endtime="20201030 18:28:08.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.104" endtime="20201030 18:28:08.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.103" endtime="20201030 18:28:08.543"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.552" endtime="20201030 18:28:08.627"></status>
</kw>
<msg timestamp="20201030 18:28:08.628" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.550" endtime="20201030 18:28:08.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.630" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.629" endtime="20201030 18:28:08.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.631" endtime="20201030 18:28:08.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.547" endtime="20201030 18:28:08.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.545" endtime="20201030 18:28:08.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.640" endtime="20201030 18:28:08.948"></status>
</kw>
<msg timestamp="20201030 18:28:08.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019202153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020458722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.639" endtime="20201030 18:28:08.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019202153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020458722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.952" endtime="20201030 18:28:08.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.961" endtime="20201030 18:28:08.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.636" endtime="20201030 18:28:08.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.634" endtime="20201030 18:28:08.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:08.967" level="INFO">${PHILIP_RES} = [{'diff': 0.001256568999999999}, {'diff': 0.0012565980000000011}, {'diff': 0.0012565829999999986}, {'diff': 0.0012565840000000016}, {'diff': 0.0012565829999999986}, {'diff': 0.0012566250000000008}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:08.964" endtime="20201030 18:28:08.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:08.972" level="INFO">${RESULT} = {'diff': [0.001256568999999999, 0.0012565980000000011, 0.0012565829999999986, 0.0012565840000000016, 0.0012565829999999986, 0.0012566250000000008, 0.0012566110000000012, 0.001256568999999999, 0.001256...</msg>
<status status="PASS" starttime="20201030 18:28:08.968" endtime="20201030 18:28:08.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.977" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:08.976" endtime="20201030 18:28:08.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.979" level="INFO">VALUE: [0.001256568999999999, 0.0012565980000000011, 0.0012565829999999986, 0.0012565840000000016, 0.0012565829999999986, 0.0012566250000000008, 0.0012566110000000012, 0.001256568999999999, 0.0012565140000000002, 0.0012566390000000038, 0.0012566119999999972, 0.0012566109999999978, 0.0012566110000000047, 0.0012565829999999986, 0.0012566109999999978, 0.001256584000000005, 0.0012566109999999978, 0.0012566109999999978, 0.0012565969999999982, 0.0012566530000000034, 0.0012566109999999978, 0.0012565549999999995, 0.0012566250000000043, 0.0012566249999999973, 0.0012565979999999977, 0.0012566110000000047, 0.001286902999999999, 0.0012566529999999965, 0.0012565980000000046, 0.0012566109999999978, 0.0012566109999999978, 0.0012565830000000056, 0.001256568999999999, 0.0012565700000000124, 0.0012565830000000056, 0.0012565979999999977, 0.001256597000000012, 0.00125663899999999, 0.0012566109999999908, 0.0012566249999999973, 0.0012565969999999982, 0.0012565969999999982, 0.0012565969999999982, 0.0012565969999999982, 0.0012566110000000047, 0.0012565830000000056, 0.0012566110000000047, 0.001256584000000005, 0.0012565549999999925, 0.001256584000000005]</msg>
<status status="PASS" starttime="20201030 18:28:08.978" endtime="20201030 18:28:08.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.973" endtime="20201030 18:28:08.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:08.985" endtime="20201030 18:28:09.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.983" endtime="20201030 18:28:09.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.982" endtime="20201030 18:28:09.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.544" endtime="20201030 18:28:09.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.543" endtime="20201030 18:28:09.005"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.014" endtime="20201030 18:28:09.092"></status>
</kw>
<msg timestamp="20201030 18:28:09.092" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.012" endtime="20201030 18:28:09.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.095" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.093" endtime="20201030 18:28:09.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.096" endtime="20201030 18:28:09.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.010" endtime="20201030 18:28:09.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.008" endtime="20201030 18:28:09.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.105" endtime="20201030 18:28:09.394"></status>
</kw>
<msg timestamp="20201030 18:28:09.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019139431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020449014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.104" endtime="20201030 18:28:09.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019139431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020449014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.399" endtime="20201030 18:28:09.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.407" endtime="20201030 18:28:09.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.101" endtime="20201030 18:28:09.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.099" endtime="20201030 18:28:09.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:09.414" level="INFO">${PHILIP_RES} = [{'diff': 0.001309583000000003}, {'diff': 0.0013095969999999992}, {'diff': 0.0013096249999999983}, {'diff': 0.0013096250000000018}, {'diff': 0.0013096249999999983}, {'diff': 0.0013096380000000019}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:09.410" endtime="20201030 18:28:09.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:09.418" level="INFO">${RESULT} = {'diff': [0.001309583000000003, 0.0013095969999999992, 0.0013096249999999983, 0.0013096250000000018, 0.0013096249999999983, 0.0013096380000000019, 0.0013096110000000022, 0.001309653000000001, 0.001309...</msg>
<status status="PASS" starttime="20201030 18:28:09.415" endtime="20201030 18:28:09.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.422" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:09.421" endtime="20201030 18:28:09.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.425" level="INFO">VALUE: [0.001309583000000003, 0.0013095969999999992, 0.0013096249999999983, 0.0013096250000000018, 0.0013096249999999983, 0.0013096380000000019, 0.0013096110000000022, 0.001309653000000001, 0.0013096389999999979, 0.001309653000000001, 0.0013096390000000013, 0.0013095970000000026, 0.0013096250000000018, 0.0013096249999999948, 0.001309653000000001, 0.001309653000000001, 0.0013096390000000013, 0.0013095689999999965, 0.0013096119999999947, 0.0013096249999999948, 0.0013096520000000014, 0.0013096390000000013, 0.0013566380000000003, 0.0013096250000000018, 0.0013096249999999948, 0.0013096110000000022, 0.0013096110000000022, 0.0013096390000000013, 0.001309653000000001, 0.0013096109999999953, 0.0013096389999999944, 0.0013096249999999948, 0.0013096120000000017, 0.0013096390000000013, 0.0013096390000000013, 0.0013095969999999957, 0.0013096250000000087, 0.0013096249999999948, 0.0013096390000000013, 0.0013096390000000013, 0.0013097219999999993, 0.0013096249999999948, 0.0013096249999999948, 0.0013096390000000013, 0.0013095969999999957, 0.0013096110000000022, 0.001337320000000003, 0.0013096250000000087, 0.0013096389999999875, 0.0013096390000000013]</msg>
<status status="PASS" starttime="20201030 18:28:09.423" endtime="20201030 18:28:09.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.418" endtime="20201030 18:28:09.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.430" endtime="20201030 18:28:09.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.428" endtime="20201030 18:28:09.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.427" endtime="20201030 18:28:09.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.006" endtime="20201030 18:28:09.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.006" endtime="20201030 18:28:09.450"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.459" endtime="20201030 18:28:09.541"></status>
</kw>
<msg timestamp="20201030 18:28:09.541" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.458" endtime="20201030 18:28:09.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.544" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.543" endtime="20201030 18:28:09.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.545" endtime="20201030 18:28:09.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.455" endtime="20201030 18:28:09.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.453" endtime="20201030 18:28:09.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.554" endtime="20201030 18:28:09.861"></status>
</kw>
<msg timestamp="20201030 18:28:09.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019886278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021249958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.553" endtime="20201030 18:28:09.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019886278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021249958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.865" endtime="20201030 18:28:09.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.873" endtime="20201030 18:28:09.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.550" endtime="20201030 18:28:09.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.548" endtime="20201030 18:28:09.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:09.880" level="INFO">${PHILIP_RES} = [{'diff': 0.001363679999999999}, {'diff': 0.0013637360000000008}, {'diff': 0.0013637080000000017}, {'diff': 0.001363749999999997}, {'diff': 0.0013637220000000012}, {'diff': 0.001363764}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201030 18:28:09.876" endtime="20201030 18:28:09.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:09.884" level="INFO">${RESULT} = {'diff': [0.001363679999999999, 0.0013637360000000008, 0.0013637080000000017, 0.001363749999999997, 0.0013637220000000012, 0.001363764, 0.001363764, 0.001363749999999997, 0.0013984309999999986, 0.0013...</msg>
<status status="PASS" starttime="20201030 18:28:09.881" endtime="20201030 18:28:09.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.888" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:09.887" endtime="20201030 18:28:09.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.891" level="INFO">VALUE: [0.001363679999999999, 0.0013637360000000008, 0.0013637080000000017, 0.001363749999999997, 0.0013637220000000012, 0.001363764, 0.001363764, 0.001363749999999997, 0.0013984309999999986, 0.0013637500000000038, 0.0013637500000000038, 0.0013637359999999973, 0.0013637359999999973, 0.0013637359999999973, 0.0013637369999999968, 0.0013638329999999949, 0.0013636529999999994, 0.0013637230000000042, 0.0013637230000000042, 0.001363749999999997, 0.001363749999999997, 0.0013637919999999956, 0.0013637359999999973, 0.0013637500000000038, 0.0013637220000000047, 0.0013637360000000043, 0.0013637079999999982, 0.0013637359999999973, 0.001363679999999999, 0.0013637360000000043, 0.0014124309999999918, 0.001363749999999997, 0.0013637360000000043, 0.001363749999999997, 0.0013637220000000116, 0.0013637360000000043, 0.001363694999999998, 0.0013637359999999904, 0.0013637909999999892, 0.001363749999999997, 0.0013637360000000043, 0.0013637640000000034, 0.0013637500000000108, 0.0013637229999999972, 0.0013637229999999972, 0.0013637359999999904, 0.0013637229999999972, 0.001363749999999997, 0.0013637370000000038, 0.0013637500000000108]</msg>
<status status="PASS" starttime="20201030 18:28:09.889" endtime="20201030 18:28:09.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.885" endtime="20201030 18:28:09.893"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.897" endtime="20201030 18:28:09.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.895" endtime="20201030 18:28:09.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.894" endtime="20201030 18:28:09.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.451" endtime="20201030 18:28:09.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.451" endtime="20201030 18:28:09.917"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.926" endtime="20201030 18:28:10.010"></status>
</kw>
<msg timestamp="20201030 18:28:10.010" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.925" endtime="20201030 18:28:10.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.013" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.011" endtime="20201030 18:28:10.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.014" endtime="20201030 18:28:10.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.922" endtime="20201030 18:28:10.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.920" endtime="20201030 18:28:10.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.023" endtime="20201030 18:28:10.311"></status>
</kw>
<msg timestamp="20201030 18:28:10.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019088514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020507417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.022" endtime="20201030 18:28:10.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019088514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020507417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.315" endtime="20201030 18:28:10.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.323" endtime="20201030 18:28:10.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.019" endtime="20201030 18:28:10.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.017" endtime="20201030 18:28:10.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:10.330" level="INFO">${PHILIP_RES} = [{'diff': 0.0014189029999999991}, {'diff': 0.0014189439999999984}, {'diff': 0.0014190000000000001}, {'diff': 0.0014475140000000004}, {'diff': 0.0014189719999999975}, {'diff': 0.0014189169999999987}, {...</msg>
<status status="PASS" starttime="20201030 18:28:10.327" endtime="20201030 18:28:10.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:10.335" level="INFO">${RESULT} = {'diff': [0.0014189029999999991, 0.0014189439999999984, 0.0014190000000000001, 0.0014475140000000004, 0.0014189719999999975, 0.0014189169999999987, 0.0014189450000000013, 0.001418957999999998, 0.00141...</msg>
<status status="PASS" starttime="20201030 18:28:10.331" endtime="20201030 18:28:10.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.339" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:10.338" endtime="20201030 18:28:10.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.342" level="INFO">VALUE: [0.0014189029999999991, 0.0014189439999999984, 0.0014190000000000001, 0.0014475140000000004, 0.0014189719999999975, 0.0014189169999999987, 0.0014189450000000013, 0.001418957999999998, 0.0014189300000000023, 0.0014189300000000057, 0.0014189449999999978, 0.0014189309999999983, 0.0014189439999999984, 0.0014189440000000053, 0.0014189309999999983, 0.0014189309999999983, 0.0014189300000000057, 0.001418875, 0.0014189309999999983, 0.0014189449999999978, 0.0014189309999999983, 0.0014189299999999988, 0.0014189449999999978, 0.0014189590000000044, 0.0014676250000000002, 0.0014189309999999983, 0.0014189170000000056, 0.0014189299999999988, 0.0014189170000000056, 0.0014188890000000065, 0.0014189309999999983, 0.0014189299999999988, 0.0014189309999999983, 0.0014189450000000048, 0.0014189309999999983, 0.0014189440000000053, 0.0014189439999999914, 0.0014189309999999983, 0.0014189309999999983, 0.0014189170000000056, 0.0014189299999999988, 0.0014189719999999906, 0.0014189029999999991, 0.0014189720000000045, 0.0014189159999999923, 0.0014189299999999988, 0.0014571250000000036, 0.001418875, 0.0014189309999999983, 0.0014189170000000056]</msg>
<status status="PASS" starttime="20201030 18:28:10.340" endtime="20201030 18:28:10.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.336" endtime="20201030 18:28:10.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:10.347" endtime="20201030 18:28:10.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.345" endtime="20201030 18:28:10.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.344" endtime="20201030 18:28:10.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.918" endtime="20201030 18:28:10.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.918" endtime="20201030 18:28:10.368"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.376" endtime="20201030 18:28:10.463"></status>
</kw>
<msg timestamp="20201030 18:28:10.464" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.375" endtime="20201030 18:28:10.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.470" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.467" endtime="20201030 18:28:10.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.472" endtime="20201030 18:28:10.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.372" endtime="20201030 18:28:10.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.370" endtime="20201030 18:28:10.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.492" endtime="20201030 18:28:10.785"></status>
</kw>
<msg timestamp="20201030 18:28:10.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019024083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02049925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:10.489" endtime="20201030 18:28:10.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019024083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02049925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:10.789" endtime="20201030 18:28:10.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.798" endtime="20201030 18:28:10.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.483" endtime="20201030 18:28:10.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.479" endtime="20201030 18:28:10.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:10.804" level="INFO">${PHILIP_RES} = [{'diff': 0.0014751669999999995}, {'diff': 0.0014752360000000013}, {'diff': 0.0014752370000000008}, {'diff': 0.0014752090000000016}, {'diff': 0.0014752089999999982}, {'diff': 0.0014752220000000017}, {...</msg>
<status status="PASS" starttime="20201030 18:28:10.801" endtime="20201030 18:28:10.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:10.809" level="INFO">${RESULT} = {'diff': [0.0014751669999999995, 0.0014752360000000013, 0.0014752370000000008, 0.0014752090000000016, 0.0014752089999999982, 0.0014752220000000017, 0.0014752219999999983, 0.0014752220000000017, 0.0015...</msg>
<status status="PASS" starttime="20201030 18:28:10.805" endtime="20201030 18:28:10.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.813" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:10.812" endtime="20201030 18:28:10.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.816" level="INFO">VALUE: [0.0014751669999999995, 0.0014752360000000013, 0.0014752370000000008, 0.0014752090000000016, 0.0014752089999999982, 0.0014752220000000017, 0.0014752219999999983, 0.0014752220000000017, 0.0015177780000000043, 0.0014752079999999987, 0.0014752219999999983, 0.0014752079999999987, 0.0014752360000000048, 0.0014752500000000043, 0.0014752089999999982, 0.0014752229999999977, 0.0014751390000000003, 0.0014752079999999987, 0.0014752219999999983, 0.0014752079999999987, 0.0014751390000000003, 0.0014752079999999987, 0.0014752909999999966, 0.0014752229999999977, 0.0014752499999999974, 0.0014752079999999987, 0.0014751939999999991, 0.0014752219999999983, 0.0014752079999999917, 0.0015125409999999923, 0.001475194000000013, 0.0014752079999999917, 0.0014752219999999983, 0.0014752219999999983, 0.0014752220000000121, 0.0014752370000000042, 0.0014752779999999965, 0.0014752919999999892, 0.0014751939999999991, 0.001475264000000004, 0.0014752080000000056, 0.0014752079999999917, 0.001475209000000005, 0.001475209000000005, 0.0014751949999999986, 0.0014752089999999912, 0.0014751390000000003, 0.0014752360000000048, 0.0014752219999999983, 0.0014751939999999991]</msg>
<status status="PASS" starttime="20201030 18:28:10.814" endtime="20201030 18:28:10.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.809" endtime="20201030 18:28:10.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:10.821" endtime="20201030 18:28:10.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.819" endtime="20201030 18:28:10.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.818" endtime="20201030 18:28:10.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.369" endtime="20201030 18:28:10.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.368" endtime="20201030 18:28:10.841"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.850" endtime="20201030 18:28:10.940"></status>
</kw>
<msg timestamp="20201030 18:28:10.941" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.848" endtime="20201030 18:28:10.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.944" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.942" endtime="20201030 18:28:10.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.945" endtime="20201030 18:28:10.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.846" endtime="20201030 18:28:10.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.844" endtime="20201030 18:28:10.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.954" endtime="20201030 18:28:11.247"></status>
</kw>
<msg timestamp="20201030 18:28:11.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020107278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021639847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.952" endtime="20201030 18:28:11.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020107278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021639847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.257" endtime="20201030 18:28:11.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.275" endtime="20201030 18:28:11.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.950" endtime="20201030 18:28:11.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.948" endtime="20201030 18:28:11.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:11.289" level="INFO">${PHILIP_RES} = [{'diff': 0.001532569000000001}, {'diff': 0.0015325970000000001}, {'diff': 0.0015325970000000001}, {'diff': 0.0015325689999999975}, {'diff': 0.0015325139999999987}, {'diff': 0.0015326249999999993}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:11.282" endtime="20201030 18:28:11.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:11.299" level="INFO">${RESULT} = {'diff': [0.001532569000000001, 0.0015325970000000001, 0.0015325970000000001, 0.0015325689999999975, 0.0015325139999999987, 0.0015326249999999993, 0.001532554999999998, 0.001532569999999997, 0.0015325...</msg>
<status status="PASS" starttime="20201030 18:28:11.291" endtime="20201030 18:28:11.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.308" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:11.306" endtime="20201030 18:28:11.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.313" level="INFO">VALUE: [0.001532569000000001, 0.0015325970000000001, 0.0015325970000000001, 0.0015325689999999975, 0.0015325139999999987, 0.0015326249999999993, 0.001532554999999998, 0.001532569999999997, 0.0015325689999999975, 0.001532554999999998, 0.0015325839999999966, 0.001532582999999997, 0.001532582999999997, 0.001532569999999997, 0.001532582999999997, 0.0015325690000000045, 0.0015325560000000044, 0.001532583000000004, 0.0015795280000000037, 0.0015325690000000045, 0.0015325690000000045, 0.0015325840000000035, 0.0015325690000000045, 0.001532554999999998, 0.0015325420000000048, 0.0015325689999999975, 0.001532583000000004, 0.0015325840000000035, 0.0015325689999999975, 0.001532583000000004, 0.0015325560000000044, 0.0015325560000000044, 0.0015325550000000049, 0.001532569999999997, 0.0015325560000000044, 0.0015326249999999958, 0.0015325560000000044, 0.0015325700000000109, 0.0015812780000000054, 0.0015325969999999967, 0.0015325969999999967, 0.001532569999999997, 0.0015325560000000044, 0.0015325969999999967, 0.001532569999999997, 0.001532583000000004, 0.0015325550000000049, 0.0015326249999999958, 0.001532569999999997, 0.0015325829999999901]</msg>
<status status="PASS" starttime="20201030 18:28:11.310" endtime="20201030 18:28:11.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.300" endtime="20201030 18:28:11.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:11.389" endtime="20201030 18:28:11.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.388" endtime="20201030 18:28:11.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.387" endtime="20201030 18:28:11.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.842" endtime="20201030 18:28:11.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.842" endtime="20201030 18:28:11.410"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.419" endtime="20201030 18:28:11.512"></status>
</kw>
<msg timestamp="20201030 18:28:11.512" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.417" endtime="20201030 18:28:11.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.515" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.513" endtime="20201030 18:28:11.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.516" endtime="20201030 18:28:11.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.415" endtime="20201030 18:28:11.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.413" endtime="20201030 18:28:11.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.525" endtime="20201030 18:28:11.812"></status>
</kw>
<msg timestamp="20201030 18:28:11.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019191542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020782514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.523" endtime="20201030 18:28:11.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019191542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020782514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.816" endtime="20201030 18:28:11.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.824" endtime="20201030 18:28:11.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.521" endtime="20201030 18:28:11.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.519" endtime="20201030 18:28:11.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:11.831" level="INFO">${PHILIP_RES} = [{'diff': 0.0015909719999999995}, {'diff': 0.0015910279999999978}, {'diff': 0.0015910140000000017}, {'diff': 0.0015909999999999987}, {'diff': 0.0015910279999999978}, {'diff': 0.0015910280000000013}, {...</msg>
<status status="PASS" starttime="20201030 18:28:11.827" endtime="20201030 18:28:11.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:11.836" level="INFO">${RESULT} = {'diff': [0.0015909719999999995, 0.0015910279999999978, 0.0015910140000000017, 0.0015909999999999987, 0.0015910279999999978, 0.0015910280000000013, 0.0015910270000000018, 0.0015910139999999982, 0.0015...</msg>
<status status="PASS" starttime="20201030 18:28:11.832" endtime="20201030 18:28:11.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.840" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:11.839" endtime="20201030 18:28:11.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.843" level="INFO">VALUE: [0.0015909719999999995, 0.0015910279999999978, 0.0015910140000000017, 0.0015909999999999987, 0.0015910279999999978, 0.0015910280000000013, 0.0015910270000000018, 0.0015910139999999982, 0.0015909310000000038, 0.0015910280000000013, 0.0015910280000000013, 0.0016397640000000019, 0.001590972000000003, 0.0015910140000000017, 0.0015910139999999948, 0.0015910000000000021, 0.0015910000000000021, 0.0015910139999999948, 0.0015910280000000013, 0.0015910140000000017, 0.00159107, 0.0015910130000000022, 0.0015910269999999949, 0.0015910140000000017, 0.0015910000000000021, 0.0015910280000000013, 0.0015909579999999895, 0.001591083000000007, 0.001591000000000009, 0.0015910140000000017, 0.0015910270000000087, 0.001614347000000002, 0.0015910279999999943, 0.0015910140000000017, 0.0015910839999999926, 0.0015910140000000017, 0.0015910130000000022, 0.0015910690000000005, 0.0015910269999999949, 0.001591000000000009, 0.0015910140000000017, 0.0015910279999999943, 0.0015909999999999952, 0.0015910140000000017, 0.0015909999999999952, 0.001590971999999996, 0.0015910269999999949, 0.0015910410000000014, 0.0015910279999999943, 0.0015910279999999943]</msg>
<status status="PASS" starttime="20201030 18:28:11.841" endtime="20201030 18:28:11.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.837" endtime="20201030 18:28:11.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:11.848" endtime="20201030 18:28:11.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.846" endtime="20201030 18:28:11.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.845" endtime="20201030 18:28:11.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.411" endtime="20201030 18:28:11.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.410" endtime="20201030 18:28:11.869"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.877" endtime="20201030 18:28:11.973"></status>
</kw>
<msg timestamp="20201030 18:28:11.974" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.876" endtime="20201030 18:28:11.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.976" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.975" endtime="20201030 18:28:11.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.977" endtime="20201030 18:28:11.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.873" endtime="20201030 18:28:11.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.871" endtime="20201030 18:28:11.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.987" endtime="20201030 18:28:12.296"></status>
</kw>
<msg timestamp="20201030 18:28:12.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019077333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020727903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.985" endtime="20201030 18:28:12.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019077333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020727903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.300" endtime="20201030 18:28:12.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.308" endtime="20201030 18:28:12.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.982" endtime="20201030 18:28:12.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.981" endtime="20201030 18:28:12.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:12.315" level="INFO">${PHILIP_RES} = [{'diff': 0.0016505700000000005}, {'diff': 0.0016505280000000018}, {'diff': 0.0016505420000000014}, {'diff': 0.0016505559999999975}, {'diff': 0.0016505689999999976}, {'diff': 0.0016505550000000015}, {...</msg>
<status status="PASS" starttime="20201030 18:28:12.312" endtime="20201030 18:28:12.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:12.319" level="INFO">${RESULT} = {'diff': [0.0016505700000000005, 0.0016505280000000018, 0.0016505420000000014, 0.0016505559999999975, 0.0016505689999999976, 0.0016505550000000015, 0.0016505559999999975, 0.0016505559999999975, 0.0016...</msg>
<status status="PASS" starttime="20201030 18:28:12.316" endtime="20201030 18:28:12.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.323" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:12.322" endtime="20201030 18:28:12.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.326" level="INFO">VALUE: [0.0016505700000000005, 0.0016505280000000018, 0.0016505420000000014, 0.0016505559999999975, 0.0016505689999999976, 0.0016505550000000015, 0.0016505559999999975, 0.0016505559999999975, 0.001650541999999998, 0.001650554999999998, 0.001650554999999998, 0.0016939859999999946, 0.0016505139999999988, 0.001650541999999998, 0.0016504999999999992, 0.0016505279999999983, 0.0016505409999999984, 0.001650472, 0.0016506109999999963, 0.001650541999999998, 0.0016505560000000044, 0.0016505410000000054, 0.0016505410000000054, 0.0016505420000000048, 0.0016505559999999975, 0.0016505279999999983, 0.001650554999999998, 0.0016505140000000057, 0.0016505829999999971, 0.0016505560000000113, 0.0016808479999999987, 0.0016505970000000036, 0.00165056999999999, 0.001650554999999998, 0.001650554999999998, 0.0016505420000000048, 0.0016504999999999992, 0.0016505420000000048, 0.001650554999999998, 0.001650554999999998, 0.0016505279999999983, 0.0016505559999999975, 0.0016505279999999983, 0.001650554999999998, 0.001650459000000007, 0.0016505829999999971, 0.0016505279999999983, 0.0016505410000000054, 0.0017036250000000003, 0.0016505279999999983]</msg>
<status status="PASS" starttime="20201030 18:28:12.324" endtime="20201030 18:28:12.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.320" endtime="20201030 18:28:12.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:12.331" endtime="20201030 18:28:12.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.329" endtime="20201030 18:28:12.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.328" endtime="20201030 18:28:12.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.870" endtime="20201030 18:28:12.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.869" endtime="20201030 18:28:12.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.406" endtime="20201030 18:28:12.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:12.356" endtime="20201030 18:28:12.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.354" endtime="20201030 18:28:12.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.353" endtime="20201030 18:28:12.376"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:50.069" endtime="20201030 18:28:12.376" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:27:24.462" endtime="20201030 18:28:12.386"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.457" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:28:12.466" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:28:13.645" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:28:12.456" endtime="20201030 18:28:13.645"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.648" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:28:13.646" endtime="20201030 18:28:13.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.455" endtime="20201030 18:28:13.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:13.651" endtime="20201030 18:28:13.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.649" endtime="20201030 18:28:13.932"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.946" endtime="20201030 18:28:13.960"></status>
</kw>
<msg timestamp="20201030 18:28:13.960" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201030 18:28:13.944" endtime="20201030 18:28:13.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.963" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201030 18:28:13.961" endtime="20201030 18:28:13.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.966" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:13.964" endtime="20201030 18:28:13.966"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:13.941" endtime="20201030 18:28:13.967"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:13.939" endtime="20201030 18:28:13.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.937" endtime="20201030 18:28:13.968"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:13.972" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:13.971" endtime="20201030 18:28:13.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.969" endtime="20201030 18:28:13.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.937" endtime="20201030 18:28:13.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.936" endtime="20201030 18:28:13.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.975" endtime="20201030 18:28:13.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.935" endtime="20201030 18:28:13.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.978" endtime="20201030 18:28:13.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.933" endtime="20201030 18:28:13.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.453" endtime="20201030 18:28:13.980"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:13.986" endtime="20201030 18:28:14.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.985" endtime="20201030 18:28:14.006"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.019" endtime="20201030 18:28:14.032"></status>
</kw>
<msg timestamp="20201030 18:28:14.033" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.017" endtime="20201030 18:28:14.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.035" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.034" endtime="20201030 18:28:14.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.038" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:14.036" endtime="20201030 18:28:14.039"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:14.015" endtime="20201030 18:28:14.039"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:14.012" endtime="20201030 18:28:14.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.011" endtime="20201030 18:28:14.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:14.044" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:14.043" endtime="20201030 18:28:14.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.041" endtime="20201030 18:28:14.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.010" endtime="20201030 18:28:14.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.010" endtime="20201030 18:28:14.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.046" endtime="20201030 18:28:14.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.008" endtime="20201030 18:28:14.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.007" endtime="20201030 18:28:14.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.983" endtime="20201030 18:28:14.048"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.059" endtime="20201030 18:28:14.074"></status>
</kw>
<msg timestamp="20201030 18:28:14.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.057" endtime="20201030 18:28:14.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.075" endtime="20201030 18:28:14.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.078" endtime="20201030 18:28:14.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.054" endtime="20201030 18:28:14.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.051" endtime="20201030 18:28:14.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.087" endtime="20201030 18:28:14.378"></status>
</kw>
<msg timestamp="20201030 18:28:14.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065684792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065688903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.086" endtime="20201030 18:28:14.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065684792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065688903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.382" endtime="20201030 18:28:14.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.391" endtime="20201030 18:28:14.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.083" endtime="20201030 18:28:14.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.081" endtime="20201030 18:28:14.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:14.398" level="INFO">${RESULT} = [{'diff': 4.111000000001086e-06}, {'diff': 4.083000000001946e-06}, {'diff': 4.693999999999532e-06}, {'diff': 4.111000000001086e-06}, {'diff': 4.6949999999990055e-06}, {'diff': 4.693999999999532e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:28:14.394" endtime="20201030 18:28:14.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:14.402" level="INFO">${ACCURACY} = {'diff': [4.111000000001086e-06, 4.083000000001946e-06, 4.693999999999532e-06, 4.111000000001086e-06, 4.6949999999990055e-06, 4.693999999999532e-06, 4.055999999988402e-06, 4.763000000004847e-06, 4.124...</msg>
<status status="PASS" starttime="20201030 18:28:14.399" endtime="20201030 18:28:14.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.408" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 18:28:14.407" endtime="20201030 18:28:14.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.410" level="INFO">VALUE: [4.111000000001086e-06, 4.083000000001946e-06, 4.693999999999532e-06, 4.111000000001086e-06, 4.6949999999990055e-06, 4.693999999999532e-06, 4.055999999988402e-06, 4.763000000004847e-06, 4.124999999993717e-06, 4.097000000008455e-06, 4.707999999992163e-06, 4.709000000005514e-06, 4.6949999999990055e-06, 4.055999999988402e-06, 4.096999999994577e-06, 4.097000000008455e-06, 4.6810000000063745e-06, 4.7499999999978115e-06, 4.097000000008455e-06, 4.7089999999916365e-06, 4.125000000007595e-06, 4.111000000001086e-06, 4.708000000006041e-06, 4.736999999990776e-06, 4.097000000008455e-06, 4.721999999998672e-06, 4.068999999995437e-06, 4.179999999992523e-06, 4.097000000008455e-06, 4.083000000001946e-06, 4.097999999994051e-06, 4.124999999993717e-06, 4.098000000007929e-06, 4.111000000001086e-06, 4.722999999998145e-06, 4.111000000001086e-06, 4.708000000006041e-06, 4.693999999999532e-06, 4.722999999998145e-06, 4.693999999999532e-06, 4.097999999994051e-06, 4.737000000004654e-06, 4.721999999998672e-06, 4.098000000007929e-06, 4.013999999996631e-06, 4.707999999992163e-06, 4.096999999994577e-06, 4.111000000001086e-06, 4.083000000001946e-06, 4.110999999987208e-06]</msg>
<status status="PASS" starttime="20201030 18:28:14.409" endtime="20201030 18:28:14.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.403" endtime="20201030 18:28:14.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.415" endtime="20201030 18:28:14.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.413" endtime="20201030 18:28:14.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.412" endtime="20201030 18:28:14.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.050" endtime="20201030 18:28:14.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.049" endtime="20201030 18:28:14.435"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.444" endtime="20201030 18:28:14.458"></status>
</kw>
<msg timestamp="20201030 18:28:14.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.442" endtime="20201030 18:28:14.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.459" endtime="20201030 18:28:14.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.462" endtime="20201030 18:28:14.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.440" endtime="20201030 18:28:14.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.438" endtime="20201030 18:28:14.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.471" endtime="20201030 18:28:14.769"></status>
</kw>
<msg timestamp="20201030 18:28:14.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021562292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.469" endtime="20201030 18:28:14.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021562292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.773" endtime="20201030 18:28:14.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.781" endtime="20201030 18:28:14.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.467" endtime="20201030 18:28:14.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.465" endtime="20201030 18:28:14.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:14.788" level="INFO">${RESULT} = [{'diff': 5.305000000000587e-06}, {'diff': 5.374999999998437e-06}, {'diff': 5.319000000000157e-06}, {'diff': 5.8889999999985065e-06}, {'diff': 5.8889999999985065e-06}, {'diff': 5.305000000000587e-06},...</msg>
<status status="PASS" starttime="20201030 18:28:14.785" endtime="20201030 18:28:14.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:14.794" level="INFO">${ACCURACY} = {'diff': [5.305000000000587e-06, 5.374999999998437e-06, 5.319000000000157e-06, 5.8889999999985065e-06, 5.8889999999985065e-06, 5.305000000000587e-06, 5.306000000000061e-06, 5.306000000000061e-06, 5.91...</msg>
<status status="PASS" starttime="20201030 18:28:14.789" endtime="20201030 18:28:14.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.800" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 18:28:14.799" endtime="20201030 18:28:14.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.803" level="INFO">VALUE: [5.305000000000587e-06, 5.374999999998437e-06, 5.319000000000157e-06, 5.8889999999985065e-06, 5.8889999999985065e-06, 5.305000000000587e-06, 5.306000000000061e-06, 5.306000000000061e-06, 5.915999999998173e-06, 5.332999999999727e-06, 5.931000000000686e-06, 5.833000000000227e-06, 5.9029999999980765e-06, 5.874999999998937e-06, 5.917000000001116e-06, 5.902000000002072e-06, 5.306000000000061e-06, 5.305000000000587e-06, 5.3200000000031e-06, 5.304999999997118e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.305000000000587e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.917000000001116e-06, 4.680999999999436e-06, 5.36199999999834e-06, 5.305000000000587e-06, 5.319999999999631e-06, 5.8889999999985065e-06, 5.264000000001351e-06, 5.305000000000587e-06, 4.707999999999102e-06, 5.930999999997216e-06, 5.332999999999727e-06, 5.305000000000587e-06, 5.917000000001116e-06, 5.8889999999985065e-06, 5.304999999997118e-06, 5.332999999999727e-06, 5.292000000000491e-06, 5.917000000001116e-06, 5.917000000001116e-06, 4.6949999999990055e-06, 5.319000000000157e-06, 5.903000000001546e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.319999999999631e-06]</msg>
<status status="PASS" starttime="20201030 18:28:14.802" endtime="20201030 18:28:14.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.796" endtime="20201030 18:28:14.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.807" endtime="20201030 18:28:14.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.806" endtime="20201030 18:28:14.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.805" endtime="20201030 18:28:14.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.436" endtime="20201030 18:28:14.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.435" endtime="20201030 18:28:14.828"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.840" endtime="20201030 18:28:14.855"></status>
</kw>
<msg timestamp="20201030 18:28:14.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.838" endtime="20201030 18:28:14.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.857" endtime="20201030 18:28:14.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.861" endtime="20201030 18:28:14.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.834" endtime="20201030 18:28:14.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.831" endtime="20201030 18:28:14.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.873" endtime="20201030 18:28:15.160"></status>
</kw>
<msg timestamp="20201030 18:28:15.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025952167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025958722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.872" endtime="20201030 18:28:15.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025952167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025958722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.164" endtime="20201030 18:28:15.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.173" endtime="20201030 18:28:15.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.869" endtime="20201030 18:28:15.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.866" endtime="20201030 18:28:15.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:15.180" level="INFO">${RESULT} = [{'diff': 6.554999999998368e-06}, {'diff': 7.125000000000187e-06}, {'diff': 5.917000000001116e-06}, {'diff': 5.901999999998603e-06}, {'diff': 6.514000000002601e-06}, {'diff': 7.125000000000187e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:15.177" endtime="20201030 18:28:15.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:15.184" level="INFO">${ACCURACY} = {'diff': [6.554999999998368e-06, 7.125000000000187e-06, 5.917000000001116e-06, 5.901999999998603e-06, 6.514000000002601e-06, 7.125000000000187e-06, 6.528000000002171e-06, 7.125000000000187e-06, 5.9170...</msg>
<status status="PASS" starttime="20201030 18:28:15.181" endtime="20201030 18:28:15.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.189" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 18:28:15.188" endtime="20201030 18:28:15.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.191" level="INFO">VALUE: [6.554999999998368e-06, 7.125000000000187e-06, 5.917000000001116e-06, 5.901999999998603e-06, 6.514000000002601e-06, 7.125000000000187e-06, 6.528000000002171e-06, 7.125000000000187e-06, 5.917000000001116e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.514000000002601e-06, 6.541000000002267e-06, 6.499999999999562e-06, 6.500000000003031e-06, 6.514000000002601e-06, 6.569000000001407e-06, 6.526999999999228e-06, 6.485999999999992e-06, 6.526999999999228e-06, 5.9029999999980765e-06, 6.485999999999992e-06, 6.513999999999132e-06, 5.930000000001212e-06, 6.541000000002267e-06, 6.5279999999987015e-06, 6.472000000000422e-06, 6.471999999996952e-06, 6.514000000002601e-06, 6.526999999999228e-06, 6.514000000002601e-06, 5.917000000001116e-06, 5.917000000001116e-06, 6.528000000002171e-06, 6.512999999999658e-06, 6.499999999999562e-06, 6.514000000002601e-06, 6.540999999998798e-06, 6.555000000001837e-06, 6.485999999999992e-06, 6.542000000001741e-06, 5.874999999998937e-06, 5.915999999998173e-06, 5.917000000001116e-06, 6.513999999999132e-06, 7.0419999999987715e-06, 6.597000000000547e-06, 5.930000000001212e-06, 6.513999999999132e-06]</msg>
<status status="PASS" starttime="20201030 18:28:15.190" endtime="20201030 18:28:15.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.185" endtime="20201030 18:28:15.192"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:15.197" endtime="20201030 18:28:15.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.194" endtime="20201030 18:28:15.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.193" endtime="20201030 18:28:15.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.829" endtime="20201030 18:28:15.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.828" endtime="20201030 18:28:15.217"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.227" endtime="20201030 18:28:15.242"></status>
</kw>
<msg timestamp="20201030 18:28:15.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.225" endtime="20201030 18:28:15.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.244" endtime="20201030 18:28:15.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.248" endtime="20201030 18:28:15.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.222" endtime="20201030 18:28:15.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.220" endtime="20201030 18:28:15.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.261" endtime="20201030 18:28:15.546"></status>
</kw>
<msg timestamp="20201030 18:28:15.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.258" endtime="20201030 18:28:15.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.551" endtime="20201030 18:28:15.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.559" endtime="20201030 18:28:15.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.255" endtime="20201030 18:28:15.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.252" endtime="20201030 18:28:15.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:15.565" level="INFO">${RESULT} = [{'diff': 7.055000000002337e-06}, {'diff': 7.138999999999757e-06}, {'diff': 7.736000000001242e-06}, {'diff': 7.792000000002991e-06}, {'diff': 7.750000000000812e-06}, {'diff': 7.777999999999952e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:15.562" endtime="20201030 18:28:15.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:15.570" level="INFO">${ACCURACY} = {'diff': [7.055000000002337e-06, 7.138999999999757e-06, 7.736000000001242e-06, 7.792000000002991e-06, 7.750000000000812e-06, 7.777999999999952e-06, 7.721999999998203e-06, 7.721999999998203e-06, 7.1389...</msg>
<status status="PASS" starttime="20201030 18:28:15.566" endtime="20201030 18:28:15.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.574" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 18:28:15.573" endtime="20201030 18:28:15.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.576" level="INFO">VALUE: [7.055000000002337e-06, 7.138999999999757e-06, 7.736000000001242e-06, 7.792000000002991e-06, 7.750000000000812e-06, 7.777999999999952e-06, 7.721999999998203e-06, 7.721999999998203e-06, 7.138999999999757e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.750000000000812e-06, 7.722000000001672e-06, 7.735999999997772e-06, 7.1120000000000905e-06, 7.695000000002006e-06, 7.709000000001576e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.735999999997772e-06, 7.694999999998536e-06, 7.721999999998203e-06, 7.707999999998633e-06, 7.124999999996717e-06, 7.069999999997911e-06, 7.736000000001242e-06, 7.110999999997147e-06, 7.138999999999757e-06, 7.722999999997676e-06, 7.723000000001146e-06, 7.125000000000187e-06, 7.110999999997147e-06, 7.069000000001907e-06, 7.750000000000812e-06, 7.735999999997772e-06, 7.138999999999757e-06, 7.735999999997772e-06, 7.722000000001672e-06, 7.179999999998993e-06, 7.680999999998966e-06, 7.750000000000812e-06, 7.735999999997772e-06, 7.749999999997342e-06, 7.736000000001242e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.750000000000812e-06, 7.805000000003087e-06, 7.125000000000187e-06]</msg>
<status status="PASS" starttime="20201030 18:28:15.575" endtime="20201030 18:28:15.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.570" endtime="20201030 18:28:15.578"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:15.582" endtime="20201030 18:28:15.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.580" endtime="20201030 18:28:15.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.579" endtime="20201030 18:28:15.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.218" endtime="20201030 18:28:15.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.218" endtime="20201030 18:28:15.603"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.611" endtime="20201030 18:28:15.626"></status>
</kw>
<msg timestamp="20201030 18:28:15.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.610" endtime="20201030 18:28:15.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.627" endtime="20201030 18:28:15.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.629" endtime="20201030 18:28:15.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.607" endtime="20201030 18:28:15.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.605" endtime="20201030 18:28:15.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.638" endtime="20201030 18:28:15.925"></status>
</kw>
<msg timestamp="20201030 18:28:15.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021922639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.637" endtime="20201030 18:28:15.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021922639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.929" endtime="20201030 18:28:15.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.937" endtime="20201030 18:28:15.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.634" endtime="20201030 18:28:15.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.633" endtime="20201030 18:28:15.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:15.943" level="INFO">${RESULT} = [{'diff': 8.944999999999786e-06}, {'diff': 8.931000000000217e-06}, {'diff': 8.3340000000022e-06}, {'diff': 7.722000000001672e-06}, {'diff': 8.3340000000022e-06}, {'diff': 8.944999999999786e-06}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:28:15.940" endtime="20201030 18:28:15.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:15.949" level="INFO">${ACCURACY} = {'diff': [8.944999999999786e-06, 8.931000000000217e-06, 8.3340000000022e-06, 7.722000000001672e-06, 8.3340000000022e-06, 8.944999999999786e-06, 8.332999999999258e-06, 8.347000000002297e-06, 8.33399999...</msg>
<status status="PASS" starttime="20201030 18:28:15.944" endtime="20201030 18:28:15.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.953" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 18:28:15.952" endtime="20201030 18:28:15.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.955" level="INFO">VALUE: [8.944999999999786e-06, 8.931000000000217e-06, 8.3340000000022e-06, 7.722000000001672e-06, 8.3340000000022e-06, 8.944999999999786e-06, 8.332999999999258e-06, 8.347000000002297e-06, 8.333999999998731e-06, 8.931000000000217e-06, 8.305999999999591e-06, 7.763000000000908e-06, 7.721999999998203e-06, 8.306000000003061e-06, 7.735999999997772e-06, 8.250000000001312e-06, 9.014000000001632e-06, 8.318999999999688e-06, 8.388999999997537e-06, 7.791000000000048e-06, 8.332999999999258e-06, 8.333999999998731e-06, 8.3340000000022e-06, 8.346999999998828e-06, 8.944999999999786e-06, 8.360999999998397e-06, 8.958999999999356e-06, 8.930000000000743e-06, 7.722999999997676e-06, 7.722999999997676e-06, 8.34800000000177e-06, 8.332999999999258e-06, 8.332999999999258e-06, 8.332999999999258e-06, 8.318999999999688e-06, 8.931000000000217e-06, 7.722000000001672e-06, 8.943999999996843e-06, 8.319999999999161e-06, 8.318999999999688e-06, 8.32000000000263e-06, 8.318999999999688e-06, 8.333000000002727e-06, 8.3340000000022e-06, 8.332999999999258e-06, 8.346999999998828e-06, 8.931000000000217e-06, 8.305000000000118e-06, 8.332999999999258e-06, 8.944000000000313e-06]</msg>
<status status="PASS" starttime="20201030 18:28:15.954" endtime="20201030 18:28:15.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.949" endtime="20201030 18:28:15.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:15.960" endtime="20201030 18:28:15.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.959" endtime="20201030 18:28:15.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.958" endtime="20201030 18:28:15.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.604" endtime="20201030 18:28:15.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.603" endtime="20201030 18:28:15.981"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.989" endtime="20201030 18:28:16.004"></status>
</kw>
<msg timestamp="20201030 18:28:16.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.988" endtime="20201030 18:28:16.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.005" endtime="20201030 18:28:16.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.008" endtime="20201030 18:28:16.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.985" endtime="20201030 18:28:16.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.983" endtime="20201030 18:28:16.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.017" endtime="20201030 18:28:16.304"></status>
</kw>
<msg timestamp="20201030 18:28:16.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021429403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021439528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.015" endtime="20201030 18:28:16.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021429403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021439528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.309" endtime="20201030 18:28:16.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.317" endtime="20201030 18:28:16.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.013" endtime="20201030 18:28:16.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.011" endtime="20201030 18:28:16.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:16.324" level="INFO">${RESULT} = [{'diff': 1.0124999999999718e-05}, {'diff': 1.0153000000002327e-05}, {'diff': 9.556000000000842e-06}, {'diff': 9.542000000001272e-06}, {'diff': 9.527000000002228e-06}, {'diff': 9.541999999997802e-06},...</msg>
<status status="PASS" starttime="20201030 18:28:16.321" endtime="20201030 18:28:16.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:16.328" level="INFO">${ACCURACY} = {'diff': [1.0124999999999718e-05, 1.0153000000002327e-05, 9.556000000000842e-06, 9.542000000001272e-06, 9.527000000002228e-06, 9.541999999997802e-06, 9.542000000001272e-06, 8.931000000000217e-06, 8.91...</msg>
<status status="PASS" starttime="20201030 18:28:16.325" endtime="20201030 18:28:16.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.332" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 18:28:16.331" endtime="20201030 18:28:16.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.335" level="INFO">VALUE: [1.0124999999999718e-05, 1.0153000000002327e-05, 9.556000000000842e-06, 9.542000000001272e-06, 9.527000000002228e-06, 9.541999999997802e-06, 9.542000000001272e-06, 8.931000000000217e-06, 8.916999999997177e-06, 8.874999999998467e-06, 8.944000000000313e-06, 8.931000000000217e-06, 9.542000000001272e-06, 9.540999999998329e-06, 9.541999999997802e-06, 9.597000000000078e-06, 9.542000000001272e-06, 1.0153000000002327e-05, 9.541000000001798e-06, 1.0137999999999814e-05, 9.527999999998232e-06, 8.931000000000217e-06, 9.554999999997899e-06, 9.541999999997802e-06, 9.555000000001368e-06, 8.957999999999883e-06, 9.541999999997802e-06, 1.0152999999998857e-05, 9.583000000000508e-06, 9.527999999998232e-06, 8.931000000000217e-06, 9.528000000001702e-06, 8.957999999999883e-06, 9.542000000001272e-06, 9.583000000000508e-06, 9.541999999997802e-06, 9.540999999998329e-06, 9.541999999997802e-06, 8.944999999999786e-06, 8.929999999997273e-06, 8.944999999999786e-06, 8.958999999999356e-06, 9.527999999998232e-06, 8.986000000002492e-06, 8.930000000000743e-06, 9.528000000001702e-06, 1.0124999999999718e-05, 9.542000000001272e-06, 8.944000000000313e-06, 9.528000000001702e-06]</msg>
<status status="PASS" starttime="20201030 18:28:16.333" endtime="20201030 18:28:16.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.329" endtime="20201030 18:28:16.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:16.347" endtime="20201030 18:28:16.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.345" endtime="20201030 18:28:16.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.344" endtime="20201030 18:28:16.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.982" endtime="20201030 18:28:16.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.981" endtime="20201030 18:28:16.367"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.376" endtime="20201030 18:28:16.391"></status>
</kw>
<msg timestamp="20201030 18:28:16.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.374" endtime="20201030 18:28:16.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.393" endtime="20201030 18:28:16.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.395" endtime="20201030 18:28:16.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.372" endtime="20201030 18:28:16.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.370" endtime="20201030 18:28:16.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.405" endtime="20201030 18:28:16.691"></status>
</kw>
<msg timestamp="20201030 18:28:16.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.404" endtime="20201030 18:28:16.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.696" endtime="20201030 18:28:16.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.704" endtime="20201030 18:28:16.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.401" endtime="20201030 18:28:16.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.399" endtime="20201030 18:28:16.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:16.711" level="INFO">${RESULT} = [{'diff': 1.0138999999999287e-05}, {'diff': 1.0153000000002327e-05}, {'diff': 1.0138000000003283e-05}, {'diff': 1.0750000000000343e-05}, {'diff': 1.0763999999999913e-05}, {'diff': 1.0750000000000343e-...</msg>
<status status="PASS" starttime="20201030 18:28:16.707" endtime="20201030 18:28:16.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:16.715" level="INFO">${ACCURACY} = {'diff': [1.0138999999999287e-05, 1.0153000000002327e-05, 1.0138000000003283e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0138999999999287e-05, 1.0124999999999718e-05...</msg>
<status status="PASS" starttime="20201030 18:28:16.711" endtime="20201030 18:28:16.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.719" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 18:28:16.718" endtime="20201030 18:28:16.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.721" level="INFO">VALUE: [1.0138999999999287e-05, 1.0153000000002327e-05, 1.0138000000003283e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0138999999999287e-05, 1.0124999999999718e-05, 1.0804999999999149e-05, 1.0790999999999579e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0124999999999718e-05, 1.0763999999999913e-05, 1.0138999999999287e-05, 1.0763000000000439e-05, 1.0750000000000343e-05, 1.0152999999998857e-05, 1.0111000000000148e-05, 1.0722000000001203e-05, 1.0152999999998857e-05, 1.0749999999996873e-05, 1.0750000000000343e-05, 1.0735999999997303e-05, 1.0750000000000343e-05, 1.0151999999999384e-05, 1.0804999999999149e-05, 1.0223000000000176e-05, 1.0750000000000343e-05, 1.0193999999998093e-05, 1.0084000000000481e-05, 1.0138999999999287e-05, 1.0750000000000343e-05, 1.0804999999999149e-05, 1.0791999999999052e-05, 1.0763999999999913e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0166999999998427e-05, 1.0750000000000343e-05, 1.0151999999999384e-05, 1.0069000000001438e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0097000000000578e-05]</msg>
<status status="PASS" starttime="20201030 18:28:16.720" endtime="20201030 18:28:16.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.715" endtime="20201030 18:28:16.724"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:16.727" endtime="20201030 18:28:16.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.726" endtime="20201030 18:28:16.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.725" endtime="20201030 18:28:16.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.368" endtime="20201030 18:28:16.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.368" endtime="20201030 18:28:16.748"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.757" endtime="20201030 18:28:16.772"></status>
</kw>
<msg timestamp="20201030 18:28:16.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.755" endtime="20201030 18:28:16.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.773" endtime="20201030 18:28:16.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.776" endtime="20201030 18:28:16.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.752" endtime="20201030 18:28:16.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.750" endtime="20201030 18:28:16.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.785" endtime="20201030 18:28:17.071"></status>
</kw>
<msg timestamp="20201030 18:28:17.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021745333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.783" endtime="20201030 18:28:17.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021745333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.075" endtime="20201030 18:28:17.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.083" endtime="20201030 18:28:17.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.781" endtime="20201030 18:28:17.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.779" endtime="20201030 18:28:17.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.090" level="INFO">${RESULT} = [{'diff': 1.1360999999997928e-05}, {'diff': 1.1944999999999317e-05}, {'diff': 1.1943999999999844e-05}, {'diff': 1.1347000000001828e-05}, {'diff': 1.1346999999998358e-05}, {'diff': 1.1957999999999414e-...</msg>
<status status="PASS" starttime="20201030 18:28:17.086" endtime="20201030 18:28:17.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:17.097" level="INFO">${ACCURACY} = {'diff': [1.1360999999997928e-05, 1.1944999999999317e-05, 1.1943999999999844e-05, 1.1347000000001828e-05, 1.1346999999998358e-05, 1.1957999999999414e-05, 1.1957999999999414e-05, 1.1416999999999677e-05...</msg>
<status status="PASS" starttime="20201030 18:28:17.090" endtime="20201030 18:28:17.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.101" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 18:28:17.100" endtime="20201030 18:28:17.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.104" level="INFO">VALUE: [1.1360999999997928e-05, 1.1944999999999317e-05, 1.1943999999999844e-05, 1.1347000000001828e-05, 1.1346999999998358e-05, 1.1957999999999414e-05, 1.1957999999999414e-05, 1.1416999999999677e-05, 1.0763000000000439e-05, 1.1944999999999317e-05, 1.1957999999999414e-05, 1.1347000000001828e-05, 1.1347999999997832e-05, 1.0736000000000773e-05, 1.1971999999998983e-05, 1.1361000000001398e-05, 1.1291999999999552e-05, 1.1957999999999414e-05, 1.1957999999999414e-05, 1.1347000000001828e-05, 1.1361000000001398e-05, 1.1945000000002787e-05, 1.1973000000001927e-05, 1.1348000000001301e-05, 1.0708000000001633e-05, 1.2000000000001593e-05, 1.0750000000000343e-05, 1.1957999999999414e-05, 1.1361000000001398e-05, 1.1346999999998358e-05, 1.1903000000000608e-05, 1.1347999999997832e-05, 1.0750000000000343e-05, 1.1361000000001398e-05, 1.1971999999998983e-05, 1.1347000000001828e-05, 1.1416999999999677e-05, 1.0750000000000343e-05, 1.1347000000001828e-05, 1.1346999999998358e-05, 1.1389000000000538e-05, 1.2013999999997693e-05, 1.1360999999997928e-05, 1.1361000000001398e-05, 1.1333000000002258e-05, 1.1361000000001398e-05, 1.1361000000001398e-05, 1.1334000000001732e-05, 1.1957999999999414e-05, 1.1361000000001398e-05]</msg>
<status status="PASS" starttime="20201030 18:28:17.102" endtime="20201030 18:28:17.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.098" endtime="20201030 18:28:17.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.109" endtime="20201030 18:28:17.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.107" endtime="20201030 18:28:17.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.106" endtime="20201030 18:28:17.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.749" endtime="20201030 18:28:17.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.748" endtime="20201030 18:28:17.129"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.138" endtime="20201030 18:28:17.153"></status>
</kw>
<msg timestamp="20201030 18:28:17.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.136" endtime="20201030 18:28:17.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.154" endtime="20201030 18:28:17.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.157" endtime="20201030 18:28:17.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.134" endtime="20201030 18:28:17.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.132" endtime="20201030 18:28:17.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.166" endtime="20201030 18:28:17.452"></status>
</kw>
<msg timestamp="20201030 18:28:17.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021611333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.164" endtime="20201030 18:28:17.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021611333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.456" endtime="20201030 18:28:17.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.464" endtime="20201030 18:28:17.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.161" endtime="20201030 18:28:17.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.160" endtime="20201030 18:28:17.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.471" level="INFO">${RESULT} = [{'diff': 1.2556000000000372e-05}, {'diff': 1.2569000000000469e-05}, {'diff': 1.2583999999999512e-05}, {'diff': 1.1915999999997234e-05}, {'diff': 1.2583000000000039e-05}, {'diff': 1.3167000000001428e-...</msg>
<status status="PASS" starttime="20201030 18:28:17.468" endtime="20201030 18:28:17.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:17.475" level="INFO">${ACCURACY} = {'diff': [1.2556000000000372e-05, 1.2569000000000469e-05, 1.2583999999999512e-05, 1.1915999999997234e-05, 1.2583000000000039e-05, 1.3167000000001428e-05, 1.1943999999999844e-05, 1.254099999999786e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:17.472" endtime="20201030 18:28:17.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.479" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 18:28:17.478" endtime="20201030 18:28:17.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.482" level="INFO">VALUE: [1.2556000000000372e-05, 1.2569000000000469e-05, 1.2583999999999512e-05, 1.1915999999997234e-05, 1.2583000000000039e-05, 1.3167000000001428e-05, 1.1943999999999844e-05, 1.254099999999786e-05, 1.1930999999999747e-05, 1.2542000000000803e-05, 1.1958999999998887e-05, 1.2555000000000899e-05, 1.2556000000000372e-05, 1.3235999999999803e-05, 1.1972000000002453e-05, 1.2542000000000803e-05, 1.1944999999999317e-05, 1.1889000000001038e-05, 1.2569000000000469e-05, 1.3152999999998388e-05, 1.2555000000000899e-05, 1.3153000000001858e-05, 1.3152999999998388e-05, 1.2569000000000469e-05, 1.2555000000000899e-05, 1.2569000000000469e-05, 1.3166000000001954e-05, 1.1958999999998887e-05, 1.2555000000000899e-05, 1.2583000000000039e-05, 1.2569999999999942e-05, 1.2569999999999942e-05, 1.3193999999997624e-05, 1.1971999999998983e-05, 1.2542000000000803e-05, 1.2013000000001689e-05, 1.2541000000001329e-05, 1.2556000000000372e-05, 1.2569000000000469e-05, 1.254099999999786e-05, 1.2569000000000469e-05, 1.3138999999998818e-05, 1.2541000000001329e-05, 1.1972000000002453e-05, 1.255499999999743e-05, 1.2556000000000372e-05, 1.2528000000001233e-05, 1.2569999999999942e-05, 1.1958000000002883e-05, 1.2555000000000899e-05]</msg>
<status status="PASS" starttime="20201030 18:28:17.481" endtime="20201030 18:28:17.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.476" endtime="20201030 18:28:17.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.487" endtime="20201030 18:28:17.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.485" endtime="20201030 18:28:17.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.484" endtime="20201030 18:28:17.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.130" endtime="20201030 18:28:17.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.130" endtime="20201030 18:28:17.507"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.516" endtime="20201030 18:28:17.532"></status>
</kw>
<msg timestamp="20201030 18:28:17.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.514" endtime="20201030 18:28:17.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.533" endtime="20201030 18:28:17.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.536" endtime="20201030 18:28:17.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.512" endtime="20201030 18:28:17.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.510" endtime="20201030 18:28:17.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.545" endtime="20201030 18:28:17.838"></status>
</kw>
<msg timestamp="20201030 18:28:17.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022485375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.543" endtime="20201030 18:28:17.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022485375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.843" endtime="20201030 18:28:17.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.853" endtime="20201030 18:28:17.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.541" endtime="20201030 18:28:17.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.539" endtime="20201030 18:28:17.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.862" level="INFO">${RESULT} = [{'diff': 1.3792000000002053e-05}, {'diff': 1.3181000000000997e-05}, {'diff': 1.3166000000001954e-05}, {'diff': 1.3179999999998054e-05}, {'diff': 1.379099999999911e-05}, {'diff': 1.3167000000001428e-0...</msg>
<status status="PASS" starttime="20201030 18:28:17.858" endtime="20201030 18:28:17.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:17.868" level="INFO">${ACCURACY} = {'diff': [1.3792000000002053e-05, 1.3181000000000997e-05, 1.3166000000001954e-05, 1.3179999999998054e-05, 1.379099999999911e-05, 1.3167000000001428e-05, 1.3778000000002483e-05, 1.3153000000001858e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:17.864" endtime="20201030 18:28:17.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.875" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 18:28:17.873" endtime="20201030 18:28:17.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.879" level="INFO">VALUE: [1.3792000000002053e-05, 1.3181000000000997e-05, 1.3166000000001954e-05, 1.3179999999998054e-05, 1.379099999999911e-05, 1.3167000000001428e-05, 1.3778000000002483e-05, 1.3153000000001858e-05, 1.3124999999999248e-05, 1.3167000000001428e-05, 1.377699999999954e-05, 1.3693999999998124e-05, 1.3777999999999013e-05, 1.3167000000001428e-05, 1.3166000000001954e-05, 1.3834000000000762e-05, 1.3181000000000997e-05, 1.3763999999999443e-05, 1.3180000000001524e-05, 1.3166999999997958e-05, 1.3166000000001954e-05, 1.3791999999998583e-05, 1.3722000000000734e-05, 1.3805000000002149e-05, 1.3222999999999707e-05, 1.3792000000002053e-05, 1.3181000000000997e-05, 1.3165999999998484e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.3778000000002483e-05, 1.3110999999999678e-05, 1.3777999999999013e-05, 1.379099999999911e-05, 1.3139000000002288e-05, 1.3167000000001428e-05, 1.3777999999999013e-05, 1.3181000000000997e-05, 1.376299999999997e-05, 1.3110999999999678e-05, 1.3166999999997958e-05, 1.3235999999999803e-05, 1.3165999999998484e-05, 1.3138999999998818e-05, 1.3152999999998388e-05, 1.3763999999999443e-05, 1.3167000000001428e-05, 1.3777999999999013e-05, 1.3167000000001428e-05, 1.3167000000001428e-05]</msg>
<status status="PASS" starttime="20201030 18:28:17.877" endtime="20201030 18:28:17.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.870" endtime="20201030 18:28:17.882"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.888" endtime="20201030 18:28:17.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.885" endtime="20201030 18:28:17.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.884" endtime="20201030 18:28:17.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.508" endtime="20201030 18:28:17.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.508" endtime="20201030 18:28:17.909"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.919" endtime="20201030 18:28:17.935"></status>
</kw>
<msg timestamp="20201030 18:28:17.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.918" endtime="20201030 18:28:17.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.936" endtime="20201030 18:28:17.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.939" endtime="20201030 18:28:17.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.915" endtime="20201030 18:28:17.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.912" endtime="20201030 18:28:17.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.948" endtime="20201030 18:28:18.233"></status>
</kw>
<msg timestamp="20201030 18:28:18.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023569097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023582847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.946" endtime="20201030 18:28:18.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023569097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023582847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.237" endtime="20201030 18:28:18.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.246" endtime="20201030 18:28:18.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.944" endtime="20201030 18:28:18.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.942" endtime="20201030 18:28:18.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:18.252" level="INFO">${RESULT} = [{'diff': 1.3749999999999873e-05}, {'diff': 1.4429999999999304e-05}, {'diff': 1.4361000000000929e-05}, {'diff': 1.4374999999997029e-05}, {'diff': 1.3763999999999443e-05}, {'diff': 1.4389000000000068e-...</msg>
<status status="PASS" starttime="20201030 18:28:18.249" endtime="20201030 18:28:18.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:18.257" level="INFO">${ACCURACY} = {'diff': [1.3749999999999873e-05, 1.4429999999999304e-05, 1.4361000000000929e-05, 1.4374999999997029e-05, 1.3763999999999443e-05, 1.4389000000000068e-05, 1.4389000000000068e-05, 1.5028000000000263e-05...</msg>
<status status="PASS" starttime="20201030 18:28:18.253" endtime="20201030 18:28:18.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.262" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 18:28:18.261" endtime="20201030 18:28:18.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.264" level="INFO">VALUE: [1.3749999999999873e-05, 1.4429999999999304e-05, 1.4361000000000929e-05, 1.4374999999997029e-05, 1.3763999999999443e-05, 1.4389000000000068e-05, 1.4389000000000068e-05, 1.5028000000000263e-05, 1.4971999999998514e-05, 1.3763999999999443e-05, 1.4375000000000498e-05, 1.4416999999999208e-05, 1.4389000000000068e-05, 1.4443999999998874e-05, 1.4987000000001027e-05, 1.3763999999999443e-05, 1.4986000000001554e-05, 1.379099999999911e-05, 1.4957999999998944e-05, 1.4402999999999638e-05, 1.5000000000001124e-05, 1.4361000000000929e-05, 1.4971999999998514e-05, 1.4375000000000498e-05, 1.4361000000000929e-05, 1.4958000000002414e-05, 1.4971999999998514e-05, 1.4389000000000068e-05, 1.4375000000000498e-05, 1.4389000000000068e-05, 1.5041999999999833e-05, 1.4986000000001554e-05, 1.4389000000000068e-05, 1.4375000000000498e-05, 1.4361000000000929e-05, 1.379099999999911e-05, 1.4333999999997793e-05, 1.3749999999999873e-05, 1.4972999999997988e-05, 1.4375000000000498e-05, 1.4985999999998084e-05, 1.4389000000000068e-05, 1.3749999999999873e-05, 1.4347000000001359e-05, 1.3749999999999873e-05, 1.4389000000000068e-05, 1.4375000000000498e-05, 1.379099999999911e-05, 1.4375000000000498e-05, 1.3736000000000304e-05]</msg>
<status status="PASS" starttime="20201030 18:28:18.263" endtime="20201030 18:28:18.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.258" endtime="20201030 18:28:18.266"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:18.269" endtime="20201030 18:28:18.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.268" endtime="20201030 18:28:18.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.266" endtime="20201030 18:28:18.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.911" endtime="20201030 18:28:18.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.910" endtime="20201030 18:28:18.290"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.298" endtime="20201030 18:28:18.313"></status>
</kw>
<msg timestamp="20201030 18:28:18.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.297" endtime="20201030 18:28:18.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.314" endtime="20201030 18:28:18.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.317" endtime="20201030 18:28:18.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.294" endtime="20201030 18:28:18.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.292" endtime="20201030 18:28:18.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.326" endtime="20201030 18:28:18.612"></status>
</kw>
<msg timestamp="20201030 18:28:18.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021668736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021684319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.324" endtime="20201030 18:28:18.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021668736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021684319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.616" endtime="20201030 18:28:18.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.624" endtime="20201030 18:28:18.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.322" endtime="20201030 18:28:18.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.320" endtime="20201030 18:28:18.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:18.631" level="INFO">${RESULT} = [{'diff': 1.558299999999957e-05}, {'diff': 1.558300000000304e-05}, {'diff': 1.565300000000089e-05}, {'diff': 1.559699999999914e-05}, {'diff': 1.559700000000261e-05}, {'diff': 1.5584000000002513e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:18.627" endtime="20201030 18:28:18.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:18.635" level="INFO">${ACCURACY} = {'diff': [1.558299999999957e-05, 1.558300000000304e-05, 1.565300000000089e-05, 1.559699999999914e-05, 1.559700000000261e-05, 1.5584000000002513e-05, 1.5569999999999473e-05, 1.4985999999998084e-05, 1.5...</msg>
<status status="PASS" starttime="20201030 18:28:18.632" endtime="20201030 18:28:18.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.639" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 18:28:18.638" endtime="20201030 18:28:18.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.642" level="INFO">VALUE: [1.558299999999957e-05, 1.558300000000304e-05, 1.565300000000089e-05, 1.559699999999914e-05, 1.559700000000261e-05, 1.5584000000002513e-05, 1.5569999999999473e-05, 1.4985999999998084e-05, 1.559699999999914e-05, 1.558299999999957e-05, 1.559699999999914e-05, 1.6208000000000194e-05, 1.558299999999957e-05, 1.504100000000036e-05, 1.559699999999914e-05, 1.559699999999914e-05, 1.5584000000002513e-05, 1.4972000000001984e-05, 1.555500000000043e-05, 1.5583999999999043e-05, 1.5500000000001624e-05, 1.5584000000002513e-05, 1.6208000000000194e-05, 1.5569e-05, 1.561099999999871e-05, 1.4972999999997988e-05, 1.559699999999914e-05, 1.4985999999998084e-05, 1.5499999999998154e-05, 1.5000000000001124e-05, 1.4985999999998084e-05, 1.4972000000001984e-05, 1.4987000000001027e-05, 1.4986000000001554e-05, 1.4987000000001027e-05, 1.5570000000002943e-05, 1.559699999999914e-05, 1.559699999999914e-05, 1.6208000000000194e-05, 1.565300000000089e-05, 1.5584000000002513e-05, 1.4971999999998514e-05, 1.4987000000001027e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.4986000000001554e-05, 1.559699999999914e-05, 1.5541999999996864e-05, 1.5611999999998183e-05, 1.5584000000002513e-05]</msg>
<status status="PASS" starttime="20201030 18:28:18.640" endtime="20201030 18:28:18.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.636" endtime="20201030 18:28:18.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:18.647" endtime="20201030 18:28:18.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.645" endtime="20201030 18:28:18.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.644" endtime="20201030 18:28:18.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.291" endtime="20201030 18:28:18.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.290" endtime="20201030 18:28:18.669"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.681" endtime="20201030 18:28:18.698"></status>
</kw>
<msg timestamp="20201030 18:28:18.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.679" endtime="20201030 18:28:18.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.700" endtime="20201030 18:28:18.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.702" endtime="20201030 18:28:18.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.675" endtime="20201030 18:28:18.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.672" endtime="20201030 18:28:18.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.711" endtime="20201030 18:28:18.996"></status>
</kw>
<msg timestamp="20201030 18:28:19.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028268292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028284486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.710" endtime="20201030 18:28:19.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028268292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028284486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.001" endtime="20201030 18:28:19.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.009" endtime="20201030 18:28:19.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.707" endtime="20201030 18:28:19.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.705" endtime="20201030 18:28:19.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.016" level="INFO">${RESULT} = [{'diff': 1.6194000000000625e-05}, {'diff': 1.6805999999997684e-05}, {'diff': 1.6805999999997684e-05}, {'diff': 1.611099999999921e-05}, {'diff': 1.6208000000000194e-05}, {'diff': 1.6778000000002014e-0...</msg>
<status status="PASS" starttime="20201030 18:28:19.012" endtime="20201030 18:28:19.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:19.020" level="INFO">${ACCURACY} = {'diff': [1.6194000000000625e-05, 1.6805999999997684e-05, 1.6805999999997684e-05, 1.611099999999921e-05, 1.6208000000000194e-05, 1.6778000000002014e-05, 1.679099999999864e-05, 1.6792000000001583e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:19.017" endtime="20201030 18:28:19.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.024" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 18:28:19.023" endtime="20201030 18:28:19.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.027" level="INFO">VALUE: [1.6194000000000625e-05, 1.6805999999997684e-05, 1.6805999999997684e-05, 1.611099999999921e-05, 1.6208000000000194e-05, 1.6778000000002014e-05, 1.679099999999864e-05, 1.6792000000001583e-05, 1.680500000000168e-05, 1.687499999999953e-05, 1.6806000000001153e-05, 1.6179999999997585e-05, 1.680500000000168e-05, 1.6792000000001583e-05, 1.6792000000001583e-05, 1.6195000000000098e-05, 1.681900000000125e-05, 1.6791999999998114e-05, 1.6180000000001055e-05, 1.6806000000001153e-05, 1.6792000000001583e-05, 1.6805999999997684e-05, 1.6180000000001055e-05, 1.6791999999998114e-05, 1.6181000000000528e-05, 1.615299999999792e-05, 1.6777999999998544e-05, 1.6791999999998114e-05, 1.6792000000001583e-05, 1.6194000000000625e-05, 1.679099999999864e-05, 1.6236000000002804e-05, 1.6194000000000625e-05, 1.6195000000000098e-05, 1.6792000000001583e-05, 1.6806000000001153e-05, 1.6791999999998114e-05, 1.6791999999998114e-05, 1.6735999999999834e-05, 1.6194000000000625e-05, 1.680499999999821e-05, 1.616700000000096e-05, 1.681899999999778e-05, 1.6792000000001583e-05, 1.6763999999998974e-05, 1.6791999999998114e-05, 1.6180000000001055e-05, 1.6195000000000098e-05, 1.6181000000000528e-05, 1.6778000000002014e-05]</msg>
<status status="PASS" starttime="20201030 18:28:19.025" endtime="20201030 18:28:19.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.021" endtime="20201030 18:28:19.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.032" endtime="20201030 18:28:19.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.031" endtime="20201030 18:28:19.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.030" endtime="20201030 18:28:19.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.670" endtime="20201030 18:28:19.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.669" endtime="20201030 18:28:19.053"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.062" endtime="20201030 18:28:19.077"></status>
</kw>
<msg timestamp="20201030 18:28:19.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.060" endtime="20201030 18:28:19.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.078" endtime="20201030 18:28:19.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.081" endtime="20201030 18:28:19.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.058" endtime="20201030 18:28:19.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.056" endtime="20201030 18:28:19.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.090" endtime="20201030 18:28:19.376"></status>
</kw>
<msg timestamp="20201030 18:28:19.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021817111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.088" endtime="20201030 18:28:19.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021817111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.380" endtime="20201030 18:28:19.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.388" endtime="20201030 18:28:19.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.086" endtime="20201030 18:28:19.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.084" endtime="20201030 18:28:19.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.394" level="INFO">${RESULT} = [{'diff': 1.680500000000168e-05}, {'diff': 1.73889999999996e-05}, {'diff': 1.73889999999996e-05}, {'diff': 1.8000000000000654e-05}, {'diff': 1.7999999999997185e-05}, {'diff': 1.679100000000211e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:19.391" endtime="20201030 18:28:19.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:19.399" level="INFO">${ACCURACY} = {'diff': [1.680500000000168e-05, 1.73889999999996e-05, 1.73889999999996e-05, 1.8000000000000654e-05, 1.7999999999997185e-05, 1.679100000000211e-05, 1.7430000000002305e-05, 1.740299999999917e-05, 1.738...</msg>
<status status="PASS" starttime="20201030 18:28:19.395" endtime="20201030 18:28:19.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.404" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 18:28:19.403" endtime="20201030 18:28:19.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.407" level="INFO">VALUE: [1.680500000000168e-05, 1.73889999999996e-05, 1.73889999999996e-05, 1.8000000000000654e-05, 1.7999999999997185e-05, 1.679100000000211e-05, 1.7430000000002305e-05, 1.740299999999917e-05, 1.73889999999996e-05, 1.743099999999831e-05, 1.7458000000001445e-05, 1.73889999999996e-05, 1.8000000000000654e-05, 1.741699999999874e-05, 1.73889999999996e-05, 1.740300000000264e-05, 1.7415999999999265e-05, 1.740300000000264e-05, 1.7401999999999695e-05, 1.7987000000000558e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.7999999999997185e-05, 1.8000000000000654e-05, 1.6791999999998114e-05, 1.740299999999917e-05, 1.6806000000001153e-05, 1.73889999999996e-05, 1.740299999999917e-05, 1.73889999999996e-05, 1.7401999999999695e-05, 1.738900000000307e-05, 1.8000000000000654e-05, 1.740299999999917e-05, 1.737500000000003e-05, 1.73889999999996e-05, 1.73889999999996e-05, 1.740299999999917e-05, 1.7985999999997615e-05, 1.7415999999999265e-05, 1.73889999999996e-05, 1.73889999999996e-05, 1.7929999999999335e-05, 1.740300000000264e-05, 1.734700000000089e-05, 1.8014000000000224e-05, 1.7401999999999695e-05, 1.67629999999995e-05, 1.7416000000002735e-05, 1.684699999999692e-05]</msg>
<status status="PASS" starttime="20201030 18:28:19.405" endtime="20201030 18:28:19.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.400" endtime="20201030 18:28:19.408"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.411" endtime="20201030 18:28:19.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.410" endtime="20201030 18:28:19.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.409" endtime="20201030 18:28:19.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.054" endtime="20201030 18:28:19.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.053" endtime="20201030 18:28:19.432"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.440" endtime="20201030 18:28:19.456"></status>
</kw>
<msg timestamp="20201030 18:28:19.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.439" endtime="20201030 18:28:19.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.457" endtime="20201030 18:28:19.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.459" endtime="20201030 18:28:19.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.436" endtime="20201030 18:28:19.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.434" endtime="20201030 18:28:19.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.468" endtime="20201030 18:28:19.754"></status>
</kw>
<msg timestamp="20201030 18:28:19.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021675944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021694542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.467" endtime="20201030 18:28:19.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021675944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021694542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.760" endtime="20201030 18:28:19.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.770" endtime="20201030 18:28:19.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.464" endtime="20201030 18:28:19.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.463" endtime="20201030 18:28:19.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.779" level="INFO">${RESULT} = [{'diff': 1.8598000000001613e-05}, {'diff': 1.858300000000257e-05}, {'diff': 1.861099999999824e-05}, {'diff': 1.8569999999999004e-05}, {'diff': 1.863900000000085e-05}, {'diff': 1.855499999999996e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:19.775" endtime="20201030 18:28:19.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:19.785" level="INFO">${ACCURACY} = {'diff': [1.8598000000001613e-05, 1.858300000000257e-05, 1.861099999999824e-05, 1.8569999999999004e-05, 1.863900000000085e-05, 1.855499999999996e-05, 1.859699999999867e-05, 1.8000000000000654e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 18:28:19.780" endtime="20201030 18:28:19.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.791" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 18:28:19.789" endtime="20201030 18:28:19.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.795" level="INFO">VALUE: [1.8598000000001613e-05, 1.858300000000257e-05, 1.861099999999824e-05, 1.8569999999999004e-05, 1.863900000000085e-05, 1.855499999999996e-05, 1.859699999999867e-05, 1.8000000000000654e-05, 1.7959000000001418e-05, 1.859699999999867e-05, 1.8000000000000654e-05, 1.862500000000128e-05, 1.861100000000171e-05, 1.8014000000000224e-05, 1.861100000000171e-05, 1.861100000000171e-05, 1.7987000000000558e-05, 1.8000000000000654e-05, 1.861099999999824e-05, 1.8638000000001376e-05, 1.8598000000001613e-05, 1.858300000000257e-05, 1.8583999999998574e-05, 1.8598000000001613e-05, 1.861099999999824e-05, 1.7972000000001515e-05, 1.861100000000171e-05, 1.861099999999824e-05, 1.861100000000171e-05, 1.861100000000171e-05, 1.8014000000000224e-05, 1.861100000000171e-05, 1.8000000000000654e-05, 1.861100000000171e-05, 1.858300000000257e-05, 1.8000000000000654e-05, 1.8597999999998144e-05, 1.859700000000214e-05, 1.861099999999824e-05, 1.9207999999999725e-05, 1.859699999999867e-05, 1.861099999999824e-05, 1.8000000000000654e-05, 1.859699999999867e-05, 1.8000000000000654e-05, 1.855499999999996e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.861100000000171e-05, 1.7986000000001084e-05]</msg>
<status status="PASS" starttime="20201030 18:28:19.793" endtime="20201030 18:28:19.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.786" endtime="20201030 18:28:19.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.800" endtime="20201030 18:28:19.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.799" endtime="20201030 18:28:19.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.797" endtime="20201030 18:28:19.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.433" endtime="20201030 18:28:19.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.432" endtime="20201030 18:28:19.821"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.830" endtime="20201030 18:28:19.846"></status>
</kw>
<msg timestamp="20201030 18:28:19.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.828" endtime="20201030 18:28:19.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.847" endtime="20201030 18:28:19.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.850" endtime="20201030 18:28:19.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.826" endtime="20201030 18:28:19.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.824" endtime="20201030 18:28:19.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.859" endtime="20201030 18:28:20.144"></status>
</kw>
<msg timestamp="20201030 18:28:20.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023316694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023335903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.858" endtime="20201030 18:28:20.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023316694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023335903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.149" endtime="20201030 18:28:20.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.157" endtime="20201030 18:28:20.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.855" endtime="20201030 18:28:20.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.853" endtime="20201030 18:28:20.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:20.164" level="INFO">${RESULT} = [{'diff': 1.920900000000267e-05}, {'diff': 1.9792000000001114e-05}, {'diff': 1.916700000000049e-05}, {'diff': 1.9250000000001904e-05}, {'diff': 1.9221999999999295e-05}, {'diff': 1.9207999999999725e-05...</msg>
<status status="PASS" starttime="20201030 18:28:20.160" endtime="20201030 18:28:20.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:20.168" level="INFO">${ACCURACY} = {'diff': [1.920900000000267e-05, 1.9792000000001114e-05, 1.916700000000049e-05, 1.9250000000001904e-05, 1.9221999999999295e-05, 1.9207999999999725e-05, 1.918100000000006e-05, 1.92089999999992e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 18:28:20.165" endtime="20201030 18:28:20.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.172" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 18:28:20.171" endtime="20201030 18:28:20.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.175" level="INFO">VALUE: [1.920900000000267e-05, 1.9792000000001114e-05, 1.916700000000049e-05, 1.9250000000001904e-05, 1.9221999999999295e-05, 1.9207999999999725e-05, 1.918100000000006e-05, 1.92089999999992e-05, 1.92089999999992e-05, 1.9235999999998865e-05, 1.918100000000006e-05, 1.986099999999949e-05, 1.9207999999999725e-05, 1.92089999999992e-05, 1.980499999999774e-05, 1.9221999999999295e-05, 1.9235999999998865e-05, 1.9223000000002238e-05, 1.9223000000002238e-05, 1.9194000000000155e-05, 1.987499999999906e-05, 1.920900000000267e-05, 1.9207999999999725e-05, 1.986099999999949e-05, 1.92089999999992e-05, 1.92089999999992e-05, 1.919499999999963e-05, 1.919499999999963e-05, 1.9222000000002765e-05, 1.916700000000049e-05, 1.981900000000078e-05, 1.9263999999998005e-05, 1.9806000000000684e-05, 1.9777999999998075e-05, 1.9207999999999725e-05, 1.9806000000000684e-05, 1.9179999999997116e-05, 1.9207999999999725e-05, 1.981900000000078e-05, 1.9806000000000684e-05, 1.9806000000000684e-05, 1.9207999999999725e-05, 1.9207999999999725e-05, 1.9819999999996785e-05, 1.9207999999999725e-05, 1.918100000000006e-05, 1.9764000000001974e-05, 1.9820000000000254e-05, 1.92089999999992e-05, 1.9778000000001544e-05]</msg>
<status status="PASS" starttime="20201030 18:28:20.173" endtime="20201030 18:28:20.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.169" endtime="20201030 18:28:20.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.180" endtime="20201030 18:28:20.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.179" endtime="20201030 18:28:20.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.178" endtime="20201030 18:28:20.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.822" endtime="20201030 18:28:20.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.821" endtime="20201030 18:28:20.201"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.210" endtime="20201030 18:28:20.226"></status>
</kw>
<msg timestamp="20201030 18:28:20.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.208" endtime="20201030 18:28:20.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.227" endtime="20201030 18:28:20.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.229" endtime="20201030 18:28:20.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.206" endtime="20201030 18:28:20.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.204" endtime="20201030 18:28:20.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.238" endtime="20201030 18:28:20.524"></status>
</kw>
<msg timestamp="20201030 18:28:20.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.237" endtime="20201030 18:28:20.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.528" endtime="20201030 18:28:20.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.536" endtime="20201030 18:28:20.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.234" endtime="20201030 18:28:20.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.233" endtime="20201030 18:28:20.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:20.543" level="INFO">${RESULT} = [{'diff': 1.9806000000000684e-05}, {'diff': 2.041700000000174e-05}, {'diff': 2.041700000000174e-05}, {'diff': 2.0415999999998796e-05}, {'diff': 2.044500000000088e-05}, {'diff': 1.9833999999999824e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:20.540" endtime="20201030 18:28:20.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:20.550" level="INFO">${ACCURACY} = {'diff': [1.9806000000000684e-05, 2.041700000000174e-05, 2.041700000000174e-05, 2.0415999999998796e-05, 2.044500000000088e-05, 1.9833999999999824e-05, 2.102699999999985e-05, 2.037499999999956e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 18:28:20.544" endtime="20201030 18:28:20.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.555" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 18:28:20.554" endtime="20201030 18:28:20.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.557" level="INFO">VALUE: [1.9806000000000684e-05, 2.041700000000174e-05, 2.041700000000174e-05, 2.0415999999998796e-05, 2.044500000000088e-05, 1.9833999999999824e-05, 2.102699999999985e-05, 2.037499999999956e-05, 2.04029999999987e-05, 2.04029999999987e-05, 2.0416000000002266e-05, 2.043100000000131e-05, 2.041699999999827e-05, 2.0472000000000545e-05, 1.987499999999906e-05, 2.1013999999999755e-05, 2.041700000000174e-05, 2.04029999999987e-05, 1.9764000000001974e-05, 2.0401999999999226e-05, 2.0430000000001836e-05, 2.041699999999827e-05, 1.986099999999949e-05, 2.041700000000174e-05, 2.1027999999999325e-05, 2.0387999999999656e-05, 2.041699999999827e-05, 1.9820000000000254e-05, 2.044499999999741e-05, 2.041700000000174e-05, 2.0986000000000615e-05, 2.041700000000174e-05, 1.9820000000000254e-05, 2.101300000000028e-05, 2.1013999999999755e-05, 2.037499999999956e-05, 2.044500000000088e-05, 1.9778000000001544e-05, 1.9805999999997215e-05, 1.9806000000000684e-05, 1.9820000000000254e-05, 1.983300000000035e-05, 2.0401999999999226e-05, 2.0444000000001405e-05, 1.9791999999997645e-05, 2.0458000000000975e-05, 2.0415999999998796e-05, 2.0458000000000975e-05, 2.04029999999987e-05, 2.1027999999999325e-05]</msg>
<status status="PASS" starttime="20201030 18:28:20.556" endtime="20201030 18:28:20.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.551" endtime="20201030 18:28:20.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.562" endtime="20201030 18:28:20.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.561" endtime="20201030 18:28:20.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.560" endtime="20201030 18:28:20.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.202" endtime="20201030 18:28:20.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.201" endtime="20201030 18:28:20.583"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.591" endtime="20201030 18:28:20.607"></status>
</kw>
<msg timestamp="20201030 18:28:20.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.590" endtime="20201030 18:28:20.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.608" endtime="20201030 18:28:20.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.611" endtime="20201030 18:28:20.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.587" endtime="20201030 18:28:20.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.585" endtime="20201030 18:28:20.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.620" endtime="20201030 18:28:20.906"></status>
</kw>
<msg timestamp="20201030 18:28:20.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036167, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:20.618" endtime="20201030 18:28:20.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036167, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:20.910" endtime="20201030 18:28:20.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.919" endtime="20201030 18:28:20.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.616" endtime="20201030 18:28:20.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.614" endtime="20201030 18:28:20.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:20.925" level="INFO">${RESULT} = [{'diff': 2.166699999999952e-05}, {'diff': 2.165299999999995e-05}, {'diff': 2.162500000000081e-05}, {'diff': 2.1013999999999755e-05}, {'diff': 2.162499999999734e-05}, {'diff': 2.1013999999999755e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:20.922" endtime="20201030 18:28:20.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:20.929" level="INFO">${ACCURACY} = {'diff': [2.166699999999952e-05, 2.165299999999995e-05, 2.162500000000081e-05, 2.1013999999999755e-05, 2.162499999999734e-05, 2.1013999999999755e-05, 2.1013999999999755e-05, 2.162500000000081e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 18:28:20.926" endtime="20201030 18:28:20.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.934" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 18:28:20.932" endtime="20201030 18:28:20.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.936" level="INFO">VALUE: [2.166699999999952e-05, 2.165299999999995e-05, 2.162500000000081e-05, 2.1013999999999755e-05, 2.162499999999734e-05, 2.1013999999999755e-05, 2.1013999999999755e-05, 2.162500000000081e-05, 2.1652000000000476e-05, 2.1000000000000185e-05, 2.17229999999978e-05, 2.0986000000000615e-05, 2.102699999999985e-05, 2.1013999999999755e-05, 2.1584000000001574e-05, 2.101300000000028e-05, 2.1013999999999755e-05, 2.102699999999985e-05, 2.163900000000038e-05, 2.163900000000038e-05, 2.163900000000038e-05, 2.1041999999998895e-05, 2.1013999999999755e-05, 2.1013999999999755e-05, 2.1042000000002364e-05, 2.0972000000001045e-05, 2.15969999999982e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.163899999999691e-05, 2.163900000000038e-05, 2.097300000000052e-05, 2.163900000000038e-05, 2.1000000000000185e-05, 2.163899999999691e-05, 2.162500000000081e-05, 2.1027999999999325e-05, 2.1638000000000907e-05, 2.1027999999999325e-05, 2.1013999999999755e-05, 2.162500000000081e-05, 2.163900000000038e-05, 2.162499999999734e-05, 2.162500000000081e-05, 2.163900000000038e-05, 2.163900000000038e-05, 2.1708000000002226e-05, 2.1652000000000476e-05, 2.1013999999999755e-05, 2.163900000000038e-05]</msg>
<status status="PASS" starttime="20201030 18:28:20.935" endtime="20201030 18:28:20.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.930" endtime="20201030 18:28:20.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.941" endtime="20201030 18:28:20.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.939" endtime="20201030 18:28:20.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.938" endtime="20201030 18:28:20.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.584" endtime="20201030 18:28:20.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.583" endtime="20201030 18:28:20.961"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.970" endtime="20201030 18:28:20.986"></status>
</kw>
<msg timestamp="20201030 18:28:20.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.968" endtime="20201030 18:28:20.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.988" endtime="20201030 18:28:20.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.990" endtime="20201030 18:28:20.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.966" endtime="20201030 18:28:20.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.964" endtime="20201030 18:28:20.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.999" endtime="20201030 18:28:21.286"></status>
</kw>
<msg timestamp="20201030 18:28:21.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022617139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.997" endtime="20201030 18:28:21.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022617139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.291" endtime="20201030 18:28:21.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.299" endtime="20201030 18:28:21.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.995" endtime="20201030 18:28:21.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.993" endtime="20201030 18:28:21.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:21.306" level="INFO">${RESULT} = [{'diff': 2.2250000000001435e-05}, {'diff': 2.2208000000002726e-05}, {'diff': 2.2236000000001865e-05}, {'diff': 2.2207999999999256e-05}, {'diff': 2.284699999999945e-05}, {'diff': 2.22090000000022e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:21.302" endtime="20201030 18:28:21.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:21.310" level="INFO">${ACCURACY} = {'diff': [2.2250000000001435e-05, 2.2208000000002726e-05, 2.2236000000001865e-05, 2.2207999999999256e-05, 2.284699999999945e-05, 2.22090000000022e-05, 2.284700000000292e-05, 2.2819999999999785e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:21.307" endtime="20201030 18:28:21.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.314" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 18:28:21.313" endtime="20201030 18:28:21.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.317" level="INFO">VALUE: [2.2250000000001435e-05, 2.2208000000002726e-05, 2.2236000000001865e-05, 2.2207999999999256e-05, 2.284699999999945e-05, 2.22090000000022e-05, 2.284700000000292e-05, 2.2819999999999785e-05, 2.2221999999998826e-05, 2.2222000000002295e-05, 2.284699999999945e-05, 2.2236000000001865e-05, 2.22090000000022e-05, 2.2833999999999355e-05, 2.2207999999999256e-05, 2.2847999999998925e-05, 2.2833999999999355e-05, 2.2847999999998925e-05, 2.281900000000031e-05, 2.2207999999999256e-05, 2.287500000000206e-05, 2.2833999999999355e-05, 2.2221999999998826e-05, 2.2222000000002295e-05, 2.288900000000163e-05, 2.2819999999999785e-05, 2.2235999999998396e-05, 2.2235999999998396e-05, 2.2221999999998826e-05, 2.2236000000001865e-05, 2.2235999999998396e-05, 2.284699999999945e-05, 2.283299999999988e-05, 2.284699999999945e-05, 2.2208000000002726e-05, 2.2235999999998396e-05, 2.2249999999997966e-05, 2.215299999999698e-05, 2.2235999999998396e-05, 2.223699999999787e-05, 2.2292000000000145e-05, 2.2208000000002726e-05, 2.2235999999998396e-05, 2.284699999999945e-05, 2.2236000000001865e-05, 2.2249999999997966e-05, 2.283299999999988e-05, 2.2235999999998396e-05, 2.2250000000001435e-05, 2.283299999999988e-05]</msg>
<status status="PASS" starttime="20201030 18:28:21.315" endtime="20201030 18:28:21.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.311" endtime="20201030 18:28:21.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:21.322" endtime="20201030 18:28:21.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.321" endtime="20201030 18:28:21.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.320" endtime="20201030 18:28:21.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.962" endtime="20201030 18:28:21.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.962" endtime="20201030 18:28:21.343"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.352" endtime="20201030 18:28:21.368"></status>
</kw>
<msg timestamp="20201030 18:28:21.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.350" endtime="20201030 18:28:21.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.370" endtime="20201030 18:28:21.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.372" endtime="20201030 18:28:21.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.348" endtime="20201030 18:28:21.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.346" endtime="20201030 18:28:21.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.381" endtime="20201030 18:28:21.667"></status>
</kw>
<msg timestamp="20201030 18:28:21.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021978111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022001556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.379" endtime="20201030 18:28:21.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021978111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022001556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.671" endtime="20201030 18:28:21.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.679" endtime="20201030 18:28:21.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.377" endtime="20201030 18:28:21.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.375" endtime="20201030 18:28:21.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:21.686" level="INFO">${RESULT} = [{'diff': 2.344499999999694e-05}, {'diff': 2.2848000000002394e-05}, {'diff': 2.284699999999945e-05}, {'diff': 2.4041999999998426e-05}, {'diff': 2.344500000000041e-05}, {'diff': 2.345899999999998e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:21.683" endtime="20201030 18:28:21.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:21.691" level="INFO">${ACCURACY} = {'diff': [2.344499999999694e-05, 2.2848000000002394e-05, 2.284699999999945e-05, 2.4041999999998426e-05, 2.344500000000041e-05, 2.345899999999998e-05, 2.345899999999998e-05, 2.3444000000000936e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 18:28:21.687" endtime="20201030 18:28:21.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.695" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 18:28:21.694" endtime="20201030 18:28:21.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.698" level="INFO">VALUE: [2.344499999999694e-05, 2.2848000000002394e-05, 2.284699999999945e-05, 2.4041999999998426e-05, 2.344500000000041e-05, 2.345899999999998e-05, 2.345899999999998e-05, 2.3444000000000936e-05, 2.343099999999737e-05, 2.412499999999984e-05, 2.345899999999998e-05, 2.345899999999998e-05, 2.283300000000335e-05, 2.405500000000199e-05, 2.344500000000041e-05, 2.283299999999988e-05, 2.4041999999998426e-05, 2.283300000000335e-05, 2.281900000000031e-05, 2.3513999999998786e-05, 2.3443999999997467e-05, 2.3444000000000936e-05, 2.343100000000084e-05, 2.3430000000001366e-05, 2.3458000000000506e-05, 2.344499999999694e-05, 2.4041999999998426e-05, 2.338899999999866e-05, 2.2819999999999785e-05, 2.343100000000084e-05, 2.343100000000084e-05, 2.3388000000002657e-05, 2.2834000000002824e-05, 2.344500000000041e-05, 2.3415999999998327e-05, 2.3458000000000506e-05, 2.4040999999998952e-05, 2.3458000000000506e-05, 2.344499999999694e-05, 2.4041999999998426e-05, 2.345899999999998e-05, 2.343099999999737e-05, 2.283299999999988e-05, 2.3444000000000936e-05, 2.341700000000127e-05, 2.284699999999945e-05, 2.2819999999999785e-05, 2.283300000000335e-05, 2.2847999999998925e-05, 2.3444000000000936e-05]</msg>
<status status="PASS" starttime="20201030 18:28:21.696" endtime="20201030 18:28:21.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.692" endtime="20201030 18:28:21.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:21.706" endtime="20201030 18:28:21.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.705" endtime="20201030 18:28:21.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.704" endtime="20201030 18:28:21.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.344" endtime="20201030 18:28:21.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.344" endtime="20201030 18:28:21.727"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.736" endtime="20201030 18:28:21.752"></status>
</kw>
<msg timestamp="20201030 18:28:21.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.734" endtime="20201030 18:28:21.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.754" endtime="20201030 18:28:21.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.756" endtime="20201030 18:28:21.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.731" endtime="20201030 18:28:21.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.729" endtime="20201030 18:28:21.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.765" endtime="20201030 18:28:22.051"></status>
</kw>
<msg timestamp="20201030 18:28:22.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.763" endtime="20201030 18:28:22.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.056" endtime="20201030 18:28:22.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.064" endtime="20201030 18:28:22.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.761" endtime="20201030 18:28:22.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.759" endtime="20201030 18:28:22.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:22.071" level="INFO">${RESULT} = [{'diff': 2.4652000000000007e-05}, {'diff': 2.4693999999998717e-05}, {'diff': 2.4056000000001465e-05}, {'diff': 2.465299999999948e-05}, {'diff': 2.465299999999948e-05}, {'diff': 2.465299999999948e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:22.067" endtime="20201030 18:28:22.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:22.075" level="INFO">${ACCURACY} = {'diff': [2.4652000000000007e-05, 2.4693999999998717e-05, 2.4056000000001465e-05, 2.465299999999948e-05, 2.465299999999948e-05, 2.465299999999948e-05, 2.4040999999998952e-05, 2.4708000000001756e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:22.072" endtime="20201030 18:28:22.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.079" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 18:28:22.078" endtime="20201030 18:28:22.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.081" level="INFO">VALUE: [2.4652000000000007e-05, 2.4693999999998717e-05, 2.4056000000001465e-05, 2.465299999999948e-05, 2.465299999999948e-05, 2.465299999999948e-05, 2.4040999999998952e-05, 2.4708000000001756e-05, 2.4583999999997636e-05, 2.4040999999998952e-05, 2.462500000000034e-05, 2.4055999999997996e-05, 2.4652000000000007e-05, 2.463899999999991e-05, 2.465299999999948e-05, 2.4040999999998952e-05, 2.463899999999991e-05, 2.4042000000001895e-05, 2.45970000000012e-05, 2.466699999999905e-05, 2.4027999999998856e-05, 2.4040999999998952e-05, 2.465299999999948e-05, 2.462500000000034e-05, 2.465299999999948e-05, 2.4055999999997996e-05, 2.466699999999905e-05, 2.465299999999948e-05, 2.406900000000156e-05, 2.465299999999948e-05, 2.4054999999998522e-05, 2.4638000000000437e-05, 2.4666000000003047e-05, 2.4652000000000007e-05, 2.3972000000000576e-05, 2.4041999999998426e-05, 2.463899999999991e-05, 2.465300000000295e-05, 2.463899999999991e-05, 2.4055999999997996e-05, 2.461100000000077e-05, 2.465299999999948e-05, 2.463899999999991e-05, 2.4041999999998426e-05, 2.4082999999997662e-05, 2.463899999999991e-05, 2.465299999999948e-05, 2.466699999999905e-05, 2.4042000000001895e-05, 2.463899999999991e-05]</msg>
<status status="PASS" starttime="20201030 18:28:22.080" endtime="20201030 18:28:22.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.076" endtime="20201030 18:28:22.083"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:22.086" endtime="20201030 18:28:22.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.085" endtime="20201030 18:28:22.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.084" endtime="20201030 18:28:22.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.728" endtime="20201030 18:28:22.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.727" endtime="20201030 18:28:22.107"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.116" endtime="20201030 18:28:22.133"></status>
</kw>
<msg timestamp="20201030 18:28:22.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.114" endtime="20201030 18:28:22.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.134" endtime="20201030 18:28:22.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.137" endtime="20201030 18:28:22.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.112" endtime="20201030 18:28:22.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.110" endtime="20201030 18:28:22.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.146" endtime="20201030 18:28:22.431"></status>
</kw>
<msg timestamp="20201030 18:28:22.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022907333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022932625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.144" endtime="20201030 18:28:22.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022907333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022932625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.435" endtime="20201030 18:28:22.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.444" endtime="20201030 18:28:22.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.141" endtime="20201030 18:28:22.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.140" endtime="20201030 18:28:22.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:22.450" level="INFO">${RESULT} = [{'diff': 2.5292000000003145e-05}, {'diff': 2.5236000000001396e-05}, {'diff': 2.5848000000001925e-05}, {'diff': 2.5832999999999412e-05}, {'diff': 2.5306000000002715e-05}, {'diff': 2.5819999999999316e-...</msg>
<status status="PASS" starttime="20201030 18:28:22.447" endtime="20201030 18:28:22.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:22.454" level="INFO">${ACCURACY} = {'diff': [2.5292000000003145e-05, 2.5236000000001396e-05, 2.5848000000001925e-05, 2.5832999999999412e-05, 2.5306000000002715e-05, 2.5819999999999316e-05, 2.5250000000000966e-05, 2.5250000000000966e-05...</msg>
<status status="PASS" starttime="20201030 18:28:22.451" endtime="20201030 18:28:22.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.459" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 18:28:22.458" endtime="20201030 18:28:22.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.461" level="INFO">VALUE: [2.5292000000003145e-05, 2.5236000000001396e-05, 2.5848000000001925e-05, 2.5832999999999412e-05, 2.5306000000002715e-05, 2.5819999999999316e-05, 2.5250000000000966e-05, 2.5250000000000966e-05, 2.59170000000003e-05, 2.5250000000000966e-05, 2.5319999999998816e-05, 2.5264000000000536e-05, 2.5236000000001396e-05, 2.5250000000000966e-05, 2.5263999999997067e-05, 2.5846999999998982e-05, 2.5291999999999676e-05, 2.5250000000000966e-05, 2.5263000000001062e-05, 2.5250000000000966e-05, 2.5236000000001396e-05, 2.5236000000001396e-05, 2.5277000000000632e-05, 2.5832999999999412e-05, 2.586100000000202e-05, 2.5264000000000536e-05, 2.5915999999997358e-05, 2.587500000000159e-05, 2.5318999999999342e-05, 2.5249999999997497e-05, 2.5263000000001062e-05, 2.5249999999997497e-05, 2.5250000000000966e-05, 2.587500000000159e-05, 2.5250000000000966e-05, 2.5263000000001062e-05, 2.5278000000000106e-05, 2.5860999999998552e-05, 2.5250000000000966e-05, 2.5249999999997497e-05, 2.5236000000001396e-05, 2.5860999999998552e-05, 2.5250000000000966e-05, 2.5250000000000966e-05, 2.5264000000000536e-05, 2.52369999999974e-05, 2.5278000000000106e-05, 2.5846999999998982e-05, 2.520899999999826e-05, 2.587500000000159e-05]</msg>
<status status="PASS" starttime="20201030 18:28:22.460" endtime="20201030 18:28:22.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.455" endtime="20201030 18:28:22.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:22.467" endtime="20201030 18:28:22.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.465" endtime="20201030 18:28:22.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.464" endtime="20201030 18:28:22.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.108" endtime="20201030 18:28:22.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.107" endtime="20201030 18:28:22.487"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.496" endtime="20201030 18:28:22.511"></status>
</kw>
<msg timestamp="20201030 18:28:22.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.494" endtime="20201030 18:28:22.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.513" endtime="20201030 18:28:22.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.515" endtime="20201030 18:28:22.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.492" endtime="20201030 18:28:22.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.490" endtime="20201030 18:28:22.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.524" endtime="20201030 18:28:22.810"></status>
</kw>
<msg timestamp="20201030 18:28:22.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.523" endtime="20201030 18:28:22.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.814" endtime="20201030 18:28:22.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.823" endtime="20201030 18:28:22.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.520" endtime="20201030 18:28:22.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.518" endtime="20201030 18:28:22.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:22.829" level="INFO">${RESULT} = [{'diff': 2.7028000000001856e-05}, {'diff': 2.5805999999999746e-05}, {'diff': 2.6444000000000467e-05}, {'diff': 2.6514000000001786e-05}, {'diff': 2.647299999999908e-05}, {'diff': 2.5846999999998982e-0...</msg>
<status status="PASS" starttime="20201030 18:28:22.826" endtime="20201030 18:28:22.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:22.834" level="INFO">${ACCURACY} = {'diff': [2.7028000000001856e-05, 2.5805999999999746e-05, 2.6444000000000467e-05, 2.6514000000001786e-05, 2.647299999999908e-05, 2.5846999999998982e-05, 2.6430000000000897e-05, 2.584700000000245e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:22.830" endtime="20201030 18:28:22.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.838" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 18:28:22.837" endtime="20201030 18:28:22.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.841" level="INFO">VALUE: [2.7028000000001856e-05, 2.5805999999999746e-05, 2.6444000000000467e-05, 2.6514000000001786e-05, 2.647299999999908e-05, 2.5846999999998982e-05, 2.6430000000000897e-05, 2.584700000000245e-05, 2.6458000000000037e-05, 2.5916000000000827e-05, 2.6471999999999607e-05, 2.7056000000000996e-05, 2.7013999999998817e-05, 2.7068999999997623e-05, 2.7069000000001092e-05, 2.7110999999999802e-05, 2.6458000000000037e-05, 2.6528000000001356e-05, 2.7055999999997526e-05, 2.5860999999998552e-05, 2.6471999999999607e-05, 2.586100000000202e-05, 2.7070000000000566e-05, 2.647300000000255e-05, 2.6471999999999607e-05, 2.6444000000000467e-05, 2.5860999999998552e-05, 2.7068999999997623e-05, 2.6500000000002216e-05, 2.6512999999998843e-05, 2.584700000000245e-05, 2.6458000000000037e-05, 2.7097000000000232e-05, 2.586100000000202e-05, 2.5860999999998552e-05, 2.7056000000000996e-05, 2.645899999999951e-05, 2.586100000000202e-05, 2.7069000000001092e-05, 2.645900000000298e-05, 2.7056000000000996e-05, 2.5874999999998122e-05, 2.6458000000000037e-05, 2.7070000000000566e-05, 2.6458000000000037e-05, 2.64170000000008e-05, 2.7070000000000566e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.6458000000000037e-05]</msg>
<status status="PASS" starttime="20201030 18:28:22.839" endtime="20201030 18:28:22.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.835" endtime="20201030 18:28:22.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:22.846" endtime="20201030 18:28:22.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.844" endtime="20201030 18:28:22.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.843" endtime="20201030 18:28:22.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.488" endtime="20201030 18:28:22.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.488" endtime="20201030 18:28:22.866"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.875" endtime="20201030 18:28:22.891"></status>
</kw>
<msg timestamp="20201030 18:28:22.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.873" endtime="20201030 18:28:22.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.892" endtime="20201030 18:28:22.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.895" endtime="20201030 18:28:22.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.871" endtime="20201030 18:28:22.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.869" endtime="20201030 18:28:22.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.904" endtime="20201030 18:28:23.191"></status>
</kw>
<msg timestamp="20201030 18:28:23.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:22.902" endtime="20201030 18:28:23.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:23.196" endtime="20201030 18:28:23.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.204" endtime="20201030 18:28:23.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.900" endtime="20201030 18:28:23.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.898" endtime="20201030 18:28:23.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.210" level="INFO">${RESULT} = [{'diff': 2.768100000000162e-05}, {'diff': 2.7084000000000136e-05}, {'diff': 2.7055000000001522e-05}, {'diff': 2.7069000000001092e-05}, {'diff': 2.768099999999815e-05}, {'diff': 2.768099999999815e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:23.207" endtime="20201030 18:28:23.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:23.215" level="INFO">${ACCURACY} = {'diff': [2.768100000000162e-05, 2.7084000000000136e-05, 2.7055000000001522e-05, 2.7069000000001092e-05, 2.768099999999815e-05, 2.768099999999815e-05, 2.7055000000001522e-05, 2.7679999999998678e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:23.211" endtime="20201030 18:28:23.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.219" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 18:28:23.218" endtime="20201030 18:28:23.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.221" level="INFO">VALUE: [2.768100000000162e-05, 2.7084000000000136e-05, 2.7055000000001522e-05, 2.7069000000001092e-05, 2.768099999999815e-05, 2.768099999999815e-05, 2.7055000000001522e-05, 2.7679999999998678e-05, 2.765300000000248e-05, 2.7652000000003008e-05, 2.7028000000001856e-05, 2.766699999999858e-05, 2.768100000000162e-05, 2.7068999999997623e-05, 2.7679999999998678e-05, 2.7638999999999442e-05, 2.7666000000002577e-05, 2.766699999999858e-05, 2.7068999999997623e-05, 2.7068999999997623e-05, 2.7082999999997193e-05, 2.7679999999998678e-05, 2.766699999999858e-05, 2.769499999999772e-05, 2.7070000000000566e-05, 2.7666000000002577e-05, 2.7069000000001092e-05, 2.766700000000205e-05, 2.7652999999999012e-05, 2.7068999999997623e-05, 2.7070000000000566e-05, 2.7666000000002577e-05, 2.7055000000001522e-05, 2.7666000000002577e-05, 2.766699999999858e-05, 2.7069000000001092e-05, 2.766699999999858e-05, 2.7070000000000566e-05, 2.7708000000001287e-05, 2.766700000000205e-05, 2.768099999999815e-05, 2.7068999999997623e-05, 2.7666000000002577e-05, 2.770900000000076e-05, 2.7083000000000662e-05, 2.7665999999999108e-05, 2.7083000000000662e-05, 2.7693999999998248e-05, 2.7652999999999012e-05, 2.7084000000000136e-05]</msg>
<status status="PASS" starttime="20201030 18:28:23.220" endtime="20201030 18:28:23.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.215" endtime="20201030 18:28:23.223"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.226" endtime="20201030 18:28:23.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.225" endtime="20201030 18:28:23.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.224" endtime="20201030 18:28:23.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.867" endtime="20201030 18:28:23.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.867" endtime="20201030 18:28:23.247"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.255" endtime="20201030 18:28:23.272"></status>
</kw>
<msg timestamp="20201030 18:28:23.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.254" endtime="20201030 18:28:23.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.273" endtime="20201030 18:28:23.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.276" endtime="20201030 18:28:23.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.251" endtime="20201030 18:28:23.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.249" endtime="20201030 18:28:23.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.285" endtime="20201030 18:28:23.570"></status>
</kw>
<msg timestamp="20201030 18:28:23.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02265325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022681528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:23.284" endtime="20201030 18:28:23.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02265325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022681528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:23.574" endtime="20201030 18:28:23.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.582" endtime="20201030 18:28:23.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.281" endtime="20201030 18:28:23.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.279" endtime="20201030 18:28:23.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.589" level="INFO">${RESULT} = [{'diff': 2.8277999999999637e-05}, {'diff': 2.8264000000000067e-05}, {'diff': 2.8264000000000067e-05}, {'diff': 2.8832999999998943e-05}, {'diff': 2.8861000000001552e-05}, {'diff': 2.8250000000000497e-...</msg>
<status status="PASS" starttime="20201030 18:28:23.586" endtime="20201030 18:28:23.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:23.593" level="INFO">${ACCURACY} = {'diff': [2.8277999999999637e-05, 2.8264000000000067e-05, 2.8264000000000067e-05, 2.8832999999998943e-05, 2.8861000000001552e-05, 2.8250000000000497e-05, 2.8291999999999207e-05, 2.8278000000003106e-05...</msg>
<status status="PASS" starttime="20201030 18:28:23.590" endtime="20201030 18:28:23.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.597" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 18:28:23.596" endtime="20201030 18:28:23.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.599" level="INFO">VALUE: [2.8277999999999637e-05, 2.8264000000000067e-05, 2.8264000000000067e-05, 2.8832999999998943e-05, 2.8861000000001552e-05, 2.8250000000000497e-05, 2.8291999999999207e-05, 2.8278000000003106e-05, 2.8250000000000497e-05, 2.8277999999999637e-05, 2.8250000000000497e-05, 2.8875000000001122e-05, 2.8889000000000692e-05, 2.8277000000000163e-05, 2.8263999999996597e-05, 2.8290999999999733e-05, 2.8874999999997653e-05, 2.8277000000000163e-05, 2.8263000000000593e-05, 2.8916999999999832e-05, 2.8264000000000067e-05, 2.8277999999999637e-05, 2.8860999999998083e-05, 2.8291999999999207e-05, 2.8292000000002676e-05, 2.8264000000000067e-05, 2.8291999999999207e-05, 2.8277000000000163e-05, 2.89309999999994e-05, 2.8889000000000692e-05, 2.8277999999999637e-05, 2.8277000000000163e-05, 2.8264000000000067e-05, 2.8277999999999637e-05, 2.8277999999999637e-05, 2.8264000000000067e-05, 2.8277999999999637e-05, 2.8860999999998083e-05, 2.8889000000000692e-05, 2.8333000000001912e-05, 2.8875000000001122e-05, 2.8264000000000067e-05, 2.8277999999999637e-05, 2.8833000000002412e-05, 2.8875000000001122e-05, 2.8875000000001122e-05, 2.8847000000001982e-05, 2.8305999999998777e-05, 2.8277999999999637e-05, 2.8277000000000163e-05]</msg>
<status status="PASS" starttime="20201030 18:28:23.598" endtime="20201030 18:28:23.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.594" endtime="20201030 18:28:23.602"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.605" endtime="20201030 18:28:23.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.604" endtime="20201030 18:28:23.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.603" endtime="20201030 18:28:23.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.248" endtime="20201030 18:28:23.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.247" endtime="20201030 18:28:23.626"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.634" endtime="20201030 18:28:23.650"></status>
</kw>
<msg timestamp="20201030 18:28:23.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.633" endtime="20201030 18:28:23.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.652" endtime="20201030 18:28:23.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.655" endtime="20201030 18:28:23.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.630" endtime="20201030 18:28:23.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.628" endtime="20201030 18:28:23.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.664" endtime="20201030 18:28:23.948"></status>
</kw>
<msg timestamp="20201030 18:28:23.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021901903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.662" endtime="20201030 18:28:23.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021901903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.952" endtime="20201030 18:28:23.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.960" endtime="20201030 18:28:23.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.659" endtime="20201030 18:28:23.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.658" endtime="20201030 18:28:23.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.967" level="INFO">${RESULT} = [{'diff': 2.9485999999998708e-05}, {'diff': 2.945899999999904e-05}, {'diff': 3.0096999999999763e-05}, {'diff': 2.8903000000000262e-05}, {'diff': 2.9485999999998708e-05}, {'diff': 2.9485999999998708e-0...</msg>
<status status="PASS" starttime="20201030 18:28:23.964" endtime="20201030 18:28:23.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:23.975" level="INFO">${ACCURACY} = {'diff': [2.9485999999998708e-05, 2.945899999999904e-05, 3.0096999999999763e-05, 2.8903000000000262e-05, 2.9485999999998708e-05, 2.9485999999998708e-05, 3.0070000000000097e-05, 3.0096999999999763e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:23.968" endtime="20201030 18:28:23.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.979" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 18:28:23.978" endtime="20201030 18:28:23.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.981" level="INFO">VALUE: [2.9485999999998708e-05, 2.945899999999904e-05, 3.0096999999999763e-05, 2.8903000000000262e-05, 2.9485999999998708e-05, 2.9485999999998708e-05, 3.0070000000000097e-05, 3.0096999999999763e-05, 3.0069000000000623e-05, 2.9528000000000887e-05, 2.8833999999998416e-05, 2.9499999999998278e-05, 2.9472000000002607e-05, 2.947300000000208e-05, 2.8874999999997653e-05, 2.9471999999999138e-05, 2.9471999999999138e-05, 2.9486000000002177e-05, 2.9486000000002177e-05, 2.945899999999904e-05, 2.9457999999999568e-05, 3.0083000000000193e-05, 2.9471999999999138e-05, 2.9486000000002177e-05, 3.0083000000000193e-05, 2.9500000000001747e-05, 2.947299999999861e-05, 2.9471999999999138e-05, 2.8889000000000692e-05, 3.0166999999997612e-05, 2.8874999999997653e-05, 2.9416000000000858e-05, 2.9540999999997514e-05, 3.0083000000000193e-05, 2.8848000000001456e-05, 2.9403000000000762e-05, 3.0083999999999667e-05, 2.9457999999999568e-05, 2.8874999999997653e-05, 2.9485999999998708e-05, 2.8847000000001982e-05, 2.8889000000000692e-05, 2.9486000000002177e-05, 3.0083000000000193e-05, 2.9485999999998708e-05, 2.8916000000000358e-05, 2.9499999999998278e-05, 3.0124999999998903e-05, 3.0042000000000957e-05, 2.8834000000001886e-05]</msg>
<status status="PASS" starttime="20201030 18:28:23.980" endtime="20201030 18:28:23.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.975" endtime="20201030 18:28:23.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.986" endtime="20201030 18:28:24.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.985" endtime="20201030 18:28:24.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.984" endtime="20201030 18:28:24.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.627" endtime="20201030 18:28:24.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.626" endtime="20201030 18:28:24.007"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.016" endtime="20201030 18:28:24.032"></status>
</kw>
<msg timestamp="20201030 18:28:24.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.014" endtime="20201030 18:28:24.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.033" endtime="20201030 18:28:24.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.036" endtime="20201030 18:28:24.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.012" endtime="20201030 18:28:24.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.009" endtime="20201030 18:28:24.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.044" endtime="20201030 18:28:24.331"></status>
</kw>
<msg timestamp="20201030 18:28:24.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.043" endtime="20201030 18:28:24.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.336" endtime="20201030 18:28:24.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.344" endtime="20201030 18:28:24.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.040" endtime="20201030 18:28:24.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.039" endtime="20201030 18:28:24.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:24.350" level="INFO">${RESULT} = [{'diff': 3.069399999999778e-05}, {'diff': 3.0096999999999763e-05}, {'diff': 3.0097999999999236e-05}, {'diff': 3.0096999999999763e-05}, {'diff': 3.068000000000168e-05}, {'diff': 3.0096999999999763e-05...</msg>
<status status="PASS" starttime="20201030 18:28:24.347" endtime="20201030 18:28:24.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:24.354" level="INFO">${ACCURACY} = {'diff': [3.069399999999778e-05, 3.0096999999999763e-05, 3.0097999999999236e-05, 3.0096999999999763e-05, 3.068000000000168e-05, 3.0096999999999763e-05, 3.070900000000029e-05, 3.0110999999999333e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:28:24.351" endtime="20201030 18:28:24.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.359" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 18:28:24.358" endtime="20201030 18:28:24.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.361" level="INFO">VALUE: [3.069399999999778e-05, 3.0096999999999763e-05, 3.0097999999999236e-05, 3.0096999999999763e-05, 3.068000000000168e-05, 3.0096999999999763e-05, 3.070900000000029e-05, 3.0110999999999333e-05, 3.068000000000168e-05, 3.0083000000000193e-05, 3.066699999999811e-05, 3.069500000000072e-05, 3.069400000000125e-05, 3.069399999999778e-05, 3.0138999999998473e-05, 3.0166000000001608e-05, 3.069400000000125e-05, 3.06249999999994e-05, 3.0083999999999667e-05, 3.0112000000002276e-05, 3.067999999999821e-05, 3.0097999999999236e-05, 3.068099999999768e-05, 3.0096999999999763e-05, 3.0083000000000193e-05, 3.066700000000158e-05, 3.0083000000000193e-05, 3.070800000000082e-05, 3.072200000000039e-05, 3.015199999999857e-05, 3.0096999999999763e-05, 3.0055999999997057e-05, 3.068100000000115e-05, 3.016599999999814e-05, 3.069399999999778e-05, 3.0083000000000193e-05, 3.069500000000072e-05, 3.069399999999778e-05, 3.070800000000082e-05, 3.0138999999998473e-05, 3.069500000000072e-05, 3.0070000000000097e-05, 3.066699999999811e-05, 3.069500000000072e-05, 3.0083000000000193e-05, 3.062500000000287e-05, 3.0153000000001512e-05, 3.069500000000072e-05, 3.0097999999999236e-05, 3.0096999999999763e-05]</msg>
<status status="PASS" starttime="20201030 18:28:24.360" endtime="20201030 18:28:24.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.355" endtime="20201030 18:28:24.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:24.366" endtime="20201030 18:28:24.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.365" endtime="20201030 18:28:24.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.364" endtime="20201030 18:28:24.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.008" endtime="20201030 18:28:24.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.007" endtime="20201030 18:28:24.387"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.396" endtime="20201030 18:28:24.413"></status>
</kw>
<msg timestamp="20201030 18:28:24.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.394" endtime="20201030 18:28:24.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.414" endtime="20201030 18:28:24.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.417" endtime="20201030 18:28:24.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.391" endtime="20201030 18:28:24.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.389" endtime="20201030 18:28:24.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.426" endtime="20201030 18:28:24.712"></status>
</kw>
<msg timestamp="20201030 18:28:24.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022582194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.424" endtime="20201030 18:28:24.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022582194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.716" endtime="20201030 18:28:24.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.725" endtime="20201030 18:28:24.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.422" endtime="20201030 18:28:24.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.420" endtime="20201030 18:28:24.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:24.731" level="INFO">${RESULT} = [{'diff': 3.190299999999979e-05}, {'diff': 3.127799999999917e-05}, {'diff': 3.127799999999917e-05}, {'diff': 3.132000000000135e-05}, {'diff': 3.123600000000046e-05}, {'diff': 3.1304999999998834e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:24.728" endtime="20201030 18:28:24.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:24.735" level="INFO">${ACCURACY} = {'diff': [3.190299999999979e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.132000000000135e-05, 3.123600000000046e-05, 3.1304999999998834e-05, 3.13050000000023e-05, 3.130599999999831e-05, 3.1291...</msg>
<status status="PASS" starttime="20201030 18:28:24.732" endtime="20201030 18:28:24.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.740" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 18:28:24.739" endtime="20201030 18:28:24.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.742" level="INFO">VALUE: [3.190299999999979e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.132000000000135e-05, 3.123600000000046e-05, 3.1304999999998834e-05, 3.13050000000023e-05, 3.130599999999831e-05, 3.129199999999874e-05, 3.186100000000108e-05, 3.190200000000032e-05, 3.129199999999874e-05, 3.129100000000273e-05, 3.198600000000121e-05, 3.188800000000075e-05, 3.130600000000178e-05, 3.12639999999996e-05, 3.191699999999936e-05, 3.187500000000065e-05, 3.1304999999998834e-05, 3.123600000000046e-05, 3.190299999999979e-05, 3.130599999999831e-05, 3.1290999999999264e-05, 3.1332999999997974e-05, 3.190299999999979e-05, 3.129199999999874e-05, 3.127800000000264e-05, 3.190299999999979e-05, 3.068000000000168e-05, 3.187500000000065e-05, 3.190299999999979e-05, 3.190299999999979e-05, 3.188900000000022e-05, 3.187500000000065e-05, 3.129200000000221e-05, 3.1304999999998834e-05, 3.190299999999979e-05, 3.188900000000022e-05, 3.188900000000022e-05, 3.1304999999998834e-05, 3.129200000000221e-05, 3.068100000000115e-05, 3.1304999999998834e-05, 3.134700000000101e-05, 3.129199999999874e-05, 3.13050000000023e-05, 3.129199999999874e-05, 3.1290999999999264e-05, 3.1304999999998834e-05]</msg>
<status status="PASS" starttime="20201030 18:28:24.741" endtime="20201030 18:28:24.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.736" endtime="20201030 18:28:24.744"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:24.748" endtime="20201030 18:28:24.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.746" endtime="20201030 18:28:24.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.745" endtime="20201030 18:28:24.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.388" endtime="20201030 18:28:24.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.387" endtime="20201030 18:28:24.768"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.777" endtime="20201030 18:28:24.793"></status>
</kw>
<msg timestamp="20201030 18:28:24.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.776" endtime="20201030 18:28:24.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.795" endtime="20201030 18:28:24.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.797" endtime="20201030 18:28:24.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.773" endtime="20201030 18:28:24.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.771" endtime="20201030 18:28:24.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.806" endtime="20201030 18:28:25.092"></status>
</kw>
<msg timestamp="20201030 18:28:25.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.805" endtime="20201030 18:28:25.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.096" endtime="20201030 18:28:25.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.104" endtime="20201030 18:28:25.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.802" endtime="20201030 18:28:25.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.800" endtime="20201030 18:28:25.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.111" level="INFO">${RESULT} = [{'diff': 3.248599999999824e-05}, {'diff': 3.247299999999814e-05}, {'diff': 3.188900000000022e-05}, {'diff': 3.194399999999903e-05}, {'diff': 3.249999999999781e-05}, {'diff': 3.3096999999999294e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:25.108" endtime="20201030 18:28:25.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:25.116" level="INFO">${ACCURACY} = {'diff': [3.248599999999824e-05, 3.247299999999814e-05, 3.188900000000022e-05, 3.194399999999903e-05, 3.249999999999781e-05, 3.3096999999999294e-05, 3.191700000000283e-05, 3.2555000000000084e-05, 3.24...</msg>
<status status="PASS" starttime="20201030 18:28:25.112" endtime="20201030 18:28:25.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.120" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 18:28:25.119" endtime="20201030 18:28:25.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.123" level="INFO">VALUE: [3.248599999999824e-05, 3.247299999999814e-05, 3.188900000000022e-05, 3.194399999999903e-05, 3.249999999999781e-05, 3.3096999999999294e-05, 3.191700000000283e-05, 3.2555000000000084e-05, 3.249999999999781e-05, 3.191699999999936e-05, 3.250000000000128e-05, 3.191699999999936e-05, 3.188900000000022e-05, 3.191599999999989e-05, 3.190299999999979e-05, 3.188900000000022e-05, 3.248699999999771e-05, 3.187500000000065e-05, 3.248599999999824e-05, 3.250000000000128e-05, 3.1846999999998044e-05, 3.252800000000042e-05, 3.248599999999824e-05, 3.187500000000065e-05, 3.254199999999999e-05, 3.248599999999824e-05, 3.252800000000042e-05, 3.2541000000000514e-05, 3.248600000000171e-05, 3.191699999999936e-05, 3.190299999999979e-05, 3.3110999999998864e-05, 3.249999999999781e-05, 3.252800000000042e-05, 3.249999999999781e-05, 3.190299999999979e-05, 3.250000000000128e-05, 3.190299999999979e-05, 3.244500000000247e-05, 3.244399999999953e-05, 3.184700000000151e-05, 3.188900000000022e-05, 3.309799999999877e-05, 3.250000000000128e-05, 3.192999999999946e-05, 3.249999999999781e-05, 3.251399999999738e-05, 3.251400000000085e-05, 3.188900000000022e-05, 3.250000000000128e-05]</msg>
<status status="PASS" starttime="20201030 18:28:25.121" endtime="20201030 18:28:25.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.117" endtime="20201030 18:28:25.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:25.128" endtime="20201030 18:28:25.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.126" endtime="20201030 18:28:25.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.125" endtime="20201030 18:28:25.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.769" endtime="20201030 18:28:25.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.769" endtime="20201030 18:28:25.148"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.157" endtime="20201030 18:28:25.174"></status>
</kw>
<msg timestamp="20201030 18:28:25.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.155" endtime="20201030 18:28:25.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.175" endtime="20201030 18:28:25.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.177" endtime="20201030 18:28:25.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.153" endtime="20201030 18:28:25.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.151" endtime="20201030 18:28:25.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.186" endtime="20201030 18:28:25.474"></status>
</kw>
<msg timestamp="20201030 18:28:25.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021630528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.185" endtime="20201030 18:28:25.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021630528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.478" endtime="20201030 18:28:25.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.486" endtime="20201030 18:28:25.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.182" endtime="20201030 18:28:25.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.181" endtime="20201030 18:28:25.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.493" level="INFO">${RESULT} = [{'diff': 3.7833000000001005e-05}, {'diff': 3.738799999999931e-05}, {'diff': 3.7653000000002074e-05}, {'diff': 3.823600000000052e-05}, {'diff': 3.820800000000138e-05}, {'diff': 3.7333000000000505e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:25.489" endtime="20201030 18:28:25.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:25.497" level="INFO">${ACCURACY} = {'diff': [3.7833000000001005e-05, 3.738799999999931e-05, 3.7653000000002074e-05, 3.823600000000052e-05, 3.820800000000138e-05, 3.7333000000000505e-05, 3.72780000000017e-05, 3.7638999999999034e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 18:28:25.494" endtime="20201030 18:28:25.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.501" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 18:28:25.500" endtime="20201030 18:28:25.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.504" level="INFO">VALUE: [3.7833000000001005e-05, 3.738799999999931e-05, 3.7653000000002074e-05, 3.823600000000052e-05, 3.820800000000138e-05, 3.7333000000000505e-05, 3.72780000000017e-05, 3.7638999999999034e-05, 3.7666999999998174e-05, 3.7819000000001435e-05, 3.727799999999823e-05, 3.7389000000002254e-05, 3.7445000000000533e-05, 3.7582999999997285e-05, 3.757000000000066e-05, 3.755600000000109e-05, 3.782000000000091e-05, 3.751399999999891e-05, 3.8166999999998674e-05, 3.7319000000000935e-05, 3.772299999999992e-05, 3.816600000000267e-05, 3.820800000000138e-05, 3.7624999999999464e-05, 3.772200000000045e-05, 3.7583000000000755e-05, 3.7860999999996675e-05, 3.748599999999977e-05, 3.8097000000000825e-05, 3.802799999999898e-05, 3.751399999999891e-05, 3.777799999999873e-05, 3.732000000000041e-05, 3.7888999999999284e-05, 3.7374999999999214e-05, 3.801399999999941e-05, 3.7624999999999464e-05, 3.747299999999967e-05, 3.726399999999866e-05, 3.7389000000002254e-05, 3.7583000000000755e-05, 3.7305000000001365e-05, 3.815199999999963e-05, 3.801399999999941e-05, 3.818000000000224e-05, 3.825000000000009e-05, 3.744399999999759e-05, 3.804199999999855e-05, 3.7402999999998354e-05, 3.822200000000095e-05]</msg>
<status status="PASS" starttime="20201030 18:28:25.502" endtime="20201030 18:28:25.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.498" endtime="20201030 18:28:25.505"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:25.509" endtime="20201030 18:28:25.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.507" endtime="20201030 18:28:25.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.506" endtime="20201030 18:28:25.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.149" endtime="20201030 18:28:25.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.149" endtime="20201030 18:28:25.529"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.538" endtime="20201030 18:28:25.555"></status>
</kw>
<msg timestamp="20201030 18:28:25.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.536" endtime="20201030 18:28:25.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.557" endtime="20201030 18:28:25.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.559" endtime="20201030 18:28:25.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.534" endtime="20201030 18:28:25.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.532" endtime="20201030 18:28:25.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.568" endtime="20201030 18:28:25.853"></status>
</kw>
<msg timestamp="20201030 18:28:25.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.566" endtime="20201030 18:28:25.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.857" endtime="20201030 18:28:25.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.865" endtime="20201030 18:28:25.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.564" endtime="20201030 18:28:25.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.562" endtime="20201030 18:28:25.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.872" level="INFO">${RESULT} = [{'diff': 3.9166999999999674e-05}, {'diff': 3.8333000000001505e-05}, {'diff': 3.898600000000127e-05}, {'diff': 3.841599999999945e-05}, {'diff': 3.8389000000003254e-05}, {'diff': 3.8388999999999784e-05...</msg>
<status status="PASS" starttime="20201030 18:28:25.869" endtime="20201030 18:28:25.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:25.876" level="INFO">${ACCURACY} = {'diff': [3.9166999999999674e-05, 3.8333000000001505e-05, 3.898600000000127e-05, 3.841599999999945e-05, 3.8389000000003254e-05, 3.8388999999999784e-05, 3.844399999999859e-05, 3.9208999999998384e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:28:25.873" endtime="20201030 18:28:25.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.881" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 18:28:25.880" endtime="20201030 18:28:25.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.883" level="INFO">VALUE: [3.9166999999999674e-05, 3.8333000000001505e-05, 3.898600000000127e-05, 3.841599999999945e-05, 3.8389000000003254e-05, 3.8388999999999784e-05, 3.844399999999859e-05, 3.9208999999998384e-05, 3.8874999999997245e-05, 3.877799999999973e-05, 3.852799999999948e-05, 3.8361000000000645e-05, 3.856999999999819e-05, 3.856999999999819e-05, 3.901400000000041e-05, 3.877799999999973e-05, 3.873600000000102e-05, 3.8444999999998064e-05, 3.886200000000062e-05, 3.9083000000002255e-05, 3.8639000000000034e-05, 3.8388999999999784e-05, 3.8625000000000465e-05, 3.8361000000000645e-05, 3.8639000000000034e-05, 3.925000000000109e-05, 3.924999999999762e-05, 3.8388999999999784e-05, 3.854200000000252e-05, 3.8680999999998744e-05, 3.8445000000001534e-05, 3.8889000000000284e-05, 3.925000000000109e-05, 3.884800000000105e-05, 3.8458999999997634e-05, 3.832000000000141e-05, 3.8695000000001784e-05, 3.8416999999998924e-05, 3.8319000000001935e-05, 3.9110999999997925e-05, 3.844399999999859e-05, 3.875000000000059e-05, 3.9040999999996606e-05, 3.8596999999997855e-05, 3.904199999999955e-05, 3.845800000000163e-05, 3.917999999999977e-05, 3.830599999999837e-05, 3.8625000000000465e-05, 3.826399999999966e-05]</msg>
<status status="PASS" starttime="20201030 18:28:25.882" endtime="20201030 18:28:25.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.877" endtime="20201030 18:28:25.885"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:25.889" endtime="20201030 18:28:25.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.887" endtime="20201030 18:28:25.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.886" endtime="20201030 18:28:25.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.530" endtime="20201030 18:28:25.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.530" endtime="20201030 18:28:25.909"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.918" endtime="20201030 18:28:25.935"></status>
</kw>
<msg timestamp="20201030 18:28:25.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.916" endtime="20201030 18:28:25.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.937" endtime="20201030 18:28:25.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.939" endtime="20201030 18:28:25.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.914" endtime="20201030 18:28:25.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.912" endtime="20201030 18:28:25.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.948" endtime="20201030 18:28:26.234"></status>
</kw>
<msg timestamp="20201030 18:28:26.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.947" endtime="20201030 18:28:26.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.238" endtime="20201030 18:28:26.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.246" endtime="20201030 18:28:26.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.944" endtime="20201030 18:28:26.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.942" endtime="20201030 18:28:26.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:26.253" level="INFO">${RESULT} = [{'diff': 4.0139000000001535e-05}, {'diff': 3.9582999999999285e-05}, {'diff': 4.01660000000012e-05}, {'diff': 3.975000000000159e-05}, {'diff': 4.001399999999794e-05}, {'diff': 3.9333000000002505e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:26.249" endtime="20201030 18:28:26.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:26.258" level="INFO">${ACCURACY} = {'diff': [4.0139000000001535e-05, 3.9582999999999285e-05, 4.01660000000012e-05, 3.975000000000159e-05, 4.001399999999794e-05, 3.9333000000002505e-05, 3.92919999999998e-05, 3.947199999999873e-05, 4.015...</msg>
<status status="PASS" starttime="20201030 18:28:26.254" endtime="20201030 18:28:26.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.262" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 18:28:26.261" endtime="20201030 18:28:26.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.265" level="INFO">VALUE: [4.0139000000001535e-05, 3.9582999999999285e-05, 4.01660000000012e-05, 3.975000000000159e-05, 4.001399999999794e-05, 3.9333000000002505e-05, 3.92919999999998e-05, 3.947199999999873e-05, 4.0153000000001104e-05, 3.9653000000000604e-05, 4.0181000000000244e-05, 3.9888999999997815e-05, 4.008399999999926e-05, 4.0194999999999814e-05, 3.948600000000177e-05, 3.968000000000027e-05, 3.9388999999997315e-05, 3.9625000000001465e-05, 3.9875000000001715e-05, 3.943000000000002e-05, 4.018000000000077e-05, 3.9610999999998425e-05, 4.0110999999998925e-05, 4.0166999999997205e-05, 3.980599999999987e-05, 4.005600000000012e-05, 3.9610999999998425e-05, 3.9680999999999744e-05, 3.9444999999999064e-05, 4.005600000000012e-05, 3.9944999999999564e-05, 3.925000000000109e-05, 3.9541000000000576e-05, 3.9486999999997774e-05, 3.972199999999898e-05, 3.940199999999741e-05, 4.018000000000077e-05, 4.0069000000000216e-05, 3.926400000000066e-05, 4.0110999999998925e-05, 3.952800000000048e-05, 3.9389000000000784e-05, 3.972200000000245e-05, 3.9624999999997995e-05, 3.995799999999966e-05, 3.9596999999998855e-05, 3.9611000000001895e-05, 4.004200000000055e-05, 3.955599999999962e-05, 3.9860999999998675e-05]</msg>
<status status="PASS" starttime="20201030 18:28:26.263" endtime="20201030 18:28:26.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.258" endtime="20201030 18:28:26.266"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:26.269" endtime="20201030 18:28:26.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.268" endtime="20201030 18:28:26.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.267" endtime="20201030 18:28:26.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.910" endtime="20201030 18:28:26.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.910" endtime="20201030 18:28:26.290"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.299" endtime="20201030 18:28:26.316"></status>
</kw>
<msg timestamp="20201030 18:28:26.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.297" endtime="20201030 18:28:26.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.317" endtime="20201030 18:28:26.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.320" endtime="20201030 18:28:26.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.295" endtime="20201030 18:28:26.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.293" endtime="20201030 18:28:26.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.329" endtime="20201030 18:28:26.616"></status>
</kw>
<msg timestamp="20201030 18:28:26.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02197575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:26.328" endtime="20201030 18:28:26.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02197575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:26.620" endtime="20201030 18:28:26.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.628" endtime="20201030 18:28:26.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.325" endtime="20201030 18:28:26.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.323" endtime="20201030 18:28:26.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:26.635" level="INFO">${RESULT} = [{'diff': 4.0596999999999855e-05}, {'diff': 4.1194999999997345e-05}, {'diff': 4.072199999999998e-05}, {'diff': 4.04859999999993e-05}, {'diff': 4.073599999999955e-05}, {'diff': 4.02920000000008e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:26.632" endtime="20201030 18:28:26.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:26.639" level="INFO">${ACCURACY} = {'diff': [4.0596999999999855e-05, 4.1194999999997345e-05, 4.072199999999998e-05, 4.04859999999993e-05, 4.073599999999955e-05, 4.02920000000008e-05, 4.104199999999808e-05, 4.109799999999983e-05, 4.0820...</msg>
<status status="PASS" starttime="20201030 18:28:26.636" endtime="20201030 18:28:26.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.643" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 18:28:26.642" endtime="20201030 18:28:26.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.646" level="INFO">VALUE: [4.0596999999999855e-05, 4.1194999999997345e-05, 4.072199999999998e-05, 4.04859999999993e-05, 4.073599999999955e-05, 4.02920000000008e-05, 4.104199999999808e-05, 4.109799999999983e-05, 4.082000000000044e-05, 4.051400000000191e-05, 4.0610999999999425e-05, 4.045800000000016e-05, 4.026400000000166e-05, 4.118000000000177e-05, 4.0554999999997676e-05, 4.1124999999999495e-05, 4.0902999999998385e-05, 4.0680999999997275e-05, 4.0319000000000466e-05, 4.047199999999973e-05, 4.102799999999851e-05, 4.0930999999997525e-05, 4.1153000000002105e-05, 4.0860999999999675e-05, 4.0472999999999204e-05, 4.0860999999999675e-05, 4.052800000000148e-05, 4.095800000000066e-05, 4.0277000000001756e-05, 4.043000000000102e-05, 4.0819000000000966e-05, 4.0596999999999855e-05, 4.07920000000013e-05, 4.102799999999851e-05, 4.123600000000005e-05, 4.094400000000109e-05, 4.0417000000000924e-05, 4.076400000000216e-05, 4.09859999999998e-05, 4.0874999999999245e-05, 4.107000000000069e-05, 4.1054999999998176e-05, 4.054200000000105e-05, 4.044399999999712e-05, 4.049999999999887e-05, 4.0610999999999425e-05, 4.0569000000000716e-05, 4.070799999999694e-05, 4.0346999999999605e-05, 4.06799999999978e-05]</msg>
<status status="PASS" starttime="20201030 18:28:26.644" endtime="20201030 18:28:26.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.640" endtime="20201030 18:28:26.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:26.651" endtime="20201030 18:28:26.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.649" endtime="20201030 18:28:26.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.648" endtime="20201030 18:28:26.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.291" endtime="20201030 18:28:26.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.290" endtime="20201030 18:28:26.671"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.680" endtime="20201030 18:28:26.697"></status>
</kw>
<msg timestamp="20201030 18:28:26.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.678" endtime="20201030 18:28:26.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.699" endtime="20201030 18:28:26.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.701" endtime="20201030 18:28:26.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.676" endtime="20201030 18:28:26.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.674" endtime="20201030 18:28:26.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.710" endtime="20201030 18:28:26.995"></status>
</kw>
<msg timestamp="20201030 18:28:26.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022805639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022847111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.708" endtime="20201030 18:28:26.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022805639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022847111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.999" endtime="20201030 18:28:27.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.008" endtime="20201030 18:28:27.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.706" endtime="20201030 18:28:27.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.704" endtime="20201030 18:28:27.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:27.014" level="INFO">${RESULT} = [{'diff': 4.147200000000073e-05}, {'diff': 4.14860000000003e-05}, {'diff': 4.144400000000159e-05}, {'diff': 4.147200000000073e-05}, {'diff': 4.207000000000169e-05}, {'diff': 4.2180999999998775e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:27.011" endtime="20201030 18:28:27.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:27.018" level="INFO">${ACCURACY} = {'diff': [4.147200000000073e-05, 4.14860000000003e-05, 4.144400000000159e-05, 4.147200000000073e-05, 4.207000000000169e-05, 4.2180999999998775e-05, 4.133400000000051e-05, 4.2180999999998775e-05, 4.197...</msg>
<status status="PASS" starttime="20201030 18:28:27.015" endtime="20201030 18:28:27.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.023" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 18:28:27.022" endtime="20201030 18:28:27.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.025" level="INFO">VALUE: [4.147200000000073e-05, 4.14860000000003e-05, 4.144400000000159e-05, 4.147200000000073e-05, 4.207000000000169e-05, 4.2180999999998775e-05, 4.133400000000051e-05, 4.2180999999998775e-05, 4.1973000000000704e-05, 4.204199999999908e-05, 4.208400000000126e-05, 4.202799999999951e-05, 4.191599999999948e-05, 4.190199999999991e-05, 4.2068999999998746e-05, 4.144400000000159e-05, 4.2097000000001356e-05, 4.126400000000266e-05, 4.174999999999665e-05, 4.225000000000062e-05, 4.1611000000000425e-05, 4.1388999999999315e-05, 4.1653000000002605e-05, 4.149999999999987e-05, 4.2167000000002675e-05, 4.1652999999999135e-05, 4.208399999999779e-05, 4.159800000000033e-05, 4.1987000000000274e-05, 4.190199999999991e-05, 4.16799999999988e-05, 4.2125000000000495e-05, 4.1554999999998676e-05, 4.149999999999987e-05, 4.21799999999993e-05, 4.176399999999969e-05, 4.1347000000000605e-05, 4.152799999999901e-05, 4.175000000000012e-05, 4.14860000000003e-05, 4.1582999999997816e-05, 4.132000000000094e-05, 4.1403000000002355e-05, 4.176399999999969e-05, 4.204199999999908e-05, 4.1361000000000175e-05, 4.2194999999998345e-05, 4.225000000000062e-05, 4.170800000000141e-05, 4.172199999999751e-05]</msg>
<status status="PASS" starttime="20201030 18:28:27.024" endtime="20201030 18:28:27.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.019" endtime="20201030 18:28:27.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:27.035" endtime="20201030 18:28:27.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.033" endtime="20201030 18:28:27.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.032" endtime="20201030 18:28:27.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.672" endtime="20201030 18:28:27.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.671" endtime="20201030 18:28:27.056"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.068" endtime="20201030 18:28:27.085"></status>
</kw>
<msg timestamp="20201030 18:28:27.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.066" endtime="20201030 18:28:27.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.087" endtime="20201030 18:28:27.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.089" endtime="20201030 18:28:27.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.062" endtime="20201030 18:28:27.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.059" endtime="20201030 18:28:27.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.098" endtime="20201030 18:28:27.385"></status>
</kw>
<msg timestamp="20201030 18:28:27.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027114069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027157236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.097" endtime="20201030 18:28:27.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027114069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027157236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.389" endtime="20201030 18:28:27.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.397" endtime="20201030 18:28:27.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.094" endtime="20201030 18:28:27.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.092" endtime="20201030 18:28:27.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:27.403" level="INFO">${RESULT} = [{'diff': 4.3167000000000205e-05}, {'diff': 4.2333000000002036e-05}, {'diff': 4.244399999999912e-05}, {'diff': 4.24860000000013e-05}, {'diff': 4.252800000000001e-05}, {'diff': 4.301400000000094e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:27.400" endtime="20201030 18:28:27.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:27.411" level="INFO">${ACCURACY} = {'diff': [4.3167000000000205e-05, 4.2333000000002036e-05, 4.244399999999912e-05, 4.24860000000013e-05, 4.252800000000001e-05, 4.301400000000094e-05, 4.2611000000001426e-05, 4.2680999999999275e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 18:28:27.404" endtime="20201030 18:28:27.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.416" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 18:28:27.415" endtime="20201030 18:28:27.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.418" level="INFO">VALUE: [4.3167000000000205e-05, 4.2333000000002036e-05, 4.244399999999912e-05, 4.24860000000013e-05, 4.252800000000001e-05, 4.301400000000094e-05, 4.2611000000001426e-05, 4.2680999999999275e-05, 4.2361000000001175e-05, 4.2554999999999676e-05, 4.2611000000001426e-05, 4.2639000000000565e-05, 4.2347000000001606e-05, 4.3055000000000176e-05, 4.301400000000094e-05, 4.2568999999999246e-05, 4.229199999999933e-05, 4.2791000000000357e-05, 4.277800000000026e-05, 4.3223000000001954e-05, 4.24860000000013e-05, 4.301399999999747e-05, 4.3110999999998456e-05, 4.281999999999897e-05, 4.233399999999804e-05, 4.2681000000002745e-05, 4.23059999999989e-05, 4.3124999999998026e-05, 4.252800000000001e-05, 4.326400000000119e-05, 4.301300000000147e-05, 4.3055000000000176e-05, 4.3041000000000607e-05, 4.252800000000001e-05, 4.3082999999999316e-05, 4.247200000000173e-05, 4.2624999999997526e-05, 4.2916999999999955e-05, 4.2568999999999246e-05, 4.304200000000008e-05, 4.2444999999998595e-05, 4.305599999999965e-05, 4.233400000000151e-05, 4.277800000000026e-05, 4.2430999999999025e-05, 4.266600000000023e-05, 4.2653000000000135e-05, 4.2583000000002286e-05, 4.263799999999762e-05, 4.304200000000008e-05]</msg>
<status status="PASS" starttime="20201030 18:28:27.417" endtime="20201030 18:28:27.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.412" endtime="20201030 18:28:27.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:27.423" endtime="20201030 18:28:27.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.421" endtime="20201030 18:28:27.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.420" endtime="20201030 18:28:27.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.057" endtime="20201030 18:28:27.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.056" endtime="20201030 18:28:27.444"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.452" endtime="20201030 18:28:27.469"></status>
</kw>
<msg timestamp="20201030 18:28:27.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.451" endtime="20201030 18:28:27.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.471" endtime="20201030 18:28:27.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.473" endtime="20201030 18:28:27.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.448" endtime="20201030 18:28:27.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.446" endtime="20201030 18:28:27.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.482" endtime="20201030 18:28:27.769"></status>
</kw>
<msg timestamp="20201030 18:28:27.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.481" endtime="20201030 18:28:27.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.773" endtime="20201030 18:28:27.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.781" endtime="20201030 18:28:27.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.478" endtime="20201030 18:28:27.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.476" endtime="20201030 18:28:27.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:27.788" level="INFO">${RESULT} = [{'diff': 4.402700000000204e-05}, {'diff': 4.376399999999822e-05}, {'diff': 4.3624999999998526e-05}, {'diff': 4.373599999999908e-05}, {'diff': 4.3374999999998276e-05}, {'diff': 4.3346999999999136e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:27.785" endtime="20201030 18:28:27.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:27.792" level="INFO">${ACCURACY} = {'diff': [4.402700000000204e-05, 4.376399999999822e-05, 4.3624999999998526e-05, 4.373599999999908e-05, 4.3374999999998276e-05, 4.3346999999999136e-05, 4.3903000000001385e-05, 4.3402999999997416e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:28:27.789" endtime="20201030 18:28:27.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.796" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 18:28:27.795" endtime="20201030 18:28:27.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.799" level="INFO">VALUE: [4.402700000000204e-05, 4.376399999999822e-05, 4.3624999999998526e-05, 4.373599999999908e-05, 4.3374999999998276e-05, 4.3346999999999136e-05, 4.3903000000001385e-05, 4.3402999999997416e-05, 4.34860000000023e-05, 4.3346999999999136e-05, 4.3444999999999595e-05, 4.3582999999999816e-05, 4.329200000000033e-05, 4.351400000000144e-05, 4.374999999999865e-05, 4.3417000000000455e-05, 4.350000000000187e-05, 4.3874999999998776e-05, 4.370799999999994e-05, 4.419400000000087e-05, 4.422200000000001e-05, 4.4069000000000746e-05, 4.404200000000108e-05, 4.423599999999958e-05, 4.417999999999783e-05, 4.373599999999908e-05, 4.4125000000002496e-05, 4.404099999999814e-05, 4.323600000000205e-05, 4.405600000000065e-05, 4.327800000000076e-05, 4.426400000000219e-05, 4.3874999999998776e-05, 4.3708999999999415e-05, 4.3860999999999206e-05, 4.345799999999969e-05, 4.3902999999997916e-05, 4.3360999999998706e-05, 4.3653000000001135e-05, 4.369400000000037e-05, 4.372199999999951e-05, 4.3318999999999996e-05, 4.3958999999999665e-05, 4.33059999999999e-05, 4.3889000000001815e-05, 4.379200000000083e-05, 4.4138999999998596e-05, 4.3681000000000275e-05, 4.373599999999908e-05, 4.4069000000000746e-05]</msg>
<status status="PASS" starttime="20201030 18:28:27.797" endtime="20201030 18:28:27.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.793" endtime="20201030 18:28:27.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:27.804" endtime="20201030 18:28:27.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.802" endtime="20201030 18:28:27.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.801" endtime="20201030 18:28:27.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.445" endtime="20201030 18:28:27.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.444" endtime="20201030 18:28:27.824"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.833" endtime="20201030 18:28:27.851"></status>
</kw>
<msg timestamp="20201030 18:28:27.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.831" endtime="20201030 18:28:27.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.852" endtime="20201030 18:28:27.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.855" endtime="20201030 18:28:27.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.829" endtime="20201030 18:28:27.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.827" endtime="20201030 18:28:27.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.864" endtime="20201030 18:28:28.148"></status>
</kw>
<msg timestamp="20201030 18:28:28.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022658014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022702903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.862" endtime="20201030 18:28:28.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022658014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022702903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.153" endtime="20201030 18:28:28.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.161" endtime="20201030 18:28:28.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.860" endtime="20201030 18:28:28.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.858" endtime="20201030 18:28:28.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:28.167" level="INFO">${RESULT} = [{'diff': 4.4888999999999346e-05}, {'diff': 4.509800000000036e-05}, {'diff': 4.4874999999999776e-05}, {'diff': 4.4833000000001066e-05}, {'diff': 4.429100000000186e-05}, {'diff': 4.494399999999815e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:28.164" endtime="20201030 18:28:28.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:28.171" level="INFO">${ACCURACY} = {'diff': [4.4888999999999346e-05, 4.509800000000036e-05, 4.4874999999999776e-05, 4.4833000000001066e-05, 4.429100000000186e-05, 4.494399999999815e-05, 4.4347000000000136e-05, 4.516599999999926e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:28:28.168" endtime="20201030 18:28:28.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.176" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 18:28:28.175" endtime="20201030 18:28:28.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.178" level="INFO">VALUE: [4.4888999999999346e-05, 4.509800000000036e-05, 4.4874999999999776e-05, 4.4833000000001066e-05, 4.429100000000186e-05, 4.494399999999815e-05, 4.4347000000000136e-05, 4.516599999999926e-05, 4.46800000000018e-05, 4.469400000000137e-05, 4.5166999999998736e-05, 4.5111000000000456e-05, 4.427799999999829e-05, 4.479199999999836e-05, 4.433400000000004e-05, 4.4930999999998056e-05, 4.497199999999729e-05, 4.4445000000000595e-05, 4.509800000000036e-05, 4.476399999999922e-05, 4.4610999999999956e-05, 4.513800000000012e-05, 4.493000000000205e-05, 4.452699999999907e-05, 4.420800000000044e-05, 4.522199999999754e-05, 4.4583000000000816e-05, 4.5111000000000456e-05, 4.472199999999704e-05, 4.505599999999818e-05, 4.452799999999854e-05, 4.477800000000226e-05, 4.451399999999897e-05, 4.4417000000001455e-05, 4.4374999999999276e-05, 4.4709000000000415e-05, 4.501399999999947e-05, 4.5195000000001345e-05, 4.502699999999957e-05, 4.4653000000002135e-05, 4.447200000000026e-05, 4.517999999999883e-05, 4.4847000000000636e-05, 4.4374999999999276e-05, 4.4874999999999776e-05, 4.4431000000001025e-05, 4.484800000000011e-05, 4.520799999999797e-05, 4.5152999999999166e-05, 4.49999999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:28:28.177" endtime="20201030 18:28:28.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.172" endtime="20201030 18:28:28.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.184" endtime="20201030 18:28:28.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.183" endtime="20201030 18:28:28.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.181" endtime="20201030 18:28:28.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.825" endtime="20201030 18:28:28.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.825" endtime="20201030 18:28:28.205"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.213" endtime="20201030 18:28:28.231"></status>
</kw>
<msg timestamp="20201030 18:28:28.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.212" endtime="20201030 18:28:28.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.232" endtime="20201030 18:28:28.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.235" endtime="20201030 18:28:28.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.209" endtime="20201030 18:28:28.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.207" endtime="20201030 18:28:28.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.243" endtime="20201030 18:28:28.530"></status>
</kw>
<msg timestamp="20201030 18:28:28.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022040722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.242" endtime="20201030 18:28:28.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022040722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.534" endtime="20201030 18:28:28.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.542" endtime="20201030 18:28:28.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.239" endtime="20201030 18:28:28.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.238" endtime="20201030 18:28:28.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:28.548" level="INFO">${RESULT} = [{'diff': 4.6166999999999736e-05}, {'diff': 4.598600000000133e-05}, {'diff': 4.562499999999706e-05}, {'diff': 4.5416999999998986e-05}, {'diff': 4.579200000000283e-05}, {'diff': 4.5625000000000526e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:28.545" endtime="20201030 18:28:28.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:28.553" level="INFO">${ACCURACY} = {'diff': [4.6166999999999736e-05, 4.598600000000133e-05, 4.562499999999706e-05, 4.5416999999998986e-05, 4.579200000000283e-05, 4.5625000000000526e-05, 4.547200000000126e-05, 4.572200000000151e-05, 4.5...</msg>
<status status="PASS" starttime="20201030 18:28:28.549" endtime="20201030 18:28:28.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.558" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 18:28:28.557" endtime="20201030 18:28:28.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.560" level="INFO">VALUE: [4.6166999999999736e-05, 4.598600000000133e-05, 4.562499999999706e-05, 4.5416999999998986e-05, 4.579200000000283e-05, 4.5625000000000526e-05, 4.547200000000126e-05, 4.572200000000151e-05, 4.532000000000147e-05, 4.615200000000069e-05, 4.53060000000019e-05, 4.530599999999843e-05, 4.620800000000244e-05, 4.56939999999989e-05, 4.580599999999893e-05, 4.5625000000000526e-05, 4.611099999999799e-05, 4.584699999999817e-05, 4.6111000000001456e-05, 4.602800000000004e-05, 4.605600000000265e-05, 4.6125000000001026e-05, 4.563800000000062e-05, 4.601400000000047e-05, 4.6125000000001026e-05, 4.530599999999843e-05, 4.5388999999999846e-05, 4.5723000000000985e-05, 4.5375000000000276e-05, 4.599999999999743e-05, 4.531899999999853e-05, 4.527699999999982e-05, 4.5611000000000956e-05, 4.529099999999939e-05, 4.620799999999897e-05, 4.604199999999961e-05, 4.620800000000244e-05, 4.5847000000001636e-05, 4.554199999999911e-05, 4.580599999999893e-05, 4.605599999999918e-05, 4.558400000000129e-05, 4.533400000000104e-05, 4.586200000000068e-05, 4.533400000000104e-05, 4.5709000000001415e-05, 4.5987000000000805e-05, 4.525000000000015e-05, 4.608299999999885e-05, 4.611099999999799e-05]</msg>
<status status="PASS" starttime="20201030 18:28:28.559" endtime="20201030 18:28:28.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.554" endtime="20201030 18:28:28.562"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.565" endtime="20201030 18:28:28.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.564" endtime="20201030 18:28:28.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.563" endtime="20201030 18:28:28.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.205" endtime="20201030 18:28:28.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.205" endtime="20201030 18:28:28.587"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.595" endtime="20201030 18:28:28.612"></status>
</kw>
<msg timestamp="20201030 18:28:28.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.594" endtime="20201030 18:28:28.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.613" endtime="20201030 18:28:28.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.616" endtime="20201030 18:28:28.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.591" endtime="20201030 18:28:28.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.589" endtime="20201030 18:28:28.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.625" endtime="20201030 18:28:28.912"></status>
</kw>
<msg timestamp="20201030 18:28:28.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022826125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.623" endtime="20201030 18:28:28.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022826125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.916" endtime="20201030 18:28:28.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.925" endtime="20201030 18:28:28.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.621" endtime="20201030 18:28:28.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.619" endtime="20201030 18:28:28.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:28.931" level="INFO">${RESULT} = [{'diff': 4.6389000000000846e-05}, {'diff': 4.6389000000000846e-05}, {'diff': 4.709699999999942e-05}, {'diff': 4.654200000000011e-05}, {'diff': 4.723599999999911e-05}, {'diff': 4.708399999999932e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:28.928" endtime="20201030 18:28:28.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:28.935" level="INFO">${ACCURACY} = {'diff': [4.6389000000000846e-05, 4.6389000000000846e-05, 4.709699999999942e-05, 4.654200000000011e-05, 4.723599999999911e-05, 4.708399999999932e-05, 4.711099999999899e-05, 4.687499999999831e-05, 4.69...</msg>
<status status="PASS" starttime="20201030 18:28:28.932" endtime="20201030 18:28:28.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.939" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 18:28:28.938" endtime="20201030 18:28:28.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.942" level="INFO">VALUE: [4.6389000000000846e-05, 4.6389000000000846e-05, 4.709699999999942e-05, 4.654200000000011e-05, 4.723599999999911e-05, 4.708399999999932e-05, 4.711099999999899e-05, 4.687499999999831e-05, 4.690200000000144e-05, 4.648599999999836e-05, 4.629099999999692e-05, 4.651400000000097e-05, 4.723599999999911e-05, 4.702800000000104e-05, 4.6639000000001096e-05, 4.672199999999904e-05, 4.722199999999954e-05, 4.654200000000011e-05, 4.6375000000001276e-05, 4.6917000000000486e-05, 4.6944999999999626e-05, 4.6430999999999556e-05, 4.708299999999985e-05, 4.6375000000001276e-05, 4.640299999999695e-05, 4.691600000000101e-05, 4.645800000000269e-05, 4.7111000000002456e-05, 4.705600000000018e-05, 4.643000000000008e-05, 4.709699999999942e-05, 4.6889000000001346e-05, 4.6917000000000486e-05, 4.676400000000122e-05, 4.7111000000002456e-05, 4.687499999999831e-05, 4.7167000000000736e-05, 4.708399999999932e-05, 4.6639000000001096e-05, 4.684799999999864e-05, 4.662499999999806e-05, 4.705500000000071e-05, 4.661099999999849e-05, 4.641600000000051e-05, 4.6625000000001526e-05, 4.65000000000014e-05, 4.630499999999996e-05, 4.726399999999825e-05, 4.71940000000004e-05, 4.632000000000247e-05]</msg>
<status status="PASS" starttime="20201030 18:28:28.941" endtime="20201030 18:28:28.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.936" endtime="20201030 18:28:28.943"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.947" endtime="20201030 18:28:28.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.945" endtime="20201030 18:28:28.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.944" endtime="20201030 18:28:28.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.588" endtime="20201030 18:28:28.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.587" endtime="20201030 18:28:28.968"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.976" endtime="20201030 18:28:28.994"></status>
</kw>
<msg timestamp="20201030 18:28:28.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.975" endtime="20201030 18:28:28.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.996" endtime="20201030 18:28:28.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.998" endtime="20201030 18:28:29.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.972" endtime="20201030 18:28:29.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.970" endtime="20201030 18:28:29.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.007" endtime="20201030 18:28:29.292"></status>
</kw>
<msg timestamp="20201030 18:28:29.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022793222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022840986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.006" endtime="20201030 18:28:29.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022793222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022840986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.296" endtime="20201030 18:28:29.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.305" endtime="20201030 18:28:29.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.003" endtime="20201030 18:28:29.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.001" endtime="20201030 18:28:29.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:29.311" level="INFO">${RESULT} = [{'diff': 4.776400000000222e-05}, {'diff': 4.781900000000103e-05}, {'diff': 4.81529999999987e-05}, {'diff': 4.734699999999967e-05}, {'diff': 4.811099999999999e-05}, {'diff': 4.798599999999986e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:29.308" endtime="20201030 18:28:29.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:29.315" level="INFO">${ACCURACY} = {'diff': [4.776400000000222e-05, 4.781900000000103e-05, 4.81529999999987e-05, 4.734699999999967e-05, 4.811099999999999e-05, 4.798599999999986e-05, 4.7917000000001486e-05, 4.811200000000293e-05, 4.8166...</msg>
<status status="PASS" starttime="20201030 18:28:29.312" endtime="20201030 18:28:29.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.320" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 18:28:29.319" endtime="20201030 18:28:29.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.322" level="INFO">VALUE: [4.776400000000222e-05, 4.781900000000103e-05, 4.81529999999987e-05, 4.734699999999967e-05, 4.811099999999999e-05, 4.798599999999986e-05, 4.7917000000001486e-05, 4.811200000000293e-05, 4.816699999999827e-05, 4.729200000000086e-05, 4.813899999999913e-05, 4.765199999999872e-05, 4.812499999999956e-05, 4.820800000000097e-05, 4.744400000000065e-05, 4.812499999999956e-05, 4.81529999999987e-05, 4.775000000000265e-05, 4.729199999999739e-05, 4.754200000000111e-05, 4.7403000000001416e-05, 4.804200000000161e-05, 4.7389000000001846e-05, 4.752800000000154e-05, 4.740199999999847e-05, 4.761199999999896e-05, 4.790199999999897e-05, 4.745800000000022e-05, 4.797200000000029e-05, 4.815200000000269e-05, 4.752800000000154e-05, 4.794400000000115e-05, 4.7889000000002346e-05, 4.813899999999913e-05, 4.786099999999974e-05, 4.755599999999721e-05, 4.76529999999982e-05, 4.78200000000005e-05, 4.811099999999999e-05, 4.748600000000283e-05, 4.7417000000000986e-05, 4.749999999999893e-05, 4.802700000000257e-05, 4.736099999999924e-05, 4.811099999999999e-05, 4.809700000000042e-05, 4.788899999999888e-05, 4.808299999999738e-05, 4.813899999999913e-05, 4.824999999999968e-05]</msg>
<status status="PASS" starttime="20201030 18:28:29.321" endtime="20201030 18:28:29.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.316" endtime="20201030 18:28:29.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:29.328" endtime="20201030 18:28:29.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.327" endtime="20201030 18:28:29.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.325" endtime="20201030 18:28:29.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.968" endtime="20201030 18:28:29.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.968" endtime="20201030 18:28:29.349"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.357" endtime="20201030 18:28:29.375"></status>
</kw>
<msg timestamp="20201030 18:28:29.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.356" endtime="20201030 18:28:29.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.376" endtime="20201030 18:28:29.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.379" endtime="20201030 18:28:29.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.353" endtime="20201030 18:28:29.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.351" endtime="20201030 18:28:29.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.388" endtime="20201030 18:28:29.674"></status>
</kw>
<msg timestamp="20201030 18:28:29.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021656264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021705111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.387" endtime="20201030 18:28:29.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021656264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021705111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.679" endtime="20201030 18:28:29.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.687" endtime="20201030 18:28:29.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.384" endtime="20201030 18:28:29.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.382" endtime="20201030 18:28:29.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:29.693" level="INFO">${RESULT} = [{'diff': 4.88469999999977e-05}, {'diff': 4.842999999999861e-05}, {'diff': 4.917999999999936e-05}, {'diff': 4.880600000000193e-05}, {'diff': 4.845800000000122e-05}, {'diff': 4.881900000000203e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:29.690" endtime="20201030 18:28:29.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:29.698" level="INFO">${ACCURACY} = {'diff': [4.88469999999977e-05, 4.842999999999861e-05, 4.917999999999936e-05, 4.880600000000193e-05, 4.845800000000122e-05, 4.881900000000203e-05, 4.9014e-05, 4.862500000000006e-05, 4.854200000000211e...</msg>
<status status="PASS" starttime="20201030 18:28:29.694" endtime="20201030 18:28:29.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.703" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 18:28:29.702" endtime="20201030 18:28:29.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.705" level="INFO">VALUE: [4.88469999999977e-05, 4.842999999999861e-05, 4.917999999999936e-05, 4.880600000000193e-05, 4.845800000000122e-05, 4.881900000000203e-05, 4.9014e-05, 4.862500000000006e-05, 4.854200000000211e-05, 4.919499999999841e-05, 4.891699999999902e-05, 4.861099999999702e-05, 4.863899999999963e-05, 4.854199999999864e-05, 4.901300000000053e-05, 4.881900000000203e-05, 4.904099999999967e-05, 4.875000000000018e-05, 4.859700000000092e-05, 4.91529999999997e-05, 4.897200000000129e-05, 4.831899999999806e-05, 4.830600000000143e-05, 4.830600000000143e-05, 4.857000000000125e-05, 4.861100000000049e-05, 4.875000000000018e-05, 4.830499999999849e-05, 4.824999999999968e-05, 4.86529999999992e-05, 4.830500000000196e-05, 4.912500000000056e-05, 4.861100000000049e-05, 4.880499999999899e-05, 4.845800000000122e-05, 4.855500000000221e-05, 4.841699999999852e-05, 4.923600000000111e-05, 4.893099999999859e-05, 4.836100000000024e-05, 4.893099999999859e-05, 4.877799999999932e-05, 4.877799999999932e-05, 4.8959000000001196e-05, 4.908300000000185e-05, 4.8320000000001e-05, 4.851300000000003e-05, 4.837499999999981e-05, 4.831900000000153e-05, 4.855499999999874e-05]</msg>
<status status="PASS" starttime="20201030 18:28:29.704" endtime="20201030 18:28:29.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.699" endtime="20201030 18:28:29.706"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:29.710" endtime="20201030 18:28:29.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.708" endtime="20201030 18:28:29.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.707" endtime="20201030 18:28:29.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.350" endtime="20201030 18:28:29.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.349" endtime="20201030 18:28:29.731"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.739" endtime="20201030 18:28:29.756"></status>
</kw>
<msg timestamp="20201030 18:28:29.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.738" endtime="20201030 18:28:29.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.757" endtime="20201030 18:28:29.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.760" endtime="20201030 18:28:29.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.735" endtime="20201030 18:28:29.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.733" endtime="20201030 18:28:29.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.769" endtime="20201030 18:28:30.057"></status>
</kw>
<msg timestamp="20201030 18:28:30.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021690222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.767" endtime="20201030 18:28:30.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021690222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.062" endtime="20201030 18:28:30.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.070" endtime="20201030 18:28:30.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.765" endtime="20201030 18:28:30.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.763" endtime="20201030 18:28:30.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:30.077" level="INFO">${RESULT} = [{'diff': 5.007000000000275e-05}, {'diff': 4.955600000000268e-05}, {'diff': 4.9986999999997866e-05}, {'diff': 4.933299999999863e-05}, {'diff': 4.963900000000063e-05}, {'diff': 4.956899999999931e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:30.074" endtime="20201030 18:28:30.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:30.081" level="INFO">${ACCURACY} = {'diff': [5.007000000000275e-05, 4.955600000000268e-05, 4.9986999999997866e-05, 4.933299999999863e-05, 4.963900000000063e-05, 4.956899999999931e-05, 4.931899999999906e-05, 4.997199999999882e-05, 5.024...</msg>
<status status="PASS" starttime="20201030 18:28:30.078" endtime="20201030 18:28:30.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.086" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 18:28:30.085" endtime="20201030 18:28:30.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.088" level="INFO">VALUE: [5.007000000000275e-05, 4.955600000000268e-05, 4.9986999999997866e-05, 4.933299999999863e-05, 4.963900000000063e-05, 4.956899999999931e-05, 4.931899999999906e-05, 4.997199999999882e-05, 5.024999999999821e-05, 5.009699999999895e-05, 4.931899999999906e-05, 5.0014000000001e-05, 4.947199999999832e-05, 4.944499999999866e-05, 4.955599999999921e-05, 4.954199999999964e-05, 5.0236999999998116e-05, 4.961200000000096e-05, 4.93469999999982e-05, 4.945800000000222e-05, 5.020899999999898e-05, 5.009700000000242e-05, 5.026399999999778e-05, 4.986100000000174e-05, 4.986100000000174e-05, 4.930599999999896e-05, 4.934700000000167e-05, 4.973599999999814e-05, 4.987500000000131e-05, 4.954199999999964e-05, 5.005599999999971e-05, 4.979199999999989e-05, 4.96530000000002e-05, 4.959800000000139e-05, 4.931899999999906e-05, 4.966600000000029e-05, 5.01530000000007e-05, 5.005500000000024e-05, 4.980499999999999e-05, 4.941699999999952e-05, 4.938900000000038e-05, 5.011100000000199e-05, 4.988900000000088e-05, 4.9320000000002e-05, 4.959700000000192e-05, 5.004200000000014e-05, 5.005599999999971e-05, 4.958399999999835e-05, 4.981999999999903e-05, 4.948600000000136e-05]</msg>
<status status="PASS" starttime="20201030 18:28:30.087" endtime="20201030 18:28:30.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.082" endtime="20201030 18:28:30.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:30.093" endtime="20201030 18:28:30.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.092" endtime="20201030 18:28:30.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.091" endtime="20201030 18:28:30.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.732" endtime="20201030 18:28:30.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.731" endtime="20201030 18:28:30.114"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.123" endtime="20201030 18:28:30.141"></status>
</kw>
<msg timestamp="20201030 18:28:30.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.121" endtime="20201030 18:28:30.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.143" endtime="20201030 18:28:30.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.146" endtime="20201030 18:28:30.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.119" endtime="20201030 18:28:30.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.117" endtime="20201030 18:28:30.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.155" endtime="20201030 18:28:30.461"></status>
</kw>
<msg timestamp="20201030 18:28:30.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023261833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023312833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.153" endtime="20201030 18:28:30.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023261833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023312833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.466" endtime="20201030 18:28:30.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.474" endtime="20201030 18:28:30.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.151" endtime="20201030 18:28:30.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.149" endtime="20201030 18:28:30.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:30.480" level="INFO">${RESULT} = [{'diff': 5.100000000000243e-05}, {'diff': 5.075000000000218e-05}, {'diff': 5.031900000000006e-05}, {'diff': 5.050000000000193e-05}, {'diff': 5.087500000000231e-05}, {'diff': 5.062499999999859e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:30.477" endtime="20201030 18:28:30.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:30.484" level="INFO">${ACCURACY} = {'diff': [5.100000000000243e-05, 5.075000000000218e-05, 5.031900000000006e-05, 5.050000000000193e-05, 5.087500000000231e-05, 5.062499999999859e-05, 5.090299999999798e-05, 5.030599999999996e-05, 5.0611...</msg>
<status status="PASS" starttime="20201030 18:28:30.481" endtime="20201030 18:28:30.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.489" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 18:28:30.488" endtime="20201030 18:28:30.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.491" level="INFO">VALUE: [5.100000000000243e-05, 5.075000000000218e-05, 5.031900000000006e-05, 5.050000000000193e-05, 5.087500000000231e-05, 5.062499999999859e-05, 5.090299999999798e-05, 5.030599999999996e-05, 5.061100000000249e-05, 5.041699999999705e-05, 5.065299999999773e-05, 5.034799999999867e-05, 5.08339999999996e-05, 5.1151999999998754e-05, 5.1014000000002e-05, 5.068000000000086e-05, 5.063899999999816e-05, 5.045899999999923e-05, 5.041700000000052e-05, 5.055500000000074e-05, 5.098599999999939e-05, 5.075000000000218e-05, 5.061099999999902e-05, 5.08469999999997e-05, 5.052800000000107e-05, 5.062499999999859e-05, 5.036099999999877e-05, 5.040299999999748e-05, 5.0402000000001473e-05, 5.0402000000001473e-05, 5.077700000000185e-05, 5.118000000000136e-05, 5.048599999999889e-05, 5.038900000000138e-05, 5.102800000000157e-05, 5.06669999999973e-05, 5.111099999999952e-05, 5.11669999999978e-05, 5.063900000000163e-05, 5.027800000000082e-05, 5.05140000000015e-05, 5.118100000000084e-05, 5.119400000000093e-05, 5.069400000000043e-05, 5.105500000000124e-05, 5.1151999999998754e-05, 5.119400000000093e-05, 5.061099999999902e-05, 5.083300000000013e-05, 5.069400000000043e-05]</msg>
<status status="PASS" starttime="20201030 18:28:30.490" endtime="20201030 18:28:30.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.485" endtime="20201030 18:28:30.493"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:30.497" endtime="20201030 18:28:30.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.495" endtime="20201030 18:28:30.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.494" endtime="20201030 18:28:30.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.115" endtime="20201030 18:28:30.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.114" endtime="20201030 18:28:30.517"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.526" endtime="20201030 18:28:30.544"></status>
</kw>
<msg timestamp="20201030 18:28:30.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.524" endtime="20201030 18:28:30.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.545" endtime="20201030 18:28:30.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.548" endtime="20201030 18:28:30.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.522" endtime="20201030 18:28:30.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.520" endtime="20201030 18:28:30.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.556" endtime="20201030 18:28:30.842"></status>
</kw>
<msg timestamp="20201030 18:28:30.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021914681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021966736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.555" endtime="20201030 18:28:30.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021914681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021966736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.846" endtime="20201030 18:28:30.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.854" endtime="20201030 18:28:30.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.552" endtime="20201030 18:28:30.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.551" endtime="20201030 18:28:30.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:30.861" level="INFO">${RESULT} = [{'diff': 5.205500000000224e-05}, {'diff': 5.134799999999967e-05}, {'diff': 5.219499999999794e-05}, {'diff': 5.137499999999934e-05}, {'diff': 5.190299999999898e-05}, {'diff': 5.13340000000001e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:30.858" endtime="20201030 18:28:30.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:30.868" level="INFO">${ACCURACY} = {'diff': [5.205500000000224e-05, 5.134799999999967e-05, 5.219499999999794e-05, 5.137499999999934e-05, 5.190299999999898e-05, 5.13340000000001e-05, 5.130600000000096e-05, 5.156900000000131e-05, 5.19029...</msg>
<status status="PASS" starttime="20201030 18:28:30.862" endtime="20201030 18:28:30.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.873" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 18:28:30.872" endtime="20201030 18:28:30.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.875" level="INFO">VALUE: [5.205500000000224e-05, 5.134799999999967e-05, 5.219499999999794e-05, 5.137499999999934e-05, 5.190299999999898e-05, 5.13340000000001e-05, 5.130600000000096e-05, 5.156900000000131e-05, 5.190299999999898e-05, 5.211099999999705e-05, 5.156899999999784e-05, 5.169400000000143e-05, 5.148599999999989e-05, 5.198600000000039e-05, 5.173600000000014e-05, 5.216700000000227e-05, 5.174999999999971e-05, 5.198600000000039e-05, 5.148599999999989e-05, 5.168100000000134e-05, 5.169500000000091e-05, 5.212500000000009e-05, 5.18340000000006e-05, 5.212500000000009e-05, 5.183300000000113e-05, 5.2165999999999324e-05, 5.177699999999938e-05, 5.174999999999971e-05, 5.187499999999984e-05, 5.187499999999984e-05, 5.145800000000075e-05, 5.180500000000199e-05, 5.181899999999809e-05, 5.162500000000306e-05, 5.199999999999996e-05, 5.190299999999898e-05, 5.177800000000232e-05, 5.173600000000014e-05, 5.162499999999959e-05, 5.199999999999996e-05, 5.187499999999984e-05, 5.145800000000075e-05, 5.181900000000156e-05, 5.18470000000007e-05, 5.130499999999802e-05, 5.168099999999787e-05, 5.226399999999978e-05, 5.216700000000227e-05, 5.161100000000002e-05, 5.176400000000275e-05]</msg>
<status status="PASS" starttime="20201030 18:28:30.874" endtime="20201030 18:28:30.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.869" endtime="20201030 18:28:30.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:30.880" endtime="20201030 18:28:30.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.879" endtime="20201030 18:28:30.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.877" endtime="20201030 18:28:30.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.518" endtime="20201030 18:28:30.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.518" endtime="20201030 18:28:30.901"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.909" endtime="20201030 18:28:30.926"></status>
</kw>
<msg timestamp="20201030 18:28:30.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.908" endtime="20201030 18:28:30.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.928" endtime="20201030 18:28:30.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.930" endtime="20201030 18:28:30.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.905" endtime="20201030 18:28:30.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.903" endtime="20201030 18:28:30.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.939" endtime="20201030 18:28:31.226"></status>
</kw>
<msg timestamp="20201030 18:28:31.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021701514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021754611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.937" endtime="20201030 18:28:31.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021701514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021754611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.230" endtime="20201030 18:28:31.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.239" endtime="20201030 18:28:31.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.935" endtime="20201030 18:28:31.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.933" endtime="20201030 18:28:31.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:31.245" level="INFO">${RESULT} = [{'diff': 5.309699999999848e-05}, {'diff': 5.311099999999805e-05}, {'diff': 5.3235999999998174e-05}, {'diff': 5.2471999999997854e-05}, {'diff': 5.283300000000213e-05}, {'diff': 5.28609999999978e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:31.242" endtime="20201030 18:28:31.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:31.249" level="INFO">${ACCURACY} = {'diff': [5.309699999999848e-05, 5.311099999999805e-05, 5.3235999999998174e-05, 5.2471999999997854e-05, 5.283300000000213e-05, 5.28609999999978e-05, 5.283399999999813e-05, 5.258400000000135e-05, 5.315...</msg>
<status status="PASS" starttime="20201030 18:28:31.246" endtime="20201030 18:28:31.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.253" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 18:28:31.252" endtime="20201030 18:28:31.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.256" level="INFO">VALUE: [5.309699999999848e-05, 5.311099999999805e-05, 5.3235999999998174e-05, 5.2471999999997854e-05, 5.283300000000213e-05, 5.28609999999978e-05, 5.283399999999813e-05, 5.258400000000135e-05, 5.3152000000000754e-05, 5.318099999999937e-05, 5.3137999999997715e-05, 5.30280000000001e-05, 5.265299999999973e-05, 5.3235999999998174e-05, 5.313900000000066e-05, 5.300000000000096e-05, 5.255600000000221e-05, 5.258300000000188e-05, 5.308400000000185e-05, 5.244499999999819e-05, 5.244499999999819e-05, 5.305599999999924e-05, 5.322299999999808e-05, 5.325000000000121e-05, 5.311100000000152e-05, 5.312500000000109e-05, 5.2735999999997674e-05, 5.302700000000063e-05, 5.237500000000034e-05, 5.230500000000249e-05, 5.306900000000281e-05, 5.2929999999999644e-05, 5.280500000000299e-05, 5.262500000000059e-05, 5.273600000000114e-05, 5.294500000000216e-05, 5.31669999999998e-05, 5.250000000000046e-05, 5.2457999999998284e-05, 5.2999999999997494e-05, 5.3221999999998604e-05, 5.297200000000182e-05, 5.231900000000206e-05, 5.259699999999798e-05, 5.318100000000284e-05, 5.291699999999955e-05, 5.3221999999998604e-05, 5.268099999999887e-05, 5.255600000000221e-05, 5.232000000000153e-05]</msg>
<status status="PASS" starttime="20201030 18:28:31.254" endtime="20201030 18:28:31.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.250" endtime="20201030 18:28:31.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:31.261" endtime="20201030 18:28:31.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.259" endtime="20201030 18:28:31.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.258" endtime="20201030 18:28:31.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.902" endtime="20201030 18:28:31.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.901" endtime="20201030 18:28:31.281"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.290" endtime="20201030 18:28:31.308"></status>
</kw>
<msg timestamp="20201030 18:28:31.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.288" endtime="20201030 18:28:31.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.310" endtime="20201030 18:28:31.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.312" endtime="20201030 18:28:31.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.286" endtime="20201030 18:28:31.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.284" endtime="20201030 18:28:31.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.321" endtime="20201030 18:28:31.607"></status>
</kw>
<msg timestamp="20201030 18:28:31.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022611167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.320" endtime="20201030 18:28:31.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022611167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.611" endtime="20201030 18:28:31.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.619" endtime="20201030 18:28:31.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.317" endtime="20201030 18:28:31.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.315" endtime="20201030 18:28:31.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:31.626" level="INFO">${RESULT} = [{'diff': 5.330600000000296e-05}, {'diff': 5.387499999999837e-05}, {'diff': 5.404099999999773e-05}, {'diff': 5.350000000000146e-05}, {'diff': 5.3249999999997744e-05}, {'diff': 5.348600000000189e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:31.623" endtime="20201030 18:28:31.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:31.630" level="INFO">${ACCURACY} = {'diff': [5.330600000000296e-05, 5.387499999999837e-05, 5.404099999999773e-05, 5.350000000000146e-05, 5.3249999999997744e-05, 5.348600000000189e-05, 5.356899999999984e-05, 5.383299999999966e-05, 5.356...</msg>
<status status="PASS" starttime="20201030 18:28:31.627" endtime="20201030 18:28:31.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.635" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 18:28:31.634" endtime="20201030 18:28:31.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.637" level="INFO">VALUE: [5.330600000000296e-05, 5.387499999999837e-05, 5.404099999999773e-05, 5.350000000000146e-05, 5.3249999999997744e-05, 5.348600000000189e-05, 5.356899999999984e-05, 5.383299999999966e-05, 5.356899999999984e-05, 5.330599999999949e-05, 5.3457999999999284e-05, 5.373600000000214e-05, 5.3749999999998244e-05, 5.330500000000002e-05, 5.345899999999876e-05, 5.3652000000001254e-05, 5.329100000000045e-05, 5.359699999999898e-05, 5.347200000000232e-05, 5.40410000000012e-05, 5.338899999999744e-05, 5.3721999999999104e-05, 5.330599999999949e-05, 5.3457999999999284e-05, 5.359699999999898e-05, 5.419499999999994e-05, 5.415300000000123e-05, 5.340299999999701e-05, 5.415299999999776e-05, 5.423600000000264e-05, 5.373700000000162e-05, 5.380599999999999e-05, 5.3749999999998244e-05, 5.3930000000000644e-05, 5.412499999999862e-05, 5.412500000000209e-05, 5.356899999999984e-05, 5.381900000000009e-05, 5.379200000000042e-05, 5.404200000000067e-05, 5.394499999999969e-05, 5.384699999999923e-05, 5.327800000000035e-05, 5.3693999999999964e-05, 5.354200000000017e-05, 5.338900000000091e-05, 5.337499999999787e-05, 5.3637999999998215e-05, 5.426400000000178e-05, 5.33340000000021e-05]</msg>
<status status="PASS" starttime="20201030 18:28:31.636" endtime="20201030 18:28:31.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.631" endtime="20201030 18:28:31.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:31.643" endtime="20201030 18:28:31.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.641" endtime="20201030 18:28:31.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.640" endtime="20201030 18:28:31.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.282" endtime="20201030 18:28:31.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.282" endtime="20201030 18:28:31.663"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.672" endtime="20201030 18:28:31.690"></status>
</kw>
<msg timestamp="20201030 18:28:31.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.670" endtime="20201030 18:28:31.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.691" endtime="20201030 18:28:31.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.694" endtime="20201030 18:28:31.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.668" endtime="20201030 18:28:31.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.666" endtime="20201030 18:28:31.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.703" endtime="20201030 18:28:31.988"></status>
</kw>
<msg timestamp="20201030 18:28:31.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021720528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021775208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.701" endtime="20201030 18:28:31.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021720528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021775208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.992" endtime="20201030 18:28:32.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.000" endtime="20201030 18:28:32.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.699" endtime="20201030 18:28:32.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.697" endtime="20201030 18:28:32.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:32.007" level="INFO">${RESULT} = [{'diff': 5.4680000000001394e-05}, {'diff': 5.462499999999912e-05}, {'diff': 5.463900000000216e-05}, {'diff': 5.515299999999876e-05}, {'diff': 5.436100000000277e-05}, {'diff': 5.4708000000000534e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:32.004" endtime="20201030 18:28:32.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:32.012" level="INFO">${ACCURACY} = {'diff': [5.4680000000001394e-05, 5.462499999999912e-05, 5.463900000000216e-05, 5.515299999999876e-05, 5.436100000000277e-05, 5.4708000000000534e-05, 5.491699999999808e-05, 5.430599999999702e-05, 5.51...</msg>
<status status="PASS" starttime="20201030 18:28:32.008" endtime="20201030 18:28:32.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.016" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 18:28:32.015" endtime="20201030 18:28:32.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.019" level="INFO">VALUE: [5.4680000000001394e-05, 5.462499999999912e-05, 5.463900000000216e-05, 5.515299999999876e-05, 5.436100000000277e-05, 5.4708000000000534e-05, 5.491699999999808e-05, 5.430599999999702e-05, 5.51809999999979e-05, 5.440299999999801e-05, 5.454200000000117e-05, 5.4887999999999465e-05, 5.50549999999983e-05, 5.501299999999959e-05, 5.511100000000005e-05, 5.501400000000253e-05, 5.475000000000271e-05, 5.5208000000001034e-05, 5.484700000000023e-05, 5.488899999999894e-05, 5.455599999999727e-05, 5.500000000000296e-05, 5.512499999999962e-05, 5.437499999999887e-05, 5.511100000000005e-05, 5.5207999999997565e-05, 5.515299999999876e-05, 5.431900000000059e-05, 5.456899999999737e-05, 5.5151999999999285e-05, 5.463899999999869e-05, 5.487499999999937e-05, 5.455599999999727e-05, 5.440299999999801e-05, 5.4985999999999924e-05, 5.429200000000092e-05, 5.4471999999999854e-05, 5.480499999999805e-05, 5.462499999999912e-05, 5.487499999999937e-05, 5.434699999999973e-05, 5.462499999999912e-05, 5.463899999999869e-05, 5.427699999999841e-05, 5.479099999999848e-05, 5.441699999999758e-05, 5.4499999999998994e-05, 5.486100000000327e-05, 5.4708000000000534e-05, 5.444500000000019e-05]</msg>
<status status="PASS" starttime="20201030 18:28:32.017" endtime="20201030 18:28:32.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.013" endtime="20201030 18:28:32.020"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:32.024" endtime="20201030 18:28:32.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.022" endtime="20201030 18:28:32.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.021" endtime="20201030 18:28:32.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.664" endtime="20201030 18:28:32.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.664" endtime="20201030 18:28:32.044"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.053" endtime="20201030 18:28:32.070"></status>
</kw>
<msg timestamp="20201030 18:28:32.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.051" endtime="20201030 18:28:32.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.072" endtime="20201030 18:28:32.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.074" endtime="20201030 18:28:32.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.049" endtime="20201030 18:28:32.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.047" endtime="20201030 18:28:32.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.083" endtime="20201030 18:28:32.370"></status>
</kw>
<msg timestamp="20201030 18:28:32.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.082" endtime="20201030 18:28:32.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.374" endtime="20201030 18:28:32.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.383" endtime="20201030 18:28:32.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.079" endtime="20201030 18:28:32.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.077" endtime="20201030 18:28:32.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:32.390" level="INFO">${RESULT} = [{'diff': 5.5736000000000674e-05}, {'diff': 5.58610000000008e-05}, {'diff': 5.5888000000000465e-05}, {'diff': 5.54869999999999e-05}, {'diff': 5.59870000000004e-05}, {'diff': 5.588899999999994e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:32.386" endtime="20201030 18:28:32.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:32.394" level="INFO">${ACCURACY} = {'diff': [5.5736000000000674e-05, 5.58610000000008e-05, 5.5888000000000465e-05, 5.54869999999999e-05, 5.59870000000004e-05, 5.588899999999994e-05, 5.559700000000098e-05, 5.531900000000159e-05, 5.55420...</msg>
<status status="PASS" starttime="20201030 18:28:32.390" endtime="20201030 18:28:32.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.398" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 18:28:32.397" endtime="20201030 18:28:32.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.400" level="INFO">VALUE: [5.5736000000000674e-05, 5.58610000000008e-05, 5.5888000000000465e-05, 5.54869999999999e-05, 5.59870000000004e-05, 5.588899999999994e-05, 5.559700000000098e-05, 5.531900000000159e-05, 5.554200000000217e-05, 5.6277999999999884e-05, 5.5513999999999564e-05, 5.559700000000098e-05, 5.6000000000000494e-05, 5.563899999999969e-05, 5.6055999999998773e-05, 5.5486000000000424e-05, 5.5736000000000674e-05, 5.555600000000174e-05, 5.5791999999998954e-05, 5.533299999999769e-05, 5.531900000000159e-05, 5.608299999999844e-05, 5.5763999999999814e-05, 5.605500000000277e-05, 5.58610000000008e-05, 5.5457999999997815e-05, 5.61670000000028e-05, 5.538899999999944e-05, 5.6000000000000494e-05, 5.595899999999779e-05, 5.611099999999758e-05, 5.558300000000141e-05, 5.570900000000101e-05, 5.611099999999758e-05, 5.5415999999999105e-05, 5.570900000000101e-05, 5.5430000000002144e-05, 5.5722000000001104e-05, 5.534700000000073e-05, 5.6194000000002464e-05, 5.527800000000235e-05, 5.608399999999791e-05, 5.619500000000194e-05, 5.612500000000062e-05, 5.5277999999998884e-05, 5.5763999999999814e-05, 5.547300000000033e-05, 5.533299999999769e-05, 5.5444000000001714e-05, 5.58610000000008e-05]</msg>
<status status="PASS" starttime="20201030 18:28:32.399" endtime="20201030 18:28:32.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.394" endtime="20201030 18:28:32.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:32.410" endtime="20201030 18:28:32.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.408" endtime="20201030 18:28:32.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.407" endtime="20201030 18:28:32.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.045" endtime="20201030 18:28:32.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.044" endtime="20201030 18:28:32.430"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.439" endtime="20201030 18:28:32.457"></status>
</kw>
<msg timestamp="20201030 18:28:32.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.438" endtime="20201030 18:28:32.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.459" endtime="20201030 18:28:32.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.461" endtime="20201030 18:28:32.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.435" endtime="20201030 18:28:32.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.433" endtime="20201030 18:28:32.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.470" endtime="20201030 18:28:32.755"></status>
</kw>
<msg timestamp="20201030 18:28:32.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022900583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.469" endtime="20201030 18:28:32.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022900583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.759" endtime="20201030 18:28:32.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.768" endtime="20201030 18:28:32.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.466" endtime="20201030 18:28:32.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.465" endtime="20201030 18:28:32.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:32.774" level="INFO">${RESULT} = [{'diff': 5.6651999999997316e-05}, {'diff': 5.645900000000176e-05}, {'diff': 5.71809999999999e-05}, {'diff': 5.7263999999997844e-05}, {'diff': 5.7165999999997386e-05}, {'diff': 5.654100000000023e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:32.771" endtime="20201030 18:28:32.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:32.778" level="INFO">${ACCURACY} = {'diff': [5.6651999999997316e-05, 5.645900000000176e-05, 5.71809999999999e-05, 5.7263999999997844e-05, 5.7165999999997386e-05, 5.654100000000023e-05, 5.680500000000005e-05, 5.7264000000001314e-05, 5.6...</msg>
<status status="PASS" starttime="20201030 18:28:32.775" endtime="20201030 18:28:32.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.783" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 18:28:32.781" endtime="20201030 18:28:32.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.785" level="INFO">VALUE: [5.6651999999997316e-05, 5.645900000000176e-05, 5.71809999999999e-05, 5.7263999999997844e-05, 5.7165999999997386e-05, 5.654100000000023e-05, 5.680500000000005e-05, 5.7264000000001314e-05, 5.6735999999998205e-05, 5.7042000000000204e-05, 5.683299999999919e-05, 5.644499999999872e-05, 5.6429999999999675e-05, 5.7028000000000634e-05, 5.719499999999947e-05, 5.638900000000044e-05, 5.661199999999755e-05, 5.701299999999812e-05, 5.6402000000000535e-05, 5.6486000000001424e-05, 5.712499999999815e-05, 5.658299999999894e-05, 5.654200000000317e-05, 5.6443999999999245e-05, 5.6791999999999954e-05, 5.641699999999958e-05, 5.6750000000001244e-05, 5.659699999999851e-05, 5.68610000000018e-05, 5.6735999999998205e-05, 5.66809999999994e-05, 5.709699999999901e-05, 5.633300000000216e-05, 5.6930000000000175e-05, 5.638900000000044e-05, 5.662499999999765e-05, 5.712500000000162e-05, 5.6985999999998455e-05, 5.665300000000026e-05, 5.6985999999998455e-05, 5.640300000000001e-05, 5.720899999999904e-05, 5.7235999999998705e-05, 5.716700000000033e-05, 5.6666000000000355e-05, 5.683299999999919e-05, 5.713900000000119e-05, 5.665300000000026e-05, 5.7013999999997594e-05, 5.7264000000001314e-05]</msg>
<status status="PASS" starttime="20201030 18:28:32.784" endtime="20201030 18:28:32.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.779" endtime="20201030 18:28:32.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:32.791" endtime="20201030 18:28:32.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.789" endtime="20201030 18:28:32.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.788" endtime="20201030 18:28:32.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.431" endtime="20201030 18:28:32.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.431" endtime="20201030 18:28:32.811"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.820" endtime="20201030 18:28:32.837"></status>
</kw>
<msg timestamp="20201030 18:28:32.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.818" endtime="20201030 18:28:32.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.839" endtime="20201030 18:28:32.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.841" endtime="20201030 18:28:32.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.816" endtime="20201030 18:28:32.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.814" endtime="20201030 18:28:32.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.850" endtime="20201030 18:28:33.136"></status>
</kw>
<msg timestamp="20201030 18:28:33.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021677014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.849" endtime="20201030 18:28:33.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021677014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.140" endtime="20201030 18:28:33.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.148" endtime="20201030 18:28:33.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.846" endtime="20201030 18:28:33.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.844" endtime="20201030 18:28:33.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.155" level="INFO">${RESULT} = [{'diff': 5.8070000000000344e-05}, {'diff': 5.804099999999826e-05}, {'diff': 5.820900000000004e-05}, {'diff': 5.7471999999999385e-05}, {'diff': 5.740299999999754e-05}, {'diff': 5.762500000000212e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:33.152" endtime="20201030 18:28:33.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.160" level="INFO">${ACCURACY} = {'diff': [5.8070000000000344e-05, 5.804099999999826e-05, 5.820900000000004e-05, 5.7471999999999385e-05, 5.740299999999754e-05, 5.762500000000212e-05, 5.736099999999883e-05, 5.8235999999999705e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 18:28:33.156" endtime="20201030 18:28:33.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.164" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.163" endtime="20201030 18:28:33.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.167" level="INFO">VALUE: [5.8070000000000344e-05, 5.804099999999826e-05, 5.820900000000004e-05, 5.7471999999999385e-05, 5.740299999999754e-05, 5.762500000000212e-05, 5.736099999999883e-05, 5.8235999999999705e-05, 5.730500000000055e-05, 5.762499999999865e-05, 5.7666000000001355e-05, 5.765300000000126e-05, 5.813899999999872e-05, 5.733299999999969e-05, 5.7485999999998955e-05, 5.7444000000000245e-05, 5.7319999999999593e-05, 5.788899999999847e-05, 5.763899999999822e-05, 5.813899999999872e-05, 5.819500000000047e-05, 5.813899999999872e-05, 5.751299999999862e-05, 5.7999999999999025e-05, 5.731900000000012e-05, 5.80689999999974e-05, 5.7457999999999815e-05, 5.7556000000000274e-05, 5.7792000000000954e-05, 5.7735999999999205e-05, 5.806900000000087e-05, 5.7528000000001134e-05, 5.7319999999999593e-05, 5.7278000000000884e-05, 5.7985999999999455e-05, 5.7319999999999593e-05, 5.7721999999999635e-05, 5.8249999999999275e-05, 5.762499999999865e-05, 5.73610000000023e-05, 5.731900000000012e-05, 5.763899999999822e-05, 5.8042000000001204e-05, 5.8222000000000135e-05, 5.7500000000001994e-05, 5.783300000000019e-05, 5.772300000000258e-05, 5.788899999999847e-05, 5.7278000000000884e-05, 5.762499999999865e-05]</msg>
<status status="PASS" starttime="20201030 18:28:33.165" endtime="20201030 18:28:33.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.161" endtime="20201030 18:28:33.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.171" endtime="20201030 18:28:33.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.170" endtime="20201030 18:28:33.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.169" endtime="20201030 18:28:33.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.812" endtime="20201030 18:28:33.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.812" endtime="20201030 18:28:33.193"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.203" endtime="20201030 18:28:33.222"></status>
</kw>
<msg timestamp="20201030 18:28:33.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.201" endtime="20201030 18:28:33.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.223" endtime="20201030 18:28:33.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.226" endtime="20201030 18:28:33.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.198" endtime="20201030 18:28:33.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.196" endtime="20201030 18:28:33.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.235" endtime="20201030 18:28:33.522"></status>
</kw>
<msg timestamp="20201030 18:28:33.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025098528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025157625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.233" endtime="20201030 18:28:33.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025098528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025157625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.526" endtime="20201030 18:28:33.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.534" endtime="20201030 18:28:33.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.230" endtime="20201030 18:28:33.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.229" endtime="20201030 18:28:33.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.541" level="INFO">${RESULT} = [{'diff': 5.909700000000101e-05}, {'diff': 5.8693999999998026e-05}, {'diff': 5.890299999999904e-05}, {'diff': 5.840299999999854e-05}, {'diff': 5.840299999999854e-05}, {'diff': 5.836200000000277e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:33.538" endtime="20201030 18:28:33.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.545" level="INFO">${ACCURACY} = {'diff': [5.909700000000101e-05, 5.8693999999998026e-05, 5.890299999999904e-05, 5.840299999999854e-05, 5.840299999999854e-05, 5.836200000000277e-05, 5.8819999999997624e-05, 5.8834000000000664e-05, 5.8...</msg>
<status status="PASS" starttime="20201030 18:28:33.542" endtime="20201030 18:28:33.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.549" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.548" endtime="20201030 18:28:33.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.552" level="INFO">VALUE: [5.909700000000101e-05, 5.8693999999998026e-05, 5.890299999999904e-05, 5.840299999999854e-05, 5.840299999999854e-05, 5.836200000000277e-05, 5.8819999999997624e-05, 5.8834000000000664e-05, 5.884700000000076e-05, 5.831900000000112e-05, 5.83749999999994e-05, 5.8485999999999955e-05, 5.8277999999998414e-05, 5.9236000000000705e-05, 5.8541999999998234e-05, 5.8958000000001315e-05, 5.859700000000051e-05, 5.837500000000287e-05, 5.8777999999998914e-05, 5.923700000000018e-05, 5.8555999999997804e-05, 5.913899999999972e-05, 5.904100000000273e-05, 5.8694000000001495e-05, 5.9151999999999816e-05, 5.843099999999768e-05, 5.88749999999999e-05, 5.9098000000000483e-05, 5.8791999999998484e-05, 5.8263999999998844e-05, 5.880500000000205e-05, 5.8472000000000385e-05, 5.859700000000051e-05, 5.906900000000187e-05, 5.8347999999999733e-05, 5.9194999999998e-05, 5.9180000000002425e-05, 5.85550000000018e-05, 5.865299999999879e-05, 5.865299999999879e-05, 5.9277999999999414e-05, 5.880499999999858e-05, 5.9027999999999164e-05, 5.8791999999998484e-05, 5.8320000000000594e-05, 5.8569999999997374e-05, 5.912500000000015e-05, 5.8694000000001495e-05, 5.897300000000036e-05, 5.8401999999999066e-05]</msg>
<status status="PASS" starttime="20201030 18:28:33.550" endtime="20201030 18:28:33.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.546" endtime="20201030 18:28:33.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.557" endtime="20201030 18:28:33.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.555" endtime="20201030 18:28:33.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.554" endtime="20201030 18:28:33.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.194" endtime="20201030 18:28:33.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.193" endtime="20201030 18:28:33.577"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.586" endtime="20201030 18:28:33.605"></status>
</kw>
<msg timestamp="20201030 18:28:33.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.585" endtime="20201030 18:28:33.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.606" endtime="20201030 18:28:33.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.609" endtime="20201030 18:28:33.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.582" endtime="20201030 18:28:33.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.580" endtime="20201030 18:28:33.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.617" endtime="20201030 18:28:33.903"></status>
</kw>
<msg timestamp="20201030 18:28:33.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023153778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023213736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.616" endtime="20201030 18:28:33.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023153778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023213736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.908" endtime="20201030 18:28:33.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.916" endtime="20201030 18:28:33.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.613" endtime="20201030 18:28:33.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.612" endtime="20201030 18:28:33.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.923" level="INFO">${RESULT} = [{'diff': 5.9957999999998846e-05}, {'diff': 5.930500000000255e-05}, {'diff': 5.934699999999779e-05}, {'diff': 5.993099999999918e-05}, {'diff': 5.9665999999999886e-05}, {'diff': 5.965299999999979e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:33.919" endtime="20201030 18:28:33.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.927" level="INFO">${ACCURACY} = {'diff': [5.9957999999998846e-05, 5.930500000000255e-05, 5.934699999999779e-05, 5.993099999999918e-05, 5.9665999999999886e-05, 5.965299999999979e-05, 5.962500000000065e-05, 6.0014000000000595e-05, 5.9...</msg>
<status status="PASS" starttime="20201030 18:28:33.924" endtime="20201030 18:28:33.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.931" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.930" endtime="20201030 18:28:33.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.934" level="INFO">VALUE: [5.9957999999998846e-05, 5.930500000000255e-05, 5.934699999999779e-05, 5.993099999999918e-05, 5.9665999999999886e-05, 5.965299999999979e-05, 5.962500000000065e-05, 6.0014000000000595e-05, 5.9277999999999414e-05, 6.0014000000000595e-05, 5.9541999999999234e-05, 6.0097999999998014e-05, 5.9584000000001414e-05, 6.0055999999999304e-05, 5.955499999999933e-05, 5.9693999999999026e-05, 6.0193999999999526e-05, 5.9735999999997735e-05, 5.961100000000108e-05, 5.9791999999999484e-05, 6.0319999999999124e-05, 5.9514000000000095e-05, 6.020899999999857e-05, 5.9472000000001385e-05, 6.009699999999854e-05, 6.0138000000001246e-05, 5.998700000000093e-05, 5.9471999999997915e-05, 6.0138000000001246e-05, 6.012500000000115e-05, 5.961100000000108e-05, 5.980499999999958e-05, 5.931899999999865e-05, 6.015300000000029e-05, 6.0193999999999526e-05, 5.933300000000169e-05, 5.9569999999998374e-05, 6.0027999999996695e-05, 5.994500000000222e-05, 5.938899999999997e-05, 5.954099999999976e-05, 6.0111999999997584e-05, 5.9429999999999206e-05, 6.00689999999994e-05, 5.986100000000133e-05, 6.0250000000001275e-05, 5.936100000000083e-05, 5.9665999999999886e-05, 5.933299999999822e-05, 5.9486000000000955e-05]</msg>
<status status="PASS" starttime="20201030 18:28:33.932" endtime="20201030 18:28:33.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.928" endtime="20201030 18:28:33.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.939" endtime="20201030 18:28:33.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.938" endtime="20201030 18:28:33.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.937" endtime="20201030 18:28:33.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.578" endtime="20201030 18:28:33.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.578" endtime="20201030 18:28:33.960"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.969" endtime="20201030 18:28:33.986"></status>
</kw>
<msg timestamp="20201030 18:28:33.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.967" endtime="20201030 18:28:33.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.987" endtime="20201030 18:28:33.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.990" endtime="20201030 18:28:33.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.965" endtime="20201030 18:28:33.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.962" endtime="20201030 18:28:33.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.999" endtime="20201030 18:28:34.284"></status>
</kw>
<msg timestamp="20201030 18:28:34.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.997" endtime="20201030 18:28:34.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.288" endtime="20201030 18:28:34.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.296" endtime="20201030 18:28:34.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.995" endtime="20201030 18:28:34.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.993" endtime="20201030 18:28:34.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:34.303" level="INFO">${RESULT} = [{'diff': 6.040300000000054e-05}, {'diff': 6.036100000000183e-05}, {'diff': 6.10690000000004e-05}, {'diff': 6.031899999999965e-05}, {'diff': 6.05689999999999e-05}, {'diff': 6.0721999999999166e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:34.300" endtime="20201030 18:28:34.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:34.310" level="INFO">${ACCURACY} = {'diff': [6.040300000000054e-05, 6.036100000000183e-05, 6.10690000000004e-05, 6.031899999999965e-05, 6.05689999999999e-05, 6.0721999999999166e-05, 6.0707999999999596e-05, 6.033299999999922e-05, 6.0596...</msg>
<status status="PASS" starttime="20201030 18:28:34.304" endtime="20201030 18:28:34.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.315" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 18:28:34.314" endtime="20201030 18:28:34.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.317" level="INFO">VALUE: [6.040300000000054e-05, 6.036100000000183e-05, 6.10690000000004e-05, 6.031899999999965e-05, 6.05689999999999e-05, 6.0721999999999166e-05, 6.0707999999999596e-05, 6.033299999999922e-05, 6.059699999999904e-05, 6.0819999999999624e-05, 6.061099999999861e-05, 6.023700000000118e-05, 6.03750000000014e-05, 6.041700000000011e-05, 6.0388000000001496e-05, 6.061099999999861e-05, 6.0764000000001345e-05, 6.1014000000001595e-05, 6.0777999999997445e-05, 6.065300000000079e-05, 6.058299999999947e-05, 6.112500000000215e-05, 6.116699999999739e-05, 6.122199999999967e-05, 6.0833999999999194e-05, 6.111099999999911e-05, 6.03750000000014e-05, 6.0611999999998084e-05, 6.027700000000094e-05, 6.052700000000119e-05, 6.036100000000183e-05, 6.0971999999999416e-05, 6.122299999999914e-05, 6.066700000000036e-05, 6.0569999999999374e-05, 6.034700000000226e-05, 6.0514000000001095e-05, 6.0792000000000485e-05, 6.095899999999932e-05, 6.040300000000054e-05, 6.0416000000000636e-05, 6.061099999999861e-05, 6.0666000000000886e-05, 6.033299999999922e-05, 6.090299999999757e-05, 6.111100000000258e-05, 6.090300000000104e-05, 6.119399999999706e-05, 6.0707999999999596e-05, 6.0888999999998e-05]</msg>
<status status="PASS" starttime="20201030 18:28:34.316" endtime="20201030 18:28:34.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.311" endtime="20201030 18:28:34.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:34.322" endtime="20201030 18:28:34.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.321" endtime="20201030 18:28:34.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.320" endtime="20201030 18:28:34.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.961" endtime="20201030 18:28:34.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.960" endtime="20201030 18:28:34.343"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.352" endtime="20201030 18:28:34.370"></status>
</kw>
<msg timestamp="20201030 18:28:34.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.350" endtime="20201030 18:28:34.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.371" endtime="20201030 18:28:34.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.374" endtime="20201030 18:28:34.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.348" endtime="20201030 18:28:34.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.345" endtime="20201030 18:28:34.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.382" endtime="20201030 18:28:34.668"></status>
</kw>
<msg timestamp="20201030 18:28:34.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02196275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:34.381" endtime="20201030 18:28:34.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02196275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:34.673" endtime="20201030 18:28:34.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.681" endtime="20201030 18:28:34.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.378" endtime="20201030 18:28:34.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.377" endtime="20201030 18:28:34.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:34.688" level="INFO">${RESULT} = [{'diff': 6.143100000000068e-05}, {'diff': 6.137499999999893e-05}, {'diff': 6.22499999999998e-05}, {'diff': 6.197200000000042e-05}, {'diff': 6.227800000000241e-05}, {'diff': 6.149999999999906e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:34.684" endtime="20201030 18:28:34.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:34.692" level="INFO">${ACCURACY} = {'diff': [6.143100000000068e-05, 6.137499999999893e-05, 6.22499999999998e-05, 6.197200000000042e-05, 6.227800000000241e-05, 6.149999999999906e-05, 6.173599999999974e-05, 6.184799999999976e-05, 6.21809...</msg>
<status status="PASS" starttime="20201030 18:28:34.689" endtime="20201030 18:28:34.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.696" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 18:28:34.695" endtime="20201030 18:28:34.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.698" level="INFO">VALUE: [6.143100000000068e-05, 6.137499999999893e-05, 6.22499999999998e-05, 6.197200000000042e-05, 6.227800000000241e-05, 6.149999999999906e-05, 6.173599999999974e-05, 6.184799999999976e-05, 6.218099999999796e-05, 6.220900000000057e-05, 6.141599999999817e-05, 6.134699999999979e-05, 6.218000000000196e-05, 6.22499999999998e-05, 6.131900000000065e-05, 6.198599999999999e-05, 6.2195000000001e-05, 6.136099999999936e-05, 6.163900000000222e-05, 6.165199999999885e-05, 6.191599999999867e-05, 6.193100000000118e-05, 6.212499999999968e-05, 6.127699999999847e-05, 6.165199999999885e-05, 6.211100000000011e-05, 6.172200000000017e-05, 6.161099999999961e-05, 6.186099999999986e-05, 6.218100000000143e-05, 6.152800000000166e-05, 6.227800000000241e-05, 6.158399999999994e-05, 6.132000000000012e-05, 6.184799999999976e-05, 6.158399999999994e-05, 6.204099999999879e-05, 6.191599999999867e-05, 6.161099999999961e-05, 6.226399999999938e-05, 6.145800000000035e-05, 6.176399999999888e-05, 6.1888999999999e-05, 6.129200000000098e-05, 6.148599999999949e-05, 6.218100000000143e-05, 6.184799999999976e-05, 6.175000000000277e-05, 6.17629999999994e-05, 6.147199999999992e-05]</msg>
<status status="PASS" starttime="20201030 18:28:34.697" endtime="20201030 18:28:34.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.693" endtime="20201030 18:28:34.700"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:34.703" endtime="20201030 18:28:34.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.702" endtime="20201030 18:28:34.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.701" endtime="20201030 18:28:34.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.344" endtime="20201030 18:28:34.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.343" endtime="20201030 18:28:34.724"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.732" endtime="20201030 18:28:34.751"></status>
</kw>
<msg timestamp="20201030 18:28:34.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.731" endtime="20201030 18:28:34.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.752" endtime="20201030 18:28:34.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.755" endtime="20201030 18:28:34.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.728" endtime="20201030 18:28:34.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.726" endtime="20201030 18:28:34.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.764" endtime="20201030 18:28:35.050"></status>
</kw>
<msg timestamp="20201030 18:28:35.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022582931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.762" endtime="20201030 18:28:35.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022582931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.054" endtime="20201030 18:28:35.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.062" endtime="20201030 18:28:35.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.760" endtime="20201030 18:28:35.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.758" endtime="20201030 18:28:35.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.069" level="INFO">${RESULT} = [{'diff': 6.245900000000082e-05}, {'diff': 6.273599999999727e-05}, {'diff': 6.305499999999936e-05}, {'diff': 6.251399999999963e-05}, {'diff': 6.231899999999818e-05}, {'diff': 6.255599999999834e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:35.065" endtime="20201030 18:28:35.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:35.073" level="INFO">${ACCURACY} = {'diff': [6.245900000000082e-05, 6.273599999999727e-05, 6.305499999999936e-05, 6.251399999999963e-05, 6.231899999999818e-05, 6.255599999999834e-05, 6.319399999999906e-05, 6.230600000000155e-05, 6.2846...</msg>
<status status="PASS" starttime="20201030 18:28:35.070" endtime="20201030 18:28:35.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.077" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 18:28:35.076" endtime="20201030 18:28:35.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.079" level="INFO">VALUE: [6.245900000000082e-05, 6.273599999999727e-05, 6.305499999999936e-05, 6.251399999999963e-05, 6.231899999999818e-05, 6.255599999999834e-05, 6.319399999999906e-05, 6.230600000000155e-05, 6.284699999999782e-05, 6.262500000000018e-05, 6.244500000000125e-05, 6.254199999999877e-05, 6.254199999999877e-05, 6.250000000000006e-05, 6.323600000000124e-05, 6.319399999999906e-05, 6.283299999999825e-05, 6.298600000000099e-05, 6.259700000000104e-05, 6.227799999999895e-05, 6.279199999999902e-05, 6.287500000000043e-05, 6.32080000000021e-05, 6.293100000000218e-05, 6.247300000000039e-05, 6.23889999999995e-05, 6.304199999999927e-05, 6.277699999999997e-05, 6.313900000000025e-05, 6.324999999999734e-05, 6.318099999999896e-05, 6.29439999999988e-05, 6.23889999999995e-05, 6.240299999999907e-05, 6.316599999999992e-05, 6.245900000000082e-05, 6.304200000000273e-05, 6.290300000000304e-05, 6.237499999999993e-05, 6.254199999999877e-05, 6.305499999999936e-05, 6.247200000000092e-05, 6.317999999999949e-05, 6.242999999999874e-05, 6.281899999999868e-05, 6.319399999999906e-05, 6.226399999999938e-05, 6.231899999999818e-05, 6.316699999999939e-05, 6.23889999999995e-05]</msg>
<status status="PASS" starttime="20201030 18:28:35.078" endtime="20201030 18:28:35.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.074" endtime="20201030 18:28:35.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.085" endtime="20201030 18:28:35.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.084" endtime="20201030 18:28:35.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.083" endtime="20201030 18:28:35.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.725" endtime="20201030 18:28:35.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.724" endtime="20201030 18:28:35.106"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.114" endtime="20201030 18:28:35.133"></status>
</kw>
<msg timestamp="20201030 18:28:35.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.113" endtime="20201030 18:28:35.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.135" endtime="20201030 18:28:35.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.138" endtime="20201030 18:28:35.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.110" endtime="20201030 18:28:35.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.108" endtime="20201030 18:28:35.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.146" endtime="20201030 18:28:35.432"></status>
</kw>
<msg timestamp="20201030 18:28:35.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021712528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.145" endtime="20201030 18:28:35.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021712528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.437" endtime="20201030 18:28:35.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.445" endtime="20201030 18:28:35.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.142" endtime="20201030 18:28:35.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.141" endtime="20201030 18:28:35.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.451" level="INFO">${RESULT} = [{'diff': 6.394499999999928e-05}, {'diff': 6.405599999999984e-05}, {'diff': 6.381899999999968e-05}, {'diff': 6.349999999999759e-05}, {'diff': 6.404100000000079e-05}, {'diff': 6.409700000000254e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:35.448" endtime="20201030 18:28:35.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:35.456" level="INFO">${ACCURACY} = {'diff': [6.394499999999928e-05, 6.405599999999984e-05, 6.381899999999968e-05, 6.349999999999759e-05, 6.404100000000079e-05, 6.409700000000254e-05, 6.341600000000017e-05, 6.348600000000149e-05, 6.3639...</msg>
<status status="PASS" starttime="20201030 18:28:35.452" endtime="20201030 18:28:35.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.461" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 18:28:35.460" endtime="20201030 18:28:35.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.464" level="INFO">VALUE: [6.394499999999928e-05, 6.405599999999984e-05, 6.381899999999968e-05, 6.349999999999759e-05, 6.404100000000079e-05, 6.409700000000254e-05, 6.341600000000017e-05, 6.348600000000149e-05, 6.363900000000075e-05, 6.348600000000149e-05, 6.32639999999969e-05, 6.365300000000032e-05, 6.391700000000014e-05, 6.419499999999953e-05, 6.350000000000106e-05, 6.345799999999888e-05, 6.337499999999746e-05, 6.337500000000093e-05, 6.374999999999784e-05, 6.370799999999913e-05, 6.393100000000318e-05, 6.348599999999802e-05, 6.33890000000005e-05, 6.384699999999882e-05, 6.408300000000297e-05, 6.384699999999882e-05, 6.362500000000118e-05, 6.412500000000168e-05, 6.355599999999934e-05, 6.401400000000113e-05, 6.348599999999802e-05, 6.401400000000113e-05, 6.34439999999993e-05, 6.356899999999943e-05, 6.415300000000082e-05, 6.331899999999918e-05, 6.359700000000204e-05, 6.42089999999991e-05, 6.391700000000014e-05, 6.393099999999971e-05, 6.349999999999759e-05, 6.372299999999817e-05, 6.362500000000118e-05, 6.422200000000267e-05, 6.412499999999821e-05, 6.40829999999995e-05, 6.413900000000125e-05, 6.329199999999952e-05, 6.355599999999934e-05, 6.423599999999877e-05]</msg>
<status status="PASS" starttime="20201030 18:28:35.462" endtime="20201030 18:28:35.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.457" endtime="20201030 18:28:35.465"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.469" endtime="20201030 18:28:35.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.468" endtime="20201030 18:28:35.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.466" endtime="20201030 18:28:35.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.107" endtime="20201030 18:28:35.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.106" endtime="20201030 18:28:35.490"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.499" endtime="20201030 18:28:35.516"></status>
</kw>
<msg timestamp="20201030 18:28:35.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.497" endtime="20201030 18:28:35.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.518" endtime="20201030 18:28:35.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.520" endtime="20201030 18:28:35.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.495" endtime="20201030 18:28:35.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.493" endtime="20201030 18:28:35.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.529" endtime="20201030 18:28:35.815"></status>
</kw>
<msg timestamp="20201030 18:28:35.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021804486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.527" endtime="20201030 18:28:35.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021804486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.819" endtime="20201030 18:28:35.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.827" endtime="20201030 18:28:35.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.525" endtime="20201030 18:28:35.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.523" endtime="20201030 18:28:35.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.834" level="INFO">${RESULT} = [{'diff': 6.4583e-05}, {'diff': 6.52220000000002e-05}, {'diff': 6.505599999999737e-05}, {'diff': 6.44440000000003e-05}, {'diff': 6.50280000000017e-05}, {'diff': 6.473599999999927e-05}, {'diff': 6.4596...</msg>
<status status="PASS" starttime="20201030 18:28:35.831" endtime="20201030 18:28:35.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:35.838" level="INFO">${ACCURACY} = {'diff': [6.4583e-05, 6.52220000000002e-05, 6.505599999999737e-05, 6.44440000000003e-05, 6.50280000000017e-05, 6.473599999999927e-05, 6.459699999999957e-05, 6.512499999999921e-05, 6.527799999999848e-0...</msg>
<status status="PASS" starttime="20201030 18:28:35.835" endtime="20201030 18:28:35.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.842" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 18:28:35.841" endtime="20201030 18:28:35.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.845" level="INFO">VALUE: [6.4583e-05, 6.52220000000002e-05, 6.505599999999737e-05, 6.44440000000003e-05, 6.50280000000017e-05, 6.473599999999927e-05, 6.459699999999957e-05, 6.512499999999921e-05, 6.527799999999848e-05, 6.488899999999853e-05, 6.449999999999859e-05, 6.500000000000256e-05, 6.44020000000016e-05, 6.509700000000007e-05, 6.49029999999981e-05, 6.476400000000188e-05, 6.4889000000002e-05, 6.45280000000012e-05, 6.513899999999878e-05, 6.455600000000034e-05, 6.52639999999989e-05, 6.518100000000096e-05, 6.50419999999978e-05, 6.519500000000053e-05, 6.499999999999909e-05, 6.487499999999896e-05, 6.431900000000018e-05, 6.486099999999939e-05, 6.515299999999835e-05, 6.506900000000093e-05, 6.524999999999934e-05, 6.474999999999884e-05, 6.455599999999687e-05, 6.430600000000009e-05, 6.473599999999927e-05, 6.513899999999878e-05, 6.517999999999802e-05, 6.462499999999871e-05, 6.448599999999902e-05, 6.433299999999975e-05, 6.47500000000023e-05, 6.443100000000021e-05, 6.520800000000063e-05, 6.429200000000052e-05, 6.486099999999939e-05, 6.49029999999981e-05, 6.511099999999964e-05, 6.48479999999993e-05, 6.45419999999973e-05, 6.511099999999964e-05]</msg>
<status status="PASS" starttime="20201030 18:28:35.843" endtime="20201030 18:28:35.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.839" endtime="20201030 18:28:35.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.850" endtime="20201030 18:28:35.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.848" endtime="20201030 18:28:35.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.847" endtime="20201030 18:28:35.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.491" endtime="20201030 18:28:35.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.490" endtime="20201030 18:28:35.870"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.879" endtime="20201030 18:28:35.898"></status>
</kw>
<msg timestamp="20201030 18:28:35.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.877" endtime="20201030 18:28:35.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.899" endtime="20201030 18:28:35.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.902" endtime="20201030 18:28:35.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.875" endtime="20201030 18:28:35.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.873" endtime="20201030 18:28:35.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.911" endtime="20201030 18:28:36.196"></status>
</kw>
<msg timestamp="20201030 18:28:36.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.909" endtime="20201030 18:28:36.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.200" endtime="20201030 18:28:36.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.208" endtime="20201030 18:28:36.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.907" endtime="20201030 18:28:36.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.905" endtime="20201030 18:28:36.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.214" level="INFO">${RESULT} = [{'diff': 6.552799999999873e-05}, {'diff': 6.622199999999773e-05}, {'diff': 6.593099999999824e-05}, {'diff': 6.597200000000095e-05}, {'diff': 6.541700000000164e-05}, {'diff': 6.565300000000232e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:36.211" endtime="20201030 18:28:36.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:36.219" level="INFO">${ACCURACY} = {'diff': [6.552799999999873e-05, 6.622199999999773e-05, 6.593099999999824e-05, 6.597200000000095e-05, 6.541700000000164e-05, 6.565300000000232e-05, 6.593099999999824e-05, 6.551400000000263e-05, 6.5749...</msg>
<status status="PASS" starttime="20201030 18:28:36.215" endtime="20201030 18:28:36.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.223" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 18:28:36.222" endtime="20201030 18:28:36.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.225" level="INFO">VALUE: [6.552799999999873e-05, 6.622199999999773e-05, 6.593099999999824e-05, 6.597200000000095e-05, 6.541700000000164e-05, 6.565300000000232e-05, 6.593099999999824e-05, 6.551400000000263e-05, 6.574999999999984e-05, 6.59159999999992e-05, 6.613899999999978e-05, 6.616599999999945e-05, 6.619399999999859e-05, 6.612500000000021e-05, 6.551399999999916e-05, 6.523599999999977e-05, 6.608400000000098e-05, 6.586100000000039e-05, 6.529200000000152e-05, 6.566700000000189e-05, 6.579099999999907e-05, 6.551299999999968e-05, 6.604099999999932e-05, 6.577799999999898e-05, 6.570800000000113e-05, 6.561100000000014e-05, 6.547200000000045e-05, 6.605600000000184e-05, 6.595799999999791e-05, 6.574999999999984e-05, 6.59029999999991e-05, 6.594499999999781e-05, 6.572300000000017e-05, 6.54029999999986e-05, 6.563899999999928e-05, 6.526299999999943e-05, 6.577799999999898e-05, 6.577799999999898e-05, 6.616699999999892e-05, 6.568100000000146e-05, 6.551399999999916e-05, 6.611100000000064e-05, 6.597200000000095e-05, 6.568100000000146e-05, 6.556900000000143e-05, 6.559700000000057e-05, 6.60419999999988e-05, 6.540199999999913e-05, 6.617999999999902e-05, 6.54159999999987e-05]</msg>
<status status="PASS" starttime="20201030 18:28:36.224" endtime="20201030 18:28:36.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.219" endtime="20201030 18:28:36.227"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.231" endtime="20201030 18:28:36.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.230" endtime="20201030 18:28:36.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.228" endtime="20201030 18:28:36.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.871" endtime="20201030 18:28:36.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.871" endtime="20201030 18:28:36.252"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.260" endtime="20201030 18:28:36.278"></status>
</kw>
<msg timestamp="20201030 18:28:36.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.259" endtime="20201030 18:28:36.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.280" endtime="20201030 18:28:36.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.282" endtime="20201030 18:28:36.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.256" endtime="20201030 18:28:36.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.254" endtime="20201030 18:28:36.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.291" endtime="20201030 18:28:36.577"></status>
</kw>
<msg timestamp="20201030 18:28:36.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021861042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.290" endtime="20201030 18:28:36.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021861042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.581" endtime="20201030 18:28:36.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.589" endtime="20201030 18:28:36.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.287" endtime="20201030 18:28:36.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.285" endtime="20201030 18:28:36.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.596" level="INFO">${RESULT} = [{'diff': 6.634699999999785e-05}, {'diff': 6.665299999999985e-05}, {'diff': 6.687500000000096e-05}, {'diff': 6.644499999999831e-05}, {'diff': 6.641699999999917e-05}, {'diff': 6.64029999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:36.593" endtime="20201030 18:28:36.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:36.601" level="INFO">${ACCURACY} = {'diff': [6.634699999999785e-05, 6.665299999999985e-05, 6.687500000000096e-05, 6.644499999999831e-05, 6.641699999999917e-05, 6.64029999999996e-05, 6.655500000000286e-05, 6.697199999999848e-05, 6.66250...</msg>
<status status="PASS" starttime="20201030 18:28:36.597" endtime="20201030 18:28:36.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.605" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 18:28:36.604" endtime="20201030 18:28:36.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.607" level="INFO">VALUE: [6.634699999999785e-05, 6.665299999999985e-05, 6.687500000000096e-05, 6.644499999999831e-05, 6.641699999999917e-05, 6.64029999999996e-05, 6.655500000000286e-05, 6.697199999999848e-05, 6.662500000000071e-05, 6.670800000000213e-05, 6.698599999999805e-05, 6.633299999999828e-05, 6.668099999999899e-05, 6.72640000000009e-05, 6.72640000000009e-05, 6.661099999999767e-05, 6.648699999999702e-05, 6.705599999999937e-05, 6.712499999999774e-05, 6.70419999999998e-05, 6.652799999999973e-05, 6.629199999999905e-05, 6.675000000000084e-05, 6.656900000000243e-05, 6.652799999999973e-05, 6.702800000000023e-05, 6.693099999999924e-05, 6.713900000000078e-05, 6.698700000000099e-05, 6.629200000000252e-05, 6.677799999999998e-05, 6.692999999999977e-05, 6.694399999999934e-05, 6.673600000000127e-05, 6.712499999999774e-05, 6.694399999999934e-05, 6.627799999999948e-05, 6.720799999999916e-05, 6.656999999999844e-05, 6.715300000000035e-05, 6.632000000000166e-05, 6.687500000000096e-05, 6.630599999999862e-05, 6.693099999999924e-05, 6.663900000000028e-05, 6.718000000000002e-05, 6.723600000000177e-05, 6.633299999999828e-05, 6.684700000000182e-05, 6.70419999999998e-05]</msg>
<status status="PASS" starttime="20201030 18:28:36.606" endtime="20201030 18:28:36.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.601" endtime="20201030 18:28:36.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.612" endtime="20201030 18:28:36.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.611" endtime="20201030 18:28:36.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.610" endtime="20201030 18:28:36.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.253" endtime="20201030 18:28:36.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.252" endtime="20201030 18:28:36.633"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.642" endtime="20201030 18:28:36.660"></status>
</kw>
<msg timestamp="20201030 18:28:36.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.640" endtime="20201030 18:28:36.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.662" endtime="20201030 18:28:36.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.664" endtime="20201030 18:28:36.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.637" endtime="20201030 18:28:36.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.635" endtime="20201030 18:28:36.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.673" endtime="20201030 18:28:36.959"></status>
</kw>
<msg timestamp="20201030 18:28:36.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021830625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02189875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:36.671" endtime="20201030 18:28:36.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021830625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02189875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:36.963" endtime="20201030 18:28:36.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.971" endtime="20201030 18:28:36.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.669" endtime="20201030 18:28:36.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.667" endtime="20201030 18:28:36.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.977" level="INFO">${RESULT} = [{'diff': 6.812500000000221e-05}, {'diff': 6.77359999999988e-05}, {'diff': 6.765300000000085e-05}, {'diff': 6.749999999999812e-05}, {'diff': 6.758400000000248e-05}, {'diff': 6.802800000000123e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:36.974" endtime="20201030 18:28:36.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:36.981" level="INFO">${ACCURACY} = {'diff': [6.812500000000221e-05, 6.77359999999988e-05, 6.765300000000085e-05, 6.749999999999812e-05, 6.758400000000248e-05, 6.802800000000123e-05, 6.820899999999963e-05, 6.798600000000252e-05, 6.76659...</msg>
<status status="PASS" starttime="20201030 18:28:36.978" endtime="20201030 18:28:36.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.986" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 18:28:36.985" endtime="20201030 18:28:36.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.988" level="INFO">VALUE: [6.812500000000221e-05, 6.77359999999988e-05, 6.765300000000085e-05, 6.749999999999812e-05, 6.758400000000248e-05, 6.802800000000123e-05, 6.820899999999963e-05, 6.798600000000252e-05, 6.766599999999748e-05, 6.759799999999858e-05, 6.815199999999841e-05, 6.756899999999996e-05, 6.766700000000042e-05, 6.790299999999763e-05, 6.811099999999917e-05, 6.75969999999991e-05, 6.798599999999905e-05, 6.765299999999738e-05, 6.77909999999976e-05, 6.811100000000264e-05, 6.749999999999812e-05, 6.80969999999996e-05, 6.7277000000001e-05, 6.804099999999785e-05, 6.829200000000105e-05, 6.812499999999874e-05, 6.786099999999892e-05, 6.736100000000189e-05, 6.79169999999972e-05, 6.813900000000178e-05, 6.79299999999973e-05, 6.75969999999991e-05, 6.788900000000153e-05, 6.77229999999987e-05, 6.748599999999855e-05, 6.745800000000288e-05, 6.759700000000257e-05, 6.748599999999855e-05, 6.761099999999867e-05, 6.733299999999928e-05, 6.822199999999973e-05, 6.82640000000019e-05, 6.75420000000003e-05, 6.733400000000223e-05, 6.73619999999979e-05, 6.730599999999962e-05, 6.800000000000209e-05, 6.768000000000052e-05, 6.758299999999953e-05, 6.775000000000184e-05]</msg>
<status status="PASS" starttime="20201030 18:28:36.987" endtime="20201030 18:28:36.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.982" endtime="20201030 18:28:36.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.993" endtime="20201030 18:28:37.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.992" endtime="20201030 18:28:37.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.991" endtime="20201030 18:28:37.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.634" endtime="20201030 18:28:37.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.633" endtime="20201030 18:28:37.014"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.023" endtime="20201030 18:28:37.041"></status>
</kw>
<msg timestamp="20201030 18:28:37.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.021" endtime="20201030 18:28:37.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.043" endtime="20201030 18:28:37.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.045" endtime="20201030 18:28:37.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.018" endtime="20201030 18:28:37.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.016" endtime="20201030 18:28:37.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.054" endtime="20201030 18:28:37.339"></status>
</kw>
<msg timestamp="20201030 18:28:37.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022689042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.053" endtime="20201030 18:28:37.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022689042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.344" endtime="20201030 18:28:37.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.352" endtime="20201030 18:28:37.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.050" endtime="20201030 18:28:37.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.048" endtime="20201030 18:28:37.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:37.358" level="INFO">${RESULT} = [{'diff': 6.897200000000048e-05}, {'diff': 6.85970000000001e-05}, {'diff': 6.870900000000013e-05}, {'diff': 6.863900000000228e-05}, {'diff': 6.882000000000069e-05}, {'diff': 6.89030000000021e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:37.355" endtime="20201030 18:28:37.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:37.362" level="INFO">${ACCURACY} = {'diff': [6.897200000000048e-05, 6.85970000000001e-05, 6.870900000000013e-05, 6.863900000000228e-05, 6.882000000000069e-05, 6.89030000000021e-05, 6.865300000000185e-05, 6.898600000000005e-05, 6.912499...</msg>
<status status="PASS" starttime="20201030 18:28:37.359" endtime="20201030 18:28:37.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.367" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 18:28:37.366" endtime="20201030 18:28:37.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.369" level="INFO">VALUE: [6.897200000000048e-05, 6.85970000000001e-05, 6.870900000000013e-05, 6.863900000000228e-05, 6.882000000000069e-05, 6.89030000000021e-05, 6.865300000000185e-05, 6.898600000000005e-05, 6.912499999999974e-05, 6.858300000000053e-05, 6.901399999999919e-05, 6.851399999999869e-05, 6.85559999999974e-05, 6.918099999999802e-05, 6.912499999999974e-05, 6.873699999999927e-05, 6.830600000000062e-05, 6.92230000000002e-05, 6.890200000000263e-05, 6.872200000000023e-05, 6.898600000000005e-05, 6.869399999999762e-05, 6.912499999999974e-05, 6.856900000000096e-05, 6.856900000000096e-05, 6.858300000000053e-05, 6.888900000000253e-05, 6.913899999999931e-05, 6.874999999999937e-05, 6.844500000000031e-05, 6.912499999999974e-05, 6.84160000000017e-05, 6.861099999999967e-05, 6.87359999999998e-05, 6.834699999999985e-05, 6.845800000000041e-05, 6.890299999999863e-05, 6.884700000000035e-05, 6.920800000000116e-05, 6.920900000000063e-05, 6.920900000000063e-05, 6.898600000000005e-05, 6.904100000000232e-05, 6.924999999999987e-05, 6.845800000000041e-05, 6.837499999999899e-05, 6.92360000000003e-05, 6.899999999999962e-05, 6.915300000000235e-05, 6.880600000000112e-05]</msg>
<status status="PASS" starttime="20201030 18:28:37.368" endtime="20201030 18:28:37.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.363" endtime="20201030 18:28:37.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:37.375" endtime="20201030 18:28:37.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.373" endtime="20201030 18:28:37.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.372" endtime="20201030 18:28:37.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.015" endtime="20201030 18:28:37.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.014" endtime="20201030 18:28:37.395"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.404" endtime="20201030 18:28:37.423"></status>
</kw>
<msg timestamp="20201030 18:28:37.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.402" endtime="20201030 18:28:37.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.424" endtime="20201030 18:28:37.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.427" endtime="20201030 18:28:37.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.400" endtime="20201030 18:28:37.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.398" endtime="20201030 18:28:37.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.436" endtime="20201030 18:28:37.722"></status>
</kw>
<msg timestamp="20201030 18:28:37.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021617778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021687667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.434" endtime="20201030 18:28:37.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021617778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021687667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.726" endtime="20201030 18:28:37.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.734" endtime="20201030 18:28:37.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.431" endtime="20201030 18:28:37.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.430" endtime="20201030 18:28:37.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:37.740" level="INFO">${RESULT} = [{'diff': 6.988900000000006e-05}, {'diff': 6.933300000000128e-05}, {'diff': 6.95970000000011e-05}, {'diff': 6.956900000000196e-05}, {'diff': 7.018000000000302e-05}, {'diff': 6.950000000000012e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:37.737" endtime="20201030 18:28:37.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:37.748" level="INFO">${ACCURACY} = {'diff': [6.988900000000006e-05, 6.933300000000128e-05, 6.95970000000011e-05, 6.956900000000196e-05, 7.018000000000302e-05, 6.950000000000012e-05, 6.952800000000273e-05, 6.988900000000006e-05, 6.95000...</msg>
<status status="PASS" starttime="20201030 18:28:37.741" endtime="20201030 18:28:37.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.752" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 18:28:37.751" endtime="20201030 18:28:37.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.755" level="INFO">VALUE: [6.988900000000006e-05, 6.933300000000128e-05, 6.95970000000011e-05, 6.956900000000196e-05, 7.018000000000302e-05, 6.950000000000012e-05, 6.952800000000273e-05, 6.988900000000006e-05, 6.950000000000012e-05, 6.975000000000037e-05, 6.984700000000135e-05, 6.962500000000024e-05, 6.955600000000187e-05, 6.997200000000148e-05, 6.922200000000073e-05, 6.973599999999733e-05, 6.986099999999745e-05, 7.001399999999672e-05, 6.940299999999913e-05, 6.972199999999776e-05, 6.93619999999999e-05, 7.00559999999989e-05, 6.97360000000008e-05, 6.944499999999784e-05, 7.011100000000117e-05, 6.955600000000187e-05, 7.018100000000249e-05, 6.944400000000184e-05, 6.958299999999806e-05, 6.947200000000098e-05, 6.94169999999987e-05, 7.002799999999976e-05, 7.02499999999974e-05, 6.970899999999766e-05, 7.020800000000216e-05, 6.936100000000042e-05, 6.948600000000055e-05, 7.005600000000237e-05, 6.990299999999963e-05, 7.016599999999998e-05, 6.951399999999969e-05, 7.011100000000117e-05, 6.958299999999806e-05, 6.972200000000123e-05, 6.958299999999806e-05, 6.99169999999992e-05, 6.940299999999913e-05, 6.938899999999956e-05, 7.023700000000077e-05, 6.957000000000144e-05]</msg>
<status status="PASS" starttime="20201030 18:28:37.753" endtime="20201030 18:28:37.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.749" endtime="20201030 18:28:37.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:37.760" endtime="20201030 18:28:37.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.758" endtime="20201030 18:28:37.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.757" endtime="20201030 18:28:37.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.396" endtime="20201030 18:28:37.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.396" endtime="20201030 18:28:37.780"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.789" endtime="20201030 18:28:37.807"></status>
</kw>
<msg timestamp="20201030 18:28:37.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.787" endtime="20201030 18:28:37.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.808" endtime="20201030 18:28:37.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.811" endtime="20201030 18:28:37.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.785" endtime="20201030 18:28:37.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.783" endtime="20201030 18:28:37.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.820" endtime="20201030 18:28:38.107"></status>
</kw>
<msg timestamp="20201030 18:28:38.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021710653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.818" endtime="20201030 18:28:38.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021710653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.111" endtime="20201030 18:28:38.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.120" endtime="20201030 18:28:38.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.816" endtime="20201030 18:28:38.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.814" endtime="20201030 18:28:38.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:38.126" level="INFO">${RESULT} = [{'diff': 7.058399999999854e-05}, {'diff': 7.101399999999772e-05}, {'diff': 7.050000000000112e-05}, {'diff': 7.125000000000187e-05}, {'diff': 7.090199999999769e-05}, {'diff': 7.102700000000128e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:38.123" endtime="20201030 18:28:38.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:38.130" level="INFO">${ACCURACY} = {'diff': [7.058399999999854e-05, 7.101399999999772e-05, 7.050000000000112e-05, 7.125000000000187e-05, 7.090199999999769e-05, 7.102700000000128e-05, 7.12360000000023e-05, 7.04299999999998e-05, 7.026400...</msg>
<status status="PASS" starttime="20201030 18:28:38.127" endtime="20201030 18:28:38.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.135" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 18:28:38.134" endtime="20201030 18:28:38.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.137" level="INFO">VALUE: [7.058399999999854e-05, 7.101399999999772e-05, 7.050000000000112e-05, 7.125000000000187e-05, 7.090199999999769e-05, 7.102700000000128e-05, 7.12360000000023e-05, 7.04299999999998e-05, 7.026400000000044e-05, 7.061100000000167e-05, 7.079200000000008e-05, 7.031999999999872e-05, 7.044500000000231e-05, 7.119499999999959e-05, 7.120799999999969e-05, 7.030600000000262e-05, 7.076400000000094e-05, 7.027800000000001e-05, 7.040300000000013e-05, 7.068000000000005e-05, 7.027800000000001e-05, 7.045800000000241e-05, 7.037500000000099e-05, 7.093099999999977e-05, 7.109699999999913e-05, 7.090300000000063e-05, 7.041600000000023e-05, 7.048700000000102e-05, 7.1069e-05, 7.109699999999913e-05, 7.098599999999858e-05, 7.095799999999944e-05, 7.054199999999983e-05, 7.063899999999734e-05, 7.036100000000142e-05, 7.118100000000002e-05, 7.045899999999841e-05, 7.038899999999709e-05, 7.10559999999999e-05, 7.095899999999891e-05, 7.102700000000128e-05, 7.119400000000012e-05, 7.07360000000018e-05, 7.041600000000023e-05, 7.108299999999956e-05, 7.06109999999982e-05, 7.088900000000106e-05, 7.038900000000056e-05, 7.127799999999754e-05, 7.10979999999986e-05]</msg>
<status status="PASS" starttime="20201030 18:28:38.136" endtime="20201030 18:28:38.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.131" endtime="20201030 18:28:38.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.142" endtime="20201030 18:28:38.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.140" endtime="20201030 18:28:38.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.139" endtime="20201030 18:28:38.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.781" endtime="20201030 18:28:38.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.781" endtime="20201030 18:28:38.163"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.171" endtime="20201030 18:28:38.191"></status>
</kw>
<msg timestamp="20201030 18:28:38.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.170" endtime="20201030 18:28:38.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.192" endtime="20201030 18:28:38.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.195" endtime="20201030 18:28:38.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.167" endtime="20201030 18:28:38.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.165" endtime="20201030 18:28:38.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.204" endtime="20201030 18:28:38.489"></status>
</kw>
<msg timestamp="20201030 18:28:38.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022533903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.202" endtime="20201030 18:28:38.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022533903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.494" endtime="20201030 18:28:38.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.502" endtime="20201030 18:28:38.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.200" endtime="20201030 18:28:38.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.198" endtime="20201030 18:28:38.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:38.509" level="INFO">${RESULT} = [{'diff': 7.227799999999854e-05}, {'diff': 7.202800000000176e-05}, {'diff': 7.197200000000001e-05}, {'diff': 7.158300000000006e-05}, {'diff': 7.15690000000005e-05}, {'diff': 7.148599999999908e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:38.506" endtime="20201030 18:28:38.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:38.513" level="INFO">${ACCURACY} = {'diff': [7.227799999999854e-05, 7.202800000000176e-05, 7.197200000000001e-05, 7.158300000000006e-05, 7.15690000000005e-05, 7.148599999999908e-05, 7.220800000000069e-05, 7.159699999999963e-05, 7.14860...</msg>
<status status="PASS" starttime="20201030 18:28:38.510" endtime="20201030 18:28:38.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.518" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 18:28:38.517" endtime="20201030 18:28:38.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.521" level="INFO">VALUE: [7.227799999999854e-05, 7.202800000000176e-05, 7.197200000000001e-05, 7.158300000000006e-05, 7.15690000000005e-05, 7.148599999999908e-05, 7.220800000000069e-05, 7.159699999999963e-05, 7.148600000000255e-05, 7.159699999999963e-05, 7.186099999999945e-05, 7.22499999999994e-05, 7.145799999999994e-05, 7.151399999999822e-05, 7.155599999999693e-05, 7.217999999999808e-05, 7.194400000000087e-05, 7.16109999999992e-05, 7.199999999999915e-05, 7.16109999999992e-05, 7.187499999999902e-05, 7.226400000000244e-05, 7.147199999999951e-05, 7.162499999999877e-05, 7.215300000000188e-05, 7.17499999999989e-05, 7.145900000000288e-05, 7.140200000000166e-05, 7.147199999999951e-05, 7.165299999999791e-05, 7.158300000000006e-05, 7.149999999999865e-05, 7.147199999999951e-05, 7.216699999999798e-05, 7.150000000000212e-05, 7.169500000000009e-05, 7.212500000000274e-05, 7.15560000000004e-05, 7.201299999999924e-05, 7.177700000000203e-05, 7.219400000000112e-05, 7.201400000000219e-05, 7.197299999999948e-05, 7.130500000000067e-05, 7.165300000000138e-05, 7.183300000000031e-05, 7.140299999999766e-05, 7.223599999999983e-05, 7.162499999999877e-05, 7.144400000000037e-05]</msg>
<status status="PASS" starttime="20201030 18:28:38.519" endtime="20201030 18:28:38.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.514" endtime="20201030 18:28:38.523"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.526" endtime="20201030 18:28:38.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.525" endtime="20201030 18:28:38.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.524" endtime="20201030 18:28:38.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.164" endtime="20201030 18:28:38.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.163" endtime="20201030 18:28:38.547"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.556" endtime="20201030 18:28:38.574"></status>
</kw>
<msg timestamp="20201030 18:28:38.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.554" endtime="20201030 18:28:38.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.575" endtime="20201030 18:28:38.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.578" endtime="20201030 18:28:38.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.551" endtime="20201030 18:28:38.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.549" endtime="20201030 18:28:38.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.587" endtime="20201030 18:28:38.872"></status>
</kw>
<msg timestamp="20201030 18:28:38.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:38.585" endtime="20201030 18:28:38.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:38.876" endtime="20201030 18:28:38.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.885" endtime="20201030 18:28:38.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.583" endtime="20201030 18:28:38.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.581" endtime="20201030 18:28:38.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:38.891" level="INFO">${RESULT} = [{'diff': 7.233300000000081e-05}, {'diff': 7.231899999999777e-05}, {'diff': 7.276399999999947e-05}, {'diff': 7.300000000000015e-05}, {'diff': 7.26110000000002e-05}, {'diff': 7.270900000000066e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:38.888" endtime="20201030 18:28:38.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:38.896" level="INFO">${ACCURACY} = {'diff': [7.233300000000081e-05, 7.231899999999777e-05, 7.276399999999947e-05, 7.300000000000015e-05, 7.26110000000002e-05, 7.270900000000066e-05, 7.291699999999873e-05, 7.276399999999947e-05, 7.28619...</msg>
<status status="PASS" starttime="20201030 18:28:38.892" endtime="20201030 18:28:38.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.900" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 18:28:38.900" endtime="20201030 18:28:38.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.903" level="INFO">VALUE: [7.233300000000081e-05, 7.231899999999777e-05, 7.276399999999947e-05, 7.300000000000015e-05, 7.26110000000002e-05, 7.270900000000066e-05, 7.291699999999873e-05, 7.276399999999947e-05, 7.286199999999993e-05, 7.263899999999934e-05, 7.244400000000137e-05, 7.313899999999984e-05, 7.263900000000281e-05, 7.31249999999968e-05, 7.315300000000288e-05, 7.272199999999729e-05, 7.26110000000002e-05, 7.276399999999947e-05, 7.272300000000023e-05, 7.273600000000033e-05, 7.273599999999686e-05, 7.32500000000004e-05, 7.237499999999952e-05, 7.238900000000256e-05, 7.317999999999908e-05, 7.249999999999965e-05, 7.24439999999979e-05, 7.302799999999929e-05, 7.238899999999909e-05, 7.25560000000014e-05, 7.255599999999793e-05, 7.265300000000238e-05, 7.252800000000226e-05, 7.28049999999987e-05, 7.26110000000002e-05, 7.267999999999858e-05, 7.31110000000007e-05, 7.277799999999904e-05, 7.248600000000008e-05, 7.263900000000281e-05, 7.301399999999972e-05, 7.258399999999707e-05, 7.301399999999972e-05, 7.290300000000263e-05, 7.308400000000104e-05, 7.309700000000113e-05, 7.288900000000306e-05, 7.326399999999997e-05, 7.25690000000015e-05, 7.241699999999823e-05]</msg>
<status status="PASS" starttime="20201030 18:28:38.902" endtime="20201030 18:28:38.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.897" endtime="20201030 18:28:38.904"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.908" endtime="20201030 18:28:38.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.906" endtime="20201030 18:28:38.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.905" endtime="20201030 18:28:38.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.548" endtime="20201030 18:28:38.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.547" endtime="20201030 18:28:38.929"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.937" endtime="20201030 18:28:38.956"></status>
</kw>
<msg timestamp="20201030 18:28:38.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.936" endtime="20201030 18:28:38.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.958" endtime="20201030 18:28:38.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.960" endtime="20201030 18:28:38.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.933" endtime="20201030 18:28:38.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.931" endtime="20201030 18:28:38.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.969" endtime="20201030 18:28:39.256"></status>
</kw>
<msg timestamp="20201030 18:28:39.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021564069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021637514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.967" endtime="20201030 18:28:39.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021564069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021637514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.260" endtime="20201030 18:28:39.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.268" endtime="20201030 18:28:39.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.965" endtime="20201030 18:28:39.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.963" endtime="20201030 18:28:39.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:39.275" level="INFO">${RESULT} = [{'diff': 7.344499999999837e-05}, {'diff': 7.387499999999755e-05}, {'diff': 7.351400000000022e-05}, {'diff': 7.405599999999943e-05}, {'diff': 7.365200000000044e-05}, {'diff': 7.39439999999994e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:39.271" endtime="20201030 18:28:39.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:39.279" level="INFO">${ACCURACY} = {'diff': [7.344499999999837e-05, 7.387499999999755e-05, 7.351400000000022e-05, 7.405599999999943e-05, 7.365200000000044e-05, 7.39439999999994e-05, 7.426400000000097e-05, 7.36110000000012e-05, 7.384699...</msg>
<status status="PASS" starttime="20201030 18:28:39.276" endtime="20201030 18:28:39.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.283" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 18:28:39.282" endtime="20201030 18:28:39.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.286" level="INFO">VALUE: [7.344499999999837e-05, 7.387499999999755e-05, 7.351400000000022e-05, 7.405599999999943e-05, 7.365200000000044e-05, 7.39439999999994e-05, 7.426400000000097e-05, 7.36110000000012e-05, 7.384699999999841e-05, 7.400000000000115e-05, 7.41110000000017e-05, 7.357000000000197e-05, 7.361099999999773e-05, 7.349999999999718e-05, 7.327799999999954e-05, 7.366600000000001e-05, 7.397199999999854e-05, 7.424999999999793e-05, 7.37500000000009e-05, 7.388900000000059e-05, 7.331899999999877e-05, 7.327799999999954e-05, 7.368099999999905e-05, 7.422199999999879e-05, 7.386100000000145e-05, 7.376400000000047e-05, 7.36379999999974e-05, 7.333399999999782e-05, 7.412500000000127e-05, 7.401400000000072e-05, 7.418000000000008e-05, 7.392999999999983e-05, 7.395799999999897e-05, 7.388900000000059e-05, 7.402800000000029e-05, 7.398599999999811e-05, 7.404199999999986e-05, 7.391699999999973e-05, 7.362500000000077e-05, 7.406899999999952e-05, 7.373600000000133e-05, 7.413899999999737e-05, 7.413900000000084e-05, 7.351400000000022e-05, 7.331899999999877e-05, 7.354199999999936e-05, 7.395800000000244e-05, 7.418099999999955e-05, 7.345900000000141e-05, 7.358400000000154e-05]</msg>
<status status="PASS" starttime="20201030 18:28:39.284" endtime="20201030 18:28:39.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.280" endtime="20201030 18:28:39.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:39.290" endtime="20201030 18:28:39.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.289" endtime="20201030 18:28:39.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.288" endtime="20201030 18:28:39.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.929" endtime="20201030 18:28:39.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.929" endtime="20201030 18:28:39.311"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.319" endtime="20201030 18:28:39.339"></status>
</kw>
<msg timestamp="20201030 18:28:39.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.318" endtime="20201030 18:28:39.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.341" endtime="20201030 18:28:39.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.343" endtime="20201030 18:28:39.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.315" endtime="20201030 18:28:39.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.313" endtime="20201030 18:28:39.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.352" endtime="20201030 18:28:39.637"></status>
</kw>
<msg timestamp="20201030 18:28:39.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022901458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022976069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.351" endtime="20201030 18:28:39.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022901458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022976069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.642" endtime="20201030 18:28:39.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.650" endtime="20201030 18:28:39.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.348" endtime="20201030 18:28:39.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.347" endtime="20201030 18:28:39.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:39.656" level="INFO">${RESULT} = [{'diff': 7.461099999999873e-05}, {'diff': 7.469400000000015e-05}, {'diff': 7.443000000000033e-05}, {'diff': 7.431899999999977e-05}, {'diff': 7.461099999999873e-05}, {'diff': 7.476400000000147e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:39.653" endtime="20201030 18:28:39.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:39.661" level="INFO">${ACCURACY} = {'diff': [7.461099999999873e-05, 7.469400000000015e-05, 7.443000000000033e-05, 7.431899999999977e-05, 7.461099999999873e-05, 7.476400000000147e-05, 7.500000000000215e-05, 7.504200000000086e-05, 7.4528...</msg>
<status status="PASS" starttime="20201030 18:28:39.657" endtime="20201030 18:28:39.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.665" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 18:28:39.664" endtime="20201030 18:28:39.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.667" level="INFO">VALUE: [7.461099999999873e-05, 7.469400000000015e-05, 7.443000000000033e-05, 7.431899999999977e-05, 7.461099999999873e-05, 7.476400000000147e-05, 7.500000000000215e-05, 7.504200000000086e-05, 7.452800000000079e-05, 7.520899999999969e-05, 7.448699999999808e-05, 7.429200000000011e-05, 7.511099999999923e-05, 7.506900000000052e-05, 7.448600000000208e-05, 7.470799999999972e-05, 7.463900000000134e-05, 7.431999999999925e-05, 7.450000000000165e-05, 7.49310000000003e-05, 7.462500000000177e-05, 7.481999999999975e-05, 7.42769999999976e-05, 7.440200000000119e-05, 7.476400000000147e-05, 7.46249999999983e-05, 7.445800000000294e-05, 7.519400000000065e-05, 7.46249999999983e-05, 7.430599999999968e-05, 7.466700000000048e-05, 7.519500000000012e-05, 7.458400000000254e-05, 7.484799999999889e-05, 7.518000000000108e-05, 7.437499999999805e-05, 7.452699999999784e-05, 7.448599999999861e-05, 7.470799999999972e-05, 7.472200000000276e-05, 7.469499999999962e-05, 7.463900000000134e-05, 7.448599999999861e-05, 7.474999999999843e-05, 7.452800000000079e-05, 7.459799999999864e-05, 7.493000000000083e-05, 7.502800000000129e-05, 7.516600000000151e-05, 7.436100000000195e-05]</msg>
<status status="PASS" starttime="20201030 18:28:39.666" endtime="20201030 18:28:39.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.661" endtime="20201030 18:28:39.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:39.673" endtime="20201030 18:28:39.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.672" endtime="20201030 18:28:39.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.671" endtime="20201030 18:28:39.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.312" endtime="20201030 18:28:39.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.311" endtime="20201030 18:28:39.694"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.702" endtime="20201030 18:28:39.721"></status>
</kw>
<msg timestamp="20201030 18:28:39.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.701" endtime="20201030 18:28:39.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.722" endtime="20201030 18:28:39.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.725" endtime="20201030 18:28:39.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.698" endtime="20201030 18:28:39.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.696" endtime="20201030 18:28:39.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.733" endtime="20201030 18:28:40.018"></status>
</kw>
<msg timestamp="20201030 18:28:40.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.732" endtime="20201030 18:28:40.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.022" endtime="20201030 18:28:40.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.031" endtime="20201030 18:28:40.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.729" endtime="20201030 18:28:40.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.728" endtime="20201030 18:28:40.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:40.037" level="INFO">${RESULT} = [{'diff': 7.597200000000054e-05}, {'diff': 7.524999999999893e-05}, {'diff': 7.595900000000044e-05}, {'diff': 7.55700000000005e-05}, {'diff': 7.618100000000155e-05}, {'diff': 7.611100000000023e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:40.034" endtime="20201030 18:28:40.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:40.042" level="INFO">${ACCURACY} = {'diff': [7.597200000000054e-05, 7.524999999999893e-05, 7.595900000000044e-05, 7.55700000000005e-05, 7.618100000000155e-05, 7.611100000000023e-05, 7.556900000000102e-05, 7.594500000000087e-05, 7.54310...</msg>
<status status="PASS" starttime="20201030 18:28:40.038" endtime="20201030 18:28:40.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.047" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 18:28:40.045" endtime="20201030 18:28:40.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.049" level="INFO">VALUE: [7.597200000000054e-05, 7.524999999999893e-05, 7.595900000000044e-05, 7.55700000000005e-05, 7.618100000000155e-05, 7.611100000000023e-05, 7.556900000000102e-05, 7.594500000000087e-05, 7.54310000000008e-05, 7.577800000000204e-05, 7.56110000000032e-05, 7.618099999999808e-05, 7.573599999999986e-05, 7.613899999999937e-05, 7.563899999999887e-05, 7.527700000000206e-05, 7.598600000000011e-05, 7.595800000000097e-05, 7.547200000000004e-05, 7.569400000000115e-05, 7.574999999999943e-05, 7.540300000000166e-05, 7.615299999999894e-05, 7.534699999999991e-05, 7.530600000000068e-05, 7.59029999999987e-05, 7.549999999999918e-05, 7.574999999999943e-05, 7.542999999999786e-05, 7.619399999999818e-05, 7.630600000000168e-05, 7.533300000000034e-05, 7.552799999999832e-05, 7.59310000000013e-05, 7.604200000000186e-05, 7.562500000000277e-05, 7.54310000000008e-05, 7.583400000000032e-05, 7.559799999999964e-05, 7.55969999999967e-05, 7.568000000000158e-05, 7.548599999999961e-05, 7.615299999999894e-05, 7.592999999999836e-05, 7.530600000000068e-05, 7.573599999999986e-05, 7.573599999999986e-05, 7.598600000000011e-05, 7.565300000000191e-05, 7.605600000000143e-05]</msg>
<status status="PASS" starttime="20201030 18:28:40.048" endtime="20201030 18:28:40.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.043" endtime="20201030 18:28:40.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:40.054" endtime="20201030 18:28:40.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.052" endtime="20201030 18:28:40.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.051" endtime="20201030 18:28:40.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.695" endtime="20201030 18:28:40.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.694" endtime="20201030 18:28:40.074"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.083" endtime="20201030 18:28:40.102"></status>
</kw>
<msg timestamp="20201030 18:28:40.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.081" endtime="20201030 18:28:40.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.103" endtime="20201030 18:28:40.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.106" endtime="20201030 18:28:40.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.079" endtime="20201030 18:28:40.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.077" endtime="20201030 18:28:40.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.115" endtime="20201030 18:28:40.402"></status>
</kw>
<msg timestamp="20201030 18:28:40.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.113" endtime="20201030 18:28:40.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.406" endtime="20201030 18:28:40.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.414" endtime="20201030 18:28:40.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.110" endtime="20201030 18:28:40.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.109" endtime="20201030 18:28:40.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:40.420" level="INFO">${RESULT} = [{'diff': 7.70969999999982e-05}, {'diff': 7.704099999999992e-05}, {'diff': 7.701400000000025e-05}, {'diff': 7.665299999999944e-05}, {'diff': 7.691699999999926e-05}, {'diff': 7.665299999999944e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:40.417" endtime="20201030 18:28:40.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:40.425" level="INFO">${ACCURACY} = {'diff': [7.70969999999982e-05, 7.704099999999992e-05, 7.701400000000025e-05, 7.665299999999944e-05, 7.691699999999926e-05, 7.665299999999944e-05, 7.627799999999907e-05, 7.720900000000169e-05, 7.64170...</msg>
<status status="PASS" starttime="20201030 18:28:40.421" endtime="20201030 18:28:40.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.429" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 18:28:40.428" endtime="20201030 18:28:40.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.431" level="INFO">VALUE: [7.70969999999982e-05, 7.704099999999992e-05, 7.701400000000025e-05, 7.665299999999944e-05, 7.691699999999926e-05, 7.665299999999944e-05, 7.627799999999907e-05, 7.720900000000169e-05, 7.641700000000223e-05, 7.722300000000126e-05, 7.64449999999979e-05, 7.683400000000132e-05, 7.626300000000003e-05, 7.641599999999929e-05, 7.659700000000116e-05, 7.691699999999926e-05, 7.704199999999939e-05, 7.713900000000037e-05, 7.702799999999982e-05, 7.711100000000123e-05, 7.652800000000279e-05, 7.661100000000073e-05, 7.633299999999787e-05, 7.644399999999843e-05, 7.666599999999954e-05, 7.66250000000003e-05, 7.631900000000177e-05, 7.633300000000134e-05, 7.675000000000043e-05, 7.701399999999678e-05, 7.641700000000223e-05, 7.670899999999772e-05, 7.698599999999764e-05, 7.661100000000073e-05, 7.701300000000078e-05, 7.712499999999733e-05, 7.692999999999936e-05, 7.651399999999975e-05, 7.677799999999957e-05, 7.681900000000227e-05, 7.630599999999821e-05, 7.632000000000125e-05, 7.687500000000055e-05, 7.663899999999987e-05, 7.648700000000008e-05, 7.63189999999983e-05, 7.645800000000147e-05, 7.654099999999942e-05, 7.6764e-05, 7.624999999999993e-05]</msg>
<status status="PASS" starttime="20201030 18:28:40.430" endtime="20201030 18:28:40.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.425" endtime="20201030 18:28:40.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:40.436" endtime="20201030 18:28:40.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.435" endtime="20201030 18:28:40.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.434" endtime="20201030 18:28:40.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.075" endtime="20201030 18:28:40.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.075" endtime="20201030 18:28:40.457"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.465" endtime="20201030 18:28:40.485"></status>
</kw>
<msg timestamp="20201030 18:28:40.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.464" endtime="20201030 18:28:40.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.486" endtime="20201030 18:28:40.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.489" endtime="20201030 18:28:40.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.461" endtime="20201030 18:28:40.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.459" endtime="20201030 18:28:40.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.498" endtime="20201030 18:28:40.783"></status>
</kw>
<msg timestamp="20201030 18:28:40.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022617569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.496" endtime="20201030 18:28:40.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022617569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.787" endtime="20201030 18:28:40.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.796" endtime="20201030 18:28:40.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.493" endtime="20201030 18:28:40.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.492" endtime="20201030 18:28:40.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:40.802" level="INFO">${RESULT} = [{'diff': 7.797299999999854e-05}, {'diff': 7.81250000000018e-05}, {'diff': 7.788800000000165e-05}, {'diff': 7.759700000000216e-05}, {'diff': 7.749999999999771e-05}, {'diff': 7.733299999999887e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:40.799" endtime="20201030 18:28:40.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:40.806" level="INFO">${ACCURACY} = {'diff': [7.797299999999854e-05, 7.81250000000018e-05, 7.788800000000165e-05, 7.759700000000216e-05, 7.749999999999771e-05, 7.733299999999887e-05, 7.816700000000051e-05, 7.804200000000039e-05, 7.76670...</msg>
<status status="PASS" starttime="20201030 18:28:40.803" endtime="20201030 18:28:40.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.810" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 18:28:40.809" endtime="20201030 18:28:40.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.813" level="INFO">VALUE: [7.797299999999854e-05, 7.81250000000018e-05, 7.788800000000165e-05, 7.759700000000216e-05, 7.749999999999771e-05, 7.733299999999887e-05, 7.816700000000051e-05, 7.804200000000039e-05, 7.766700000000001e-05, 7.766700000000001e-05, 7.768099999999958e-05, 7.779200000000014e-05, 7.824999999999846e-05, 7.826299999999856e-05, 7.820799999999975e-05, 7.72640000000005e-05, 7.752800000000032e-05, 7.770900000000219e-05, 7.742999999999986e-05, 7.763900000000087e-05, 7.738900000000062e-05, 7.80839999999991e-05, 7.74449999999989e-05, 7.79030000000007e-05, 7.802699999999788e-05, 7.815200000000147e-05, 7.791600000000079e-05, 7.811099999999876e-05, 7.784700000000241e-05, 7.770799999999925e-05, 7.799999999999821e-05, 7.741699999999976e-05, 7.819500000000312e-05, 7.802800000000082e-05, 7.747299999999804e-05, 7.802800000000082e-05, 7.77770000000011e-05, 7.802800000000082e-05, 7.772199999999882e-05, 7.761199999999774e-05, 7.797199999999907e-05, 7.748600000000161e-05, 7.754199999999989e-05, 7.779200000000014e-05, 7.774999999999796e-05, 7.77229999999983e-05, 7.75969999999987e-05, 7.805499999999702e-05, 7.737500000000105e-05, 7.786099999999851e-05]</msg>
<status status="PASS" starttime="20201030 18:28:40.812" endtime="20201030 18:28:40.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.807" endtime="20201030 18:28:40.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:40.819" endtime="20201030 18:28:40.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.817" endtime="20201030 18:28:40.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.816" endtime="20201030 18:28:40.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.458" endtime="20201030 18:28:40.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.457" endtime="20201030 18:28:40.839"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.848" endtime="20201030 18:28:40.867"></status>
</kw>
<msg timestamp="20201030 18:28:40.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.846" endtime="20201030 18:28:40.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.869" endtime="20201030 18:28:40.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.871" endtime="20201030 18:28:40.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.844" endtime="20201030 18:28:40.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.842" endtime="20201030 18:28:40.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.880" endtime="20201030 18:28:41.165"></status>
</kw>
<msg timestamp="20201030 18:28:41.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021791125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021870375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.878" endtime="20201030 18:28:41.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021791125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021870375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.169" endtime="20201030 18:28:41.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.178" endtime="20201030 18:28:41.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.876" endtime="20201030 18:28:41.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.874" endtime="20201030 18:28:41.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.184" level="INFO">${RESULT} = [{'diff': 7.924999999999946e-05}, {'diff': 7.858300000000012e-05}, {'diff': 7.847199999999957e-05}, {'diff': 7.918000000000161e-05}, {'diff': 7.888899999999865e-05}, {'diff': 7.926399999999903e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:41.181" endtime="20201030 18:28:41.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:41.191" level="INFO">${ACCURACY} = {'diff': [7.924999999999946e-05, 7.858300000000012e-05, 7.847199999999957e-05, 7.918000000000161e-05, 7.888899999999865e-05, 7.926399999999903e-05, 7.8458e-05, 7.899999999999921e-05, 7.873599999999939...</msg>
<status status="PASS" starttime="20201030 18:28:41.185" endtime="20201030 18:28:41.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.196" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 18:28:41.195" endtime="20201030 18:28:41.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.198" level="INFO">VALUE: [7.924999999999946e-05, 7.858300000000012e-05, 7.847199999999957e-05, 7.918000000000161e-05, 7.888899999999865e-05, 7.926399999999903e-05, 7.8458e-05, 7.899999999999921e-05, 7.873599999999939e-05, 7.915299999999847e-05, 7.866599999999807e-05, 7.862499999999883e-05, 7.85969999999997e-05, 7.848599999999914e-05, 7.859700000000316e-05, 7.843100000000033e-05, 7.873599999999939e-05, 7.888900000000212e-05, 7.843099999999686e-05, 7.893100000000083e-05, 7.902800000000182e-05, 7.897200000000007e-05, 7.830500000000074e-05, 7.856900000000056e-05, 7.904100000000192e-05, 7.863900000000187e-05, 7.837500000000205e-05, 7.841700000000076e-05, 7.837499999999858e-05, 7.855500000000099e-05, 7.901400000000225e-05, 7.875000000000243e-05, 7.91380000000029e-05, 7.894399999999746e-05, 7.841600000000129e-05, 7.922200000000032e-05, 7.869399999999721e-05, 7.915299999999847e-05, 7.90970000000002e-05, 7.854200000000089e-05, 7.857000000000003e-05, 7.837499999999858e-05, 7.898600000000311e-05, 7.90129999999993e-05, 7.862499999999883e-05, 7.869500000000015e-05, 7.861100000000273e-05, 7.883300000000037e-05, 7.899999999999921e-05, 7.915300000000194e-05]</msg>
<status status="PASS" starttime="20201030 18:28:41.197" endtime="20201030 18:28:41.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.192" endtime="20201030 18:28:41.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.203" endtime="20201030 18:28:41.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.202" endtime="20201030 18:28:41.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.201" endtime="20201030 18:28:41.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.840" endtime="20201030 18:28:41.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.839" endtime="20201030 18:28:41.224"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.232" endtime="20201030 18:28:41.252"></status>
</kw>
<msg timestamp="20201030 18:28:41.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.231" endtime="20201030 18:28:41.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.253" endtime="20201030 18:28:41.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.256" endtime="20201030 18:28:41.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.228" endtime="20201030 18:28:41.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.226" endtime="20201030 18:28:41.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.264" endtime="20201030 18:28:41.551"></status>
</kw>
<msg timestamp="20201030 18:28:41.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0218755, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:41.263" endtime="20201030 18:28:41.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0218755, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:41.555" endtime="20201030 18:28:41.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.564" endtime="20201030 18:28:41.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.260" endtime="20201030 18:28:41.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.259" endtime="20201030 18:28:41.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.570" level="INFO">${RESULT} = [{'diff': 7.987500000000008e-05}, {'diff': 7.986100000000051e-05}, {'diff': 8.005499999999902e-05}, {'diff': 8.016699999999904e-05}, {'diff': 8.017999999999914e-05}, {'diff': 7.974999999999996e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:41.567" endtime="20201030 18:28:41.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:41.574" level="INFO">${ACCURACY} = {'diff': [7.987500000000008e-05, 7.986100000000051e-05, 8.005499999999902e-05, 8.016699999999904e-05, 8.017999999999914e-05, 7.974999999999996e-05, 7.976399999999953e-05, 7.959800000000017e-05, 7.9306...</msg>
<status status="PASS" starttime="20201030 18:28:41.571" endtime="20201030 18:28:41.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.579" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 18:28:41.578" endtime="20201030 18:28:41.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.581" level="INFO">VALUE: [7.987500000000008e-05, 7.986100000000051e-05, 8.005499999999902e-05, 8.016699999999904e-05, 8.017999999999914e-05, 7.974999999999996e-05, 7.976399999999953e-05, 7.959800000000017e-05, 7.930600000000121e-05, 7.954100000000242e-05, 7.963799999999993e-05, 7.972199999999735e-05, 8.005499999999902e-05, 7.98190000000018e-05, 7.934699999999698e-05, 8.005599999999849e-05, 7.973599999999692e-05, 7.986100000000051e-05, 7.930600000000121e-05, 8.001399999999978e-05, 8.01389999999999e-05, 8.02909999999997e-05, 7.998600000000064e-05, 7.93190000000013e-05, 8.029199999999917e-05, 7.990299999999922e-05, 7.937499999999958e-05, 8.007000000000153e-05, 7.981999999999781e-05, 7.930599999999774e-05, 7.990299999999922e-05, 7.980600000000171e-05, 8.015299999999947e-05, 8.006900000000206e-05, 7.998600000000064e-05, 7.937499999999958e-05, 7.944400000000143e-05, 8.033300000000188e-05, 7.970800000000125e-05, 7.96250000000033e-05, 7.998600000000064e-05, 7.943100000000133e-05, 8.019400000000218e-05, 7.937499999999958e-05, 7.995799999999803e-05, 7.962499999999983e-05, 7.945799999999753e-05, 7.96389999999994e-05, 7.995900000000097e-05, 7.95970000000007e-05]</msg>
<status status="PASS" starttime="20201030 18:28:41.580" endtime="20201030 18:28:41.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.575" endtime="20201030 18:28:41.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.586" endtime="20201030 18:28:41.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.584" endtime="20201030 18:28:41.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.583" endtime="20201030 18:28:41.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.225" endtime="20201030 18:28:41.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.224" endtime="20201030 18:28:41.607"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.615" endtime="20201030 18:28:41.635"></status>
</kw>
<msg timestamp="20201030 18:28:41.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.614" endtime="20201030 18:28:41.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.637" endtime="20201030 18:28:41.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.639" endtime="20201030 18:28:41.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.611" endtime="20201030 18:28:41.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.609" endtime="20201030 18:28:41.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.648" endtime="20201030 18:28:41.934"></status>
</kw>
<msg timestamp="20201030 18:28:41.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022666542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.646" endtime="20201030 18:28:41.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022666542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.938" endtime="20201030 18:28:41.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.946" endtime="20201030 18:28:41.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.644" endtime="20201030 18:28:41.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.642" endtime="20201030 18:28:41.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.953" level="INFO">${RESULT} = [{'diff': 8.05840000000016e-05}, {'diff': 8.07230000000013e-05}, {'diff': 8.084799999999795e-05}, {'diff': 8.088900000000065e-05}, {'diff': 8.048599999999767e-05}, {'diff': 8.077700000000063e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:41.949" endtime="20201030 18:28:41.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:41.957" level="INFO">${ACCURACY} = {'diff': [8.05840000000016e-05, 8.07230000000013e-05, 8.084799999999795e-05, 8.088900000000065e-05, 8.048599999999767e-05, 8.077700000000063e-05, 8.08329999999989e-05, 8.04719999999981e-05, 8.02919999...</msg>
<status status="PASS" starttime="20201030 18:28:41.954" endtime="20201030 18:28:41.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.961" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 18:28:41.960" endtime="20201030 18:28:41.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.963" level="INFO">VALUE: [8.05840000000016e-05, 8.07230000000013e-05, 8.084799999999795e-05, 8.088900000000065e-05, 8.048599999999767e-05, 8.077700000000063e-05, 8.08329999999989e-05, 8.04719999999981e-05, 8.029199999999917e-05, 8.118099999999961e-05, 8.081999999999881e-05, 8.079199999999967e-05, 8.09589999999985e-05, 8.126399999999756e-05, 8.073700000000086e-05, 8.036099999999755e-05, 8.022199999999785e-05, 8.07780000000001e-05, 8.070799999999878e-05, 8.036100000000101e-05, 8.031999999999831e-05, 8.10970000000022e-05, 8.072200000000182e-05, 8.062500000000083e-05, 8.037500000000058e-05, 8.075000000000096e-05, 8.058300000000213e-05, 8.102700000000088e-05, 8.090300000000022e-05, 8.02909999999997e-05, 8.050000000000071e-05, 8.05970000000017e-05, 8.059699999999823e-05, 8.069499999999868e-05, 8.087500000000108e-05, 8.105600000000296e-05, 8.049999999999724e-05, 8.072200000000182e-05, 8.084700000000195e-05, 8.031899999999884e-05, 8.044400000000243e-05, 8.125000000000146e-05, 8.065299999999997e-05, 8.06390000000004e-05, 8.101400000000078e-05, 8.02779999999996e-05, 8.067999999999964e-05, 8.037500000000058e-05, 8.034700000000145e-05, 8.118000000000014e-05]</msg>
<status status="PASS" starttime="20201030 18:28:41.962" endtime="20201030 18:28:41.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.957" endtime="20201030 18:28:41.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.969" endtime="20201030 18:28:41.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.968" endtime="20201030 18:28:41.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.967" endtime="20201030 18:28:41.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.607" endtime="20201030 18:28:41.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.607" endtime="20201030 18:28:41.990"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.998" endtime="20201030 18:28:42.018"></status>
</kw>
<msg timestamp="20201030 18:28:42.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.997" endtime="20201030 18:28:42.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.020" endtime="20201030 18:28:42.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.022" endtime="20201030 18:28:42.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.994" endtime="20201030 18:28:42.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.992" endtime="20201030 18:28:42.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.031" endtime="20201030 18:28:42.315"></status>
</kw>
<msg timestamp="20201030 18:28:42.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021982903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.029" endtime="20201030 18:28:42.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021982903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.320" endtime="20201030 18:28:42.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.328" endtime="20201030 18:28:42.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.027" endtime="20201030 18:28:42.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.025" endtime="20201030 18:28:42.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:42.335" level="INFO">${RESULT} = [{'diff': 8.155599999999999e-05}, {'diff': 8.230500000000127e-05}, {'diff': 8.216700000000104e-05}, {'diff': 8.152800000000085e-05}, {'diff': 8.159699999999923e-05}, {'diff': 8.136099999999855e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:42.332" endtime="20201030 18:28:42.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:42.340" level="INFO">${ACCURACY} = {'diff': [8.155599999999999e-05, 8.230500000000127e-05, 8.216700000000104e-05, 8.152800000000085e-05, 8.159699999999923e-05, 8.136099999999855e-05, 8.140199999999778e-05, 8.16390000000014e-05, 8.20280...</msg>
<status status="PASS" starttime="20201030 18:28:42.336" endtime="20201030 18:28:42.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.345" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 18:28:42.344" endtime="20201030 18:28:42.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.347" level="INFO">VALUE: [8.155599999999999e-05, 8.230500000000127e-05, 8.216700000000104e-05, 8.152800000000085e-05, 8.159699999999923e-05, 8.136099999999855e-05, 8.140199999999778e-05, 8.16390000000014e-05, 8.202800000000135e-05, 8.155500000000052e-05, 8.218100000000061e-05, 8.14719999999991e-05, 8.168100000000011e-05, 8.16109999999988e-05, 8.188899999999819e-05, 8.19719999999996e-05, 8.188899999999819e-05, 8.198599999999917e-05, 8.12780000000006e-05, 8.180500000000077e-05, 8.223599999999942e-05, 8.184699999999948e-05, 8.188899999999819e-05, 8.133399999999888e-05, 8.132000000000278e-05, 8.220899999999975e-05, 8.1458999999999e-05, 8.176399999999806e-05, 8.152700000000138e-05, 8.155499999999705e-05, 8.165300000000097e-05, 8.154200000000042e-05, 8.162499999999837e-05, 8.197200000000307e-05, 8.155500000000052e-05, 8.208399999999963e-05, 8.130599999999974e-05, 8.209699999999973e-05, 8.187500000000208e-05, 8.209699999999973e-05, 8.131899999999984e-05, 8.201399999999831e-05, 8.223599999999942e-05, 8.136099999999855e-05, 8.140300000000072e-05, 8.181999999999981e-05, 8.15840000000026e-05, 8.148699999999814e-05, 8.159699999999923e-05, 8.169400000000021e-05]</msg>
<status status="PASS" starttime="20201030 18:28:42.346" endtime="20201030 18:28:42.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.341" endtime="20201030 18:28:42.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:42.353" endtime="20201030 18:28:42.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.351" endtime="20201030 18:28:42.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.350" endtime="20201030 18:28:42.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.991" endtime="20201030 18:28:42.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.990" endtime="20201030 18:28:42.373"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.382" endtime="20201030 18:28:42.402"></status>
</kw>
<msg timestamp="20201030 18:28:42.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.381" endtime="20201030 18:28:42.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.404" endtime="20201030 18:28:42.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.406" endtime="20201030 18:28:42.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.378" endtime="20201030 18:28:42.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.376" endtime="20201030 18:28:42.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.416" endtime="20201030 18:28:42.704"></status>
</kw>
<msg timestamp="20201030 18:28:42.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022503944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.414" endtime="20201030 18:28:42.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022503944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.709" endtime="20201030 18:28:42.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.718" endtime="20201030 18:28:42.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.411" endtime="20201030 18:28:42.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.409" endtime="20201030 18:28:42.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:42.724" level="INFO">${RESULT} = [{'diff': 8.322200000000085e-05}, {'diff': 8.315199999999953e-05}, {'diff': 8.249999999999924e-05}, {'diff': 8.319400000000171e-05}, {'diff': 8.28330000000009e-05}, {'diff': 8.29170000000018e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:42.721" endtime="20201030 18:28:42.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:42.728" level="INFO">${ACCURACY} = {'diff': [8.322200000000085e-05, 8.315199999999953e-05, 8.249999999999924e-05, 8.319400000000171e-05, 8.28330000000009e-05, 8.29170000000018e-05, 8.234699999999998e-05, 8.323599999999695e-05, 8.301400...</msg>
<status status="PASS" starttime="20201030 18:28:42.725" endtime="20201030 18:28:42.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.732" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 18:28:42.731" endtime="20201030 18:28:42.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.735" level="INFO">VALUE: [8.322200000000085e-05, 8.315199999999953e-05, 8.249999999999924e-05, 8.319400000000171e-05, 8.28330000000009e-05, 8.29170000000018e-05, 8.234699999999998e-05, 8.323599999999695e-05, 8.301400000000278e-05, 8.290300000000222e-05, 8.232000000000031e-05, 8.24720000000001e-05, 8.31659999999991e-05, 8.248599999999967e-05, 8.317999999999867e-05, 8.320800000000128e-05, 8.31110000000003e-05, 8.22780000000016e-05, 8.31110000000003e-05, 8.240300000000172e-05, 8.232000000000031e-05, 8.318000000000214e-05, 8.294399999999799e-05, 8.29720000000006e-05, 8.284700000000048e-05, 8.288899999999919e-05, 8.322200000000085e-05, 8.24720000000001e-05, 8.22780000000016e-05, 8.312499999999987e-05, 8.232000000000031e-05, 8.269500000000068e-05, 8.224999999999899e-05, 8.237499999999912e-05, 8.242999999999792e-05, 8.262499999999937e-05, 8.234699999999998e-05, 8.241699999999783e-05, 8.324999999999999e-05, 8.236099999999955e-05, 8.233399999999988e-05, 8.226400000000203e-05, 8.290300000000222e-05, 8.274999999999949e-05, 8.26109999999998e-05, 8.259700000000023e-05, 8.240299999999826e-05, 8.23330000000004e-05, 8.252700000000238e-05, 8.309700000000073e-05]</msg>
<status status="PASS" starttime="20201030 18:28:42.733" endtime="20201030 18:28:42.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.729" endtime="20201030 18:28:42.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:42.740" endtime="20201030 18:28:42.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.738" endtime="20201030 18:28:42.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.737" endtime="20201030 18:28:42.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.374" endtime="20201030 18:28:42.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.374" endtime="20201030 18:28:42.760"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.769" endtime="20201030 18:28:42.789"></status>
</kw>
<msg timestamp="20201030 18:28:42.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.767" endtime="20201030 18:28:42.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.790" endtime="20201030 18:28:42.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.792" endtime="20201030 18:28:42.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.765" endtime="20201030 18:28:42.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.763" endtime="20201030 18:28:42.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.801" endtime="20201030 18:28:43.103"></status>
</kw>
<msg timestamp="20201030 18:28:43.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022635806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.800" endtime="20201030 18:28:43.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022635806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.112" endtime="20201030 18:28:43.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.122" endtime="20201030 18:28:43.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.797" endtime="20201030 18:28:43.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.796" endtime="20201030 18:28:43.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:43.128" level="INFO">${RESULT} = [{'diff': 8.42370000000009e-05}, {'diff': 8.33330000000014e-05}, {'diff': 8.394500000000193e-05}, {'diff': 8.327699999999966e-05}, {'diff': 8.420799999999881e-05}, {'diff': 8.3846999999998e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:28:43.125" endtime="20201030 18:28:43.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:43.132" level="INFO">${ACCURACY} = {'diff': [8.42370000000009e-05, 8.33330000000014e-05, 8.394500000000193e-05, 8.327699999999966e-05, 8.420799999999881e-05, 8.3846999999998e-05, 8.391699999999933e-05, 8.413900000000044e-05, 8.32920000...</msg>
<status status="PASS" starttime="20201030 18:28:43.129" endtime="20201030 18:28:43.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.137" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 18:28:43.136" endtime="20201030 18:28:43.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.139" level="INFO">VALUE: [8.42370000000009e-05, 8.33330000000014e-05, 8.394500000000193e-05, 8.327699999999966e-05, 8.420799999999881e-05, 8.3846999999998e-05, 8.391699999999933e-05, 8.413900000000044e-05, 8.329200000000217e-05, 8.361099999999733e-05, 8.351399999999981e-05, 8.374999999999702e-05, 8.398700000000064e-05, 8.405499999999955e-05, 8.351399999999981e-05, 8.398600000000117e-05, 8.41110000000013e-05, 8.362500000000037e-05, 8.387500000000062e-05, 8.386100000000105e-05, 8.405599999999902e-05, 8.352799999999938e-05, 8.416699999999958e-05, 8.330599999999827e-05, 8.331900000000184e-05, 8.370800000000178e-05, 8.356900000000209e-05, 8.374999999999702e-05, 8.373600000000092e-05, 8.381999999999834e-05, 8.426400000000056e-05, 8.404200000000292e-05, 8.394499999999847e-05, 8.361200000000027e-05, 8.33049999999988e-05, 8.381900000000234e-05, 8.4153e-05, 8.405600000000249e-05, 8.392999999999942e-05, 8.374999999999702e-05, 8.357000000000156e-05, 8.36529999999995e-05, 8.426400000000056e-05, 8.386099999999758e-05, 8.420800000000228e-05, 8.355500000000252e-05, 8.404099999999998e-05, 8.333299999999794e-05, 8.37919999999992e-05, 8.327799999999913e-05]</msg>
<status status="PASS" starttime="20201030 18:28:43.138" endtime="20201030 18:28:43.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.133" endtime="20201030 18:28:43.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:43.148" endtime="20201030 18:28:43.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.147" endtime="20201030 18:28:43.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.146" endtime="20201030 18:28:43.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.761" endtime="20201030 18:28:43.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.761" endtime="20201030 18:28:43.169"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.178" endtime="20201030 18:28:43.197"></status>
</kw>
<msg timestamp="20201030 18:28:43.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.177" endtime="20201030 18:28:43.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.199" endtime="20201030 18:28:43.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.201" endtime="20201030 18:28:43.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.174" endtime="20201030 18:28:43.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.172" endtime="20201030 18:28:43.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.210" endtime="20201030 18:28:43.496"></status>
</kw>
<msg timestamp="20201030 18:28:43.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.209" endtime="20201030 18:28:43.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.500" endtime="20201030 18:28:43.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.509" endtime="20201030 18:28:43.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.206" endtime="20201030 18:28:43.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.205" endtime="20201030 18:28:43.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:43.515" level="INFO">${RESULT} = [{'diff': 8.466700000000008e-05}, {'diff': 8.523599999999895e-05}, {'diff': 8.42919999999997e-05}, {'diff': 8.519499999999972e-05}, {'diff': 8.444499999999897e-05}, {'diff': 8.490300000000076e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:43.512" endtime="20201030 18:28:43.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:43.520" level="INFO">${ACCURACY} = {'diff': [8.466700000000008e-05, 8.523599999999895e-05, 8.42919999999997e-05, 8.519499999999972e-05, 8.444499999999897e-05, 8.490300000000076e-05, 8.508299999999969e-05, 8.475000000000149e-05, 8.49719...</msg>
<status status="PASS" starttime="20201030 18:28:43.516" endtime="20201030 18:28:43.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.525" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 18:28:43.524" endtime="20201030 18:28:43.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.527" level="INFO">VALUE: [8.466700000000008e-05, 8.523599999999895e-05, 8.42919999999997e-05, 8.519499999999972e-05, 8.444499999999897e-05, 8.490300000000076e-05, 8.508299999999969e-05, 8.475000000000149e-05, 8.497199999999913e-05, 8.469399999999974e-05, 8.48050000000003e-05, 8.47920000000002e-05, 8.426400000000056e-05, 8.524999999999852e-05, 8.440300000000026e-05, 8.447300000000157e-05, 8.44859999999982e-05, 8.488900000000119e-05, 8.495799999999956e-05, 8.486099999999858e-05, 8.438900000000069e-05, 8.511099999999883e-05, 8.491700000000033e-05, 8.49590000000025e-05, 8.484700000000248e-05, 8.441699999999983e-05, 8.462500000000137e-05, 8.501300000000184e-05, 8.519400000000024e-05, 8.431899999999937e-05, 8.513899999999797e-05, 8.505500000000055e-05, 8.520800000000328e-05, 8.504200000000045e-05, 8.437499999999765e-05, 8.441699999999983e-05, 8.522299999999886e-05, 8.442999999999992e-05, 8.491600000000085e-05, 8.445799999999906e-05, 8.456899999999962e-05, 8.444399999999949e-05, 8.515299999999754e-05, 8.51110000000023e-05, 8.473600000000192e-05, 8.4846999999999e-05, 8.476400000000106e-05, 8.42919999999997e-05, 8.450000000000124e-05, 8.444399999999949e-05]</msg>
<status status="PASS" starttime="20201030 18:28:43.526" endtime="20201030 18:28:43.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.521" endtime="20201030 18:28:43.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:43.532" endtime="20201030 18:28:43.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.531" endtime="20201030 18:28:43.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.529" endtime="20201030 18:28:43.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.170" endtime="20201030 18:28:43.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.170" endtime="20201030 18:28:43.553"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.561" endtime="20201030 18:28:43.581"></status>
</kw>
<msg timestamp="20201030 18:28:43.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.560" endtime="20201030 18:28:43.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.582" endtime="20201030 18:28:43.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.585" endtime="20201030 18:28:43.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.557" endtime="20201030 18:28:43.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.555" endtime="20201030 18:28:43.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.595" endtime="20201030 18:28:43.881"></status>
</kw>
<msg timestamp="20201030 18:28:43.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021632722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021718944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.593" endtime="20201030 18:28:43.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021632722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021718944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.885" endtime="20201030 18:28:43.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.893" endtime="20201030 18:28:43.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.590" endtime="20201030 18:28:43.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.588" endtime="20201030 18:28:43.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:43.900" level="INFO">${RESULT} = [{'diff': 8.622200000000038e-05}, {'diff': 8.611200000000277e-05}, {'diff': 8.580499999999783e-05}, {'diff': 8.570800000000031e-05}, {'diff': 8.533299999999994e-05}, {'diff': 8.541599999999788e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:43.897" endtime="20201030 18:28:43.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:43.904" level="INFO">${ACCURACY} = {'diff': [8.622200000000038e-05, 8.611200000000277e-05, 8.580499999999783e-05, 8.570800000000031e-05, 8.533299999999994e-05, 8.541599999999788e-05, 8.613899999999897e-05, 8.611099999999983e-05, 8.6042...</msg>
<status status="PASS" starttime="20201030 18:28:43.901" endtime="20201030 18:28:43.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.908" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 18:28:43.907" endtime="20201030 18:28:43.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.911" level="INFO">VALUE: [8.622200000000038e-05, 8.611200000000277e-05, 8.580499999999783e-05, 8.570800000000031e-05, 8.533299999999994e-05, 8.541599999999788e-05, 8.613899999999897e-05, 8.611099999999983e-05, 8.604200000000145e-05, 8.613899999999897e-05, 8.607000000000059e-05, 8.605600000000102e-05, 8.615299999999854e-05, 8.53469999999995e-05, 8.61249999999994e-05, 8.56249999999989e-05, 8.609700000000026e-05, 8.601399999999884e-05, 8.540299999999779e-05, 8.557000000000009e-05, 8.54729999999991e-05, 8.573600000000292e-05, 8.554200000000095e-05, 8.602700000000241e-05, 8.611099999999983e-05, 8.556899999999715e-05, 8.566700000000108e-05, 8.541700000000083e-05, 8.545800000000006e-05, 8.548600000000267e-05, 8.611099999999983e-05, 8.554200000000095e-05, 8.52920000000007e-05, 8.554100000000148e-05, 8.601399999999884e-05, 8.556900000000062e-05, 8.5847e-05, 8.601399999999884e-05, 8.53469999999995e-05, 8.61249999999994e-05, 8.555500000000105e-05, 8.533399999999941e-05, 8.568100000000065e-05, 8.599999999999927e-05, 8.566599999999813e-05, 8.581900000000087e-05, 8.5847e-05, 8.563900000000194e-05, 8.611099999999983e-05, 8.604200000000145e-05]</msg>
<status status="PASS" starttime="20201030 18:28:43.910" endtime="20201030 18:28:43.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.905" endtime="20201030 18:28:43.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:43.916" endtime="20201030 18:28:43.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.914" endtime="20201030 18:28:43.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.913" endtime="20201030 18:28:43.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.554" endtime="20201030 18:28:43.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.553" endtime="20201030 18:28:43.936"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.945" endtime="20201030 18:28:43.965"></status>
</kw>
<msg timestamp="20201030 18:28:43.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.943" endtime="20201030 18:28:43.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.966" endtime="20201030 18:28:43.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.969" endtime="20201030 18:28:43.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.941" endtime="20201030 18:28:43.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.939" endtime="20201030 18:28:43.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.978" endtime="20201030 18:28:44.263"></status>
</kw>
<msg timestamp="20201030 18:28:44.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022836181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022923125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.976" endtime="20201030 18:28:44.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022836181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022923125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.267" endtime="20201030 18:28:44.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.276" endtime="20201030 18:28:44.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.974" endtime="20201030 18:28:44.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.972" endtime="20201030 18:28:44.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:44.283" level="INFO">${RESULT} = [{'diff': 8.694399999999852e-05}, {'diff': 8.702799999999941e-05}, {'diff': 8.657000000000109e-05}, {'diff': 8.705600000000202e-05}, {'diff': 8.669500000000122e-05}, {'diff': 8.66249999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:44.279" endtime="20201030 18:28:44.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:44.287" level="INFO">${ACCURACY} = {'diff': [8.694399999999852e-05, 8.702799999999941e-05, 8.657000000000109e-05, 8.705600000000202e-05, 8.669500000000122e-05, 8.66249999999999e-05, 8.627699999999919e-05, 8.669399999999827e-05, 8.63190...</msg>
<status status="PASS" starttime="20201030 18:28:44.284" endtime="20201030 18:28:44.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.291" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 18:28:44.290" endtime="20201030 18:28:44.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.294" level="INFO">VALUE: [8.694399999999852e-05, 8.702799999999941e-05, 8.657000000000109e-05, 8.705600000000202e-05, 8.669500000000122e-05, 8.66249999999999e-05, 8.627699999999919e-05, 8.669399999999827e-05, 8.631900000000137e-05, 8.687500000000015e-05, 8.711100000000083e-05, 8.644500000000097e-05, 8.69860000000007e-05, 8.658400000000066e-05, 8.673600000000045e-05, 8.726400000000009e-05, 8.687500000000015e-05, 8.630499999999833e-05, 8.676399999999959e-05, 8.633400000000041e-05, 8.683300000000144e-05, 8.713899999999997e-05, 8.690299999999929e-05, 8.694500000000147e-05, 8.687500000000015e-05, 8.686100000000058e-05, 8.702699999999994e-05, 8.642999999999845e-05, 8.63470000000005e-05, 8.64860000000002e-05, 8.654199999999848e-05, 8.718099999999868e-05, 8.71669999999991e-05, 8.720899999999782e-05, 8.676399999999959e-05, 8.655600000000152e-05, 8.697200000000113e-05, 8.6847000000001e-05, 8.686100000000058e-05, 8.726400000000009e-05, 8.707000000000159e-05, 8.719400000000224e-05, 8.637499999999965e-05, 8.669499999999775e-05, 8.684800000000048e-05, 8.73189999999989e-05, 8.636100000000008e-05, 8.686100000000058e-05, 8.68059999999983e-05, 8.63189999999979e-05]</msg>
<status status="PASS" starttime="20201030 18:28:44.293" endtime="20201030 18:28:44.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.288" endtime="20201030 18:28:44.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:44.300" endtime="20201030 18:28:44.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.298" endtime="20201030 18:28:44.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.297" endtime="20201030 18:28:44.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.937" endtime="20201030 18:28:44.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.937" endtime="20201030 18:28:44.321"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.330" endtime="20201030 18:28:44.349"></status>
</kw>
<msg timestamp="20201030 18:28:44.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.328" endtime="20201030 18:28:44.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.350" endtime="20201030 18:28:44.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.353" endtime="20201030 18:28:44.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.325" endtime="20201030 18:28:44.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.323" endtime="20201030 18:28:44.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.362" endtime="20201030 18:28:44.673"></status>
</kw>
<msg timestamp="20201030 18:28:44.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022302847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022390833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.360" endtime="20201030 18:28:44.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022302847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022390833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.677" endtime="20201030 18:28:44.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.686" endtime="20201030 18:28:44.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.358" endtime="20201030 18:28:44.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.356" endtime="20201030 18:28:44.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:44.693" level="INFO">${RESULT} = [{'diff': 8.798599999999823e-05}, {'diff': 8.791699999999986e-05}, {'diff': 8.808399999999869e-05}, {'diff': 8.76669999999996e-05}, {'diff': 8.736100000000108e-05}, {'diff': 8.770800000000231e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:44.689" endtime="20201030 18:28:44.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:44.700" level="INFO">${ACCURACY} = {'diff': [8.798599999999823e-05, 8.791699999999986e-05, 8.808399999999869e-05, 8.76669999999996e-05, 8.736100000000108e-05, 8.770800000000231e-05, 8.727799999999966e-05, 8.768099999999918e-05, 8.83189...</msg>
<status status="PASS" starttime="20201030 18:28:44.694" endtime="20201030 18:28:44.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.705" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 18:28:44.704" endtime="20201030 18:28:44.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.709" level="INFO">VALUE: [8.798599999999823e-05, 8.791699999999986e-05, 8.808399999999869e-05, 8.76669999999996e-05, 8.736100000000108e-05, 8.770800000000231e-05, 8.727799999999966e-05, 8.768099999999918e-05, 8.83189999999999e-05, 8.74860000000012e-05, 8.827800000000066e-05, 8.775000000000102e-05, 8.787500000000115e-05, 8.788899999999725e-05, 8.787500000000115e-05, 8.772200000000188e-05, 8.786100000000158e-05, 8.738900000000022e-05, 8.741599999999988e-05, 8.76519999999971e-05, 8.78050000000033e-05, 8.733300000000194e-05, 8.801400000000084e-05, 8.720800000000181e-05, 8.733299999999847e-05, 8.818099999999968e-05, 8.754199999999948e-05, 8.752799999999991e-05, 8.744500000000197e-05, 8.741599999999988e-05, 8.750000000000077e-05, 8.819399999999977e-05, 8.758299999999872e-05, 8.794399999999952e-05, 8.776400000000059e-05, 8.729199999999923e-05, 8.761100000000133e-05, 8.741700000000283e-05, 8.733299999999847e-05, 8.754100000000001e-05, 8.76250000000009e-05, 8.823599999999848e-05, 8.769399999999927e-05, 8.81800000000002e-05, 8.805599999999955e-05, 8.768100000000265e-05, 8.750000000000077e-05, 8.808299999999922e-05, 8.765200000000056e-05, 8.790300000000029e-05]</msg>
<status status="PASS" starttime="20201030 18:28:44.706" endtime="20201030 18:28:44.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.701" endtime="20201030 18:28:44.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:44.714" endtime="20201030 18:28:44.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.712" endtime="20201030 18:28:44.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.711" endtime="20201030 18:28:44.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.322" endtime="20201030 18:28:44.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.321" endtime="20201030 18:28:44.735"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.744" endtime="20201030 18:28:44.763"></status>
</kw>
<msg timestamp="20201030 18:28:44.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.742" endtime="20201030 18:28:44.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.764" endtime="20201030 18:28:44.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.767" endtime="20201030 18:28:44.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.739" endtime="20201030 18:28:44.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.737" endtime="20201030 18:28:44.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.776" endtime="20201030 18:28:45.063"></status>
</kw>
<msg timestamp="20201030 18:28:45.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022270722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.774" endtime="20201030 18:28:45.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022270722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.067" endtime="20201030 18:28:45.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.076" endtime="20201030 18:28:45.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.772" endtime="20201030 18:28:45.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.770" endtime="20201030 18:28:45.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.083" level="INFO">${RESULT} = [{'diff': 8.887499999999868e-05}, {'diff': 8.917999999999773e-05}, {'diff': 8.908299999999675e-05}, {'diff': 8.875000000000202e-05}, {'diff': 8.836099999999861e-05}, {'diff': 8.891699999999739e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:45.080" endtime="20201030 18:28:45.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:45.087" level="INFO">${ACCURACY} = {'diff': [8.887499999999868e-05, 8.917999999999773e-05, 8.908299999999675e-05, 8.875000000000202e-05, 8.836099999999861e-05, 8.891699999999739e-05, 8.886100000000258e-05, 8.917999999999773e-05, 8.9222...</msg>
<status status="PASS" starttime="20201030 18:28:45.084" endtime="20201030 18:28:45.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.092" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 18:28:45.091" endtime="20201030 18:28:45.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.094" level="INFO">VALUE: [8.887499999999868e-05, 8.917999999999773e-05, 8.908299999999675e-05, 8.875000000000202e-05, 8.836099999999861e-05, 8.891699999999739e-05, 8.886100000000258e-05, 8.917999999999773e-05, 8.922299999999939e-05, 8.91250000000024e-05, 8.827799999999719e-05, 8.876400000000159e-05, 8.830500000000033e-05, 8.919500000000025e-05, 8.893099999999696e-05, 8.8945e-05, 8.872300000000236e-05, 8.927700000000219e-05, 8.877700000000169e-05, 8.909699999999979e-05, 8.912499999999893e-05, 8.876400000000159e-05, 8.926400000000209e-05, 8.844400000000002e-05, 8.905600000000055e-05, 8.927799999999819e-05, 8.901400000000184e-05, 8.841700000000036e-05, 8.848599999999873e-05, 8.91800000000012e-05, 8.83189999999999e-05, 8.904099999999804e-05, 8.917999999999773e-05, 8.919400000000077e-05, 8.911099999999936e-05, 8.859699999999929e-05, 8.905600000000055e-05, 8.902800000000141e-05, 8.874999999999855e-05, 8.874999999999855e-05, 8.900000000000227e-05, 8.904200000000098e-05, 8.916699999999764e-05, 8.894400000000052e-05, 8.897199999999966e-05, 8.855600000000005e-05, 8.843099999999993e-05, 8.855600000000005e-05, 8.908300000000022e-05, 8.906899999999718e-05]</msg>
<status status="PASS" starttime="20201030 18:28:45.093" endtime="20201030 18:28:45.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.088" endtime="20201030 18:28:45.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.099" endtime="20201030 18:28:45.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.098" endtime="20201030 18:28:45.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.096" endtime="20201030 18:28:45.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.736" endtime="20201030 18:28:45.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.735" endtime="20201030 18:28:45.120"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.129" endtime="20201030 18:28:45.150"></status>
</kw>
<msg timestamp="20201030 18:28:45.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.127" endtime="20201030 18:28:45.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.151" endtime="20201030 18:28:45.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.154" endtime="20201030 18:28:45.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.125" endtime="20201030 18:28:45.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.123" endtime="20201030 18:28:45.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.163" endtime="20201030 18:28:45.449"></status>
</kw>
<msg timestamp="20201030 18:28:45.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023183417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023273236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.161" endtime="20201030 18:28:45.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023183417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023273236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.454" endtime="20201030 18:28:45.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.462" endtime="20201030 18:28:45.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.159" endtime="20201030 18:28:45.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.157" endtime="20201030 18:28:45.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.469" level="INFO">${RESULT} = [{'diff': 8.981899999999793e-05}, {'diff': 8.929200000000123e-05}, {'diff': 8.945800000000059e-05}, {'diff': 8.933300000000047e-05}, {'diff': 9.01389999999995e-05}, {'diff': 8.945900000000007e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:45.466" endtime="20201030 18:28:45.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:45.473" level="INFO">${ACCURACY} = {'diff': [8.981899999999793e-05, 8.929200000000123e-05, 8.945800000000059e-05, 8.933300000000047e-05, 9.01389999999995e-05, 8.945900000000007e-05, 8.958400000000019e-05, 8.938799999999927e-05, 8.94029...</msg>
<status status="PASS" starttime="20201030 18:28:45.470" endtime="20201030 18:28:45.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.478" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 18:28:45.477" endtime="20201030 18:28:45.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.480" level="INFO">VALUE: [8.981899999999793e-05, 8.929200000000123e-05, 8.945800000000059e-05, 8.933300000000047e-05, 9.01389999999995e-05, 8.945900000000007e-05, 8.958400000000019e-05, 8.938799999999927e-05, 8.940299999999832e-05, 8.933300000000047e-05, 8.94860000000032e-05, 8.974999999999955e-05, 8.99999999999998e-05, 9.025000000000005e-05, 8.990299999999882e-05, 8.983300000000097e-05, 9.012499999999993e-05, 8.963799999999952e-05, 9.017999999999873e-05, 9.005599999999808e-05, 9.01939999999983e-05, 9.019499999999778e-05, 8.983400000000044e-05, 9.01389999999995e-05, 8.970900000000032e-05, 8.988899999999925e-05, 8.99999999999998e-05, 8.936099999999961e-05, 8.959700000000029e-05, 9.017999999999873e-05, 8.930499999999786e-05, 8.963900000000247e-05, 8.969500000000075e-05, 9.027800000000266e-05, 8.932000000000037e-05, 9.020900000000082e-05, 8.937500000000265e-05, 8.99999999999998e-05, 9.016599999999916e-05, 8.965300000000204e-05, 8.9638999999999e-05, 8.952800000000191e-05, 8.933300000000047e-05, 8.9638999999999e-05, 8.969500000000075e-05, 8.938899999999875e-05, 9.018100000000168e-05, 9.011100000000036e-05, 8.920799999999687e-05, 8.994399999999805e-05]</msg>
<status status="PASS" starttime="20201030 18:28:45.479" endtime="20201030 18:28:45.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.474" endtime="20201030 18:28:45.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.486" endtime="20201030 18:28:45.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.485" endtime="20201030 18:28:45.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.484" endtime="20201030 18:28:45.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.121" endtime="20201030 18:28:45.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.120" endtime="20201030 18:28:45.508"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.517" endtime="20201030 18:28:45.537"></status>
</kw>
<msg timestamp="20201030 18:28:45.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.515" endtime="20201030 18:28:45.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.539" endtime="20201030 18:28:45.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.541" endtime="20201030 18:28:45.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.513" endtime="20201030 18:28:45.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.511" endtime="20201030 18:28:45.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.550" endtime="20201030 18:28:45.836"></status>
</kw>
<msg timestamp="20201030 18:28:45.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023492167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023582972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.549" endtime="20201030 18:28:45.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023492167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023582972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.840" endtime="20201030 18:28:45.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.848" endtime="20201030 18:28:45.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.546" endtime="20201030 18:28:45.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.544" endtime="20201030 18:28:45.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.855" level="INFO">${RESULT} = [{'diff': 9.080499999999936e-05}, {'diff': 9.127800000000019e-05}, {'diff': 9.112499999999746e-05}, {'diff': 9.122199999999844e-05}, {'diff': 9.08060000000023e-05}, {'diff': 9.124999999999758e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:45.852" endtime="20201030 18:28:45.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:45.860" level="INFO">${ACCURACY} = {'diff': [9.080499999999936e-05, 9.127800000000019e-05, 9.112499999999746e-05, 9.122199999999844e-05, 9.08060000000023e-05, 9.124999999999758e-05, 9.08199999999984e-05, 9.08199999999984e-05, 9.0486000...</msg>
<status status="PASS" starttime="20201030 18:28:45.856" endtime="20201030 18:28:45.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.865" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 18:28:45.864" endtime="20201030 18:28:45.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.868" level="INFO">VALUE: [9.080499999999936e-05, 9.127800000000019e-05, 9.112499999999746e-05, 9.122199999999844e-05, 9.08060000000023e-05, 9.124999999999758e-05, 9.08199999999984e-05, 9.08199999999984e-05, 9.048600000000073e-05, 9.102700000000047e-05, 9.05000000000003e-05, 9.115300000000007e-05, 9.06939999999988e-05, 9.048599999999726e-05, 9.118099999999921e-05, 9.126299999999768e-05, 9.122200000000191e-05, 9.040299999999932e-05, 9.098599999999776e-05, 9.097199999999819e-05, 9.073600000000098e-05, 9.047199999999769e-05, 9.061100000000086e-05, 9.109699999999832e-05, 9.084699999999807e-05, 9.095799999999862e-05, 9.093099999999896e-05, 9.055600000000205e-05, 9.104100000000004e-05, 9.052699999999997e-05, 9.077799999999969e-05, 9.091699999999939e-05, 9.097199999999819e-05, 9.073600000000098e-05, 9.073600000000098e-05, 9.027799999999919e-05, 9.066599999999966e-05, 9.075000000000055e-05, 9.027699999999972e-05, 9.111100000000136e-05, 9.120800000000234e-05, 9.040299999999932e-05, 9.055600000000205e-05, 9.041699999999889e-05, 9.047200000000116e-05, 9.115300000000007e-05, 9.122299999999792e-05, 9.123599999999801e-05, 9.03190000000019e-05, 9.045800000000159e-05]</msg>
<status status="PASS" starttime="20201030 18:28:45.866" endtime="20201030 18:28:45.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.861" endtime="20201030 18:28:45.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.873" endtime="20201030 18:28:45.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.871" endtime="20201030 18:28:45.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.870" endtime="20201030 18:28:45.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.509" endtime="20201030 18:28:45.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.508" endtime="20201030 18:28:45.893"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.902" endtime="20201030 18:28:45.923"></status>
</kw>
<msg timestamp="20201030 18:28:45.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.901" endtime="20201030 18:28:45.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.924" endtime="20201030 18:28:45.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.927" endtime="20201030 18:28:45.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.898" endtime="20201030 18:28:45.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.896" endtime="20201030 18:28:45.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.936" endtime="20201030 18:28:46.224"></status>
</kw>
<msg timestamp="20201030 18:28:46.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022553333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.935" endtime="20201030 18:28:46.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022553333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.229" endtime="20201030 18:28:46.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.238" endtime="20201030 18:28:46.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.932" endtime="20201030 18:28:46.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.930" endtime="20201030 18:28:46.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:46.244" level="INFO">${RESULT} = [{'diff': 9.147300000000164e-05}, {'diff': 9.199999999999833e-05}, {'diff': 9.140200000000084e-05}, {'diff': 9.206899999999671e-05}, {'diff': 9.211100000000236e-05}, {'diff': 9.172199999999894e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:46.241" endtime="20201030 18:28:46.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:46.248" level="INFO">${ACCURACY} = {'diff': [9.147300000000164e-05, 9.199999999999833e-05, 9.140200000000084e-05, 9.206899999999671e-05, 9.211100000000236e-05, 9.172199999999894e-05, 9.188899999999778e-05, 9.155599999999958e-05, 9.1792...</msg>
<status status="PASS" starttime="20201030 18:28:46.245" endtime="20201030 18:28:46.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.253" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 18:28:46.252" endtime="20201030 18:28:46.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.256" level="INFO">VALUE: [9.147300000000164e-05, 9.199999999999833e-05, 9.140200000000084e-05, 9.206899999999671e-05, 9.211100000000236e-05, 9.172199999999894e-05, 9.188899999999778e-05, 9.155599999999958e-05, 9.179200000000026e-05, 9.211099999999889e-05, 9.151400000000087e-05, 9.212500000000193e-05, 9.183400000000244e-05, 9.220799999999987e-05, 9.161100000000186e-05, 9.201400000000137e-05, 9.219399999999683e-05, 9.201400000000137e-05, 9.222299999999892e-05, 9.187499999999821e-05, 9.211199999999836e-05, 9.175000000000155e-05, 9.176400000000112e-05, 9.158299999999925e-05, 9.129199999999976e-05, 9.15139999999974e-05, 9.159699999999882e-05, 9.190299999999735e-05, 9.158399999999872e-05, 9.149999999999783e-05, 9.190200000000134e-05, 9.136100000000161e-05, 9.209699999999932e-05, 9.186099999999864e-05, 9.162500000000143e-05, 9.197200000000266e-05, 9.144499999999903e-05, 9.20000000000018e-05, 9.219499999999978e-05, 9.212500000000193e-05, 9.205500000000061e-05, 9.206900000000018e-05, 9.145799999999912e-05, 9.177799999999722e-05, 9.134699999999857e-05, 9.136100000000161e-05, 9.176400000000112e-05, 9.220899999999935e-05, 9.219499999999978e-05, 9.165199999999762e-05]</msg>
<status status="PASS" starttime="20201030 18:28:46.254" endtime="20201030 18:28:46.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.249" endtime="20201030 18:28:46.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.261" endtime="20201030 18:28:46.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.259" endtime="20201030 18:28:46.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.258" endtime="20201030 18:28:46.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.894" endtime="20201030 18:28:46.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.894" endtime="20201030 18:28:46.281"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.290" endtime="20201030 18:28:46.311"></status>
</kw>
<msg timestamp="20201030 18:28:46.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.289" endtime="20201030 18:28:46.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.313" endtime="20201030 18:28:46.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.315" endtime="20201030 18:28:46.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.286" endtime="20201030 18:28:46.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.284" endtime="20201030 18:28:46.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.325" endtime="20201030 18:28:46.611"></status>
</kw>
<msg timestamp="20201030 18:28:46.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023365236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023458472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.323" endtime="20201030 18:28:46.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023365236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023458472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.616" endtime="20201030 18:28:46.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.625" endtime="20201030 18:28:46.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.320" endtime="20201030 18:28:46.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.319" endtime="20201030 18:28:46.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:46.631" level="INFO">${RESULT} = [{'diff': 9.323600000000001e-05}, {'diff': 9.243099999999699e-05}, {'diff': 9.309700000000032e-05}, {'diff': 9.274999999999908e-05}, {'diff': 9.284700000000007e-05}, {'diff': 9.320899999999688e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:46.628" endtime="20201030 18:28:46.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:46.636" level="INFO">${ACCURACY} = {'diff': [9.323600000000001e-05, 9.243099999999699e-05, 9.309700000000032e-05, 9.274999999999908e-05, 9.284700000000007e-05, 9.320899999999688e-05, 9.318099999999774e-05, 9.3026999999999e-05, 9.291700...</msg>
<status status="PASS" starttime="20201030 18:28:46.632" endtime="20201030 18:28:46.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.640" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 18:28:46.639" endtime="20201030 18:28:46.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.643" level="INFO">VALUE: [9.323600000000001e-05, 9.243099999999699e-05, 9.309700000000032e-05, 9.274999999999908e-05, 9.284700000000007e-05, 9.320899999999688e-05, 9.318099999999774e-05, 9.3026999999999e-05, 9.291700000000139e-05, 9.293000000000148e-05, 9.295800000000062e-05, 9.304199999999804e-05, 9.270800000000037e-05, 9.298599999999976e-05, 9.288900000000225e-05, 9.28200000000004e-05, 9.257000000000015e-05, 9.27079999999969e-05, 9.231899999999696e-05, 9.299999999999933e-05, 9.295800000000062e-05, 9.318099999999774e-05, 9.305599999999761e-05, 9.237499999999871e-05, 9.305599999999761e-05, 9.230600000000033e-05, 9.245800000000012e-05, 9.255500000000111e-05, 9.241599999999794e-05, 9.249999999999883e-05, 9.312499999999946e-05, 9.311099999999989e-05, 9.316700000000164e-05, 9.319500000000078e-05, 9.290300000000182e-05, 9.320800000000087e-05, 9.273599999999951e-05, 9.259699999999982e-05, 9.261099999999939e-05, 9.256900000000068e-05, 9.262500000000243e-05, 9.319399999999783e-05, 9.30139999999989e-05, 9.236099999999914e-05, 9.31529999999986e-05, 9.31390000000025e-05, 9.31940000000013e-05, 9.317999999999826e-05, 9.31390000000025e-05, 9.2333e-05]</msg>
<status status="PASS" starttime="20201030 18:28:46.641" endtime="20201030 18:28:46.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.636" endtime="20201030 18:28:46.645"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.649" endtime="20201030 18:28:46.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.648" endtime="20201030 18:28:46.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.646" endtime="20201030 18:28:46.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.282" endtime="20201030 18:28:46.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.282" endtime="20201030 18:28:46.670"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.679" endtime="20201030 18:28:46.698"></status>
</kw>
<msg timestamp="20201030 18:28:46.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.677" endtime="20201030 18:28:46.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.699" endtime="20201030 18:28:46.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.702" endtime="20201030 18:28:46.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.675" endtime="20201030 18:28:46.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.672" endtime="20201030 18:28:46.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.711" endtime="20201030 18:28:47.010"></status>
</kw>
<msg timestamp="20201030 18:28:47.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021899611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.709" endtime="20201030 18:28:47.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021899611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.014" endtime="20201030 18:28:47.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.022" endtime="20201030 18:28:47.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.706" endtime="20201030 18:28:47.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.705" endtime="20201030 18:28:47.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:47.029" level="INFO">${RESULT} = [{'diff': 9.327799999999872e-05}, {'diff': 9.368099999999824e-05}, {'diff': 9.348600000000026e-05}, {'diff': 9.404199999999904e-05}, {'diff': 9.338900000000275e-05}, {'diff': 9.359800000000029e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:47.026" endtime="20201030 18:28:47.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:47.034" level="INFO">${ACCURACY} = {'diff': [9.327799999999872e-05, 9.368099999999824e-05, 9.348600000000026e-05, 9.404199999999904e-05, 9.338900000000275e-05, 9.359800000000029e-05, 9.387499999999674e-05, 9.41529999999996e-05, 9.35410...</msg>
<status status="PASS" starttime="20201030 18:28:47.030" endtime="20201030 18:28:47.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.038" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 18:28:47.037" endtime="20201030 18:28:47.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.040" level="INFO">VALUE: [9.327799999999872e-05, 9.368099999999824e-05, 9.348600000000026e-05, 9.404199999999904e-05, 9.338900000000275e-05, 9.359800000000029e-05, 9.387499999999674e-05, 9.41529999999996e-05, 9.354100000000254e-05, 9.4027e-05, 9.391700000000239e-05, 9.363899999999953e-05, 9.362499999999996e-05, 9.41529999999996e-05, 9.424999999999711e-05, 9.377699999999975e-05, 9.40139999999999e-05, 9.405600000000208e-05, 9.38469999999976e-05, 9.349999999999983e-05, 9.388899999999978e-05, 9.391700000000239e-05, 9.394500000000153e-05, 9.358400000000072e-05, 9.40139999999999e-05, 9.420900000000135e-05, 9.34720000000007e-05, 9.425000000000058e-05, 9.376399999999965e-05, 9.334800000000004e-05, 9.423600000000101e-05, 9.387500000000021e-05, 9.411100000000089e-05, 9.388899999999978e-05, 9.348699999999974e-05, 9.418100000000221e-05, 9.35269999999995e-05, 9.362499999999996e-05, 9.388899999999978e-05, 9.359700000000082e-05, 9.345799999999765e-05, 9.425000000000058e-05, 9.372199999999747e-05, 9.329200000000176e-05, 9.341700000000189e-05, 9.327800000000219e-05, 9.358300000000125e-05, 9.38330000000015e-05, 9.388899999999978e-05, 9.365300000000257e-05]</msg>
<status status="PASS" starttime="20201030 18:28:47.039" endtime="20201030 18:28:47.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.035" endtime="20201030 18:28:47.042"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:47.045" endtime="20201030 18:28:47.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.044" endtime="20201030 18:28:47.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.043" endtime="20201030 18:28:47.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.671" endtime="20201030 18:28:47.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.670" endtime="20201030 18:28:47.066"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.074" endtime="20201030 18:28:47.094"></status>
</kw>
<msg timestamp="20201030 18:28:47.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.073" endtime="20201030 18:28:47.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.096" endtime="20201030 18:28:47.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.098" endtime="20201030 18:28:47.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.070" endtime="20201030 18:28:47.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.068" endtime="20201030 18:28:47.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.107" endtime="20201030 18:28:47.394"></status>
</kw>
<msg timestamp="20201030 18:28:47.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022027778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.106" endtime="20201030 18:28:47.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022027778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.398" endtime="20201030 18:28:47.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.406" endtime="20201030 18:28:47.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.103" endtime="20201030 18:28:47.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.101" endtime="20201030 18:28:47.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:47.413" level="INFO">${RESULT} = [{'diff': 9.463899999999706e-05}, {'diff': 9.456899999999921e-05}, {'diff': 9.469399999999933e-05}, {'diff': 9.445899999999813e-05}, {'diff': 9.472299999999795e-05}, {'diff': 9.498600000000176e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:47.410" endtime="20201030 18:28:47.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:47.417" level="INFO">${ACCURACY} = {'diff': [9.463899999999706e-05, 9.456899999999921e-05, 9.469399999999933e-05, 9.445899999999813e-05, 9.472299999999795e-05, 9.498600000000176e-05, 9.458299999999878e-05, 9.476300000000118e-05, 9.5193...</msg>
<status status="PASS" starttime="20201030 18:28:47.414" endtime="20201030 18:28:47.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.421" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 18:28:47.420" endtime="20201030 18:28:47.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.424" level="INFO">VALUE: [9.463899999999706e-05, 9.456899999999921e-05, 9.469399999999933e-05, 9.445899999999813e-05, 9.472299999999795e-05, 9.498600000000176e-05, 9.458299999999878e-05, 9.476300000000118e-05, 9.519399999999983e-05, 9.458300000000225e-05, 9.479199999999979e-05, 9.425000000000058e-05, 9.448600000000126e-05, 9.493099999999949e-05, 9.509800000000179e-05, 9.458399999999825e-05, 9.44859999999978e-05, 9.444399999999908e-05, 9.425000000000058e-05, 9.431899999999896e-05, 9.426400000000015e-05, 9.525000000000158e-05, 9.505599999999961e-05, 9.51530000000006e-05, 9.474999999999761e-05, 9.472299999999795e-05, 9.467999999999976e-05, 9.504100000000057e-05, 9.463900000000053e-05, 9.427799999999972e-05, 9.452799999999997e-05, 9.458399999999825e-05, 9.459699999999835e-05, 9.436100000000114e-05, 9.467999999999976e-05, 9.440299999999985e-05, 9.450000000000083e-05, 9.476400000000065e-05, 9.433299999999853e-05, 9.461100000000139e-05, 9.506999999999918e-05, 9.519500000000278e-05, 9.455599999999911e-05, 9.526400000000115e-05, 9.475000000000108e-05, 9.490200000000087e-05, 9.467999999999976e-05, 9.459700000000182e-05, 9.50140000000009e-05, 9.51530000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:28:47.422" endtime="20201030 18:28:47.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.418" endtime="20201030 18:28:47.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:47.429" endtime="20201030 18:28:47.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.427" endtime="20201030 18:28:47.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.426" endtime="20201030 18:28:47.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.067" endtime="20201030 18:28:47.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.066" endtime="20201030 18:28:47.449"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.458" endtime="20201030 18:28:47.478"></status>
</kw>
<msg timestamp="20201030 18:28:47.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.456" endtime="20201030 18:28:47.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.479" endtime="20201030 18:28:47.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.482" endtime="20201030 18:28:47.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.454" endtime="20201030 18:28:47.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.452" endtime="20201030 18:28:47.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.491" endtime="20201030 18:28:47.777"></status>
</kw>
<msg timestamp="20201030 18:28:47.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023106153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023201597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.489" endtime="20201030 18:28:47.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023106153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023201597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.781" endtime="20201030 18:28:47.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.790" endtime="20201030 18:28:47.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.487" endtime="20201030 18:28:47.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.485" endtime="20201030 18:28:47.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:47.797" level="INFO">${RESULT} = [{'diff': 9.544400000000008e-05}, {'diff': 9.586099999999917e-05}, {'diff': 9.587500000000221e-05}, {'diff': 9.565299999999763e-05}, {'diff': 9.574999999999861e-05}, {'diff': 9.586100000000264e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:47.794" endtime="20201030 18:28:47.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:47.801" level="INFO">${ACCURACY} = {'diff': [9.544400000000008e-05, 9.586099999999917e-05, 9.587500000000221e-05, 9.565299999999763e-05, 9.574999999999861e-05, 9.586100000000264e-05, 9.547199999999922e-05, 9.541700000000042e-05, 9.5958...</msg>
<status status="PASS" starttime="20201030 18:28:47.798" endtime="20201030 18:28:47.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.806" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 18:28:47.805" endtime="20201030 18:28:47.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.808" level="INFO">VALUE: [9.544400000000008e-05, 9.586099999999917e-05, 9.587500000000221e-05, 9.565299999999763e-05, 9.574999999999861e-05, 9.586100000000264e-05, 9.547199999999922e-05, 9.541700000000042e-05, 9.595899999999963e-05, 9.587499999999874e-05, 9.55270000000015e-05, 9.590300000000135e-05, 9.563900000000153e-05, 9.573599999999904e-05, 9.618100000000074e-05, 9.618100000000074e-05, 9.595899999999963e-05, 9.569400000000033e-05, 9.602800000000147e-05, 9.606900000000071e-05, 9.58469999999996e-05, 9.531999999999943e-05, 9.597199999999972e-05, 9.583300000000003e-05, 9.588899999999831e-05, 9.543099999999999e-05, 9.575000000000208e-05, 9.562499999999849e-05, 9.598600000000276e-05, 9.586099999999917e-05, 9.602800000000147e-05, 9.554200000000054e-05, 9.623599999999954e-05, 9.54720000000027e-05, 9.61660000000017e-05, 9.56530000000011e-05, 9.569400000000033e-05, 9.533299999999953e-05, 9.529100000000082e-05, 9.613899999999856e-05, 9.583300000000003e-05, 9.541700000000042e-05, 9.605600000000061e-05, 9.536099999999867e-05, 9.545899999999913e-05, 9.584799999999907e-05, 9.572199999999947e-05, 9.573599999999904e-05, 9.54859999999988e-05, 9.600000000000233e-05]</msg>
<status status="PASS" starttime="20201030 18:28:47.807" endtime="20201030 18:28:47.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.802" endtime="20201030 18:28:47.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:47.814" endtime="20201030 18:28:47.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.813" endtime="20201030 18:28:47.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.811" endtime="20201030 18:28:47.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.450" endtime="20201030 18:28:47.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.450" endtime="20201030 18:28:47.835"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.844" endtime="20201030 18:28:47.864"></status>
</kw>
<msg timestamp="20201030 18:28:47.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.842" endtime="20201030 18:28:47.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.866" endtime="20201030 18:28:47.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.868" endtime="20201030 18:28:47.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.840" endtime="20201030 18:28:47.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.837" endtime="20201030 18:28:47.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.877" endtime="20201030 18:28:48.163"></status>
</kw>
<msg timestamp="20201030 18:28:48.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022368917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.876" endtime="20201030 18:28:48.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022368917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.167" endtime="20201030 18:28:48.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.175" endtime="20201030 18:28:48.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.873" endtime="20201030 18:28:48.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.871" endtime="20201030 18:28:48.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:48.182" level="INFO">${RESULT} = [{'diff': 9.711099999999695e-05}, {'diff': 9.62920000000013e-05}, {'diff': 9.666599999999873e-05}, {'diff': 9.711100000000042e-05}, {'diff': 9.683299999999756e-05}, {'diff': 9.693100000000149e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:48.178" endtime="20201030 18:28:48.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:48.189" level="INFO">${ACCURACY} = {'diff': [9.711099999999695e-05, 9.62920000000013e-05, 9.666599999999873e-05, 9.711100000000042e-05, 9.683299999999756e-05, 9.693100000000149e-05, 9.680600000000136e-05, 9.695800000000115e-05, 9.66949...</msg>
<status status="PASS" starttime="20201030 18:28:48.183" endtime="20201030 18:28:48.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.194" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 18:28:48.193" endtime="20201030 18:28:48.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.196" level="INFO">VALUE: [9.711099999999695e-05, 9.62920000000013e-05, 9.666599999999873e-05, 9.711100000000042e-05, 9.683299999999756e-05, 9.693100000000149e-05, 9.680600000000136e-05, 9.695800000000115e-05, 9.669499999999734e-05, 9.627799999999825e-05, 9.626399999999868e-05, 9.718099999999827e-05, 9.705499999999867e-05, 9.658299999999731e-05, 9.701399999999943e-05, 9.706900000000171e-05, 9.690300000000235e-05, 9.640300000000185e-05, 9.645900000000013e-05, 9.663899999999906e-05, 9.658400000000025e-05, 9.715200000000312e-05, 9.694399999999812e-05, 9.663899999999906e-05, 9.705599999999814e-05, 9.64859999999998e-05, 9.722300000000045e-05, 9.691699999999845e-05, 9.723700000000002e-05, 9.636099999999967e-05, 9.719400000000183e-05, 9.726399999999968e-05, 9.645800000000065e-05, 9.637499999999924e-05, 9.702800000000247e-05, 9.647200000000022e-05, 9.723600000000054e-05, 9.718099999999827e-05, 9.654199999999807e-05, 9.693000000000201e-05, 9.683300000000103e-05, 9.686100000000017e-05, 9.697199999999725e-05, 9.650000000000283e-05, 9.637500000000271e-05, 9.633300000000053e-05, 9.702800000000247e-05, 9.648699999999927e-05, 9.690299999999888e-05, 9.64019999999989e-05]</msg>
<status status="PASS" starttime="20201030 18:28:48.195" endtime="20201030 18:28:48.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.190" endtime="20201030 18:28:48.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:48.206" endtime="20201030 18:28:48.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.204" endtime="20201030 18:28:48.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.203" endtime="20201030 18:28:48.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.836" endtime="20201030 18:28:48.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.835" endtime="20201030 18:28:48.227"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.235" endtime="20201030 18:28:48.255"></status>
</kw>
<msg timestamp="20201030 18:28:48.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.234" endtime="20201030 18:28:48.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.259" endtime="20201030 18:28:48.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.264" endtime="20201030 18:28:48.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.231" endtime="20201030 18:28:48.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.229" endtime="20201030 18:28:48.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.282" endtime="20201030 18:28:48.575"></status>
</kw>
<msg timestamp="20201030 18:28:48.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.279" endtime="20201030 18:28:48.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.579" endtime="20201030 18:28:48.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.587" endtime="20201030 18:28:48.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.274" endtime="20201030 18:28:48.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.270" endtime="20201030 18:28:48.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:48.594" level="INFO">${RESULT} = [{'diff': 9.779199999999932e-05}, {'diff': 9.820799999999894e-05}, {'diff': 9.736100000000067e-05}, {'diff': 9.786200000000064e-05}, {'diff': 9.773600000000104e-05}, {'diff': 9.791699999999945e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:48.591" endtime="20201030 18:28:48.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:48.598" level="INFO">${ACCURACY} = {'diff': [9.779199999999932e-05, 9.820799999999894e-05, 9.736100000000067e-05, 9.786200000000064e-05, 9.773600000000104e-05, 9.791699999999945e-05, 9.819399999999937e-05, 9.731900000000196e-05, 9.8084...</msg>
<status status="PASS" starttime="20201030 18:28:48.595" endtime="20201030 18:28:48.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.602" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 18:28:48.601" endtime="20201030 18:28:48.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.605" level="INFO">VALUE: [9.779199999999932e-05, 9.820799999999894e-05, 9.736100000000067e-05, 9.786200000000064e-05, 9.773600000000104e-05, 9.791699999999945e-05, 9.819399999999937e-05, 9.731900000000196e-05, 9.808400000000175e-05, 9.745799999999818e-05, 9.743100000000199e-05, 9.812500000000099e-05, 9.761200000000039e-05, 9.809700000000185e-05, 9.758299999999831e-05, 9.759699999999788e-05, 9.729199999999882e-05, 9.738899999999981e-05, 9.776399999999671e-05, 9.820899999999841e-05, 9.745900000000113e-05, 9.8028e-05, 9.794500000000206e-05, 9.772200000000147e-05, 9.733300000000153e-05, 9.801400000000043e-05, 9.762500000000049e-05, 9.754199999999907e-05, 9.738899999999981e-05, 9.812500000000099e-05, 9.805599999999914e-05, 9.808399999999828e-05, 9.80410000000001e-05, 9.780499999999942e-05, 9.74860000000008e-05, 9.773599999999757e-05, 9.74860000000008e-05, 9.759700000000135e-05, 9.762500000000049e-05, 9.807000000000218e-05, 9.823599999999807e-05, 9.78470000000016e-05, 9.808299999999881e-05, 9.782000000000193e-05, 9.825000000000111e-05, 9.757000000000168e-05, 9.819500000000231e-05, 9.744500000000156e-05, 9.763900000000006e-05, 9.772300000000095e-05]</msg>
<status status="PASS" starttime="20201030 18:28:48.603" endtime="20201030 18:28:48.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.599" endtime="20201030 18:28:48.606"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:48.609" endtime="20201030 18:28:48.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.608" endtime="20201030 18:28:48.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.607" endtime="20201030 18:28:48.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.227" endtime="20201030 18:28:48.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.227" endtime="20201030 18:28:48.630"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.639" endtime="20201030 18:28:48.659"></status>
</kw>
<msg timestamp="20201030 18:28:48.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.637" endtime="20201030 18:28:48.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.661" endtime="20201030 18:28:48.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.663" endtime="20201030 18:28:48.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.635" endtime="20201030 18:28:48.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.632" endtime="20201030 18:28:48.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.673" endtime="20201030 18:28:48.959"></status>
</kw>
<msg timestamp="20201030 18:28:48.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022755597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.671" endtime="20201030 18:28:48.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022755597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.964" endtime="20201030 18:28:48.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.972" endtime="20201030 18:28:48.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.668" endtime="20201030 18:28:48.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.666" endtime="20201030 18:28:48.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:48.978" level="INFO">${RESULT} = [{'diff': 9.827800000000025e-05}, {'diff': 9.876400000000118e-05}, {'diff': 9.833299999999906e-05}, {'diff': 9.844400000000308e-05}, {'diff': 9.905600000000014e-05}, {'diff': 9.851400000000093e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:48.975" endtime="20201030 18:28:48.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:48.982" level="INFO">${ACCURACY} = {'diff': [9.827800000000025e-05, 9.876400000000118e-05, 9.833299999999906e-05, 9.844400000000308e-05, 9.905600000000014e-05, 9.851400000000093e-05, 9.854200000000007e-05, 9.905600000000014e-05, 9.8665...</msg>
<status status="PASS" starttime="20201030 18:28:48.979" endtime="20201030 18:28:48.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.986" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 18:28:48.986" endtime="20201030 18:28:48.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.989" level="INFO">VALUE: [9.827800000000025e-05, 9.876400000000118e-05, 9.833299999999906e-05, 9.844400000000308e-05, 9.905600000000014e-05, 9.851400000000093e-05, 9.854200000000007e-05, 9.905600000000014e-05, 9.866599999999726e-05, 9.847199999999875e-05, 9.879200000000032e-05, 9.8721999999999e-05, 9.837500000000124e-05, 9.8721999999999e-05, 9.912500000000199e-05, 9.91670000000007e-05, 9.827800000000025e-05, 9.845900000000213e-05, 9.88609999999987e-05, 9.858299999999931e-05, 9.844399999999962e-05, 9.862500000000149e-05, 9.861099999999845e-05, 9.844500000000256e-05, 9.844500000000256e-05, 9.91670000000007e-05, 9.869399999999987e-05, 9.865199999999769e-05, 9.844399999999962e-05, 9.827800000000025e-05, 9.837500000000124e-05, 9.906999999999971e-05, 9.893100000000002e-05, 9.919499999999984e-05, 9.840300000000038e-05, 9.901399999999796e-05, 9.92219999999995e-05, 9.875000000000161e-05, 9.88609999999987e-05, 9.873600000000204e-05, 9.872299999999848e-05, 9.88059999999999e-05, 9.898599999999882e-05, 9.836100000000167e-05, 9.888900000000131e-05, 9.856899999999974e-05, 9.84020000000009e-05, 9.897199999999926e-05, 9.915300000000113e-05, 9.904200000000057e-05]</msg>
<status status="PASS" starttime="20201030 18:28:48.988" endtime="20201030 18:28:48.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.983" endtime="20201030 18:28:48.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:48.995" endtime="20201030 18:28:49.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.993" endtime="20201030 18:28:49.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.992" endtime="20201030 18:28:49.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.631" endtime="20201030 18:28:49.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.630" endtime="20201030 18:28:49.015"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.024" endtime="20201030 18:28:49.044"></status>
</kw>
<msg timestamp="20201030 18:28:49.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.022" endtime="20201030 18:28:49.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.045" endtime="20201030 18:28:49.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.048" endtime="20201030 18:28:49.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.020" endtime="20201030 18:28:49.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.018" endtime="20201030 18:28:49.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.057" endtime="20201030 18:28:49.344"></status>
</kw>
<msg timestamp="20201030 18:28:49.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.055" endtime="20201030 18:28:49.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.348" endtime="20201030 18:28:49.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.356" endtime="20201030 18:28:49.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.052" endtime="20201030 18:28:49.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.051" endtime="20201030 18:28:49.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:49.363" level="INFO">${RESULT} = [{'diff': 0.00010019500000000084}, {'diff': 9.99020000000024e-05}, {'diff': 9.934699999999963e-05}, {'diff': 9.948599999999932e-05}, {'diff': 9.943100000000052e-05}, {'diff': 9.965299999999816e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:49.359" endtime="20201030 18:28:49.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:49.368" level="INFO">${ACCURACY} = {'diff': [0.00010019500000000084, 9.99020000000024e-05, 9.934699999999963e-05, 9.948599999999932e-05, 9.943100000000052e-05, 9.965299999999816e-05, 0.0001002220000000005, 9.963899999999859e-05, 9.9695...</msg>
<status status="PASS" starttime="20201030 18:28:49.364" endtime="20201030 18:28:49.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.372" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 18:28:49.371" endtime="20201030 18:28:49.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.374" level="INFO">VALUE: [0.00010019500000000084, 9.99020000000024e-05, 9.934699999999963e-05, 9.948599999999932e-05, 9.943100000000052e-05, 9.965299999999816e-05, 0.0001002220000000005, 9.963899999999859e-05, 9.969500000000034e-05, 9.986199999999917e-05, 9.947199999999976e-05, 9.927699999999831e-05, 0.0001001939999999979, 9.99999999999994e-05, 0.00010012499999999952, 9.9722e-05, 0.00010009700000000038, 9.970899999999991e-05, 0.00010002700000000253, 9.962500000000249e-05, 9.948599999999932e-05, 9.993099999999755e-05, 9.937500000000224e-05, 0.00010018100000000127, 0.00010023600000000008, 0.00010024999999999964, 9.961099999999945e-05, 0.00010005600000000114, 9.962500000000249e-05, 9.940299999999791e-05, 9.96939999999974e-05, 9.997200000000026e-05, 9.970800000000044e-05, 9.93470000000031e-05, 0.00010009799999999985, 9.99999999999994e-05, 9.959800000000282e-05, 9.951399999999846e-05, 0.00010026399999999921, 9.948599999999932e-05, 9.95419999999976e-05, 9.995900000000016e-05, 9.931999999999996e-05, 0.00010027799999999878, 0.00010016699999999823, 9.931999999999996e-05, 9.9722e-05, 9.961099999999945e-05, 9.945800000000019e-05, 9.93479999999991e-05]</msg>
<status status="PASS" starttime="20201030 18:28:49.373" endtime="20201030 18:28:49.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.368" endtime="20201030 18:28:49.376"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:49.379" endtime="20201030 18:28:49.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.378" endtime="20201030 18:28:49.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.377" endtime="20201030 18:28:49.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.016" endtime="20201030 18:28:49.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.016" endtime="20201030 18:28:49.400"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.408" endtime="20201030 18:28:49.428"></status>
</kw>
<msg timestamp="20201030 18:28:49.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.407" endtime="20201030 18:28:49.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.429" endtime="20201030 18:28:49.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.432" endtime="20201030 18:28:49.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.404" endtime="20201030 18:28:49.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.402" endtime="20201030 18:28:49.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.440" endtime="20201030 18:28:49.727"></status>
</kw>
<msg timestamp="20201030 18:28:49.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021628194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.439" endtime="20201030 18:28:49.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021628194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.731" endtime="20201030 18:28:49.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.739" endtime="20201030 18:28:49.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.436" endtime="20201030 18:28:49.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.435" endtime="20201030 18:28:49.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:49.745" level="INFO">${RESULT} = [{'diff': 0.00010070900000000091}, {'diff': 0.00010038899999999934}, {'diff': 0.00010047200000000076}, {'diff': 0.00010038899999999934}, {'diff': 0.0001012359999999976}, {'diff': 0.0001006110000000004...</msg>
<status status="PASS" starttime="20201030 18:28:49.742" endtime="20201030 18:28:49.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:49.749" level="INFO">${ACCURACY} = {'diff': [0.00010070900000000091, 0.00010038899999999934, 0.00010047200000000076, 0.00010038899999999934, 0.0001012359999999976, 0.00010061100000000045, 0.00010031900000000149, 0.00010051400000000293,...</msg>
<status status="PASS" starttime="20201030 18:28:49.746" endtime="20201030 18:28:49.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.754" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 18:28:49.752" endtime="20201030 18:28:49.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.756" level="INFO">VALUE: [0.00010070900000000091, 0.00010038899999999934, 0.00010047200000000076, 0.00010038899999999934, 0.0001012359999999976, 0.00010061100000000045, 0.00010031900000000149, 0.00010051400000000293, 0.0001006809999999983, 0.00010080599999999842, 0.00010048600000000033, 0.00010070900000000091, 0.00010059800000000035, 0.00010029099999999888, 0.00010123600000000108, 0.00010054099999999913, 0.00010044400000000162, 0.00010029199999999835, 0.00010048600000000033, 0.00010102799999999953, 0.00010090299999999941, 0.00010063899999999959, 0.00010109800000000085, 0.00010094400000000212, 0.0001003610000000002, 0.0001005549999999987, 0.0001005280000000025, 0.00010105600000000214, 0.00010105600000000214, 0.00010077799999999928, 0.0001003480000000001, 0.00010029199999999835, 0.00010037499999999977, 0.00010090299999999941, 0.00010098600000000083, 0.00010070799999999797, 0.00010115299999999966, 0.00010093099999999855, 0.0001011670000000027, 0.0001003480000000001, 0.00010076399999999971, 0.00010113800000000062, 0.0001012220000000015, 0.00010044399999999815, 0.0001006809999999983, 0.00010126400000000021, 0.00010115299999999966, 0.00010047200000000076, 0.00010090300000000288, 0.00010124999999999718]</msg>
<status status="PASS" starttime="20201030 18:28:49.755" endtime="20201030 18:28:49.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.750" endtime="20201030 18:28:49.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:49.761" endtime="20201030 18:28:49.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.759" endtime="20201030 18:28:49.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.758" endtime="20201030 18:28:49.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.401" endtime="20201030 18:28:49.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.400" endtime="20201030 18:28:49.781"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.790" endtime="20201030 18:28:49.811"></status>
</kw>
<msg timestamp="20201030 18:28:49.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.788" endtime="20201030 18:28:49.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.812" endtime="20201030 18:28:49.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.815" endtime="20201030 18:28:49.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.786" endtime="20201030 18:28:49.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.784" endtime="20201030 18:28:49.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.824" endtime="20201030 18:28:50.108"></status>
</kw>
<msg timestamp="20201030 18:28:50.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022694139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022795736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.822" endtime="20201030 18:28:50.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022694139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022795736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.113" endtime="20201030 18:28:50.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.121" endtime="20201030 18:28:50.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.820" endtime="20201030 18:28:50.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.818" endtime="20201030 18:28:50.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:50.127" level="INFO">${RESULT} = [{'diff': 0.00010159700000000188}, {'diff': 0.00010199999999999793}, {'diff': 0.00010227800000000078}, {'diff': 0.00010143100000000252}, {'diff': 0.00010140299999999991}, {'diff': 0.000101709000000001...</msg>
<status status="PASS" starttime="20201030 18:28:50.124" endtime="20201030 18:28:50.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:50.131" level="INFO">${ACCURACY} = {'diff': [0.00010159700000000188, 0.00010199999999999793, 0.00010227800000000078, 0.00010143100000000252, 0.00010140299999999991, 0.00010170900000000191, 0.0001015419999999996, 0.00010176300000000124,...</msg>
<status status="PASS" starttime="20201030 18:28:50.128" endtime="20201030 18:28:50.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.136" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 18:28:50.135" endtime="20201030 18:28:50.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.138" level="INFO">VALUE: [0.00010159700000000188, 0.00010199999999999793, 0.00010227800000000078, 0.00010143100000000252, 0.00010140299999999991, 0.00010170900000000191, 0.0001015419999999996, 0.00010176300000000124, 0.00010170799999999897, 0.00010201400000000097, 0.00010188900000000084, 0.00010143100000000252, 0.00010209699999999891, 0.00010163900000000059, 0.00010190300000000041, 0.00010129199999999935, 0.00010193000000000008, 0.00010177699999999734, 0.00010208300000000281, 0.00010198599999999836, 0.00010211100000000195, 0.0001020420000000001, 0.0001016670000000032, 0.0001013199999999985, 0.00010218000000000033, 0.00010206899999999977, 0.00010206899999999977, 0.0001020550000000002, 0.0001021939999999999, 0.0001015000000000009, 0.00010157000000000221, 0.00010141699999999948, 0.00010220900000000241, 0.00010226400000000122, 0.00010161099999999798, 0.00010131900000000249, 0.00010206899999999977, 0.00010194399999999965, 0.00010140299999999991, 0.00010199999999999793, 0.00010205599999999967, 0.00010222300000000198, 0.00010172300000000148, 0.00010177800000000028, 0.00010156899999999927, 0.00010144399999999915, 0.00010184699999999866, 0.00010144400000000262, 0.00010179200000000332, 0.00010141699999999948]</msg>
<status status="PASS" starttime="20201030 18:28:50.137" endtime="20201030 18:28:50.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.132" endtime="20201030 18:28:50.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:50.144" endtime="20201030 18:28:50.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.142" endtime="20201030 18:28:50.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.141" endtime="20201030 18:28:50.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.782" endtime="20201030 18:28:50.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.782" endtime="20201030 18:28:50.164"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.173" endtime="20201030 18:28:50.192"></status>
</kw>
<msg timestamp="20201030 18:28:50.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.171" endtime="20201030 18:28:50.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.194" endtime="20201030 18:28:50.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.196" endtime="20201030 18:28:50.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.169" endtime="20201030 18:28:50.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.167" endtime="20201030 18:28:50.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.205" endtime="20201030 18:28:50.490"></status>
</kw>
<msg timestamp="20201030 18:28:50.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021691597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021794875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.203" endtime="20201030 18:28:50.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021691597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021794875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.494" endtime="20201030 18:28:50.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.502" endtime="20201030 18:28:50.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.201" endtime="20201030 18:28:50.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.199" endtime="20201030 18:28:50.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:50.508" level="INFO">${RESULT} = [{'diff': 0.00010327799999999832}, {'diff': 0.0001027359999999991}, {'diff': 0.00010231900000000002}, {'diff': 0.00010263900000000159}, {'diff': 0.00010327800000000179}, {'diff': 0.0001023479999999986...</msg>
<status status="PASS" starttime="20201030 18:28:50.505" endtime="20201030 18:28:50.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:50.513" level="INFO">${ACCURACY} = {'diff': [0.00010327799999999832, 0.0001027359999999991, 0.00010231900000000002, 0.00010263900000000159, 0.00010327800000000179, 0.00010234799999999863, 0.00010288900000000184, 0.00010247299999999876,...</msg>
<status status="PASS" starttime="20201030 18:28:50.509" endtime="20201030 18:28:50.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.518" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 18:28:50.517" endtime="20201030 18:28:50.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.520" level="INFO">VALUE: [0.00010327799999999832, 0.0001027359999999991, 0.00010231900000000002, 0.00010263900000000159, 0.00010327800000000179, 0.00010234799999999863, 0.00010288900000000184, 0.00010247299999999876, 0.0001027359999999991, 0.00010245899999999919, 0.00010247199999999929, 0.00010299999999999893, 0.00010290300000000141, 0.00010238900000000134, 0.00010262499999999855, 0.00010301400000000197, 0.0001031810000000008, 0.00010294500000000012, 0.0001028749999999988, 0.00010313900000000209, 0.00010244400000000015, 0.00010230599999999992, 0.00010234700000000263, 0.0001023619999999982, 0.0001023619999999982, 0.0001031810000000008, 0.00010319500000000037, 0.00010259799999999888, 0.00010312499999999905, 0.00010281899999999705, 0.00010254100000000113, 0.00010295800000000022, 0.00010259699999999941, 0.0001023199999999995, 0.00010298600000000283, 0.00010233399999999906, 0.00010272299999999901, 0.00010297199999999979, 0.00010272199999999954, 0.0001023610000000022, 0.00010258299999999984, 0.00010316699999999776, 0.00010280600000000042, 0.00010247199999999929, 0.00010261199999999845, 0.00010288899999999837, 0.00010312500000000252, 0.00010236099999999873, 0.00010326399999999875, 0.00010311100000000295]</msg>
<status status="PASS" starttime="20201030 18:28:50.519" endtime="20201030 18:28:50.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.514" endtime="20201030 18:28:50.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:50.525" endtime="20201030 18:28:50.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.523" endtime="20201030 18:28:50.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.522" endtime="20201030 18:28:50.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.165" endtime="20201030 18:28:50.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.165" endtime="20201030 18:28:50.546"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.554" endtime="20201030 18:28:50.574"></status>
</kw>
<msg timestamp="20201030 18:28:50.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.553" endtime="20201030 18:28:50.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.576" endtime="20201030 18:28:50.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.578" endtime="20201030 18:28:50.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.550" endtime="20201030 18:28:50.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.548" endtime="20201030 18:28:50.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.587" endtime="20201030 18:28:50.874"></status>
</kw>
<msg timestamp="20201030 18:28:50.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021661153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021765125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.586" endtime="20201030 18:28:50.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021661153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021765125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.878" endtime="20201030 18:28:50.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.886" endtime="20201030 18:28:50.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.583" endtime="20201030 18:28:50.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.581" endtime="20201030 18:28:50.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:50.893" level="INFO">${RESULT} = [{'diff': 0.00010397200000000079}, {'diff': 0.00010363899999999912}, {'diff': 0.00010347299999999976}, {'diff': 0.00010397300000000026}, {'diff': 0.00010345900000000019}, {'diff': 0.000103610999999999...</msg>
<status status="PASS" starttime="20201030 18:28:50.890" endtime="20201030 18:28:50.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:50.897" level="INFO">${ACCURACY} = {'diff': [0.00010397200000000079, 0.00010363899999999912, 0.00010347299999999976, 0.00010397300000000026, 0.00010345900000000019, 0.00010361099999999998, 0.00010338900000000234, 0.00010340300000000191...</msg>
<status status="PASS" starttime="20201030 18:28:50.894" endtime="20201030 18:28:50.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.901" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 18:28:50.900" endtime="20201030 18:28:50.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.903" level="INFO">VALUE: [0.00010397200000000079, 0.00010363899999999912, 0.00010347299999999976, 0.00010397300000000026, 0.00010345900000000019, 0.00010361099999999998, 0.00010338900000000234, 0.00010340300000000191, 0.00010377800000000229, 0.00010425000000000018, 0.00010393100000000155, 0.00010390300000000241, 0.00010345900000000019, 0.00010363799999999965, 0.00010384700000000066, 0.00010340299999999844, 0.00010363899999999912, 0.00010358300000000084, 0.00010340300000000191, 0.000103820000000001, 0.00010405499999999873, 0.00010408300000000134, 0.0001042360000000006, 0.00010362499999999955, 0.00010370900000000044, 0.0001040420000000021, 0.00010397299999999679, 0.00010338899999999887, 0.00010412500000000005, 0.00010379200000000185, 0.00010394499999999765, 0.00010358300000000084, 0.00010430599999999846, 0.00010356900000000127, 0.00010365300000000216, 0.00010418099999999833, 0.00010405600000000167, 0.00010334799999999963, 0.00010398600000000036, 0.00010402800000000254, 0.0001041940000000019, 0.00010375000000000315, 0.00010391700000000198, 0.00010336099999999973, 0.00010411100000000048, 0.00010433299999999812, 0.00010384700000000066, 0.00010384800000000013, 0.00010344500000000062, 0.00010343000000000158]</msg>
<status status="PASS" starttime="20201030 18:28:50.902" endtime="20201030 18:28:50.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.898" endtime="20201030 18:28:50.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:50.908" endtime="20201030 18:28:50.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.907" endtime="20201030 18:28:50.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.906" endtime="20201030 18:28:50.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.546" endtime="20201030 18:28:50.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.546" endtime="20201030 18:28:50.929"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.938" endtime="20201030 18:28:50.960"></status>
</kw>
<msg timestamp="20201030 18:28:50.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.936" endtime="20201030 18:28:50.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.961" endtime="20201030 18:28:50.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.964" endtime="20201030 18:28:50.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.934" endtime="20201030 18:28:50.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.932" endtime="20201030 18:28:50.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.973" endtime="20201030 18:28:51.258"></status>
</kw>
<msg timestamp="20201030 18:28:51.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023177542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023282556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.971" endtime="20201030 18:28:51.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023177542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023282556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.263" endtime="20201030 18:28:51.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.271" endtime="20201030 18:28:51.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.969" endtime="20201030 18:28:51.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.967" endtime="20201030 18:28:51.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:51.277" level="INFO">${RESULT} = [{'diff': 0.0001050140000000005}, {'diff': 0.00010430499999999898}, {'diff': 0.00010465299999999969}, {'diff': 0.00010473599999999764}, {'diff': 0.00010516699999999976}, {'diff': 0.0001052359999999981...</msg>
<status status="PASS" starttime="20201030 18:28:51.274" endtime="20201030 18:28:51.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:51.281" level="INFO">${ACCURACY} = {'diff': [0.0001050140000000005, 0.00010430499999999898, 0.00010465299999999969, 0.00010473599999999764, 0.00010516699999999976, 0.00010523599999999814, 0.00010507000000000224, 0.00010520900000000194,...</msg>
<status status="PASS" starttime="20201030 18:28:51.278" endtime="20201030 18:28:51.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.285" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 18:28:51.284" endtime="20201030 18:28:51.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.288" level="INFO">VALUE: [0.0001050140000000005, 0.00010430499999999898, 0.00010465299999999969, 0.00010473599999999764, 0.00010516699999999976, 0.00010523599999999814, 0.00010507000000000224, 0.00010520900000000194, 0.0001050559999999992, 0.000104820000000002, 0.00010442999999999911, 0.00010488900000000037, 0.00010517999999999986, 0.000105207999999999, 0.00010502800000000007, 0.00010440299999999944, 0.00010523599999999814, 0.00010429200000000236, 0.00010438899999999987, 0.00010465200000000022, 0.00010429200000000236, 0.00010495799999999875, 0.00010447200000000129, 0.00010500000000000093, 0.00010425000000000018, 0.00010522299999999804, 0.0001043200000000015, 0.0001045689999999988, 0.00010511099999999801, 0.00010498600000000136, 0.00010515300000000019, 0.00010472300000000101, 0.00010511099999999801, 0.00010434700000000116, 0.00010434800000000063, 0.00010448700000000033, 0.00010458299999999837, 0.00010459699999999794, 0.000105207999999999, 0.00010517999999999986, 0.00010502800000000007, 0.00010494499999999865, 0.00010448600000000086, 0.00010512500000000105, 0.00010498700000000083, 0.00010490200000000047, 0.00010526400000000075, 0.00010476400000000025, 0.00010463900000000012, 0.00010502800000000007]</msg>
<status status="PASS" starttime="20201030 18:28:51.286" endtime="20201030 18:28:51.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.282" endtime="20201030 18:28:51.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:51.293" endtime="20201030 18:28:51.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.292" endtime="20201030 18:28:51.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.291" endtime="20201030 18:28:51.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.930" endtime="20201030 18:28:51.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.929" endtime="20201030 18:28:51.314"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.323" endtime="20201030 18:28:51.343"></status>
</kw>
<msg timestamp="20201030 18:28:51.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.321" endtime="20201030 18:28:51.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.344" endtime="20201030 18:28:51.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.347" endtime="20201030 18:28:51.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.319" endtime="20201030 18:28:51.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.316" endtime="20201030 18:28:51.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.355" endtime="20201030 18:28:51.640"></status>
</kw>
<msg timestamp="20201030 18:28:51.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021628347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021734597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.354" endtime="20201030 18:28:51.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021628347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021734597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.644" endtime="20201030 18:28:51.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.652" endtime="20201030 18:28:51.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.351" endtime="20201030 18:28:51.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.350" endtime="20201030 18:28:51.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:51.659" level="INFO">${RESULT} = [{'diff': 0.00010625000000000218}, {'diff': 0.00010529100000000041}, {'diff': 0.00010609699999999944}, {'diff': 0.00010608399999999935}, {'diff': 0.00010613900000000162}, {'diff': 0.000105555999999999...</msg>
<status status="PASS" starttime="20201030 18:28:51.655" endtime="20201030 18:28:51.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:51.666" level="INFO">${ACCURACY} = {'diff': [0.00010625000000000218, 0.00010529100000000041, 0.00010609699999999944, 0.00010608399999999935, 0.00010613900000000162, 0.0001055559999999997, 0.00010622199999999957, 0.00010563900000000112,...</msg>
<status status="PASS" starttime="20201030 18:28:51.659" endtime="20201030 18:28:51.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.670" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 18:28:51.669" endtime="20201030 18:28:51.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.673" level="INFO">VALUE: [0.00010625000000000218, 0.00010529100000000041, 0.00010609699999999944, 0.00010608399999999935, 0.00010613900000000162, 0.0001055559999999997, 0.00010622199999999957, 0.00010563900000000112, 0.0001056949999999994, 0.00010616599999999782, 0.00010611100000000248, 0.00010625000000000218, 0.00010552800000000057, 0.00010547199999999882, 0.00010627799999999785, 0.00010598599999999889, 0.00010616700000000076, 0.000105514000000001, 0.00010594400000000018, 0.00010612499999999858, 0.00010534699999999869, 0.000106208, 0.00010590299999999747, 0.0001053750000000013, 0.00010626399999999828, 0.00010615299999999772, 0.00010551299999999805, 0.00010615299999999772, 0.00010554200000000014, 0.00010622199999999957, 0.00010576399999999778, 0.00010565300000000069, 0.00010604200000000064, 0.00010627699999999837, 0.00010615200000000172, 0.00010581900000000005, 0.0001058889999999979, 0.00010565300000000069, 0.00010613899999999815, 0.00010545799999999925, 0.00010591699999999704, 0.00010595899999999922, 0.00010615299999999772, 0.00010622199999999957, 0.00010583299999999962, 0.00010604100000000116, 0.00010576399999999778, 0.00010562500000000155, 0.00010549999999999796, 0.00010613900000000162]</msg>
<status status="PASS" starttime="20201030 18:28:51.671" endtime="20201030 18:28:51.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.667" endtime="20201030 18:28:51.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:51.678" endtime="20201030 18:28:51.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.676" endtime="20201030 18:28:51.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.675" endtime="20201030 18:28:51.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.315" endtime="20201030 18:28:51.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.314" endtime="20201030 18:28:51.698"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.707" endtime="20201030 18:28:51.727"></status>
</kw>
<msg timestamp="20201030 18:28:51.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.705" endtime="20201030 18:28:51.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.728" endtime="20201030 18:28:51.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.731" endtime="20201030 18:28:51.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.703" endtime="20201030 18:28:51.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.700" endtime="20201030 18:28:51.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.740" endtime="20201030 18:28:52.027"></status>
</kw>
<msg timestamp="20201030 18:28:52.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.738" endtime="20201030 18:28:52.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.031" endtime="20201030 18:28:52.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.039" endtime="20201030 18:28:52.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.736" endtime="20201030 18:28:52.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.734" endtime="20201030 18:28:52.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:52.046" level="INFO">${RESULT} = [{'diff': 0.00010717999999999839}, {'diff': 0.0001070690000000013}, {'diff': 0.00010638799999999893}, {'diff': 0.00010651399999999853}, {'diff': 0.00010641700000000101}, {'diff': 0.0001067499999999992...</msg>
<status status="PASS" starttime="20201030 18:28:52.043" endtime="20201030 18:28:52.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:52.050" level="INFO">${ACCURACY} = {'diff': [0.00010717999999999839, 0.0001070690000000013, 0.00010638799999999893, 0.00010651399999999853, 0.00010641700000000101, 0.0001067499999999992, 0.00010663899999999865, 0.00010631900000000055, ...</msg>
<status status="PASS" starttime="20201030 18:28:52.047" endtime="20201030 18:28:52.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.054" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 18:28:52.053" endtime="20201030 18:28:52.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.056" level="INFO">VALUE: [0.00010717999999999839, 0.0001070690000000013, 0.00010638799999999893, 0.00010651399999999853, 0.00010641700000000101, 0.0001067499999999992, 0.00010663899999999865, 0.00010631900000000055, 0.00010662499999999908, 0.0001065279999999981, 0.0001063339999999996, 0.00010715300000000219, 0.00010698699999999936, 0.00010691600000000204, 0.00010665199999999875, 0.00010701399999999903, 0.00010698599999999989, 0.00010654200000000114, 0.00010701399999999903, 0.00010648599999999939, 0.00010644500000000015, 0.0001065560000000007, 0.00010627800000000132, 0.00010693000000000161, 0.0001065829999999969, 0.00010662500000000255, 0.00010693100000000108, 0.0001070140000000025, 0.00010670899999999997, 0.00010672299999999954, 0.00010641700000000101, 0.00010640200000000197, 0.00010666600000000179, 0.00010641699999999754, 0.00010652800000000157, 0.00010723599999999667, 0.00010644500000000015, 0.00010647199999999982, 0.00010647299999999929, 0.00010629100000000141, 0.00010699999999999946, 0.0001072499999999997, 0.000107208000000001, 0.00010719399999999796, 0.0001068750000000028, 0.00010657000000000028, 0.00010655500000000123, 0.00010634799999999917, 0.00010668000000000136, 0.00010676399999999878]</msg>
<status status="PASS" starttime="20201030 18:28:52.055" endtime="20201030 18:28:52.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.051" endtime="20201030 18:28:52.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.061" endtime="20201030 18:28:52.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.060" endtime="20201030 18:28:52.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.059" endtime="20201030 18:28:52.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.699" endtime="20201030 18:28:52.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.698" endtime="20201030 18:28:52.082"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.090" endtime="20201030 18:28:52.112"></status>
</kw>
<msg timestamp="20201030 18:28:52.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.089" endtime="20201030 18:28:52.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.113" endtime="20201030 18:28:52.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.116" endtime="20201030 18:28:52.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.086" endtime="20201030 18:28:52.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.084" endtime="20201030 18:28:52.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.124" endtime="20201030 18:28:52.410"></status>
</kw>
<msg timestamp="20201030 18:28:52.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022857389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.123" endtime="20201030 18:28:52.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022857389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.414" endtime="20201030 18:28:52.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.422" endtime="20201030 18:28:52.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.120" endtime="20201030 18:28:52.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.119" endtime="20201030 18:28:52.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:52.428" level="INFO">${RESULT} = [{'diff': 0.00010773600000000064}, {'diff': 0.0001082500000000007}, {'diff': 0.00010749999999999996}, {'diff': 0.00010749999999999996}, {'diff': 0.00010802700000000012}, {'diff': 0.0001076800000000023...</msg>
<status status="PASS" starttime="20201030 18:28:52.425" endtime="20201030 18:28:52.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:52.432" level="INFO">${ACCURACY} = {'diff': [0.00010773600000000064, 0.0001082500000000007, 0.00010749999999999996, 0.00010749999999999996, 0.00010802700000000012, 0.00010768000000000236, 0.00010761100000000051, 0.00010748600000000039,...</msg>
<status status="PASS" starttime="20201030 18:28:52.429" endtime="20201030 18:28:52.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.437" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 18:28:52.436" endtime="20201030 18:28:52.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.439" level="INFO">VALUE: [0.00010773600000000064, 0.0001082500000000007, 0.00010749999999999996, 0.00010749999999999996, 0.00010802700000000012, 0.00010768000000000236, 0.00010761100000000051, 0.00010748600000000039, 0.00010790299999999947, 0.00010762500000000008, 0.00010765299999999922, 0.00010763899999999965, 0.000108208000000002, 0.00010795800000000175, 0.00010748600000000039, 0.00010769499999999793, 0.00010813900000000015, 0.0001082500000000007, 0.00010727799999999885, 0.0001077080000000015, 0.00010805599999999874, 0.00010790299999999947, 0.00010765299999999922, 0.00010761100000000051, 0.00010741699999999854, 0.00010790299999999947, 0.00010763900000000312, 0.000108208999999998, 0.00010749999999999996, 0.00010804099999999969, 0.00010734700000000069, 0.00010816599999999982, 0.00010744399999999821, 0.00010734700000000069, 0.00010727800000000232, 0.00010780599999999849, 0.00010777799999999935, 0.00010733399999999713, 0.00010812500000000058, 0.00010723600000000014, 0.00010767999999999889, 0.00010822200000000157, 0.00010743100000000158, 0.00010741699999999854, 0.00010741700000000201, 0.00010763899999999965, 0.00010747300000000029, 0.00010761100000000051, 0.00010733299999999765, 0.00010747200000000082]</msg>
<status status="PASS" starttime="20201030 18:28:52.438" endtime="20201030 18:28:52.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.433" endtime="20201030 18:28:52.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.445" endtime="20201030 18:28:52.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.443" endtime="20201030 18:28:52.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.442" endtime="20201030 18:28:52.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.083" endtime="20201030 18:28:52.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.082" endtime="20201030 18:28:52.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.049" endtime="20201030 18:28:52.465"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.469" endtime="20201030 18:28:52.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.468" endtime="20201030 18:28:52.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.467" endtime="20201030 18:28:52.489"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:13.981" endtime="20201030 18:28:52.490" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.496" endtime="20201030 18:28:52.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.495" endtime="20201030 18:28:52.516"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.529" endtime="20201030 18:28:52.543"></status>
</kw>
<msg timestamp="20201030 18:28:52.543" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.527" endtime="20201030 18:28:52.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.546" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.544" endtime="20201030 18:28:52.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.549" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:52.547" endtime="20201030 18:28:52.549"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:52.525" endtime="20201030 18:28:52.550"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:52.522" endtime="20201030 18:28:52.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.521" endtime="20201030 18:28:52.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:52.554" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:52.553" endtime="20201030 18:28:52.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.551" endtime="20201030 18:28:52.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.520" endtime="20201030 18:28:52.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.520" endtime="20201030 18:28:52.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.556" endtime="20201030 18:28:52.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.518" endtime="20201030 18:28:52.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.517" endtime="20201030 18:28:52.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.494" endtime="20201030 18:28:52.558"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.569" endtime="20201030 18:28:52.585"></status>
</kw>
<msg timestamp="20201030 18:28:52.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.567" endtime="20201030 18:28:52.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.586" endtime="20201030 18:28:52.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.589" endtime="20201030 18:28:52.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.565" endtime="20201030 18:28:52.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.561" endtime="20201030 18:28:52.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.597" endtime="20201030 18:28:52.884"></status>
</kw>
<msg timestamp="20201030 18:28:52.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065943486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065952514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.596" endtime="20201030 18:28:52.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065943486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065952514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.888" endtime="20201030 18:28:52.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.897" endtime="20201030 18:28:52.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.593" endtime="20201030 18:28:52.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.592" endtime="20201030 18:28:52.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:52.903" level="INFO">${RESULT} = [{'diff': 9.02800000000814e-06}, {'diff': 9.639000000005726e-06}, {'diff': 9.042000000000772e-06}, {'diff': 9.042000000000772e-06}, {'diff': 9.569000000000938e-06}, {'diff': 9.638999999991849e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:52.900" endtime="20201030 18:28:52.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:52.908" level="INFO">${ACCURACY} = {'diff': [9.02800000000814e-06, 9.639000000005726e-06, 9.042000000000772e-06, 9.042000000000772e-06, 9.569000000000938e-06, 9.638999999991849e-06, 9.638999999991849e-06, 8.957999999989474e-06, 9.00000...</msg>
<status status="PASS" starttime="20201030 18:28:52.904" endtime="20201030 18:28:52.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.912" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 18:28:52.911" endtime="20201030 18:28:52.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.915" level="INFO">VALUE: [9.02800000000814e-06, 9.639000000005726e-06, 9.042000000000772e-06, 9.042000000000772e-06, 9.569000000000938e-06, 9.638999999991849e-06, 9.638999999991849e-06, 8.957999999989474e-06, 9.000000000009e-06, 9.624999999999218e-06, 9.639000000005726e-06, 9.624999999999218e-06, 9.610999999992709e-06, 9.638999999991849e-06, 9.624999999999218e-06, 9.027999999994263e-06, 9.02699999999479e-06, 9.610999999992709e-06, 9.651999999998884e-06, 9.638999999991849e-06, 9.624999999999218e-06, 9.014000000001632e-06, 9.014000000001632e-06, 9.014000000001632e-06, 9.055999999993403e-06, 9.042000000000772e-06, 9.069999999999911e-06, 9.014000000001632e-06, 9.624999999999218e-06, 9.611000000006586e-06, 9.014000000001632e-06, 9.624999999999218e-06, 8.958000000003352e-06, 9.638999999991849e-06, 9.611999999992182e-06, 9.597000000000078e-06, 9.054999999993929e-06, 9.624999999999218e-06, 9.624999999999218e-06, 9.02699999999479e-06, 9.014000000001632e-06, 9.637999999992375e-06, 9.069999999999911e-06, 9.624999999999218e-06, 9.027999999994263e-06, 9.000000000009e-06, 9.041000000001298e-06, 9.027999999994263e-06, 9.027999999994263e-06, 9.611000000006586e-06]</msg>
<status status="PASS" starttime="20201030 18:28:52.913" endtime="20201030 18:28:52.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.909" endtime="20201030 18:28:52.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.919" endtime="20201030 18:28:52.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.918" endtime="20201030 18:28:52.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.917" endtime="20201030 18:28:52.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.560" endtime="20201030 18:28:52.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.559" endtime="20201030 18:28:52.940"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.949" endtime="20201030 18:28:52.964"></status>
</kw>
<msg timestamp="20201030 18:28:52.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.947" endtime="20201030 18:28:52.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.965" endtime="20201030 18:28:52.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.968" endtime="20201030 18:28:52.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.945" endtime="20201030 18:28:52.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.942" endtime="20201030 18:28:52.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.976" endtime="20201030 18:28:53.263"></status>
</kw>
<msg timestamp="20201030 18:28:53.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022280875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022291125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.975" endtime="20201030 18:28:53.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022280875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022291125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.267" endtime="20201030 18:28:53.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.275" endtime="20201030 18:28:53.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.972" endtime="20201030 18:28:53.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.971" endtime="20201030 18:28:53.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:53.281" level="INFO">${RESULT} = [{'diff': 1.0249999999999843e-05}, {'diff': 1.0223000000000176e-05}, {'diff': 9.624999999999218e-06}, {'diff': 1.0832999999998288e-05}, {'diff': 1.0236000000000273e-05}, {'diff': 1.0833000000001758e-0...</msg>
<status status="PASS" starttime="20201030 18:28:53.278" endtime="20201030 18:28:53.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:53.287" level="INFO">${ACCURACY} = {'diff': [1.0249999999999843e-05, 1.0223000000000176e-05, 9.624999999999218e-06, 1.0832999999998288e-05, 1.0236000000000273e-05, 1.0833000000001758e-05, 1.0222000000000703e-05, 1.0221999999997233e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:53.282" endtime="20201030 18:28:53.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.291" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 18:28:53.290" endtime="20201030 18:28:53.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.294" level="INFO">VALUE: [1.0249999999999843e-05, 1.0223000000000176e-05, 9.624999999999218e-06, 1.0832999999998288e-05, 1.0236000000000273e-05, 1.0833000000001758e-05, 1.0222000000000703e-05, 1.0221999999997233e-05, 1.0222000000000703e-05, 1.0832999999998288e-05, 1.0833999999997762e-05, 1.0263999999999412e-05, 1.0263999999999412e-05, 1.0833000000001758e-05, 1.0221999999997233e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0832999999998288e-05, 1.0153000000002327e-05, 1.0236000000000273e-05, 1.0249999999999843e-05, 1.0236000000000273e-05, 1.0249999999999843e-05, 1.0832999999998288e-05, 1.0223000000000176e-05, 1.0236000000000273e-05, 1.0152999999998857e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0832999999998288e-05, 1.0875000000000468e-05, 1.0777999999999482e-05, 1.0249999999999843e-05, 1.0820000000001662e-05, 1.0208000000001133e-05, 1.0236000000000273e-05, 1.0804999999999149e-05, 1.0222000000000703e-05, 9.625000000002687e-06, 1.0222000000000703e-05, 1.0847000000001328e-05, 1.0834000000001232e-05, 1.0236000000000273e-05, 1.0223000000000176e-05, 1.0875000000000468e-05, 1.0832999999998288e-05, 1.0847000000001328e-05, 1.0846999999997858e-05, 1.0222000000000703e-05]</msg>
<status status="PASS" starttime="20201030 18:28:53.292" endtime="20201030 18:28:53.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.288" endtime="20201030 18:28:53.295"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:53.298" endtime="20201030 18:28:53.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.297" endtime="20201030 18:28:53.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.295" endtime="20201030 18:28:53.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.941" endtime="20201030 18:28:53.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.940" endtime="20201030 18:28:53.324"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.332" endtime="20201030 18:28:53.347"></status>
</kw>
<msg timestamp="20201030 18:28:53.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.331" endtime="20201030 18:28:53.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.349" endtime="20201030 18:28:53.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.351" endtime="20201030 18:28:53.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.328" endtime="20201030 18:28:53.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.326" endtime="20201030 18:28:53.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.360" endtime="20201030 18:28:53.647"></status>
</kw>
<msg timestamp="20201030 18:28:53.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027115194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027126611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.359" endtime="20201030 18:28:53.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027115194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027126611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.651" endtime="20201030 18:28:53.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.660" endtime="20201030 18:28:53.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.356" endtime="20201030 18:28:53.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.355" endtime="20201030 18:28:53.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:53.666" level="INFO">${RESULT} = [{'diff': 1.1416999999999677e-05}, {'diff': 1.1443999999999344e-05}, {'diff': 1.2028000000000733e-05}, {'diff': 1.1443999999999344e-05}, {'diff': 1.1430999999999247e-05}, {'diff': 1.1375000000000968e-...</msg>
<status status="PASS" starttime="20201030 18:28:53.663" endtime="20201030 18:28:53.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:53.671" level="INFO">${ACCURACY} = {'diff': [1.1416999999999677e-05, 1.1443999999999344e-05, 1.2028000000000733e-05, 1.1443999999999344e-05, 1.1430999999999247e-05, 1.1375000000000968e-05, 1.0832999999998288e-05, 1.0834000000001232e-05...</msg>
<status status="PASS" starttime="20201030 18:28:53.667" endtime="20201030 18:28:53.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.676" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 18:28:53.675" endtime="20201030 18:28:53.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.678" level="INFO">VALUE: [1.1416999999999677e-05, 1.1443999999999344e-05, 1.2028000000000733e-05, 1.1443999999999344e-05, 1.1430999999999247e-05, 1.1375000000000968e-05, 1.0832999999998288e-05, 1.0834000000001232e-05, 1.1429999999999774e-05, 1.1459000000001857e-05, 1.1444999999998817e-05, 1.1389000000000538e-05, 1.0750000000000343e-05, 1.1444999999998817e-05, 1.1458000000002383e-05, 1.0833000000001758e-05, 1.1416999999999677e-05, 1.2028000000000733e-05, 1.1416999999999677e-05, 1.0846999999997858e-05, 1.0819000000002188e-05, 1.1429999999999774e-05, 1.1443999999999344e-05, 1.0902999999999607e-05, 1.0833999999997762e-05, 1.1444999999998817e-05, 1.1445000000002287e-05, 1.1457999999998913e-05, 1.0833000000001758e-05, 1.0833999999997762e-05, 1.1430999999999247e-05, 1.0833999999997762e-05, 1.1443999999999344e-05, 1.1443999999999344e-05, 1.1416999999999677e-05, 1.2055000000000399e-05, 1.1430999999999247e-05, 1.1458999999998387e-05, 1.1430999999999247e-05, 1.1416999999999677e-05, 1.0916999999999177e-05, 1.0833000000001758e-05, 1.1430999999999247e-05, 1.1429999999999774e-05, 1.1444000000002813e-05, 1.204099999999736e-05, 1.1429999999999774e-05, 1.1457999999998913e-05, 1.1472000000001953e-05, 1.1416000000000204e-05]</msg>
<status status="PASS" starttime="20201030 18:28:53.677" endtime="20201030 18:28:53.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.672" endtime="20201030 18:28:53.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:53.683" endtime="20201030 18:28:53.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.682" endtime="20201030 18:28:53.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.681" endtime="20201030 18:28:53.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.325" endtime="20201030 18:28:53.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.324" endtime="20201030 18:28:53.704"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.714" endtime="20201030 18:28:53.729"></status>
</kw>
<msg timestamp="20201030 18:28:53.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.712" endtime="20201030 18:28:53.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.730" endtime="20201030 18:28:53.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.733" endtime="20201030 18:28:53.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.709" endtime="20201030 18:28:53.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.706" endtime="20201030 18:28:53.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.742" endtime="20201030 18:28:54.029"></status>
</kw>
<msg timestamp="20201030 18:28:54.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023179, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023191667, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:53.740" endtime="20201030 18:28:54.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023179, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023191667, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:54.034" endtime="20201030 18:28:54.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.042" endtime="20201030 18:28:54.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.738" endtime="20201030 18:28:54.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.736" endtime="20201030 18:28:54.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:54.048" level="INFO">${RESULT} = [{'diff': 1.2666999999997458e-05}, {'diff': 1.2638999999998318e-05}, {'diff': 1.2042000000000302e-05}, {'diff': 1.2625000000002218e-05}, {'diff': 1.2653000000001358e-05}, {'diff': 1.2042000000000302e-...</msg>
<status status="PASS" starttime="20201030 18:28:54.045" endtime="20201030 18:28:54.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:54.052" level="INFO">${ACCURACY} = {'diff': [1.2666999999997458e-05, 1.2638999999998318e-05, 1.2042000000000302e-05, 1.2625000000002218e-05, 1.2653000000001358e-05, 1.2042000000000302e-05, 1.2639000000001788e-05, 1.2013999999997693e-05...</msg>
<status status="PASS" starttime="20201030 18:28:54.049" endtime="20201030 18:28:54.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.058" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 18:28:54.056" endtime="20201030 18:28:54.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.060" level="INFO">VALUE: [1.2666999999997458e-05, 1.2638999999998318e-05, 1.2042000000000302e-05, 1.2625000000002218e-05, 1.2653000000001358e-05, 1.2042000000000302e-05, 1.2639000000001788e-05, 1.2013999999997693e-05, 1.2651999999998415e-05, 1.2639000000001788e-05, 1.2082999999999539e-05, 1.2639000000001788e-05, 1.2652999999997888e-05, 1.2041000000000829e-05, 1.2055999999999872e-05, 1.2055999999999872e-05, 1.2041000000000829e-05, 1.204099999999736e-05, 1.2638999999998318e-05, 1.2653000000001358e-05, 1.2638999999998318e-05, 1.2694000000000594e-05, 1.204099999999736e-05, 1.2041000000000829e-05, 1.2013999999997693e-05, 1.2637999999998845e-05, 1.2027000000001259e-05, 1.2042000000000302e-05, 1.2041000000000829e-05, 1.2042000000000302e-05, 1.2041999999996833e-05, 1.2651999999998415e-05, 1.2069999999999442e-05, 1.2014000000001163e-05, 1.2639000000001788e-05, 1.2596999999999609e-05, 1.2568999999997e-05, 1.1971999999998983e-05, 1.2639000000001788e-05, 1.2638999999998318e-05, 1.2652999999997888e-05, 1.2653000000001358e-05, 1.2667000000000928e-05, 1.2069999999999442e-05, 1.2097000000002578e-05, 1.2639000000001788e-05, 1.2055999999999872e-05, 1.2637999999998845e-05, 1.2042000000000302e-05, 1.2638999999998318e-05]</msg>
<status status="PASS" starttime="20201030 18:28:54.059" endtime="20201030 18:28:54.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.053" endtime="20201030 18:28:54.061"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:54.065" endtime="20201030 18:28:54.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.064" endtime="20201030 18:28:54.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.062" endtime="20201030 18:28:54.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.705" endtime="20201030 18:28:54.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.704" endtime="20201030 18:28:54.086"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.095" endtime="20201030 18:28:54.110"></status>
</kw>
<msg timestamp="20201030 18:28:54.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.093" endtime="20201030 18:28:54.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.111" endtime="20201030 18:28:54.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.114" endtime="20201030 18:28:54.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.090" endtime="20201030 18:28:54.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.088" endtime="20201030 18:28:54.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.123" endtime="20201030 18:28:54.409"></status>
</kw>
<msg timestamp="20201030 18:28:54.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022134625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.121" endtime="20201030 18:28:54.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022134625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.414" endtime="20201030 18:28:54.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.422" endtime="20201030 18:28:54.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.119" endtime="20201030 18:28:54.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.117" endtime="20201030 18:28:54.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:54.428" level="INFO">${RESULT} = [{'diff': 1.3861000000000429e-05}, {'diff': 1.3249999999999373e-05}, {'diff': 1.3874999999999998e-05}, {'diff': 1.3264000000002413e-05}, {'diff': 1.3235999999999803e-05}, {'diff': 1.3249999999999373e-...</msg>
<status status="PASS" starttime="20201030 18:28:54.425" endtime="20201030 18:28:54.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:54.433" level="INFO">${ACCURACY} = {'diff': [1.3861000000000429e-05, 1.3249999999999373e-05, 1.3874999999999998e-05, 1.3264000000002413e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.2666999999997458e-05, 1.3833000000001289e-05...</msg>
<status status="PASS" starttime="20201030 18:28:54.429" endtime="20201030 18:28:54.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.438" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 18:28:54.437" endtime="20201030 18:28:54.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.440" level="INFO">VALUE: [1.3861000000000429e-05, 1.3249999999999373e-05, 1.3874999999999998e-05, 1.3264000000002413e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.2666999999997458e-05, 1.3833000000001289e-05, 1.3848000000000332e-05, 1.3263999999998943e-05, 1.3847000000000859e-05, 1.3194000000001094e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3874999999999998e-05, 1.2680000000001024e-05, 1.3195000000000567e-05, 1.3861000000000429e-05, 1.3833000000001289e-05, 1.3235999999999803e-05, 1.3833000000001289e-05, 1.2652999999997888e-05, 1.3263999999998943e-05, 1.3874999999999998e-05, 1.3249999999999373e-05, 1.3847000000000859e-05, 1.3264000000002413e-05, 1.2652999999997888e-05, 1.3848000000000332e-05, 1.3902999999999138e-05, 1.3861000000000429e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.2653000000001358e-05, 1.3291000000002079e-05, 1.3249999999999373e-05, 1.3250000000002843e-05, 1.3902999999999138e-05, 1.3263999999998943e-05, 1.3861000000000429e-05, 1.3833000000001289e-05, 1.3235999999999803e-05, 1.3847000000000859e-05, 1.3847000000000859e-05, 1.3861000000000429e-05, 1.3263999999998943e-05, 1.3874999999999998e-05, 1.3860999999996959e-05, 1.3263999999998943e-05, 1.3250000000002843e-05]</msg>
<status status="PASS" starttime="20201030 18:28:54.439" endtime="20201030 18:28:54.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.434" endtime="20201030 18:28:54.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:54.445" endtime="20201030 18:28:54.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.444" endtime="20201030 18:28:54.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.443" endtime="20201030 18:28:54.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.087" endtime="20201030 18:28:54.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.086" endtime="20201030 18:28:54.466"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.478" endtime="20201030 18:28:54.494"></status>
</kw>
<msg timestamp="20201030 18:28:54.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.474" endtime="20201030 18:28:54.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.495" endtime="20201030 18:28:54.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.499" endtime="20201030 18:28:54.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.471" endtime="20201030 18:28:54.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.468" endtime="20201030 18:28:54.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.510" endtime="20201030 18:28:54.824"></status>
</kw>
<msg timestamp="20201030 18:28:54.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025833403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025847875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.508" endtime="20201030 18:28:54.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025833403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025847875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.831" endtime="20201030 18:28:54.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.843" endtime="20201030 18:28:54.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.505" endtime="20201030 18:28:54.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.503" endtime="20201030 18:28:54.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:54.852" level="INFO">${RESULT} = [{'diff': 1.4471999999998014e-05}, {'diff': 1.4459000000001387e-05}, {'diff': 1.4458999999997918e-05}, {'diff': 1.4458000000001914e-05}, {'diff': 1.4459000000001387e-05}, {'diff': 1.5083999999998543e-...</msg>
<status status="PASS" starttime="20201030 18:28:54.848" endtime="20201030 18:28:54.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:54.857" level="INFO">${ACCURACY} = {'diff': [1.4471999999998014e-05, 1.4459000000001387e-05, 1.4458999999997918e-05, 1.4458000000001914e-05, 1.4459000000001387e-05, 1.5083999999998543e-05, 1.454099999999986e-05, 1.3874999999999998e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:54.853" endtime="20201030 18:28:54.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.862" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 18:28:54.861" endtime="20201030 18:28:54.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.865" level="INFO">VALUE: [1.4471999999998014e-05, 1.4459000000001387e-05, 1.4458999999997918e-05, 1.4458000000001914e-05, 1.4459000000001387e-05, 1.5083999999998543e-05, 1.454099999999986e-05, 1.3874999999999998e-05, 1.3888999999999568e-05, 1.4472000000001484e-05, 1.4471999999998014e-05, 1.4444000000002344e-05, 1.3874999999999998e-05, 1.505499999999993e-05, 1.4443999999998874e-05, 1.4443999999998874e-05, 1.4431000000002248e-05, 1.3874999999999998e-05, 1.4445000000001817e-05, 1.4443999999998874e-05, 1.5000000000001124e-05, 1.4458000000001914e-05, 1.5055999999999403e-05, 1.4444999999998348e-05, 1.4457999999998444e-05, 1.3847000000000859e-05, 1.3861000000000429e-05, 1.5070000000002443e-05, 1.4443999999998874e-05, 1.505499999999993e-05, 1.5013999999997224e-05, 1.4459000000001387e-05, 1.3792000000002053e-05, 1.4389000000000068e-05, 1.3861999999999902e-05, 1.4472999999997488e-05, 1.3861000000000429e-05, 1.4471999999998014e-05, 1.4443999999998874e-05, 1.4457999999998444e-05, 1.4402000000000165e-05, 1.5083999999998543e-05, 1.3792000000002053e-05, 1.4514000000000193e-05, 1.505499999999993e-05, 1.4472999999997488e-05, 1.4443999999998874e-05, 1.4457999999998444e-05, 1.3874999999999998e-05, 1.384699999999739e-05]</msg>
<status status="PASS" starttime="20201030 18:28:54.863" endtime="20201030 18:28:54.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.858" endtime="20201030 18:28:54.866"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:54.870" endtime="20201030 18:28:54.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.868" endtime="20201030 18:28:54.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.867" endtime="20201030 18:28:54.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.467" endtime="20201030 18:28:54.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.466" endtime="20201030 18:28:54.890"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.899" endtime="20201030 18:28:54.918"></status>
</kw>
<msg timestamp="20201030 18:28:54.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.897" endtime="20201030 18:28:54.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.921" endtime="20201030 18:28:54.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.926" endtime="20201030 18:28:54.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.895" endtime="20201030 18:28:54.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.893" endtime="20201030 18:28:54.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.942" endtime="20201030 18:28:55.232"></status>
</kw>
<msg timestamp="20201030 18:28:55.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025176486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025192125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.939" endtime="20201030 18:28:55.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025176486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025192125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.237" endtime="20201030 18:28:55.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.247" endtime="20201030 18:28:55.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.935" endtime="20201030 18:28:55.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.932" endtime="20201030 18:28:55.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:55.255" level="INFO">${RESULT} = [{'diff': 1.563899999999785e-05}, {'diff': 1.558299999999957e-05}, {'diff': 1.5041999999999833e-05}, {'diff': 1.566700000000046e-05}, {'diff': 1.566699999999699e-05}, {'diff': 1.566700000000046e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:55.251" endtime="20201030 18:28:55.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:55.260" level="INFO">${ACCURACY} = {'diff': [1.563899999999785e-05, 1.558299999999957e-05, 1.5041999999999833e-05, 1.566700000000046e-05, 1.566699999999699e-05, 1.566700000000046e-05, 1.5666000000000985e-05, 1.5666000000000985e-05, 1.5...</msg>
<status status="PASS" starttime="20201030 18:28:55.257" endtime="20201030 18:28:55.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.264" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 18:28:55.263" endtime="20201030 18:28:55.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.267" level="INFO">VALUE: [1.563899999999785e-05, 1.558299999999957e-05, 1.5041999999999833e-05, 1.566700000000046e-05, 1.566699999999699e-05, 1.566700000000046e-05, 1.5666000000000985e-05, 1.5666000000000985e-05, 1.50689999999995e-05, 1.5681000000000028e-05, 1.566700000000046e-05, 1.5056000000002873e-05, 1.5666000000000985e-05, 1.565300000000089e-05, 1.566700000000046e-05, 1.565300000000089e-05, 1.5666000000000985e-05, 1.50689999999995e-05, 1.505499999999993e-05, 1.566700000000046e-05, 1.50689999999995e-05, 1.566700000000046e-05, 1.5083000000002539e-05, 1.50689999999995e-05, 1.508299999999907e-05, 1.5069999999998973e-05, 1.5666000000000985e-05, 1.5084000000002012e-05, 1.562499999999828e-05, 1.5055999999999403e-05, 1.5055999999999403e-05, 1.559700000000261e-05, 1.5041999999999833e-05, 1.5055999999999403e-05, 1.5055999999999403e-05, 1.5041999999999833e-05, 1.5666000000000985e-05, 1.565300000000089e-05, 1.5013999999997224e-05, 1.5679999999997085e-05, 1.5680000000000555e-05, 1.5680000000000555e-05, 1.565300000000089e-05, 1.561099999999871e-05, 1.501300000000122e-05, 1.5056000000002873e-05, 1.563899999999785e-05, 1.5694000000000125e-05, 1.5666000000000985e-05, 1.5083000000002539e-05]</msg>
<status status="PASS" starttime="20201030 18:28:55.265" endtime="20201030 18:28:55.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.261" endtime="20201030 18:28:55.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:55.272" endtime="20201030 18:28:55.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.271" endtime="20201030 18:28:55.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.270" endtime="20201030 18:28:55.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.891" endtime="20201030 18:28:55.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.891" endtime="20201030 18:28:55.293"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.301" endtime="20201030 18:28:55.316"></status>
</kw>
<msg timestamp="20201030 18:28:55.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.300" endtime="20201030 18:28:55.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.318" endtime="20201030 18:28:55.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.320" endtime="20201030 18:28:55.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.297" endtime="20201030 18:28:55.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.295" endtime="20201030 18:28:55.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.329" endtime="20201030 18:28:55.613"></status>
</kw>
<msg timestamp="20201030 18:28:55.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.327" endtime="20201030 18:28:55.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.617" endtime="20201030 18:28:55.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.625" endtime="20201030 18:28:55.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.325" endtime="20201030 18:28:55.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.323" endtime="20201030 18:28:55.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:55.632" level="INFO">${RESULT} = [{'diff': 1.6277999999998044e-05}, {'diff': 1.6264000000001944e-05}, {'diff': 1.6249999999998904e-05}, {'diff': 1.6278000000001513e-05}, {'diff': 1.5681000000000028e-05}, {'diff': 1.6235999999999334e-...</msg>
<status status="PASS" starttime="20201030 18:28:55.628" endtime="20201030 18:28:55.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:55.638" level="INFO">${ACCURACY} = {'diff': [1.6277999999998044e-05, 1.6264000000001944e-05, 1.6249999999998904e-05, 1.6278000000001513e-05, 1.5681000000000028e-05, 1.6235999999999334e-05, 1.68889999999991e-05, 1.6264000000001944e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:55.634" endtime="20201030 18:28:55.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.643" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 18:28:55.642" endtime="20201030 18:28:55.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.645" level="INFO">VALUE: [1.6277999999998044e-05, 1.6264000000001944e-05, 1.6249999999998904e-05, 1.6278000000001513e-05, 1.5681000000000028e-05, 1.6235999999999334e-05, 1.68889999999991e-05, 1.6264000000001944e-05, 1.6263999999998474e-05, 1.6249999999998904e-05, 1.6278000000001513e-05, 1.6292000000001083e-05, 1.6263999999998474e-05, 1.6263999999998474e-05, 1.565299999999742e-05, 1.687499999999953e-05, 1.5681000000000028e-05, 1.566700000000046e-05, 1.6263999999998474e-05, 1.6221999999999764e-05, 1.6278000000001513e-05, 1.6263999999998474e-05, 1.5721999999999264e-05, 1.566700000000046e-05, 1.6180000000001055e-05, 1.566700000000046e-05, 1.687499999999953e-05, 1.6262999999999e-05, 1.6264000000001944e-05, 1.6264000000001944e-05, 1.686099999999996e-05, 1.6263999999998474e-05, 1.626300000000247e-05, 1.6305999999997184e-05, 1.6915999999998765e-05, 1.561099999999871e-05, 1.566700000000046e-05, 1.6333999999999793e-05, 1.6277999999998044e-05, 1.68889999999991e-05, 1.565300000000089e-05, 1.6263999999998474e-05, 1.6250000000002374e-05, 1.6278000000001513e-05, 1.68889999999991e-05, 1.687499999999953e-05, 1.687499999999953e-05, 1.68889999999991e-05, 1.686099999999996e-05, 1.5681000000000028e-05]</msg>
<status status="PASS" starttime="20201030 18:28:55.644" endtime="20201030 18:28:55.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.639" endtime="20201030 18:28:55.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:55.650" endtime="20201030 18:28:55.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.649" endtime="20201030 18:28:55.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.648" endtime="20201030 18:28:55.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.294" endtime="20201030 18:28:55.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.293" endtime="20201030 18:28:55.671"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.679" endtime="20201030 18:28:55.695"></status>
</kw>
<msg timestamp="20201030 18:28:55.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.678" endtime="20201030 18:28:55.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.696" endtime="20201030 18:28:55.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.700" endtime="20201030 18:28:55.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.675" endtime="20201030 18:28:55.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.673" endtime="20201030 18:28:55.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.712" endtime="20201030 18:28:55.998"></status>
</kw>
<msg timestamp="20201030 18:28:56.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021783069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021800556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.710" endtime="20201030 18:28:56.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021783069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021800556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.002" endtime="20201030 18:28:56.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.010" endtime="20201030 18:28:56.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.706" endtime="20201030 18:28:56.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.704" endtime="20201030 18:28:56.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:56.017" level="INFO">${RESULT} = [{'diff': 1.7487000000000058e-05}, {'diff': 1.7472000000001014e-05}, {'diff': 1.7457999999997975e-05}, {'diff': 1.7472000000001014e-05}, {'diff': 1.741699999999874e-05}, {'diff': 1.808300000000207e-05...</msg>
<status status="PASS" starttime="20201030 18:28:56.014" endtime="20201030 18:28:56.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:56.021" level="INFO">${ACCURACY} = {'diff': [1.7487000000000058e-05, 1.7472000000001014e-05, 1.7457999999997975e-05, 1.7472000000001014e-05, 1.741699999999874e-05, 1.808300000000207e-05, 1.693099999999781e-05, 1.68889999999991e-05, 1.6...</msg>
<status status="PASS" starttime="20201030 18:28:56.018" endtime="20201030 18:28:56.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.025" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 18:28:56.024" endtime="20201030 18:28:56.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.028" level="INFO">VALUE: [1.7487000000000058e-05, 1.7472000000001014e-05, 1.7457999999997975e-05, 1.7472000000001014e-05, 1.741699999999874e-05, 1.808300000000207e-05, 1.693099999999781e-05, 1.68889999999991e-05, 1.687499999999953e-05, 1.683299999999735e-05, 1.7541999999998864e-05, 1.7500000000000154e-05, 1.8027999999999794e-05, 1.7473000000000488e-05, 1.7472000000001014e-05, 1.687499999999953e-05, 1.7473000000000488e-05, 1.80829999999986e-05, 1.6945000000000848e-05, 1.744500000000135e-05, 1.7500000000000154e-05, 1.687499999999953e-05, 1.7473000000000488e-05, 1.687499999999953e-05, 1.80829999999986e-05, 1.7471999999997545e-05, 1.6957999999997475e-05, 1.687499999999953e-05, 1.68889999999991e-05, 1.7472000000001014e-05, 1.7471999999997545e-05, 1.8098000000001113e-05, 1.690299999999867e-05, 1.7471999999997545e-05, 1.752699999999982e-05, 1.7486000000000584e-05, 1.7500000000000154e-05, 1.687499999999953e-05, 1.7485999999997115e-05, 1.7513999999999724e-05, 1.7485999999997115e-05, 1.687499999999953e-05, 1.6834000000000293e-05, 1.7486000000000584e-05, 1.688900000000257e-05, 1.7472000000001014e-05, 1.68889999999991e-05, 1.7459000000000918e-05, 1.80829999999986e-05, 1.68889999999991e-05]</msg>
<status status="PASS" starttime="20201030 18:28:56.026" endtime="20201030 18:28:56.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.022" endtime="20201030 18:28:56.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:56.033" endtime="20201030 18:28:56.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.031" endtime="20201030 18:28:56.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.030" endtime="20201030 18:28:56.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.672" endtime="20201030 18:28:56.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.671" endtime="20201030 18:28:56.053"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.062" endtime="20201030 18:28:56.078"></status>
</kw>
<msg timestamp="20201030 18:28:56.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.060" endtime="20201030 18:28:56.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.080" endtime="20201030 18:28:56.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.082" endtime="20201030 18:28:56.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.058" endtime="20201030 18:28:56.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.056" endtime="20201030 18:28:56.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.091" endtime="20201030 18:28:56.377"></status>
</kw>
<msg timestamp="20201030 18:28:56.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022816389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.089" endtime="20201030 18:28:56.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022816389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.381" endtime="20201030 18:28:56.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.389" endtime="20201030 18:28:56.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.087" endtime="20201030 18:28:56.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.085" endtime="20201030 18:28:56.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:56.396" level="INFO">${RESULT} = [{'diff': 1.8680000000000085e-05}, {'diff': 1.868100000000303e-05}, {'diff': 1.809700000000164e-05}, {'diff': 1.809699999999817e-05}, {'diff': 1.809699999999817e-05}, {'diff': 1.8680000000000085e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:56.392" endtime="20201030 18:28:56.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:56.400" level="INFO">${ACCURACY} = {'diff': [1.8680000000000085e-05, 1.868100000000303e-05, 1.809700000000164e-05, 1.809699999999817e-05, 1.809699999999817e-05, 1.8680000000000085e-05, 1.8680000000000085e-05, 1.8693999999999655e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:28:56.397" endtime="20201030 18:28:56.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.404" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 18:28:56.403" endtime="20201030 18:28:56.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.407" level="INFO">VALUE: [1.8680000000000085e-05, 1.868100000000303e-05, 1.809700000000164e-05, 1.809699999999817e-05, 1.809699999999817e-05, 1.8680000000000085e-05, 1.8680000000000085e-05, 1.8693999999999655e-05, 1.811100000000121e-05, 1.87089999999987e-05, 1.8083999999998074e-05, 1.8666000000000516e-05, 1.808300000000207e-05, 1.8764000000000974e-05, 1.8680000000000085e-05, 1.80829999999986e-05, 1.8693999999999655e-05, 1.8070000000001973e-05, 1.8083999999998074e-05, 1.868100000000303e-05, 1.809700000000164e-05, 1.806899999999903e-05, 1.869499999999913e-05, 1.80829999999986e-05, 1.80829999999986e-05, 1.8084000000001543e-05, 1.8084000000001543e-05, 1.8070000000001973e-05, 1.8680000000000085e-05, 1.8707999999999225e-05, 1.806899999999903e-05, 1.870900000000217e-05, 1.8723000000001738e-05, 1.8069999999998504e-05, 1.809699999999817e-05, 1.870900000000217e-05, 1.861099999999824e-05, 1.8098000000001113e-05, 1.808300000000207e-05, 1.869499999999913e-05, 1.869499999999913e-05, 1.806899999999903e-05, 1.869499999999913e-05, 1.806899999999903e-05, 1.8666000000000516e-05, 1.8083999999998074e-05, 1.868099999999956e-05, 1.8069999999998504e-05, 1.8693999999999655e-05, 1.809700000000164e-05]</msg>
<status status="PASS" starttime="20201030 18:28:56.405" endtime="20201030 18:28:56.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.400" endtime="20201030 18:28:56.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:56.412" endtime="20201030 18:28:56.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.411" endtime="20201030 18:28:56.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.410" endtime="20201030 18:28:56.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.054" endtime="20201030 18:28:56.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.054" endtime="20201030 18:28:56.433"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.441" endtime="20201030 18:28:56.457"></status>
</kw>
<msg timestamp="20201030 18:28:56.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.440" endtime="20201030 18:28:56.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.459" endtime="20201030 18:28:56.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.461" endtime="20201030 18:28:56.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.437" endtime="20201030 18:28:56.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.435" endtime="20201030 18:28:56.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.470" endtime="20201030 18:28:56.756"></status>
</kw>
<msg timestamp="20201030 18:28:56.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.469" endtime="20201030 18:28:56.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.760" endtime="20201030 18:28:56.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.769" endtime="20201030 18:28:56.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.466" endtime="20201030 18:28:56.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.464" endtime="20201030 18:28:56.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:56.775" level="INFO">${RESULT} = [{'diff': 1.8707999999999225e-05}, {'diff': 1.930500000000071e-05}, {'diff': 1.9916000000001766e-05}, {'diff': 1.86950000000026e-05}, {'diff': 1.9306000000000184e-05}, {'diff': 1.98890000000021e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:56.772" endtime="20201030 18:28:56.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:56.780" level="INFO">${ACCURACY} = {'diff': [1.8707999999999225e-05, 1.930500000000071e-05, 1.9916000000001766e-05, 1.86950000000026e-05, 1.9306000000000184e-05, 1.98890000000021e-05, 1.9278000000001044e-05, 1.988899999999863e-05, 1.92...</msg>
<status status="PASS" starttime="20201030 18:28:56.776" endtime="20201030 18:28:56.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.785" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 18:28:56.784" endtime="20201030 18:28:56.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.787" level="INFO">VALUE: [1.8707999999999225e-05, 1.930500000000071e-05, 1.9916000000001766e-05, 1.86950000000026e-05, 1.9306000000000184e-05, 1.98890000000021e-05, 1.9278000000001044e-05, 1.988899999999863e-05, 1.929100000000114e-05, 1.9306000000000184e-05, 1.930500000000071e-05, 1.929099999999767e-05, 1.9306000000000184e-05, 1.9888000000002626e-05, 1.933299999999985e-05, 1.9235999999998865e-05, 1.988899999999863e-05, 1.931899999999681e-05, 1.988899999999863e-05, 1.9277999999997575e-05, 1.930499999999724e-05, 1.929100000000114e-05, 1.933299999999985e-05, 1.991700000000124e-05, 1.9306000000000184e-05, 1.9292000000000614e-05, 1.9915999999998296e-05, 1.929100000000114e-05, 1.936099999999899e-05, 1.868099999999956e-05, 1.936100000000246e-05, 1.868099999999956e-05, 1.929099999999767e-05, 1.9305999999996715e-05, 1.929099999999767e-05, 1.9306000000000184e-05, 1.9929999999997866e-05, 1.99029999999982e-05, 1.98890000000021e-05, 1.8694000000003125e-05, 1.9292000000000614e-05, 1.9278000000001044e-05, 1.868099999999956e-05, 1.933299999999985e-05, 1.9306000000000184e-05, 1.9292000000000614e-05, 1.9291999999997145e-05, 1.9292000000000614e-05, 1.9972000000000045e-05, 1.98890000000021e-05]</msg>
<status status="PASS" starttime="20201030 18:28:56.786" endtime="20201030 18:28:56.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.781" endtime="20201030 18:28:56.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:56.792" endtime="20201030 18:28:56.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.790" endtime="20201030 18:28:56.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.789" endtime="20201030 18:28:56.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.434" endtime="20201030 18:28:56.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.433" endtime="20201030 18:28:56.813"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.822" endtime="20201030 18:28:56.838"></status>
</kw>
<msg timestamp="20201030 18:28:56.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.821" endtime="20201030 18:28:56.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.839" endtime="20201030 18:28:56.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.842" endtime="20201030 18:28:56.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.818" endtime="20201030 18:28:56.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.816" endtime="20201030 18:28:56.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.851" endtime="20201030 18:28:57.139"></status>
</kw>
<msg timestamp="20201030 18:28:57.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022879028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022899528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.849" endtime="20201030 18:28:57.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022879028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022899528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.143" endtime="20201030 18:28:57.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.151" endtime="20201030 18:28:57.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.847" endtime="20201030 18:28:57.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.845" endtime="20201030 18:28:57.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:57.158" level="INFO">${RESULT} = [{'diff': 2.0499999999999685e-05}, {'diff': 2.0499999999999685e-05}, {'diff': 1.9887999999999156e-05}, {'diff': 1.99029999999982e-05}, {'diff': 1.98890000000021e-05}, {'diff': 2.0499999999999685e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:57.155" endtime="20201030 18:28:57.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:57.162" level="INFO">${ACCURACY} = {'diff': [2.0499999999999685e-05, 2.0499999999999685e-05, 1.9887999999999156e-05, 1.99029999999982e-05, 1.98890000000021e-05, 2.0499999999999685e-05, 1.98890000000021e-05, 1.990300000000167e-05, 1.990...</msg>
<status status="PASS" starttime="20201030 18:28:57.159" endtime="20201030 18:28:57.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.166" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 18:28:57.165" endtime="20201030 18:28:57.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.169" level="INFO">VALUE: [2.0499999999999685e-05, 2.0499999999999685e-05, 1.9887999999999156e-05, 1.99029999999982e-05, 1.98890000000021e-05, 2.0499999999999685e-05, 1.98890000000021e-05, 1.990300000000167e-05, 1.99029999999982e-05, 2.0513999999999255e-05, 2.111100000000074e-05, 1.9915999999998296e-05, 1.9902000000002196e-05, 2.0499999999999685e-05, 1.9833999999999824e-05, 2.0486000000000115e-05, 2.041700000000174e-05, 2.0486000000000115e-05, 2.0486000000000115e-05, 1.986099999999949e-05, 2.0513999999999255e-05, 1.980500000000121e-05, 1.99029999999982e-05, 2.112500000000031e-05, 2.044500000000088e-05, 1.990300000000167e-05, 2.0472000000000545e-05, 2.0499999999999685e-05, 1.98890000000021e-05, 2.0555999999997965e-05, 1.994500000000038e-05, 2.0429999999998366e-05, 1.9944000000000905e-05, 2.045900000000045e-05, 2.0513999999999255e-05, 2.0513999999999255e-05, 2.0499999999999685e-05, 1.991700000000124e-05, 1.988899999999863e-05, 2.0499999999999685e-05, 1.98890000000021e-05, 2.0499999999999685e-05, 2.0514000000002724e-05, 1.99029999999982e-05, 1.988899999999863e-05, 1.990300000000167e-05, 2.0486000000000115e-05, 1.988899999999863e-05, 2.109700000000117e-05, 2.0499999999999685e-05]</msg>
<status status="PASS" starttime="20201030 18:28:57.167" endtime="20201030 18:28:57.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.163" endtime="20201030 18:28:57.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:57.174" endtime="20201030 18:28:57.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.172" endtime="20201030 18:28:57.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.171" endtime="20201030 18:28:57.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.814" endtime="20201030 18:28:57.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.813" endtime="20201030 18:28:57.194"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.203" endtime="20201030 18:28:57.219"></status>
</kw>
<msg timestamp="20201030 18:28:57.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.201" endtime="20201030 18:28:57.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.220" endtime="20201030 18:28:57.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.223" endtime="20201030 18:28:57.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.199" endtime="20201030 18:28:57.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.197" endtime="20201030 18:28:57.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.232" endtime="20201030 18:28:57.517"></status>
</kw>
<msg timestamp="20201030 18:28:57.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022914556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022935667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.230" endtime="20201030 18:28:57.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022914556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022935667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.521" endtime="20201030 18:28:57.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.530" endtime="20201030 18:28:57.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.228" endtime="20201030 18:28:57.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.226" endtime="20201030 18:28:57.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:57.536" level="INFO">${RESULT} = [{'diff': 2.111100000000074e-05}, {'diff': 2.1707999999998756e-05}, {'diff': 2.1750000000000935e-05}, {'diff': 2.17090000000017e-05}, {'diff': 2.109700000000117e-05}, {'diff': 2.109700000000117e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:57.533" endtime="20201030 18:28:57.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:57.540" level="INFO">${ACCURACY} = {'diff': [2.111100000000074e-05, 2.1707999999998756e-05, 2.1750000000000935e-05, 2.17090000000017e-05, 2.109700000000117e-05, 2.109700000000117e-05, 2.170899999999823e-05, 2.1708000000002226e-05, 2.11...</msg>
<status status="PASS" starttime="20201030 18:28:57.537" endtime="20201030 18:28:57.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.545" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 18:28:57.544" endtime="20201030 18:28:57.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.547" level="INFO">VALUE: [2.111100000000074e-05, 2.1707999999998756e-05, 2.1750000000000935e-05, 2.17090000000017e-05, 2.109700000000117e-05, 2.109700000000117e-05, 2.170899999999823e-05, 2.1708000000002226e-05, 2.111100000000074e-05, 2.109700000000117e-05, 2.112500000000031e-05, 2.170899999999823e-05, 2.10830000000016e-05, 2.1707999999998756e-05, 2.1707999999998756e-05, 2.162500000000081e-05, 2.109700000000117e-05, 2.172300000000127e-05, 2.1708000000002226e-05, 2.10969999999977e-05, 2.111099999999727e-05, 2.1708000000002226e-05, 2.173700000000084e-05, 2.10969999999977e-05, 2.109700000000117e-05, 2.1098000000000644e-05, 2.1084000000001074e-05, 2.10969999999977e-05, 2.1666000000000046e-05, 2.1750000000000935e-05, 2.1707999999998756e-05, 2.1722000000001795e-05, 2.169499999999866e-05, 2.1707999999998756e-05, 2.111100000000074e-05, 2.169499999999866e-05, 2.1708000000002226e-05, 2.112500000000031e-05, 2.111099999999727e-05, 2.1694000000002656e-05, 2.119499999999816e-05, 2.166699999999952e-05, 2.109700000000117e-05, 2.111100000000074e-05, 2.1707999999998756e-05, 2.1055999999998465e-05, 2.111100000000074e-05, 2.1722000000001795e-05, 2.1707999999998756e-05, 2.166699999999952e-05]</msg>
<status status="PASS" starttime="20201030 18:28:57.546" endtime="20201030 18:28:57.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.541" endtime="20201030 18:28:57.549"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:57.553" endtime="20201030 18:28:57.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.551" endtime="20201030 18:28:57.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.550" endtime="20201030 18:28:57.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.195" endtime="20201030 18:28:57.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.195" endtime="20201030 18:28:57.574"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.582" endtime="20201030 18:28:57.598"></status>
</kw>
<msg timestamp="20201030 18:28:57.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.580" endtime="20201030 18:28:57.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.600" endtime="20201030 18:28:57.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.602" endtime="20201030 18:28:57.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.578" endtime="20201030 18:28:57.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.576" endtime="20201030 18:28:57.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.611" endtime="20201030 18:28:57.897"></status>
</kw>
<msg timestamp="20201030 18:28:57.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022264708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.609" endtime="20201030 18:28:57.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022264708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.901" endtime="20201030 18:28:57.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.909" endtime="20201030 18:28:57.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.607" endtime="20201030 18:28:57.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.605" endtime="20201030 18:28:57.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:57.916" level="INFO">${RESULT} = [{'diff': 2.2305999999999715e-05}, {'diff': 2.231899999999981e-05}, {'diff': 2.230500000000024e-05}, {'diff': 2.291700000000077e-05}, {'diff': 2.2930000000000866e-05}, {'diff': 2.291700000000077e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:57.913" endtime="20201030 18:28:57.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:57.921" level="INFO">${ACCURACY} = {'diff': [2.2305999999999715e-05, 2.231899999999981e-05, 2.230500000000024e-05, 2.291700000000077e-05, 2.2930000000000866e-05, 2.291700000000077e-05, 2.2277999999997106e-05, 2.2348000000001894e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:57.917" endtime="20201030 18:28:57.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.925" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 18:28:57.924" endtime="20201030 18:28:57.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.928" level="INFO">VALUE: [2.2305999999999715e-05, 2.231899999999981e-05, 2.230500000000024e-05, 2.291700000000077e-05, 2.2930000000000866e-05, 2.291700000000077e-05, 2.2277999999997106e-05, 2.2348000000001894e-05, 2.2305999999999715e-05, 2.236100000000199e-05, 2.231899999999981e-05, 2.170899999999823e-05, 2.2292000000000145e-05, 2.231899999999981e-05, 2.231899999999981e-05, 2.236099999999852e-05, 2.230500000000024e-05, 2.234699999999895e-05, 2.2320000000002754e-05, 2.2305999999999715e-05, 2.291700000000077e-05, 2.231899999999981e-05, 2.288899999999816e-05, 2.2930000000000866e-05, 2.2292000000000145e-05, 2.2333999999998855e-05, 2.169499999999866e-05, 2.2291999999996676e-05, 2.2971999999999576e-05, 2.2305999999999715e-05, 2.169499999999866e-05, 2.2305999999999715e-05, 2.2930000000000866e-05, 2.231899999999981e-05, 2.2985999999999146e-05, 2.2915999999997827e-05, 2.29169999999973e-05, 2.2333999999998855e-05, 2.294499999999991e-05, 2.2915999999997827e-05, 2.291700000000077e-05, 2.2944000000000436e-05, 2.230500000000024e-05, 2.231899999999981e-05, 2.17090000000017e-05, 2.2292000000000145e-05, 2.2305999999999715e-05, 2.2305999999999715e-05, 2.2305999999999715e-05, 2.162500000000081e-05]</msg>
<status status="PASS" starttime="20201030 18:28:57.926" endtime="20201030 18:28:57.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.922" endtime="20201030 18:28:57.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:57.932" endtime="20201030 18:28:57.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.931" endtime="20201030 18:28:57.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.930" endtime="20201030 18:28:57.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.574" endtime="20201030 18:28:57.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.574" endtime="20201030 18:28:57.953"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.962" endtime="20201030 18:28:57.977"></status>
</kw>
<msg timestamp="20201030 18:28:57.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.960" endtime="20201030 18:28:57.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.979" endtime="20201030 18:28:57.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.981" endtime="20201030 18:28:57.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.958" endtime="20201030 18:28:57.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.956" endtime="20201030 18:28:57.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.990" endtime="20201030 18:28:58.276"></status>
</kw>
<msg timestamp="20201030 18:28:58.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.988" endtime="20201030 18:28:58.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.280" endtime="20201030 18:28:58.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.288" endtime="20201030 18:28:58.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.986" endtime="20201030 18:28:58.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.984" endtime="20201030 18:28:58.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:58.295" level="INFO">${RESULT} = [{'diff': 2.408300000000113e-05}, {'diff': 2.291700000000077e-05}, {'diff': 2.3526999999998882e-05}, {'diff': 2.288900000000163e-05}, {'diff': 2.3514000000002255e-05}, {'diff': 2.288900000000163e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:58.292" endtime="20201030 18:28:58.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:58.299" level="INFO">${ACCURACY} = {'diff': [2.408300000000113e-05, 2.291700000000077e-05, 2.3526999999998882e-05, 2.288900000000163e-05, 2.3514000000002255e-05, 2.288900000000163e-05, 2.3513999999998786e-05, 2.290299999999773e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 18:28:58.296" endtime="20201030 18:28:58.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.304" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 18:28:58.303" endtime="20201030 18:28:58.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.306" level="INFO">VALUE: [2.408300000000113e-05, 2.291700000000077e-05, 2.3526999999998882e-05, 2.288900000000163e-05, 2.3514000000002255e-05, 2.288900000000163e-05, 2.3513999999998786e-05, 2.290299999999773e-05, 2.3512999999999312e-05, 2.294499999999991e-05, 2.291700000000077e-05, 2.2916000000001296e-05, 2.361099999999977e-05, 2.291700000000077e-05, 2.295899999999948e-05, 2.2916000000001296e-05, 2.290299999999773e-05, 2.3513999999998786e-05, 2.2930000000000866e-05, 2.2985999999999146e-05, 2.3457999999997037e-05, 2.352700000000235e-05, 2.2929999999997397e-05, 2.294499999999991e-05, 2.3499999999999216e-05, 2.291700000000077e-05, 2.3528000000001825e-05, 2.293099999999687e-05, 2.3555999999997496e-05, 2.291700000000077e-05, 2.2901999999998257e-05, 2.3528000000001825e-05, 2.3528000000001825e-05, 2.3514000000002255e-05, 2.3499999999999216e-05, 2.291700000000077e-05, 2.29169999999973e-05, 2.290299999999773e-05, 2.3541999999997926e-05, 2.2985999999999146e-05, 2.291700000000077e-05, 2.3527999999998356e-05, 2.291700000000077e-05, 2.352700000000235e-05, 2.286100000000249e-05, 2.3512999999999312e-05, 2.3527999999998356e-05, 2.3570000000000535e-05, 2.3527999999998356e-05, 2.3541999999997926e-05]</msg>
<status status="PASS" starttime="20201030 18:28:58.305" endtime="20201030 18:28:58.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.300" endtime="20201030 18:28:58.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:58.311" endtime="20201030 18:28:58.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.309" endtime="20201030 18:28:58.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.308" endtime="20201030 18:28:58.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.954" endtime="20201030 18:28:58.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.953" endtime="20201030 18:28:58.331"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.340" endtime="20201030 18:28:58.360"></status>
</kw>
<msg timestamp="20201030 18:28:58.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.338" endtime="20201030 18:28:58.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.362" endtime="20201030 18:28:58.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.364" endtime="20201030 18:28:58.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.336" endtime="20201030 18:28:58.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.334" endtime="20201030 18:28:58.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.373" endtime="20201030 18:28:58.660"></status>
</kw>
<msg timestamp="20201030 18:28:58.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025143819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025167931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.371" endtime="20201030 18:28:58.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025143819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025167931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.664" endtime="20201030 18:28:58.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.672" endtime="20201030 18:28:58.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.369" endtime="20201030 18:28:58.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.367" endtime="20201030 18:28:58.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:58.679" level="INFO">${RESULT} = [{'diff': 2.4111999999999745e-05}, {'diff': 2.4722000000001326e-05}, {'diff': 2.4707999999998287e-05}, {'diff': 2.412499999999984e-05}, {'diff': 2.411100000000027e-05}, {'diff': 2.411100000000027e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:58.676" endtime="20201030 18:28:58.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:58.683" level="INFO">${ACCURACY} = {'diff': [2.4111999999999745e-05, 2.4722000000001326e-05, 2.4707999999998287e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.411100000000027e-05, 2.4054999999998522e-05, 2.413899999999941e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:58.680" endtime="20201030 18:28:58.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.687" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 18:28:58.686" endtime="20201030 18:28:58.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.690" level="INFO">VALUE: [2.4111999999999745e-05, 2.4722000000001326e-05, 2.4707999999998287e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.411100000000027e-05, 2.4054999999998522e-05, 2.413899999999941e-05, 2.4736000000000896e-05, 2.4750000000000466e-05, 2.4764000000000036e-05, 2.469500000000166e-05, 2.413899999999941e-05, 2.4722000000001326e-05, 2.4736000000000896e-05, 2.4151999999999507e-05, 2.468099999999862e-05, 2.4736000000000896e-05, 2.412499999999984e-05, 2.4707999999998287e-05, 2.4736000000000896e-05, 2.4056000000001465e-05, 2.415300000000245e-05, 2.466699999999905e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.415299999999898e-05, 2.40970000000007e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.4137999999999937e-05, 2.4749999999996997e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.4736000000000896e-05, 2.413900000000288e-05, 2.4736000000000896e-05, 2.411100000000027e-05, 2.4721999999997857e-05, 2.4764000000000036e-05, 2.412499999999984e-05, 2.4735999999997427e-05, 2.4736000000000896e-05, 2.41109999999968e-05, 2.413899999999941e-05, 2.415299999999898e-05, 2.4721999999997857e-05, 2.4721999999997857e-05, 2.4735999999997427e-05, 2.4736000000000896e-05]</msg>
<status status="PASS" starttime="20201030 18:28:58.688" endtime="20201030 18:28:58.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.684" endtime="20201030 18:28:58.706"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:58.710" endtime="20201030 18:28:58.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.709" endtime="20201030 18:28:58.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.707" endtime="20201030 18:28:58.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.332" endtime="20201030 18:28:58.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.332" endtime="20201030 18:28:58.731"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.739" endtime="20201030 18:28:58.755"></status>
</kw>
<msg timestamp="20201030 18:28:58.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.738" endtime="20201030 18:28:58.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.757" endtime="20201030 18:28:58.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.759" endtime="20201030 18:28:58.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.735" endtime="20201030 18:28:58.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.733" endtime="20201030 18:28:58.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.768" endtime="20201030 18:28:59.054"></status>
</kw>
<msg timestamp="20201030 18:28:59.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022261375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.767" endtime="20201030 18:28:59.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022261375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.058" endtime="20201030 18:28:59.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.066" endtime="20201030 18:28:59.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.764" endtime="20201030 18:28:59.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.763" endtime="20201030 18:28:59.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:59.073" level="INFO">${RESULT} = [{'diff': 2.5943999999999967e-05}, {'diff': 2.5971999999999107e-05}, {'diff': 2.47230000000008e-05}, {'diff': 2.593099999999987e-05}, {'diff': 2.4722000000001326e-05}, {'diff': 2.593099999999987e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:59.070" endtime="20201030 18:28:59.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:59.078" level="INFO">${ACCURACY} = {'diff': [2.5943999999999967e-05, 2.5971999999999107e-05, 2.47230000000008e-05, 2.593099999999987e-05, 2.4722000000001326e-05, 2.593099999999987e-05, 2.536100000000152e-05, 2.5346999999998482e-05, 2.5...</msg>
<status status="PASS" starttime="20201030 18:28:59.074" endtime="20201030 18:28:59.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.082" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 18:28:59.081" endtime="20201030 18:28:59.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.085" level="INFO">VALUE: [2.5943999999999967e-05, 2.5971999999999107e-05, 2.47230000000008e-05, 2.593099999999987e-05, 2.4722000000001326e-05, 2.593099999999987e-05, 2.536100000000152e-05, 2.5346999999998482e-05, 2.5943999999999967e-05, 2.4721999999997857e-05, 2.5346999999998482e-05, 2.5346999999998482e-05, 2.5332999999998912e-05, 2.594499999999944e-05, 2.5306000000002715e-05, 2.5348000000001425e-05, 2.5943999999999967e-05, 2.593099999999987e-05, 2.5332999999998912e-05, 2.593099999999987e-05, 2.5929999999996928e-05, 2.5333999999998386e-05, 2.5318999999999342e-05, 2.5318999999999342e-05, 2.5318999999999342e-05, 2.593100000000334e-05, 2.4735999999997427e-05, 2.5334000000001855e-05, 2.533300000000238e-05, 2.593099999999987e-05, 2.5943999999999967e-05, 2.594499999999944e-05, 2.4735999999997427e-05, 2.5347999999997956e-05, 2.5333999999998386e-05, 2.5346999999998482e-05, 2.534700000000195e-05, 2.5348000000001425e-05, 2.469499999999819e-05, 2.4735999999997427e-05, 2.5291999999999676e-05, 2.540300000000023e-05, 2.4736000000000896e-05, 2.4722000000001326e-05, 2.5334000000001855e-05, 2.4722000000001326e-05, 2.5346999999998482e-05, 2.5332999999998912e-05, 2.4722000000001326e-05, 2.534700000000195e-05]</msg>
<status status="PASS" starttime="20201030 18:28:59.083" endtime="20201030 18:28:59.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.079" endtime="20201030 18:28:59.086"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:59.089" endtime="20201030 18:28:59.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.088" endtime="20201030 18:28:59.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.087" endtime="20201030 18:28:59.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.732" endtime="20201030 18:28:59.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.731" endtime="20201030 18:28:59.110"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.119" endtime="20201030 18:28:59.135"></status>
</kw>
<msg timestamp="20201030 18:28:59.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.117" endtime="20201030 18:28:59.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.137" endtime="20201030 18:28:59.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.139" endtime="20201030 18:28:59.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.115" endtime="20201030 18:28:59.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.112" endtime="20201030 18:28:59.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.148" endtime="20201030 18:28:59.434"></status>
</kw>
<msg timestamp="20201030 18:28:59.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022264625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022291181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.146" endtime="20201030 18:28:59.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022264625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022291181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.438" endtime="20201030 18:28:59.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.447" endtime="20201030 18:28:59.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.144" endtime="20201030 18:28:59.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.142" endtime="20201030 18:28:59.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:59.453" level="INFO">${RESULT} = [{'diff': 2.6556000000000496e-05}, {'diff': 2.595900000000248e-05}, {'diff': 2.594499999999944e-05}, {'diff': 2.5943999999999967e-05}, {'diff': 2.6624999999998872e-05}, {'diff': 2.6541000000001452e-05...</msg>
<status status="PASS" starttime="20201030 18:28:59.450" endtime="20201030 18:28:59.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:59.457" level="INFO">${ACCURACY} = {'diff': [2.6556000000000496e-05, 2.595900000000248e-05, 2.594499999999944e-05, 2.5943999999999967e-05, 2.6624999999998872e-05, 2.6541000000001452e-05, 2.715299999999851e-05, 2.6556000000000496e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:59.454" endtime="20201030 18:28:59.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.462" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 18:28:59.461" endtime="20201030 18:28:59.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.464" level="INFO">VALUE: [2.6556000000000496e-05, 2.595900000000248e-05, 2.594499999999944e-05, 2.5943999999999967e-05, 2.6624999999998872e-05, 2.6541000000001452e-05, 2.715299999999851e-05, 2.6556000000000496e-05, 2.6542000000000926e-05, 2.594499999999944e-05, 2.5930000000000397e-05, 2.6471999999999607e-05, 2.6555000000001022e-05, 2.5943999999999967e-05, 2.6542000000000926e-05, 2.590300000000073e-05, 2.7097000000000232e-05, 2.5943999999999967e-05, 2.6540999999997983e-05, 2.6568999999997123e-05, 2.6542000000000926e-05, 2.6555000000001022e-05, 2.6541000000001452e-05, 2.6471999999999607e-05, 2.6542000000000926e-05, 2.6540999999997983e-05, 2.6597999999999206e-05, 2.5957999999999537e-05, 2.6556000000000496e-05, 2.593099999999987e-05, 2.6570000000000066e-05, 2.6540999999997983e-05, 2.6528000000001356e-05, 2.5971999999999107e-05, 2.597300000000205e-05, 2.6542000000000926e-05, 2.6485999999999177e-05, 2.6541999999997457e-05, 2.6541000000001452e-05, 2.6528000000001356e-05, 2.6542000000000926e-05, 2.6583000000000162e-05, 2.6556000000000496e-05, 2.6555000000001022e-05, 2.6542000000000926e-05, 2.6541000000001452e-05, 2.5930000000000397e-05, 2.6512999999998843e-05, 2.5930000000000397e-05, 2.6541000000001452e-05]</msg>
<status status="PASS" starttime="20201030 18:28:59.463" endtime="20201030 18:28:59.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.458" endtime="20201030 18:28:59.465"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:59.469" endtime="20201030 18:28:59.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.467" endtime="20201030 18:28:59.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.466" endtime="20201030 18:28:59.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.111" endtime="20201030 18:28:59.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.110" endtime="20201030 18:28:59.489"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.498" endtime="20201030 18:28:59.515"></status>
</kw>
<msg timestamp="20201030 18:28:59.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.497" endtime="20201030 18:28:59.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.517" endtime="20201030 18:28:59.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.519" endtime="20201030 18:28:59.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.494" endtime="20201030 18:28:59.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.492" endtime="20201030 18:28:59.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.528" endtime="20201030 18:28:59.814"></status>
</kw>
<msg timestamp="20201030 18:28:59.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0231515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023178667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:59.527" endtime="20201030 18:28:59.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0231515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023178667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:59.818" endtime="20201030 18:28:59.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.827" endtime="20201030 18:28:59.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.524" endtime="20201030 18:28:59.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.523" endtime="20201030 18:28:59.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:59.833" level="INFO">${RESULT} = [{'diff': 2.716700000000155e-05}, {'diff': 2.715299999999851e-05}, {'diff': 2.7749999999999997e-05}, {'diff': 2.715299999999851e-05}, {'diff': 2.7166000000002077e-05}, {'diff': 2.716700000000155e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:59.830" endtime="20201030 18:28:59.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:59.837" level="INFO">${ACCURACY} = {'diff': [2.716700000000155e-05, 2.715299999999851e-05, 2.7749999999999997e-05, 2.715299999999851e-05, 2.7166000000002077e-05, 2.716700000000155e-05, 2.7736000000000427e-05, 2.7749999999999997e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:59.834" endtime="20201030 18:28:59.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.842" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 18:28:59.841" endtime="20201030 18:28:59.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.844" level="INFO">VALUE: [2.716700000000155e-05, 2.715299999999851e-05, 2.7749999999999997e-05, 2.715299999999851e-05, 2.7166000000002077e-05, 2.716700000000155e-05, 2.7736000000000427e-05, 2.7749999999999997e-05, 2.7763000000000093e-05, 2.713900000000241e-05, 2.7138999999998942e-05, 2.715299999999851e-05, 2.713900000000241e-05, 2.766699999999858e-05, 2.7777999999999137e-05, 2.7151999999999038e-05, 2.715299999999851e-05, 2.7749999999999997e-05, 2.7735999999996958e-05, 2.7680000000002147e-05, 2.715299999999851e-05, 2.7138999999998942e-05, 2.7806000000001746e-05, 2.7820000000001316e-05, 2.7806000000001746e-05, 2.715299999999851e-05, 2.7110999999999802e-05, 2.715299999999851e-05, 2.715300000000198e-05, 2.7708000000001287e-05, 2.7138999999998942e-05, 2.7749999999999997e-05, 2.7749999999999997e-05, 2.7749999999999997e-05, 2.7749999999999997e-05, 2.716699999999808e-05, 2.715299999999851e-05, 2.772300000000033e-05, 2.715299999999851e-05, 2.7749999999999997e-05, 2.715299999999851e-05, 2.7138999999998942e-05, 2.715299999999851e-05, 2.7749999999999997e-05, 2.7152000000002507e-05, 2.715299999999851e-05, 2.7151999999999038e-05, 2.7749999999999997e-05, 2.772300000000033e-05, 2.7138999999998942e-05]</msg>
<status status="PASS" starttime="20201030 18:28:59.843" endtime="20201030 18:28:59.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.838" endtime="20201030 18:28:59.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:59.850" endtime="20201030 18:28:59.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.849" endtime="20201030 18:28:59.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.847" endtime="20201030 18:28:59.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.490" endtime="20201030 18:28:59.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.490" endtime="20201030 18:28:59.871"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.880" endtime="20201030 18:28:59.895"></status>
</kw>
<msg timestamp="20201030 18:28:59.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.878" endtime="20201030 18:28:59.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.897" endtime="20201030 18:28:59.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.899" endtime="20201030 18:28:59.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.876" endtime="20201030 18:28:59.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.874" endtime="20201030 18:28:59.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.908" endtime="20201030 18:29:00.194"></status>
</kw>
<msg timestamp="20201030 18:29:00.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022090097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.907" endtime="20201030 18:29:00.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022090097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.198" endtime="20201030 18:29:00.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.207" endtime="20201030 18:29:00.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.904" endtime="20201030 18:29:00.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.903" endtime="20201030 18:29:00.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:00.213" level="INFO">${RESULT} = [{'diff': 2.7749999999999997e-05}, {'diff': 2.7749999999999997e-05}, {'diff': 2.7749999999999997e-05}, {'diff': 2.84170000000028e-05}, {'diff': 2.8402999999999762e-05}, {'diff': 2.8971999999998638e-05...</msg>
<status status="PASS" starttime="20201030 18:29:00.210" endtime="20201030 18:29:00.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:00.218" level="INFO">${ACCURACY} = {'diff': [2.7749999999999997e-05, 2.7749999999999997e-05, 2.7749999999999997e-05, 2.84170000000028e-05, 2.8402999999999762e-05, 2.8971999999998638e-05, 2.7736000000000427e-05, 2.8361000000001052e-05, ...</msg>
<status status="PASS" starttime="20201030 18:29:00.214" endtime="20201030 18:29:00.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.223" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 18:29:00.221" endtime="20201030 18:29:00.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.225" level="INFO">VALUE: [2.7749999999999997e-05, 2.7749999999999997e-05, 2.7749999999999997e-05, 2.84170000000028e-05, 2.8402999999999762e-05, 2.8971999999998638e-05, 2.7736000000000427e-05, 2.8361000000001052e-05, 2.8943999999999498e-05, 2.8360999999997583e-05, 2.8374999999997152e-05, 2.8360999999997583e-05, 2.8375000000000622e-05, 2.8361000000001052e-05, 2.8361000000001052e-05, 2.8306000000002246e-05, 2.8347000000001482e-05, 2.8362000000000526e-05, 2.7763000000000093e-05, 2.8347000000001482e-05, 2.8375000000000622e-05, 2.89309999999994e-05, 2.8346999999998013e-05, 2.8346999999998013e-05, 2.8346999999998013e-05, 2.8957999999999068e-05, 2.8375000000000622e-05, 2.8360999999997583e-05, 2.8347000000001482e-05, 2.8361000000001052e-05, 2.8361000000001052e-05, 2.8375000000000622e-05, 2.7736000000000427e-05, 2.8347000000001482e-05, 2.8361000000001052e-05, 2.7749999999999997e-05, 2.8362000000000526e-05, 2.8360999999997583e-05, 2.7749999999999997e-05, 2.7805000000002272e-05, 2.894499999999897e-05, 2.8375000000000622e-05, 2.77369999999999e-05, 2.8332999999998443e-05, 2.7749999999999997e-05, 2.8347000000001482e-05, 2.8986000000001677e-05, 2.8360999999997583e-05, 2.7749999999999997e-05, 2.8347999999997486e-05]</msg>
<status status="PASS" starttime="20201030 18:29:00.224" endtime="20201030 18:29:00.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.219" endtime="20201030 18:29:00.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:00.230" endtime="20201030 18:29:00.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.228" endtime="20201030 18:29:00.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.227" endtime="20201030 18:29:00.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.872" endtime="20201030 18:29:00.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.872" endtime="20201030 18:29:00.250"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.259" endtime="20201030 18:29:00.274"></status>
</kw>
<msg timestamp="20201030 18:29:00.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.257" endtime="20201030 18:29:00.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.276" endtime="20201030 18:29:00.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.278" endtime="20201030 18:29:00.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.255" endtime="20201030 18:29:00.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.253" endtime="20201030 18:29:00.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.287" endtime="20201030 18:29:00.573"></status>
</kw>
<msg timestamp="20201030 18:29:00.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02182025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:00.286" endtime="20201030 18:29:00.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02182025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:00.577" endtime="20201030 18:29:00.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.585" endtime="20201030 18:29:00.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.283" endtime="20201030 18:29:00.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.281" endtime="20201030 18:29:00.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:00.592" level="INFO">${RESULT} = [{'diff': 2.9569000000000123e-05}, {'diff': 2.9569000000000123e-05}, {'diff': 2.8972000000002107e-05}, {'diff': 2.8958000000002537e-05}, {'diff': 2.894499999999897e-05}, {'diff': 2.8957999999999068e-0...</msg>
<status status="PASS" starttime="20201030 18:29:00.588" endtime="20201030 18:29:00.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:00.596" level="INFO">${ACCURACY} = {'diff': [2.9569000000000123e-05, 2.9569000000000123e-05, 2.8972000000002107e-05, 2.8958000000002537e-05, 2.894499999999897e-05, 2.8957999999999068e-05, 2.9555000000000553e-05, 2.9569000000000123e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:00.593" endtime="20201030 18:29:00.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.600" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 18:29:00.599" endtime="20201030 18:29:00.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.603" level="INFO">VALUE: [2.9569000000000123e-05, 2.9569000000000123e-05, 2.8972000000002107e-05, 2.8958000000002537e-05, 2.894499999999897e-05, 2.8957999999999068e-05, 2.9555000000000553e-05, 2.9569000000000123e-05, 2.9569000000000123e-05, 2.9541000000000983e-05, 2.9569999999999597e-05, 2.9569000000000123e-05, 2.9569999999999597e-05, 2.9639000000001442e-05, 2.9555000000000553e-05, 2.9569000000000123e-05, 2.9555000000000553e-05, 2.9555000000000553e-05, 2.9569000000000123e-05, 2.9569000000000123e-05, 2.894499999999897e-05, 2.893100000000287e-05, 2.9624999999998403e-05, 2.8971999999998638e-05, 2.8971999999998638e-05, 2.8958000000002537e-05, 2.8972000000002107e-05, 2.9556000000000027e-05, 2.8957999999999068e-05, 2.9556000000000027e-05, 2.8957999999999068e-05, 2.9513999999997848e-05, 2.8958000000002537e-05, 2.9583999999999167e-05, 2.9569999999999597e-05, 2.9569000000000123e-05, 2.9569000000000123e-05, 2.9653000000001012e-05, 2.9500000000001747e-05, 2.8957999999999068e-05, 2.9569000000000123e-05, 2.9569999999999597e-05, 2.9555000000000553e-05, 2.8957999999999068e-05, 2.8971999999998638e-05, 2.9514000000001317e-05, 2.9569000000000123e-05, 2.8972000000002107e-05, 2.8943999999999498e-05, 2.9526999999997944e-05]</msg>
<status status="PASS" starttime="20201030 18:29:00.601" endtime="20201030 18:29:00.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.597" endtime="20201030 18:29:00.604"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:00.607" endtime="20201030 18:29:00.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.606" endtime="20201030 18:29:00.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.605" endtime="20201030 18:29:00.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.251" endtime="20201030 18:29:00.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.251" endtime="20201030 18:29:00.628"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.637" endtime="20201030 18:29:00.653"></status>
</kw>
<msg timestamp="20201030 18:29:00.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.635" endtime="20201030 18:29:00.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.655" endtime="20201030 18:29:00.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.657" endtime="20201030 18:29:00.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.633" endtime="20201030 18:29:00.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.630" endtime="20201030 18:29:00.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.666" endtime="20201030 18:29:00.952"></status>
</kw>
<msg timestamp="20201030 18:29:00.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022976778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023006944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.665" endtime="20201030 18:29:00.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022976778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023006944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.956" endtime="20201030 18:29:00.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.964" endtime="20201030 18:29:00.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.662" endtime="20201030 18:29:00.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.660" endtime="20201030 18:29:00.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:00.971" level="INFO">${RESULT} = [{'diff': 3.0166000000001608e-05}, {'diff': 3.0166000000001608e-05}, {'diff': 3.0167000000001082e-05}, {'diff': 3.0167000000001082e-05}, {'diff': 3.069500000000072e-05}, {'diff': 3.076400000000257e-05...</msg>
<status status="PASS" starttime="20201030 18:29:00.968" endtime="20201030 18:29:00.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:00.975" level="INFO">${ACCURACY} = {'diff': [3.0166000000001608e-05, 3.0166000000001608e-05, 3.0167000000001082e-05, 3.0167000000001082e-05, 3.069500000000072e-05, 3.076400000000257e-05, 3.0167000000001082e-05, 3.0166000000001608e-05, ...</msg>
<status status="PASS" starttime="20201030 18:29:00.972" endtime="20201030 18:29:00.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.979" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 18:29:00.978" endtime="20201030 18:29:00.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.982" level="INFO">VALUE: [3.0166000000001608e-05, 3.0166000000001608e-05, 3.0167000000001082e-05, 3.0167000000001082e-05, 3.069500000000072e-05, 3.076400000000257e-05, 3.0167000000001082e-05, 3.0166000000001608e-05, 3.0208000000000318e-05, 3.0166000000001608e-05, 3.077799999999867e-05, 3.0180999999997182e-05, 3.0180000000001178e-05, 3.016599999999814e-05, 3.0167000000001082e-05, 3.080600000000128e-05, 3.079199999999824e-05, 3.0153000000001512e-05, 3.0181000000000652e-05, 3.0166999999997612e-05, 3.077799999999867e-05, 3.077799999999867e-05, 3.07639999999991e-05, 3.077800000000214e-05, 3.0180000000001178e-05, 3.0167000000001082e-05, 3.020899999999979e-05, 3.016599999999814e-05, 3.0167000000001082e-05, 3.0166999999997612e-05, 3.020799999999685e-05, 3.07639999999991e-05, 3.0153000000001512e-05, 3.0181000000000652e-05, 3.0194000000000748e-05, 3.07639999999991e-05, 3.017999999999771e-05, 3.0208000000000318e-05, 3.0138999999998473e-05, 3.0180999999997182e-05, 3.074999999999953e-05, 3.0167000000001082e-05, 3.017999999999771e-05, 3.0762999999999624e-05, 3.0139000000001942e-05, 3.077799999999867e-05, 3.0152999999998042e-05, 3.0167000000001082e-05, 3.0221999999999888e-05, 3.016599999999814e-05]</msg>
<status status="PASS" starttime="20201030 18:29:00.980" endtime="20201030 18:29:00.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.976" endtime="20201030 18:29:00.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:00.988" endtime="20201030 18:29:01.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.986" endtime="20201030 18:29:01.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.985" endtime="20201030 18:29:01.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.629" endtime="20201030 18:29:01.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.628" endtime="20201030 18:29:01.008"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.017" endtime="20201030 18:29:01.033"></status>
</kw>
<msg timestamp="20201030 18:29:01.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.015" endtime="20201030 18:29:01.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.035" endtime="20201030 18:29:01.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.037" endtime="20201030 18:29:01.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.013" endtime="20201030 18:29:01.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.011" endtime="20201030 18:29:01.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.046" endtime="20201030 18:29:01.334"></status>
</kw>
<msg timestamp="20201030 18:29:01.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022156736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.045" endtime="20201030 18:29:01.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022156736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.338" endtime="20201030 18:29:01.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.346" endtime="20201030 18:29:01.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.042" endtime="20201030 18:29:01.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.040" endtime="20201030 18:29:01.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:01.353" level="INFO">${RESULT} = [{'diff': 3.144399999999853e-05}, {'diff': 3.2041000000000014e-05}, {'diff': 3.077799999999867e-05}, {'diff': 3.138800000000025e-05}, {'diff': 3.079100000000223e-05}, {'diff': 3.144399999999853e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:01.350" endtime="20201030 18:29:01.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:01.358" level="INFO">${ACCURACY} = {'diff': [3.144399999999853e-05, 3.2041000000000014e-05, 3.077799999999867e-05, 3.138800000000025e-05, 3.079100000000223e-05, 3.144399999999853e-05, 3.137500000000015e-05, 3.200000000000078e-05, 3.077...</msg>
<status status="PASS" starttime="20201030 18:29:01.354" endtime="20201030 18:29:01.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.363" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 18:29:01.362" endtime="20201030 18:29:01.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.365" level="INFO">VALUE: [3.144399999999853e-05, 3.2041000000000014e-05, 3.077799999999867e-05, 3.138800000000025e-05, 3.079100000000223e-05, 3.144399999999853e-05, 3.137500000000015e-05, 3.200000000000078e-05, 3.077800000000214e-05, 3.0762999999999624e-05, 3.195800000000207e-05, 3.198599999999774e-05, 3.137500000000015e-05, 3.136100000000058e-05, 3.136100000000058e-05, 3.077799999999867e-05, 3.07639999999991e-05, 3.07639999999991e-05, 3.136100000000058e-05, 3.081900000000137e-05, 3.076400000000257e-05, 3.131900000000187e-05, 3.070899999999682e-05, 3.137500000000015e-05, 3.197199999999817e-05, 3.138899999999972e-05, 3.134700000000101e-05, 3.19579999999986e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.136100000000058e-05, 3.077799999999867e-05, 3.200000000000078e-05, 3.197199999999817e-05, 3.077800000000214e-05, 3.137500000000015e-05, 3.197200000000164e-05, 3.197199999999817e-05, 3.137500000000015e-05, 3.136100000000058e-05, 3.197200000000164e-05, 3.137500000000015e-05, 3.198599999999774e-05, 3.137500000000015e-05, 3.131900000000187e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.07639999999991e-05, 3.197199999999817e-05, 3.137500000000015e-05]</msg>
<status status="PASS" starttime="20201030 18:29:01.364" endtime="20201030 18:29:01.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.359" endtime="20201030 18:29:01.367"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:01.370" endtime="20201030 18:29:01.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.369" endtime="20201030 18:29:01.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.368" endtime="20201030 18:29:01.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.009" endtime="20201030 18:29:01.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.008" endtime="20201030 18:29:01.391"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.400" endtime="20201030 18:29:01.416"></status>
</kw>
<msg timestamp="20201030 18:29:01.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.399" endtime="20201030 18:29:01.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.418" endtime="20201030 18:29:01.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.420" endtime="20201030 18:29:01.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.396" endtime="20201030 18:29:01.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.394" endtime="20201030 18:29:01.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.429" endtime="20201030 18:29:01.723"></status>
</kw>
<msg timestamp="20201030 18:29:01.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022472167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.428" endtime="20201030 18:29:01.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022472167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.728" endtime="20201030 18:29:01.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.736" endtime="20201030 18:29:01.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.425" endtime="20201030 18:29:01.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.423" endtime="20201030 18:29:01.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:01.743" level="INFO">${RESULT} = [{'diff': 3.258400000000217e-05}, {'diff': 3.198599999999774e-05}, {'diff': 3.197199999999817e-05}, {'diff': 3.2582999999999224e-05}, {'diff': 3.25839999999987e-05}, {'diff': 3.2582999999999224e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:01.739" endtime="20201030 18:29:01.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:01.747" level="INFO">${ACCURACY} = {'diff': [3.258400000000217e-05, 3.198599999999774e-05, 3.197199999999817e-05, 3.2582999999999224e-05, 3.25839999999987e-05, 3.2582999999999224e-05, 3.197200000000164e-05, 3.198600000000121e-05, 3.266...</msg>
<status status="PASS" starttime="20201030 18:29:01.744" endtime="20201030 18:29:01.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.751" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 18:29:01.750" endtime="20201030 18:29:01.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.754" level="INFO">VALUE: [3.258400000000217e-05, 3.198599999999774e-05, 3.197199999999817e-05, 3.2582999999999224e-05, 3.25839999999987e-05, 3.2582999999999224e-05, 3.197200000000164e-05, 3.198600000000121e-05, 3.266700000000011e-05, 3.258400000000217e-05, 3.258300000000269e-05, 3.2582999999999224e-05, 3.197199999999817e-05, 3.200000000000078e-05, 3.259799999999827e-05, 3.252800000000042e-05, 3.198599999999774e-05, 3.256999999999913e-05, 3.256999999999913e-05, 3.193000000000293e-05, 3.261100000000183e-05, 3.195900000000154e-05, 3.2582999999999224e-05, 3.2568999999999654e-05, 3.256999999999913e-05, 3.198599999999774e-05, 3.197199999999817e-05, 3.25839999999987e-05, 3.2582999999999224e-05, 3.2568999999999654e-05, 3.201399999999688e-05, 3.2554999999996614e-05, 3.265200000000107e-05, 3.197199999999817e-05, 3.2582999999999224e-05, 3.259700000000226e-05, 3.198700000000068e-05, 3.198599999999774e-05, 3.205599999999906e-05, 3.2596999999998794e-05, 3.195900000000154e-05, 3.2582999999999224e-05, 3.198600000000121e-05, 3.25839999999987e-05, 3.2610999999998364e-05, 3.2568999999999654e-05, 3.194399999999903e-05, 3.198600000000121e-05, 3.2582999999999224e-05, 3.2596999999998794e-05]</msg>
<status status="PASS" starttime="20201030 18:29:01.752" endtime="20201030 18:29:01.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.748" endtime="20201030 18:29:01.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:01.759" endtime="20201030 18:29:01.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.757" endtime="20201030 18:29:01.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.756" endtime="20201030 18:29:01.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.392" endtime="20201030 18:29:01.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.391" endtime="20201030 18:29:01.779"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.788" endtime="20201030 18:29:01.808"></status>
</kw>
<msg timestamp="20201030 18:29:01.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.786" endtime="20201030 18:29:01.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.809" endtime="20201030 18:29:01.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.812" endtime="20201030 18:29:01.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.784" endtime="20201030 18:29:01.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.782" endtime="20201030 18:29:01.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.821" endtime="20201030 18:29:02.122"></status>
</kw>
<msg timestamp="20201030 18:29:02.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025505931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025539125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.819" endtime="20201030 18:29:02.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025505931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025539125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.126" endtime="20201030 18:29:02.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.135" endtime="20201030 18:29:02.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.817" endtime="20201030 18:29:02.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.815" endtime="20201030 18:29:02.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:02.141" level="INFO">${RESULT} = [{'diff': 3.319400000000028e-05}, {'diff': 3.372199999999992e-05}, {'diff': 3.319400000000028e-05}, {'diff': 3.320799999999985e-05}, {'diff': 3.320799999999985e-05}, {'diff': 3.319399999999681e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:02.138" endtime="20201030 18:29:02.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:02.145" level="INFO">${ACCURACY} = {'diff': [3.319400000000028e-05, 3.372199999999992e-05, 3.319400000000028e-05, 3.320799999999985e-05, 3.320799999999985e-05, 3.319399999999681e-05, 3.318000000000071e-05, 3.376399999999863e-05, 3.3194...</msg>
<status status="PASS" starttime="20201030 18:29:02.142" endtime="20201030 18:29:02.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.150" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 18:29:02.149" endtime="20201030 18:29:02.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.152" level="INFO">VALUE: [3.319400000000028e-05, 3.372199999999992e-05, 3.319400000000028e-05, 3.320799999999985e-05, 3.320799999999985e-05, 3.319399999999681e-05, 3.318000000000071e-05, 3.376399999999863e-05, 3.319499999999975e-05, 3.379200000000124e-05, 3.3805000000001334e-05, 3.320899999999932e-05, 3.315299999999757e-05, 3.376399999999863e-05, 3.318000000000071e-05, 3.3791000000001764e-05, 3.319400000000028e-05, 3.323599999999899e-05, 3.318000000000071e-05, 3.379199999999777e-05, 3.379200000000124e-05, 3.319400000000028e-05, 3.316700000000061e-05, 3.319499999999975e-05, 3.383399999999995e-05, 3.319499999999975e-05, 3.37779999999982e-05, 3.379199999999777e-05, 3.319400000000028e-05, 3.319400000000028e-05, 3.318000000000071e-05, 3.319399999999681e-05, 3.318000000000071e-05, 3.318100000000018e-05, 3.26389999999975e-05, 3.320799999999985e-05, 3.318000000000071e-05, 3.319399999999681e-05, 3.318100000000018e-05, 3.319499999999975e-05, 3.3819000000000904e-05, 3.317999999999724e-05, 3.379200000000124e-05, 3.322199999999942e-05, 3.379200000000124e-05, 3.379199999999777e-05, 3.379200000000124e-05, 3.377800000000167e-05, 3.3819000000000904e-05, 3.3805000000001334e-05]</msg>
<status status="PASS" starttime="20201030 18:29:02.151" endtime="20201030 18:29:02.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.146" endtime="20201030 18:29:02.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:02.158" endtime="20201030 18:29:02.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.156" endtime="20201030 18:29:02.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.155" endtime="20201030 18:29:02.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.780" endtime="20201030 18:29:02.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.780" endtime="20201030 18:29:02.179"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.187" endtime="20201030 18:29:02.204"></status>
</kw>
<msg timestamp="20201030 18:29:02.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.186" endtime="20201030 18:29:02.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.205" endtime="20201030 18:29:02.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.208" endtime="20201030 18:29:02.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.183" endtime="20201030 18:29:02.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.181" endtime="20201030 18:29:02.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.217" endtime="20201030 18:29:02.502"></status>
</kw>
<msg timestamp="20201030 18:29:02.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021936278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.215" endtime="20201030 18:29:02.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021936278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.506" endtime="20201030 18:29:02.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.515" endtime="20201030 18:29:02.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.213" endtime="20201030 18:29:02.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.211" endtime="20201030 18:29:02.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:02.521" level="INFO">${RESULT} = [{'diff': 3.501399999999988e-05}, {'diff': 3.438900000000272e-05}, {'diff': 3.3804999999997865e-05}, {'diff': 3.4388999999999253e-05}, {'diff': 3.501399999999988e-05}, {'diff': 3.380600000000081e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:02.518" endtime="20201030 18:29:02.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:02.526" level="INFO">${ACCURACY} = {'diff': [3.501399999999988e-05, 3.438900000000272e-05, 3.3804999999997865e-05, 3.4388999999999253e-05, 3.501399999999988e-05, 3.380600000000081e-05, 3.441599999999892e-05, 3.500000000000031e-05, 3.44...</msg>
<status status="PASS" starttime="20201030 18:29:02.522" endtime="20201030 18:29:02.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.531" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 18:29:02.530" endtime="20201030 18:29:02.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.533" level="INFO">VALUE: [3.501399999999988e-05, 3.438900000000272e-05, 3.3804999999997865e-05, 3.4388999999999253e-05, 3.501399999999988e-05, 3.380600000000081e-05, 3.441599999999892e-05, 3.500000000000031e-05, 3.440199999999935e-05, 3.440300000000229e-05, 3.441699999999839e-05, 3.434800000000002e-05, 3.440300000000229e-05, 3.500000000000031e-05, 3.3805000000001334e-05, 3.3847000000000044e-05, 3.3790999999998295e-05, 3.440199999999935e-05, 3.4402999999998823e-05, 3.441599999999892e-05, 3.3791000000001764e-05, 3.440199999999935e-05, 3.4374999999999684e-05, 3.441599999999892e-05, 3.4402999999998823e-05, 3.3805000000001334e-05, 3.440200000000282e-05, 3.438799999999978e-05, 3.440199999999935e-05, 3.3847000000000044e-05, 3.376399999999863e-05, 3.3804999999997865e-05, 3.502799999999945e-05, 3.440200000000282e-05, 3.502799999999945e-05, 3.4402999999998823e-05, 3.440200000000282e-05, 3.4388999999999253e-05, 3.500000000000031e-05, 3.440199999999935e-05, 3.379199999999777e-05, 3.4402999999998823e-05, 3.3790999999998295e-05, 3.441599999999892e-05, 3.443100000000143e-05, 3.3791000000001764e-05, 3.4388999999999253e-05, 3.4374999999999684e-05, 3.4402999999998823e-05, 3.4402999999998823e-05]</msg>
<status status="PASS" starttime="20201030 18:29:02.532" endtime="20201030 18:29:02.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.527" endtime="20201030 18:29:02.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:02.538" endtime="20201030 18:29:02.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.536" endtime="20201030 18:29:02.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.535" endtime="20201030 18:29:02.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.179" endtime="20201030 18:29:02.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.179" endtime="20201030 18:29:02.559"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.567" endtime="20201030 18:29:02.584"></status>
</kw>
<msg timestamp="20201030 18:29:02.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.566" endtime="20201030 18:29:02.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.585" endtime="20201030 18:29:02.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.588" endtime="20201030 18:29:02.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.563" endtime="20201030 18:29:02.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.561" endtime="20201030 18:29:02.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.597" endtime="20201030 18:29:02.883"></status>
</kw>
<msg timestamp="20201030 18:29:02.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021932403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.595" endtime="20201030 18:29:02.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021932403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.888" endtime="20201030 18:29:02.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.898" endtime="20201030 18:29:02.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.593" endtime="20201030 18:29:02.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.591" endtime="20201030 18:29:02.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:02.905" level="INFO">${RESULT} = [{'diff': 3.5611000000001364e-05}, {'diff': 3.5611000000001364e-05}, {'diff': 3.569499999999878e-05}, {'diff': 3.5596999999998324e-05}, {'diff': 3.5583000000002224e-05}, {'diff': 3.501399999999988e-05...</msg>
<status status="PASS" starttime="20201030 18:29:02.901" endtime="20201030 18:29:02.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:02.909" level="INFO">${ACCURACY} = {'diff': [3.5611000000001364e-05, 3.5611000000001364e-05, 3.569499999999878e-05, 3.5596999999998324e-05, 3.5583000000002224e-05, 3.501399999999988e-05, 3.501399999999988e-05, 3.500000000000031e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:29:02.906" endtime="20201030 18:29:02.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.914" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 18:29:02.913" endtime="20201030 18:29:02.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.916" level="INFO">VALUE: [3.5611000000001364e-05, 3.5611000000001364e-05, 3.569499999999878e-05, 3.5596999999998324e-05, 3.5583000000002224e-05, 3.501399999999988e-05, 3.501399999999988e-05, 3.500000000000031e-05, 3.493100000000193e-05, 3.498600000000074e-05, 3.500000000000031e-05, 3.500000000000031e-05, 3.561200000000084e-05, 3.500000000000031e-05, 3.500000000000031e-05, 3.5610999999997894e-05, 3.5596999999998324e-05, 3.5597000000001794e-05, 3.5611000000001364e-05, 3.556999999999866e-05, 3.501399999999988e-05, 3.494499999999803e-05, 3.5597000000001794e-05, 3.498600000000074e-05, 3.49719999999977e-05, 3.501399999999988e-05, 3.5611000000001364e-05, 3.5596999999998324e-05, 3.5610999999997894e-05, 3.5625000000000934e-05, 3.5611000000001364e-05, 3.500000000000031e-05, 3.5611000000001364e-05, 3.5611000000001364e-05, 3.500000000000031e-05, 3.500000000000031e-05, 3.49580000000016e-05, 3.5625000000000934e-05, 3.5013000000000405e-05, 3.5568999999999185e-05, 3.499999999999684e-05, 3.5625000000000934e-05, 3.5597000000001794e-05, 3.5597000000001794e-05, 3.500000000000031e-05, 3.498600000000074e-05, 3.5597000000001794e-05, 3.501399999999988e-05, 3.5597000000001794e-05, 3.5625000000000934e-05]</msg>
<status status="PASS" starttime="20201030 18:29:02.915" endtime="20201030 18:29:02.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.910" endtime="20201030 18:29:02.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:02.921" endtime="20201030 18:29:02.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.919" endtime="20201030 18:29:02.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.918" endtime="20201030 18:29:02.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.559" endtime="20201030 18:29:02.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.559" endtime="20201030 18:29:02.942"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.950" endtime="20201030 18:29:02.968"></status>
</kw>
<msg timestamp="20201030 18:29:02.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.949" endtime="20201030 18:29:02.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.969" endtime="20201030 18:29:02.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.972" endtime="20201030 18:29:02.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.946" endtime="20201030 18:29:02.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.944" endtime="20201030 18:29:02.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.981" endtime="20201030 18:29:03.266"></status>
</kw>
<msg timestamp="20201030 18:29:03.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022994264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023030486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.979" endtime="20201030 18:29:03.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022994264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023030486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.270" endtime="20201030 18:29:03.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.279" endtime="20201030 18:29:03.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.977" endtime="20201030 18:29:03.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.975" endtime="20201030 18:29:03.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:03.285" level="INFO">${RESULT} = [{'diff': 3.622199999999895e-05}, {'diff': 3.6846999999999575e-05}, {'diff': 3.623599999999852e-05}, {'diff': 3.5624999999997464e-05}, {'diff': 3.675000000000206e-05}, {'diff': 3.619499999999928e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:03.282" endtime="20201030 18:29:03.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:03.289" level="INFO">${ACCURACY} = {'diff': [3.622199999999895e-05, 3.6846999999999575e-05, 3.623599999999852e-05, 3.5624999999997464e-05, 3.675000000000206e-05, 3.619499999999928e-05, 3.620899999999885e-05, 3.622199999999895e-05, 3.62...</msg>
<status status="PASS" starttime="20201030 18:29:03.286" endtime="20201030 18:29:03.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.294" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 18:29:03.293" endtime="20201030 18:29:03.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.296" level="INFO">VALUE: [3.622199999999895e-05, 3.6846999999999575e-05, 3.623599999999852e-05, 3.5624999999997464e-05, 3.675000000000206e-05, 3.619499999999928e-05, 3.620899999999885e-05, 3.622199999999895e-05, 3.620799999999938e-05, 3.620799999999938e-05, 3.6805000000000865e-05, 3.683400000000295e-05, 3.620799999999938e-05, 3.681999999999991e-05, 3.681999999999991e-05, 3.6804999999997395e-05, 3.619499999999928e-05, 3.620799999999938e-05, 3.6290999999997325e-05, 3.6139000000001004e-05, 3.620799999999938e-05, 3.6790999999997825e-05, 3.5625000000000934e-05, 3.620899999999885e-05, 3.619399999999981e-05, 3.683399999999948e-05, 3.681999999999991e-05, 3.61520000000011e-05, 3.619399999999981e-05, 3.6819000000000435e-05, 3.6153000000000574e-05, 3.620799999999938e-05, 3.6153000000000574e-05, 3.620899999999885e-05, 3.619499999999928e-05, 3.6860999999999144e-05, 3.623600000000199e-05, 3.620799999999938e-05, 3.680600000000034e-05, 3.566700000000311e-05, 3.620799999999938e-05, 3.620799999999938e-05, 3.683399999999948e-05, 3.5611000000001364e-05, 3.622200000000242e-05, 3.626399999999766e-05, 3.6139000000001004e-05, 3.619499999999928e-05, 3.6819000000000435e-05, 3.620800000000285e-05]</msg>
<status status="PASS" starttime="20201030 18:29:03.295" endtime="20201030 18:29:03.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.290" endtime="20201030 18:29:03.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:03.302" endtime="20201030 18:29:03.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.300" endtime="20201030 18:29:03.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.299" endtime="20201030 18:29:03.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.942" endtime="20201030 18:29:03.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.942" endtime="20201030 18:29:03.322"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.331" endtime="20201030 18:29:03.348"></status>
</kw>
<msg timestamp="20201030 18:29:03.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.329" endtime="20201030 18:29:03.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.349" endtime="20201030 18:29:03.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.352" endtime="20201030 18:29:03.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.327" endtime="20201030 18:29:03.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.325" endtime="20201030 18:29:03.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.360" endtime="20201030 18:29:03.664"></status>
</kw>
<msg timestamp="20201030 18:29:03.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022260694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.359" endtime="20201030 18:29:03.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022260694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.669" endtime="20201030 18:29:03.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.677" endtime="20201030 18:29:03.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.356" endtime="20201030 18:29:03.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.355" endtime="20201030 18:29:03.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:03.683" level="INFO">${RESULT} = [{'diff': 3.740200000000235e-05}, {'diff': 3.7417000000001394e-05}, {'diff': 3.733399999999998e-05}, {'diff': 3.740199999999888e-05}, {'diff': 3.740199999999888e-05}, {'diff': 3.741600000000192e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:03.680" endtime="20201030 18:29:03.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:03.688" level="INFO">${ACCURACY} = {'diff': [3.740200000000235e-05, 3.7417000000001394e-05, 3.733399999999998e-05, 3.740199999999888e-05, 3.740199999999888e-05, 3.741600000000192e-05, 3.6833000000000005e-05, 3.6818999999996965e-05, 3.6...</msg>
<status status="PASS" starttime="20201030 18:29:03.684" endtime="20201030 18:29:03.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.693" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 18:29:03.692" endtime="20201030 18:29:03.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.695" level="INFO">VALUE: [3.740200000000235e-05, 3.7417000000001394e-05, 3.733399999999998e-05, 3.740199999999888e-05, 3.740199999999888e-05, 3.741600000000192e-05, 3.6833000000000005e-05, 3.6818999999996965e-05, 3.6805000000000865e-05, 3.680600000000034e-05, 3.7416999999997924e-05, 3.7416999999997924e-05, 3.7416999999997924e-05, 3.680600000000034e-05, 3.7416999999997924e-05, 3.8041000000002545e-05, 3.7431000000000964e-05, 3.802799999999898e-05, 3.7402999999998354e-05, 3.683399999999948e-05, 3.7347000000000075e-05, 3.7402999999998354e-05, 3.7417000000001394e-05, 3.7403000000001824e-05, 3.7374999999999214e-05, 3.680600000000034e-05, 3.742999999999802e-05, 3.7403000000001824e-05, 3.743000000000149e-05, 3.6805000000000865e-05, 3.741600000000192e-05, 3.681999999999991e-05, 3.6819000000000435e-05, 3.74720000000002e-05, 3.681999999999991e-05, 3.7430999999997494e-05, 3.681999999999991e-05, 3.7417000000001394e-05, 3.738799999999931e-05, 3.7402999999998354e-05, 3.6819000000000435e-05, 3.741599999999845e-05, 3.741600000000192e-05, 3.7431000000000964e-05, 3.681999999999991e-05, 3.680600000000034e-05, 3.680600000000034e-05, 3.7417000000001394e-05, 3.7416999999997924e-05, 3.741599999999845e-05]</msg>
<status status="PASS" starttime="20201030 18:29:03.694" endtime="20201030 18:29:03.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.689" endtime="20201030 18:29:03.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:03.707" endtime="20201030 18:29:03.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.705" endtime="20201030 18:29:03.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.704" endtime="20201030 18:29:03.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.323" endtime="20201030 18:29:03.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.323" endtime="20201030 18:29:03.727"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.736" endtime="20201030 18:29:03.753"></status>
</kw>
<msg timestamp="20201030 18:29:03.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.734" endtime="20201030 18:29:03.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.755" endtime="20201030 18:29:03.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.757" endtime="20201030 18:29:03.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.732" endtime="20201030 18:29:03.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.730" endtime="20201030 18:29:03.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.766" endtime="20201030 18:29:04.052"></status>
</kw>
<msg timestamp="20201030 18:29:04.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021917625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.765" endtime="20201030 18:29:04.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021917625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.057" endtime="20201030 18:29:04.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.065" endtime="20201030 18:29:04.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.762" endtime="20201030 18:29:04.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.760" endtime="20201030 18:29:04.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:04.071" level="INFO">${RESULT} = [{'diff': 5.658299999999894e-05}, {'diff': 5.630499999999955e-05}, {'diff': 5.6264000000000314e-05}, {'diff': 5.612500000000062e-05}, {'diff': 5.6707999999999065e-05}, {'diff': 5.638900000000044e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:04.068" endtime="20201030 18:29:04.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:04.076" level="INFO">${ACCURACY} = {'diff': [5.658299999999894e-05, 5.630499999999955e-05, 5.6264000000000314e-05, 5.612500000000062e-05, 5.6707999999999065e-05, 5.638900000000044e-05, 5.6000000000000494e-05, 5.60549999999993e-05, 5.64...</msg>
<status status="PASS" starttime="20201030 18:29:04.072" endtime="20201030 18:29:04.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.080" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 18:29:04.079" endtime="20201030 18:29:04.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.082" level="INFO">VALUE: [5.658299999999894e-05, 5.630499999999955e-05, 5.6264000000000314e-05, 5.612500000000062e-05, 5.6707999999999065e-05, 5.638900000000044e-05, 5.6000000000000494e-05, 5.60549999999993e-05, 5.640300000000001e-05, 5.659700000000198e-05, 5.656899999999937e-05, 5.6305999999999023e-05, 5.6750000000001244e-05, 5.627700000000041e-05, 5.615299999999976e-05, 5.670899999999854e-05, 5.6971999999998885e-05, 5.605500000000277e-05, 5.626300000000084e-05, 5.5957999999998315e-05, 5.6443999999999245e-05, 5.627700000000041e-05, 5.6027999999999634e-05, 5.6277999999999884e-05, 5.6805999999999524e-05, 5.613900000000019e-05, 5.6805999999999524e-05, 5.612500000000062e-05, 5.612499999999715e-05, 5.6901999999997566e-05, 5.6971999999998885e-05, 5.644500000000219e-05, 5.6264000000000314e-05, 5.611200000000052e-05, 5.6764000000000814e-05, 5.683300000000266e-05, 5.6736000000001674e-05, 5.656899999999937e-05, 5.6736000000001674e-05, 5.6194000000002464e-05, 5.6236000000001174e-05, 5.6458000000002284e-05, 5.6277999999999884e-05, 5.638900000000044e-05, 5.669499999999897e-05, 5.619499999999847e-05, 5.6305999999999023e-05, 5.6541999999999704e-05, 5.616699999999933e-05, 5.631899999999912e-05]</msg>
<status status="PASS" starttime="20201030 18:29:04.081" endtime="20201030 18:29:04.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.076" endtime="20201030 18:29:04.084"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:04.087" endtime="20201030 18:29:04.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.086" endtime="20201030 18:29:04.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.085" endtime="20201030 18:29:04.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.728" endtime="20201030 18:29:04.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.728" endtime="20201030 18:29:04.108"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.116" endtime="20201030 18:29:04.134"></status>
</kw>
<msg timestamp="20201030 18:29:04.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.115" endtime="20201030 18:29:04.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.136" endtime="20201030 18:29:04.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.138" endtime="20201030 18:29:04.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.112" endtime="20201030 18:29:04.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.110" endtime="20201030 18:29:04.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.147" endtime="20201030 18:29:04.432"></status>
</kw>
<msg timestamp="20201030 18:29:04.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022885694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.145" endtime="20201030 18:29:04.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022885694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.436" endtime="20201030 18:29:04.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.445" endtime="20201030 18:29:04.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.143" endtime="20201030 18:29:04.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.141" endtime="20201030 18:29:04.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:04.451" level="INFO">${RESULT} = [{'diff': 5.6986000000001924e-05}, {'diff': 5.7721999999999635e-05}, {'diff': 5.7694000000000495e-05}, {'diff': 5.784699999999976e-05}, {'diff': 5.7028000000000634e-05}, {'diff': 5.754099999999776e-05...</msg>
<status status="PASS" starttime="20201030 18:29:04.448" endtime="20201030 18:29:04.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:04.456" level="INFO">${ACCURACY} = {'diff': [5.6986000000001924e-05, 5.7721999999999635e-05, 5.7694000000000495e-05, 5.784699999999976e-05, 5.7028000000000634e-05, 5.754099999999776e-05, 5.7193999999999995e-05, 5.756900000000037e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:29:04.452" endtime="20201030 18:29:04.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.460" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 18:29:04.459" endtime="20201030 18:29:04.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.462" level="INFO">VALUE: [5.6986000000001924e-05, 5.7721999999999635e-05, 5.7694000000000495e-05, 5.784699999999976e-05, 5.7028000000000634e-05, 5.754099999999776e-05, 5.7193999999999995e-05, 5.756900000000037e-05, 5.7749999999998775e-05, 5.713899999999772e-05, 5.709699999999901e-05, 5.7721999999999635e-05, 5.729100000000098e-05, 5.744499999999972e-05, 5.7152000000001285e-05, 5.716700000000033e-05, 5.7708000000000065e-05, 5.7457999999999815e-05, 5.7665999999997886e-05, 5.709699999999901e-05, 5.7000000000001494e-05, 5.7485999999998955e-05, 5.6999999999998024e-05, 5.7028000000000634e-05, 5.6985999999998455e-05, 5.7319999999999593e-05, 5.7306000000000024e-05, 5.7278000000000884e-05, 5.6985999999998455e-05, 5.7306000000000024e-05, 5.7042000000000204e-05, 5.78749999999989e-05, 5.711100000000205e-05, 5.756900000000037e-05, 5.7444000000000245e-05, 5.7777999999997914e-05, 5.7694000000000495e-05, 5.7278000000000884e-05, 5.788900000000194e-05, 5.7264000000001314e-05, 5.765300000000126e-05, 5.7042000000000204e-05, 5.7721999999999635e-05, 5.76810000000004e-05, 5.7569999999999844e-05, 5.7235999999998705e-05, 5.7444000000000245e-05, 5.7221999999999135e-05, 5.711099999999858e-05, 5.788900000000194e-05]</msg>
<status status="PASS" starttime="20201030 18:29:04.461" endtime="20201030 18:29:04.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.456" endtime="20201030 18:29:04.465"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:04.468" endtime="20201030 18:29:04.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.467" endtime="20201030 18:29:04.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.466" endtime="20201030 18:29:04.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.109" endtime="20201030 18:29:04.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.108" endtime="20201030 18:29:04.489"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.497" endtime="20201030 18:29:04.514"></status>
</kw>
<msg timestamp="20201030 18:29:04.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.496" endtime="20201030 18:29:04.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.515" endtime="20201030 18:29:04.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.518" endtime="20201030 18:29:04.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.493" endtime="20201030 18:29:04.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.491" endtime="20201030 18:29:04.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.530" endtime="20201030 18:29:04.817"></status>
</kw>
<msg timestamp="20201030 18:29:04.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021780236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02183825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:04.526" endtime="20201030 18:29:04.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021780236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02183825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:04.821" endtime="20201030 18:29:04.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.829" endtime="20201030 18:29:04.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.523" endtime="20201030 18:29:04.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.521" endtime="20201030 18:29:04.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:04.836" level="INFO">${RESULT} = [{'diff': 5.8013999999998594e-05}, {'diff': 5.815300000000176e-05}, {'diff': 5.883299999999772e-05}, {'diff': 5.8277999999998414e-05}, {'diff': 5.8763999999999345e-05}, {'diff': 5.816700000000133e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:04.833" endtime="20201030 18:29:04.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:04.841" level="INFO">${ACCURACY} = {'diff': [5.8013999999998594e-05, 5.815300000000176e-05, 5.883299999999772e-05, 5.8277999999998414e-05, 5.8763999999999345e-05, 5.816700000000133e-05, 5.818099999999743e-05, 5.829099999999851e-05, 5.8...</msg>
<status status="PASS" starttime="20201030 18:29:04.837" endtime="20201030 18:29:04.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.845" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 18:29:04.844" endtime="20201030 18:29:04.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.848" level="INFO">VALUE: [5.8013999999998594e-05, 5.815300000000176e-05, 5.883299999999772e-05, 5.8277999999998414e-05, 5.8763999999999345e-05, 5.816700000000133e-05, 5.818099999999743e-05, 5.829099999999851e-05, 5.8097999999999483e-05, 5.866699999999836e-05, 5.811099999999958e-05, 5.827700000000241e-05, 5.88749999999999e-05, 5.862499999999965e-05, 5.8708000000001065e-05, 5.840299999999854e-05, 5.8263999999998844e-05, 5.83749999999994e-05, 5.840300000000201e-05, 5.809700000000001e-05, 5.812499999999915e-05, 5.8749999999999775e-05, 5.880500000000205e-05, 5.8401999999999066e-05, 5.7971999999999885e-05, 5.8137999999999246e-05, 5.8806000000001524e-05, 5.858300000000094e-05, 5.845900000000029e-05, 5.863899999999922e-05, 5.861100000000008e-05, 5.8180000000001425e-05, 5.8347999999999733e-05, 5.866700000000183e-05, 5.861100000000008e-05, 5.8763999999999345e-05, 5.8570000000000844e-05, 5.8347999999999733e-05, 5.819500000000047e-05, 5.8027999999998164e-05, 5.8820000000001094e-05, 5.811099999999958e-05, 5.85550000000018e-05, 5.862499999999965e-05, 5.8708000000001065e-05, 5.854100000000223e-05, 5.863899999999922e-05, 5.8263999999998844e-05, 5.8236000000003174e-05, 5.834700000000026e-05]</msg>
<status status="PASS" starttime="20201030 18:29:04.846" endtime="20201030 18:29:04.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.842" endtime="20201030 18:29:04.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:04.853" endtime="20201030 18:29:04.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.851" endtime="20201030 18:29:04.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.850" endtime="20201030 18:29:04.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.490" endtime="20201030 18:29:04.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.489" endtime="20201030 18:29:04.873"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.882" endtime="20201030 18:29:04.900"></status>
</kw>
<msg timestamp="20201030 18:29:04.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.880" endtime="20201030 18:29:04.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.901" endtime="20201030 18:29:04.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.904" endtime="20201030 18:29:04.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.878" endtime="20201030 18:29:04.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.876" endtime="20201030 18:29:04.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.913" endtime="20201030 18:29:05.216"></status>
</kw>
<msg timestamp="20201030 18:29:05.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022136181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022195931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.911" endtime="20201030 18:29:05.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022136181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022195931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.220" endtime="20201030 18:29:05.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.229" endtime="20201030 18:29:05.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.908" endtime="20201030 18:29:05.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.907" endtime="20201030 18:29:05.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:05.235" level="INFO">${RESULT} = [{'diff': 5.9749999999997305e-05}, {'diff': 5.913900000000319e-05}, {'diff': 5.9500000000000525e-05}, {'diff': 5.990300000000004e-05}, {'diff': 5.954099999999976e-05}, {'diff': 5.9443999999998776e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:05.232" endtime="20201030 18:29:05.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:05.239" level="INFO">${ACCURACY} = {'diff': [5.9749999999997305e-05, 5.913900000000319e-05, 5.9500000000000525e-05, 5.990300000000004e-05, 5.954099999999976e-05, 5.9443999999998776e-05, 5.9736000000001205e-05, 5.986099999999786e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:29:05.236" endtime="20201030 18:29:05.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.244" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 18:29:05.243" endtime="20201030 18:29:05.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.246" level="INFO">VALUE: [5.9749999999997305e-05, 5.913900000000319e-05, 5.9500000000000525e-05, 5.990300000000004e-05, 5.954099999999976e-05, 5.9443999999998776e-05, 5.9736000000001205e-05, 5.986099999999786e-05, 5.9763999999996875e-05, 5.966699999999936e-05, 5.941700000000258e-05, 5.9263999999999845e-05, 5.9556000000002274e-05, 5.9306000000002024e-05, 5.944499999999825e-05, 5.965299999999979e-05, 5.952700000000019e-05, 5.90550000000023e-05, 5.955499999999933e-05, 5.958299999999847e-05, 5.913899999999972e-05, 5.968099999999893e-05, 5.984700000000176e-05, 5.945900000000129e-05, 5.962500000000065e-05, 5.9721999999998165e-05, 5.8986000000000455e-05, 5.963900000000022e-05, 5.9000000000000025e-05, 5.909700000000101e-05, 5.93750000000004e-05, 5.8971999999997415e-05, 5.904099999999926e-05, 5.956900000000237e-05, 5.927699999999994e-05, 5.988900000000047e-05, 5.9694000000002495e-05, 5.987499999999743e-05, 5.9721999999998165e-05, 5.945899999999782e-05, 5.986099999999786e-05, 5.965299999999979e-05, 5.944499999999825e-05, 5.918099999999843e-05, 5.961100000000108e-05, 5.9457999999998346e-05, 5.934700000000126e-05, 5.984700000000176e-05, 5.9151999999999816e-05, 5.904099999999926e-05]</msg>
<status status="PASS" starttime="20201030 18:29:05.245" endtime="20201030 18:29:05.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.240" endtime="20201030 18:29:05.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:05.251" endtime="20201030 18:29:05.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.250" endtime="20201030 18:29:05.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.248" endtime="20201030 18:29:05.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.874" endtime="20201030 18:29:05.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.874" endtime="20201030 18:29:05.272"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.280" endtime="20201030 18:29:05.301"></status>
</kw>
<msg timestamp="20201030 18:29:05.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.279" endtime="20201030 18:29:05.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.302" endtime="20201030 18:29:05.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.305" endtime="20201030 18:29:05.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.276" endtime="20201030 18:29:05.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.274" endtime="20201030 18:29:05.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.314" endtime="20201030 18:29:05.599"></status>
</kw>
<msg timestamp="20201030 18:29:05.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025284403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025344792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.312" endtime="20201030 18:29:05.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025284403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025344792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.603" endtime="20201030 18:29:05.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.611" endtime="20201030 18:29:05.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.310" endtime="20201030 18:29:05.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.308" endtime="20201030 18:29:05.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:05.618" level="INFO">${RESULT} = [{'diff': 6.038900000000097e-05}, {'diff': 6.0000000000001025e-05}, {'diff': 6.0236000000001705e-05}, {'diff': 6.0028000000000165e-05}, {'diff': 6.043099999999968e-05}, {'diff': 6.087499999999843e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:05.615" endtime="20201030 18:29:05.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:05.622" level="INFO">${ACCURACY} = {'diff': [6.038900000000097e-05, 6.0000000000001025e-05, 6.0236000000001705e-05, 6.0028000000000165e-05, 6.043099999999968e-05, 6.087499999999843e-05, 6.0749999999998305e-05, 6.055500000000033e-05, 6....</msg>
<status status="PASS" starttime="20201030 18:29:05.619" endtime="20201030 18:29:05.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.626" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 18:29:05.625" endtime="20201030 18:29:05.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.629" level="INFO">VALUE: [6.038900000000097e-05, 6.0000000000001025e-05, 6.0236000000001705e-05, 6.0028000000000165e-05, 6.043099999999968e-05, 6.087499999999843e-05, 6.0749999999998305e-05, 6.055500000000033e-05, 6.031899999999965e-05, 6.0749999999998305e-05, 6.0028000000000165e-05, 6.095899999999932e-05, 6.0806000000000054e-05, 6.0194999999999e-05, 6.0861999999998334e-05, 6.0819999999999624e-05, 6.020899999999857e-05, 6.0735999999998735e-05, 6.011100000000158e-05, 6.090299999999757e-05, 6.055500000000033e-05, 6.0749999999998305e-05, 6.0792000000000485e-05, 6.0207999999999096e-05, 6.012499999999768e-05, 6.083299999999972e-05, 6.016699999999986e-05, 6.093100000000018e-05, 6.0806000000000054e-05, 6.065300000000079e-05, 6.0319999999999124e-05, 6.0833999999999194e-05, 6.041700000000011e-05, 6.094499999999975e-05, 6.029100000000051e-05, 6.0916000000001136e-05, 6.008299999999897e-05, 6.0152000000000816e-05, 6.077700000000144e-05, 6.061099999999861e-05, 6.0736000000002205e-05, 6.0000000000001025e-05, 6.0749999999998305e-05, 6.0028000000000165e-05, 6.0612000000001554e-05, 6.0749999999998305e-05, 5.993099999999918e-05, 6.0236000000001705e-05, 6.077699999999797e-05, 6.0305999999999554e-05]</msg>
<status status="PASS" starttime="20201030 18:29:05.627" endtime="20201030 18:29:05.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.623" endtime="20201030 18:29:05.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:05.634" endtime="20201030 18:29:05.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.633" endtime="20201030 18:29:05.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.632" endtime="20201030 18:29:05.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.273" endtime="20201030 18:29:05.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.272" endtime="20201030 18:29:05.655"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.664" endtime="20201030 18:29:05.683"></status>
</kw>
<msg timestamp="20201030 18:29:05.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.662" endtime="20201030 18:29:05.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.685" endtime="20201030 18:29:05.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.687" endtime="20201030 18:29:05.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.659" endtime="20201030 18:29:05.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.657" endtime="20201030 18:29:05.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.696" endtime="20201030 18:29:05.982"></status>
</kw>
<msg timestamp="20201030 18:29:05.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022200125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.694" endtime="20201030 18:29:05.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022200125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.986" endtime="20201030 18:29:05.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.994" endtime="20201030 18:29:05.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.692" endtime="20201030 18:29:05.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.690" endtime="20201030 18:29:05.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:06.001" level="INFO">${RESULT} = [{'diff': 6.191700000000161e-05}, {'diff': 6.17499999999993e-05}, {'diff': 6.15690000000009e-05}, {'diff': 6.1027999999997695e-05}, {'diff': 6.168100000000093e-05}, {'diff': 6.154200000000123e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:05.998" endtime="20201030 18:29:06.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:06.006" level="INFO">${ACCURACY} = {'diff': [6.191700000000161e-05, 6.17499999999993e-05, 6.15690000000009e-05, 6.1027999999997695e-05, 6.168100000000093e-05, 6.154200000000123e-05, 6.1888999999999e-05, 6.108299999999997e-05, 6.1902999...</msg>
<status status="PASS" starttime="20201030 18:29:06.002" endtime="20201030 18:29:06.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.010" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 18:29:06.009" endtime="20201030 18:29:06.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.013" level="INFO">VALUE: [6.191700000000161e-05, 6.17499999999993e-05, 6.15690000000009e-05, 6.1027999999997695e-05, 6.168100000000093e-05, 6.154200000000123e-05, 6.1888999999999e-05, 6.108299999999997e-05, 6.190299999999857e-05, 6.1014000000001595e-05, 6.112499999999868e-05, 6.172300000000311e-05, 6.141600000000164e-05, 6.162499999999918e-05, 6.129200000000098e-05, 6.0986000000002455e-05, 6.187499999999943e-05, 6.1014000000001595e-05, 6.117999999999749e-05, 6.127799999999795e-05, 6.111099999999911e-05, 6.190299999999857e-05, 6.14439999999973e-05, 6.165299999999832e-05, 6.18340000000002e-05, 6.112500000000215e-05, 6.154199999999777e-05, 6.0999999999998555e-05, 6.0957999999999846e-05, 6.123599999999924e-05, 6.17360000000032e-05, 6.1027999999997695e-05, 6.177799999999845e-05, 6.187499999999943e-05, 6.145899999999982e-05, 6.187499999999943e-05, 6.184700000000029e-05, 6.158399999999994e-05, 6.18340000000002e-05, 6.127799999999795e-05, 6.130600000000055e-05, 6.0999999999998555e-05, 6.17629999999994e-05, 6.0999999999998555e-05, 6.116700000000086e-05, 6.12499999999988e-05, 6.181899999999768e-05, 6.119400000000053e-05, 6.0999999999998555e-05, 6.159700000000004e-05]</msg>
<status status="PASS" starttime="20201030 18:29:06.011" endtime="20201030 18:29:06.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.007" endtime="20201030 18:29:06.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:06.018" endtime="20201030 18:29:06.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.016" endtime="20201030 18:29:06.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.015" endtime="20201030 18:29:06.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.656" endtime="20201030 18:29:06.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.655" endtime="20201030 18:29:06.038"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.047" endtime="20201030 18:29:06.064"></status>
</kw>
<msg timestamp="20201030 18:29:06.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.045" endtime="20201030 18:29:06.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.065" endtime="20201030 18:29:06.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.068" endtime="20201030 18:29:06.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.043" endtime="20201030 18:29:06.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.041" endtime="20201030 18:29:06.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.077" endtime="20201030 18:29:06.362"></status>
</kw>
<msg timestamp="20201030 18:29:06.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022029681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.075" endtime="20201030 18:29:06.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022029681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.367" endtime="20201030 18:29:06.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.375" endtime="20201030 18:29:06.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.073" endtime="20201030 18:29:06.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.071" endtime="20201030 18:29:06.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:06.381" level="INFO">${RESULT} = [{'diff': 6.272200000000117e-05}, {'diff': 6.25560000000018e-05}, {'diff': 6.245900000000082e-05}, {'diff': 6.270900000000107e-05}, {'diff': 6.218000000000196e-05}, {'diff': 6.212499999999968e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:06.378" endtime="20201030 18:29:06.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:06.385" level="INFO">${ACCURACY} = {'diff': [6.272200000000117e-05, 6.25560000000018e-05, 6.245900000000082e-05, 6.270900000000107e-05, 6.218000000000196e-05, 6.212499999999968e-05, 6.283299999999825e-05, 6.27080000000016e-05, 6.230500...</msg>
<status status="PASS" starttime="20201030 18:29:06.382" endtime="20201030 18:29:06.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.390" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 18:29:06.389" endtime="20201030 18:29:06.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.392" level="INFO">VALUE: [6.272200000000117e-05, 6.25560000000018e-05, 6.245900000000082e-05, 6.270900000000107e-05, 6.218000000000196e-05, 6.212499999999968e-05, 6.283299999999825e-05, 6.27080000000016e-05, 6.230500000000208e-05, 6.243099999999821e-05, 6.230599999999809e-05, 6.204200000000173e-05, 6.197200000000042e-05, 6.277799999999945e-05, 6.266699999999889e-05, 6.236100000000036e-05, 6.282000000000162e-05, 6.226400000000284e-05, 6.195800000000085e-05, 6.24439999999983e-05, 6.24439999999983e-05, 6.20279999999987e-05, 6.211100000000011e-05, 6.198599999999999e-05, 6.276399999999988e-05, 6.241699999999864e-05, 6.281899999999868e-05, 6.276399999999988e-05, 6.284700000000129e-05, 6.197200000000042e-05, 6.25699999999979e-05, 6.29439999999988e-05, 6.281999999999816e-05, 6.28340000000012e-05, 6.259700000000104e-05, 6.266699999999889e-05, 6.286100000000086e-05, 6.213899999999925e-05, 6.24300000000022e-05, 6.284699999999782e-05, 6.274999999999684e-05, 6.194400000000128e-05, 6.227800000000241e-05, 6.204200000000173e-05, 6.23889999999995e-05, 6.230600000000155e-05, 6.212499999999968e-05, 6.2195000000001e-05, 6.26950000000015e-05, 6.27219999999977e-05]</msg>
<status status="PASS" starttime="20201030 18:29:06.391" endtime="20201030 18:29:06.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.386" endtime="20201030 18:29:06.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:06.397" endtime="20201030 18:29:06.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.396" endtime="20201030 18:29:06.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.394" endtime="20201030 18:29:06.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.039" endtime="20201030 18:29:06.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.039" endtime="20201030 18:29:06.418"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.426" endtime="20201030 18:29:06.445"></status>
</kw>
<msg timestamp="20201030 18:29:06.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.425" endtime="20201030 18:29:06.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.447" endtime="20201030 18:29:06.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.449" endtime="20201030 18:29:06.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.422" endtime="20201030 18:29:06.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.420" endtime="20201030 18:29:06.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.458" endtime="20201030 18:29:06.744"></status>
</kw>
<msg timestamp="20201030 18:29:06.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022855861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022919597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.456" endtime="20201030 18:29:06.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022855861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022919597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.748" endtime="20201030 18:29:06.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.756" endtime="20201030 18:29:06.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.454" endtime="20201030 18:29:06.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.452" endtime="20201030 18:29:06.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:06.763" level="INFO">${RESULT} = [{'diff': 6.373599999999827e-05}, {'diff': 6.37219999999987e-05}, {'diff': 6.386100000000186e-05}, {'diff': 6.315299999999982e-05}, {'diff': 6.301400000000013e-05}, {'diff': 6.343099999999921e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:06.760" endtime="20201030 18:29:06.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:06.767" level="INFO">${ACCURACY} = {'diff': [6.373599999999827e-05, 6.37219999999987e-05, 6.386100000000186e-05, 6.315299999999982e-05, 6.301400000000013e-05, 6.343099999999921e-05, 6.334699999999832e-05, 6.363900000000075e-05, 6.30270...</msg>
<status status="PASS" starttime="20201030 18:29:06.764" endtime="20201030 18:29:06.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.771" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 18:29:06.770" endtime="20201030 18:29:06.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.774" level="INFO">VALUE: [6.373599999999827e-05, 6.37219999999987e-05, 6.386100000000186e-05, 6.315299999999982e-05, 6.301400000000013e-05, 6.343099999999921e-05, 6.334699999999832e-05, 6.363900000000075e-05, 6.302700000000022e-05, 6.316699999999939e-05, 6.297300000000089e-05, 6.329100000000004e-05, 6.369499999999903e-05, 6.361100000000161e-05, 6.345799999999888e-05, 6.383299999999925e-05, 6.37080000000026e-05, 6.391699999999667e-05, 6.359699999999857e-05, 6.298600000000099e-05, 6.298599999999752e-05, 6.298600000000099e-05, 6.312500000000068e-05, 6.341700000000311e-05, 6.341699999999964e-05, 6.330499999999961e-05, 6.298700000000046e-05, 6.341600000000017e-05, 6.386099999999839e-05, 6.359699999999857e-05, 6.301400000000013e-05, 6.300000000000056e-05, 6.297199999999795e-05, 6.30279999999997e-05, 6.377800000000045e-05, 6.327799999999995e-05, 6.37500000000013e-05, 6.298600000000099e-05, 6.390300000000057e-05, 6.365299999999685e-05, 6.341699999999964e-05, 6.315299999999982e-05, 6.383299999999925e-05, 6.355499999999986e-05, 6.362500000000118e-05, 6.331899999999918e-05, 6.305499999999936e-05, 6.390300000000057e-05, 6.311099999999764e-05, 6.361099999999814e-05]</msg>
<status status="PASS" starttime="20201030 18:29:06.772" endtime="20201030 18:29:06.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.768" endtime="20201030 18:29:06.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:06.780" endtime="20201030 18:29:06.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.778" endtime="20201030 18:29:06.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.777" endtime="20201030 18:29:06.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.419" endtime="20201030 18:29:06.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.418" endtime="20201030 18:29:06.800"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.809" endtime="20201030 18:29:06.826"></status>
</kw>
<msg timestamp="20201030 18:29:06.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.807" endtime="20201030 18:29:06.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.828" endtime="20201030 18:29:06.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.830" endtime="20201030 18:29:06.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.805" endtime="20201030 18:29:06.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.803" endtime="20201030 18:29:06.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.839" endtime="20201030 18:29:07.126"></status>
</kw>
<msg timestamp="20201030 18:29:07.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021808778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.838" endtime="20201030 18:29:07.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021808778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.130" endtime="20201030 18:29:07.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.138" endtime="20201030 18:29:07.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.835" endtime="20201030 18:29:07.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.834" endtime="20201030 18:29:07.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:07.145" level="INFO">${RESULT} = [{'diff': 6.415300000000082e-05}, {'diff': 6.404200000000027e-05}, {'diff': 6.49029999999981e-05}, {'diff': 6.459799999999905e-05}, {'diff': 6.441699999999717e-05}, {'diff': 6.4583e-05}, {'diff': 6.42...</msg>
<status status="PASS" starttime="20201030 18:29:07.141" endtime="20201030 18:29:07.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:07.149" level="INFO">${ACCURACY} = {'diff': [6.415300000000082e-05, 6.404200000000027e-05, 6.49029999999981e-05, 6.459799999999905e-05, 6.441699999999717e-05, 6.4583e-05, 6.429100000000104e-05, 6.4276999999998e-05, 6.486099999999939e-0...</msg>
<status status="PASS" starttime="20201030 18:29:07.146" endtime="20201030 18:29:07.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.154" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 18:29:07.153" endtime="20201030 18:29:07.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.156" level="INFO">VALUE: [6.415300000000082e-05, 6.404200000000027e-05, 6.49029999999981e-05, 6.459799999999905e-05, 6.441699999999717e-05, 6.4583e-05, 6.429100000000104e-05, 6.4276999999998e-05, 6.486099999999939e-05, 6.4889000000002e-05, 6.4583e-05, 6.402799999999723e-05, 6.447200000000292e-05, 6.433299999999975e-05, 6.415300000000082e-05, 6.443100000000021e-05, 6.42639999999979e-05, 6.480600000000059e-05, 6.466699999999742e-05, 6.473700000000221e-05, 6.413900000000125e-05, 6.431900000000018e-05, 6.413900000000125e-05, 6.461099999999914e-05, 6.416600000000092e-05, 6.461100000000261e-05, 6.481899999999721e-05, 6.454200000000077e-05, 6.484699999999982e-05, 6.404200000000027e-05, 6.434699999999932e-05, 6.418099999999996e-05, 6.427799999999748e-05, 6.406899999999993e-05, 6.427800000000095e-05, 6.424999999999834e-05, 6.47639999999984e-05, 6.481900000000068e-05, 6.462500000000218e-05, 6.443000000000074e-05, 6.447199999999945e-05, 6.427800000000095e-05, 6.480600000000059e-05, 6.47219999999997e-05, 6.462500000000218e-05, 6.470900000000307e-05, 6.424999999999834e-05, 6.40419999999968e-05, 6.444499999999978e-05, 6.402700000000122e-05]</msg>
<status status="PASS" starttime="20201030 18:29:07.155" endtime="20201030 18:29:07.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.150" endtime="20201030 18:29:07.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:07.161" endtime="20201030 18:29:07.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.160" endtime="20201030 18:29:07.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.159" endtime="20201030 18:29:07.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.801" endtime="20201030 18:29:07.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.800" endtime="20201030 18:29:07.182"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.190" endtime="20201030 18:29:07.208"></status>
</kw>
<msg timestamp="20201030 18:29:07.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.189" endtime="20201030 18:29:07.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.209" endtime="20201030 18:29:07.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.212" endtime="20201030 18:29:07.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.186" endtime="20201030 18:29:07.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.184" endtime="20201030 18:29:07.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.221" endtime="20201030 18:29:07.507"></status>
</kw>
<msg timestamp="20201030 18:29:07.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223115, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:07.219" endtime="20201030 18:29:07.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223115, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:07.512" endtime="20201030 18:29:07.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.520" endtime="20201030 18:29:07.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.217" endtime="20201030 18:29:07.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.215" endtime="20201030 18:29:07.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:07.526" level="INFO">${RESULT} = [{'diff': 6.559700000000057e-05}, {'diff': 6.583300000000125e-05}, {'diff': 6.574999999999984e-05}, {'diff': 6.559700000000057e-05}, {'diff': 6.501400000000213e-05}, {'diff': 6.591699999999867e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:07.523" endtime="20201030 18:29:07.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:07.531" level="INFO">${ACCURACY} = {'diff': [6.559700000000057e-05, 6.583300000000125e-05, 6.574999999999984e-05, 6.559700000000057e-05, 6.501400000000213e-05, 6.591699999999867e-05, 6.540300000000207e-05, 6.573600000000027e-05, 6.5486...</msg>
<status status="PASS" starttime="20201030 18:29:07.528" endtime="20201030 18:29:07.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.535" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 18:29:07.534" endtime="20201030 18:29:07.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.538" level="INFO">VALUE: [6.559700000000057e-05, 6.583300000000125e-05, 6.574999999999984e-05, 6.559700000000057e-05, 6.501400000000213e-05, 6.591699999999867e-05, 6.540300000000207e-05, 6.573600000000027e-05, 6.548600000000002e-05, 6.579099999999907e-05, 6.530499999999814e-05, 6.518000000000149e-05, 6.541699999999817e-05, 6.543000000000174e-05, 6.586100000000039e-05, 6.5583000000001e-05, 6.551399999999916e-05, 6.584699999999735e-05, 6.487499999999896e-05, 6.569500000000103e-05, 6.572300000000017e-05, 6.57639999999994e-05, 6.59159999999992e-05, 6.586100000000039e-05, 6.559700000000057e-05, 6.518000000000149e-05, 6.530600000000109e-05, 6.587499999999996e-05, 6.568100000000146e-05, 6.540300000000207e-05, 6.518100000000096e-05, 6.509700000000007e-05, 6.511099999999964e-05, 6.511199999999912e-05, 6.587499999999996e-05, 6.517999999999802e-05, 6.506900000000093e-05, 6.513900000000225e-05, 6.570800000000113e-05, 6.516699999999792e-05, 6.541600000000217e-05, 6.544500000000078e-05, 6.556999999999744e-05, 6.498599999999952e-05, 6.505600000000084e-05, 6.516699999999792e-05, 6.498599999999952e-05, 6.551399999999916e-05, 6.572300000000017e-05, 6.586199999999987e-05]</msg>
<status status="PASS" starttime="20201030 18:29:07.536" endtime="20201030 18:29:07.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.531" endtime="20201030 18:29:07.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:07.542" endtime="20201030 18:29:07.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.541" endtime="20201030 18:29:07.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.540" endtime="20201030 18:29:07.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.183" endtime="20201030 18:29:07.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.182" endtime="20201030 18:29:07.563"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.572" endtime="20201030 18:29:07.590"></status>
</kw>
<msg timestamp="20201030 18:29:07.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.570" endtime="20201030 18:29:07.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.592" endtime="20201030 18:29:07.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.594" endtime="20201030 18:29:07.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.568" endtime="20201030 18:29:07.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.566" endtime="20201030 18:29:07.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.603" endtime="20201030 18:29:07.889"></status>
</kw>
<msg timestamp="20201030 18:29:07.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022899417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022966069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.602" endtime="20201030 18:29:07.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022899417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022966069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.893" endtime="20201030 18:29:07.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.901" endtime="20201030 18:29:07.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.599" endtime="20201030 18:29:07.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.597" endtime="20201030 18:29:07.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:07.908" level="INFO">${RESULT} = [{'diff': 6.665200000000038e-05}, {'diff': 6.64029999999996e-05}, {'diff': 6.688799999999759e-05}, {'diff': 6.62220000000012e-05}, {'diff': 6.615199999999988e-05}, {'diff': 6.605500000000236e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:07.905" endtime="20201030 18:29:07.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:07.912" level="INFO">${ACCURACY} = {'diff': [6.665200000000038e-05, 6.64029999999996e-05, 6.688799999999759e-05, 6.62220000000012e-05, 6.615199999999988e-05, 6.605500000000236e-05, 6.662500000000071e-05, 6.611100000000064e-05, 6.651400...</msg>
<status status="PASS" starttime="20201030 18:29:07.909" endtime="20201030 18:29:07.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.916" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 18:29:07.915" endtime="20201030 18:29:07.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.919" level="INFO">VALUE: [6.665200000000038e-05, 6.64029999999996e-05, 6.688799999999759e-05, 6.62220000000012e-05, 6.615199999999988e-05, 6.605500000000236e-05, 6.662500000000071e-05, 6.611100000000064e-05, 6.651400000000016e-05, 6.69030000000001e-05, 6.633400000000123e-05, 6.686099999999792e-05, 6.658400000000148e-05, 6.630599999999862e-05, 6.62639999999999e-05, 6.633299999999828e-05, 6.662500000000071e-05, 6.619399999999859e-05, 6.655499999999939e-05, 6.694500000000228e-05, 6.598600000000052e-05, 6.656899999999896e-05, 6.687500000000096e-05, 6.609800000000055e-05, 6.677799999999998e-05, 6.613899999999978e-05, 6.617999999999902e-05, 6.602799999999923e-05, 6.643100000000221e-05, 6.65419999999993e-05, 6.642999999999927e-05, 6.600000000000009e-05, 6.688900000000053e-05, 6.608299999999803e-05, 6.623600000000077e-05, 6.597199999999748e-05, 6.663900000000028e-05, 6.633300000000175e-05, 6.67359999999978e-05, 6.641699999999917e-05, 6.67640000000004e-05, 6.637500000000046e-05, 6.60700000000014e-05, 6.661100000000114e-05, 6.672199999999823e-05, 6.637500000000046e-05, 6.642999999999927e-05, 6.644500000000178e-05, 6.605499999999889e-05, 6.615299999999935e-05]</msg>
<status status="PASS" starttime="20201030 18:29:07.917" endtime="20201030 18:29:07.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.913" endtime="20201030 18:29:07.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:07.924" endtime="20201030 18:29:07.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.923" endtime="20201030 18:29:07.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.922" endtime="20201030 18:29:07.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.564" endtime="20201030 18:29:07.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.563" endtime="20201030 18:29:07.945"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.954" endtime="20201030 18:29:07.971"></status>
</kw>
<msg timestamp="20201030 18:29:07.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.952" endtime="20201030 18:29:07.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.972" endtime="20201030 18:29:07.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.975" endtime="20201030 18:29:07.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.949" endtime="20201030 18:29:07.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.947" endtime="20201030 18:29:07.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.984" endtime="20201030 18:29:08.269"></status>
</kw>
<msg timestamp="20201030 18:29:08.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022006083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.982" endtime="20201030 18:29:08.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022006083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.273" endtime="20201030 18:29:08.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.282" endtime="20201030 18:29:08.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.980" endtime="20201030 18:29:08.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.978" endtime="20201030 18:29:08.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:08.288" level="INFO">${RESULT} = [{'diff': 6.72359999999983e-05}, {'diff': 6.752699999999778e-05}, {'diff': 6.701400000000066e-05}, {'diff': 6.781900000000021e-05}, {'diff': 6.775000000000184e-05}, {'diff': 6.784699999999935e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:08.285" endtime="20201030 18:29:08.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:08.293" level="INFO">${ACCURACY} = {'diff': [6.72359999999983e-05, 6.752699999999778e-05, 6.701400000000066e-05, 6.781900000000021e-05, 6.775000000000184e-05, 6.784699999999935e-05, 6.77640000000014e-05, 6.725000000000134e-05, 6.762499...</msg>
<status status="PASS" starttime="20201030 18:29:08.289" endtime="20201030 18:29:08.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.297" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 18:29:08.296" endtime="20201030 18:29:08.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.300" level="INFO">VALUE: [6.72359999999983e-05, 6.752699999999778e-05, 6.701400000000066e-05, 6.781900000000021e-05, 6.775000000000184e-05, 6.784699999999935e-05, 6.77640000000014e-05, 6.725000000000134e-05, 6.762499999999824e-05, 6.77090000000026e-05, 6.749999999999812e-05, 6.70419999999998e-05, 6.769400000000009e-05, 6.715199999999741e-05, 6.744399999999984e-05, 6.720799999999916e-05, 6.697200000000195e-05, 6.719399999999959e-05, 6.788900000000153e-05, 6.774999999999837e-05, 6.77220000000027e-05, 6.765299999999738e-05, 6.730599999999962e-05, 6.780600000000012e-05, 6.756999999999944e-05, 6.715300000000035e-05, 6.7277000000001e-05, 6.709700000000207e-05, 6.77359999999988e-05, 6.762499999999824e-05, 6.712499999999774e-05, 6.755599999999987e-05, 6.716699999999992e-05, 6.711099999999817e-05, 6.775000000000184e-05, 6.700000000000109e-05, 6.700000000000109e-05, 6.770899999999913e-05, 6.766700000000042e-05, 6.695900000000185e-05, 6.776399999999794e-05, 6.768000000000052e-05, 6.744399999999984e-05, 6.788900000000153e-05, 6.759700000000257e-05, 6.716699999999992e-05, 6.719399999999959e-05, 6.787500000000196e-05, 6.694500000000228e-05, 6.74030000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:29:08.299" endtime="20201030 18:29:08.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.294" endtime="20201030 18:29:08.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:08.305" endtime="20201030 18:29:08.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.303" endtime="20201030 18:29:08.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.302" endtime="20201030 18:29:08.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.946" endtime="20201030 18:29:08.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.945" endtime="20201030 18:29:08.325"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.334" endtime="20201030 18:29:08.352"></status>
</kw>
<msg timestamp="20201030 18:29:08.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.333" endtime="20201030 18:29:08.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.354" endtime="20201030 18:29:08.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.356" endtime="20201030 18:29:08.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.330" endtime="20201030 18:29:08.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.328" endtime="20201030 18:29:08.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.365" endtime="20201030 18:29:08.651"></status>
</kw>
<msg timestamp="20201030 18:29:08.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022042486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.363" endtime="20201030 18:29:08.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022042486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.655" endtime="20201030 18:29:08.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.664" endtime="20201030 18:29:08.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.361" endtime="20201030 18:29:08.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.359" endtime="20201030 18:29:08.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:08.670" level="INFO">${RESULT} = [{'diff': 6.849999999999912e-05}, {'diff': 6.870800000000066e-05}, {'diff': 6.816699999999745e-05}, {'diff': 6.855600000000087e-05}, {'diff': 6.84030000000016e-05}, {'diff': 6.827800000000148e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:08.667" endtime="20201030 18:29:08.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:08.674" level="INFO">${ACCURACY} = {'diff': [6.849999999999912e-05, 6.870800000000066e-05, 6.816699999999745e-05, 6.855600000000087e-05, 6.84030000000016e-05, 6.827800000000148e-05, 6.862499999999924e-05, 6.818100000000049e-05, 6.88340...</msg>
<status status="PASS" starttime="20201030 18:29:08.671" endtime="20201030 18:29:08.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.678" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 18:29:08.677" endtime="20201030 18:29:08.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.681" level="INFO">VALUE: [6.849999999999912e-05, 6.870800000000066e-05, 6.816699999999745e-05, 6.855600000000087e-05, 6.84030000000016e-05, 6.827800000000148e-05, 6.862499999999924e-05, 6.818100000000049e-05, 6.883400000000026e-05, 6.886099999999992e-05, 6.802700000000175e-05, 6.844399999999737e-05, 6.805500000000089e-05, 6.825000000000234e-05, 6.82640000000019e-05, 6.843100000000074e-05, 6.818100000000049e-05, 6.818100000000049e-05, 6.845899999999988e-05, 6.830600000000062e-05, 6.888899999999906e-05, 6.89169999999982e-05, 6.887499999999949e-05, 6.876299999999946e-05, 6.855499999999792e-05, 6.811099999999917e-05, 6.886099999999992e-05, 6.819399999999712e-05, 6.802799999999776e-05, 6.874999999999937e-05, 6.801400000000166e-05, 6.847199999999998e-05, 6.815300000000135e-05, 6.879100000000207e-05, 6.834699999999985e-05, 6.847299999999945e-05, 6.880600000000112e-05, 6.869399999999762e-05, 6.808300000000003e-05, 6.830500000000114e-05, 6.815300000000135e-05, 6.867999999999805e-05, 6.852800000000173e-05, 6.838899999999856e-05, 6.847199999999998e-05, 6.826399999999844e-05, 6.819500000000006e-05, 6.859799999999958e-05, 6.82359999999993e-05, 6.861199999999915e-05]</msg>
<status status="PASS" starttime="20201030 18:29:08.679" endtime="20201030 18:29:08.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.675" endtime="20201030 18:29:08.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:08.686" endtime="20201030 18:29:08.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.684" endtime="20201030 18:29:08.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.683" endtime="20201030 18:29:08.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.326" endtime="20201030 18:29:08.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.326" endtime="20201030 18:29:08.706"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.715" endtime="20201030 18:29:08.737"></status>
</kw>
<msg timestamp="20201030 18:29:08.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.713" endtime="20201030 18:29:08.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.738" endtime="20201030 18:29:08.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.741" endtime="20201030 18:29:08.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.711" endtime="20201030 18:29:08.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.709" endtime="20201030 18:29:08.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.750" endtime="20201030 18:29:09.036"></status>
</kw>
<msg timestamp="20201030 18:29:09.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025147736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025216931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.748" endtime="20201030 18:29:09.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025147736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025216931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.040" endtime="20201030 18:29:09.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.048" endtime="20201030 18:29:09.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.746" endtime="20201030 18:29:09.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.744" endtime="20201030 18:29:09.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:09.055" level="INFO">${RESULT} = [{'diff': 6.919500000000106e-05}, {'diff': 6.902799999999876e-05}, {'diff': 6.918099999999802e-05}, {'diff': 6.976300000000046e-05}, {'diff': 6.981900000000221e-05}, {'diff': 6.947200000000098e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:09.052" endtime="20201030 18:29:09.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:09.059" level="INFO">${ACCURACY} = {'diff': [6.919500000000106e-05, 6.902799999999876e-05, 6.918099999999802e-05, 6.976300000000046e-05, 6.981900000000221e-05, 6.947200000000098e-05, 6.990299999999963e-05, 6.968000000000252e-05, 6.8958...</msg>
<status status="PASS" starttime="20201030 18:29:09.056" endtime="20201030 18:29:09.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.064" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 18:29:09.062" endtime="20201030 18:29:09.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.066" level="INFO">VALUE: [6.919500000000106e-05, 6.902799999999876e-05, 6.918099999999802e-05, 6.976300000000046e-05, 6.981900000000221e-05, 6.947200000000098e-05, 6.990299999999963e-05, 6.968000000000252e-05, 6.895800000000091e-05, 6.940299999999913e-05, 6.99030000000031e-05, 6.926399999999944e-05, 6.990299999999963e-05, 6.969499999999809e-05, 6.891700000000167e-05, 6.948600000000055e-05, 6.897299999999995e-05, 6.987500000000049e-05, 6.94160000000027e-05, 6.924999999999987e-05, 6.952800000000273e-05, 6.944400000000184e-05, 6.916700000000192e-05, 6.980599999999865e-05, 6.956999999999797e-05, 6.97360000000008e-05, 6.981999999999822e-05, 6.9584000000001e-05, 6.945900000000088e-05, 6.969399999999862e-05, 6.927699999999953e-05, 6.902699999999928e-05, 6.976399999999994e-05, 6.915300000000235e-05, 6.92909999999991e-05, 6.99169999999992e-05, 6.912499999999974e-05, 6.905499999999842e-05, 6.90970000000006e-05, 6.918100000000149e-05, 6.954199999999883e-05, 6.902799999999876e-05, 6.905600000000137e-05, 6.927800000000248e-05, 6.904099999999885e-05, 6.915199999999941e-05, 6.899999999999962e-05, 6.965300000000285e-05, 6.972200000000123e-05, 6.984699999999788e-05]</msg>
<status status="PASS" starttime="20201030 18:29:09.065" endtime="20201030 18:29:09.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.060" endtime="20201030 18:29:09.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:09.076" endtime="20201030 18:29:09.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.074" endtime="20201030 18:29:09.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.073" endtime="20201030 18:29:09.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.707" endtime="20201030 18:29:09.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.707" endtime="20201030 18:29:09.096"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.105" endtime="20201030 18:29:09.123"></status>
</kw>
<msg timestamp="20201030 18:29:09.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.103" endtime="20201030 18:29:09.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.124" endtime="20201030 18:29:09.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.127" endtime="20201030 18:29:09.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.101" endtime="20201030 18:29:09.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.099" endtime="20201030 18:29:09.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.136" endtime="20201030 18:29:09.422"></status>
</kw>
<msg timestamp="20201030 18:29:09.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022442514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022513319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.134" endtime="20201030 18:29:09.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022442514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022513319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.426" endtime="20201030 18:29:09.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.434" endtime="20201030 18:29:09.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.132" endtime="20201030 18:29:09.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.130" endtime="20201030 18:29:09.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:09.441" level="INFO">${RESULT} = [{'diff': 7.080500000000017e-05}, {'diff': 7.029099999999663e-05}, {'diff': 7.066600000000048e-05}, {'diff': 7.088900000000106e-05}, {'diff': 7.066699999999995e-05}, {'diff': 7.01109999999977e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:09.437" endtime="20201030 18:29:09.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:09.445" level="INFO">${ACCURACY} = {'diff': [7.080500000000017e-05, 7.029099999999663e-05, 7.066600000000048e-05, 7.088900000000106e-05, 7.066699999999995e-05, 7.01109999999977e-05, 7.029199999999958e-05, 7.05559999999994e-05, 7.055600...</msg>
<status status="PASS" starttime="20201030 18:29:09.442" endtime="20201030 18:29:09.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.450" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 18:29:09.449" endtime="20201030 18:29:09.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.452" level="INFO">VALUE: [7.080500000000017e-05, 7.029099999999663e-05, 7.066600000000048e-05, 7.088900000000106e-05, 7.066699999999995e-05, 7.01109999999977e-05, 7.029199999999958e-05, 7.05559999999994e-05, 7.055600000000287e-05, 7.070900000000213e-05, 7.026400000000044e-05, 7.086099999999845e-05, 7.040200000000066e-05, 7.086099999999845e-05, 7.027700000000053e-05, 7.013899999999684e-05, 7.059699999999863e-05, 7.016599999999998e-05, 7.026400000000044e-05, 7.022199999999826e-05, 7.084699999999888e-05, 6.998600000000105e-05, 7.086099999999845e-05, 7.084799999999836e-05, 7.081999999999922e-05, 7.002799999999976e-05, 7.041600000000023e-05, 7.068000000000005e-05, 7.020800000000216e-05, 7.068000000000005e-05, 7.022199999999826e-05, 7.090300000000063e-05, 7.081899999999974e-05, 7.009699999999813e-05, 7.02499999999974e-05, 7.065199999999744e-05, 7.076400000000094e-05, 7.018100000000249e-05, 7.083399999999879e-05, 7.061100000000167e-05, 6.991599999999973e-05, 7.070799999999919e-05, 7.044399999999937e-05, 6.998600000000105e-05, 7.090300000000063e-05, 7.083299999999931e-05, 7.058300000000253e-05, 7.000000000000062e-05, 7.068099999999952e-05, 7.026400000000044e-05]</msg>
<status status="PASS" starttime="20201030 18:29:09.451" endtime="20201030 18:29:09.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.446" endtime="20201030 18:29:09.454"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:09.457" endtime="20201030 18:29:09.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.456" endtime="20201030 18:29:09.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.455" endtime="20201030 18:29:09.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.097" endtime="20201030 18:29:09.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.097" endtime="20201030 18:29:09.478"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.487" endtime="20201030 18:29:09.505"></status>
</kw>
<msg timestamp="20201030 18:29:09.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.485" endtime="20201030 18:29:09.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.507" endtime="20201030 18:29:09.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.509" endtime="20201030 18:29:09.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.483" endtime="20201030 18:29:09.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.480" endtime="20201030 18:29:09.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.518" endtime="20201030 18:29:09.804"></status>
</kw>
<msg timestamp="20201030 18:29:09.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022194917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022265986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.516" endtime="20201030 18:29:09.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022194917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022265986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.808" endtime="20201030 18:29:09.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.817" endtime="20201030 18:29:09.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.514" endtime="20201030 18:29:09.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.512" endtime="20201030 18:29:09.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:09.823" level="INFO">${RESULT} = [{'diff': 7.1069e-05}, {'diff': 7.14300000000008e-05}, {'diff': 7.112500000000174e-05}, {'diff': 7.106999999999947e-05}, {'diff': 7.15560000000004e-05}, {'diff': 7.143100000000027e-05}, {'diff': 7.182...</msg>
<status status="PASS" starttime="20201030 18:29:09.820" endtime="20201030 18:29:09.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:09.827" level="INFO">${ACCURACY} = {'diff': [7.1069e-05, 7.14300000000008e-05, 7.112500000000174e-05, 7.106999999999947e-05, 7.15560000000004e-05, 7.143100000000027e-05, 7.182000000000022e-05, 7.119500000000306e-05, 7.17499999999989e-0...</msg>
<status status="PASS" starttime="20201030 18:29:09.824" endtime="20201030 18:29:09.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.832" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 18:29:09.831" endtime="20201030 18:29:09.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.834" level="INFO">VALUE: [7.1069e-05, 7.14300000000008e-05, 7.112500000000174e-05, 7.106999999999947e-05, 7.15560000000004e-05, 7.143100000000027e-05, 7.182000000000022e-05, 7.119500000000306e-05, 7.17499999999989e-05, 7.101400000000119e-05, 7.156899999999702e-05, 7.170800000000019e-05, 7.154100000000135e-05, 7.104100000000085e-05, 7.17499999999989e-05, 7.127800000000101e-05, 7.168100000000052e-05, 7.173599999999933e-05, 7.127800000000101e-05, 7.182000000000022e-05, 7.177800000000151e-05, 7.184799999999936e-05, 7.170800000000019e-05, 7.108299999999956e-05, 7.165200000000191e-05, 7.168000000000105e-05, 7.129200000000058e-05, 7.15690000000005e-05, 7.155499999999745e-05, 7.141699999999723e-05, 7.112500000000174e-05, 7.120899999999916e-05, 7.117999999999708e-05, 7.176399999999847e-05, 7.133299999999981e-05, 7.113900000000131e-05, 7.141600000000123e-05, 7.182000000000022e-05, 7.123599999999883e-05, 7.131900000000024e-05, 7.188899999999859e-05, 7.14300000000008e-05, 7.190299999999816e-05, 7.129200000000058e-05, 7.1762999999999e-05, 7.173599999999933e-05, 7.144499999999984e-05, 7.136100000000242e-05, 7.130600000000015e-05, 7.122199999999926e-05]</msg>
<status status="PASS" starttime="20201030 18:29:09.833" endtime="20201030 18:29:09.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.828" endtime="20201030 18:29:09.836"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:09.839" endtime="20201030 18:29:09.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.838" endtime="20201030 18:29:09.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.837" endtime="20201030 18:29:09.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.479" endtime="20201030 18:29:09.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.478" endtime="20201030 18:29:09.861"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.870" endtime="20201030 18:29:09.890"></status>
</kw>
<msg timestamp="20201030 18:29:09.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.868" endtime="20201030 18:29:09.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.892" endtime="20201030 18:29:09.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.896" endtime="20201030 18:29:09.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.865" endtime="20201030 18:29:09.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.863" endtime="20201030 18:29:09.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.905" endtime="20201030 18:29:10.193"></status>
</kw>
<msg timestamp="20201030 18:29:10.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026013264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026086125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.904" endtime="20201030 18:29:10.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026013264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026086125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.197" endtime="20201030 18:29:10.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.205" endtime="20201030 18:29:10.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.901" endtime="20201030 18:29:10.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.900" endtime="20201030 18:29:10.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:10.211" level="INFO">${RESULT} = [{'diff': 7.286100000000045e-05}, {'diff': 7.270800000000119e-05}, {'diff': 7.213900000000231e-05}, {'diff': 7.276399999999947e-05}, {'diff': 7.204200000000133e-05}, {'diff': 7.287500000000002e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:10.208" endtime="20201030 18:29:10.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:10.216" level="INFO">${ACCURACY} = {'diff': [7.286100000000045e-05, 7.270800000000119e-05, 7.213900000000231e-05, 7.276399999999947e-05, 7.204200000000133e-05, 7.287500000000002e-05, 7.256899999999802e-05, 7.272200000000076e-05, 7.2027...</msg>
<status status="PASS" starttime="20201030 18:29:10.212" endtime="20201030 18:29:10.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.220" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 18:29:10.219" endtime="20201030 18:29:10.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.222" level="INFO">VALUE: [7.286100000000045e-05, 7.270800000000119e-05, 7.213900000000231e-05, 7.276399999999947e-05, 7.204200000000133e-05, 7.287500000000002e-05, 7.256899999999802e-05, 7.272200000000076e-05, 7.202700000000228e-05, 7.273600000000033e-05, 7.27499999999999e-05, 7.258300000000106e-05, 7.220900000000016e-05, 7.238900000000256e-05, 7.205599999999743e-05, 7.226399999999897e-05, 7.247200000000051e-05, 7.199999999999915e-05, 7.213899999999884e-05, 7.227799999999854e-05, 7.269500000000109e-05, 7.286100000000045e-05, 7.231899999999777e-05, 7.287500000000002e-05, 7.266599999999901e-05, 7.201399999999872e-05, 7.291699999999873e-05, 7.195800000000044e-05, 7.269499999999762e-05, 7.288899999999959e-05, 7.218100000000102e-05, 7.288899999999959e-05, 7.202800000000176e-05, 7.28049999999987e-05, 7.256899999999802e-05, 7.268000000000205e-05, 7.24300000000018e-05, 7.270800000000119e-05, 7.247200000000051e-05, 7.207000000000047e-05, 7.21109999999997e-05, 7.212499999999927e-05, 7.269500000000109e-05, 7.219500000000059e-05, 7.227799999999854e-05, 7.272300000000023e-05, 7.195899999999991e-05, 7.281899999999827e-05, 7.205500000000142e-05, 7.27499999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:29:10.221" endtime="20201030 18:29:10.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.216" endtime="20201030 18:29:10.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:10.228" endtime="20201030 18:29:10.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.227" endtime="20201030 18:29:10.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.226" endtime="20201030 18:29:10.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.862" endtime="20201030 18:29:10.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.861" endtime="20201030 18:29:10.249"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.257" endtime="20201030 18:29:10.275"></status>
</kw>
<msg timestamp="20201030 18:29:10.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.256" endtime="20201030 18:29:10.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.276" endtime="20201030 18:29:10.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.279" endtime="20201030 18:29:10.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.253" endtime="20201030 18:29:10.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.251" endtime="20201030 18:29:10.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.288" endtime="20201030 18:29:10.573"></status>
</kw>
<msg timestamp="20201030 18:29:10.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021784569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.286" endtime="20201030 18:29:10.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021784569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.577" endtime="20201030 18:29:10.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.585" endtime="20201030 18:29:10.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.284" endtime="20201030 18:29:10.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.282" endtime="20201030 18:29:10.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:10.592" level="INFO">${RESULT} = [{'diff': 7.32500000000004e-05}, {'diff': 7.381899999999927e-05}, {'diff': 7.362500000000077e-05}, {'diff': 7.359700000000163e-05}, {'diff': 7.315299999999941e-05}, {'diff': 7.345800000000194e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:10.589" endtime="20201030 18:29:10.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:10.597" level="INFO">${ACCURACY} = {'diff': [7.32500000000004e-05, 7.381899999999927e-05, 7.362500000000077e-05, 7.359700000000163e-05, 7.315299999999941e-05, 7.345800000000194e-05, 7.300000000000015e-05, 7.386100000000145e-05, 7.35980...</msg>
<status status="PASS" starttime="20201030 18:29:10.593" endtime="20201030 18:29:10.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.601" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 18:29:10.600" endtime="20201030 18:29:10.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.604" level="INFO">VALUE: [7.32500000000004e-05, 7.381899999999927e-05, 7.362500000000077e-05, 7.359700000000163e-05, 7.315299999999941e-05, 7.345800000000194e-05, 7.300000000000015e-05, 7.386100000000145e-05, 7.359800000000111e-05, 7.390300000000016e-05, 7.345900000000141e-05, 7.388900000000059e-05, 7.347199999999804e-05, 7.298700000000005e-05, 7.384700000000188e-05, 7.295800000000144e-05, 7.387500000000102e-05, 7.30829999999981e-05, 7.39309999999993e-05, 7.387499999999755e-05, 7.318099999999855e-05, 7.316699999999898e-05, 7.373599999999786e-05, 7.307000000000147e-05, 7.333300000000181e-05, 7.327799999999954e-05, 7.354199999999936e-05, 7.327700000000006e-05, 7.36110000000012e-05, 7.312500000000027e-05, 7.388900000000059e-05, 7.391699999999973e-05, 7.363900000000034e-05, 7.3763999999997e-05, 7.355599999999893e-05, 7.297199999999754e-05, 7.32500000000004e-05, 7.368100000000252e-05, 7.326399999999997e-05, 7.334699999999791e-05, 7.319399999999865e-05, 7.297200000000101e-05, 7.315199999999994e-05, 7.373600000000133e-05, 7.302799999999929e-05, 7.370799999999872e-05, 7.36110000000012e-05, 7.324999999999693e-05, 7.361099999999773e-05, 7.39170000000032e-05]</msg>
<status status="PASS" starttime="20201030 18:29:10.602" endtime="20201030 18:29:10.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.598" endtime="20201030 18:29:10.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:10.609" endtime="20201030 18:29:10.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.607" endtime="20201030 18:29:10.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.606" endtime="20201030 18:29:10.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.250" endtime="20201030 18:29:10.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.249" endtime="20201030 18:29:10.629"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.638" endtime="20201030 18:29:10.656"></status>
</kw>
<msg timestamp="20201030 18:29:10.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.636" endtime="20201030 18:29:10.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.658" endtime="20201030 18:29:10.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.661" endtime="20201030 18:29:10.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.634" endtime="20201030 18:29:10.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.632" endtime="20201030 18:29:10.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.671" endtime="20201030 18:29:10.958"></status>
</kw>
<msg timestamp="20201030 18:29:10.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021960153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.669" endtime="20201030 18:29:10.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021960153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.962" endtime="20201030 18:29:10.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.970" endtime="20201030 18:29:10.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.667" endtime="20201030 18:29:10.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.665" endtime="20201030 18:29:10.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:10.977" level="INFO">${RESULT} = [{'diff': 7.486099999999898e-05}, {'diff': 7.394499999999887e-05}, {'diff': 7.458400000000254e-05}, {'diff': 7.438900000000109e-05}, {'diff': 7.484799999999889e-05}, {'diff': 7.411200000000118e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:10.974" endtime="20201030 18:29:10.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:10.981" level="INFO">${ACCURACY} = {'diff': [7.486099999999898e-05, 7.394499999999887e-05, 7.458400000000254e-05, 7.438900000000109e-05, 7.484799999999889e-05, 7.411200000000118e-05, 7.420799999999922e-05, 7.429100000000063e-05, 7.4264...</msg>
<status status="PASS" starttime="20201030 18:29:10.978" endtime="20201030 18:29:10.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.985" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 18:29:10.984" endtime="20201030 18:29:10.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.988" level="INFO">VALUE: [7.486099999999898e-05, 7.394499999999887e-05, 7.458400000000254e-05, 7.438900000000109e-05, 7.484799999999889e-05, 7.411200000000118e-05, 7.420799999999922e-05, 7.429100000000063e-05, 7.426400000000097e-05, 7.473599999999886e-05, 7.459699999999916e-05, 7.44439999999999e-05, 7.397199999999854e-05, 7.4763999999998e-05, 7.474999999999843e-05, 7.487500000000202e-05, 7.463900000000134e-05, 7.486199999999846e-05, 7.483299999999984e-05, 7.46379999999984e-05, 7.409699999999866e-05, 7.450000000000165e-05, 7.486099999999898e-05, 7.415300000000041e-05, 7.480600000000018e-05, 7.416699999999998e-05, 7.426400000000097e-05, 7.455599999999993e-05, 7.397300000000148e-05, 7.444499999999937e-05, 7.469499999999962e-05, 7.411099999999823e-05, 7.466600000000101e-05, 7.434699999999891e-05, 7.476400000000147e-05, 7.419399999999965e-05, 7.41249999999978e-05, 7.484699999999941e-05, 7.395800000000244e-05, 7.482000000000322e-05, 7.438900000000109e-05, 7.477800000000104e-05, 7.455599999999993e-05, 7.41249999999978e-05, 7.395800000000244e-05, 7.488899999999812e-05, 7.47500000000019e-05, 7.490300000000116e-05, 7.433400000000229e-05, 7.431999999999925e-05]</msg>
<status status="PASS" starttime="20201030 18:29:10.986" endtime="20201030 18:29:10.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.982" endtime="20201030 18:29:10.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:10.992" endtime="20201030 18:29:11.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.991" endtime="20201030 18:29:11.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.990" endtime="20201030 18:29:11.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.630" endtime="20201030 18:29:11.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.629" endtime="20201030 18:29:11.013"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.022" endtime="20201030 18:29:11.041"></status>
</kw>
<msg timestamp="20201030 18:29:11.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.020" endtime="20201030 18:29:11.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.043" endtime="20201030 18:29:11.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.046" endtime="20201030 18:29:11.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.018" endtime="20201030 18:29:11.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.016" endtime="20201030 18:29:11.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.055" endtime="20201030 18:29:11.341"></status>
</kw>
<msg timestamp="20201030 18:29:11.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023215056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023290167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.054" endtime="20201030 18:29:11.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023215056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023290167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.345" endtime="20201030 18:29:11.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.353" endtime="20201030 18:29:11.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.051" endtime="20201030 18:29:11.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.049" endtime="20201030 18:29:11.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:11.360" level="INFO">${RESULT} = [{'diff': 7.511099999999923e-05}, {'diff': 7.554199999999789e-05}, {'diff': 7.541600000000176e-05}, {'diff': 7.583299999999737e-05}, {'diff': 7.586099999999998e-05}, {'diff': 7.574999999999943e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:11.357" endtime="20201030 18:29:11.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:11.364" level="INFO">${ACCURACY} = {'diff': [7.511099999999923e-05, 7.554199999999789e-05, 7.541600000000176e-05, 7.583299999999737e-05, 7.586099999999998e-05, 7.574999999999943e-05, 7.533300000000034e-05, 7.523599999999936e-05, 7.5431...</msg>
<status status="PASS" starttime="20201030 18:29:11.361" endtime="20201030 18:29:11.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.368" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 18:29:11.367" endtime="20201030 18:29:11.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.371" level="INFO">VALUE: [7.511099999999923e-05, 7.554199999999789e-05, 7.541600000000176e-05, 7.583299999999737e-05, 7.586099999999998e-05, 7.574999999999943e-05, 7.533300000000034e-05, 7.523599999999936e-05, 7.54310000000008e-05, 7.574999999999943e-05, 7.554199999999789e-05, 7.574999999999943e-05, 7.55700000000005e-05, 7.588899999999912e-05, 7.568100000000105e-05, 7.587499999999955e-05, 7.58189999999978e-05, 7.516600000000151e-05, 7.587499999999955e-05, 7.555500000000145e-05, 7.568099999999758e-05, 7.509699999999966e-05, 7.502800000000129e-05, 7.591699999999826e-05, 7.495899999999944e-05, 7.581999999999728e-05, 7.516700000000098e-05, 7.515300000000141e-05, 7.543000000000133e-05, 7.51249999999988e-05, 7.502800000000129e-05, 7.569399999999768e-05, 7.502800000000129e-05, 7.500000000000215e-05, 7.555600000000093e-05, 7.516699999999751e-05, 7.56249999999993e-05, 7.587499999999955e-05, 7.555600000000093e-05, 7.502800000000129e-05, 7.561099999999973e-05, 7.543000000000133e-05, 7.573599999999986e-05, 7.55969999999967e-05, 7.561099999999973e-05, 7.591700000000173e-05, 7.556900000000102e-05, 7.570900000000019e-05, 7.559799999999964e-05, 7.494499999999987e-05]</msg>
<status status="PASS" starttime="20201030 18:29:11.369" endtime="20201030 18:29:11.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.365" endtime="20201030 18:29:11.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:11.376" endtime="20201030 18:29:11.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.375" endtime="20201030 18:29:11.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.374" endtime="20201030 18:29:11.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.014" endtime="20201030 18:29:11.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.014" endtime="20201030 18:29:11.397"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.406" endtime="20201030 18:29:11.424"></status>
</kw>
<msg timestamp="20201030 18:29:11.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.404" endtime="20201030 18:29:11.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.426" endtime="20201030 18:29:11.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.428" endtime="20201030 18:29:11.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.401" endtime="20201030 18:29:11.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.399" endtime="20201030 18:29:11.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.437" endtime="20201030 18:29:11.723"></status>
</kw>
<msg timestamp="20201030 18:29:11.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022278944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022355458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.436" endtime="20201030 18:29:11.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022278944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022355458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.727" endtime="20201030 18:29:11.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.735" endtime="20201030 18:29:11.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.433" endtime="20201030 18:29:11.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.431" endtime="20201030 18:29:11.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:11.741" level="INFO">${RESULT} = [{'diff': 7.651400000000322e-05}, {'diff': 7.667999999999911e-05}, {'diff': 7.655500000000245e-05}, {'diff': 7.647200000000104e-05}, {'diff': 7.683299999999837e-05}, {'diff': 7.669500000000162e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:11.738" endtime="20201030 18:29:11.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:11.746" level="INFO">${ACCURACY} = {'diff': [7.651400000000322e-05, 7.667999999999911e-05, 7.655500000000245e-05, 7.647200000000104e-05, 7.683299999999837e-05, 7.669500000000162e-05, 7.619500000000112e-05, 7.631999999999778e-05, 7.6195...</msg>
<status status="PASS" starttime="20201030 18:29:11.742" endtime="20201030 18:29:11.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.751" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 18:29:11.750" endtime="20201030 18:29:11.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.753" level="INFO">VALUE: [7.651400000000322e-05, 7.667999999999911e-05, 7.655500000000245e-05, 7.647200000000104e-05, 7.683299999999837e-05, 7.669500000000162e-05, 7.619500000000112e-05, 7.631999999999778e-05, 7.619500000000112e-05, 7.615299999999894e-05, 7.683299999999837e-05, 7.670800000000172e-05, 7.630600000000168e-05, 7.648599999999714e-05, 7.654099999999942e-05, 7.619399999999818e-05, 7.629199999999864e-05, 7.673600000000086e-05, 7.688900000000012e-05, 7.599999999999968e-05, 7.620800000000122e-05, 7.655599999999846e-05, 7.670900000000119e-05, 7.654199999999889e-05, 7.618100000000155e-05, 7.633300000000134e-05, 7.600000000000315e-05, 7.656899999999855e-05, 7.687500000000055e-05, 7.687500000000055e-05, 7.627799999999907e-05, 7.659700000000116e-05, 7.661100000000073e-05, 7.672199999999782e-05, 7.652799999999932e-05, 7.641599999999929e-05, 7.620799999999775e-05, 7.652799999999932e-05, 7.641599999999929e-05, 7.637500000000005e-05, 7.600000000000315e-05, 7.598600000000011e-05, 7.61249999999998e-05, 7.672200000000129e-05, 7.629200000000211e-05, 7.683399999999785e-05, 7.673600000000086e-05, 7.677799999999957e-05, 7.670900000000119e-05, 7.629099999999917e-05]</msg>
<status status="PASS" starttime="20201030 18:29:11.752" endtime="20201030 18:29:11.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.747" endtime="20201030 18:29:11.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:11.758" endtime="20201030 18:29:11.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.757" endtime="20201030 18:29:11.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.756" endtime="20201030 18:29:11.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.398" endtime="20201030 18:29:11.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.397" endtime="20201030 18:29:11.779"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.787" endtime="20201030 18:29:11.806"></status>
</kw>
<msg timestamp="20201030 18:29:11.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.786" endtime="20201030 18:29:11.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.808" endtime="20201030 18:29:11.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.810" endtime="20201030 18:29:11.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.783" endtime="20201030 18:29:11.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.781" endtime="20201030 18:29:11.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.819" endtime="20201030 18:29:12.106"></status>
</kw>
<msg timestamp="20201030 18:29:12.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02220275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:11.817" endtime="20201030 18:29:12.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02220275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:12.110" endtime="20201030 18:29:12.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.119" endtime="20201030 18:29:12.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.815" endtime="20201030 18:29:12.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.813" endtime="20201030 18:29:12.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:12.125" level="INFO">${RESULT} = [{'diff': 7.788900000000112e-05}, {'diff': 7.708299999999862e-05}, {'diff': 7.700000000000068e-05}, {'diff': 7.729199999999964e-05}, {'diff': 7.79030000000007e-05}, {'diff': 7.786200000000146e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:12.122" endtime="20201030 18:29:12.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:12.129" level="INFO">${ACCURACY} = {'diff': [7.788900000000112e-05, 7.708299999999862e-05, 7.700000000000068e-05, 7.729199999999964e-05, 7.79030000000007e-05, 7.786200000000146e-05, 7.788800000000165e-05, 7.772199999999882e-05, 7.78469...</msg>
<status status="PASS" starttime="20201030 18:29:12.126" endtime="20201030 18:29:12.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.134" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 18:29:12.133" endtime="20201030 18:29:12.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.136" level="INFO">VALUE: [7.788900000000112e-05, 7.708299999999862e-05, 7.700000000000068e-05, 7.729199999999964e-05, 7.79030000000007e-05, 7.786200000000146e-05, 7.788800000000165e-05, 7.772199999999882e-05, 7.784699999999894e-05, 7.772199999999882e-05, 7.727800000000007e-05, 7.780500000000024e-05, 7.787500000000155e-05, 7.69579999999985e-05, 7.752800000000032e-05, 7.700000000000068e-05, 7.705599999999896e-05, 7.761100000000173e-05, 7.79030000000007e-05, 7.773599999999839e-05, 7.704099999999992e-05, 7.702700000000035e-05, 7.744399999999943e-05, 7.7457999999999e-05, 7.776399999999753e-05, 7.755600000000293e-05, 7.791700000000026e-05, 7.770900000000219e-05, 7.727800000000007e-05, 7.705499999999949e-05, 7.730499999999974e-05, 7.768000000000011e-05, 7.788900000000112e-05, 7.723600000000136e-05, 7.701400000000025e-05, 7.742999999999986e-05, 7.787500000000155e-05, 7.769399999999968e-05, 7.701400000000025e-05, 7.74030000000002e-05, 7.727800000000007e-05, 7.754199999999989e-05, 7.741600000000029e-05, 7.726300000000103e-05, 7.761100000000173e-05, 7.730499999999974e-05, 7.702799999999982e-05, 7.720799999999875e-05, 7.783299999999937e-05, 7.719500000000212e-05]</msg>
<status status="PASS" starttime="20201030 18:29:12.135" endtime="20201030 18:29:12.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.130" endtime="20201030 18:29:12.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:12.141" endtime="20201030 18:29:12.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.140" endtime="20201030 18:29:12.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.138" endtime="20201030 18:29:12.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.780" endtime="20201030 18:29:12.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.779" endtime="20201030 18:29:12.162"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.170" endtime="20201030 18:29:12.192"></status>
</kw>
<msg timestamp="20201030 18:29:12.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.169" endtime="20201030 18:29:12.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.194" endtime="20201030 18:29:12.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.196" endtime="20201030 18:29:12.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.166" endtime="20201030 18:29:12.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.164" endtime="20201030 18:29:12.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.205" endtime="20201030 18:29:12.491"></status>
</kw>
<msg timestamp="20201030 18:29:12.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025280722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025359028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.204" endtime="20201030 18:29:12.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025280722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025359028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.495" endtime="20201030 18:29:12.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.503" endtime="20201030 18:29:12.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.201" endtime="20201030 18:29:12.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.199" endtime="20201030 18:29:12.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:12.510" level="INFO">${RESULT} = [{'diff': 7.830600000000021e-05}, {'diff': 7.816700000000051e-05}, {'diff': 7.812499999999833e-05}, {'diff': 7.816599999999757e-05}, {'diff': 7.811100000000223e-05}, {'diff': 7.825000000000193e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:12.506" endtime="20201030 18:29:12.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:12.514" level="INFO">${ACCURACY} = {'diff': [7.830600000000021e-05, 7.816700000000051e-05, 7.812499999999833e-05, 7.816599999999757e-05, 7.811100000000223e-05, 7.825000000000193e-05, 7.85969999999997e-05, 7.815300000000094e-05, 7.84719...</msg>
<status status="PASS" starttime="20201030 18:29:12.510" endtime="20201030 18:29:12.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.518" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 18:29:12.517" endtime="20201030 18:29:12.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.520" level="INFO">VALUE: [7.830600000000021e-05, 7.816700000000051e-05, 7.812499999999833e-05, 7.816599999999757e-05, 7.811100000000223e-05, 7.825000000000193e-05, 7.85969999999997e-05, 7.815300000000094e-05, 7.847199999999957e-05, 7.84169999999973e-05, 7.855600000000046e-05, 7.819499999999965e-05, 7.858400000000307e-05, 7.890299999999822e-05, 7.798599999999864e-05, 7.801300000000178e-05, 7.888799999999918e-05, 7.883300000000037e-05, 7.818000000000061e-05, 7.813900000000137e-05, 7.811099999999876e-05, 7.809799999999867e-05, 7.798600000000211e-05, 7.797200000000254e-05, 7.857000000000003e-05, 7.830500000000074e-05, 7.811099999999876e-05, 7.869500000000015e-05, 7.866600000000154e-05, 7.891600000000179e-05, 7.87779999999981e-05, 7.82779999999976e-05, 7.883300000000037e-05, 7.858300000000012e-05, 7.841700000000076e-05, 7.89030000000017e-05, 7.887499999999908e-05, 7.857000000000003e-05, 7.825000000000193e-05, 7.806900000000006e-05, 7.856900000000056e-05, 7.844400000000043e-05, 7.834699999999944e-05, 7.888899999999865e-05, 7.802800000000082e-05, 7.841700000000076e-05, 7.8458e-05, 7.891700000000126e-05, 7.799999999999821e-05, 7.874999999999896e-05]</msg>
<status status="PASS" starttime="20201030 18:29:12.519" endtime="20201030 18:29:12.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.514" endtime="20201030 18:29:12.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:12.571" endtime="20201030 18:29:12.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.569" endtime="20201030 18:29:12.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.568" endtime="20201030 18:29:12.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.163" endtime="20201030 18:29:12.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.162" endtime="20201030 18:29:12.591"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.600" endtime="20201030 18:29:12.619"></status>
</kw>
<msg timestamp="20201030 18:29:12.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.598" endtime="20201030 18:29:12.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.620" endtime="20201030 18:29:12.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.622" endtime="20201030 18:29:12.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.596" endtime="20201030 18:29:12.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.594" endtime="20201030 18:29:12.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.631" endtime="20201030 18:29:12.917"></status>
</kw>
<msg timestamp="20201030 18:29:12.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021724875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021804069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.630" endtime="20201030 18:29:12.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021724875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021804069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.921" endtime="20201030 18:29:12.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.929" endtime="20201030 18:29:12.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.627" endtime="20201030 18:29:12.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.626" endtime="20201030 18:29:12.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:12.937" level="INFO">${RESULT} = [{'diff': 7.919399999999771e-05}, {'diff': 7.92640000000025e-05}, {'diff': 7.952799999999885e-05}, {'diff': 7.909799999999967e-05}, {'diff': 7.931899999999784e-05}, {'diff': 7.916700000000151e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:12.933" endtime="20201030 18:29:12.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:12.941" level="INFO">${ACCURACY} = {'diff': [7.919399999999771e-05, 7.92640000000025e-05, 7.952799999999885e-05, 7.909799999999967e-05, 7.931899999999784e-05, 7.916700000000151e-05, 7.96389999999994e-05, 7.940199999999925e-05, 7.931900...</msg>
<status status="PASS" starttime="20201030 18:29:12.938" endtime="20201030 18:29:12.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.945" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 18:29:12.944" endtime="20201030 18:29:12.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.948" level="INFO">VALUE: [7.919399999999771e-05, 7.92640000000025e-05, 7.952799999999885e-05, 7.909799999999967e-05, 7.931899999999784e-05, 7.916700000000151e-05, 7.96389999999994e-05, 7.940199999999925e-05, 7.93190000000013e-05, 7.912499999999933e-05, 7.98190000000018e-05, 7.943100000000133e-05, 7.974999999999996e-05, 7.901300000000278e-05, 7.905600000000096e-05, 7.933400000000035e-05, 7.977699999999963e-05, 7.986199999999999e-05, 7.969399999999821e-05, 7.947200000000057e-05, 7.969399999999821e-05, 7.941599999999882e-05, 7.966699999999854e-05, 7.898599999999964e-05, 7.924999999999946e-05, 7.957000000000103e-05, 7.94450000000009e-05, 7.974999999999996e-05, 7.967999999999864e-05, 7.969500000000115e-05, 7.89580000000005e-05, 7.956900000000156e-05, 7.973600000000039e-05, 7.92779999999986e-05, 7.912499999999933e-05, 7.905600000000096e-05, 7.947200000000057e-05, 7.940299999999872e-05, 7.955600000000146e-05, 7.97779999999991e-05, 7.941599999999882e-05, 7.904200000000139e-05, 7.983300000000138e-05, 7.987500000000008e-05, 7.915300000000194e-05, 7.966599999999907e-05, 7.915299999999847e-05, 7.930600000000121e-05, 7.9458000000001e-05, 7.955600000000146e-05]</msg>
<status status="PASS" starttime="20201030 18:29:12.946" endtime="20201030 18:29:12.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.941" endtime="20201030 18:29:12.949"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:12.952" endtime="20201030 18:29:12.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.951" endtime="20201030 18:29:12.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.950" endtime="20201030 18:29:12.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.592" endtime="20201030 18:29:12.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.592" endtime="20201030 18:29:12.973"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.982" endtime="20201030 18:29:13.000"></status>
</kw>
<msg timestamp="20201030 18:29:13.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.980" endtime="20201030 18:29:13.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.002" endtime="20201030 18:29:13.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.004" endtime="20201030 18:29:13.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.977" endtime="20201030 18:29:13.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.975" endtime="20201030 18:29:13.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.013" endtime="20201030 18:29:13.300"></status>
</kw>
<msg timestamp="20201030 18:29:13.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022655958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.011" endtime="20201030 18:29:13.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022655958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.304" endtime="20201030 18:29:13.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.312" endtime="20201030 18:29:13.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.009" endtime="20201030 18:29:13.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.007" endtime="20201030 18:29:13.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:13.318" level="INFO">${RESULT} = [{'diff': 8.09169999999998e-05}, {'diff': 8.023600000000089e-05}, {'diff': 8.052799999999985e-05}, {'diff': 8.073599999999792e-05}, {'diff': 8.062500000000083e-05}, {'diff': 8.004199999999892e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:13.315" endtime="20201030 18:29:13.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:13.323" level="INFO">${ACCURACY} = {'diff': [8.09169999999998e-05, 8.023600000000089e-05, 8.052799999999985e-05, 8.073599999999792e-05, 8.062500000000083e-05, 8.004199999999892e-05, 8.062500000000083e-05, 8.030499999999927e-05, 8.00269...</msg>
<status status="PASS" starttime="20201030 18:29:13.319" endtime="20201030 18:29:13.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.327" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 18:29:13.326" endtime="20201030 18:29:13.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.330" level="INFO">VALUE: [8.09169999999998e-05, 8.023600000000089e-05, 8.052799999999985e-05, 8.073599999999792e-05, 8.062500000000083e-05, 8.004199999999892e-05, 8.062500000000083e-05, 8.030499999999927e-05, 8.002699999999988e-05, 8.040200000000025e-05, 8.040299999999972e-05, 8.019400000000218e-05, 8.088900000000065e-05, 8.023599999999742e-05, 8.01389999999999e-05, 8.000000000000021e-05, 8.07230000000013e-05, 8.004199999999892e-05, 7.997200000000107e-05, 8.061100000000126e-05, 8.055499999999952e-05, 8.06520000000005e-05, 8.080499999999977e-05, 8.05970000000017e-05, 8.047200000000157e-05, 8.006999999999806e-05, 8.08329999999989e-05, 8.062500000000083e-05, 8.058399999999813e-05, 8.061199999999727e-05, 8.018100000000208e-05, 8.011100000000076e-05, 8.01389999999999e-05, 8.018000000000261e-05, 8.041599999999982e-05, 8.004199999999892e-05, 8.03190000000023e-05, 8.090300000000022e-05, 8.062500000000083e-05, 7.998599999999717e-05, 8.073599999999792e-05, 8.030599999999874e-05, 7.998600000000064e-05, 8.047200000000157e-05, 8.016599999999957e-05, 7.995799999999803e-05, 8.090300000000022e-05, 8.020800000000175e-05, 8.032000000000178e-05, 8.055599999999899e-05]</msg>
<status status="PASS" starttime="20201030 18:29:13.328" endtime="20201030 18:29:13.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.323" endtime="20201030 18:29:13.331"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:13.335" endtime="20201030 18:29:13.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.334" endtime="20201030 18:29:13.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.332" endtime="20201030 18:29:13.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.974" endtime="20201030 18:29:13.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.973" endtime="20201030 18:29:13.356"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.364" endtime="20201030 18:29:13.383"></status>
</kw>
<msg timestamp="20201030 18:29:13.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.363" endtime="20201030 18:29:13.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.384" endtime="20201030 18:29:13.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.387" endtime="20201030 18:29:13.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.360" endtime="20201030 18:29:13.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.358" endtime="20201030 18:29:13.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.395" endtime="20201030 18:29:13.682"></status>
</kw>
<msg timestamp="20201030 18:29:13.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022049319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.394" endtime="20201030 18:29:13.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022049319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.686" endtime="20201030 18:29:13.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.694" endtime="20201030 18:29:13.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.391" endtime="20201030 18:29:13.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.390" endtime="20201030 18:29:13.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:13.701" level="INFO">${RESULT} = [{'diff': 8.130500000000027e-05}, {'diff': 8.12780000000006e-05}, {'diff': 8.148599999999867e-05}, {'diff': 8.170799999999978e-05}, {'diff': 8.111100000000177e-05}, {'diff': 8.119399999999971e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:13.698" endtime="20201030 18:29:13.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:13.706" level="INFO">${ACCURACY} = {'diff': [8.130500000000027e-05, 8.12780000000006e-05, 8.148599999999867e-05, 8.170799999999978e-05, 8.111100000000177e-05, 8.119399999999971e-05, 8.101400000000078e-05, 8.180600000000024e-05, 8.12780...</msg>
<status status="PASS" starttime="20201030 18:29:13.702" endtime="20201030 18:29:13.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.710" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 18:29:13.709" endtime="20201030 18:29:13.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.712" level="INFO">VALUE: [8.130500000000027e-05, 8.12780000000006e-05, 8.148599999999867e-05, 8.170799999999978e-05, 8.111100000000177e-05, 8.119399999999971e-05, 8.101400000000078e-05, 8.180600000000024e-05, 8.12780000000006e-05, 8.11390000000009e-05, 8.1152000000001e-05, 8.155500000000052e-05, 8.184699999999948e-05, 8.169400000000021e-05, 8.184699999999948e-05, 8.156900000000009e-05, 8.101400000000078e-05, 8.104199999999992e-05, 8.14170000000003e-05, 8.109699999999873e-05, 8.14719999999991e-05, 8.155599999999999e-05, 8.180500000000077e-05, 8.172200000000282e-05, 8.137500000000158e-05, 8.181900000000034e-05, 8.111100000000177e-05, 8.16109999999988e-05, 8.098599999999817e-05, 8.14719999999991e-05, 8.102800000000035e-05, 8.148599999999867e-05, 8.16390000000014e-05, 8.170899999999925e-05, 8.187499999999862e-05, 8.123600000000189e-05, 8.188899999999819e-05, 8.144399999999996e-05, 8.186099999999905e-05, 8.181900000000034e-05, 8.166700000000054e-05, 8.131999999999931e-05, 8.145799999999953e-05, 8.106899999999959e-05, 8.169499999999968e-05, 8.190199999999828e-05, 8.131999999999931e-05, 8.118000000000014e-05, 8.130500000000027e-05, 8.129200000000017e-05]</msg>
<status status="PASS" starttime="20201030 18:29:13.711" endtime="20201030 18:29:13.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.707" endtime="20201030 18:29:13.714"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:13.717" endtime="20201030 18:29:13.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.716" endtime="20201030 18:29:13.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.715" endtime="20201030 18:29:13.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.357" endtime="20201030 18:29:13.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.356" endtime="20201030 18:29:13.738"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.747" endtime="20201030 18:29:13.766"></status>
</kw>
<msg timestamp="20201030 18:29:13.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.746" endtime="20201030 18:29:13.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.767" endtime="20201030 18:29:13.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.770" endtime="20201030 18:29:13.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.743" endtime="20201030 18:29:13.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.741" endtime="20201030 18:29:13.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.779" endtime="20201030 18:29:14.067"></status>
</kw>
<msg timestamp="20201030 18:29:14.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023105153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023187931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.777" endtime="20201030 18:29:14.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023105153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023187931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.071" endtime="20201030 18:29:14.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.080" endtime="20201030 18:29:14.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.775" endtime="20201030 18:29:14.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.773" endtime="20201030 18:29:14.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:14.087" level="INFO">${RESULT} = [{'diff': 8.277799999999863e-05}, {'diff': 8.263799999999946e-05}, {'diff': 8.286100000000005e-05}, {'diff': 8.202799999999788e-05}, {'diff': 8.215300000000147e-05}, {'diff': 8.26109999999998e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:14.083" endtime="20201030 18:29:14.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:14.091" level="INFO">${ACCURACY} = {'diff': [8.277799999999863e-05, 8.263799999999946e-05, 8.286100000000005e-05, 8.202799999999788e-05, 8.215300000000147e-05, 8.26109999999998e-05, 8.22919999999977e-05, 8.273599999999992e-05, 8.240300...</msg>
<status status="PASS" starttime="20201030 18:29:14.088" endtime="20201030 18:29:14.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.096" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 18:29:14.095" endtime="20201030 18:29:14.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.098" level="INFO">VALUE: [8.277799999999863e-05, 8.263799999999946e-05, 8.286100000000005e-05, 8.202799999999788e-05, 8.215300000000147e-05, 8.26109999999998e-05, 8.22919999999977e-05, 8.273599999999992e-05, 8.240300000000172e-05, 8.202800000000135e-05, 8.277799999999863e-05, 8.257000000000056e-05, 8.281900000000134e-05, 8.243000000000139e-05, 8.28049999999983e-05, 8.287499999999962e-05, 8.21109999999993e-05, 8.24720000000001e-05, 8.263899999999894e-05, 8.231999999999684e-05, 8.232000000000031e-05, 8.247300000000304e-05, 8.229200000000117e-05, 8.202800000000135e-05, 8.215199999999853e-05, 8.191600000000132e-05, 8.229099999999823e-05, 8.194400000000046e-05, 8.202799999999788e-05, 8.215300000000147e-05, 8.284700000000048e-05, 8.283299999999744e-05, 8.226399999999856e-05, 8.219500000000018e-05, 8.204199999999745e-05, 8.277699999999916e-05, 8.241600000000182e-05, 8.202799999999788e-05, 8.268000000000164e-05, 8.258300000000066e-05, 8.209699999999973e-05, 8.266700000000154e-05, 8.276400000000253e-05, 8.26109999999998e-05, 8.19589999999995e-05, 8.22780000000016e-05, 8.258400000000013e-05, 8.283299999999744e-05, 8.270800000000078e-05, 8.272200000000035e-05]</msg>
<status status="PASS" starttime="20201030 18:29:14.097" endtime="20201030 18:29:14.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.092" endtime="20201030 18:29:14.103"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:14.107" endtime="20201030 18:29:14.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.106" endtime="20201030 18:29:14.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.105" endtime="20201030 18:29:14.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.739" endtime="20201030 18:29:14.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.739" endtime="20201030 18:29:14.128"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.136" endtime="20201030 18:29:14.157"></status>
</kw>
<msg timestamp="20201030 18:29:14.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.135" endtime="20201030 18:29:14.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.158" endtime="20201030 18:29:14.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.161" endtime="20201030 18:29:14.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.132" endtime="20201030 18:29:14.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.130" endtime="20201030 18:29:14.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.169" endtime="20201030 18:29:14.455"></status>
</kw>
<msg timestamp="20201030 18:29:14.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023151597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023235319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.168" endtime="20201030 18:29:14.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023151597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023235319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.460" endtime="20201030 18:29:14.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.468" endtime="20201030 18:29:14.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.165" endtime="20201030 18:29:14.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.164" endtime="20201030 18:29:14.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:14.474" level="INFO">${RESULT} = [{'diff': 8.372200000000135e-05}, {'diff': 8.32910000000027e-05}, {'diff': 8.37919999999992e-05}, {'diff': 8.301399999999931e-05}, {'diff': 8.387500000000062e-05}, {'diff': 8.326399999999956e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:14.471" endtime="20201030 18:29:14.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:14.478" level="INFO">${ACCURACY} = {'diff': [8.372200000000135e-05, 8.32910000000027e-05, 8.37919999999992e-05, 8.301399999999931e-05, 8.387500000000062e-05, 8.326399999999956e-05, 8.390299999999976e-05, 8.357000000000156e-05, 8.302799...</msg>
<status status="PASS" starttime="20201030 18:29:14.475" endtime="20201030 18:29:14.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.483" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 18:29:14.482" endtime="20201030 18:29:14.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.486" level="INFO">VALUE: [8.372200000000135e-05, 8.32910000000027e-05, 8.37919999999992e-05, 8.301399999999931e-05, 8.387500000000062e-05, 8.326399999999956e-05, 8.390299999999976e-05, 8.357000000000156e-05, 8.302799999999888e-05, 8.387500000000062e-05, 8.332000000000131e-05, 8.298699999999964e-05, 8.312499999999987e-05, 8.313799999999996e-05, 8.31110000000003e-05, 8.29720000000006e-05, 8.366699999999908e-05, 8.315300000000247e-05, 8.391699999999933e-05, 8.369499999999822e-05, 8.373600000000092e-05, 8.347300000000057e-05, 8.365300000000297e-05, 8.29720000000006e-05, 8.390200000000028e-05, 8.298600000000017e-05, 8.315199999999953e-05, 8.356900000000209e-05, 8.331899999999837e-05, 8.375000000000049e-05, 8.368100000000211e-05, 8.390299999999976e-05, 8.384799999999748e-05, 8.327799999999913e-05, 8.384800000000095e-05, 8.304100000000245e-05, 8.331900000000184e-05, 8.363899999999994e-05, 8.388900000000019e-05, 8.305600000000149e-05, 8.381900000000234e-05, 8.299999999999974e-05, 8.34720000000011e-05, 8.388900000000019e-05, 8.320900000000075e-05, 8.354199999999895e-05, 8.319400000000171e-05, 8.319400000000171e-05, 8.313899999999944e-05, 8.359700000000123e-05]</msg>
<status status="PASS" starttime="20201030 18:29:14.484" endtime="20201030 18:29:14.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.479" endtime="20201030 18:29:14.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:14.491" endtime="20201030 18:29:14.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.490" endtime="20201030 18:29:14.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.488" endtime="20201030 18:29:14.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.129" endtime="20201030 18:29:14.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.128" endtime="20201030 18:29:14.512"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.520" endtime="20201030 18:29:14.539"></status>
</kw>
<msg timestamp="20201030 18:29:14.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.519" endtime="20201030 18:29:14.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.540" endtime="20201030 18:29:14.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.543" endtime="20201030 18:29:14.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.516" endtime="20201030 18:29:14.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.514" endtime="20201030 18:29:14.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.552" endtime="20201030 18:29:14.836"></status>
</kw>
<msg timestamp="20201030 18:29:14.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021822056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.550" endtime="20201030 18:29:14.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021822056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.841" endtime="20201030 18:29:14.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.849" endtime="20201030 18:29:14.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.547" endtime="20201030 18:29:14.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.546" endtime="20201030 18:29:14.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:14.855" level="INFO">${RESULT} = [{'diff': 8.401400000000031e-05}, {'diff': 8.461200000000127e-05}, {'diff': 8.476300000000159e-05}, {'diff': 8.477800000000063e-05}, {'diff': 8.488899999999772e-05}, {'diff': 8.487500000000162e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:14.852" endtime="20201030 18:29:14.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:14.860" level="INFO">${ACCURACY} = {'diff': [8.401400000000031e-05, 8.461200000000127e-05, 8.476300000000159e-05, 8.477800000000063e-05, 8.488899999999772e-05, 8.487500000000162e-05, 8.469399999999974e-05, 8.445799999999906e-05, 8.3985...</msg>
<status status="PASS" starttime="20201030 18:29:14.856" endtime="20201030 18:29:14.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.865" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 18:29:14.864" endtime="20201030 18:29:14.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.867" level="INFO">VALUE: [8.401400000000031e-05, 8.461200000000127e-05, 8.476300000000159e-05, 8.477800000000063e-05, 8.488899999999772e-05, 8.487500000000162e-05, 8.469399999999974e-05, 8.445799999999906e-05, 8.39859999999977e-05, 8.395799999999856e-05, 8.43049999999998e-05, 8.486100000000205e-05, 8.480599999999977e-05, 8.447199999999863e-05, 8.401300000000084e-05, 8.469399999999974e-05, 8.47920000000002e-05, 8.412500000000087e-05, 8.419399999999924e-05, 8.455599999999952e-05, 8.488900000000119e-05, 8.487499999999815e-05, 8.468099999999965e-05, 8.4153e-05, 8.417999999999967e-05, 8.405499999999955e-05, 8.402700000000041e-05, 8.455500000000005e-05, 8.49729999999986e-05, 8.454199999999995e-05, 8.469499999999922e-05, 8.41249999999974e-05, 8.486099999999858e-05, 8.419499999999872e-05, 8.397300000000107e-05, 8.441699999999983e-05, 8.456899999999962e-05, 8.481899999999987e-05, 8.394400000000246e-05, 8.426400000000056e-05, 8.402799999999988e-05, 8.402799999999988e-05, 8.468099999999965e-05, 8.451400000000081e-05, 8.490300000000076e-05, 8.443100000000286e-05, 8.416699999999958e-05, 8.472200000000235e-05, 8.429100000000023e-05, 8.402700000000041e-05]</msg>
<status status="PASS" starttime="20201030 18:29:14.866" endtime="20201030 18:29:14.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.861" endtime="20201030 18:29:14.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:14.872" endtime="20201030 18:29:14.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.871" endtime="20201030 18:29:14.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.869" endtime="20201030 18:29:14.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.512" endtime="20201030 18:29:14.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.512" endtime="20201030 18:29:14.893"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.901" endtime="20201030 18:29:14.920"></status>
</kw>
<msg timestamp="20201030 18:29:14.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.900" endtime="20201030 18:29:14.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.921" endtime="20201030 18:29:14.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.924" endtime="20201030 18:29:14.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.897" endtime="20201030 18:29:14.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.895" endtime="20201030 18:29:14.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.933" endtime="20201030 18:29:15.220"></status>
</kw>
<msg timestamp="20201030 18:29:15.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.931" endtime="20201030 18:29:15.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.225" endtime="20201030 18:29:15.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.233" endtime="20201030 18:29:15.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.929" endtime="20201030 18:29:15.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.927" endtime="20201030 18:29:15.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:15.239" level="INFO">${RESULT} = [{'diff': 8.563799999999899e-05}, {'diff': 8.559699999999976e-05}, {'diff': 8.570800000000031e-05}, {'diff': 8.520799999999981e-05}, {'diff': 8.531900000000037e-05}, {'diff': 8.512500000000187e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:15.236" endtime="20201030 18:29:15.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:15.243" level="INFO">${ACCURACY} = {'diff': [8.563799999999899e-05, 8.559699999999976e-05, 8.570800000000031e-05, 8.520799999999981e-05, 8.531900000000037e-05, 8.512500000000187e-05, 8.527800000000113e-05, 8.508399999999916e-05, 8.5667...</msg>
<status status="PASS" starttime="20201030 18:29:15.240" endtime="20201030 18:29:15.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.248" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 18:29:15.247" endtime="20201030 18:29:15.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.250" level="INFO">VALUE: [8.563799999999899e-05, 8.559699999999976e-05, 8.570800000000031e-05, 8.520799999999981e-05, 8.531900000000037e-05, 8.512500000000187e-05, 8.527800000000113e-05, 8.508399999999916e-05, 8.566700000000108e-05, 8.519400000000024e-05, 8.515200000000153e-05, 8.588899999999872e-05, 8.573599999999945e-05, 8.515200000000153e-05, 8.491600000000085e-05, 8.536099999999908e-05, 8.566700000000108e-05, 8.516700000000058e-05, 8.51110000000023e-05, 8.5847e-05, 8.587499999999915e-05, 8.559799999999923e-05, 8.504200000000045e-05, 8.572199999999988e-05, 8.543000000000092e-05, 8.58050000000013e-05, 8.563900000000194e-05, 8.519499999999972e-05, 8.544400000000049e-05, 8.513900000000144e-05, 8.586099999999958e-05, 8.573599999999945e-05, 8.54310000000004e-05, 8.509799999999873e-05, 8.49859999999987e-05, 8.531900000000037e-05, 8.556900000000062e-05, 8.495800000000303e-05, 8.518100000000015e-05, 8.574999999999902e-05, 8.529199999999723e-05, 8.547199999999963e-05, 8.583400000000338e-05, 8.56119999999988e-05, 8.582000000000034e-05, 8.520799999999981e-05, 8.556900000000062e-05, 8.49859999999987e-05, 8.556900000000062e-05, 8.501400000000131e-05]</msg>
<status status="PASS" starttime="20201030 18:29:15.249" endtime="20201030 18:29:15.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.244" endtime="20201030 18:29:15.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:15.255" endtime="20201030 18:29:15.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.254" endtime="20201030 18:29:15.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.253" endtime="20201030 18:29:15.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.894" endtime="20201030 18:29:15.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.893" endtime="20201030 18:29:15.276"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.284" endtime="20201030 18:29:15.304"></status>
</kw>
<msg timestamp="20201030 18:29:15.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.283" endtime="20201030 18:29:15.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.306" endtime="20201030 18:29:15.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.308" endtime="20201030 18:29:15.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.280" endtime="20201030 18:29:15.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.278" endtime="20201030 18:29:15.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.317" endtime="20201030 18:29:15.602"></status>
</kw>
<msg timestamp="20201030 18:29:15.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022768097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022854958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.316" endtime="20201030 18:29:15.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022768097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022854958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.607" endtime="20201030 18:29:15.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.615" endtime="20201030 18:29:15.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.313" endtime="20201030 18:29:15.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.311" endtime="20201030 18:29:15.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:15.621" level="INFO">${RESULT} = [{'diff': 8.686100000000058e-05}, {'diff': 8.63050000000018e-05}, {'diff': 8.602799999999841e-05}, {'diff': 8.630499999999833e-05}, {'diff': 8.618100000000115e-05}, {'diff': 8.668100000000165e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:15.618" endtime="20201030 18:29:15.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:15.626" level="INFO">${ACCURACY} = {'diff': [8.686100000000058e-05, 8.63050000000018e-05, 8.602799999999841e-05, 8.630499999999833e-05, 8.618100000000115e-05, 8.668100000000165e-05, 8.690299999999929e-05, 8.63059999999978e-05, 8.652799...</msg>
<status status="PASS" starttime="20201030 18:29:15.622" endtime="20201030 18:29:15.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.630" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 18:29:15.629" endtime="20201030 18:29:15.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.633" level="INFO">VALUE: [8.686100000000058e-05, 8.63050000000018e-05, 8.602799999999841e-05, 8.630499999999833e-05, 8.618100000000115e-05, 8.668100000000165e-05, 8.690299999999929e-05, 8.63059999999978e-05, 8.652799999999891e-05, 8.640299999999879e-05, 8.661100000000033e-05, 8.683299999999797e-05, 8.597200000000013e-05, 8.686100000000058e-05, 8.669400000000174e-05, 8.633300000000094e-05, 8.659700000000076e-05, 8.604200000000145e-05, 8.641700000000183e-05, 8.611099999999983e-05, 8.606900000000112e-05, 8.605500000000155e-05, 8.602699999999894e-05, 8.624999999999952e-05, 8.619400000000124e-05, 8.697200000000113e-05, 8.61669999999981e-05, 8.626399999999909e-05, 8.647199999999716e-05, 8.64449999999975e-05, 8.630600000000127e-05, 8.676399999999959e-05, 8.655499999999858e-05, 8.661100000000033e-05, 8.654099999999901e-05, 8.669400000000174e-05, 8.688899999999972e-05, 8.597200000000013e-05, 8.656900000000162e-05, 8.655600000000152e-05, 8.619500000000072e-05, 8.611099999999983e-05, 8.645900000000054e-05, 8.690199999999981e-05, 8.677799999999916e-05, 8.659700000000076e-05, 8.63470000000005e-05, 8.655500000000205e-05, 8.641699999999836e-05, 8.683300000000144e-05]</msg>
<status status="PASS" starttime="20201030 18:29:15.631" endtime="20201030 18:29:15.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.626" endtime="20201030 18:29:15.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:15.638" endtime="20201030 18:29:15.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.637" endtime="20201030 18:29:15.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.635" endtime="20201030 18:29:15.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.277" endtime="20201030 18:29:15.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.276" endtime="20201030 18:29:15.659"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.667" endtime="20201030 18:29:15.687"></status>
</kw>
<msg timestamp="20201030 18:29:15.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.666" endtime="20201030 18:29:15.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.688" endtime="20201030 18:29:15.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.690" endtime="20201030 18:29:15.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.663" endtime="20201030 18:29:15.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.661" endtime="20201030 18:29:15.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.699" endtime="20201030 18:29:15.985"></status>
</kw>
<msg timestamp="20201030 18:29:15.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02222225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:15.698" endtime="20201030 18:29:15.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02222225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:15.989" endtime="20201030 18:29:15.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.997" endtime="20201030 18:29:15.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.695" endtime="20201030 18:29:15.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.694" endtime="20201030 18:29:16.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:16.004" level="INFO">${RESULT} = [{'diff': 8.697199999999766e-05}, {'diff': 8.715299999999954e-05}, {'diff': 8.791699999999986e-05}, {'diff': 8.776399999999712e-05}, {'diff': 8.784800000000148e-05}, {'diff': 8.76669999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:16.000" endtime="20201030 18:29:16.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:16.011" level="INFO">${ACCURACY} = {'diff': [8.697199999999766e-05, 8.715299999999954e-05, 8.791699999999986e-05, 8.776399999999712e-05, 8.784800000000148e-05, 8.76669999999996e-05, 8.759699999999829e-05, 8.698599999999723e-05, 8.71799...</msg>
<status status="PASS" starttime="20201030 18:29:16.005" endtime="20201030 18:29:16.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.015" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 18:29:16.014" endtime="20201030 18:29:16.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.017" level="INFO">VALUE: [8.697199999999766e-05, 8.715299999999954e-05, 8.791699999999986e-05, 8.776399999999712e-05, 8.784800000000148e-05, 8.76669999999996e-05, 8.759699999999829e-05, 8.698599999999723e-05, 8.71799999999992e-05, 8.775000000000102e-05, 8.76669999999996e-05, 8.711100000000083e-05, 8.740299999999979e-05, 8.766600000000013e-05, 8.697200000000113e-05, 8.794399999999952e-05, 8.741599999999988e-05, 8.698700000000018e-05, 8.755499999999958e-05, 8.788900000000072e-05, 8.730499999999933e-05, 8.776400000000059e-05, 8.697200000000113e-05, 8.73059999999988e-05, 8.702800000000288e-05, 8.732000000000184e-05, 8.729199999999923e-05, 8.738900000000022e-05, 8.775000000000102e-05, 8.702699999999994e-05, 8.773600000000145e-05, 8.697199999999766e-05, 8.730499999999933e-05, 8.78189999999994e-05, 8.777800000000016e-05, 8.712499999999693e-05, 8.769500000000222e-05, 8.69730000000006e-05, 8.759800000000123e-05, 8.738900000000022e-05, 8.69860000000007e-05, 8.788900000000072e-05, 8.786099999999811e-05, 8.720800000000181e-05, 8.759700000000176e-05, 8.756899999999915e-05, 8.744500000000197e-05, 8.756999999999862e-05, 8.775000000000102e-05, 8.776400000000059e-05]</msg>
<status status="PASS" starttime="20201030 18:29:16.016" endtime="20201030 18:29:16.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.011" endtime="20201030 18:29:16.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:16.022" endtime="20201030 18:29:16.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.021" endtime="20201030 18:29:16.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.020" endtime="20201030 18:29:16.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.660" endtime="20201030 18:29:16.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.659" endtime="20201030 18:29:16.043"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.051" endtime="20201030 18:29:16.070"></status>
</kw>
<msg timestamp="20201030 18:29:16.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.050" endtime="20201030 18:29:16.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.072" endtime="20201030 18:29:16.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.074" endtime="20201030 18:29:16.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.047" endtime="20201030 18:29:16.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.045" endtime="20201030 18:29:16.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.083" endtime="20201030 18:29:16.370"></status>
</kw>
<msg timestamp="20201030 18:29:16.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021980417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.082" endtime="20201030 18:29:16.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021980417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.374" endtime="20201030 18:29:16.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.383" endtime="20201030 18:29:16.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.079" endtime="20201030 18:29:16.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.077" endtime="20201030 18:29:16.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:16.389" level="INFO">${RESULT} = [{'diff': 8.869499999999975e-05}, {'diff': 8.876399999999812e-05}, {'diff': 8.886199999999858e-05}, {'diff': 8.831999999999937e-05}, {'diff': 8.873600000000245e-05}, {'diff': 8.883299999999997e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:16.386" endtime="20201030 18:29:16.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:16.393" level="INFO">${ACCURACY} = {'diff': [8.869499999999975e-05, 8.876399999999812e-05, 8.886199999999858e-05, 8.831999999999937e-05, 8.873600000000245e-05, 8.883299999999997e-05, 8.815300000000054e-05, 8.83189999999999e-05, 8.86250...</msg>
<status status="PASS" starttime="20201030 18:29:16.390" endtime="20201030 18:29:16.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.398" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 18:29:16.397" endtime="20201030 18:29:16.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.400" level="INFO">VALUE: [8.869499999999975e-05, 8.876399999999812e-05, 8.886199999999858e-05, 8.831999999999937e-05, 8.873600000000245e-05, 8.883299999999997e-05, 8.815300000000054e-05, 8.83189999999999e-05, 8.86250000000019e-05, 8.808300000000269e-05, 8.886099999999911e-05, 8.798599999999823e-05, 8.86670000000006e-05, 8.872299999999889e-05, 8.870799999999984e-05, 8.873599999999898e-05, 8.873599999999898e-05, 8.819399999999977e-05, 8.886099999999911e-05, 8.854200000000048e-05, 8.804199999999998e-05, 8.81250000000014e-05, 8.859699999999929e-05, 8.837500000000165e-05, 8.831999999999937e-05, 8.829100000000076e-05, 8.886099999999911e-05, 8.873599999999898e-05, 8.840300000000079e-05, 8.870799999999984e-05, 8.848599999999873e-05, 8.86250000000019e-05, 8.81250000000014e-05, 8.805599999999955e-05, 8.856999999999962e-05, 8.801400000000084e-05, 8.887499999999868e-05, 8.891700000000086e-05, 8.855500000000058e-05, 8.859699999999929e-05, 8.872199999999941e-05, 8.895800000000009e-05, 8.847199999999916e-05, 8.79999999999978e-05, 8.831999999999937e-05, 8.854199999999701e-05, 8.861099999999886e-05, 8.870799999999984e-05, 8.845799999999959e-05, 8.858299999999972e-05]</msg>
<status status="PASS" starttime="20201030 18:29:16.399" endtime="20201030 18:29:16.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.394" endtime="20201030 18:29:16.401"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:16.405" endtime="20201030 18:29:16.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.404" endtime="20201030 18:29:16.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.402" endtime="20201030 18:29:16.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.044" endtime="20201030 18:29:16.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.043" endtime="20201030 18:29:16.426"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.434" endtime="20201030 18:29:16.454"></status>
</kw>
<msg timestamp="20201030 18:29:16.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.433" endtime="20201030 18:29:16.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.456" endtime="20201030 18:29:16.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.458" endtime="20201030 18:29:16.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.430" endtime="20201030 18:29:16.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.428" endtime="20201030 18:29:16.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.467" endtime="20201030 18:29:16.753"></status>
</kw>
<msg timestamp="20201030 18:29:16.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022824014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022913, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:16.466" endtime="20201030 18:29:16.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022824014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022913, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:16.757" endtime="20201030 18:29:16.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.765" endtime="20201030 18:29:16.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.463" endtime="20201030 18:29:16.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.461" endtime="20201030 18:29:16.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:16.772" level="INFO">${RESULT} = [{'diff': 8.898599999999923e-05}, {'diff': 8.975000000000302e-05}, {'diff': 8.973599999999998e-05}, {'diff': 8.988899999999925e-05}, {'diff': 8.991699999999839e-05}, {'diff': 8.897299999999914e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:16.769" endtime="20201030 18:29:16.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:16.776" level="INFO">${ACCURACY} = {'diff': [8.898599999999923e-05, 8.975000000000302e-05, 8.973599999999998e-05, 8.988899999999925e-05, 8.991699999999839e-05, 8.897299999999914e-05, 8.919400000000077e-05, 8.986100000000011e-05, 8.9264...</msg>
<status status="PASS" starttime="20201030 18:29:16.773" endtime="20201030 18:29:16.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.780" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 18:29:16.779" endtime="20201030 18:29:16.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.783" level="INFO">VALUE: [8.898599999999923e-05, 8.975000000000302e-05, 8.973599999999998e-05, 8.988899999999925e-05, 8.991699999999839e-05, 8.897299999999914e-05, 8.919400000000077e-05, 8.986100000000011e-05, 8.926400000000209e-05, 8.938900000000222e-05, 8.986100000000011e-05, 8.943099999999746e-05, 8.8945e-05, 8.961099999999986e-05, 8.943100000000093e-05, 8.945800000000059e-05, 8.91250000000024e-05, 8.987500000000315e-05, 8.894400000000052e-05, 8.89999999999988e-05, 8.924999999999905e-05, 8.911099999999936e-05, 8.990299999999882e-05, 8.958300000000072e-05, 8.982000000000087e-05, 8.986199999999958e-05, 8.994400000000152e-05, 8.970800000000084e-05, 8.988899999999925e-05, 8.983300000000097e-05, 8.904100000000151e-05, 8.911100000000283e-05, 8.900000000000227e-05, 8.968099999999771e-05, 8.924999999999905e-05, 8.987499999999968e-05, 8.93060000000008e-05, 8.961199999999933e-05, 8.906900000000065e-05, 8.98190000000014e-05, 8.981899999999793e-05, 8.956900000000115e-05, 8.930499999999786e-05, 8.991699999999839e-05, 8.91389999999985e-05, 8.932000000000037e-05, 8.917999999999773e-05, 8.972299999999989e-05, 8.904200000000098e-05, 8.90129999999989e-05]</msg>
<status status="PASS" starttime="20201030 18:29:16.781" endtime="20201030 18:29:16.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.777" endtime="20201030 18:29:16.785"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:16.789" endtime="20201030 18:29:16.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.787" endtime="20201030 18:29:16.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.786" endtime="20201030 18:29:16.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.426" endtime="20201030 18:29:16.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.426" endtime="20201030 18:29:16.809"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.818" endtime="20201030 18:29:16.836"></status>
</kw>
<msg timestamp="20201030 18:29:16.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.816" endtime="20201030 18:29:16.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.837" endtime="20201030 18:29:16.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.840" endtime="20201030 18:29:16.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.814" endtime="20201030 18:29:16.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.812" endtime="20201030 18:29:16.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.849" endtime="20201030 18:29:17.140"></status>
</kw>
<msg timestamp="20201030 18:29:17.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021962528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.847" endtime="20201030 18:29:17.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021962528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.147" endtime="20201030 18:29:17.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.156" endtime="20201030 18:29:17.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.845" endtime="20201030 18:29:17.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.843" endtime="20201030 18:29:17.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:17.163" level="INFO">${RESULT} = [{'diff': 9.048599999999726e-05}, {'diff': 9.070800000000184e-05}, {'diff': 9.029199999999876e-05}, {'diff': 9.070900000000132e-05}, {'diff': 9.015299999999907e-05}, {'diff': 9.052799999999944e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:17.159" endtime="20201030 18:29:17.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:17.168" level="INFO">${ACCURACY} = {'diff': [9.048599999999726e-05, 9.070800000000184e-05, 9.029199999999876e-05, 9.070900000000132e-05, 9.015299999999907e-05, 9.052799999999944e-05, 9.06520000000001e-05, 9.070799999999837e-05, 9.09020...</msg>
<status status="PASS" starttime="20201030 18:29:17.164" endtime="20201030 18:29:17.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.173" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 18:29:17.172" endtime="20201030 18:29:17.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.175" level="INFO">VALUE: [9.048599999999726e-05, 9.070800000000184e-05, 9.029199999999876e-05, 9.070900000000132e-05, 9.015299999999907e-05, 9.052799999999944e-05, 9.06520000000001e-05, 9.070799999999837e-05, 9.090200000000034e-05, 9.011100000000036e-05, 9.088900000000025e-05, 9.026399999999962e-05, 9.044499999999803e-05, 9.06670000000026e-05, 9.086099999999764e-05, 9.032000000000137e-05, 9.044400000000202e-05, 9.080499999999936e-05, 9.084699999999807e-05, 9.0332999999998e-05, 9.058300000000172e-05, 9.015299999999907e-05, 9.027800000000266e-05, 9.073600000000098e-05, 9.038899999999975e-05, 9.086100000000111e-05, 9.01800000000022e-05, 8.994499999999753e-05, 9.083300000000197e-05, 9.077799999999969e-05, 9.061100000000086e-05, 9.004199999999851e-05, 9.057000000000162e-05, 9.045800000000159e-05, 8.99999999999998e-05, 9.080599999999883e-05, 9.044499999999803e-05, 9.038900000000322e-05, 9.059700000000129e-05, 9.011100000000036e-05, 9.0639e-05, 8.998600000000023e-05, 8.997200000000066e-05, 9.029199999999876e-05, 9.000000000000327e-05, 9.026399999999962e-05, 9.055599999999858e-05, 9.062500000000043e-05, 9.042999999999898e-05, 9.012499999999993e-05]</msg>
<status status="PASS" starttime="20201030 18:29:17.174" endtime="20201030 18:29:17.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.169" endtime="20201030 18:29:17.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:17.180" endtime="20201030 18:29:17.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.179" endtime="20201030 18:29:17.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.177" endtime="20201030 18:29:17.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.810" endtime="20201030 18:29:17.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.809" endtime="20201030 18:29:17.201"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.209" endtime="20201030 18:29:17.228"></status>
</kw>
<msg timestamp="20201030 18:29:17.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.208" endtime="20201030 18:29:17.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.230" endtime="20201030 18:29:17.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.232" endtime="20201030 18:29:17.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.205" endtime="20201030 18:29:17.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.203" endtime="20201030 18:29:17.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.241" endtime="20201030 18:29:17.527"></status>
</kw>
<msg timestamp="20201030 18:29:17.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.240" endtime="20201030 18:29:17.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.532" endtime="20201030 18:29:17.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.540" endtime="20201030 18:29:17.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.237" endtime="20201030 18:29:17.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.236" endtime="20201030 18:29:17.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:17.547" level="INFO">${RESULT} = [{'diff': 9.156900000000315e-05}, {'diff': 9.11390000000005e-05}, {'diff': 9.105599999999908e-05}, {'diff': 9.159700000000229e-05}, {'diff': 9.190300000000082e-05}, {'diff': 9.098600000000123e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:17.543" endtime="20201030 18:29:17.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:17.551" level="INFO">${ACCURACY} = {'diff': [9.156900000000315e-05, 9.11390000000005e-05, 9.105599999999908e-05, 9.159700000000229e-05, 9.190300000000082e-05, 9.098600000000123e-05, 9.161099999999839e-05, 9.095800000000209e-05, 9.10269...</msg>
<status status="PASS" starttime="20201030 18:29:17.548" endtime="20201030 18:29:17.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.555" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 18:29:17.554" endtime="20201030 18:29:17.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.557" level="INFO">VALUE: [9.156900000000315e-05, 9.11390000000005e-05, 9.105599999999908e-05, 9.159700000000229e-05, 9.190300000000082e-05, 9.098600000000123e-05, 9.161099999999839e-05, 9.095800000000209e-05, 9.1026999999997e-05, 9.105499999999961e-05, 9.102799999999994e-05, 9.143099999999946e-05, 9.168099999999971e-05, 9.180599999999983e-05, 9.183300000000297e-05, 9.155599999999958e-05, 9.188899999999778e-05, 9.144399999999955e-05, 9.162500000000143e-05, 9.161099999999839e-05, 9.095799999999862e-05, 9.11390000000005e-05, 9.101400000000037e-05, 9.127800000000019e-05, 9.119500000000225e-05, 9.11390000000005e-05, 9.173600000000198e-05, 9.174999999999808e-05, 9.159799999999829e-05, 9.138800000000127e-05, 9.127800000000019e-05, 9.142999999999998e-05, 9.16939999999998e-05, 9.138900000000075e-05, 9.102799999999994e-05, 9.127800000000019e-05, 9.155599999999958e-05, 9.158400000000219e-05, 9.188899999999778e-05, 9.11520000000006e-05, 9.138800000000127e-05, 9.138900000000075e-05, 9.162499999999796e-05, 9.141699999999989e-05, 9.159699999999882e-05, 9.102799999999994e-05, 9.154200000000001e-05, 9.158400000000219e-05, 9.102799999999994e-05, 9.166700000000014e-05]</msg>
<status status="PASS" starttime="20201030 18:29:17.556" endtime="20201030 18:29:17.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.551" endtime="20201030 18:29:17.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:17.562" endtime="20201030 18:29:17.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.561" endtime="20201030 18:29:17.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.560" endtime="20201030 18:29:17.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.202" endtime="20201030 18:29:17.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.201" endtime="20201030 18:29:17.583"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.591" endtime="20201030 18:29:17.611"></status>
</kw>
<msg timestamp="20201030 18:29:17.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.590" endtime="20201030 18:29:17.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.613" endtime="20201030 18:29:17.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.615" endtime="20201030 18:29:17.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.587" endtime="20201030 18:29:17.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.585" endtime="20201030 18:29:17.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.624" endtime="20201030 18:29:17.910"></status>
</kw>
<msg timestamp="20201030 18:29:17.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022851111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.623" endtime="20201030 18:29:17.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022851111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.915" endtime="20201030 18:29:17.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.923" endtime="20201030 18:29:17.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.620" endtime="20201030 18:29:17.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.619" endtime="20201030 18:29:17.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:17.929" level="INFO">${RESULT} = [{'diff': 9.222199999999944e-05}, {'diff': 9.209699999999932e-05}, {'diff': 9.238900000000175e-05}, {'diff': 9.248600000000273e-05}, {'diff': 9.218100000000021e-05}, {'diff': 9.23199999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:17.926" endtime="20201030 18:29:17.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:17.933" level="INFO">${ACCURACY} = {'diff': [9.222199999999944e-05, 9.209699999999932e-05, 9.238900000000175e-05, 9.248600000000273e-05, 9.218100000000021e-05, 9.23199999999999e-05, 9.266700000000114e-05, 9.238900000000175e-05, 9.22219...</msg>
<status status="PASS" starttime="20201030 18:29:17.930" endtime="20201030 18:29:17.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.938" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 18:29:17.937" endtime="20201030 18:29:17.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.940" level="INFO">VALUE: [9.222199999999944e-05, 9.209699999999932e-05, 9.238900000000175e-05, 9.248600000000273e-05, 9.218100000000021e-05, 9.23199999999999e-05, 9.266700000000114e-05, 9.238900000000175e-05, 9.222199999999944e-05, 9.227700000000172e-05, 9.229099999999782e-05, 9.290299999999835e-05, 9.244399999999708e-05, 9.288899999999878e-05, 9.24719999999997e-05, 9.24589999999996e-05, 9.261100000000286e-05, 9.211199999999836e-05, 9.247299999999917e-05, 9.26940000000008e-05, 9.205500000000061e-05, 9.227699999999825e-05, 9.279099999999832e-05, 9.226399999999815e-05, 9.233399999999947e-05, 9.262499999999896e-05, 9.291700000000139e-05, 9.225000000000205e-05, 9.211099999999889e-05, 9.222199999999944e-05, 9.258299999999678e-05, 9.241600000000141e-05, 9.218000000000073e-05, 9.262499999999896e-05, 9.211100000000236e-05, 9.288899999999878e-05, 9.286099999999964e-05, 9.230600000000033e-05, 9.274999999999908e-05, 9.286199999999911e-05, 9.268000000000123e-05, 9.284700000000007e-05, 9.244400000000055e-05, 9.255499999999764e-05, 9.231900000000043e-05, 9.281900000000093e-05, 9.195800000000309e-05, 9.222300000000239e-05, 9.230600000000033e-05, 9.270899999999985e-05]</msg>
<status status="PASS" starttime="20201030 18:29:17.939" endtime="20201030 18:29:17.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.934" endtime="20201030 18:29:17.942"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:17.946" endtime="20201030 18:29:17.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.944" endtime="20201030 18:29:17.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.943" endtime="20201030 18:29:17.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.584" endtime="20201030 18:29:17.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.583" endtime="20201030 18:29:17.967"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.975" endtime="20201030 18:29:17.995"></status>
</kw>
<msg timestamp="20201030 18:29:17.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.973" endtime="20201030 18:29:17.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.996" endtime="20201030 18:29:17.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.999" endtime="20201030 18:29:18.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.971" endtime="20201030 18:29:18.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.969" endtime="20201030 18:29:18.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.007" endtime="20201030 18:29:18.292"></status>
</kw>
<msg timestamp="20201030 18:29:18.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.006" endtime="20201030 18:29:18.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.297" endtime="20201030 18:29:18.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.305" endtime="20201030 18:29:18.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.004" endtime="20201030 18:29:18.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.002" endtime="20201030 18:29:18.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:18.311" level="INFO">${RESULT} = [{'diff': 9.338899999999928e-05}, {'diff': 9.373699999999999e-05}, {'diff': 9.381900000000193e-05}, {'diff': 9.31940000000013e-05}, {'diff': 9.317999999999826e-05}, {'diff': 9.343000000000198e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:18.308" endtime="20201030 18:29:18.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:18.316" level="INFO">${ACCURACY} = {'diff': [9.338899999999928e-05, 9.373699999999999e-05, 9.381900000000193e-05, 9.31940000000013e-05, 9.317999999999826e-05, 9.343000000000198e-05, 9.38469999999976e-05, 9.358299999999778e-05, 9.298599...</msg>
<status status="PASS" starttime="20201030 18:29:18.312" endtime="20201030 18:29:18.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.321" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 18:29:18.320" endtime="20201030 18:29:18.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.323" level="INFO">VALUE: [9.338899999999928e-05, 9.373699999999999e-05, 9.381900000000193e-05, 9.31940000000013e-05, 9.317999999999826e-05, 9.343000000000198e-05, 9.38469999999976e-05, 9.358299999999778e-05, 9.298599999999976e-05, 9.341700000000189e-05, 9.375000000000008e-05, 9.327799999999872e-05, 9.345800000000112e-05, 9.381899999999846e-05, 9.316699999999817e-05, 9.326399999999915e-05, 9.298599999999976e-05, 9.330600000000133e-05, 9.324999999999958e-05, 9.31529999999986e-05, 9.299999999999933e-05, 9.368100000000171e-05, 9.36659999999992e-05, 9.345799999999765e-05, 9.341599999999894e-05, 9.388899999999978e-05, 9.344399999999808e-05, 9.359699999999735e-05, 9.312499999999946e-05, 9.315300000000207e-05, 9.387500000000021e-05, 9.37079999999979e-05, 9.30139999999989e-05, 9.356899999999821e-05, 9.31529999999986e-05, 9.384700000000107e-05, 9.302800000000194e-05, 9.370800000000137e-05, 9.319500000000078e-05, 9.294500000000053e-05, 9.316700000000164e-05, 9.315300000000207e-05, 9.373699999999999e-05, 9.311100000000336e-05, 9.342999999999851e-05, 9.320900000000035e-05, 9.298599999999976e-05, 9.375000000000008e-05, 9.373600000000051e-05, 9.345799999999765e-05]</msg>
<status status="PASS" starttime="20201030 18:29:18.322" endtime="20201030 18:29:18.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.317" endtime="20201030 18:29:18.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:18.328" endtime="20201030 18:29:18.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.326" endtime="20201030 18:29:18.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.325" endtime="20201030 18:29:18.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.967" endtime="20201030 18:29:18.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.967" endtime="20201030 18:29:18.348"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.357" endtime="20201030 18:29:18.376"></status>
</kw>
<msg timestamp="20201030 18:29:18.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.355" endtime="20201030 18:29:18.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.378" endtime="20201030 18:29:18.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.380" endtime="20201030 18:29:18.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.353" endtime="20201030 18:29:18.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.351" endtime="20201030 18:29:18.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.389" endtime="20201030 18:29:18.676"></status>
</kw>
<msg timestamp="20201030 18:29:18.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.387" endtime="20201030 18:29:18.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.680" endtime="20201030 18:29:18.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.689" endtime="20201030 18:29:18.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.385" endtime="20201030 18:29:18.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.383" endtime="20201030 18:29:18.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:18.695" level="INFO">${RESULT} = [{'diff': 9.43469999999981e-05}, {'diff': 9.400000000000033e-05}, {'diff': 9.429200000000276e-05}, {'diff': 9.437500000000071e-05}, {'diff': 9.488900000000078e-05}, {'diff': 9.404099999999957e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:18.692" endtime="20201030 18:29:18.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:18.699" level="INFO">${ACCURACY} = {'diff': [9.43469999999981e-05, 9.400000000000033e-05, 9.429200000000276e-05, 9.437500000000071e-05, 9.488900000000078e-05, 9.404099999999957e-05, 9.415200000000012e-05, 9.438900000000028e-05, 9.48610...</msg>
<status status="PASS" starttime="20201030 18:29:18.696" endtime="20201030 18:29:18.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.704" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 18:29:18.703" endtime="20201030 18:29:18.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.706" level="INFO">VALUE: [9.43469999999981e-05, 9.400000000000033e-05, 9.429200000000276e-05, 9.437500000000071e-05, 9.488900000000078e-05, 9.404099999999957e-05, 9.415200000000012e-05, 9.438900000000028e-05, 9.486100000000164e-05, 9.469399999999933e-05, 9.475000000000108e-05, 9.488900000000078e-05, 9.483400000000197e-05, 9.455599999999911e-05, 9.408399999999775e-05, 9.457000000000215e-05, 9.415200000000012e-05, 9.39720000000012e-05, 9.41529999999996e-05, 9.472200000000194e-05, 9.399999999999686e-05, 9.488900000000078e-05, 9.476400000000065e-05, 9.459699999999835e-05, 9.430599999999886e-05, 9.456900000000268e-05, 9.47079999999989e-05, 9.400000000000033e-05, 9.445799999999865e-05, 9.447199999999822e-05, 9.459700000000182e-05, 9.41529999999996e-05, 9.476400000000065e-05, 9.475000000000108e-05, 9.49720000000022e-05, 9.429199999999929e-05, 9.433299999999853e-05, 9.459700000000182e-05, 9.426400000000015e-05, 9.454100000000007e-05, 9.441699999999942e-05, 9.462500000000096e-05, 9.454199999999954e-05, 9.398600000000076e-05, 9.475000000000108e-05, 9.419500000000178e-05, 9.454200000000301e-05, 9.480499999999989e-05, 9.397199999999772e-05, 9.441599999999994e-05]</msg>
<status status="PASS" starttime="20201030 18:29:18.705" endtime="20201030 18:29:18.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.700" endtime="20201030 18:29:18.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:18.711" endtime="20201030 18:29:18.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.710" endtime="20201030 18:29:18.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.708" endtime="20201030 18:29:18.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.349" endtime="20201030 18:29:18.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.349" endtime="20201030 18:29:18.732"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.740" endtime="20201030 18:29:18.760"></status>
</kw>
<msg timestamp="20201030 18:29:18.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.739" endtime="20201030 18:29:18.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.762" endtime="20201030 18:29:18.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.764" endtime="20201030 18:29:18.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.736" endtime="20201030 18:29:18.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.734" endtime="20201030 18:29:18.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.773" endtime="20201030 18:29:19.058"></status>
</kw>
<msg timestamp="20201030 18:29:19.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022634278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022729903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.772" endtime="20201030 18:29:19.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022634278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022729903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.063" endtime="20201030 18:29:19.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.071" endtime="20201030 18:29:19.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.769" endtime="20201030 18:29:19.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.767" endtime="20201030 18:29:19.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:19.077" level="INFO">${RESULT} = [{'diff': 9.562499999999849e-05}, {'diff': 9.561100000000239e-05}, {'diff': 9.576400000000165e-05}, {'diff': 9.57079999999999e-05}, {'diff': 9.519399999999983e-05}, {'diff': 9.590299999999788e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:19.074" endtime="20201030 18:29:19.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:19.081" level="INFO">${ACCURACY} = {'diff': [9.562499999999849e-05, 9.561100000000239e-05, 9.576400000000165e-05, 9.57079999999999e-05, 9.519399999999983e-05, 9.590299999999788e-05, 9.586099999999917e-05, 9.502800000000047e-05, 9.57079...</msg>
<status status="PASS" starttime="20201030 18:29:19.078" endtime="20201030 18:29:19.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.086" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 18:29:19.085" endtime="20201030 18:29:19.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.089" level="INFO">VALUE: [9.562499999999849e-05, 9.561100000000239e-05, 9.576400000000165e-05, 9.57079999999999e-05, 9.519399999999983e-05, 9.590299999999788e-05, 9.586099999999917e-05, 9.502800000000047e-05, 9.57079999999999e-05, 9.505500000000014e-05, 9.586099999999917e-05, 9.504200000000004e-05, 9.562500000000196e-05, 9.556900000000021e-05, 9.58469999999996e-05, 9.580500000000089e-05, 9.561100000000239e-05, 9.509700000000232e-05, 9.551399999999793e-05, 9.580600000000036e-05, 9.569499999999981e-05, 9.519499999999931e-05, 9.555600000000011e-05, 9.581900000000046e-05, 9.51530000000006e-05, 9.52079999999994e-05, 9.583300000000003e-05, 9.58469999999996e-05, 9.531999999999943e-05, 9.513900000000103e-05, 9.595800000000015e-05, 9.49859999999983e-05, 9.53469999999991e-05, 9.57079999999999e-05, 9.512500000000146e-05, 9.527800000000072e-05, 9.5027999999997e-05, 9.512499999999799e-05, 9.588900000000178e-05, 9.581999999999993e-05, 9.540300000000085e-05, 9.570899999999938e-05, 9.581999999999993e-05, 9.570899999999938e-05, 9.57079999999999e-05, 9.556900000000021e-05, 9.559700000000282e-05, 9.58469999999996e-05, 9.586099999999917e-05, 9.518099999999974e-05]</msg>
<status status="PASS" starttime="20201030 18:29:19.087" endtime="20201030 18:29:19.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.082" endtime="20201030 18:29:19.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:19.094" endtime="20201030 18:29:19.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.092" endtime="20201030 18:29:19.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.091" endtime="20201030 18:29:19.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.733" endtime="20201030 18:29:19.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.732" endtime="20201030 18:29:19.115"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.123" endtime="20201030 18:29:19.143"></status>
</kw>
<msg timestamp="20201030 18:29:19.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.122" endtime="20201030 18:29:19.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.145" endtime="20201030 18:29:19.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.147" endtime="20201030 18:29:19.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.119" endtime="20201030 18:29:19.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.117" endtime="20201030 18:29:19.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.157" endtime="20201030 18:29:19.442"></status>
</kw>
<msg timestamp="20201030 18:29:19.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.155" endtime="20201030 18:29:19.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.446" endtime="20201030 18:29:19.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.455" endtime="20201030 18:29:19.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.152" endtime="20201030 18:29:19.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.150" endtime="20201030 18:29:19.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:19.461" level="INFO">${RESULT} = [{'diff': 9.686100000000017e-05}, {'diff': 9.666700000000167e-05}, {'diff': 9.613900000000203e-05}, {'diff': 9.604100000000157e-05}, {'diff': 9.641600000000194e-05}, {'diff': 9.665199999999916e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:19.458" endtime="20201030 18:29:19.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:19.468" level="INFO">${ACCURACY} = {'diff': [9.686100000000017e-05, 9.666700000000167e-05, 9.613900000000203e-05, 9.604100000000157e-05, 9.641600000000194e-05, 9.665199999999916e-05, 9.686100000000017e-05, 9.619400000000083e-05, 9.6320...</msg>
<status status="PASS" starttime="20201030 18:29:19.462" endtime="20201030 18:29:19.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.473" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 18:29:19.472" endtime="20201030 18:29:19.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.475" level="INFO">VALUE: [9.686100000000017e-05, 9.666700000000167e-05, 9.613900000000203e-05, 9.604100000000157e-05, 9.641600000000194e-05, 9.665199999999916e-05, 9.686100000000017e-05, 9.619400000000083e-05, 9.632000000000043e-05, 9.647200000000022e-05, 9.676399999999918e-05, 9.670900000000038e-05, 9.613899999999856e-05, 9.598699999999877e-05, 9.640200000000237e-05, 9.656900000000121e-05, 9.669399999999786e-05, 9.627799999999825e-05, 9.61530000000016e-05, 9.630600000000086e-05, 9.691699999999845e-05, 9.688899999999931e-05, 9.604199999999757e-05, 9.630500000000139e-05, 9.612499999999899e-05, 9.656899999999774e-05, 9.674999999999961e-05, 9.640300000000185e-05, 9.68470000000006e-05, 9.60140000000019e-05, 9.618099999999727e-05, 9.619400000000083e-05, 9.612499999999899e-05, 9.608399999999975e-05, 9.677799999999875e-05, 9.626400000000215e-05, 9.626400000000215e-05, 9.605499999999767e-05, 9.612499999999899e-05, 9.595800000000015e-05, 9.654200000000154e-05, 9.612500000000246e-05, 9.6027999999998e-05, 9.638899999999881e-05, 9.672200000000047e-05, 9.60140000000019e-05, 9.672200000000047e-05, 9.60140000000019e-05, 9.63470000000001e-05, 9.597199999999972e-05]</msg>
<status status="PASS" starttime="20201030 18:29:19.474" endtime="20201030 18:29:19.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.469" endtime="20201030 18:29:19.481"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:19.484" endtime="20201030 18:29:19.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.483" endtime="20201030 18:29:19.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.482" endtime="20201030 18:29:19.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.116" endtime="20201030 18:29:19.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.115" endtime="20201030 18:29:19.505"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.514" endtime="20201030 18:29:19.534"></status>
</kw>
<msg timestamp="20201030 18:29:19.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.512" endtime="20201030 18:29:19.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.535" endtime="20201030 18:29:19.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.537" endtime="20201030 18:29:19.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.509" endtime="20201030 18:29:19.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.507" endtime="20201030 18:29:19.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.547" endtime="20201030 18:29:19.834"></status>
</kw>
<msg timestamp="20201030 18:29:19.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.545" endtime="20201030 18:29:19.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.838" endtime="20201030 18:29:19.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.846" endtime="20201030 18:29:19.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.542" endtime="20201030 18:29:19.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.541" endtime="20201030 18:29:19.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:19.853" level="INFO">${RESULT} = [{'diff': 9.725000000000011e-05}, {'diff': 9.773600000000104e-05}, {'diff': 9.74860000000008e-05}, {'diff': 9.699999999999986e-05}, {'diff': 9.758300000000178e-05}, {'diff': 9.769400000000233e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:19.850" endtime="20201030 18:29:19.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:19.857" level="INFO">${ACCURACY} = {'diff': [9.725000000000011e-05, 9.773600000000104e-05, 9.74860000000008e-05, 9.699999999999986e-05, 9.758300000000178e-05, 9.769400000000233e-05, 9.755499999999917e-05, 9.701399999999943e-05, 9.77220...</msg>
<status status="PASS" starttime="20201030 18:29:19.854" endtime="20201030 18:29:19.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.861" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 18:29:19.860" endtime="20201030 18:29:19.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.864" level="INFO">VALUE: [9.725000000000011e-05, 9.773600000000104e-05, 9.74860000000008e-05, 9.699999999999986e-05, 9.758300000000178e-05, 9.769400000000233e-05, 9.755499999999917e-05, 9.701399999999943e-05, 9.772200000000147e-05, 9.743100000000199e-05, 9.763900000000006e-05, 9.701399999999943e-05, 9.769399999999887e-05, 9.783299999999856e-05, 9.79020000000004e-05, 9.786100000000117e-05, 9.706900000000171e-05, 9.711100000000042e-05, 9.69860000000003e-05, 9.71530000000026e-05, 9.777799999999975e-05, 9.745900000000113e-05, 9.761200000000039e-05, 9.773600000000104e-05, 9.745799999999818e-05, 9.758300000000178e-05, 9.759700000000135e-05, 9.772200000000147e-05, 9.699999999999986e-05, 9.788900000000031e-05, 9.759800000000082e-05, 9.768099999999877e-05, 9.740299999999938e-05, 9.716599999999923e-05, 9.730499999999892e-05, 9.747199999999775e-05, 9.772200000000147e-05, 9.756899999999874e-05, 9.787500000000074e-05, 9.770900000000138e-05, 9.699999999999986e-05, 9.713899999999956e-05, 9.745900000000113e-05, 9.744400000000208e-05, 9.758300000000178e-05, 9.747200000000122e-05, 9.727799999999925e-05, 9.76669999999992e-05, 9.755600000000211e-05, 9.78340000000015e-05]</msg>
<status status="PASS" starttime="20201030 18:29:19.862" endtime="20201030 18:29:19.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.858" endtime="20201030 18:29:19.865"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:19.869" endtime="20201030 18:29:19.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.867" endtime="20201030 18:29:19.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.866" endtime="20201030 18:29:19.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.506" endtime="20201030 18:29:19.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.505" endtime="20201030 18:29:19.889"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.898" endtime="20201030 18:29:19.919"></status>
</kw>
<msg timestamp="20201030 18:29:19.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.896" endtime="20201030 18:29:19.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.920" endtime="20201030 18:29:19.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.923" endtime="20201030 18:29:19.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.894" endtime="20201030 18:29:19.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.891" endtime="20201030 18:29:19.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.931" endtime="20201030 18:29:20.217"></status>
</kw>
<msg timestamp="20201030 18:29:20.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022878653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.930" endtime="20201030 18:29:20.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022878653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.221" endtime="20201030 18:29:20.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.229" endtime="20201030 18:29:20.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.927" endtime="20201030 18:29:20.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.926" endtime="20201030 18:29:20.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:20.236" level="INFO">${RESULT} = [{'diff': 9.88609999999987e-05}, {'diff': 9.869499999999934e-05}, {'diff': 9.798599999999782e-05}, {'diff': 9.874999999999814e-05}, {'diff': 9.834699999999863e-05}, {'diff': 9.8028e-05}, {'diff': 9.85...</msg>
<status status="PASS" starttime="20201030 18:29:20.233" endtime="20201030 18:29:20.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:20.240" level="INFO">${ACCURACY} = {'diff': [9.88609999999987e-05, 9.869499999999934e-05, 9.798599999999782e-05, 9.874999999999814e-05, 9.834699999999863e-05, 9.8028e-05, 9.851400000000093e-05, 9.88609999999987e-05, 9.804200000000304e-...</msg>
<status status="PASS" starttime="20201030 18:29:20.237" endtime="20201030 18:29:20.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.244" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 18:29:20.243" endtime="20201030 18:29:20.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.247" level="INFO">VALUE: [9.88609999999987e-05, 9.869499999999934e-05, 9.798599999999782e-05, 9.874999999999814e-05, 9.834699999999863e-05, 9.8028e-05, 9.851400000000093e-05, 9.88609999999987e-05, 9.804200000000304e-05, 9.811099999999795e-05, 9.872200000000247e-05, 9.865300000000063e-05, 9.859700000000235e-05, 9.816700000000317e-05, 9.861099999999845e-05, 9.869399999999987e-05, 9.844399999999962e-05, 9.870799999999944e-05, 9.841699999999995e-05, 9.868099999999977e-05, 9.795799999999869e-05, 9.836100000000167e-05, 9.827800000000025e-05, 9.823700000000102e-05, 9.85410000000006e-05, 9.79999999999974e-05, 9.880500000000042e-05, 9.844399999999962e-05, 9.815300000000013e-05, 9.887499999999827e-05, 9.804199999999957e-05, 9.822200000000197e-05, 9.800000000000086e-05, 9.811099999999795e-05, 9.869399999999987e-05, 9.805499999999967e-05, 9.873599999999857e-05, 9.826400000000068e-05, 9.818099999999927e-05, 9.797200000000172e-05, 9.805599999999914e-05, 9.794500000000206e-05, 9.869499999999934e-05, 9.823700000000102e-05, 9.798599999999782e-05, 9.881899999999999e-05, 9.827800000000025e-05, 9.79860000000013e-05, 9.875000000000161e-05, 9.812500000000099e-05]</msg>
<status status="PASS" starttime="20201030 18:29:20.245" endtime="20201030 18:29:20.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.241" endtime="20201030 18:29:20.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:20.253" endtime="20201030 18:29:20.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.251" endtime="20201030 18:29:20.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.250" endtime="20201030 18:29:20.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.890" endtime="20201030 18:29:20.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.889" endtime="20201030 18:29:20.273"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.282" endtime="20201030 18:29:20.301"></status>
</kw>
<msg timestamp="20201030 18:29:20.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.280" endtime="20201030 18:29:20.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.302" endtime="20201030 18:29:20.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.305" endtime="20201030 18:29:20.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.278" endtime="20201030 18:29:20.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.276" endtime="20201030 18:29:20.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.313" endtime="20201030 18:29:20.599"></status>
</kw>
<msg timestamp="20201030 18:29:20.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021814069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.312" endtime="20201030 18:29:20.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021814069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.603" endtime="20201030 18:29:20.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.611" endtime="20201030 18:29:20.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.309" endtime="20201030 18:29:20.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.308" endtime="20201030 18:29:20.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:20.618" level="INFO">${RESULT} = [{'diff': 9.950000000000236e-05}, {'diff': 9.908299999999981e-05}, {'diff': 9.961099999999945e-05}, {'diff': 9.95549999999977e-05}, {'diff': 9.970800000000044e-05}, {'diff': 9.915300000000113e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:20.615" endtime="20201030 18:29:20.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:20.623" level="INFO">${ACCURACY} = {'diff': [9.950000000000236e-05, 9.908299999999981e-05, 9.961099999999945e-05, 9.95549999999977e-05, 9.970800000000044e-05, 9.915300000000113e-05, 9.925000000000211e-05, 9.9028000000001e-05, 9.9806000...</msg>
<status status="PASS" starttime="20201030 18:29:20.619" endtime="20201030 18:29:20.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.627" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 18:29:20.626" endtime="20201030 18:29:20.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.629" level="INFO">VALUE: [9.950000000000236e-05, 9.908299999999981e-05, 9.961099999999945e-05, 9.95549999999977e-05, 9.970800000000044e-05, 9.915300000000113e-05, 9.925000000000211e-05, 9.9028000000001e-05, 9.98060000000009e-05, 9.919400000000037e-05, 9.9722e-05, 9.945800000000019e-05, 9.909699999999938e-05, 9.944399999999715e-05, 9.9722e-05, 9.929200000000082e-05, 9.974999999999914e-05, 9.98609999999997e-05, 9.965300000000163e-05, 9.911200000000189e-05, 9.913799999999862e-05, 9.920899999999941e-05, 9.902799999999753e-05, 9.897199999999926e-05, 9.934699999999963e-05, 9.973600000000304e-05, 9.962499999999902e-05, 9.933399999999953e-05, 9.912499999999852e-05, 9.926300000000221e-05, 9.916599999999776e-05, 9.920799999999994e-05, 9.934699999999963e-05, 9.904200000000057e-05, 9.945899999999966e-05, 9.944500000000009e-05, 9.958399999999978e-05, 9.904200000000057e-05, 9.912500000000199e-05, 9.915199999999819e-05, 9.930500000000092e-05, 9.990199999999894e-05, 9.911099999999895e-05, 9.919400000000037e-05, 9.976400000000218e-05, 9.905599999999667e-05, 9.944500000000009e-05, 9.954200000000107e-05, 9.9028000000001e-05, 9.973599999999957e-05]</msg>
<status status="PASS" starttime="20201030 18:29:20.628" endtime="20201030 18:29:20.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.624" endtime="20201030 18:29:20.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:20.634" endtime="20201030 18:29:20.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.633" endtime="20201030 18:29:20.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.632" endtime="20201030 18:29:20.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.274" endtime="20201030 18:29:20.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.274" endtime="20201030 18:29:20.655"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.664" endtime="20201030 18:29:20.683"></status>
</kw>
<msg timestamp="20201030 18:29:20.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.662" endtime="20201030 18:29:20.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.685" endtime="20201030 18:29:20.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.687" endtime="20201030 18:29:20.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.659" endtime="20201030 18:29:20.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.657" endtime="20201030 18:29:20.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.696" endtime="20201030 18:29:20.983"></status>
</kw>
<msg timestamp="20201030 18:29:20.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022010958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022111431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.695" endtime="20201030 18:29:20.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022010958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022111431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.987" endtime="20201030 18:29:20.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.995" endtime="20201030 18:29:20.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.692" endtime="20201030 18:29:20.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.690" endtime="20201030 18:29:20.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:21.001" level="INFO">${RESULT} = [{'diff': 0.00010047300000000023}, {'diff': 0.0001001939999999979}, {'diff': 0.00010005500000000167}, {'diff': 0.00010029099999999888}, {'diff': 0.00010020800000000094}, {'diff': 0.0001002779999999987...</msg>
<status status="PASS" starttime="20201030 18:29:20.998" endtime="20201030 18:29:21.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:21.005" level="INFO">${ACCURACY} = {'diff': [0.00010047300000000023, 0.0001001939999999979, 0.00010005500000000167, 0.00010029099999999888, 0.00010020800000000094, 0.00010027799999999878, 0.00010055600000000164, 0.0001001670000000017, ...</msg>
<status status="PASS" starttime="20201030 18:29:21.002" endtime="20201030 18:29:21.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.010" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 18:29:21.009" endtime="20201030 18:29:21.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.012" level="INFO">VALUE: [0.00010047300000000023, 0.0001001939999999979, 0.00010005500000000167, 0.00010029099999999888, 0.00010020800000000094, 0.00010027799999999878, 0.00010055600000000164, 0.0001001670000000017, 0.00010083399999999756, 9.99999999999994e-05, 0.00010027800000000225, 9.99999999999994e-05, 0.00010081900000000199, 0.00010038899999999934, 0.00010013899999999909, 0.000100722000000001, 0.00010058400000000078, 0.00010061100000000045, 0.00010027799999999878, 9.99999999999994e-05, 0.00010066599999999926, 0.00010083300000000156, 0.00010083299999999809, 0.0001005549999999987, 0.00010059699999999741, 0.00010044399999999815, 0.00010087500000000027, 0.00010009700000000038, 0.00010065200000000316, 0.00010076399999999971, 0.00010062500000000002, 0.00010059699999999741, 0.00010088899999999984, 0.00010013899999999909, 0.00010069400000000187, 0.00010005599999999767, 9.994500000000059e-05, 0.00010045900000000066, 0.00010032000000000096, 0.00010087500000000027, 9.998599999999983e-05, 0.00010019400000000137, 0.00010027799999999878, 0.00010055599999999817, 0.00010061100000000045, 0.00010041699999999848, 0.00010045900000000066, 0.00010083400000000103, 0.00010045900000000066, 9.99999999999994e-05]</msg>
<status status="PASS" starttime="20201030 18:29:21.011" endtime="20201030 18:29:21.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.006" endtime="20201030 18:29:21.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:21.017" endtime="20201030 18:29:21.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.016" endtime="20201030 18:29:21.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.014" endtime="20201030 18:29:21.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.656" endtime="20201030 18:29:21.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.655" endtime="20201030 18:29:21.038"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.046" endtime="20201030 18:29:21.067"></status>
</kw>
<msg timestamp="20201030 18:29:21.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.045" endtime="20201030 18:29:21.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.069" endtime="20201030 18:29:21.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.071" endtime="20201030 18:29:21.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.042" endtime="20201030 18:29:21.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.040" endtime="20201030 18:29:21.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.080" endtime="20201030 18:29:21.367"></status>
</kw>
<msg timestamp="20201030 18:29:21.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022852514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022953806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.078" endtime="20201030 18:29:21.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022852514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022953806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.371" endtime="20201030 18:29:21.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.379" endtime="20201030 18:29:21.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.076" endtime="20201030 18:29:21.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.074" endtime="20201030 18:29:21.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:21.385" level="INFO">${RESULT} = [{'diff': 0.00010129199999999935}, {'diff': 0.00010188900000000084}, {'diff': 0.00010177700000000081}, {'diff': 0.00010148600000000133}, {'diff': 0.00010129099999999988}, {'diff': 0.000101764000000000...</msg>
<status status="PASS" starttime="20201030 18:29:21.382" endtime="20201030 18:29:21.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:21.389" level="INFO">${ACCURACY} = {'diff': [0.00010129199999999935, 0.00010188900000000084, 0.00010177700000000081, 0.00010148600000000133, 0.00010129099999999988, 0.00010176400000000071, 0.00010098600000000083, 0.00010130500000000292...</msg>
<status status="PASS" starttime="20201030 18:29:21.386" endtime="20201030 18:29:21.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.393" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 18:29:21.392" endtime="20201030 18:29:21.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.396" level="INFO">VALUE: [0.00010129199999999935, 0.00010188900000000084, 0.00010177700000000081, 0.00010148600000000133, 0.00010129099999999988, 0.00010176400000000071, 0.00010098600000000083, 0.00010130500000000292, 0.00010181900000000299, 0.00010155599999999917, 0.000101819999999999, 0.00010119499999999837, 0.00010169500000000234, 0.00010092999999999908, 0.00010111100000000095, 0.00010177799999999682, 0.0001010000000000004, 0.00010176400000000071, 0.00010169500000000234, 0.00010169500000000234, 0.00010126400000000021, 0.00010161100000000145, 0.00010158399999999831, 0.0001019160000000005, 0.00010113900000000009, 0.00010097199999999779, 0.00010098600000000083, 0.00010176400000000071, 0.00010183299999999909, 0.000101028000000003, 0.0001010000000000004, 0.00010127700000000031, 0.00010140200000000044, 0.00010106900000000224, 0.00010167999999999983, 0.0001011939999999989, 0.00010183299999999909, 0.00010159699999999841, 0.00010188900000000084, 0.00010105600000000214, 0.00010126400000000021, 0.00010144399999999915, 0.00010090199999999994, 0.0001011939999999989, 0.00010156900000000274, 0.0001011939999999989, 0.00010159700000000188, 0.00010102799999999953, 0.0001010000000000004, 0.00010176399999999725]</msg>
<status status="PASS" starttime="20201030 18:29:21.394" endtime="20201030 18:29:21.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.390" endtime="20201030 18:29:21.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:21.402" endtime="20201030 18:29:21.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.400" endtime="20201030 18:29:21.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.399" endtime="20201030 18:29:21.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.039" endtime="20201030 18:29:21.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.038" endtime="20201030 18:29:21.422"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.431" endtime="20201030 18:29:21.451"></status>
</kw>
<msg timestamp="20201030 18:29:21.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.429" endtime="20201030 18:29:21.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.453" endtime="20201030 18:29:21.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.455" endtime="20201030 18:29:21.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.427" endtime="20201030 18:29:21.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.425" endtime="20201030 18:29:21.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.464" endtime="20201030 18:29:21.749"></status>
</kw>
<msg timestamp="20201030 18:29:21.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021980403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022083056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.463" endtime="20201030 18:29:21.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021980403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022083056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.753" endtime="20201030 18:29:21.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.761" endtime="20201030 18:29:21.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.460" endtime="20201030 18:29:21.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.458" endtime="20201030 18:29:21.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:21.768" level="INFO">${RESULT} = [{'diff': 0.00010265300000000116}, {'diff': 0.00010284799999999913}, {'diff': 0.00010213799999999815}, {'diff': 0.00010212499999999805}, {'diff': 0.00010276400000000172}, {'diff': 0.000102582999999999...</msg>
<status status="PASS" starttime="20201030 18:29:21.765" endtime="20201030 18:29:21.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:21.772" level="INFO">${ACCURACY} = {'diff': [0.00010265300000000116, 0.00010284799999999913, 0.00010213799999999815, 0.00010212499999999805, 0.00010276400000000172, 0.00010258299999999984, 0.00010279199999999739, 0.00010245899999999919...</msg>
<status status="PASS" starttime="20201030 18:29:21.769" endtime="20201030 18:29:21.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.777" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 18:29:21.776" endtime="20201030 18:29:21.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.779" level="INFO">VALUE: [0.00010265300000000116, 0.00010284799999999913, 0.00010213799999999815, 0.00010212499999999805, 0.00010276400000000172, 0.00010258299999999984, 0.00010279199999999739, 0.00010245899999999919, 0.00010202800000000053, 0.00010266700000000073, 0.00010243000000000058, 0.00010241700000000048, 0.00010231900000000002, 0.00010227800000000078, 0.00010209699999999891, 0.00010280500000000095, 0.0001026810000000003, 0.0001026810000000003, 0.00010290299999999794, 0.00010215200000000119, 0.00010283300000000009, 0.00010195799999999922, 0.00010215299999999719, 0.00010201400000000097, 0.00010290299999999794, 0.00010273600000000258, 0.00010273600000000258, 0.00010216700000000023, 0.00010248699999999833, 0.00010211100000000195, 0.00010252800000000103, 0.00010218000000000033, 0.00010206899999999977, 0.00010198600000000183, 0.00010211100000000195, 0.0001021809999999998, 0.00010263800000000212, 0.00010279200000000085, 0.00010252800000000103, 0.00010288899999999837, 0.00010218000000000033, 0.0001026940000000004, 0.00010204100000000063, 0.00010262499999999855, 0.00010201400000000097, 0.0001020420000000001, 0.00010291699999999751, 0.00010272300000000248, 0.00010241700000000048, 0.00010259699999999941]</msg>
<status status="PASS" starttime="20201030 18:29:21.778" endtime="20201030 18:29:21.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.773" endtime="20201030 18:29:21.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:21.784" endtime="20201030 18:29:21.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.783" endtime="20201030 18:29:21.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.782" endtime="20201030 18:29:21.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.423" endtime="20201030 18:29:21.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.423" endtime="20201030 18:29:21.805"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.813" endtime="20201030 18:29:21.833"></status>
</kw>
<msg timestamp="20201030 18:29:21.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.812" endtime="20201030 18:29:21.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.835" endtime="20201030 18:29:21.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.837" endtime="20201030 18:29:21.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.809" endtime="20201030 18:29:21.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.807" endtime="20201030 18:29:21.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.846" endtime="20201030 18:29:22.134"></status>
</kw>
<msg timestamp="20201030 18:29:22.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021888694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.845" endtime="20201030 18:29:22.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021888694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.138" endtime="20201030 18:29:22.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.147" endtime="20201030 18:29:22.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.842" endtime="20201030 18:29:22.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.840" endtime="20201030 18:29:22.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:22.153" level="INFO">${RESULT} = [{'diff': 0.00010372300000000001}, {'diff': 0.00010390299999999894}, {'diff': 0.00010384800000000013}, {'diff': 0.00010322200000000004}, {'diff': 0.00010295800000000022}, {'diff': 0.000103597000000000...</msg>
<status status="PASS" starttime="20201030 18:29:22.150" endtime="20201030 18:29:22.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:22.157" level="INFO">${ACCURACY} = {'diff': [0.00010372300000000001, 0.00010390299999999894, 0.00010384800000000013, 0.00010322200000000004, 0.00010295800000000022, 0.00010359700000000041, 0.0001030139999999985, 0.0001031810000000008, ...</msg>
<status status="PASS" starttime="20201030 18:29:22.154" endtime="20201030 18:29:22.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.161" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 18:29:22.161" endtime="20201030 18:29:22.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.164" level="INFO">VALUE: [0.00010372300000000001, 0.00010390299999999894, 0.00010384800000000013, 0.00010322200000000004, 0.00010295800000000022, 0.00010359700000000041, 0.0001030139999999985, 0.0001031810000000008, 0.00010327799999999832, 0.00010352699999999909, 0.0001038749999999998, 0.00010363899999999912, 0.00010331999999999703, 0.00010312499999999905, 0.00010331900000000102, 0.00010395900000000069, 0.00010311099999999948, 0.00010307000000000024, 0.00010381999999999753, 0.00010293100000000055, 0.00010330600000000092, 0.0001038749999999998, 0.0001036940000000014, 0.00010315200000000219, 0.00010320800000000047, 0.00010345800000000072, 0.0001030420000000011, 0.00010299999999999893, 0.00010320899999999994, 0.00010316700000000123, 0.00010377699999999934, 0.00010347200000000029, 0.0001038879999999999, 0.00010341599999999854, 0.0001032359999999996, 0.00010380499999999848, 0.00010311099999999948, 0.00010309699999999991, 0.0001030139999999985, 0.00010383400000000056, 0.0001036949999999974, 0.00010316600000000176, 0.00010302799999999807, 0.00010327800000000179, 0.00010351400000000247, 0.00010359700000000041, 0.00010297199999999979, 0.00010338899999999887, 0.00010372200000000054, 0.00010376299999999977]</msg>
<status status="PASS" starttime="20201030 18:29:22.163" endtime="20201030 18:29:22.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.158" endtime="20201030 18:29:22.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:22.169" endtime="20201030 18:29:22.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.167" endtime="20201030 18:29:22.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.166" endtime="20201030 18:29:22.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.806" endtime="20201030 18:29:22.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.805" endtime="20201030 18:29:22.189"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.198" endtime="20201030 18:29:22.220"></status>
</kw>
<msg timestamp="20201030 18:29:22.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.197" endtime="20201030 18:29:22.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.221" endtime="20201030 18:29:22.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.224" endtime="20201030 18:29:22.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.194" endtime="20201030 18:29:22.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.192" endtime="20201030 18:29:22.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.233" endtime="20201030 18:29:22.518"></status>
</kw>
<msg timestamp="20201030 18:29:22.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023422208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023526319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.231" endtime="20201030 18:29:22.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023422208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023526319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.522" endtime="20201030 18:29:22.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.530" endtime="20201030 18:29:22.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.229" endtime="20201030 18:29:22.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.227" endtime="20201030 18:29:22.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:22.537" level="INFO">${RESULT} = [{'diff': 0.00010411100000000048}, {'diff': 0.00010430600000000192}, {'diff': 0.00010429200000000236}, {'diff': 0.00010395800000000122}, {'diff': 0.00010440199999999997}, {'diff': 0.000104875000000000...</msg>
<status status="PASS" starttime="20201030 18:29:22.534" endtime="20201030 18:29:22.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:22.541" level="INFO">${ACCURACY} = {'diff': [0.00010411100000000048, 0.00010430600000000192, 0.00010429200000000236, 0.00010395800000000122, 0.00010440199999999997, 0.0001048750000000008, 0.00010465299999999969, 0.00010438899999999987,...</msg>
<status status="PASS" starttime="20201030 18:29:22.538" endtime="20201030 18:29:22.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.545" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 18:29:22.544" endtime="20201030 18:29:22.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.548" level="INFO">VALUE: [0.00010411100000000048, 0.00010430600000000192, 0.00010429200000000236, 0.00010395800000000122, 0.00010440199999999997, 0.0001048750000000008, 0.00010465299999999969, 0.00010438899999999987, 0.00010416700000000223, 0.00010486099999999776, 0.00010444499999999815, 0.00010427799999999932, 0.00010490200000000047, 0.00010461100000000098, 0.00010429099999999941, 0.00010477799999999982, 0.00010491699999999951, 0.00010443099999999858, 0.0001046949999999984, 0.00010463900000000012, 0.00010430499999999898, 0.00010477700000000034, 0.00010401400000000297, 0.00010431899999999855, 0.0001040139999999995, 0.00010399999999999993, 0.00010426400000000322, 0.00010441699999999901, 0.00010458400000000131, 0.00010441699999999901, 0.00010490299999999994, 0.00010484700000000166, 0.0001047360000000011, 0.000104514, 0.00010418099999999833, 0.00010441700000000248, 0.00010462500000000055, 0.00010445800000000172, 0.00010476400000000025, 0.00010490200000000047, 0.00010483299999999862, 0.00010397199999999732, 0.00010459700000000141, 0.00010415299999999919, 0.00010411100000000048, 0.00010420800000000147, 0.00010425000000000018, 0.0001048750000000008, 0.0001042499999999967, 0.00010463900000000012]</msg>
<status status="PASS" starttime="20201030 18:29:22.546" endtime="20201030 18:29:22.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.541" endtime="20201030 18:29:22.549"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:22.553" endtime="20201030 18:29:22.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.552" endtime="20201030 18:29:22.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.550" endtime="20201030 18:29:22.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.190" endtime="20201030 18:29:22.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.190" endtime="20201030 18:29:22.574"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.582" endtime="20201030 18:29:22.602"></status>
</kw>
<msg timestamp="20201030 18:29:22.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.581" endtime="20201030 18:29:22.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.604" endtime="20201030 18:29:22.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.606" endtime="20201030 18:29:22.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.578" endtime="20201030 18:29:22.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.576" endtime="20201030 18:29:22.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.615" endtime="20201030 18:29:22.901"></status>
</kw>
<msg timestamp="20201030 18:29:22.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021892556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.614" endtime="20201030 18:29:22.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021892556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.905" endtime="20201030 18:29:22.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.913" endtime="20201030 18:29:22.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.611" endtime="20201030 18:29:22.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.609" endtime="20201030 18:29:22.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:22.920" level="INFO">${RESULT} = [{'diff': 0.00010547199999999882}, {'diff': 0.00010495899999999822}, {'diff': 0.0001053339999999986}, {'diff': 0.00010500000000000093}, {'diff': 0.00010497200000000179}, {'diff': 0.0001057639999999977...</msg>
<status status="PASS" starttime="20201030 18:29:22.916" endtime="20201030 18:29:22.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:22.927" level="INFO">${ACCURACY} = {'diff': [0.00010547199999999882, 0.00010495899999999822, 0.0001053339999999986, 0.00010500000000000093, 0.00010497200000000179, 0.00010576399999999778, 0.00010566599999999732, 0.00010512499999999758,...</msg>
<status status="PASS" starttime="20201030 18:29:22.921" endtime="20201030 18:29:22.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.931" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 18:29:22.930" endtime="20201030 18:29:22.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.933" level="INFO">VALUE: [0.00010547199999999882, 0.00010495899999999822, 0.0001053339999999986, 0.00010500000000000093, 0.00010497200000000179, 0.00010576399999999778, 0.00010566599999999732, 0.00010512499999999758, 0.00010525000000000118, 0.00010541700000000001, 0.00010581999999999953, 0.00010500000000000093, 0.000105820000000003, 0.00010583299999999962, 0.00010545799999999925, 0.00010513900000000062, 0.00010520900000000194, 0.00010575000000000168, 0.00010576400000000125, 0.00010499999999999746, 0.0001057360000000021, 0.00010543099999999958, 0.00010554200000000014, 0.00010497199999999832, 0.00010576399999999778, 0.00010530499999999998, 0.00010559700000000241, 0.00010583299999999962, 0.00010500000000000093, 0.00010498599999999789, 0.00010531999999999903, 0.00010500000000000093, 0.00010584699999999919, 0.00010517999999999986, 0.00010497200000000179, 0.00010583299999999962, 0.00010511099999999801, 0.00010561200000000145, 0.00010511099999999801, 0.00010519500000000237, 0.00010513900000000062, 0.00010547199999999882, 0.0001057079999999995, 0.0001050140000000005, 0.0001058889999999979, 0.0001058750000000018, 0.00010595799999999975, 0.00010543099999999958, 0.0001056949999999994, 0.00010515300000000019]</msg>
<status status="PASS" starttime="20201030 18:29:22.932" endtime="20201030 18:29:22.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.928" endtime="20201030 18:29:22.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:22.938" endtime="20201030 18:29:22.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.937" endtime="20201030 18:29:22.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.936" endtime="20201030 18:29:22.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.575" endtime="20201030 18:29:22.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.574" endtime="20201030 18:29:22.959"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.968" endtime="20201030 18:29:22.987"></status>
</kw>
<msg timestamp="20201030 18:29:22.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.966" endtime="20201030 18:29:22.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.988" endtime="20201030 18:29:22.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.991" endtime="20201030 18:29:22.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.964" endtime="20201030 18:29:22.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.961" endtime="20201030 18:29:22.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.999" endtime="20201030 18:29:23.286"></status>
</kw>
<msg timestamp="20201030 18:29:23.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.998" endtime="20201030 18:29:23.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.290" endtime="20201030 18:29:23.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.299" endtime="20201030 18:29:23.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.995" endtime="20201030 18:29:23.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.994" endtime="20201030 18:29:23.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:23.305" level="INFO">${RESULT} = [{'diff': 0.00010647199999999982}, {'diff': 0.00010682000000000053}, {'diff': 0.00010676399999999878}, {'diff': 0.00010630500000000098}, {'diff': 0.00010642999999999764}, {'diff': 0.000106333000000000...</msg>
<status status="PASS" starttime="20201030 18:29:23.302" endtime="20201030 18:29:23.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:23.309" level="INFO">${ACCURACY} = {'diff': [0.00010647199999999982, 0.00010682000000000053, 0.00010676399999999878, 0.00010630500000000098, 0.00010642999999999764, 0.00010633300000000012, 0.00010688900000000237, 0.00010600000000000193...</msg>
<status status="PASS" starttime="20201030 18:29:23.306" endtime="20201030 18:29:23.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.313" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 18:29:23.312" endtime="20201030 18:29:23.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.316" level="INFO">VALUE: [0.00010647199999999982, 0.00010682000000000053, 0.00010676399999999878, 0.00010630500000000098, 0.00010642999999999764, 0.00010633300000000012, 0.00010688900000000237, 0.00010600000000000193, 0.00010630600000000046, 0.00010680599999999749, 0.00010618100000000033, 0.00010617999999999739, 0.0001067080000000005, 0.00010666600000000179, 0.00010690299999999847, 0.00010669400000000093, 0.00010629199999999742, 0.00010648599999999939, 0.00010670899999999997, 0.0001066950000000004, 0.00010594499999999965, 0.00010688900000000237, 0.00010645800000000025, 0.00010659699999999994, 0.00010605500000000073, 0.00010661099999999951, 0.00010697200000000032, 0.00010684799999999967, 0.00010668100000000083, 0.00010673599999999964, 0.00010682000000000053, 0.00010645800000000025, 0.0001060140000000015, 0.00010602800000000107, 0.00010647299999999929, 0.00010654200000000114, 0.00010686099999999976, 0.00010661099999999951, 0.00010690299999999847, 0.00010597299999999879, 0.00010658300000000037, 0.00010615299999999772, 0.00010627799999999785, 0.00010598599999999889, 0.00010644400000000068, 0.00010658399999999985, 0.00010645900000000319, 0.00010676399999999878, 0.00010658399999999985, 0.00010634699999999969]</msg>
<status status="PASS" starttime="20201030 18:29:23.315" endtime="20201030 18:29:23.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.310" endtime="20201030 18:29:23.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:23.321" endtime="20201030 18:29:23.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.319" endtime="20201030 18:29:23.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.318" endtime="20201030 18:29:23.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.960" endtime="20201030 18:29:23.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.959" endtime="20201030 18:29:23.341"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.350" endtime="20201030 18:29:23.370"></status>
</kw>
<msg timestamp="20201030 18:29:23.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.348" endtime="20201030 18:29:23.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.372" endtime="20201030 18:29:23.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.374" endtime="20201030 18:29:23.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.346" endtime="20201030 18:29:23.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.344" endtime="20201030 18:29:23.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.383" endtime="20201030 18:29:23.669"></status>
</kw>
<msg timestamp="20201030 18:29:23.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023067542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023174639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.382" endtime="20201030 18:29:23.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023067542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023174639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.673" endtime="20201030 18:29:23.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.681" endtime="20201030 18:29:23.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.379" endtime="20201030 18:29:23.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.378" endtime="20201030 18:29:23.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:23.687" level="INFO">${RESULT} = [{'diff': 0.00010709700000000044}, {'diff': 0.00010741700000000201}, {'diff': 0.0001076950000000014}, {'diff': 0.00010708399999999688}, {'diff': 0.00010759699999999747}, {'diff': 0.0001078469999999977...</msg>
<status status="PASS" starttime="20201030 18:29:23.684" endtime="20201030 18:29:23.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:23.691" level="INFO">${ACCURACY} = {'diff': [0.00010709700000000044, 0.00010741700000000201, 0.0001076950000000014, 0.00010708399999999688, 0.00010759699999999747, 0.00010784699999999772, 0.00010742999999999864, 0.00010755500000000223,...</msg>
<status status="PASS" starttime="20201030 18:29:23.688" endtime="20201030 18:29:23.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.696" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 18:29:23.695" endtime="20201030 18:29:23.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.698" level="INFO">VALUE: [0.00010709700000000044, 0.00010741700000000201, 0.0001076950000000014, 0.00010708399999999688, 0.00010759699999999747, 0.00010784699999999772, 0.00010742999999999864, 0.00010755500000000223, 0.00010709700000000044, 0.00010758400000000085, 0.00010786100000000076, 0.00010698599999999989, 0.00010768100000000183, 0.00010761100000000051, 0.00010730499999999851, 0.00010726400000000275, 0.00010762500000000008, 0.0001075560000000017, 0.00010773600000000064, 0.00010697200000000032, 0.00010745900000000072, 0.00010702699999999912, 0.00010733299999999765, 0.00010763899999999965, 0.00010727800000000232, 0.0001077500000000002, 0.00010768099999999836, 0.00010783299999999815, 0.0001078889999999999, 0.00010791700000000251, 0.00010720799999999753, 0.00010744399999999821, 0.00010761099999999704, 0.00010748600000000039, 0.00010741699999999854, 0.00010713899999999915, 0.00010715299999999872, 0.0001072499999999997, 0.00010697299999999979, 0.00010697299999999979, 0.00010711100000000001, 0.00010786100000000076, 0.0001078889999999999, 0.00010699999999999946, 0.00010790299999999947, 0.0001070699999999973, 0.00010718000000000186, 0.00010715299999999872, 0.00010730599999999799, 0.00010749999999999996]</msg>
<status status="PASS" starttime="20201030 18:29:23.697" endtime="20201030 18:29:23.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.692" endtime="20201030 18:29:23.700"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:23.704" endtime="20201030 18:29:23.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.702" endtime="20201030 18:29:23.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.701" endtime="20201030 18:29:23.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.342" endtime="20201030 18:29:23.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.341" endtime="20201030 18:29:23.724"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.733" endtime="20201030 18:29:23.753"></status>
</kw>
<msg timestamp="20201030 18:29:23.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.731" endtime="20201030 18:29:23.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.755" endtime="20201030 18:29:23.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.757" endtime="20201030 18:29:23.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.729" endtime="20201030 18:29:23.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.727" endtime="20201030 18:29:23.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.766" endtime="20201030 18:29:24.051"></status>
</kw>
<msg timestamp="20201030 18:29:24.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.764" endtime="20201030 18:29:24.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:24.055" endtime="20201030 18:29:24.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.063" endtime="20201030 18:29:24.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.762" endtime="20201030 18:29:24.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.760" endtime="20201030 18:29:24.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:24.070" level="INFO">${RESULT} = [{'diff': 0.00010826399999999681}, {'diff': 0.00010819400000000243}, {'diff': 0.00010811100000000101}, {'diff': 0.00010870799999999903}, {'diff': 0.00010865300000000022}, {'diff': 0.000108014000000000...</msg>
<status status="PASS" starttime="20201030 18:29:24.067" endtime="20201030 18:29:24.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:24.075" level="INFO">${ACCURACY} = {'diff': [0.00010826399999999681, 0.00010819400000000243, 0.00010811100000000101, 0.00010870799999999903, 0.00010865300000000022, 0.00010801400000000003, 0.00010883399999999863, 0.00010855599999999924...</msg>
<status status="PASS" starttime="20201030 18:29:24.071" endtime="20201030 18:29:24.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.079" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 18:29:24.078" endtime="20201030 18:29:24.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.081" level="INFO">VALUE: [0.00010826399999999681, 0.00010819400000000243, 0.00010811100000000101, 0.00010870799999999903, 0.00010865300000000022, 0.00010801400000000003, 0.00010883399999999863, 0.00010855599999999924, 0.00010857000000000228, 0.00010818099999999886, 0.00010886099999999829, 0.00010845799999999878, 0.00010883299999999915, 0.0001080279999999996, 0.00010798600000000089, 0.00010890300000000047, 0.000108208000000002, 0.00010820900000000147, 0.00010876400000000078, 0.00010883299999999915, 0.00010815200000000025, 0.00010844399999999921, 0.0001088890000000009, 0.00010829199999999942, 0.00010801400000000003, 0.00010845899999999825, 0.0001081950000000019, 0.0001085699999999988, 0.00010831899999999908, 0.0001088890000000009, 0.00010829199999999942, 0.00010816699999999929, 0.00010868100000000283, 0.00010884699999999872, 0.00010875000000000121, 0.00010847300000000129, 0.00010815200000000025, 0.0001087219999999986, 0.0001087080000000025, 0.00010829199999999942, 0.00010884699999999872, 0.00010798600000000089, 0.00010865300000000022, 0.00010797200000000132, 0.00010872300000000154, 0.00010812500000000058, 0.00010881899999999958, 0.00010872200000000207, 0.00010875000000000121, 0.00010842999999999964]</msg>
<status status="PASS" starttime="20201030 18:29:24.080" endtime="20201030 18:29:24.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.075" endtime="20201030 18:29:24.083"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:24.086" endtime="20201030 18:29:24.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.085" endtime="20201030 18:29:24.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.084" endtime="20201030 18:29:24.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.725" endtime="20201030 18:29:24.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.725" endtime="20201030 18:29:24.107"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.115" endtime="20201030 18:29:24.136"></status>
</kw>
<msg timestamp="20201030 18:29:24.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.114" endtime="20201030 18:29:24.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.137" endtime="20201030 18:29:24.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.140" endtime="20201030 18:29:24.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.111" endtime="20201030 18:29:24.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.109" endtime="20201030 18:29:24.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.149" endtime="20201030 18:29:24.435"></status>
</kw>
<msg timestamp="20201030 18:29:24.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:24.147" endtime="20201030 18:29:24.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:24.439" endtime="20201030 18:29:24.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.448" endtime="20201030 18:29:24.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.145" endtime="20201030 18:29:24.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.143" endtime="20201030 18:29:24.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:24.454" level="INFO">${RESULT} = [{'diff': 0.00010998599999999942}, {'diff': 0.00010909700000000244}, {'diff': 0.00010895899999999875}, {'diff': 0.00010905500000000026}, {'diff': 0.00010979100000000144}, {'diff': 0.000109305000000000...</msg>
<status status="PASS" starttime="20201030 18:29:24.451" endtime="20201030 18:29:24.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:24.458" level="INFO">${ACCURACY} = {'diff': [0.00010998599999999942, 0.00010909700000000244, 0.00010895899999999875, 0.00010905500000000026, 0.00010979100000000144, 0.00010930500000000051, 0.00010898599999999842, 0.00010929199999999695...</msg>
<status status="PASS" starttime="20201030 18:29:24.455" endtime="20201030 18:29:24.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.463" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 18:29:24.461" endtime="20201030 18:29:24.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.465" level="INFO">VALUE: [0.00010998599999999942, 0.00010909700000000244, 0.00010895899999999875, 0.00010905500000000026, 0.00010979100000000144, 0.00010930500000000051, 0.00010898599999999842, 0.00010929199999999695, 0.00010919399999999996, 0.00010944499999999968, 0.00010968099999999689, 0.00010909799999999845, 0.00010919499999999943, 0.00010940199999999803, 0.00010919399999999996, 0.00010969400000000046, 0.0001094029999999975, 0.00010900000000000146, 0.00010969499999999993, 0.00010901399999999756, 0.00010904200000000017, 0.00010991600000000157, 0.00010898599999999842, 0.00010952700000000162, 0.000109208000000003, 0.00010954200000000067, 0.00010951400000000153, 0.00010988899999999843, 0.00010945900000000272, 0.00010983399999999963, 0.00010904200000000017, 0.00010947199999999935, 0.00010961099999999904, 0.00010943000000000064, 0.00010945799999999978, 0.00010969400000000046, 0.00010912500000000158, 0.00010897199999999885, 0.00010944500000000315, 0.00010984699999999972, 0.00010966600000000132, 0.00010980499999999754, 0.00010941700000000054, 0.00010966700000000079, 0.00010916700000000029, 0.00010947200000000282, 0.00010911099999999854, 0.00010922200000000257, 0.00010934699999999922, 0.00010980599999999702]</msg>
<status status="PASS" starttime="20201030 18:29:24.464" endtime="20201030 18:29:24.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.459" endtime="20201030 18:29:24.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:24.470" endtime="20201030 18:29:24.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.468" endtime="20201030 18:29:24.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.467" endtime="20201030 18:29:24.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.108" endtime="20201030 18:29:24.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.107" endtime="20201030 18:29:24.490"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.499" endtime="20201030 18:29:24.520"></status>
</kw>
<msg timestamp="20201030 18:29:24.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.497" endtime="20201030 18:29:24.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.521" endtime="20201030 18:29:24.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.524" endtime="20201030 18:29:24.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.495" endtime="20201030 18:29:24.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.493" endtime="20201030 18:29:24.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.532" endtime="20201030 18:29:24.817"></status>
</kw>
<msg timestamp="20201030 18:29:24.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02269675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022807236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:24.531" endtime="20201030 18:29:24.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02269675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022807236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:24.821" endtime="20201030 18:29:24.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.829" endtime="20201030 18:29:24.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.528" endtime="20201030 18:29:24.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.527" endtime="20201030 18:29:24.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:24.836" level="INFO">${RESULT} = [{'diff': 0.00011048599999999992}, {'diff': 0.00011083300000000115}, {'diff': 0.00011076399999999931}, {'diff': 0.00011087499999999986}, {'diff': 0.000110902999999999}, {'diff': 0.00011059799999999995...</msg>
<status status="PASS" starttime="20201030 18:29:24.833" endtime="20201030 18:29:24.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:24.840" level="INFO">${ACCURACY} = {'diff': [0.00011048599999999992, 0.00011083300000000115, 0.00011076399999999931, 0.00011087499999999986, 0.000110902999999999, 0.00011059799999999995, 0.0001100549999999978, 0.00011043000000000164, 0...</msg>
<status status="PASS" starttime="20201030 18:29:24.837" endtime="20201030 18:29:24.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.844" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 18:29:24.843" endtime="20201030 18:29:24.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.846" level="INFO">VALUE: [0.00011048599999999992, 0.00011083300000000115, 0.00011076399999999931, 0.00011087499999999986, 0.000110902999999999, 0.00011059799999999995, 0.0001100549999999978, 0.00011043000000000164, 0.00011054099999999872, 0.00011024999999999924, 0.00011036199999999927, 0.000110902999999999, 0.00011061100000000004, 0.0001107090000000005, 0.00011006900000000083, 0.00011083300000000115, 0.00011059700000000047, 0.00011079100000000244, 0.00010999999999999899, 0.00010997199999999985, 0.00011026399999999881, 0.00011027799999999838, 0.00011058399999999691, 0.00011018000000000139, 0.00011044399999999774, 0.00011045800000000078, 0.00011015299999999825, 0.00010997199999999985, 0.00010998599999999942, 0.00011013899999999868, 0.00011073600000000017, 0.00011092999999999867, 0.00011067999999999842, 0.00011047200000000035, 0.00011083300000000115, 0.00010994400000000071, 0.00011045900000000025, 0.000110209, 0.0001107220000000006, 0.000110209, 0.00011024999999999924, 0.00011077799999999888, 0.0001107220000000006, 0.00011056900000000133, 0.00011029199999999795, 0.00011027800000000185, 0.00011070799999999756, 0.00011068100000000136, 0.00011015300000000172, 0.00011083400000000063]</msg>
<status status="PASS" starttime="20201030 18:29:24.845" endtime="20201030 18:29:24.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.840" endtime="20201030 18:29:24.852"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:24.856" endtime="20201030 18:29:24.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.854" endtime="20201030 18:29:24.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.853" endtime="20201030 18:29:24.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.491" endtime="20201030 18:29:24.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.491" endtime="20201030 18:29:24.877"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.885" endtime="20201030 18:29:24.905"></status>
</kw>
<msg timestamp="20201030 18:29:24.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.884" endtime="20201030 18:29:24.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.906" endtime="20201030 18:29:24.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.909" endtime="20201030 18:29:24.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.881" endtime="20201030 18:29:24.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.879" endtime="20201030 18:29:24.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.917" endtime="20201030 18:29:25.203"></status>
</kw>
<msg timestamp="20201030 18:29:25.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021810986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021922458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:24.916" endtime="20201030 18:29:25.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021810986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021922458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.207" endtime="20201030 18:29:25.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.215" endtime="20201030 18:29:25.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.913" endtime="20201030 18:29:25.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.912" endtime="20201030 18:29:25.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:25.221" level="INFO">${RESULT} = [{'diff': 0.00011147199999999788}, {'diff': 0.0001115549999999993}, {'diff': 0.00011188899999999696}, {'diff': 0.00011101399999999956}, {'diff': 0.00011169499999999846}, {'diff': 0.0001118199999999985...</msg>
<status status="PASS" starttime="20201030 18:29:25.218" endtime="20201030 18:29:25.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:25.226" level="INFO">${ACCURACY} = {'diff': [0.00011147199999999788, 0.0001115549999999993, 0.00011188899999999696, 0.00011101399999999956, 0.00011169499999999846, 0.00011181999999999859, 0.00011132000000000156, 0.00011106900000000183,...</msg>
<status status="PASS" starttime="20201030 18:29:25.222" endtime="20201030 18:29:25.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.230" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 18:29:25.229" endtime="20201030 18:29:25.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.233" level="INFO">VALUE: [0.00011147199999999788, 0.0001115549999999993, 0.00011188899999999696, 0.00011101399999999956, 0.00011169499999999846, 0.00011181999999999859, 0.00011132000000000156, 0.00011106900000000183, 0.00011162500000000061, 0.00011177799999999988, 0.000111903, 0.0001110549999999988, 0.00011101399999999956, 0.00011099999999999999, 0.00011126400000000328, 0.00011182000000000206, 0.00011115199999999978, 0.00011129099999999947, 0.00011181900000000258, 0.00011169399999999899, 0.00011144500000000168, 0.00011102799999999913, 0.000111596999999998, 0.00011143099999999864, 0.00011179200000000292, 0.00011188799999999749, 0.00011112500000000011, 0.0001114029999999995, 0.00011112500000000011, 0.00011181899999999911, 0.00011131999999999809, 0.00011158400000000138, 0.00011169499999999846, 0.00011097300000000032, 0.0001112769999999999, 0.0001119160000000001, 0.00011099999999999999, 0.00011159800000000095, 0.00011141700000000254, 0.00011166599999999985, 0.0001117770000000004, 0.00011147199999999788, 0.00011101399999999956, 0.00011131899999999861, 0.00011129099999999947, 0.00011184700000000172, 0.00011186099999999782, 0.0001110419999999987, 0.00011173600000000117, 0.00011094500000000118]</msg>
<status status="PASS" starttime="20201030 18:29:25.231" endtime="20201030 18:29:25.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.227" endtime="20201030 18:29:25.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:25.238" endtime="20201030 18:29:25.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.236" endtime="20201030 18:29:25.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.235" endtime="20201030 18:29:25.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.877" endtime="20201030 18:29:25.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.877" endtime="20201030 18:29:25.258"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.267" endtime="20201030 18:29:25.287"></status>
</kw>
<msg timestamp="20201030 18:29:25.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.265" endtime="20201030 18:29:25.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.289" endtime="20201030 18:29:25.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.291" endtime="20201030 18:29:25.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.263" endtime="20201030 18:29:25.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.261" endtime="20201030 18:29:25.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.300" endtime="20201030 18:29:25.587"></status>
</kw>
<msg timestamp="20201030 18:29:25.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022161292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.299" endtime="20201030 18:29:25.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022161292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.592" endtime="20201030 18:29:25.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.600" endtime="20201030 18:29:25.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.296" endtime="20201030 18:29:25.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.294" endtime="20201030 18:29:25.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:25.606" level="INFO">${RESULT} = [{'diff': 0.00011256899999999986}, {'diff': 0.00011244499999999921}, {'diff': 0.000111903}, {'diff': 0.00011220899999999853}, {'diff': 0.00011205599999999927}, {'diff': 0.00011261199999999805}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:29:25.603" endtime="20201030 18:29:25.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:25.610" level="INFO">${ACCURACY} = {'diff': [0.00011256899999999986, 0.00011244499999999921, 0.000111903, 0.00011220899999999853, 0.00011205599999999927, 0.00011261199999999805, 0.00011283299999999968, 0.00011269399999999999, 0.0001121...</msg>
<status status="PASS" starttime="20201030 18:29:25.607" endtime="20201030 18:29:25.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.615" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 18:29:25.614" endtime="20201030 18:29:25.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.617" level="INFO">VALUE: [0.00011256899999999986, 0.00011244499999999921, 0.000111903, 0.00011220899999999853, 0.00011205599999999927, 0.00011261199999999805, 0.00011283299999999968, 0.00011269399999999999, 0.00011213899999999721, 0.00011284699999999925, 0.00011247200000000235, 0.00011290299999999753, 0.00011286099999999882, 0.00011283399999999916, 0.00011265299999999728, 0.00011254100000000072, 0.00011284699999999925, 0.00011247199999999888, 0.00011262499999999814, 0.00011270799999999956, 0.00011288899999999796, 0.00011220899999999853, 0.00011287500000000186, 0.00011245799999999931, 0.0001125550000000003, 0.00011269399999999999, 0.00011226400000000081, 0.00011222199999999863, 0.00011287500000000186, 0.00011251400000000106, 0.00011195900000000175, 0.00011230599999999952, 0.00011281900000000011, 0.00011201400000000056, 0.00011211100000000154, 0.00011219399999999949, 0.00011288900000000143, 0.00011258399999999891, 0.00011276300000000183, 0.00011291700000000057, 0.00011255599999999977, 0.00011258299999999943, 0.00011202800000000013, 0.00011284699999999925, 0.000112596999999999, 0.00011216699999999982, 0.00011202800000000013, 0.00011249999999999802, 0.00011256999999999934, 0.00011212499999999764]</msg>
<status status="PASS" starttime="20201030 18:29:25.616" endtime="20201030 18:29:25.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.611" endtime="20201030 18:29:25.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:25.622" endtime="20201030 18:29:25.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.620" endtime="20201030 18:29:25.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.619" endtime="20201030 18:29:25.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.259" endtime="20201030 18:29:25.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.259" endtime="20201030 18:29:25.643"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.651" endtime="20201030 18:29:25.672"></status>
</kw>
<msg timestamp="20201030 18:29:25.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.649" endtime="20201030 18:29:25.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.674" endtime="20201030 18:29:25.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.676" endtime="20201030 18:29:25.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.647" endtime="20201030 18:29:25.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.645" endtime="20201030 18:29:25.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.685" endtime="20201030 18:29:25.971"></status>
</kw>
<msg timestamp="20201030 18:29:25.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022881306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022994861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.683" endtime="20201030 18:29:25.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022881306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022994861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.975" endtime="20201030 18:29:25.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.983" endtime="20201030 18:29:25.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.681" endtime="20201030 18:29:25.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.679" endtime="20201030 18:29:25.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:25.990" level="INFO">${RESULT} = [{'diff': 0.00011355499999999782}, {'diff': 0.00011311099999999907}, {'diff': 0.00011305600000000027}, {'diff': 0.0001135420000000012}, {'diff': 0.00011294499999999971}, {'diff': 0.0001131390000000016...</msg>
<status status="PASS" starttime="20201030 18:29:25.987" endtime="20201030 18:29:25.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:25.994" level="INFO">${ACCURACY} = {'diff': [0.00011355499999999782, 0.00011311099999999907, 0.00011305600000000027, 0.0001135420000000012, 0.00011294499999999971, 0.00011313900000000168, 0.00011315199999999831, 0.00011348599999999945,...</msg>
<status status="PASS" starttime="20201030 18:29:25.991" endtime="20201030 18:29:25.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.998" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 18:29:25.997" endtime="20201030 18:29:25.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.001" level="INFO">VALUE: [0.00011355499999999782, 0.00011311099999999907, 0.00011305600000000027, 0.0001135420000000012, 0.00011294499999999971, 0.00011313900000000168, 0.00011315199999999831, 0.00011348599999999945, 0.00011376399999999884, 0.0001135689999999974, 0.000113597, 0.00011355600000000077, 0.0001137359999999997, 0.00011355600000000077, 0.00011312499999999864, 0.00011382000000000059, 0.00011390299999999853, 0.00011358299999999696, 0.00011362499999999914, 0.00011330600000000052, 0.00011341700000000107, 0.0001135559999999973, 0.00011334799999999923, 0.00011344400000000074, 0.00011330499999999757, 0.00011383299999999721, 0.00011344399999999727, 0.00011365299999999828, 0.00011302800000000113, 0.00011365200000000228, 0.00011352799999999816, 0.00011368100000000089, 0.00011355600000000077, 0.00011367999999999795, 0.00011312499999999864, 0.00011330500000000104, 0.00011376399999999884, 0.00011302800000000113, 0.00011344500000000021, 0.0001138749999999994, 0.00011369500000000046, 0.00011334699999999975, 0.00011355499999999782, 0.00011381899999999764, 0.00011343100000000064, 0.00011386099999999982, 0.00011298600000000242, 0.00011326399999999834, 0.00011295899999999928, 0.0001138749999999994]</msg>
<status status="PASS" starttime="20201030 18:29:25.999" endtime="20201030 18:29:26.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.995" endtime="20201030 18:29:26.003"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:26.006" endtime="20201030 18:29:26.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.005" endtime="20201030 18:29:26.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.004" endtime="20201030 18:29:26.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.643" endtime="20201030 18:29:26.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.643" endtime="20201030 18:29:26.027"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.035" endtime="20201030 18:29:26.055"></status>
</kw>
<msg timestamp="20201030 18:29:26.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.034" endtime="20201030 18:29:26.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.057" endtime="20201030 18:29:26.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.059" endtime="20201030 18:29:26.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.031" endtime="20201030 18:29:26.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.029" endtime="20201030 18:29:26.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.068" endtime="20201030 18:29:26.354"></status>
</kw>
<msg timestamp="20201030 18:29:26.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.067" endtime="20201030 18:29:26.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.358" endtime="20201030 18:29:26.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.366" endtime="20201030 18:29:26.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.064" endtime="20201030 18:29:26.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.062" endtime="20201030 18:29:26.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:26.373" level="INFO">${RESULT} = [{'diff': 0.00011441700000000207}, {'diff': 0.00011418099999999792}, {'diff': 0.00011462500000000014}, {'diff': 0.00011459800000000048}, {'diff': 0.00011430499999999857}, {'diff': 0.000114304999999998...</msg>
<status status="PASS" starttime="20201030 18:29:26.370" endtime="20201030 18:29:26.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:26.380" level="INFO">${ACCURACY} = {'diff': [0.00011441700000000207, 0.00011418099999999792, 0.00011462500000000014, 0.00011459800000000048, 0.00011430499999999857, 0.00011430499999999857, 0.00011417999999999845, 0.00011458300000000143...</msg>
<status status="PASS" starttime="20201030 18:29:26.374" endtime="20201030 18:29:26.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.384" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 18:29:26.383" endtime="20201030 18:29:26.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.387" level="INFO">VALUE: [0.00011441700000000207, 0.00011418099999999792, 0.00011462500000000014, 0.00011459800000000048, 0.00011430499999999857, 0.00011430499999999857, 0.00011417999999999845, 0.00011458300000000143, 0.00011402799999999866, 0.00011397200000000038, 0.00011419499999999749, 0.00011401400000000256, 0.00011448699999999992, 0.00011426400000000281, 0.00011399999999999952, 0.00011488899999999996, 0.00011493099999999867, 0.0001147360000000007, 0.00011491700000000257, 0.00011491599999999963, 0.00011398699999999942, 0.00011477699999999993, 0.00011398599999999995, 0.00011469399999999852, 0.00011395799999999734, 0.00011457000000000134, 0.00011398599999999995, 0.0001140420000000017, 0.00011427800000000238, 0.00011411199999999955, 0.00011490200000000006, 0.00011430499999999857, 0.0001147499999999968, 0.00011472199999999766, 0.00011466699999999885, 0.00011486100000000082, 0.00011397299999999985, 0.00011481999999999812, 0.00011426299999999986, 0.00011434700000000075, 0.00011398599999999995, 0.00011475000000000027, 0.00011440299999999903, 0.00011419500000000096, 0.00011441700000000207, 0.00011459800000000048, 0.00011457000000000134, 0.00011413800000000321, 0.00011443099999999817, 0.00011454199999999873]</msg>
<status status="PASS" starttime="20201030 18:29:26.385" endtime="20201030 18:29:26.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.381" endtime="20201030 18:29:26.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:26.391" endtime="20201030 18:29:26.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.390" endtime="20201030 18:29:26.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.389" endtime="20201030 18:29:26.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.028" endtime="20201030 18:29:26.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.027" endtime="20201030 18:29:26.412"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.421" endtime="20201030 18:29:26.441"></status>
</kw>
<msg timestamp="20201030 18:29:26.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.419" endtime="20201030 18:29:26.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.442" endtime="20201030 18:29:26.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.445" endtime="20201030 18:29:26.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.416" endtime="20201030 18:29:26.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.414" endtime="20201030 18:29:26.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.453" endtime="20201030 18:29:26.740"></status>
</kw>
<msg timestamp="20201030 18:29:26.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.452" endtime="20201030 18:29:26.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.745" endtime="20201030 18:29:26.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.753" endtime="20201030 18:29:26.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.449" endtime="20201030 18:29:26.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.448" endtime="20201030 18:29:26.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:26.759" level="INFO">${RESULT} = [{'diff': 0.00011583299999999921}, {'diff': 0.00011575000000000127}, {'diff': 0.000115597000000002}, {'diff': 0.00011545799999999884}, {'diff': 0.00011497300000000085}, {'diff': 0.000115597000000002},...</msg>
<status status="PASS" starttime="20201030 18:29:26.756" endtime="20201030 18:29:26.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:26.763" level="INFO">${ACCURACY} = {'diff': [0.00011583299999999921, 0.00011575000000000127, 0.000115597000000002, 0.00011545799999999884, 0.00011497300000000085, 0.000115597000000002, 0.00011583299999999921, 0.00011500000000000052, 0....</msg>
<status status="PASS" starttime="20201030 18:29:26.760" endtime="20201030 18:29:26.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.767" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 18:29:26.767" endtime="20201030 18:29:26.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.770" level="INFO">VALUE: [0.00011583299999999921, 0.00011575000000000127, 0.000115597000000002, 0.00011545799999999884, 0.00011497300000000085, 0.000115597000000002, 0.00011583299999999921, 0.00011500000000000052, 0.00011500000000000052, 0.0001154169999999996, 0.00011502799999999966, 0.0001159170000000001, 0.00011533400000000166, 0.00011498700000000042, 0.00011501400000000009, 0.00011547199999999841, 0.00011506900000000236, 0.00011544399999999927, 0.00011533399999999819, 0.00011544500000000221, 0.0001151109999999976, 0.00011569500000000246, 0.00011500000000000052, 0.00011570799999999909, 0.00011531899999999914, 0.00011544399999999927, 0.00011501400000000009, 0.00011545900000000178, 0.00011497299999999738, 0.00011559800000000148, 0.00011572199999999866, 0.00011551400000000059, 0.00011586099999999835, 0.00011580500000000007, 0.00011588900000000096, 0.00011566699999999985, 0.00011561100000000157, 0.00011504199999999923, 0.00011583399999999869, 0.00011500000000000052, 0.00011547200000000188, 0.00011566600000000038, 0.00011567999999999995, 0.00011520800000000206, 0.00011559799999999801, 0.00011516699999999935, 0.00011569500000000246, 0.00011566699999999985, 0.00011511100000000107, 0.00011547200000000188]</msg>
<status status="PASS" starttime="20201030 18:29:26.769" endtime="20201030 18:29:26.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.764" endtime="20201030 18:29:26.771"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:26.775" endtime="20201030 18:29:26.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.773" endtime="20201030 18:29:26.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.772" endtime="20201030 18:29:26.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.413" endtime="20201030 18:29:26.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.412" endtime="20201030 18:29:26.795"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.804" endtime="20201030 18:29:26.825"></status>
</kw>
<msg timestamp="20201030 18:29:26.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.802" endtime="20201030 18:29:26.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.827" endtime="20201030 18:29:26.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.829" endtime="20201030 18:29:26.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.800" endtime="20201030 18:29:26.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.798" endtime="20201030 18:29:26.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.838" endtime="20201030 18:29:27.124"></status>
</kw>
<msg timestamp="20201030 18:29:27.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023079139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023196014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.837" endtime="20201030 18:29:27.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023079139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023196014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.128" endtime="20201030 18:29:27.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.136" endtime="20201030 18:29:27.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.834" endtime="20201030 18:29:27.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.832" endtime="20201030 18:29:27.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:27.142" level="INFO">${RESULT} = [{'diff': 0.0001168750000000024}, {'diff': 0.00011600000000000152}, {'diff': 0.00011620800000000306}, {'diff': 0.00011658399999999944}, {'diff': 0.00011666700000000085}, {'diff': 0.0001169020000000020...</msg>
<status status="PASS" starttime="20201030 18:29:27.139" endtime="20201030 18:29:27.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:27.146" level="INFO">${ACCURACY} = {'diff': [0.0001168750000000024, 0.00011600000000000152, 0.00011620800000000306, 0.00011658399999999944, 0.00011666700000000085, 0.00011690200000000206, 0.00011612500000000164, 0.0001164300000000007, ...</msg>
<status status="PASS" starttime="20201030 18:29:27.143" endtime="20201030 18:29:27.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.151" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 18:29:27.150" endtime="20201030 18:29:27.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.153" level="INFO">VALUE: [0.0001168750000000024, 0.00011600000000000152, 0.00011620800000000306, 0.00011658399999999944, 0.00011666700000000085, 0.00011690200000000206, 0.00011612500000000164, 0.0001164300000000007, 0.00011625000000000177, 0.00011631999999999962, 0.00011601400000000109, 0.00011600000000000152, 0.00011598600000000195, 0.0001160689999999999, 0.00011677800000000141, 0.00011605499999999686, 0.00011676399999999837, 0.00011612499999999817, 0.00011676400000000184, 0.00011623599999999873, 0.00011615300000000078, 0.0001160689999999999, 0.00011618000000000045, 0.00011630500000000057, 0.00011668000000000095, 0.0001160559999999998, 0.00011609699999999903, 0.00011644499999999974, 0.00011675000000000227, 0.00011670899999999956, 0.00011681900000000064, 0.00011693100000000067, 0.00011666700000000085, 0.00011597200000000238, 0.00011680600000000055, 0.00011627800000000091, 0.00011604200000000023, 0.00011613900000000121, 0.00011658299999999996, 0.00011598599999999848, 0.0001165690000000004, 0.00011604099999999729, 0.00011630600000000005, 0.00011666700000000085, 0.00011686099999999935, 0.0001164170000000006, 0.00011602700000000118, 0.0001169300000000012, 0.0001167499999999988, 0.00011615300000000078]</msg>
<status status="PASS" starttime="20201030 18:29:27.152" endtime="20201030 18:29:27.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.147" endtime="20201030 18:29:27.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:27.159" endtime="20201030 18:29:27.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.157" endtime="20201030 18:29:27.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.156" endtime="20201030 18:29:27.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.796" endtime="20201030 18:29:27.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.796" endtime="20201030 18:29:27.179"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.188" endtime="20201030 18:29:27.209"></status>
</kw>
<msg timestamp="20201030 18:29:27.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.186" endtime="20201030 18:29:27.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.210" endtime="20201030 18:29:27.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.212" endtime="20201030 18:29:27.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.184" endtime="20201030 18:29:27.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.182" endtime="20201030 18:29:27.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.221" endtime="20201030 18:29:27.507"></status>
</kw>
<msg timestamp="20201030 18:29:27.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02229425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:27.220" endtime="20201030 18:29:27.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02229425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:27.511" endtime="20201030 18:29:27.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.519" endtime="20201030 18:29:27.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.217" endtime="20201030 18:29:27.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.216" endtime="20201030 18:29:27.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:27.526" level="INFO">${RESULT} = [{'diff': 0.00011768099999999795}, {'diff': 0.00011718100000000092}, {'diff': 0.00011770800000000109}, {'diff': 0.00011716600000000188}, {'diff': 0.00011697199999999991}, {'diff': 0.000117429999999998...</msg>
<status status="PASS" starttime="20201030 18:29:27.523" endtime="20201030 18:29:27.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:27.530" level="INFO">${ACCURACY} = {'diff': [0.00011768099999999795, 0.00011718100000000092, 0.00011770800000000109, 0.00011716600000000188, 0.00011697199999999991, 0.00011742999999999823, 0.00011713899999999874, 0.00011734700000000028...</msg>
<status status="PASS" starttime="20201030 18:29:27.527" endtime="20201030 18:29:27.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.535" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 18:29:27.534" endtime="20201030 18:29:27.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.537" level="INFO">VALUE: [0.00011768099999999795, 0.00011718100000000092, 0.00011770800000000109, 0.00011716600000000188, 0.00011697199999999991, 0.00011742999999999823, 0.00011713899999999874, 0.00011734700000000028, 0.0001175560000000013, 0.00011712500000000264, 0.00011715200000000231, 0.00011740199999999909, 0.00011725000000000277, 0.00011716699999999788, 0.00011726399999999887, 0.00011722200000000016, 0.00011712499999999917, 0.00011765299999999881, 0.00011759800000000001, 0.00011772200000000066, 0.00011783300000000121, 0.00011758300000000096, 0.00011750000000000302, 0.0001178889999999995, 0.00011759700000000053, 0.00011729200000000148, 0.00011759800000000001, 0.000117388999999999, 0.00011755499999999836, 0.00011713899999999874, 0.00011712500000000264, 0.00011762499999999967, 0.0001170560000000008, 0.00011699999999999905, 0.0001177499999999998, 0.00011769400000000152, 0.00011745800000000084, 0.00011784700000000078, 0.0001170690000000009, 0.00011730600000000105, 0.00011791699999999863, 0.0001177499999999998, 0.00011762499999999967, 0.00011781899999999818, 0.00011734700000000028, 0.0001178889999999995, 0.00011756899999999793, 0.00011790300000000253, 0.00011700000000000252, 0.00011740300000000203]</msg>
<status status="PASS" starttime="20201030 18:29:27.536" endtime="20201030 18:29:27.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.531" endtime="20201030 18:29:27.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:27.542" endtime="20201030 18:29:27.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.541" endtime="20201030 18:29:27.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.540" endtime="20201030 18:29:27.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.180" endtime="20201030 18:29:27.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.180" endtime="20201030 18:29:27.563"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.571" endtime="20201030 18:29:27.592"></status>
</kw>
<msg timestamp="20201030 18:29:27.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.570" endtime="20201030 18:29:27.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.594" endtime="20201030 18:29:27.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.596" endtime="20201030 18:29:27.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.567" endtime="20201030 18:29:27.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.565" endtime="20201030 18:29:27.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.605" endtime="20201030 18:29:27.891"></status>
</kw>
<msg timestamp="20201030 18:29:27.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.603" endtime="20201030 18:29:27.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.896" endtime="20201030 18:29:27.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.904" endtime="20201030 18:29:27.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.601" endtime="20201030 18:29:27.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.599" endtime="20201030 18:29:27.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:27.910" level="INFO">${RESULT} = [{'diff': 0.00011869499999999852}, {'diff': 0.000118389}, {'diff': 0.00011884699999999832}, {'diff': 0.00011845799999999837}, {'diff': 0.00011883299999999875}, {'diff': 0.00011854099999999979}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:29:27.907" endtime="20201030 18:29:27.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:27.914" level="INFO">${ACCURACY} = {'diff': [0.00011869499999999852, 0.000118389, 0.00011884699999999832, 0.00011845799999999837, 0.00011883299999999875, 0.00011854099999999979, 0.00011851400000000012, 0.00011816699999999888, 0.0001185...</msg>
<status status="PASS" starttime="20201030 18:29:27.911" endtime="20201030 18:29:27.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.919" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 18:29:27.918" endtime="20201030 18:29:27.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.921" level="INFO">VALUE: [0.00011869499999999852, 0.000118389, 0.00011884699999999832, 0.00011845799999999837, 0.00011883299999999875, 0.00011854099999999979, 0.00011851400000000012, 0.00011816699999999888, 0.00011855599999999883, 0.00011840300000000303, 0.00011855599999999883, 0.00011887500000000092, 0.00011816599999999941, 0.00011868100000000242, 0.0001184309999999987, 0.00011881899999999918, 0.00011820800000000159, 0.00011830599999999858, 0.00011798699999999995, 0.00011819400000000202, 0.00011854099999999979, 0.00011850000000000055, 0.00011869400000000252, 0.00011819400000000202, 0.00011865299999999981, 0.00011802799999999919, 0.0001181249999999967, 0.00011830599999999858, 0.0001184439999999988, 0.00011887500000000092, 0.00011855499999999936, 0.00011876400000000037, 0.00011847200000000141, 0.00011855599999999883, 0.00011842999999999923, 0.00011882000000000212, 0.00011890300000000006, 0.00011831900000000214, 0.00011854099999999979, 0.00011881899999999918, 0.00011870799999999862, 0.00011837500000000042, 0.00011797200000000091, 0.00011854199999999926, 0.00011833299999999825, 0.0001185690000000024, 0.00011877799999999994, 0.00011829099999999954, 0.00011804200000000223, 0.00011809700000000103]</msg>
<status status="PASS" starttime="20201030 18:29:27.920" endtime="20201030 18:29:27.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.915" endtime="20201030 18:29:27.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:27.926" endtime="20201030 18:29:27.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.924" endtime="20201030 18:29:27.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.923" endtime="20201030 18:29:27.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.564" endtime="20201030 18:29:27.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.563" endtime="20201030 18:29:27.947"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.955" endtime="20201030 18:29:27.977"></status>
</kw>
<msg timestamp="20201030 18:29:27.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.954" endtime="20201030 18:29:27.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.978" endtime="20201030 18:29:27.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.981" endtime="20201030 18:29:27.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.951" endtime="20201030 18:29:27.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.949" endtime="20201030 18:29:27.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.990" endtime="20201030 18:29:28.275"></status>
</kw>
<msg timestamp="20201030 18:29:28.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023049903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023169792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.988" endtime="20201030 18:29:28.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023049903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023169792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:28.279" endtime="20201030 18:29:28.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.292" endtime="20201030 18:29:28.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.986" endtime="20201030 18:29:28.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.984" endtime="20201030 18:29:28.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:28.299" level="INFO">${RESULT} = [{'diff': 0.0001198890000000015}, {'diff': 0.00011987500000000192}, {'diff': 0.00011993000000000073}, {'diff': 0.00011959699999999907}, {'diff': 0.00011916699999999988}, {'diff': 0.0001189860000000014...</msg>
<status status="PASS" starttime="20201030 18:29:28.296" endtime="20201030 18:29:28.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:28.303" level="INFO">${ACCURACY} = {'diff': [0.0001198890000000015, 0.00011987500000000192, 0.00011993000000000073, 0.00011959699999999907, 0.00011916699999999988, 0.00011898600000000148, 0.00011931899999999968, 0.00011988899999999802,...</msg>
<status status="PASS" starttime="20201030 18:29:28.300" endtime="20201030 18:29:28.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.308" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 18:29:28.307" endtime="20201030 18:29:28.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.310" level="INFO">VALUE: [0.0001198890000000015, 0.00011987500000000192, 0.00011993000000000073, 0.00011959699999999907, 0.00011916699999999988, 0.00011898600000000148, 0.00011931899999999968, 0.00011988899999999802, 0.00011951300000000165, 0.0001197089999999991, 0.00011984699999999932, 0.00011904100000000029, 0.00011912500000000117, 0.0001197500000000018, 0.00011900000000000105, 0.00011990300000000106, 0.00011944500000000274, 0.0001190699999999989, 0.00011981999999999965, 0.00011983300000000321, 0.0001198890000000015, 0.00011988899999999802, 0.00011905599999999933, 0.00011919499999999902, 0.00011904199999999976, 0.00011908399999999847, 0.00011901300000000115, 0.00011915200000000084, 0.00011991600000000116, 0.00011972199999999919, 0.00011954199999999679, 0.0001194439999999998, 0.00011972199999999919, 0.00011894499999999877, 0.0001197089999999991, 0.00011970799999999962, 0.00011959699999999907, 0.00011902800000000019, 0.00011897200000000191, 0.0001194029999999971, 0.00011898600000000148, 0.00011913899999999727, 0.00011969499999999952, 0.00011911200000000108, 0.0001196249999999982, 0.00011941699999999666, 0.00011970799999999962, 0.00011915300000000031, 0.00011926400000000087, 0.00011933399999999872]</msg>
<status status="PASS" starttime="20201030 18:29:28.309" endtime="20201030 18:29:28.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.304" endtime="20201030 18:29:28.312"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:28.316" endtime="20201030 18:29:28.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.314" endtime="20201030 18:29:28.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.313" endtime="20201030 18:29:28.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.948" endtime="20201030 18:29:28.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.947" endtime="20201030 18:29:28.336"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.353" endtime="20201030 18:29:28.377"></status>
</kw>
<msg timestamp="20201030 18:29:28.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.350" endtime="20201030 18:29:28.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.380" endtime="20201030 18:29:28.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.385" endtime="20201030 18:29:28.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.344" endtime="20201030 18:29:28.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.340" endtime="20201030 18:29:28.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.403" endtime="20201030 18:29:28.695"></status>
</kw>
<msg timestamp="20201030 18:29:28.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031348153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031468542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:28.400" endtime="20201030 18:29:28.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031348153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031468542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:28.699" endtime="20201030 18:29:28.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.707" endtime="20201030 18:29:28.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.395" endtime="20201030 18:29:28.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.391" endtime="20201030 18:29:28.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:28.714" level="INFO">${RESULT} = [{'diff': 0.00012038900000000546}, {'diff': 0.00012091699999999816}, {'diff': 0.00012030600000000058}, {'diff': 0.00012055500000000136}, {'diff': 0.00012037499999999896}, {'diff': 0.000120749999999995...</msg>
<status status="PASS" starttime="20201030 18:29:28.711" endtime="20201030 18:29:28.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:28.719" level="INFO">${ACCURACY} = {'diff': [0.00012038900000000546, 0.00012091699999999816, 0.00012030600000000058, 0.00012055500000000136, 0.00012037499999999896, 0.00012074999999999586, 0.00012019399999999708, 0.00012038899999999852...</msg>
<status status="PASS" starttime="20201030 18:29:28.715" endtime="20201030 18:29:28.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.723" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 18:29:28.722" endtime="20201030 18:29:28.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.726" level="INFO">VALUE: [0.00012038900000000546, 0.00012091699999999816, 0.00012030600000000058, 0.00012055500000000136, 0.00012037499999999896, 0.00012074999999999586, 0.00012019399999999708, 0.00012038899999999852, 0.00012044500000000374, 0.00012045900000000331, 0.00012016699999999741, 0.0001201249999999987, 0.00012076399999999543, 0.00012030499999999417, 0.00012001400000000162, 0.00012044400000000427, 0.00012016699999999741, 0.00012020899999999612, 0.00011999999999999511, 0.00012027700000000197, 0.00012059700000000007, 0.00012088900000000596, 0.00012042999999999776, 0.0001207500000000028, 0.00012077800000000194, 0.00012027800000000144, 0.000120777999999995, 0.00012033300000000025, 0.0001199300000000042, 0.00012029100000000154, 0.00011998600000000248, 0.0001205830000000005, 0.00012088799999999955, 0.00012018100000000392, 0.00011994500000000324, 0.00012048599999999604, 0.0001201249999999987, 0.00012051399999999518, 0.00012017999999999751, 0.00012038899999999852, 0.00012013899999999827, 0.00012011099999999914, 0.00012059799999999954, 0.00012059799999999954, 0.00012073600000000323, 0.00011998600000000248, 0.00012055499999999442, 0.00012022199999999622, 0.00012066699999999791, 0.00012086099999999989]</msg>
<status status="PASS" starttime="20201030 18:29:28.724" endtime="20201030 18:29:28.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.720" endtime="20201030 18:29:28.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:28.730" endtime="20201030 18:29:28.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.729" endtime="20201030 18:29:28.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.728" endtime="20201030 18:29:28.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.337" endtime="20201030 18:29:28.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.337" endtime="20201030 18:29:28.751"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.760" endtime="20201030 18:29:28.781"></status>
</kw>
<msg timestamp="20201030 18:29:28.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.758" endtime="20201030 18:29:28.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.783" endtime="20201030 18:29:28.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.785" endtime="20201030 18:29:28.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.756" endtime="20201030 18:29:28.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.754" endtime="20201030 18:29:28.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.794" endtime="20201030 18:29:29.081"></status>
</kw>
<msg timestamp="20201030 18:29:29.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021971472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:28.793" endtime="20201030 18:29:29.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021971472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.085" endtime="20201030 18:29:29.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.093" endtime="20201030 18:29:29.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.790" endtime="20201030 18:29:29.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.788" endtime="20201030 18:29:29.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:29.100" level="INFO">${RESULT} = [{'diff': 0.0001210700000000009}, {'diff': 0.00012116599999999894}, {'diff': 0.00012175000000000033}, {'diff': 0.00012117999999999851}, {'diff': 0.00012098600000000001}, {'diff': 0.0001218330000000017...</msg>
<status status="PASS" starttime="20201030 18:29:29.097" endtime="20201030 18:29:29.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:29.104" level="INFO">${ACCURACY} = {'diff': [0.0001210700000000009, 0.00012116599999999894, 0.00012175000000000033, 0.00012117999999999851, 0.00012098600000000001, 0.00012183300000000175, 0.00012172199999999772, 0.0001215839999999975, ...</msg>
<status status="PASS" starttime="20201030 18:29:29.101" endtime="20201030 18:29:29.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.108" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 18:29:29.107" endtime="20201030 18:29:29.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.110" level="INFO">VALUE: [0.0001210700000000009, 0.00012116599999999894, 0.00012175000000000033, 0.00012117999999999851, 0.00012098600000000001, 0.00012183300000000175, 0.00012172199999999772, 0.0001215839999999975, 0.00012161099999999717, 0.00012159800000000054, 0.00012136100000000039, 0.0001215830000000015, 0.00012102799999999872, 0.00012155599999999836, 0.00012104200000000176, 0.00012161100000000064, 0.00012186100000000089, 0.0001211249999999997, 0.00012163899999999978, 0.00012105500000000186, 0.00012170799999999815, 0.00012115299999999884, 0.00012129199999999854, 0.0001214029999999991, 0.00012111100000000014, 0.0001215830000000015, 0.0001211249999999997, 0.0001219449999999983, 0.00012161100000000064, 0.00012147199999999747, 0.00012097200000000044, 0.00012123600000000026, 0.00012109700000000057, 0.00012168099999999848, 0.00012161099999999717, 0.00012101399999999915, 0.00012098600000000001, 0.00012119400000000155, 0.00012186100000000089, 0.0001214449999999978, 0.00012106900000000143, 0.0001212090000000006, 0.00012172200000000119, 0.00012170799999999815, 0.00012106899999999796, 0.00012123600000000026, 0.00012151399999999965, 0.00012115299999999884, 0.00012155599999999836, 0.00012101399999999915]</msg>
<status status="PASS" starttime="20201030 18:29:29.109" endtime="20201030 18:29:29.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.105" endtime="20201030 18:29:29.112"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:29.115" endtime="20201030 18:29:29.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.114" endtime="20201030 18:29:29.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.113" endtime="20201030 18:29:29.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.752" endtime="20201030 18:29:29.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.751" endtime="20201030 18:29:29.136"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.145" endtime="20201030 18:29:29.166"></status>
</kw>
<msg timestamp="20201030 18:29:29.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.143" endtime="20201030 18:29:29.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.168" endtime="20201030 18:29:29.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.170" endtime="20201030 18:29:29.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.140" endtime="20201030 18:29:29.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.138" endtime="20201030 18:29:29.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.179" endtime="20201030 18:29:29.465"></status>
</kw>
<msg timestamp="20201030 18:29:29.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022898292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023021069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.177" endtime="20201030 18:29:29.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022898292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023021069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.469" endtime="20201030 18:29:29.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.477" endtime="20201030 18:29:29.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.175" endtime="20201030 18:29:29.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.173" endtime="20201030 18:29:29.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:29.483" level="INFO">${RESULT} = [{'diff': 0.000122777000000001}, {'diff': 0.00012259700000000207}, {'diff': 0.00012233300000000225}, {'diff': 0.00012201399999999668}, {'diff': 0.00012229199999999954}, {'diff': 0.00012243099999999923...</msg>
<status status="PASS" starttime="20201030 18:29:29.480" endtime="20201030 18:29:29.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:29.487" level="INFO">${ACCURACY} = {'diff': [0.000122777000000001, 0.00012259700000000207, 0.00012233300000000225, 0.00012201399999999668, 0.00012229199999999954, 0.00012243099999999923, 0.00012205599999999886, 0.00012243099999999923, ...</msg>
<status status="PASS" starttime="20201030 18:29:29.484" endtime="20201030 18:29:29.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.492" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 18:29:29.491" endtime="20201030 18:29:29.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.495" level="INFO">VALUE: [0.000122777000000001, 0.00012259700000000207, 0.00012233300000000225, 0.00012201399999999668, 0.00012229199999999954, 0.00012243099999999923, 0.00012205599999999886, 0.00012243099999999923, 0.00012230499999999964, 0.0001219579999999984, 0.0001224579999999989, 0.00012220799999999865, 0.0001229030000000006, 0.0001223059999999991, 0.00012211100000000114, 0.00012259800000000154, 0.00012270799999999915, 0.0001222640000000004, 0.0001221250000000007, 0.00012269399999999958, 0.0001224310000000027, 0.0001229449999999993, 0.00012256999999999893, 0.00012255599999999936, 0.00012213900000000028, 0.0001223059999999991, 0.00012201400000000015, 0.0001223059999999991, 0.00012275000000000133, 0.00012218099999999898, 0.00012202799999999972, 0.0001225700000000024, 0.0001227359999999983, 0.00012284700000000232, 0.00012219399999999908, 0.00012219399999999908, 0.0001228059999999996, 0.00012234700000000182, 0.0001224030000000001, 0.0001224030000000001, 0.00012268099999999948, 0.0001224579999999989, 0.00012230499999999964, 0.0001221799999999995, 0.00012229199999999954, 0.00012283299999999928, 0.0001219029999999996, 0.00012243099999999923, 0.00012232000000000215, 0.00012275000000000133]</msg>
<status status="PASS" starttime="20201030 18:29:29.493" endtime="20201030 18:29:29.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.488" endtime="20201030 18:29:29.496"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:29.500" endtime="20201030 18:29:29.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.498" endtime="20201030 18:29:29.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.497" endtime="20201030 18:29:29.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.137" endtime="20201030 18:29:29.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.136" endtime="20201030 18:29:29.520"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.529" endtime="20201030 18:29:29.549"></status>
</kw>
<msg timestamp="20201030 18:29:29.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.527" endtime="20201030 18:29:29.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.550" endtime="20201030 18:29:29.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.553" endtime="20201030 18:29:29.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.525" endtime="20201030 18:29:29.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.523" endtime="20201030 18:29:29.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.562" endtime="20201030 18:29:29.847"></status>
</kw>
<msg timestamp="20201030 18:29:29.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.560" endtime="20201030 18:29:29.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.851" endtime="20201030 18:29:29.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.859" endtime="20201030 18:29:29.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.558" endtime="20201030 18:29:29.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.556" endtime="20201030 18:29:29.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:29.866" level="INFO">${RESULT} = [{'diff': 0.0001234449999999998}, {'diff': 0.00012325000000000183}, {'diff': 0.00012373699999999876}, {'diff': 0.00012356900000000046}, {'diff': 0.00012356900000000046}, {'diff': 0.0001234859999999990...</msg>
<status status="PASS" starttime="20201030 18:29:29.863" endtime="20201030 18:29:29.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:29.873" level="INFO">${ACCURACY} = {'diff': [0.0001234449999999998, 0.00012325000000000183, 0.00012373699999999876, 0.00012356900000000046, 0.00012356900000000046, 0.00012348599999999904, 0.00012306900000000343, 0.00012320799999999965,...</msg>
<status status="PASS" starttime="20201030 18:29:29.867" endtime="20201030 18:29:29.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.877" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 18:29:29.876" endtime="20201030 18:29:29.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.880" level="INFO">VALUE: [0.0001234449999999998, 0.00012325000000000183, 0.00012373699999999876, 0.00012356900000000046, 0.00012356900000000046, 0.00012348599999999904, 0.00012306900000000343, 0.00012320799999999965, 0.00012298599999999854, 0.0001231389999999978, 0.00012386099999999942, 0.0001234030000000011, 0.00012374999999999886, 0.00012343000000000076, 0.00012384699999999985, 0.00012387500000000246, 0.00012302799999999725, 0.00012327800000000097, 0.00012376399999999843, 0.00012309799999999857, 0.00012302700000000125, 0.0001234160000000012, 0.00012301400000000115, 0.0001236250000000022, 0.0001231389999999978, 0.00012301400000000115, 0.00012352700000000175, 0.0001237229999999992, 0.0001231519999999979, 0.0001231389999999978, 0.0001229579999999994, 0.00012379200000000104, 0.00012355600000000036, 0.00012305599999999986, 0.00012356999999999993, 0.0001233190000000002, 0.0001237640000000019, 0.00012301400000000115, 0.00012368100000000048, 0.00012343100000000023, 0.00012355600000000036, 0.00012300000000000158, 0.00012369500000000005, 0.00012329100000000107, 0.00012372199999999972, 0.00012330500000000064, 0.0001232359999999988, 0.00012319400000000008, 0.00012319499999999955, 0.00012318099999999998]</msg>
<status status="PASS" starttime="20201030 18:29:29.878" endtime="20201030 18:29:29.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.874" endtime="20201030 18:29:29.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:29.888" endtime="20201030 18:29:29.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.887" endtime="20201030 18:29:29.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.885" endtime="20201030 18:29:29.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.521" endtime="20201030 18:29:29.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.521" endtime="20201030 18:29:29.909"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.917" endtime="20201030 18:29:29.939"></status>
</kw>
<msg timestamp="20201030 18:29:29.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.916" endtime="20201030 18:29:29.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.940" endtime="20201030 18:29:29.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.943" endtime="20201030 18:29:29.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.913" endtime="20201030 18:29:29.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.911" endtime="20201030 18:29:29.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.951" endtime="20201030 18:29:30.239"></status>
</kw>
<msg timestamp="20201030 18:29:30.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.950" endtime="20201030 18:29:30.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.243" endtime="20201030 18:29:30.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.251" endtime="20201030 18:29:30.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.947" endtime="20201030 18:29:30.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.946" endtime="20201030 18:29:30.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:30.258" level="INFO">${RESULT} = [{'diff': 0.00012465299999999888}, {'diff': 0.00012458300000000103}, {'diff': 0.0001241800000000015}, {'diff': 0.0001248190000000017}, {'diff': 0.00012487499999999999}, {'diff': 0.0001239580000000004}...</msg>
<status status="PASS" starttime="20201030 18:29:30.254" endtime="20201030 18:29:30.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:30.261" level="INFO">${ACCURACY} = {'diff': [0.00012465299999999888, 0.00012458300000000103, 0.0001241800000000015, 0.0001248190000000017, 0.00012487499999999999, 0.0001239580000000004, 0.0001245840000000005, 0.0001240559999999974, 0.0...</msg>
<status status="PASS" starttime="20201030 18:29:30.259" endtime="20201030 18:29:30.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.266" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 18:29:30.265" endtime="20201030 18:29:30.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.268" level="INFO">VALUE: [0.00012465299999999888, 0.00012458300000000103, 0.0001241800000000015, 0.0001248190000000017, 0.00012487499999999999, 0.0001239580000000004, 0.0001245840000000005, 0.0001240559999999974, 0.00012484700000000085, 0.00012398599999999954, 0.0001241389999999988, 0.00012447200000000047, 0.00012461100000000017, 0.00012426399999999893, 0.0001243199999999972, 0.00012488899999999956, 0.00012491599999999922, 0.000124680000000002, 0.00012390299999999813, 0.00012412499999999924, 0.0001249030000000026, 0.00012397199999999997, 0.00012484800000000032, 0.00012427800000000197, 0.00012425000000000283, 0.00012440199999999915, 0.00012493100000000174, 0.00012486100000000042, 0.00012405600000000086, 0.00012413900000000228, 0.00012418100000000099, 0.00012405500000000139, 0.00012419400000000108, 0.00012429100000000207, 0.00012462499999999974, 0.00012401399999999868, 0.0001244030000000021, 0.00012462499999999974, 0.00012451399999999918, 0.00012418100000000099, 0.00012413799999999933, 0.00012486100000000042, 0.00012472200000000072, 0.00012444400000000133, 0.00012405600000000086, 0.0001248329999999978, 0.00012469500000000105, 0.00012443000000000176, 0.0001244999999999996, 0.0001246519999999994]</msg>
<status status="PASS" starttime="20201030 18:29:30.267" endtime="20201030 18:29:30.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.262" endtime="20201030 18:29:30.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:30.273" endtime="20201030 18:29:30.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.272" endtime="20201030 18:29:30.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.270" endtime="20201030 18:29:30.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.910" endtime="20201030 18:29:30.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.909" endtime="20201030 18:29:30.294"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.302" endtime="20201030 18:29:30.325"></status>
</kw>
<msg timestamp="20201030 18:29:30.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.301" endtime="20201030 18:29:30.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.326" endtime="20201030 18:29:30.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.329" endtime="20201030 18:29:30.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.298" endtime="20201030 18:29:30.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.296" endtime="20201030 18:29:30.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.338" endtime="20201030 18:29:30.624"></status>
</kw>
<msg timestamp="20201030 18:29:30.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023159042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023284431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.336" endtime="20201030 18:29:30.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023159042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023284431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.628" endtime="20201030 18:29:30.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.636" endtime="20201030 18:29:30.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.334" endtime="20201030 18:29:30.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.332" endtime="20201030 18:29:30.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:30.642" level="INFO">${RESULT} = [{'diff': 0.00012538900000000006}, {'diff': 0.00012575000000000086}, {'diff': 0.00012544399999999886}, {'diff': 0.0001257360000000013}, {'diff': 0.00012495799999999793}, {'diff': 0.0001252079999999981...</msg>
<status status="PASS" starttime="20201030 18:29:30.639" endtime="20201030 18:29:30.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:30.646" level="INFO">${ACCURACY} = {'diff': [0.00012538900000000006, 0.00012575000000000086, 0.00012544399999999886, 0.0001257360000000013, 0.00012495799999999793, 0.00012520799999999818, 0.00012504099999999935, 0.0001259169999999997, ...</msg>
<status status="PASS" starttime="20201030 18:29:30.643" endtime="20201030 18:29:30.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.651" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 18:29:30.650" endtime="20201030 18:29:30.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.653" level="INFO">VALUE: [0.00012538900000000006, 0.00012575000000000086, 0.00012544399999999886, 0.0001257360000000013, 0.00012495799999999793, 0.00012520799999999818, 0.00012504099999999935, 0.0001259169999999997, 0.00012541599999999972, 0.00012545799999999843, 0.00012511100000000067, 0.00012516699999999895, 0.0001250689999999985, 0.00012497200000000097, 0.00012575000000000086, 0.0001253060000000021, 0.0001250559999999984, 0.0001256939999999991, 0.00012538900000000006, 0.00012567999999999954, 0.0001250970000000011, 0.0001252779999999995, 0.00012543100000000224, 0.00012506900000000196, 0.00012582000000000218, 0.00012498600000000054, 0.0001251109999999972, 0.000125680000000003, 0.00012495799999999793, 0.00012544499999999834, 0.00012593099999999927, 0.0001250979999999971, 0.00012584700000000185, 0.0001250130000000002, 0.0001254299999999993, 0.00012576400000000043, 0.00012497200000000097, 0.0001250000000000001, 0.0001250420000000023, 0.00012552799999999975, 0.00012583399999999828, 0.000125568999999999, 0.0001252909999999996, 0.00012561100000000117, 0.00012504199999999882, 0.00012534699999999788, 0.00012562499999999727, 0.00012512500000000024, 0.0001251389999999998, 0.00012590200000000065]</msg>
<status status="PASS" starttime="20201030 18:29:30.652" endtime="20201030 18:29:30.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.647" endtime="20201030 18:29:30.655"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:30.659" endtime="20201030 18:29:30.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.657" endtime="20201030 18:29:30.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.656" endtime="20201030 18:29:30.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.295" endtime="20201030 18:29:30.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.294" endtime="20201030 18:29:30.679"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.688" endtime="20201030 18:29:30.709"></status>
</kw>
<msg timestamp="20201030 18:29:30.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.686" endtime="20201030 18:29:30.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.710" endtime="20201030 18:29:30.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.713" endtime="20201030 18:29:30.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.684" endtime="20201030 18:29:30.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.682" endtime="20201030 18:29:30.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.722" endtime="20201030 18:29:31.007"></status>
</kw>
<msg timestamp="20201030 18:29:31.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022207361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.720" endtime="20201030 18:29:31.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022207361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:31.011" endtime="20201030 18:29:31.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.019" endtime="20201030 18:29:31.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.718" endtime="20201030 18:29:31.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.716" endtime="20201030 18:29:31.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:31.026" level="INFO">${RESULT} = [{'diff': 0.00012658299999999956}, {'diff': 0.00012618099999999952}, {'diff': 0.00012618099999999952}, {'diff': 0.0001264170000000002}, {'diff': 0.00012598599999999807}, {'diff': 0.0001267769999999980...</msg>
<status status="PASS" starttime="20201030 18:29:31.023" endtime="20201030 18:29:31.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:31.030" level="INFO">${ACCURACY} = {'diff': [0.00012658299999999956, 0.00012618099999999952, 0.00012618099999999952, 0.0001264170000000002, 0.00012598599999999807, 0.00012677699999999806, 0.00012659699999999913, 0.00012630500000000017,...</msg>
<status status="PASS" starttime="20201030 18:29:31.027" endtime="20201030 18:29:31.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.035" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 18:29:31.034" endtime="20201030 18:29:31.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.037" level="INFO">VALUE: [0.00012658299999999956, 0.00012618099999999952, 0.00012618099999999952, 0.0001264170000000002, 0.00012598599999999807, 0.00012677699999999806, 0.00012659699999999913, 0.00012630500000000017, 0.00012616600000000047, 0.00012649999999999814, 0.00012681899999999677, 0.00012620900000000213, 0.0001259450000000023, 0.00012640300000000063, 0.0001260000000000011, 0.00012598599999999807, 0.00012598600000000154, 0.00012681900000000024, 0.00012631899999999974, 0.00012687500000000199, 0.00012668100000000002, 0.00012690299999999766, 0.00012598599999999807, 0.00012690300000000113, 0.00012687499999999852, 0.0001260970000000021, 0.00012688900000000156, 0.00012643099999999977, 0.00012668100000000002, 0.0001266390000000013, 0.00012597200000000197, 0.00012630500000000017, 0.00012670799999999968, 0.00012612499999999777, 0.00012622199999999875, 0.00012612499999999777, 0.00012675000000000186, 0.0001260970000000021, 0.0001259719999999985, 0.000126569, 0.00012602800000000025, 0.00012656999999999946, 0.00012625000000000136, 0.00012601400000000068, 0.00012683399999999928, 0.00012598600000000154, 0.00012684700000000285, 0.00012686100000000242, 0.0001260689999999995, 0.0001267499999999984]</msg>
<status status="PASS" starttime="20201030 18:29:31.036" endtime="20201030 18:29:31.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.031" endtime="20201030 18:29:31.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:31.042" endtime="20201030 18:29:31.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.041" endtime="20201030 18:29:31.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.039" endtime="20201030 18:29:31.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.680" endtime="20201030 18:29:31.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.680" endtime="20201030 18:29:31.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.559" endtime="20201030 18:29:31.063"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:31.067" endtime="20201030 18:29:31.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.065" endtime="20201030 18:29:31.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.064" endtime="20201030 18:29:31.087"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:52.491" endtime="20201030 18:29:31.087" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:28:12.411" endtime="20201030 18:29:31.090"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.145" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:29:31.153" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:29:32.284" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:29:31.143" endtime="20201030 18:29:32.285"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.287" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:29:32.286" endtime="20201030 18:29:32.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.142" endtime="20201030 18:29:32.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:32.290" endtime="20201030 18:29:32.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.289" endtime="20201030 18:29:32.478"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.490" endtime="20201030 18:29:32.505"></status>
</kw>
<msg timestamp="20201030 18:29:32.505" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.489" endtime="20201030 18:29:32.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.508" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.506" endtime="20201030 18:29:32.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.511" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:32.509" endtime="20201030 18:29:32.511"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:32.486" endtime="20201030 18:29:32.512"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:32.484" endtime="20201030 18:29:32.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.483" endtime="20201030 18:29:32.513"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:32.516" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:32.516" endtime="20201030 18:29:32.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.514" endtime="20201030 18:29:32.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.482" endtime="20201030 18:29:32.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.481" endtime="20201030 18:29:32.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.518" endtime="20201030 18:29:32.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.480" endtime="20201030 18:29:32.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.521" endtime="20201030 18:29:32.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.479" endtime="20201030 18:29:32.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.141" endtime="20201030 18:29:32.524"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:32.529" endtime="20201030 18:29:32.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.528" endtime="20201030 18:29:32.549"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.562" endtime="20201030 18:29:32.575"></status>
</kw>
<msg timestamp="20201030 18:29:32.575" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.560" endtime="20201030 18:29:32.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.578" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.576" endtime="20201030 18:29:32.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.581" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:32.579" endtime="20201030 18:29:32.581"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:32.558" endtime="20201030 18:29:32.583"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:32.555" endtime="20201030 18:29:32.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.554" endtime="20201030 18:29:32.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:32.587" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:32.587" endtime="20201030 18:29:32.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.585" endtime="20201030 18:29:32.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.553" endtime="20201030 18:29:32.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.553" endtime="20201030 18:29:32.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.589" endtime="20201030 18:29:32.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.551" endtime="20201030 18:29:32.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.550" endtime="20201030 18:29:32.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.526" endtime="20201030 18:29:32.592"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.600" endtime="20201030 18:29:38.722"></status>
</kw>
<msg timestamp="20201030 18:29:38.723" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.598" endtime="20201030 18:29:38.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.728" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.725" endtime="20201030 18:29:38.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.731" endtime="20201030 18:29:38.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.596" endtime="20201030 18:29:38.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.594" endtime="20201030 18:29:38.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:38.742" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 18:29:38.738" endtime="20201030 18:29:38.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.750" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:38.748" endtime="20201030 18:29:38.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.755" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:38.753" endtime="20201030 18:29:38.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.744" endtime="20201030 18:29:38.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.764" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:38.762" endtime="20201030 18:29:38.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.769" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:38.767" endtime="20201030 18:29:38.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.758" endtime="20201030 18:29:38.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.778" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:38.776" endtime="20201030 18:29:38.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.782" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 18:29:38.781" endtime="20201030 18:29:38.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.771" endtime="20201030 18:29:38.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.790" endtime="20201030 18:29:39.092"></status>
</kw>
<msg timestamp="20201030 18:29:39.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061223222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161259139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.788" endtime="20201030 18:29:39.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061223222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161259139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:39.097" endtime="20201030 18:29:39.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.105" endtime="20201030 18:29:39.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.786" endtime="20201030 18:29:39.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.784" endtime="20201030 18:29:39.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:39.111" level="INFO">${FILTERED} = [{'diff': 0.100035917}, {'diff': 0.10001199999999999}, {'diff': 0.10001100000000002}, {'diff': 0.10001100000000002}, {'diff': 0.10001098600000002}, {'diff': 0.10001102800000006}, {'diff': 0.1000109719...</msg>
<status status="PASS" starttime="20201030 18:29:39.108" endtime="20201030 18:29:39.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:39.115" level="INFO">${RESULT} = {'diff': [0.100035917, 0.10001199999999999, 0.10001100000000002, 0.10001100000000002, 0.10001098600000002, 0.10001102800000006, 0.10001097199999998, 0.10001100000000007, 0.10001102699999997, 0.1000109...</msg>
<status status="PASS" starttime="20201030 18:29:39.112" endtime="20201030 18:29:39.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.119" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:39.118" endtime="20201030 18:29:39.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.121" level="INFO">VALUE: [0.100035917, 0.10001199999999999, 0.10001100000000002, 0.10001100000000002, 0.10001098600000002, 0.10001102800000006, 0.10001097199999998, 0.10001100000000007, 0.10001102699999997, 0.10001099999999996, 0.10001099999999985, 0.10001098600000002, 0.10001098600000002, 0.10001101400000012, 0.10001101400000012, 0.10001098600000002, 0.10001107000000009, 0.10001098600000002, 0.10001091700000009, 0.10001091700000009, 0.10001094499999974, 0.10001093099999991, 0.10001094500000018, 0.10001093099999991, 0.10001097199999975, 0.1000109440000001, 0.1000109440000001, 0.10001094399999966, 0.10001091700000009, 0.10001099999999985, 0.10001095899999957, 0.10001095900000001, 0.10001093099999991, 0.10001093099999991, 0.1000109440000001, 0.10001093000000028, 0.10001094399999966, 0.1000109440000001, 0.10001094500000018, 0.10001091700000009, 0.10001094500000018, 0.10001094500000018, 0.1000109440000001, 0.10001092999999983, 0.1000109440000001, 0.10001092999999983, 0.1000110000000003, 0.10001095799999948, 0.10001097299999984, 0.10001098600000002, 0.10001094500000018]</msg>
<status status="PASS" starttime="20201030 18:29:39.120" endtime="20201030 18:29:39.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.116" endtime="20201030 18:29:39.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:39.126" endtime="20201030 18:29:39.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.125" endtime="20201030 18:29:39.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.124" endtime="20201030 18:29:39.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.592" endtime="20201030 18:29:39.147"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:32.524" endtime="20201030 18:29:39.147" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:39.154" endtime="20201030 18:29:39.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.152" endtime="20201030 18:29:39.174"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.187" endtime="20201030 18:29:39.201"></status>
</kw>
<msg timestamp="20201030 18:29:39.202" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.186" endtime="20201030 18:29:39.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.204" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.203" endtime="20201030 18:29:39.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.207" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:39.205" endtime="20201030 18:29:39.208"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:39.183" endtime="20201030 18:29:39.208"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:39.181" endtime="20201030 18:29:39.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.180" endtime="20201030 18:29:39.209"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:39.213" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:39.212" endtime="20201030 18:29:39.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.210" endtime="20201030 18:29:39.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.179" endtime="20201030 18:29:39.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.178" endtime="20201030 18:29:39.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.214" endtime="20201030 18:29:39.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.176" endtime="20201030 18:29:39.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.174" endtime="20201030 18:29:39.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.151" endtime="20201030 18:29:39.217"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.225" endtime="20201030 18:29:45.347"></status>
</kw>
<msg timestamp="20201030 18:29:45.348" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.224" endtime="20201030 18:29:45.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.353" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.350" endtime="20201030 18:29:45.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.356" endtime="20201030 18:29:45.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.221" endtime="20201030 18:29:45.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.219" endtime="20201030 18:29:45.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:45.366" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 18:29:45.363" endtime="20201030 18:29:45.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.375" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:45.373" endtime="20201030 18:29:45.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.381" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:45.377" endtime="20201030 18:29:45.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.368" endtime="20201030 18:29:45.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.391" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:45.389" endtime="20201030 18:29:45.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.395" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:45.393" endtime="20201030 18:29:45.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.384" endtime="20201030 18:29:45.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.405" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:45.403" endtime="20201030 18:29:45.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.409" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 18:29:45.407" endtime="20201030 18:29:45.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.398" endtime="20201030 18:29:45.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.424" endtime="20201030 18:29:45.725"></status>
</kw>
<msg timestamp="20201030 18:29:45.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062081944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162212694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:45.421" endtime="20201030 18:29:45.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062081944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162212694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:45.729" endtime="20201030 18:29:45.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.737" endtime="20201030 18:29:45.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.415" endtime="20201030 18:29:45.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.412" endtime="20201030 18:29:45.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:45.744" level="INFO">${FILTERED} = [{'diff': 0.10013074999999999}, {'diff': 0.099923389}, {'diff': 0.100011986}, {'diff': 0.100011028}, {'diff': 0.10001097200000003}, {'diff': 0.10001095800000004}, {'diff': 0.10001098600000002}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:29:45.741" endtime="20201030 18:29:45.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:45.750" level="INFO">${RESULT} = {'diff': [0.10013074999999999, 0.099923389, 0.100011986, 0.100011028, 0.10001097200000003, 0.10001095800000004, 0.10001098600000002, 0.10001094399999999, 0.10001095800000004, 0.10001097199999998, 0.10...</msg>
<status status="PASS" starttime="20201030 18:29:45.745" endtime="20201030 18:29:45.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.754" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:45.753" endtime="20201030 18:29:45.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.757" level="INFO">VALUE: [0.10013074999999999, 0.099923389, 0.100011986, 0.100011028, 0.10001097200000003, 0.10001095800000004, 0.10001098600000002, 0.10001094399999999, 0.10001095800000004, 0.10001097199999998, 0.10001097300000006, 0.10001095799999993, 0.10001097199999998, 0.10001098600000002, 0.10001098600000002, 0.10001093000000005, 0.10001090199999996, 0.10001091699999987, 0.10001090300000004, 0.10001091699999987, 0.10001091699999964, 0.10001093000000028, 0.10001090199999974, 0.10001092999999983, 0.10001090199999974, 0.10001092999999983, 0.10001088899999999, 0.10001091699999964, 0.10001088899999999, 0.10001093099999991, 0.10001088899999999, 0.10001090200000018, 0.10001092999999983, 0.100010916, 0.10001091700000009, 0.10001093099999991, 0.10001093100000036, 0.10001094499999974, 0.10001094499999974, 0.10001093099999991, 0.10001090199999929, 0.10001090200000018, 0.10001092999999983, 0.10001091699999964, 0.10001091699999964, 0.10001090300000026, 0.10001091699999964, 0.10001093099999991, 0.10001090299999937, 0.10001091600000045, 0.10001092999999983]</msg>
<status status="PASS" starttime="20201030 18:29:45.755" endtime="20201030 18:29:45.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.751" endtime="20201030 18:29:45.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:45.766" endtime="20201030 18:29:45.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.764" endtime="20201030 18:29:45.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.763" endtime="20201030 18:29:45.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.218" endtime="20201030 18:29:45.786"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:39.149" endtime="20201030 18:29:45.787" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:45.793" endtime="20201030 18:29:45.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.792" endtime="20201030 18:29:45.813"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.826" endtime="20201030 18:29:45.840"></status>
</kw>
<msg timestamp="20201030 18:29:45.840" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.824" endtime="20201030 18:29:45.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.843" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.841" endtime="20201030 18:29:45.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.846" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:45.844" endtime="20201030 18:29:45.846"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:45.822" endtime="20201030 18:29:45.847"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:45.819" endtime="20201030 18:29:45.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.818" endtime="20201030 18:29:45.848"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:45.851" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:45.851" endtime="20201030 18:29:45.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.849" endtime="20201030 18:29:45.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.817" endtime="20201030 18:29:45.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.817" endtime="20201030 18:29:45.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.853" endtime="20201030 18:29:45.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.815" endtime="20201030 18:29:45.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.814" endtime="20201030 18:29:45.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.790" endtime="20201030 18:29:45.856"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.865" endtime="20201030 18:29:51.987"></status>
</kw>
<msg timestamp="20201030 18:29:51.988" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.864" endtime="20201030 18:29:51.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.993" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.990" endtime="20201030 18:29:51.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.997" endtime="20201030 18:29:52.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.861" endtime="20201030 18:29:52.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.858" endtime="20201030 18:29:52.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:52.007" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 18:29:52.004" endtime="20201030 18:29:52.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.016" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:52.014" endtime="20201030 18:29:52.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.020" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:52.018" endtime="20201030 18:29:52.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.009" endtime="20201030 18:29:52.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.029" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:52.027" endtime="20201030 18:29:52.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.034" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:52.032" endtime="20201030 18:29:52.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.023" endtime="20201030 18:29:52.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.043" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:52.041" endtime="20201030 18:29:52.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.047" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 18:29:52.045" endtime="20201030 18:29:52.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.037" endtime="20201030 18:29:52.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.060" endtime="20201030 18:29:52.357"></status>
</kw>
<msg timestamp="20201030 18:29:52.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062737361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162955667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:52.059" endtime="20201030 18:29:52.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062737361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162955667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:52.361" endtime="20201030 18:29:52.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.369" endtime="20201030 18:29:52.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.054" endtime="20201030 18:29:52.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.050" endtime="20201030 18:29:52.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:52.375" level="INFO">${FILTERED} = [{'diff': 0.100218306}, {'diff': 0.100068097}, {'diff': 0.09978533299999998}, {'diff': 0.10001205600000002}, {'diff': 0.100011042}, {'diff': 0.10001106900000001}, {'diff': 0.100011042}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201030 18:29:52.372" endtime="20201030 18:29:52.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:52.380" level="INFO">${RESULT} = {'diff': [0.100218306, 0.100068097, 0.09978533299999998, 0.10001205600000002, 0.100011042, 0.10001106900000001, 0.100011042, 0.10001102799999995, 0.10001106900000001, 0.10001108300000006, 0.1000110690...</msg>
<status status="PASS" starttime="20201030 18:29:52.376" endtime="20201030 18:29:52.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.384" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:52.383" endtime="20201030 18:29:52.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.386" level="INFO">VALUE: [0.100218306, 0.100068097, 0.09978533299999998, 0.10001205600000002, 0.100011042, 0.10001106900000001, 0.100011042, 0.10001102799999995, 0.10001106900000001, 0.10001108300000006, 0.10001106900000001, 0.10001105499999996, 0.10001104099999991, 0.10001106900000001, 0.10001104099999991, 0.10001105499999996, 0.10001104100000013, 0.10001104099999991, 0.10001105499999996, 0.10001105500000018, 0.10001099999999985, 0.1000109720000002, 0.10001102800000039, 0.10001099999999985, 0.1000109720000002, 0.10001105600000004, 0.10001101400000012, 0.1000110000000003, 0.1000110000000003, 0.10001098600000002, 0.10001097300000028, 0.10001098600000002, 0.10001099999999985, 0.1000110000000003, 0.10001101300000004, 0.10001099999999985, 0.10001099999999985, 0.10001097199999975, 0.1000110000000003, 0.10001098599999958, 0.10001101400000056, 0.1000109870000001, 0.10001098600000002, 0.10001101300000048, 0.10001101399999968, 0.10001105600000049, 0.10001104199999933, 0.10001101399999968, 0.10001097199999975, 0.1000110000000003, 0.10001101399999968]</msg>
<status status="PASS" starttime="20201030 18:29:52.385" endtime="20201030 18:29:52.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.381" endtime="20201030 18:29:52.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:52.391" endtime="20201030 18:29:52.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.390" endtime="20201030 18:29:52.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.389" endtime="20201030 18:29:52.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.856" endtime="20201030 18:29:52.412"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:45.788" endtime="20201030 18:29:52.412" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:52.419" endtime="20201030 18:29:52.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.417" endtime="20201030 18:29:52.438"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.452" endtime="20201030 18:29:52.467"></status>
</kw>
<msg timestamp="20201030 18:29:52.467" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.451" endtime="20201030 18:29:52.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.470" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.468" endtime="20201030 18:29:52.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.473" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:52.471" endtime="20201030 18:29:52.473"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:52.447" endtime="20201030 18:29:52.474"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:52.445" endtime="20201030 18:29:52.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.444" endtime="20201030 18:29:52.474"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:52.479" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:52.478" endtime="20201030 18:29:52.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.475" endtime="20201030 18:29:52.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.443" endtime="20201030 18:29:52.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.442" endtime="20201030 18:29:52.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.481" endtime="20201030 18:29:52.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.441" endtime="20201030 18:29:52.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.439" endtime="20201030 18:29:52.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.416" endtime="20201030 18:29:52.484"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.494" endtime="20201030 18:29:58.617"></status>
</kw>
<msg timestamp="20201030 18:29:58.618" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.492" endtime="20201030 18:29:58.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.623" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.620" endtime="20201030 18:29:58.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.626" endtime="20201030 18:29:58.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.489" endtime="20201030 18:29:58.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.487" endtime="20201030 18:29:58.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:58.637" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 18:29:58.633" endtime="20201030 18:29:58.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.645" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:58.643" endtime="20201030 18:29:58.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.649" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:58.647" endtime="20201030 18:29:58.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.638" endtime="20201030 18:29:58.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.659" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:58.657" endtime="20201030 18:29:58.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.663" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:58.661" endtime="20201030 18:29:58.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.652" endtime="20201030 18:29:58.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.673" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:58.671" endtime="20201030 18:29:58.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.675" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 18:29:58.674" endtime="20201030 18:29:58.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.666" endtime="20201030 18:29:58.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.683" endtime="20201030 18:29:58.979"></status>
</kw>
<msg timestamp="20201030 18:29:58.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067092417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167479403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.681" endtime="20201030 18:29:58.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067092417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167479403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.983" endtime="20201030 18:29:58.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.991" endtime="20201030 18:29:58.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.678" endtime="20201030 18:29:58.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.676" endtime="20201030 18:29:58.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:58.997" level="INFO">${FILTERED} = [{'diff': 0.100386986}, {'diff': 0.10007618100000001}, {'diff': 0.09961425000000002}, {'diff': 0.10001101400000001}, {'diff': 0.100011028}, {'diff': 0.10001102800000006}, {'diff': 0.10001101400000001}...</msg>
<status status="PASS" starttime="20201030 18:29:58.994" endtime="20201030 18:29:58.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:59.001" level="INFO">${RESULT} = {'diff': [0.100386986, 0.10007618100000001, 0.09961425000000002, 0.10001101400000001, 0.100011028, 0.10001102800000006, 0.10001101400000001, 0.10001101299999993, 0.10001102799999995, 0.100011014000000...</msg>
<status status="PASS" starttime="20201030 18:29:58.998" endtime="20201030 18:29:59.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.005" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:59.004" endtime="20201030 18:29:59.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.008" level="INFO">VALUE: [0.100386986, 0.10007618100000001, 0.09961425000000002, 0.10001101400000001, 0.100011028, 0.10001102800000006, 0.10001101400000001, 0.10001101299999993, 0.10001102799999995, 0.10001101400000001, 0.1000110139999999, 0.10001104099999991, 0.10001102699999986, 0.10001102800000017, 0.10001101400000012, 0.10001105500000018, 0.10001104099999991, 0.10001102800000017, 0.10001099999999985, 0.10001102800000017, 0.10001099999999985, 0.10001094399999966, 0.10001095799999993, 0.10001097199999975, 0.10001097199999975, 0.10001095799999993, 0.1000109720000002, 0.10001095900000001, 0.10001097199999975, 0.1000109720000002, 0.10001097300000028, 0.10001095799999993, 0.10001098600000002, 0.10001095900000001, 0.10001095800000037, 0.1000109720000002, 0.10001097299999984, 0.10001095799999993, 0.1000109720000002, 0.10001098599999958, 0.10001095800000037, 0.1000109440000001, 0.10001098600000002, 0.10001098600000002, 0.10001097200000064, 0.10001095799999948, 0.10001097299999984, 0.10001095800000037, 0.10001095800000037, 0.10001097299999984, 0.10001097199999975]</msg>
<status status="PASS" starttime="20201030 18:29:59.006" endtime="20201030 18:29:59.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.002" endtime="20201030 18:29:59.009"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:59.013" endtime="20201030 18:29:59.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.011" endtime="20201030 18:29:59.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.010" endtime="20201030 18:29:59.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.485" endtime="20201030 18:29:59.034"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:52.414" endtime="20201030 18:29:59.034" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:59.041" endtime="20201030 18:29:59.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.039" endtime="20201030 18:29:59.061"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.074" endtime="20201030 18:29:59.087"></status>
</kw>
<msg timestamp="20201030 18:29:59.087" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.072" endtime="20201030 18:29:59.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.090" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.088" endtime="20201030 18:29:59.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.093" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:59.091" endtime="20201030 18:29:59.093"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:59.069" endtime="20201030 18:29:59.094"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:59.067" endtime="20201030 18:29:59.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.066" endtime="20201030 18:29:59.094"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:59.098" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:59.097" endtime="20201030 18:29:59.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.095" endtime="20201030 18:29:59.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.065" endtime="20201030 18:29:59.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.064" endtime="20201030 18:29:59.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.100" endtime="20201030 18:29:59.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.063" endtime="20201030 18:29:59.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.061" endtime="20201030 18:29:59.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.038" endtime="20201030 18:29:59.103"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.112" endtime="20201030 18:30:05.235"></status>
</kw>
<msg timestamp="20201030 18:30:05.236" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.109" endtime="20201030 18:30:05.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.241" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.238" endtime="20201030 18:30:05.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.244" endtime="20201030 18:30:05.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.106" endtime="20201030 18:30:05.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.105" endtime="20201030 18:30:05.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:05.255" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 18:30:05.251" endtime="20201030 18:30:05.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.263" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:05.261" endtime="20201030 18:30:05.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.267" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:05.265" endtime="20201030 18:30:05.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.256" endtime="20201030 18:30:05.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.277" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:05.275" endtime="20201030 18:30:05.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.281" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:05.280" endtime="20201030 18:30:05.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.270" endtime="20201030 18:30:05.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.289" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:05.288" endtime="20201030 18:30:05.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.291" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 18:30:05.290" endtime="20201030 18:30:05.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.285" endtime="20201030 18:30:05.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.298" endtime="20201030 18:30:05.596"></status>
</kw>
<msg timestamp="20201030 18:30:05.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061921764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162508472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.297" endtime="20201030 18:30:05.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061921764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162508472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.600" endtime="20201030 18:30:05.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.608" endtime="20201030 18:30:05.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.294" endtime="20201030 18:30:05.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.292" endtime="20201030 18:30:05.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:05.615" level="INFO">${FILTERED} = [{'diff': 0.100586708}, {'diff': 0.10008824999999996}, {'diff': 0.099409056}, {'diff': 0.10001098600000002}, {'diff': 0.100010987}, {'diff': 0.10001101400000001}, {'diff': 0.10001098600000002}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:30:05.612" endtime="20201030 18:30:05.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:05.620" level="INFO">${RESULT} = {'diff': [0.100586708, 0.10008824999999996, 0.099409056, 0.10001098600000002, 0.100010987, 0.10001101400000001, 0.10001098600000002, 0.10001099999999996, 0.10001099999999996, 0.10001099999999996, 0.10...</msg>
<status status="PASS" starttime="20201030 18:30:05.616" endtime="20201030 18:30:05.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.624" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:05.623" endtime="20201030 18:30:05.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.626" level="INFO">VALUE: [0.100586708, 0.10008824999999996, 0.099409056, 0.10001098600000002, 0.100010987, 0.10001101400000001, 0.10001098600000002, 0.10001099999999996, 0.10001099999999996, 0.10001099999999996, 0.10001098600000002, 0.1000109859999998, 0.10001100000000007, 0.10001100000000007, 0.100011042, 0.10001102699999986, 0.10001101400000012, 0.10001101400000012, 0.10001101400000012, 0.10001091699999987, 0.10001094500000018, 0.10001091700000009, 0.10001097199999975, 0.1000109720000002, 0.10001095799999993, 0.1000109440000001, 0.10001094399999966, 0.10001093099999991, 0.10001095900000001, 0.10001094499999974, 0.10001095799999993, 0.10001093000000028, 0.10001095799999993, 0.10001095799999993, 0.10001097299999984, 0.10001095900000001, 0.10001094500000018, 0.10001095800000037, 0.1000109440000001, 0.10001093000000028, 0.1000110000000003, 0.10001091699999964, 0.10001097299999984, 0.10001095899999957, 0.10001092999999983, 0.1000109440000001, 0.1000109440000001, 0.10001092999999983, 0.10001098600000002, 0.10001097299999984, 0.10001095899999957]</msg>
<status status="PASS" starttime="20201030 18:30:05.625" endtime="20201030 18:30:05.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.621" endtime="20201030 18:30:05.628"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:05.631" endtime="20201030 18:30:05.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.630" endtime="20201030 18:30:05.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.628" endtime="20201030 18:30:05.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.103" endtime="20201030 18:30:05.652"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:59.036" endtime="20201030 18:30:05.652" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:05.658" endtime="20201030 18:30:05.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.657" endtime="20201030 18:30:05.678"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.691" endtime="20201030 18:30:05.707"></status>
</kw>
<msg timestamp="20201030 18:30:05.707" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.690" endtime="20201030 18:30:05.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.710" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.708" endtime="20201030 18:30:05.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.713" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:05.711" endtime="20201030 18:30:05.713"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:05.687" endtime="20201030 18:30:05.714"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:05.685" endtime="20201030 18:30:05.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.684" endtime="20201030 18:30:05.715"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:05.718" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:05.718" endtime="20201030 18:30:05.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.715" endtime="20201030 18:30:05.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.683" endtime="20201030 18:30:05.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.682" endtime="20201030 18:30:05.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.720" endtime="20201030 18:30:05.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.681" endtime="20201030 18:30:05.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.679" endtime="20201030 18:30:05.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.656" endtime="20201030 18:30:05.723"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.731" endtime="20201030 18:30:11.854"></status>
</kw>
<msg timestamp="20201030 18:30:11.855" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.729" endtime="20201030 18:30:11.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.860" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.857" endtime="20201030 18:30:11.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.863" endtime="20201030 18:30:11.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.727" endtime="20201030 18:30:11.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.725" endtime="20201030 18:30:11.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:11.873" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 18:30:11.870" endtime="20201030 18:30:11.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.882" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:11.880" endtime="20201030 18:30:11.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.886" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:11.884" endtime="20201030 18:30:11.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.875" endtime="20201030 18:30:11.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.896" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:11.894" endtime="20201030 18:30:11.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.900" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:11.898" endtime="20201030 18:30:11.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.889" endtime="20201030 18:30:11.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.910" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:11.908" endtime="20201030 18:30:11.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.914" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 18:30:11.912" endtime="20201030 18:30:11.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.903" endtime="20201030 18:30:11.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.930" endtime="20201030 18:30:12.231"></status>
</kw>
<msg timestamp="20201030 18:30:12.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063204042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164054083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:11.926" endtime="20201030 18:30:12.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063204042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164054083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:12.235" endtime="20201030 18:30:12.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.243" endtime="20201030 18:30:12.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.921" endtime="20201030 18:30:12.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.917" endtime="20201030 18:30:12.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:12.250" level="INFO">${FILTERED} = [{'diff': 0.10085004099999999}, {'diff': 0.10009108400000002}, {'diff': 0.10009212499999998}, {'diff': 0.09906725}, {'diff': 0.10001098600000002}, {'diff': 0.100010987}, {'diff': 0.10001098600000002},...</msg>
<status status="PASS" starttime="20201030 18:30:12.246" endtime="20201030 18:30:12.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:12.254" level="INFO">${RESULT} = {'diff': [0.10085004099999999, 0.10009108400000002, 0.10009212499999998, 0.09906725, 0.10001098600000002, 0.100010987, 0.10001098600000002, 0.10001095800000004, 0.100010987, 0.1000109440000001, 0.1000...</msg>
<status status="PASS" starttime="20201030 18:30:12.251" endtime="20201030 18:30:12.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.258" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:12.257" endtime="20201030 18:30:12.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.260" level="INFO">VALUE: [0.10085004099999999, 0.10009108400000002, 0.10009212499999998, 0.09906725, 0.10001098600000002, 0.100010987, 0.10001098600000002, 0.10001095800000004, 0.100010987, 0.1000109440000001, 0.10001097199999998, 0.10001097300000006, 0.10001095800000015, 0.10001100000000007, 0.10001098699999988, 0.1000109440000001, 0.10001097199999998, 0.10001097300000006, 0.10001097199999998, 0.10001098600000025, 0.10001104200000022, 0.1000109720000002, 0.10001095799999993, 0.10001090299999982, 0.10001090200000018, 0.10001095799999993, 0.10001090300000026, 0.10001093099999991, 0.10001093099999991, 0.10001090299999982, 0.10001090300000026, 0.100010916, 0.10001090199999974, 0.10001092999999983, 0.10001091700000009, 0.10001088899999999, 0.10001090299999982, 0.10001091700000009, 0.10001093000000028, 0.10001088899999999, 0.10001091599999956, 0.10001091700000053, 0.10001094500000018, 0.10001090300000026, 0.10001090299999937, 0.10001091699999964, 0.10001092999999983, 0.10001092999999983, 0.10001093000000072, 0.10001091699999964, 0.10001091700000053]</msg>
<status status="PASS" starttime="20201030 18:30:12.259" endtime="20201030 18:30:12.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.254" endtime="20201030 18:30:12.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:12.265" endtime="20201030 18:30:12.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.263" endtime="20201030 18:30:12.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.262" endtime="20201030 18:30:12.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.723" endtime="20201030 18:30:12.285"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:05.654" endtime="20201030 18:30:12.286" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:29:31.101" endtime="20201030 18:30:12.293"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 18:27:22.209" endtime="20201030 18:30:12.325"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
