<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 09:33:02.879" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.466" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:03.475" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:04.630" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:03.465" endtime="20201029 09:33:04.631"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.634" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:33:04.632" endtime="20201029 09:33:04.635"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.463" endtime="20201029 09:33:04.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:04.638" endtime="20201029 09:33:04.881"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.637" endtime="20201029 09:33:04.882"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.895" endtime="20201029 09:33:04.909"></status>
</kw>
<msg timestamp="20201029 09:33:04.910" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201029 09:33:04.893" endtime="20201029 09:33:04.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.912" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201029 09:33:04.911" endtime="20201029 09:33:04.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.916" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:04.914" endtime="20201029 09:33:04.916"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:04.891" endtime="20201029 09:33:04.917"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:04.888" endtime="20201029 09:33:04.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.887" endtime="20201029 09:33:04.918"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:04.921" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:04.921" endtime="20201029 09:33:04.922"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.918" endtime="20201029 09:33:04.923"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.886" endtime="20201029 09:33:04.923"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.886" endtime="20201029 09:33:04.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.924" endtime="20201029 09:33:04.925"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.884" endtime="20201029 09:33:04.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.926" endtime="20201029 09:33:04.928"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.883" endtime="20201029 09:33:04.928"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.461" endtime="20201029 09:33:04.929"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:04.935" endtime="20201029 09:33:04.954"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.933" endtime="20201029 09:33:04.955"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.968" endtime="20201029 09:33:04.983"></status>
</kw>
<msg timestamp="20201029 09:33:04.983" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:04.967" endtime="20201029 09:33:04.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.988" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:04.985" endtime="20201029 09:33:04.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.992" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:04.989" endtime="20201029 09:33:04.992"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:04.964" endtime="20201029 09:33:04.993"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:04.961" endtime="20201029 09:33:04.993"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.960" endtime="20201029 09:33:04.994"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:04.997" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:04.997" endtime="20201029 09:33:04.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.995" endtime="20201029 09:33:04.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.959" endtime="20201029 09:33:04.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.958" endtime="20201029 09:33:04.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.999" endtime="20201029 09:33:05.001"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.957" endtime="20201029 09:33:05.001"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.955" endtime="20201029 09:33:05.002"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.932" endtime="20201029 09:33:05.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.009" endtime="20201029 09:33:05.020"></status>
</kw>
<msg timestamp="20201029 09:33:05.021" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.007" endtime="20201029 09:33:05.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.023" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.022" endtime="20201029 09:33:05.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.024" endtime="20201029 09:33:05.026"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.004" endtime="20201029 09:33:05.026"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.003" endtime="20201029 09:33:05.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.031" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 09:33:05.029" endtime="20201029 09:33:05.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.033" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 09:33:05.032" endtime="20201029 09:33:05.033"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.027" endtime="20201029 09:33:05.034"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:04.929" endtime="20201029 09:33:05.034" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:33:03.003" endtime="20201029 09:33:05.037"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.097" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:05.107" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:06.338" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:05.095" endtime="20201029 09:33:06.339"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.341" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:33:06.340" endtime="20201029 09:33:06.342"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.093" endtime="20201029 09:33:06.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:06.345" endtime="20201029 09:33:06.606"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.343" endtime="20201029 09:33:06.607"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.619" endtime="20201029 09:33:06.633"></status>
</kw>
<msg timestamp="20201029 09:33:06.634" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.618" endtime="20201029 09:33:06.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.636" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.635" endtime="20201029 09:33:06.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.639" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:06.637" endtime="20201029 09:33:06.640"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:06.615" endtime="20201029 09:33:06.640"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:06.613" endtime="20201029 09:33:06.641"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.612" endtime="20201029 09:33:06.641"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:06.645" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:06.644" endtime="20201029 09:33:06.645"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.642" endtime="20201029 09:33:06.646"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.611" endtime="20201029 09:33:06.646"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.610" endtime="20201029 09:33:06.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.647" endtime="20201029 09:33:06.648"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.609" endtime="20201029 09:33:06.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.649" endtime="20201029 09:33:06.651"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.608" endtime="20201029 09:33:06.652"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.091" endtime="20201029 09:33:06.652"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:06.658" endtime="20201029 09:33:06.678"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.656" endtime="20201029 09:33:06.678"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.691" endtime="20201029 09:33:06.706"></status>
</kw>
<msg timestamp="20201029 09:33:06.707" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.690" endtime="20201029 09:33:06.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.709" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.708" endtime="20201029 09:33:06.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.712" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:06.710" endtime="20201029 09:33:06.713"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:06.687" endtime="20201029 09:33:06.713"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:06.685" endtime="20201029 09:33:06.714"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.684" endtime="20201029 09:33:06.714"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:06.718" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:06.717" endtime="20201029 09:33:06.718"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.715" endtime="20201029 09:33:06.718"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.683" endtime="20201029 09:33:06.719"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.682" endtime="20201029 09:33:06.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.719" endtime="20201029 09:33:06.721"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.681" endtime="20201029 09:33:06.721"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.679" endtime="20201029 09:33:06.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.655" endtime="20201029 09:33:06.722"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.731" endtime="20201029 09:33:06.742"></status>
</kw>
<msg timestamp="20201029 09:33:06.743" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.729" endtime="20201029 09:33:06.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.745" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.744" endtime="20201029 09:33:06.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.746" endtime="20201029 09:33:06.748"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.727" endtime="20201029 09:33:06.748"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.725" endtime="20201029 09:33:06.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.755" endtime="20201029 09:33:07.045"></status>
</kw>
<msg timestamp="20201029 09:33:07.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063261875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063262347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:06.754" endtime="20201029 09:33:07.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063261875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063262347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:07.050" endtime="20201029 09:33:07.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.058" endtime="20201029 09:33:07.060"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.751" endtime="20201029 09:33:07.060"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.749" endtime="20201029 09:33:07.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:07.065" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:07.061" endtime="20201029 09:33:07.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:07.069" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7200...</msg>
<status status="PASS" starttime="20201029 09:33:07.066" endtime="20201029 09:33:07.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.074" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:07.072" endtime="20201029 09:33:07.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.076" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.729999999869561e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999869561e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.869999999934649e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201029 09:33:07.075" endtime="20201029 09:33:07.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.070" endtime="20201029 09:33:07.078"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.724" endtime="20201029 09:33:07.078"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.723" endtime="20201029 09:33:07.078"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.086" endtime="20201029 09:33:07.097"></status>
</kw>
<msg timestamp="20201029 09:33:07.098" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.085" endtime="20201029 09:33:07.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.100" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.099" endtime="20201029 09:33:07.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.101" endtime="20201029 09:33:07.103"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.082" endtime="20201029 09:33:07.104"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.080" endtime="20201029 09:33:07.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.110" endtime="20201029 09:33:07.417"></status>
</kw>
<msg timestamp="20201029 09:33:07.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063959958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063960431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:07.109" endtime="20201029 09:33:07.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063959958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063960431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:07.423" endtime="20201029 09:33:07.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.435" endtime="20201029 09:33:07.437"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.106" endtime="20201029 09:33:07.438"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.105" endtime="20201029 09:33:07.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:07.443" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.729999999869561e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:33:07.439" endtime="20201029 09:33:07.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:07.449" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999869561e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.730...</msg>
<status status="PASS" starttime="20201029 09:33:07.444" endtime="20201029 09:33:07.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.453" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:07.452" endtime="20201029 09:33:07.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.456" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999869561e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.869999999934649e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999662357e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999999662357e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.869999999934649e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.859999999662357e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.869999999934649e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.859999999662357e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07]</msg>
<status status="PASS" starttime="20201029 09:33:07.454" endtime="20201029 09:33:07.456"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.450" endtime="20201029 09:33:07.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.079" endtime="20201029 09:33:07.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.079" endtime="20201029 09:33:07.458"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.465" endtime="20201029 09:33:07.476"></status>
</kw>
<msg timestamp="20201029 09:33:07.477" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.464" endtime="20201029 09:33:07.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.479" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.478" endtime="20201029 09:33:07.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.480" endtime="20201029 09:33:07.482"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.461" endtime="20201029 09:33:07.482"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.460" endtime="20201029 09:33:07.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.490" endtime="20201029 09:33:07.791"></status>
</kw>
<msg timestamp="20201029 09:33:07.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.408373, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.408373472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:07.488" endtime="20201029 09:33:07.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.408373, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.408373472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:07.796" endtime="20201029 09:33:07.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.807" endtime="20201029 09:33:07.808"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.485" endtime="20201029 09:33:07.809"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.484" endtime="20201029 09:33:07.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:07.814" level="INFO">${RESULT} = [{'diff': 4.720000000291158e-07}, {'diff': 4.859999999662357e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 09:33:07.810" endtime="20201029 09:33:07.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:07.819" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000291158e-07, 4.859999999662357e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.71...</msg>
<status status="PASS" starttime="20201029 09:33:07.815" endtime="20201029 09:33:07.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.823" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:07.822" endtime="20201029 09:33:07.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.826" level="INFO">VALUE: [4.720000000291158e-07, 4.859999999662357e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.859999999107245e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999999934649e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.859999999107245e-07]</msg>
<status status="PASS" starttime="20201029 09:33:07.824" endtime="20201029 09:33:07.826"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.820" endtime="20201029 09:33:07.827"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.458" endtime="20201029 09:33:07.827"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.458" endtime="20201029 09:33:07.827"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.836" endtime="20201029 09:33:07.847"></status>
</kw>
<msg timestamp="20201029 09:33:07.847" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.833" endtime="20201029 09:33:07.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.850" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.848" endtime="20201029 09:33:07.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.851" endtime="20201029 09:33:07.853"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.831" endtime="20201029 09:33:07.853"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.829" endtime="20201029 09:33:07.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.860" endtime="20201029 09:33:08.167"></status>
</kw>
<msg timestamp="20201029 09:33:08.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.776680944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.776681431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:07.859" endtime="20201029 09:33:08.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.776680944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.776681431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.173" endtime="20201029 09:33:08.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.185" endtime="20201029 09:33:08.187"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.856" endtime="20201029 09:33:08.188"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.854" endtime="20201029 09:33:08.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:08.192" level="INFO">${RESULT} = [{'diff': 4.869999999934649e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999999453227e-07...</msg>
<status status="PASS" starttime="20201029 09:33:08.189" endtime="20201029 09:33:08.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:08.198" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.869999999934649e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:33:08.194" endtime="20201029 09:33:08.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.202" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:08.201" endtime="20201029 09:33:08.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.205" level="INFO">VALUE: [4.869999999934649e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.859999999107245e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 09:33:08.203" endtime="20201029 09:33:08.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.199" endtime="20201029 09:33:08.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.828" endtime="20201029 09:33:08.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.827" endtime="20201029 09:33:08.206"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.214" endtime="20201029 09:33:08.224"></status>
</kw>
<msg timestamp="20201029 09:33:08.225" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.213" endtime="20201029 09:33:08.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.227" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.226" endtime="20201029 09:33:08.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.229" endtime="20201029 09:33:08.231"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.210" endtime="20201029 09:33:08.231"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.208" endtime="20201029 09:33:08.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.238" endtime="20201029 09:33:08.548"></status>
</kw>
<msg timestamp="20201029 09:33:08.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.136428639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.136429111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.237" endtime="20201029 09:33:08.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.136428639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.136429111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.553" endtime="20201029 09:33:08.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.563" endtime="20201029 09:33:08.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.234" endtime="20201029 09:33:08.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.232" endtime="20201029 09:33:08.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:08.571" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:33:08.567" endtime="20201029 09:33:08.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:08.577" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:33:08.572" endtime="20201029 09:33:08.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.581" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:08.580" endtime="20201029 09:33:08.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.586" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:08.582" endtime="20201029 09:33:08.587"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.578" endtime="20201029 09:33:08.588"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.207" endtime="20201029 09:33:08.589"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.207" endtime="20201029 09:33:08.589"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.607" endtime="20201029 09:33:08.625"></status>
</kw>
<msg timestamp="20201029 09:33:08.631" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.604" endtime="20201029 09:33:08.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.643" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.635" endtime="20201029 09:33:08.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.646" endtime="20201029 09:33:08.650"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.598" endtime="20201029 09:33:08.651"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.594" endtime="20201029 09:33:08.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.677" endtime="20201029 09:33:08.980"></status>
</kw>
<msg timestamp="20201029 09:33:08.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.505578681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.505579153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.673" endtime="20201029 09:33:08.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.505578681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.505579153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.985" endtime="20201029 09:33:08.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.995" endtime="20201029 09:33:08.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.662" endtime="20201029 09:33:08.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.657" endtime="20201029 09:33:08.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:09.003" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}...</msg>
<status status="PASS" starttime="20201029 09:33:08.999" endtime="20201029 09:33:09.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:09.008" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 09:33:09.004" endtime="20201029 09:33:09.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.012" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:09.011" endtime="20201029 09:33:09.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.015" level="INFO">VALUE: [4.7199999997360464e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7200000019564925e-07]</msg>
<status status="PASS" starttime="20201029 09:33:09.013" endtime="20201029 09:33:09.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.009" endtime="20201029 09:33:09.016"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.591" endtime="20201029 09:33:09.016"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.590" endtime="20201029 09:33:09.017"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.026" endtime="20201029 09:33:09.036"></status>
</kw>
<msg timestamp="20201029 09:33:09.037" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.024" endtime="20201029 09:33:09.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.039" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.038" endtime="20201029 09:33:09.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.040" endtime="20201029 09:33:09.042"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.020" endtime="20201029 09:33:09.043"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.019" endtime="20201029 09:33:09.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.050" endtime="20201029 09:33:09.357"></status>
</kw>
<msg timestamp="20201029 09:33:09.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.889096972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.889097444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.048" endtime="20201029 09:33:09.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.889096972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.889097444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.363" endtime="20201029 09:33:09.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.373" endtime="20201029 09:33:09.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.046" endtime="20201029 09:33:09.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.044" endtime="20201029 09:33:09.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:09.380" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.859999997997022e-07...</msg>
<status status="PASS" starttime="20201029 09:33:09.376" endtime="20201029 09:33:09.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:09.385" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 09:33:09.381" endtime="20201029 09:33:09.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.390" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:09.389" endtime="20201029 09:33:09.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.394" level="INFO">VALUE: [4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 09:33:09.391" endtime="20201029 09:33:09.395"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.386" endtime="20201029 09:33:09.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.017" endtime="20201029 09:33:09.397"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.017" endtime="20201029 09:33:09.397"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.414" endtime="20201029 09:33:09.428"></status>
</kw>
<msg timestamp="20201029 09:33:09.429" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.411" endtime="20201029 09:33:09.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.434" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.431" endtime="20201029 09:33:09.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.436" endtime="20201029 09:33:09.440"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.405" endtime="20201029 09:33:09.441"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.402" endtime="20201029 09:33:09.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.455" endtime="20201029 09:33:09.780"></status>
</kw>
<msg timestamp="20201029 09:33:09.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.295238556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.295239028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.452" endtime="20201029 09:33:09.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.295238556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.295239028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.785" endtime="20201029 09:33:09.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.796" endtime="20201029 09:33:09.797"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.447" endtime="20201029 09:33:09.798"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.443" endtime="20201029 09:33:09.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:09.803" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 09:33:09.799" endtime="20201029 09:33:09.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:09.809" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07,...</msg>
<status status="PASS" starttime="20201029 09:33:09.804" endtime="20201029 09:33:09.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.813" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:09.812" endtime="20201029 09:33:09.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.816" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 09:33:09.814" endtime="20201029 09:33:09.816"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.810" endtime="20201029 09:33:09.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.399" endtime="20201029 09:33:09.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.398" endtime="20201029 09:33:09.817"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.826" endtime="20201029 09:33:09.836"></status>
</kw>
<msg timestamp="20201029 09:33:09.836" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.824" endtime="20201029 09:33:09.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.839" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.838" endtime="20201029 09:33:09.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.840" endtime="20201029 09:33:09.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.821" endtime="20201029 09:33:09.843"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.820" endtime="20201029 09:33:09.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.851" endtime="20201029 09:33:10.160"></status>
</kw>
<msg timestamp="20201029 09:33:10.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.676145597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.676146069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.849" endtime="20201029 09:33:10.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.676145597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.676146069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.165" endtime="20201029 09:33:10.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.175" endtime="20201029 09:33:10.177"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.846" endtime="20201029 09:33:10.177"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.844" endtime="20201029 09:33:10.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:10.182" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.869999998824426e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:33:10.178" endtime="20201029 09:33:10.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:10.187" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.869999998824426e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 09:33:10.183" endtime="20201029 09:33:10.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.191" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:10.190" endtime="20201029 09:33:10.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.194" level="INFO">VALUE: [4.7199999997360464e-07, 4.869999998824426e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:10.192" endtime="20201029 09:33:10.195"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.188" endtime="20201029 09:33:10.195"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.818" endtime="20201029 09:33:10.196"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.818" endtime="20201029 09:33:10.196"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.205" endtime="20201029 09:33:10.218"></status>
</kw>
<msg timestamp="20201029 09:33:10.219" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.202" endtime="20201029 09:33:10.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.224" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.221" endtime="20201029 09:33:10.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.226" endtime="20201029 09:33:10.230"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.199" endtime="20201029 09:33:10.231"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.198" endtime="20201029 09:33:10.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.245" endtime="20201029 09:33:10.566"></status>
</kw>
<msg timestamp="20201029 09:33:10.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.076542028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.0765425, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:10.242" endtime="20201029 09:33:10.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.076542028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.0765425, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:10.570" endtime="20201029 09:33:10.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.581" endtime="20201029 09:33:10.583"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.236" endtime="20201029 09:33:10.583"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.233" endtime="20201029 09:33:10.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:10.588" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.869999998824426e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:33:10.584" endtime="20201029 09:33:10.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:10.593" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.719...</msg>
<status status="PASS" starttime="20201029 09:33:10.589" endtime="20201029 09:33:10.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.597" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:10.596" endtime="20201029 09:33:10.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.600" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.869999998824426e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:10.598" endtime="20201029 09:33:10.600"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.594" endtime="20201029 09:33:10.601"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.197" endtime="20201029 09:33:10.601"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.196" endtime="20201029 09:33:10.601"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.609" endtime="20201029 09:33:10.620"></status>
</kw>
<msg timestamp="20201029 09:33:10.620" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.608" endtime="20201029 09:33:10.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.623" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.621" endtime="20201029 09:33:10.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.624" endtime="20201029 09:33:10.625"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.605" endtime="20201029 09:33:10.626"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.603" endtime="20201029 09:33:10.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.633" endtime="20201029 09:33:10.951"></status>
</kw>
<msg timestamp="20201029 09:33:10.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.447999389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.447999861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.631" endtime="20201029 09:33:10.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.447999389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.447999861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.956" endtime="20201029 09:33:10.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.967" endtime="20201029 09:33:10.969"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.629" endtime="20201029 09:33:10.969"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.627" endtime="20201029 09:33:10.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:10.974" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.859999997997022e-07}...</msg>
<status status="PASS" starttime="20201029 09:33:10.970" endtime="20201029 09:33:10.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:10.979" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 09:33:10.975" endtime="20201029 09:33:10.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.983" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:10.982" endtime="20201029 09:33:10.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.985" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.869999998824426e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:10.984" endtime="20201029 09:33:10.986"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.979" endtime="20201029 09:33:10.986"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.602" endtime="20201029 09:33:10.987"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.602" endtime="20201029 09:33:10.987"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.996" endtime="20201029 09:33:11.007"></status>
</kw>
<msg timestamp="20201029 09:33:11.007" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.993" endtime="20201029 09:33:11.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.010" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.008" endtime="20201029 09:33:11.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.011" endtime="20201029 09:33:11.013"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.990" endtime="20201029 09:33:11.013"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.989" endtime="20201029 09:33:11.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.020" endtime="20201029 09:33:11.331"></status>
</kw>
<msg timestamp="20201029 09:33:11.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.840736931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.840737403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.018" endtime="20201029 09:33:11.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.840736931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.840737403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.337" endtime="20201029 09:33:11.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.347" endtime="20201029 09:33:11.349"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.016" endtime="20201029 09:33:11.349"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.014" endtime="20201029 09:33:11.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:11.354" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000041769385e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 09:33:11.350" endtime="20201029 09:33:11.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:11.359" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07,...</msg>
<status status="PASS" starttime="20201029 09:33:11.355" endtime="20201029 09:33:11.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.364" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:11.363" endtime="20201029 09:33:11.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.366" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 09:33:11.365" endtime="20201029 09:33:11.367"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.360" endtime="20201029 09:33:11.367"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.988" endtime="20201029 09:33:11.368"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.987" endtime="20201029 09:33:11.368"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.376" endtime="20201029 09:33:11.386"></status>
</kw>
<msg timestamp="20201029 09:33:11.386" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.374" endtime="20201029 09:33:11.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.388" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.387" endtime="20201029 09:33:11.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.390" endtime="20201029 09:33:11.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.371" endtime="20201029 09:33:11.392"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.370" endtime="20201029 09:33:11.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.399" endtime="20201029 09:33:11.714"></status>
</kw>
<msg timestamp="20201029 09:33:11.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.217143681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.217144153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.397" endtime="20201029 09:33:11.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.217143681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.217144153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.726" endtime="20201029 09:33:11.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.736" endtime="20201029 09:33:11.737"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.395" endtime="20201029 09:33:11.738"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.393" endtime="20201029 09:33:11.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:11.743" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 09:33:11.739" endtime="20201029 09:33:11.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:11.748" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 09:33:11.744" endtime="20201029 09:33:11.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.753" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:11.752" endtime="20201029 09:33:11.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.755" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 09:33:11.754" endtime="20201029 09:33:11.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.749" endtime="20201029 09:33:11.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.368" endtime="20201029 09:33:11.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.368" endtime="20201029 09:33:11.757"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.765" endtime="20201029 09:33:11.775"></status>
</kw>
<msg timestamp="20201029 09:33:11.776" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.763" endtime="20201029 09:33:11.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.778" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.777" endtime="20201029 09:33:11.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.779" endtime="20201029 09:33:11.781"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.760" endtime="20201029 09:33:11.781"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.759" endtime="20201029 09:33:11.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.788" endtime="20201029 09:33:12.100"></status>
</kw>
<msg timestamp="20201029 09:33:12.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.586298028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.5862985, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:11.787" endtime="20201029 09:33:12.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.586298028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.5862985, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:12.105" endtime="20201029 09:33:12.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.115" endtime="20201029 09:33:12.117"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.784" endtime="20201029 09:33:12.118"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.782" endtime="20201029 09:33:12.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:12.122" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 09:33:12.119" endtime="20201029 09:33:12.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:12.127" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.860000002437914e-07, ...</msg>
<status status="PASS" starttime="20201029 09:33:12.123" endtime="20201029 09:33:12.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.131" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:12.130" endtime="20201029 09:33:12.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.134" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.85999999355613e-07]</msg>
<status status="PASS" starttime="20201029 09:33:12.132" endtime="20201029 09:33:12.134"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.128" endtime="20201029 09:33:12.135"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.758" endtime="20201029 09:33:12.135"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.757" endtime="20201029 09:33:12.135"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.145" endtime="20201029 09:33:12.156"></status>
</kw>
<msg timestamp="20201029 09:33:12.157" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.144" endtime="20201029 09:33:12.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.159" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.158" endtime="20201029 09:33:12.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.160" endtime="20201029 09:33:12.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.139" endtime="20201029 09:33:12.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.137" endtime="20201029 09:33:12.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.170" endtime="20201029 09:33:12.487"></status>
</kw>
<msg timestamp="20201029 09:33:12.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.964635694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.964636181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.168" endtime="20201029 09:33:12.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.964635694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.964636181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.492" endtime="20201029 09:33:12.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.502" endtime="20201029 09:33:12.503"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.165" endtime="20201029 09:33:12.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.163" endtime="20201029 09:33:12.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:12.509" level="INFO">${RESULT} = [{'diff': 4.870000003265318e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:33:12.505" endtime="20201029 09:33:12.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:12.514" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.870000003265318e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.730...</msg>
<status status="PASS" starttime="20201029 09:33:12.510" endtime="20201029 09:33:12.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.518" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:12.517" endtime="20201029 09:33:12.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.521" level="INFO">VALUE: [4.870000003265318e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:12.519" endtime="20201029 09:33:12.521"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.515" endtime="20201029 09:33:12.522"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.136" endtime="20201029 09:33:12.522"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.136" endtime="20201029 09:33:12.522"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.530" endtime="20201029 09:33:12.541"></status>
</kw>
<msg timestamp="20201029 09:33:12.541" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.528" endtime="20201029 09:33:12.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.544" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.542" endtime="20201029 09:33:12.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.545" endtime="20201029 09:33:12.546"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.526" endtime="20201029 09:33:12.547"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.524" endtime="20201029 09:33:12.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.554" endtime="20201029 09:33:12.881"></status>
</kw>
<msg timestamp="20201029 09:33:12.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.336261236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.336261722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.553" endtime="20201029 09:33:12.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.336261236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.336261722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.890" endtime="20201029 09:33:12.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.907" endtime="20201029 09:33:12.911"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.550" endtime="20201029 09:33:12.912"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.548" endtime="20201029 09:33:12.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:12.922" level="INFO">${RESULT} = [{'diff': 4.85999999355613e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:12.915" endtime="20201029 09:33:12.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:12.934" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.85999999355613e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199...</msg>
<status status="PASS" starttime="20201029 09:33:12.925" endtime="20201029 09:33:12.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.943" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:12.940" endtime="20201029 09:33:12.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.949" level="INFO">VALUE: [4.85999999355613e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:12.946" endtime="20201029 09:33:12.950"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.936" endtime="20201029 09:33:12.952"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.523" endtime="20201029 09:33:12.953"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.523" endtime="20201029 09:33:12.954"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.967" endtime="20201029 09:33:12.978"></status>
</kw>
<msg timestamp="20201029 09:33:12.979" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.964" endtime="20201029 09:33:12.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.983" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.980" endtime="20201029 09:33:12.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.984" endtime="20201029 09:33:12.987"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.960" endtime="20201029 09:33:12.988"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.957" endtime="20201029 09:33:12.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.998" endtime="20201029 09:33:13.323"></status>
</kw>
<msg timestamp="20201029 09:33:13.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.711632556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.711633028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.996" endtime="20201029 09:33:13.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.711632556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.711633028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.328" endtime="20201029 09:33:13.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.338" endtime="20201029 09:33:13.339"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.993" endtime="20201029 09:33:13.340"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.989" endtime="20201029 09:33:13.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:13.345" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:33:13.341" endtime="20201029 09:33:13.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:13.349" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 09:33:13.346" endtime="20201029 09:33:13.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.354" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:13.353" endtime="20201029 09:33:13.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.356" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 09:33:13.355" endtime="20201029 09:33:13.357"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.350" endtime="20201029 09:33:13.357"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.955" endtime="20201029 09:33:13.358"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.954" endtime="20201029 09:33:13.358"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.367" endtime="20201029 09:33:13.378"></status>
</kw>
<msg timestamp="20201029 09:33:13.379" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.365" endtime="20201029 09:33:13.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.381" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.380" endtime="20201029 09:33:13.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.382" endtime="20201029 09:33:13.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.362" endtime="20201029 09:33:13.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.360" endtime="20201029 09:33:13.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.392" endtime="20201029 09:33:13.692"></status>
</kw>
<msg timestamp="20201029 09:33:13.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.139130847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.139131319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.390" endtime="20201029 09:33:13.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.139130847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.139131319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.697" endtime="20201029 09:33:13.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.707" endtime="20201029 09:33:13.708"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.388" endtime="20201029 09:33:13.709"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.386" endtime="20201029 09:33:13.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:13.714" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:33:13.710" endtime="20201029 09:33:13.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:13.719" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.719...</msg>
<status status="PASS" starttime="20201029 09:33:13.715" endtime="20201029 09:33:13.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.723" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:13.722" endtime="20201029 09:33:13.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.726" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:13.725" endtime="20201029 09:33:13.726"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.720" endtime="20201029 09:33:13.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.358" endtime="20201029 09:33:13.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.358" endtime="20201029 09:33:13.728"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.736" endtime="20201029 09:33:13.747"></status>
</kw>
<msg timestamp="20201029 09:33:13.748" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.734" endtime="20201029 09:33:13.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.750" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.749" endtime="20201029 09:33:13.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.751" endtime="20201029 09:33:13.753"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.731" endtime="20201029 09:33:13.754"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.730" endtime="20201029 09:33:13.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.761" endtime="20201029 09:33:14.073"></status>
</kw>
<msg timestamp="20201029 09:33:14.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.528105458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.528105931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.759" endtime="20201029 09:33:14.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.528105458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.528105931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.078" endtime="20201029 09:33:14.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.089" endtime="20201029 09:33:14.090"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.757" endtime="20201029 09:33:14.091"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.755" endtime="20201029 09:33:14.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:14.096" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999991681666e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 09:33:14.092" endtime="20201029 09:33:14.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:14.102" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.71...</msg>
<status status="PASS" starttime="20201029 09:33:14.097" endtime="20201029 09:33:14.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.106" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:14.105" endtime="20201029 09:33:14.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.109" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 09:33:14.107" endtime="20201029 09:33:14.109"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.103" endtime="20201029 09:33:14.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.728" endtime="20201029 09:33:14.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.728" endtime="20201029 09:33:14.111"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.119" endtime="20201029 09:33:14.130"></status>
</kw>
<msg timestamp="20201029 09:33:14.130" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.117" endtime="20201029 09:33:14.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.133" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.131" endtime="20201029 09:33:14.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.134" endtime="20201029 09:33:14.136"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.115" endtime="20201029 09:33:14.137"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.113" endtime="20201029 09:33:14.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.145" endtime="20201029 09:33:14.455"></status>
</kw>
<msg timestamp="20201029 09:33:14.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.887944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.887944472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:14.142" endtime="20201029 09:33:14.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.887944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.887944472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:14.460" endtime="20201029 09:33:14.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.471" endtime="20201029 09:33:14.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.140" endtime="20201029 09:33:14.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.138" endtime="20201029 09:33:14.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:14.478" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.860000002437914e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:33:14.475" endtime="20201029 09:33:14.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:14.483" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 09:33:14.479" endtime="20201029 09:33:14.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.487" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:14.486" endtime="20201029 09:33:14.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.490" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:14.489" endtime="20201029 09:33:14.491"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.484" endtime="20201029 09:33:14.491"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.111" endtime="20201029 09:33:14.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.111" endtime="20201029 09:33:14.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.723" endtime="20201029 09:33:14.492"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:06.652" endtime="20201029 09:33:14.493" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:14.500" endtime="20201029 09:33:14.520"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.498" endtime="20201029 09:33:14.520"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.534" endtime="20201029 09:33:14.548"></status>
</kw>
<msg timestamp="20201029 09:33:14.549" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.533" endtime="20201029 09:33:14.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.552" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.550" endtime="20201029 09:33:14.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.555" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:14.553" endtime="20201029 09:33:14.555"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:14.530" endtime="20201029 09:33:14.556"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:14.528" endtime="20201029 09:33:14.556"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.526" endtime="20201029 09:33:14.557"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:14.561" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:14.560" endtime="20201029 09:33:14.561"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.558" endtime="20201029 09:33:14.561"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.525" endtime="20201029 09:33:14.562"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.524" endtime="20201029 09:33:14.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.563" endtime="20201029 09:33:14.564"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.523" endtime="20201029 09:33:14.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.521" endtime="20201029 09:33:14.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.497" endtime="20201029 09:33:14.565"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.574" endtime="20201029 09:33:14.587"></status>
</kw>
<msg timestamp="20201029 09:33:14.587" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.573" endtime="20201029 09:33:14.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.590" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.588" endtime="20201029 09:33:14.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.591" endtime="20201029 09:33:14.593"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.570" endtime="20201029 09:33:14.593"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.568" endtime="20201029 09:33:14.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.601" endtime="20201029 09:33:14.887"></status>
</kw>
<msg timestamp="20201029 09:33:14.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066057597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066059972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.599" endtime="20201029 09:33:14.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066057597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066059972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.891" endtime="20201029 09:33:14.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.900" endtime="20201029 09:33:14.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.596" endtime="20201029 09:33:14.903"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.594" endtime="20201029 09:33:14.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:14.907" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.360999999992397e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3750000000127836e-06}, {'diff': 2.333000000007135e-06}, {'diff': 2.360999999992397e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:14.904" endtime="20201029 09:33:14.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:14.912" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.360999999992397e-06, 2.3749999999989058e-06, 2.3750000000127836e-06, 2.333000000007135e-06, 2.360999999992397e-06, 2.346999999999766e-06, 2.360999999992397e-06, 2.3...</msg>
<status status="PASS" starttime="20201029 09:33:14.908" endtime="20201029 09:33:14.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.916" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:14.915" endtime="20201029 09:33:14.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.919" level="INFO">VALUE: [2.3749999999989058e-06, 2.360999999992397e-06, 2.3749999999989058e-06, 2.3750000000127836e-06, 2.333000000007135e-06, 2.360999999992397e-06, 2.346999999999766e-06, 2.360999999992397e-06, 2.346999999999766e-06, 2.4309999999971854e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 2.319000000000626e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.4169999999906766e-06, 2.4160000000050808e-06, 2.3060000000074687e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.4030000000119234e-06, 2.3749999999989058e-06, 2.4160000000050808e-06, 2.3749999999989058e-06, 2.3480000000131174e-06, 2.3749999999989058e-06, 2.305999999993591e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.333000000007135e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.360999999992397e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.305000000007995e-06]</msg>
<status status="PASS" starttime="20201029 09:33:14.917" endtime="20201029 09:33:14.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.913" endtime="20201029 09:33:14.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.567" endtime="20201029 09:33:14.921"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.566" endtime="20201029 09:33:14.921"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.929" endtime="20201029 09:33:14.940"></status>
</kw>
<msg timestamp="20201029 09:33:14.941" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.927" endtime="20201029 09:33:14.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.944" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.942" endtime="20201029 09:33:14.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.945" endtime="20201029 09:33:14.946"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.925" endtime="20201029 09:33:14.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.923" endtime="20201029 09:33:14.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.954" endtime="20201029 09:33:15.254"></status>
</kw>
<msg timestamp="20201029 09:33:15.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066477181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066479556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.952" endtime="20201029 09:33:15.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066477181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066479556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.259" endtime="20201029 09:33:15.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.269" endtime="20201029 09:33:15.271"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.950" endtime="20201029 09:33:15.271"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.948" endtime="20201029 09:33:15.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:15.276" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.3889999999915368e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.333000000007135e-06}, {'diff': 2.3749999999989058e-0...</msg>
<status status="PASS" starttime="20201029 09:33:15.273" endtime="20201029 09:33:15.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:15.282" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.333000000007135e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:15.277" endtime="20201029 09:33:15.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.286" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:15.285" endtime="20201029 09:33:15.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.288" level="INFO">VALUE: [2.3749999999989058e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.333000000007135e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.360999999992397e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.305000000007995e-06, 2.431000000024941e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.347999999985362e-06, 2.3749999999989058e-06, 2.3189999999728705e-06, 2.3200000000000998e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3189999999728705e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.4160000000050808e-06, 2.416999999976799e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 2.444999999962061e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3880000000198187e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.4020000000124497e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.3050000000357507e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.2920000000148377e-06, 2.3610000000062747e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3610000000062747e-06]</msg>
<status status="PASS" starttime="20201029 09:33:15.287" endtime="20201029 09:33:15.289"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.282" endtime="20201029 09:33:15.289"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.922" endtime="20201029 09:33:15.290"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.921" endtime="20201029 09:33:15.290"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.298" endtime="20201029 09:33:15.311"></status>
</kw>
<msg timestamp="20201029 09:33:15.311" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.296" endtime="20201029 09:33:15.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.314" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.312" endtime="20201029 09:33:15.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.315" endtime="20201029 09:33:15.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.294" endtime="20201029 09:33:15.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.292" endtime="20201029 09:33:15.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.324" endtime="20201029 09:33:15.649"></status>
</kw>
<msg timestamp="20201029 09:33:15.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.410805458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.410807833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.323" endtime="20201029 09:33:15.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.410805458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.410807833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.654" endtime="20201029 09:33:15.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.664" endtime="20201029 09:33:15.666"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.320" endtime="20201029 09:33:15.667"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.318" endtime="20201029 09:33:15.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:15.671" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3889999999915368e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3610000000062747e-06}, {'diff': 2.3050000000357507e-...</msg>
<status status="PASS" starttime="20201029 09:33:15.668" endtime="20201029 09:33:15.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:15.676" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.3050000000357507e-06, 2.3749999999989058e-06, 2.3609999999507636e-06...</msg>
<status status="PASS" starttime="20201029 09:33:15.672" endtime="20201029 09:33:15.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.680" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:15.679" endtime="20201029 09:33:15.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.683" level="INFO">VALUE: [2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.3050000000357507e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.2920000000148377e-06, 2.3610000000062747e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3610000000062747e-06, 2.4159999999495696e-06, 2.361000000061786e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.361000000061786e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.4019999999014274e-06, 2.3609999999507636e-06, 2.361000000061786e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.38800000007533e-06, 2.361000000061786e-06, 2.3749999999989058e-06, 2.457999999982974e-06, 2.362000000033504e-06, 2.3469999999026214e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.2909999999320974e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.41700000003231e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.38800000007533e-06, 2.3329999999655016e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.361000000061786e-06, 2.3470000000136437e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06]</msg>
<status status="PASS" starttime="20201029 09:33:15.681" endtime="20201029 09:33:15.683"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.677" endtime="20201029 09:33:15.684"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.291" endtime="20201029 09:33:15.684"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.290" endtime="20201029 09:33:15.684"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.693" endtime="20201029 09:33:15.705"></status>
</kw>
<msg timestamp="20201029 09:33:15.705" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.690" endtime="20201029 09:33:15.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.708" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.707" endtime="20201029 09:33:15.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.709" endtime="20201029 09:33:15.711"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.688" endtime="20201029 09:33:15.711"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.686" endtime="20201029 09:33:15.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.718" endtime="20201029 09:33:16.025"></status>
</kw>
<msg timestamp="20201029 09:33:16.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.768985264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.768987681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.717" endtime="20201029 09:33:16.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.768985264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.768987681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.029" endtime="20201029 09:33:16.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.040" endtime="20201029 09:33:16.042"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.714" endtime="20201029 09:33:16.042"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.712" endtime="20201029 09:33:16.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:16.047" level="INFO">${RESULT} = [{'diff': 2.41700000003231e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.38800000007533e-06}, {'diff': 2.3329999999655016e-06},...</msg>
<status status="PASS" starttime="20201029 09:33:16.043" endtime="20201029 09:33:16.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:16.052" level="INFO">${OVERHEAD} = {'diff': [2.41700000003231e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.38800000007533e-06, 2.3329999999655016e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2....</msg>
<status status="PASS" starttime="20201029 09:33:16.048" endtime="20201029 09:33:16.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.056" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:16.055" endtime="20201029 09:33:16.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.059" level="INFO">VALUE: [2.41700000003231e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.38800000007533e-06, 2.3329999999655016e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.361000000061786e-06, 2.3470000000136437e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.4170000001433323e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.362000000033504e-06, 2.3889999998250033e-06, 2.4439999999348316e-06, 2.333000000076524e-06, 2.361000000172808e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.3879999999643076e-06, 2.3190000000283817e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.4020000000124497e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.333000000076524e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3329999998544793e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06]</msg>
<status status="PASS" starttime="20201029 09:33:16.058" endtime="20201029 09:33:16.059"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.053" endtime="20201029 09:33:16.060"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.685" endtime="20201029 09:33:16.060"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.685" endtime="20201029 09:33:16.061"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.068" endtime="20201029 09:33:16.080"></status>
</kw>
<msg timestamp="20201029 09:33:16.080" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.067" endtime="20201029 09:33:16.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.083" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.081" endtime="20201029 09:33:16.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.084" endtime="20201029 09:33:16.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.064" endtime="20201029 09:33:16.086"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.063" endtime="20201029 09:33:16.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.093" endtime="20201029 09:33:16.402"></status>
</kw>
<msg timestamp="20201029 09:33:16.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.1550975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.155099861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:16.091" endtime="20201029 09:33:16.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.1550975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.155099861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:16.407" endtime="20201029 09:33:16.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.417" endtime="20201029 09:33:16.419"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.089" endtime="20201029 09:33:16.420"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.087" endtime="20201029 09:33:16.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:16.425" level="INFO">${RESULT} = [{'diff': 2.3609999999507636e-06}, {'diff': 2.3889999998250033e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.333000000076524e-0...</msg>
<status status="PASS" starttime="20201029 09:33:16.421" endtime="20201029 09:33:16.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:16.431" level="INFO">${OVERHEAD} = {'diff': [2.3609999999507636e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.333000000076524e-06, 2.389000000047048e-06, 2.3749999999989058e-06, ...</msg>
<status status="PASS" starttime="20201029 09:33:16.426" endtime="20201029 09:33:16.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.435" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:16.434" endtime="20201029 09:33:16.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.438" level="INFO">VALUE: [2.3609999999507636e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.333000000076524e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3329999998544793e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.43099999996943e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.4029999998731455e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.445000000017572e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.361000000172808e-06, 2.3749999999989058e-06, 2.4029999998731455e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.361000000172808e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.347000000124666e-06, 2.3749999999989058e-06, 2.3190000000283817e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3190000000283817e-06, 2.389000000047048e-06, 2.4029999998731455e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.4029999998731455e-06, 2.3749999999989058e-06, 2.333000000076524e-06, 2.361000000172808e-06, 2.3749999999989058e-06]</msg>
<status status="PASS" starttime="20201029 09:33:16.436" endtime="20201029 09:33:16.439"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.432" endtime="20201029 09:33:16.439"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.061" endtime="20201029 09:33:16.440"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.061" endtime="20201029 09:33:16.440"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.448" endtime="20201029 09:33:16.460"></status>
</kw>
<msg timestamp="20201029 09:33:16.460" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.446" endtime="20201029 09:33:16.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.463" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.461" endtime="20201029 09:33:16.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.464" endtime="20201029 09:33:16.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.444" endtime="20201029 09:33:16.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.442" endtime="20201029 09:33:16.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.473" endtime="20201029 09:33:16.775"></status>
</kw>
<msg timestamp="20201029 09:33:16.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.521405042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.521407361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.471" endtime="20201029 09:33:16.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.521405042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.521407361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.780" endtime="20201029 09:33:16.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.790" endtime="20201029 09:33:16.792"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.469" endtime="20201029 09:33:16.793"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.467" endtime="20201029 09:33:16.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:16.797" level="INFO">${RESULT} = [{'diff': 2.3190000000283817e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3190000000283817e-06}, {'diff': 2.389000000047048e-0...</msg>
<status status="PASS" starttime="20201029 09:33:16.794" endtime="20201029 09:33:16.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:16.802" level="INFO">${OVERHEAD} = {'diff': [2.3190000000283817e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3190000000283817e-06, 2.389000000047048e-06, 2.4029999998731455e-06, 2.3609999999507636e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:16.798" endtime="20201029 09:33:16.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.806" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:16.805" endtime="20201029 09:33:16.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.809" level="INFO">VALUE: [2.3190000000283817e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3190000000283817e-06, 2.389000000047048e-06, 2.4029999998731455e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.4029999998731455e-06, 2.3749999999989058e-06, 2.333000000076524e-06, 2.361000000172808e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.361000000172808e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.361000000172808e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.3879999999643076e-06, 2.3749999999989058e-06, 2.3339999999372196e-06, 2.4439999999348316e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.40300000009519e-06, 2.3749999999989058e-06, 2.361000000172808e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.320000000111122e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.388000000186352e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3190000000283817e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.361000000172808e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.362000000033504e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3749999999989058e-06]</msg>
<status status="PASS" starttime="20201029 09:33:16.808" endtime="20201029 09:33:16.809"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.803" endtime="20201029 09:33:16.810"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.441" endtime="20201029 09:33:16.810"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.440" endtime="20201029 09:33:16.811"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.819" endtime="20201029 09:33:16.831"></status>
</kw>
<msg timestamp="20201029 09:33:16.831" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.818" endtime="20201029 09:33:16.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.834" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.832" endtime="20201029 09:33:16.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.835" endtime="20201029 09:33:16.836"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.814" endtime="20201029 09:33:16.837"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.813" endtime="20201029 09:33:16.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.844" endtime="20201029 09:33:17.161"></status>
</kw>
<msg timestamp="20201029 09:33:17.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.891033264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.891035583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.842" endtime="20201029 09:33:17.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.891033264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.891035583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.166" endtime="20201029 09:33:17.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.176" endtime="20201029 09:33:17.178"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.840" endtime="20201029 09:33:17.178"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.838" endtime="20201029 09:33:17.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:17.183" level="INFO">${RESULT} = [{'diff': 2.3190000000283817e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.389000000047048e-06}, {'diff': 2.389000000047048e-06}, {'diff': 2.389000000047048e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:17.180" endtime="20201029 09:33:17.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:17.189" level="INFO">${OVERHEAD} = {'diff': [2.3190000000283817e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.361000000172808e-06, 2.3609999999507636e-06, 2....</msg>
<status status="PASS" starttime="20201029 09:33:17.184" endtime="20201029 09:33:17.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.193" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:17.192" endtime="20201029 09:33:17.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.196" level="INFO">VALUE: [2.3190000000283817e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.361000000172808e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.362000000033504e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.374999999776861e-06, 2.3190000000283817e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.416000000060592e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3329999998544793e-06, 2.4029999998731455e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.43099999996943e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3339999999372196e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3329999998544793e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3339999999372196e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3750000002209504e-06]</msg>
<status status="PASS" starttime="20201029 09:33:17.194" endtime="20201029 09:33:17.196"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.189" endtime="20201029 09:33:17.196"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.811" endtime="20201029 09:33:17.197"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.811" endtime="20201029 09:33:17.197"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.205" endtime="20201029 09:33:17.217"></status>
</kw>
<msg timestamp="20201029 09:33:17.218" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.203" endtime="20201029 09:33:17.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.220" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.219" endtime="20201029 09:33:17.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.221" endtime="20201029 09:33:17.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.201" endtime="20201029 09:33:17.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.199" endtime="20201029 09:33:17.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.231" endtime="20201029 09:33:17.541"></status>
</kw>
<msg timestamp="20201029 09:33:17.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.253216542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.253218903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.229" endtime="20201029 09:33:17.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.253216542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.253218903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.547" endtime="20201029 09:33:17.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.557" endtime="20201029 09:33:17.558"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.226" endtime="20201029 09:33:17.559"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.225" endtime="20201029 09:33:17.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:17.563" level="INFO">${RESULT} = [{'diff': 2.3609999999507636e-06}, {'diff': 2.374999999776861e-06}, {'diff': 2.3329999998544793e-06}, {'diff': 2.389000000047048e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.374999999776861e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:17.560" endtime="20201029 09:33:17.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:17.569" level="INFO">${OVERHEAD} = {'diff': [2.3609999999507636e-06, 2.374999999776861e-06, 2.3329999998544793e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3...</msg>
<status status="PASS" starttime="20201029 09:33:17.564" endtime="20201029 09:33:17.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.573" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:17.572" endtime="20201029 09:33:17.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.576" level="INFO">VALUE: [2.3609999999507636e-06, 2.374999999776861e-06, 2.3329999998544793e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3339999999372196e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.43099999996943e-06, 2.4440000001568762e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3190000000283817e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3339999999372196e-06, 2.374999999776861e-06, 2.3339999999372196e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3889999996029587e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3329999998544793e-06, 2.320000000111122e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.374999999776861e-06, 2.4449999997955274e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.389000000047048e-06]</msg>
<status status="PASS" starttime="20201029 09:33:17.575" endtime="20201029 09:33:17.576"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.570" endtime="20201029 09:33:17.577"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.198" endtime="20201029 09:33:17.577"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.197" endtime="20201029 09:33:17.578"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.586" endtime="20201029 09:33:17.597"></status>
</kw>
<msg timestamp="20201029 09:33:17.598" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.584" endtime="20201029 09:33:17.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.600" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.599" endtime="20201029 09:33:17.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.601" endtime="20201029 09:33:17.603"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.581" endtime="20201029 09:33:17.603"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.580" endtime="20201029 09:33:17.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.612" endtime="20201029 09:33:17.942"></status>
</kw>
<msg timestamp="20201029 09:33:17.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.629355319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.629357639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.609" endtime="20201029 09:33:17.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.629355319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.629357639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.947" endtime="20201029 09:33:17.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.957" endtime="20201029 09:33:17.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.607" endtime="20201029 09:33:17.960"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.605" endtime="20201029 09:33:17.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:17.964" level="INFO">${RESULT} = [{'diff': 2.320000000111122e-06}, {'diff': 2.374999999776861e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.346999999680577e-06}, {'diff': 2.374999999776861e-06}, {'diff': 2.4449999997955274e-06},...</msg>
<status status="PASS" starttime="20201029 09:33:17.961" endtime="20201029 09:33:17.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:17.969" level="INFO">${OVERHEAD} = {'diff': [2.320000000111122e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.374999999776861e-06, 2.4449999997955274e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.36...</msg>
<status status="PASS" starttime="20201029 09:33:17.965" endtime="20201029 09:33:17.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.973" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:17.972" endtime="20201029 09:33:17.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.976" level="INFO">VALUE: [2.320000000111122e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.374999999776861e-06, 2.4449999997955274e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.361000000394853e-06, 2.4170000001433323e-06, 2.3609999999507636e-06, 2.4020000002344943e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.334000000381309e-06, 2.3889999996029587e-06, 2.374999999776861e-06, 2.4299999998866895e-06, 2.3879999999643076e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3059999998409353e-06, 2.347999999763317e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3879999999643076e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.4170000001433323e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.347999999763317e-06, 2.3889999996029587e-06]</msg>
<status status="PASS" starttime="20201029 09:33:17.974" endtime="20201029 09:33:17.976"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.970" endtime="20201029 09:33:17.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.578" endtime="20201029 09:33:17.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.578" endtime="20201029 09:33:17.977"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.986" endtime="20201029 09:33:17.998"></status>
</kw>
<msg timestamp="20201029 09:33:17.998" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.984" endtime="20201029 09:33:17.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.001" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.999" endtime="20201029 09:33:18.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.002" endtime="20201029 09:33:18.004"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.982" endtime="20201029 09:33:18.004"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.979" endtime="20201029 09:33:18.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.012" endtime="20201029 09:33:18.329"></status>
</kw>
<msg timestamp="20201029 09:33:18.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.999516403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.999518778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.010" endtime="20201029 09:33:18.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.999516403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.999518778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.334" endtime="20201029 09:33:18.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.345" endtime="20201029 09:33:18.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.008" endtime="20201029 09:33:18.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.006" endtime="20201029 09:33:18.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:18.352" level="INFO">${RESULT} = [{'diff': 2.3750000002209504e-06}, {'diff': 2.347000000124666e-06}, {'diff': 2.389000000047048e-06}, {'diff': 2.374999999776861e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3750000002209504e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:18.348" endtime="20201029 09:33:18.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:18.359" level="INFO">${OVERHEAD} = {'diff': [2.3750000002209504e-06, 2.347000000124666e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2...</msg>
<status status="PASS" starttime="20201029 09:33:18.353" endtime="20201029 09:33:18.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.363" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:18.362" endtime="20201029 09:33:18.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.366" level="INFO">VALUE: [2.3750000002209504e-06, 2.347000000124666e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.4170000001433323e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.347999999763317e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.374999999776861e-06, 2.4029999998731455e-06, 2.389000000047048e-06, 2.320000000111122e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.320000000111122e-06, 2.346999999680577e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.401999999790405e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2.320000000111122e-06, 2.4170000001433323e-06, 2.3880000004083968e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.416000000060592e-06, 2.3339999999372196e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2.2920000000148377e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.361000000394853e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.416000000060592e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.4020000002344943e-06]</msg>
<status status="PASS" starttime="20201029 09:33:18.364" endtime="20201029 09:33:18.366"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.360" endtime="20201029 09:33:18.367"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.978" endtime="20201029 09:33:18.367"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.978" endtime="20201029 09:33:18.367"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.375" endtime="20201029 09:33:18.387"></status>
</kw>
<msg timestamp="20201029 09:33:18.388" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.374" endtime="20201029 09:33:18.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.390" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.389" endtime="20201029 09:33:18.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.391" endtime="20201029 09:33:18.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.371" endtime="20201029 09:33:18.394"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.369" endtime="20201029 09:33:18.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.401" endtime="20201029 09:33:18.713"></status>
</kw>
<msg timestamp="20201029 09:33:18.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.390031917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.390034292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.399" endtime="20201029 09:33:18.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.390031917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.390034292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.718" endtime="20201029 09:33:18.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.728" endtime="20201029 09:33:18.730"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.397" endtime="20201029 09:33:18.730"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.395" endtime="20201029 09:33:18.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:18.736" level="INFO">${RESULT} = [{'diff': 2.3750000002209504e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.374999999776861e-06}, {'diff': 2.361000000394853e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.374999999776861e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:18.731" endtime="20201029 09:33:18.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:18.741" level="INFO">${OVERHEAD} = {'diff': [2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.361000000394853e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.416000000060592e-06, 2....</msg>
<status status="PASS" starttime="20201029 09:33:18.737" endtime="20201029 09:33:18.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.745" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:18.744" endtime="20201029 09:33:18.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.748" level="INFO">VALUE: [2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.361000000394853e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.416000000060592e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.4020000002344943e-06, 2.346999999680577e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.4029999998731455e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3879999999643076e-06, 2.3609999999507636e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.4030000003172347e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.4030000003172347e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.347000000124666e-06, 2.389000000047048e-06, 2.3190000000283817e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.347000000124666e-06, 2.374999999776861e-06, 2.3750000002209504e-06]</msg>
<status status="PASS" starttime="20201029 09:33:18.746" endtime="20201029 09:33:18.748"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.742" endtime="20201029 09:33:18.748"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.368" endtime="20201029 09:33:18.749"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.368" endtime="20201029 09:33:18.749"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.757" endtime="20201029 09:33:18.769"></status>
</kw>
<msg timestamp="20201029 09:33:18.770" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.755" endtime="20201029 09:33:18.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.772" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.771" endtime="20201029 09:33:18.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.774" endtime="20201029 09:33:18.775"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.753" endtime="20201029 09:33:18.776"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.751" endtime="20201029 09:33:18.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.786" endtime="20201029 09:33:19.102"></status>
</kw>
<msg timestamp="20201029 09:33:19.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.769187944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.769190319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.784" endtime="20201029 09:33:19.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.769187944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.769190319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.107" endtime="20201029 09:33:19.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.124" endtime="20201029 09:33:19.126"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.779" endtime="20201029 09:33:19.127"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.777" endtime="20201029 09:33:19.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:19.133" level="INFO">${RESULT} = [{'diff': 2.374999999776861e-06}, {'diff': 2.389000000047048e-06}, {'diff': 2.374999999776861e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.389000000047048e-06}, {'diff': 2.347000000124666e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:19.129" endtime="20201029 09:33:19.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:19.138" level="INFO">${OVERHEAD} = {'diff': [2.374999999776861e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.347000000124666e-06, 2.389000000047048e-06, 2.3190000000283817e-06, 2.38...</msg>
<status status="PASS" starttime="20201029 09:33:19.135" endtime="20201029 09:33:19.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.144" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:19.142" endtime="20201029 09:33:19.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.147" level="INFO">VALUE: [2.374999999776861e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.347000000124666e-06, 2.389000000047048e-06, 2.3190000000283817e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.347000000124666e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.416000000060592e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.304999999758195e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3879999995202184e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3050000006463733e-06, 2.3190000000283817e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3879999995202184e-06, 2.3750000002209504e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201029 09:33:19.146" endtime="20201029 09:33:19.148"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.139" endtime="20201029 09:33:19.148"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.750" endtime="20201029 09:33:19.149"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.749" endtime="20201029 09:33:19.149"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.157" endtime="20201029 09:33:19.168"></status>
</kw>
<msg timestamp="20201029 09:33:19.169" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.155" endtime="20201029 09:33:19.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.172" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.170" endtime="20201029 09:33:19.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.173" endtime="20201029 09:33:19.174"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.153" endtime="20201029 09:33:19.175"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.151" endtime="20201029 09:33:19.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.182" endtime="20201029 09:33:19.500"></status>
</kw>
<msg timestamp="20201029 09:33:19.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.140553028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.140555347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.180" endtime="20201029 09:33:19.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.140553028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.140555347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.505" endtime="20201029 09:33:19.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.515" endtime="20201029 09:33:19.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.178" endtime="20201029 09:33:19.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.176" endtime="20201029 09:33:19.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:19.522" level="INFO">${RESULT} = [{'diff': 2.3190000000283817e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3889999996029587e-06}, {'diff': 2.3889999996029587e-...</msg>
<status status="PASS" starttime="20201029 09:33:19.518" endtime="20201029 09:33:19.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:19.527" level="INFO">${OVERHEAD} = {'diff': [2.3190000000283817e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.3750000002209504e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:19.523" endtime="20201029 09:33:19.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.532" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:19.531" endtime="20201029 09:33:19.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.534" level="INFO">VALUE: [2.3190000000283817e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3879999995202184e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3879999995202184e-06, 2.374999999332772e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3190000000283817e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.374999999332772e-06, 2.389000000491137e-06, 2.389000000491137e-06, 2.334000000381309e-06, 2.374999999332772e-06, 2.346999999680577e-06, 2.4440000006009654e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3879999995202184e-06, 2.401999999790405e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3470000005687552e-06, 2.4170000001433323e-06, 2.346999999680577e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.334000000381309e-06, 2.3880000004083968e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.374999999332772e-06]</msg>
<status status="PASS" starttime="20201029 09:33:19.533" endtime="20201029 09:33:19.535"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.528" endtime="20201029 09:33:19.535"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.150" endtime="20201029 09:33:19.536"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.149" endtime="20201029 09:33:19.536"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.544" endtime="20201029 09:33:19.556"></status>
</kw>
<msg timestamp="20201029 09:33:19.556" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.542" endtime="20201029 09:33:19.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.559" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.558" endtime="20201029 09:33:19.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.560" endtime="20201029 09:33:19.562"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.539" endtime="20201029 09:33:19.563"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.538" endtime="20201029 09:33:19.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.570" endtime="20201029 09:33:19.884"></status>
</kw>
<msg timestamp="20201029 09:33:19.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.529771486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.529773833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.568" endtime="20201029 09:33:19.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.529771486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.529773833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.889" endtime="20201029 09:33:19.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.909" endtime="20201029 09:33:19.912"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.566" endtime="20201029 09:33:19.914"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.564" endtime="20201029 09:33:19.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:19.924" level="INFO">${RESULT} = [{'diff': 2.3470000005687552e-06}, {'diff': 2.4170000001433323e-06}, {'diff': 2.346999999680577e-06}, {'diff': 2.3889999996029587e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3750000002209504e-0...</msg>
<status status="PASS" starttime="20201029 09:33:19.916" endtime="20201029 09:33:19.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:19.934" level="INFO">${OVERHEAD} = {'diff': [2.3470000005687552e-06, 2.4170000001433323e-06, 2.346999999680577e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:19.926" endtime="20201029 09:33:19.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.943" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:19.941" endtime="20201029 09:33:19.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.949" level="INFO">VALUE: [2.3470000005687552e-06, 2.4170000001433323e-06, 2.346999999680577e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.334000000381309e-06, 2.3880000004083968e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.443999999712787e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.362000000033504e-06, 2.389000000491137e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3339999994931304e-06, 2.4170000001433323e-06, 2.3190000000283817e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.292000000458927e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3889999996029587e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3330000002985685e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.362000000033504e-06]</msg>
<status status="PASS" starttime="20201029 09:33:19.945" endtime="20201029 09:33:19.949"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.936" endtime="20201029 09:33:19.951"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.537" endtime="20201029 09:33:19.952"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.536" endtime="20201029 09:33:19.952"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.970" endtime="20201029 09:33:19.986"></status>
</kw>
<msg timestamp="20201029 09:33:19.987" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.966" endtime="20201029 09:33:19.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.992" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.989" endtime="20201029 09:33:19.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.994" endtime="20201029 09:33:19.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.960" endtime="20201029 09:33:19.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.956" endtime="20201029 09:33:19.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.004" endtime="20201029 09:33:20.317"></status>
</kw>
<msg timestamp="20201029 09:33:20.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.906959292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.906961667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.002" endtime="20201029 09:33:20.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.906959292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.906961667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.322" endtime="20201029 09:33:20.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.331" endtime="20201029 09:33:20.333"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.999" endtime="20201029 09:33:20.334"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.998" endtime="20201029 09:33:20.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:20.338" level="INFO">${RESULT} = [{'diff': 2.3750000002209504e-06}, {'diff': 2.3889999996029587e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.374999999332772e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3750000002209504e-0...</msg>
<status status="PASS" starttime="20201029 09:33:20.335" endtime="20201029 09:33:20.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:20.344" level="INFO">${OVERHEAD} = {'diff': [2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3330000002985685e-06, 2.3750000002209504e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:20.339" endtime="20201029 09:33:20.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.348" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:20.347" endtime="20201029 09:33:20.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.350" level="INFO">VALUE: [2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3330000002985685e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.3059999998409353e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3190000000283817e-06, 2.3889999996029587e-06, 2.361000000838942e-06, 2.403000000761324e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.33299999941039e-06, 2.3879999995202184e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.4440000006009654e-06, 2.4029999998731455e-06, 2.334000000381309e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.403000000761324e-06]</msg>
<status status="PASS" starttime="20201029 09:33:20.349" endtime="20201029 09:33:20.351"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.345" endtime="20201029 09:33:20.351"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.954" endtime="20201029 09:33:20.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.953" endtime="20201029 09:33:20.352"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.360" endtime="20201029 09:33:20.372"></status>
</kw>
<msg timestamp="20201029 09:33:20.373" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.359" endtime="20201029 09:33:20.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.375" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.374" endtime="20201029 09:33:20.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.376" endtime="20201029 09:33:20.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.356" endtime="20201029 09:33:20.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.354" endtime="20201029 09:33:20.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.385" endtime="20201029 09:33:20.708"></status>
</kw>
<msg timestamp="20201029 09:33:20.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.324015972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.324018347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.384" endtime="20201029 09:33:20.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.324015972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.324018347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.720" endtime="20201029 09:33:20.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.742" endtime="20201029 09:33:20.746"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.381" endtime="20201029 09:33:20.747"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.380" endtime="20201029 09:33:20.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:20.757" level="INFO">${RESULT} = [{'diff': 2.3750000002209504e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.389000000491137e-0...</msg>
<status status="PASS" starttime="20201029 09:33:20.749" endtime="20201029 09:33:20.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:20.770" level="INFO">${OVERHEAD} = {'diff': [2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:20.759" endtime="20201029 09:33:20.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.778" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:20.776" endtime="20201029 09:33:20.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.784" level="INFO">VALUE: [2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.403000000761324e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3470000005687552e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3880000004083968e-06, 2.4449999997955274e-06, 2.347999999763317e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.401999999790405e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.4170000001433323e-06, 2.320000000111122e-06, 2.3330000002985685e-06, 2.3199999992229436e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.361000000838942e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3050000006463733e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3889999996029587e-06, 2.362000000033504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.320000000111122e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3750000002209504e-06]</msg>
<status status="PASS" starttime="20201029 09:33:20.781" endtime="20201029 09:33:20.785"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.771" endtime="20201029 09:33:20.786"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.353" endtime="20201029 09:33:20.787"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.352" endtime="20201029 09:33:20.787"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.805" endtime="20201029 09:33:20.816"></status>
</kw>
<msg timestamp="20201029 09:33:20.817" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.802" endtime="20201029 09:33:20.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.819" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.818" endtime="20201029 09:33:20.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.820" endtime="20201029 09:33:20.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.796" endtime="20201029 09:33:20.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.792" endtime="20201029 09:33:20.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.829" endtime="20201029 09:33:21.138"></status>
</kw>
<msg timestamp="20201029 09:33:21.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.701565194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.701567556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.828" endtime="20201029 09:33:21.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.701565194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.701567556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.145" endtime="20201029 09:33:21.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.158" endtime="20201029 09:33:21.161"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.825" endtime="20201029 09:33:21.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.824" endtime="20201029 09:33:21.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:21.170" level="INFO">${RESULT} = [{'diff': 2.362000000033504e-06}, {'diff': 2.374999999332772e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.4029999998731455e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.374999999332772e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:21.164" endtime="20201029 09:33:21.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:21.176" level="INFO">${OVERHEAD} = {'diff': [2.362000000033504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.320000000111122e-06, 2.389000000491137e-06, 2.3...</msg>
<status status="PASS" starttime="20201029 09:33:21.171" endtime="20201029 09:33:21.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.181" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:21.180" endtime="20201029 09:33:21.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.183" level="INFO">VALUE: [2.362000000033504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.320000000111122e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.416000000060592e-06, 2.4300000003307787e-06, 2.3330000002985685e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.389000000491137e-06, 2.4170000001433323e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3330000002985685e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.374999999332772e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.3330000002985685e-06, 2.374999999332772e-06, 2.33299999941039e-06, 2.3609999999507636e-06, 2.4170000001433323e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.4300000003307787e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3190000000283817e-06, 2.304999999758195e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.3339999994931304e-06]</msg>
<status status="PASS" starttime="20201029 09:33:21.182" endtime="20201029 09:33:21.184"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.177" endtime="20201029 09:33:21.184"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.789" endtime="20201029 09:33:21.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.788" endtime="20201029 09:33:21.185"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.194" endtime="20201029 09:33:21.206"></status>
</kw>
<msg timestamp="20201029 09:33:21.206" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.193" endtime="20201029 09:33:21.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.208" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.207" endtime="20201029 09:33:21.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.210" endtime="20201029 09:33:21.211"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.189" endtime="20201029 09:33:21.212"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.187" endtime="20201029 09:33:21.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.219" endtime="20201029 09:33:21.536"></status>
</kw>
<msg timestamp="20201029 09:33:21.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.134294819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.134297194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.217" endtime="20201029 09:33:21.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.134294819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.134297194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.540" endtime="20201029 09:33:21.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.550" endtime="20201029 09:33:21.552"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.215" endtime="20201029 09:33:21.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.213" endtime="20201029 09:33:21.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:21.557" level="INFO">${RESULT} = [{'diff': 2.3750000002209504e-06}, {'diff': 2.4300000003307787e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3750000002209504e-...</msg>
<status status="PASS" starttime="20201029 09:33:21.554" endtime="20201029 09:33:21.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:21.563" level="INFO">${OVERHEAD} = {'diff': [2.3750000002209504e-06, 2.4300000003307787e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3190000000283817e-06...</msg>
<status status="PASS" starttime="20201029 09:33:21.558" endtime="20201029 09:33:21.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.567" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:21.566" endtime="20201029 09:33:21.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.570" level="INFO">VALUE: [2.3750000002209504e-06, 2.4300000003307787e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3190000000283817e-06, 2.304999999758195e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.3339999994931304e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.4309999995253406e-06, 2.4170000001433323e-06, 2.4309999995253406e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3879999995202184e-06, 2.431000000413519e-06, 2.362000000033504e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.459000000065714e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.2919999995707485e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3480000006514956e-06, 2.416000000060592e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.334000000381309e-06, 2.3750000002209504e-06, 2.347999999763317e-06, 2.3750000002209504e-06]</msg>
<status status="PASS" starttime="20201029 09:33:21.568" endtime="20201029 09:33:21.570"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.564" endtime="20201029 09:33:21.571"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.186" endtime="20201029 09:33:21.572"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.186" endtime="20201029 09:33:21.572"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.580" endtime="20201029 09:33:21.591"></status>
</kw>
<msg timestamp="20201029 09:33:21.592" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.578" endtime="20201029 09:33:21.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.594" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.593" endtime="20201029 09:33:21.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.596" endtime="20201029 09:33:21.597"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.576" endtime="20201029 09:33:21.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.574" endtime="20201029 09:33:21.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.605" endtime="20201029 09:33:21.926"></status>
</kw>
<msg timestamp="20201029 09:33:21.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.513119056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.513121417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.603" endtime="20201029 09:33:21.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.513119056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.513121417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.931" endtime="20201029 09:33:21.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.941" endtime="20201029 09:33:21.943"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.600" endtime="20201029 09:33:21.943"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.599" endtime="20201029 09:33:21.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:21.948" level="INFO">${RESULT} = [{'diff': 2.3609999999507636e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.389000000491137e-06}, {'diff': 2.3609999999507636e-0...</msg>
<status status="PASS" starttime="20201029 09:33:21.945" endtime="20201029 09:33:21.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:21.954" level="INFO">${OVERHEAD} = {'diff': [2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:21.949" endtime="20201029 09:33:21.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.958" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:21.957" endtime="20201029 09:33:21.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.961" level="INFO">VALUE: [2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.334000000381309e-06, 2.3750000002209504e-06, 2.347999999763317e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.389000000491137e-06, 2.3050000006463733e-06, 2.416000000060592e-06, 2.3330000002985685e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.4299999994426003e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.347999999763317e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.4029999998731455e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06]</msg>
<status status="PASS" starttime="20201029 09:33:21.959" endtime="20201029 09:33:21.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.955" endtime="20201029 09:33:21.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.573" endtime="20201029 09:33:21.967"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.572" endtime="20201029 09:33:21.967"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.975" endtime="20201029 09:33:21.986"></status>
</kw>
<msg timestamp="20201029 09:33:21.987" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.973" endtime="20201029 09:33:21.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.989" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.988" endtime="20201029 09:33:21.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.990" endtime="20201029 09:33:21.992"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.971" endtime="20201029 09:33:21.992"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.969" endtime="20201029 09:33:21.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.000" endtime="20201029 09:33:22.312"></status>
</kw>
<msg timestamp="20201029 09:33:22.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.887606111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.887608486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.999" endtime="20201029 09:33:22.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.887606111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.887608486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.317" endtime="20201029 09:33:22.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.327" endtime="20201029 09:33:22.329"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.995" endtime="20201029 09:33:22.329"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.993" endtime="20201029 09:33:22.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:22.334" level="INFO">${RESULT} = [{'diff': 2.3750000002209504e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.346999999680577e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3750000002209504e-0...</msg>
<status status="PASS" starttime="20201029 09:33:22.330" endtime="20201029 09:33:22.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:22.339" level="INFO">${OVERHEAD} = {'diff': [2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:22.335" endtime="20201029 09:33:22.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.343" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:22.342" endtime="20201029 09:33:22.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.348" level="INFO">VALUE: [2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.389000000491137e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.33299999941039e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3880000004083968e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.4300000003307787e-06, 2.374999999332772e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.347999999763317e-06, 2.334000000381309e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.4170000001433323e-06, 2.3889999996029587e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201029 09:33:22.344" endtime="20201029 09:33:22.349"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.340" endtime="20201029 09:33:22.349"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.968" endtime="20201029 09:33:22.350"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.967" endtime="20201029 09:33:22.350"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.566" endtime="20201029 09:33:22.350"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:14.494" endtime="20201029 09:33:22.351" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:22.358" endtime="20201029 09:33:22.377"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.356" endtime="20201029 09:33:22.377"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.391" endtime="20201029 09:33:22.405"></status>
</kw>
<msg timestamp="20201029 09:33:22.405" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.389" endtime="20201029 09:33:22.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.408" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.406" endtime="20201029 09:33:22.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.411" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:22.409" endtime="20201029 09:33:22.411"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:22.386" endtime="20201029 09:33:22.412"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:22.384" endtime="20201029 09:33:22.412"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.383" endtime="20201029 09:33:22.412"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:22.416" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:22.416" endtime="20201029 09:33:22.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.413" endtime="20201029 09:33:22.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.382" endtime="20201029 09:33:22.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.381" endtime="20201029 09:33:22.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.418" endtime="20201029 09:33:22.420"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.380" endtime="20201029 09:33:22.420"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.378" endtime="20201029 09:33:22.421"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.355" endtime="20201029 09:33:22.421"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.430" endtime="20201029 09:33:22.450"></status>
</kw>
<msg timestamp="20201029 09:33:22.451" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.429" endtime="20201029 09:33:22.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.454" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.452" endtime="20201029 09:33:22.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.455" endtime="20201029 09:33:22.456"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.425" endtime="20201029 09:33:22.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.423" endtime="20201029 09:33:22.458"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.460" endtime="20201029 09:33:22.461"></status>
</kw>
<msg timestamp="20201029 09:33:22.462" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:33:22.458" endtime="20201029 09:33:22.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.469" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:22.467" endtime="20201029 09:33:22.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.473" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:22.471" endtime="20201029 09:33:22.474"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.464" endtime="20201029 09:33:22.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.481" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:22.479" endtime="20201029 09:33:22.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.485" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:22.483" endtime="20201029 09:33:22.486"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.476" endtime="20201029 09:33:22.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.498" endtime="20201029 09:33:22.792"></status>
</kw>
<msg timestamp="20201029 09:33:22.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065503028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065510431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.496" endtime="20201029 09:33:22.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065503028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065510431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.796" endtime="20201029 09:33:22.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.805" endtime="20201029 09:33:22.807"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.491" endtime="20201029 09:33:22.808"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.489" endtime="20201029 09:33:22.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:22.813" level="INFO">${RESULT} = [{'diff': 7.402999999989168e-06}, {'diff': 7.555000000006307e-06}, {'diff': 7.583999999991042e-06}, {'diff': 7.582999999991569e-06}, {'diff': 7.5830000000054465e-06}, {'diff': 7.582999999991569e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:22.809" endtime="20201029 09:33:22.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:22.821" level="INFO">${OVERHEAD} = {'diff': [7.402999999989168e-06, 7.555000000006307e-06, 7.583999999991042e-06, 7.582999999991569e-06, 7.5830000000054465e-06, 7.582999999991569e-06, 7.582999999991569e-06, 7.582999999991569e-06, 7.582...</msg>
<status status="PASS" starttime="20201029 09:33:22.814" endtime="20201029 09:33:22.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.826" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 09:33:22.824" endtime="20201029 09:33:22.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.828" level="INFO">VALUE: [7.402999999989168e-06, 7.555000000006307e-06, 7.583999999991042e-06, 7.582999999991569e-06, 7.5830000000054465e-06, 7.582999999991569e-06, 7.582999999991569e-06, 7.582999999991569e-06, 7.582999999991569e-06, 7.568999999998938e-06, 7.597999999997551e-06, 7.598000000011429e-06, 7.582999999991569e-06, 7.5969999999980775e-06, 7.569999999998411e-06, 7.5969999999980775e-06, 7.598000000011429e-06, 7.58400000000492e-06, 7.568999999998938e-06, 7.58400000000492e-06, 7.58400000000492e-06, 7.597999999997551e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.582999999991569e-06, 7.568999999998938e-06, 7.5830000000054465e-06, 7.597999999997551e-06, 7.568999999998938e-06, 7.5280000000066405e-06, 7.598000000011429e-06, 7.55600000000578e-06, 7.5280000000066405e-06, 7.5969999999980775e-06, 7.583999999991042e-06, 7.58400000000492e-06, 7.611000000004586e-06, 7.5830000000054465e-06, 7.5830000000054465e-06, 7.5830000000054465e-06, 7.665999999989515e-06, 7.5559999999919025e-06, 7.582999999991569e-06, 7.5830000000054465e-06, 7.568999999998938e-06, 7.5830000000054465e-06, 7.582999999991569e-06, 7.569999999998411e-06, 7.5969999999980775e-06, 7.5969999999980775e-06]</msg>
<status status="PASS" starttime="20201029 09:33:22.827" endtime="20201029 09:33:22.828"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.822" endtime="20201029 09:33:22.830"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.421" endtime="20201029 09:33:22.830"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:22.352" endtime="20201029 09:33:22.831" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:22.839" endtime="20201029 09:33:22.859"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.836" endtime="20201029 09:33:22.860"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.876" endtime="20201029 09:33:22.891"></status>
</kw>
<msg timestamp="20201029 09:33:22.891" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.874" endtime="20201029 09:33:22.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.894" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.892" endtime="20201029 09:33:22.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.897" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:22.895" endtime="20201029 09:33:22.897"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:22.872" endtime="20201029 09:33:22.898"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:22.869" endtime="20201029 09:33:22.898"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.868" endtime="20201029 09:33:22.899"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:22.904" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:22.903" endtime="20201029 09:33:22.904"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.900" endtime="20201029 09:33:22.904"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.867" endtime="20201029 09:33:22.904"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.867" endtime="20201029 09:33:22.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.905" endtime="20201029 09:33:22.907"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.865" endtime="20201029 09:33:22.907"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.861" endtime="20201029 09:33:22.908"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.835" endtime="20201029 09:33:22.908"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.917" endtime="20201029 09:33:23.021"></status>
</kw>
<msg timestamp="20201029 09:33:23.022" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.915" endtime="20201029 09:33:23.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.024" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.023" endtime="20201029 09:33:23.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.025" endtime="20201029 09:33:23.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.912" endtime="20201029 09:33:23.028"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.910" endtime="20201029 09:33:23.028"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.031" endtime="20201029 09:33:23.032"></status>
</kw>
<msg timestamp="20201029 09:33:23.033" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:33:23.029" endtime="20201029 09:33:23.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.037" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:23.036" endtime="20201029 09:33:23.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.039" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:23.038" endtime="20201029 09:33:23.039"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.034" endtime="20201029 09:33:23.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.044" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:23.043" endtime="20201029 09:33:23.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.046" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:23.045" endtime="20201029 09:33:23.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.040" endtime="20201029 09:33:23.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.053" endtime="20201029 09:33:23.347"></status>
</kw>
<msg timestamp="20201029 09:33:23.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071219278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071278806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.052" endtime="20201029 09:33:23.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071219278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071278806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.351" endtime="20201029 09:33:23.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.359" endtime="20201029 09:33:23.361"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.049" endtime="20201029 09:33:23.361"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.047" endtime="20201029 09:33:23.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:23.367" level="INFO">${RESULT} = [{'diff': 5.9528000000003134e-05}, {'diff': 5.933300000000863e-05}, {'diff': 5.931900000000212e-05}, {'diff': 5.931900000000212e-05}, {'diff': 5.9319999999987716e-05}, {'diff': 5.9320000000001594e-05}...</msg>
<status status="PASS" starttime="20201029 09:33:23.363" endtime="20201029 09:33:23.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:23.371" level="INFO">${OVERHEAD} = {'diff': [5.9528000000003134e-05, 5.933300000000863e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.9319999999987716e-05, 5.9320000000001594e-05, 5.9319999999987716e-05, 5.9305999999995085e-05, 5...</msg>
<status status="PASS" starttime="20201029 09:33:23.368" endtime="20201029 09:33:23.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.376" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 09:33:23.375" endtime="20201029 09:33:23.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.378" level="INFO">VALUE: [5.9528000000003134e-05, 5.933300000000863e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.9319999999987716e-05, 5.9320000000001594e-05, 5.9319999999987716e-05, 5.9305999999995085e-05, 5.930499999999561e-05, 5.931900000000212e-05, 5.9361999999993365e-05, 5.9249999999996805e-05, 5.931900000000212e-05, 5.938899999999303e-05, 5.9333999999994225e-05, 5.931900000000212e-05, 5.93340000000081e-05, 5.931900000000212e-05, 5.930500000000949e-05, 5.934700000000126e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.927699999999647e-05, 5.9333999999994225e-05, 5.931900000000212e-05, 5.930500000000949e-05, 5.93750000000004e-05, 5.9320000000001594e-05, 5.9320000000001594e-05, 5.938899999999303e-05, 5.9292000000002454e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.930600000000896e-05, 5.927699999999647e-05, 5.93750000000004e-05, 5.9320000000001594e-05, 5.9320000000001594e-05, 5.930500000000949e-05, 5.933299999999475e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.930599999998121e-05, 5.930599999998121e-05, 5.925000000001068e-05, 5.9320000000001594e-05, 5.9320000000001594e-05, 5.9320000000001594e-05, 5.933300000002251e-05]</msg>
<status status="PASS" starttime="20201029 09:33:23.377" endtime="20201029 09:33:23.379"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.372" endtime="20201029 09:33:23.379"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.909" endtime="20201029 09:33:23.380"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:22.832" endtime="20201029 09:33:23.380" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:23.387" endtime="20201029 09:33:23.407"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.386" endtime="20201029 09:33:23.407"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.421" endtime="20201029 09:33:23.435"></status>
</kw>
<msg timestamp="20201029 09:33:23.435" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.420" endtime="20201029 09:33:23.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.438" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.437" endtime="20201029 09:33:23.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.441" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:23.439" endtime="20201029 09:33:23.441"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:23.416" endtime="20201029 09:33:23.442"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:23.414" endtime="20201029 09:33:23.443"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.413" endtime="20201029 09:33:23.443"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:23.447" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:23.446" endtime="20201029 09:33:23.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.444" endtime="20201029 09:33:23.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.412" endtime="20201029 09:33:23.448"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.411" endtime="20201029 09:33:23.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.448" endtime="20201029 09:33:23.450"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.410" endtime="20201029 09:33:23.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.408" endtime="20201029 09:33:23.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.385" endtime="20201029 09:33:23.451"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.462" endtime="20201029 09:33:23.798"></status>
</kw>
<msg timestamp="20201029 09:33:23.800" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.459" endtime="20201029 09:33:23.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.805" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.802" endtime="20201029 09:33:23.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.808" endtime="20201029 09:33:23.811"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.456" endtime="20201029 09:33:23.812"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.453" endtime="20201029 09:33:23.813"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.818" endtime="20201029 09:33:23.823"></status>
</kw>
<msg timestamp="20201029 09:33:23.824" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:33:23.815" endtime="20201029 09:33:23.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.833" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:23.830" endtime="20201029 09:33:23.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.837" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:23.835" endtime="20201029 09:33:23.838"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.825" endtime="20201029 09:33:23.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.845" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:23.844" endtime="20201029 09:33:23.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.847" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:23.846" endtime="20201029 09:33:23.847"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.841" endtime="20201029 09:33:23.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.856" endtime="20201029 09:33:24.149"></status>
</kw>
<msg timestamp="20201029 09:33:24.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072847278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072960986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.854" endtime="20201029 09:33:24.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072847278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072960986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.153" endtime="20201029 09:33:24.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.161" endtime="20201029 09:33:24.163"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.850" endtime="20201029 09:33:24.164"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.849" endtime="20201029 09:33:24.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:24.168" level="INFO">${RESULT} = [{'diff': 0.00011370800000000403}, {'diff': 0.00011218099999998898}, {'diff': 0.00011216699999999635}, {'diff': 0.00011218100000000286}, {'diff': 0.00011218000000000339}, {'diff': 0.000112082999999998...</msg>
<status status="PASS" starttime="20201029 09:33:24.165" endtime="20201029 09:33:24.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:24.172" level="INFO">${OVERHEAD} = {'diff': [0.00011370800000000403, 0.00011218099999998898, 0.00011216699999999635, 0.00011218100000000286, 0.00011218000000000339, 0.00011208299999999893, 0.00011215300000000372, 0.00011216599999999688...</msg>
<status status="PASS" starttime="20201029 09:33:24.169" endtime="20201029 09:33:24.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.177" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 09:33:24.176" endtime="20201029 09:33:24.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.179" level="INFO">VALUE: [0.00011370800000000403, 0.00011218099999998898, 0.00011216699999999635, 0.00011218100000000286, 0.00011218000000000339, 0.00011208299999999893, 0.00011215300000000372, 0.00011216599999999688, 0.000112209000000002, 0.00011216699999999635, 0.00011215200000000425, 0.00011218099999998898, 0.00011213899999998334, 0.0001121249999999907, 0.00011213900000001109, 0.00011216700000002411, 0.00011215300000000372, 0.00011220800000000253, 0.00011216699999999635, 0.00011213899999998334, 0.00011215300000000372, 0.00011216699999999635, 0.00011215300000000372, 0.00011215300000000372, 0.00011215300000000372, 0.00011215300000000372, 0.00011213800000001162, 0.00011208300000001281, 0.00011215299999997597, 0.00011216600000002463, 0.00011211099999997032, 0.00011215300000000372, 0.00011215300000000372, 0.00011215299999994821, 0.00011215300000000372, 0.00011215300000000372, 0.00011213900000001109, 0.00011206899999999242, 0.00011216699999999635, 0.000112152000000032, 0.000112152000000032, 0.00011215300000000372, 0.00011220800000000253, 0.00011220800000000253, 0.00011215300000000372, 0.000112152000000032, 0.00020986099999997787, 0.00011216599999996912, 0.00011215300000000372, 0.00011215300000000372]</msg>
<status status="PASS" starttime="20201029 09:33:24.178" endtime="20201029 09:33:24.180"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.173" endtime="20201029 09:33:24.180"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.452" endtime="20201029 09:33:24.181"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:23.382" endtime="20201029 09:33:24.181" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:24.189" endtime="20201029 09:33:24.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.187" endtime="20201029 09:33:24.209"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.224" endtime="20201029 09:33:24.237"></status>
</kw>
<msg timestamp="20201029 09:33:24.238" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.222" endtime="20201029 09:33:24.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.240" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.239" endtime="20201029 09:33:24.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.244" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:24.241" endtime="20201029 09:33:24.244"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:24.219" endtime="20201029 09:33:24.245"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:24.217" endtime="20201029 09:33:24.245"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.215" endtime="20201029 09:33:24.245"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:24.249" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:24.249" endtime="20201029 09:33:24.250"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.246" endtime="20201029 09:33:24.250"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.214" endtime="20201029 09:33:24.250"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.214" endtime="20201029 09:33:24.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.251" endtime="20201029 09:33:24.253"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.212" endtime="20201029 09:33:24.253"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.210" endtime="20201029 09:33:24.254"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.186" endtime="20201029 09:33:24.254"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.263" endtime="20201029 09:33:24.283"></status>
</kw>
<msg timestamp="20201029 09:33:24.284" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.261" endtime="20201029 09:33:24.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.286" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.285" endtime="20201029 09:33:24.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.288" endtime="20201029 09:33:24.289"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.259" endtime="20201029 09:33:24.290"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.256" endtime="20201029 09:33:24.290"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.293" endtime="20201029 09:33:24.295"></status>
</kw>
<msg timestamp="20201029 09:33:24.296" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:33:24.291" endtime="20201029 09:33:24.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.300" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:24.299" endtime="20201029 09:33:24.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.303" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:24.302" endtime="20201029 09:33:24.303"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.297" endtime="20201029 09:33:24.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.308" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:24.307" endtime="20201029 09:33:24.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.310" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:24.309" endtime="20201029 09:33:24.310"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.304" endtime="20201029 09:33:24.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.317" endtime="20201029 09:33:24.604"></status>
</kw>
<msg timestamp="20201029 09:33:24.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067054028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067056319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.316" endtime="20201029 09:33:24.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067054028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067056319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.609" endtime="20201029 09:33:24.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.617" endtime="20201029 09:33:24.619"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.313" endtime="20201029 09:33:24.620"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.311" endtime="20201029 09:33:24.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:24.624" level="INFO">${RESULT} = [{'diff': 2.2910000000014863e-06}, {'diff': 2.319000000000626e-06}, {'diff': 2.3049999999941173e-06}, {'diff': 2.305999999993591e-06}, {'diff': 2.319000000000626e-06}, {'diff': 2.3049999999941173e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:24.621" endtime="20201029 09:33:24.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:24.629" level="INFO">${OVERHEAD} = {'diff': [2.2910000000014863e-06, 2.319000000000626e-06, 2.3049999999941173e-06, 2.305999999993591e-06, 2.319000000000626e-06, 2.3049999999941173e-06, 2.305999999993591e-06, 2.3189999999867483e-06, 2....</msg>
<status status="PASS" starttime="20201029 09:33:24.625" endtime="20201029 09:33:24.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.634" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 09:33:24.633" endtime="20201029 09:33:24.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.637" level="INFO">VALUE: [2.2910000000014863e-06, 2.319000000000626e-06, 2.3049999999941173e-06, 2.305999999993591e-06, 2.319000000000626e-06, 2.3049999999941173e-06, 2.305999999993591e-06, 2.3189999999867483e-06, 2.3200000000000998e-06, 2.29200000000096e-06, 2.319000000000626e-06, 2.26400000000182e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.29200000000096e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.3060000000074687e-06, 2.2910000000014863e-06, 2.319000000000626e-06, 2.305000000007995e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.278000000008329e-06, 2.2630000000023465e-06, 2.3060000000074687e-06, 2.305999999993591e-06, 2.2639999999879423e-06, 2.29200000000096e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.305999999993591e-06, 2.319000000000626e-06, 2.305000000007995e-06, 2.29200000000096e-06, 2.3610000000062747e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.3049999999941173e-06, 2.3049999999941173e-06, 2.26400000000182e-06, 2.2499999999953113e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.3060000000074687e-06, 2.305000000007995e-06, 2.2910000000014863e-06, 2.319000000000626e-06, 2.3200000000000998e-06]</msg>
<status status="PASS" starttime="20201029 09:33:24.635" endtime="20201029 09:33:24.637"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.630" endtime="20201029 09:33:24.638"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.255" endtime="20201029 09:33:24.638"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:24.183" endtime="20201029 09:33:24.639" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:24.646" endtime="20201029 09:33:24.666"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.645" endtime="20201029 09:33:24.666"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.680" endtime="20201029 09:33:24.694"></status>
</kw>
<msg timestamp="20201029 09:33:24.694" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.678" endtime="20201029 09:33:24.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.697" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.695" endtime="20201029 09:33:24.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.700" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:24.698" endtime="20201029 09:33:24.700"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:24.676" endtime="20201029 09:33:24.701"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:24.673" endtime="20201029 09:33:24.702"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.672" endtime="20201029 09:33:24.702"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:24.706" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:24.705" endtime="20201029 09:33:24.706"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.703" endtime="20201029 09:33:24.707"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.671" endtime="20201029 09:33:24.707"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.670" endtime="20201029 09:33:24.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.708" endtime="20201029 09:33:24.709"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.669" endtime="20201029 09:33:24.710"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.667" endtime="20201029 09:33:24.710"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.643" endtime="20201029 09:33:24.710"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.721" endtime="20201029 09:33:24.826"></status>
</kw>
<msg timestamp="20201029 09:33:24.827" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.719" endtime="20201029 09:33:24.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.829" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.828" endtime="20201029 09:33:24.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.830" endtime="20201029 09:33:24.832"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.716" endtime="20201029 09:33:24.833"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.713" endtime="20201029 09:33:24.833"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.836" endtime="20201029 09:33:24.837"></status>
</kw>
<msg timestamp="20201029 09:33:24.838" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:33:24.834" endtime="20201029 09:33:24.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.842" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:24.841" endtime="20201029 09:33:24.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.845" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:24.844" endtime="20201029 09:33:24.845"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.839" endtime="20201029 09:33:24.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.850" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:24.848" endtime="20201029 09:33:24.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.852" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:24.851" endtime="20201029 09:33:24.852"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.846" endtime="20201029 09:33:24.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.859" endtime="20201029 09:33:25.154"></status>
</kw>
<msg timestamp="20201029 09:33:25.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069071278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069089917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.858" endtime="20201029 09:33:25.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069071278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069089917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.158" endtime="20201029 09:33:25.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.166" endtime="20201029 09:33:25.168"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.855" endtime="20201029 09:33:25.168"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.853" endtime="20201029 09:33:25.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:25.173" level="INFO">${RESULT} = [{'diff': 1.863900000000085e-05}, {'diff': 1.8652000000007884e-05}, {'diff': 1.865299999999348e-05}, {'diff': 1.865299999999348e-05}, {'diff': 1.862499999999434e-05}, {'diff': 1.8597999999994674e-05},...</msg>
<status status="PASS" starttime="20201029 09:33:25.170" endtime="20201029 09:33:25.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:25.178" level="INFO">${OVERHEAD} = {'diff': [1.863900000000085e-05, 1.8652000000007884e-05, 1.865299999999348e-05, 1.865299999999348e-05, 1.862499999999434e-05, 1.8597999999994674e-05, 1.862499999999434e-05, 1.865299999999348e-05, 1.86...</msg>
<status status="PASS" starttime="20201029 09:33:25.174" endtime="20201029 09:33:25.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.183" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 09:33:25.182" endtime="20201029 09:33:25.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.186" level="INFO">VALUE: [1.863900000000085e-05, 1.8652000000007884e-05, 1.865299999999348e-05, 1.865299999999348e-05, 1.862499999999434e-05, 1.8597999999994674e-05, 1.862499999999434e-05, 1.865299999999348e-05, 1.861100000000171e-05, 1.8638000000001376e-05, 1.866699999999999e-05, 1.863900000000085e-05, 1.8680000000007024e-05, 1.8680000000007024e-05, 1.865299999999348e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.862499999999434e-05, 1.8653000000007358e-05, 1.866699999999999e-05, 1.8653000000007358e-05, 1.863900000000085e-05, 1.866699999999999e-05, 1.8653000000007358e-05, 1.862499999999434e-05, 1.862499999999434e-05, 1.8653000000007358e-05, 1.8653000000007358e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.8681000000006498e-05, 1.8653000000007358e-05, 1.8653000000007358e-05, 1.862499999999434e-05, 1.8666000000000516e-05, 1.8639000000014727e-05, 1.8639000000014727e-05, 1.8653000000007358e-05, 1.8652999999979603e-05, 1.8639000000014727e-05, 1.863899999998697e-05, 1.8653000000007358e-05, 1.8653000000007358e-05, 1.8639000000014727e-05, 1.8653000000007358e-05, 1.866699999999999e-05, 1.8653000000007358e-05, 1.866699999999999e-05, 1.8652999999979603e-05]</msg>
<status status="PASS" starttime="20201029 09:33:25.184" endtime="20201029 09:33:25.186"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.179" endtime="20201029 09:33:25.187"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.711" endtime="20201029 09:33:25.187"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:24.640" endtime="20201029 09:33:25.188" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:25.195" endtime="20201029 09:33:25.215"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.193" endtime="20201029 09:33:25.215"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.229" endtime="20201029 09:33:25.243"></status>
</kw>
<msg timestamp="20201029 09:33:25.244" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.227" endtime="20201029 09:33:25.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.247" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.245" endtime="20201029 09:33:25.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.253" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:25.248" endtime="20201029 09:33:25.253"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:25.225" endtime="20201029 09:33:25.254"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:25.222" endtime="20201029 09:33:25.255"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.221" endtime="20201029 09:33:25.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:25.259" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:25.258" endtime="20201029 09:33:25.259"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.256" endtime="20201029 09:33:25.259"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.220" endtime="20201029 09:33:25.260"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.219" endtime="20201029 09:33:25.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.261" endtime="20201029 09:33:25.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.218" endtime="20201029 09:33:25.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.216" endtime="20201029 09:33:25.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.192" endtime="20201029 09:33:25.263"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.272" endtime="20201029 09:33:25.608"></status>
</kw>
<msg timestamp="20201029 09:33:25.608" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.271" endtime="20201029 09:33:25.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.611" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.609" endtime="20201029 09:33:25.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.612" endtime="20201029 09:33:25.614"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.268" endtime="20201029 09:33:25.614"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.266" endtime="20201029 09:33:25.615"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.617" endtime="20201029 09:33:25.619"></status>
</kw>
<msg timestamp="20201029 09:33:25.619" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:33:25.616" endtime="20201029 09:33:25.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.624" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:25.623" endtime="20201029 09:33:25.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.626" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:25.625" endtime="20201029 09:33:25.627"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.620" endtime="20201029 09:33:25.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.631" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:25.630" endtime="20201029 09:33:25.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.633" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:25.632" endtime="20201029 09:33:25.634"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.628" endtime="20201029 09:33:25.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.641" endtime="20201029 09:33:25.933"></status>
</kw>
<msg timestamp="20201029 09:33:25.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075652708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075688042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.639" endtime="20201029 09:33:25.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075652708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075688042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.937" endtime="20201029 09:33:25.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.945" endtime="20201029 09:33:25.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.637" endtime="20201029 09:33:25.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.635" endtime="20201029 09:33:25.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:25.953" level="INFO">${RESULT} = [{'diff': 3.533399999999798e-05}, {'diff': 3.5304999999999365e-05}, {'diff': 3.5304999999999365e-05}, {'diff': 3.5319000000005873e-05}, {'diff': 3.530599999999884e-05}, {'diff': 3.5332999999998504e-05...</msg>
<status status="PASS" starttime="20201029 09:33:25.950" endtime="20201029 09:33:25.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:25.957" level="INFO">${OVERHEAD} = {'diff': [3.533399999999798e-05, 3.5304999999999365e-05, 3.5304999999999365e-05, 3.5319000000005873e-05, 3.530599999999884e-05, 3.5332999999998504e-05, 3.5318999999991996e-05, 3.530599999999884e-05, 3...</msg>
<status status="PASS" starttime="20201029 09:33:25.954" endtime="20201029 09:33:25.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.962" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 09:33:25.961" endtime="20201029 09:33:25.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.967" level="INFO">VALUE: [3.533399999999798e-05, 3.5304999999999365e-05, 3.5304999999999365e-05, 3.5319000000005873e-05, 3.530599999999884e-05, 3.5332999999998504e-05, 3.5318999999991996e-05, 3.530599999999884e-05, 3.5332999999998504e-05, 3.5290999999992856e-05, 3.533399999999798e-05, 3.533399999999798e-05, 3.530500000001324e-05, 3.526299999997984e-05, 3.5332999999998504e-05, 3.530599999998496e-05, 3.532000000000535e-05, 3.5292000000020085e-05, 3.5332999999998504e-05, 3.530599999998496e-05, 3.5319000000005873e-05, 3.533399999999798e-05, 3.530499999998549e-05, 3.531899999997812e-05, 3.5334000000025734e-05, 3.5332999999998504e-05, 3.5362000000010996e-05, 3.5306000000012716e-05, 3.531899999997812e-05, 3.532000000000535e-05, 3.5306000000012716e-05, 3.533399999999798e-05, 3.532000000000535e-05, 3.5306000000012716e-05, 3.534799999999061e-05, 3.5305000000041e-05, 3.5305999999957205e-05, 3.5305999999957205e-05, 3.532000000000535e-05, 3.534700000001889e-05, 3.531900000003363e-05, 3.530499999998549e-05, 3.530499999998549e-05, 3.533299999997075e-05, 3.531900000003363e-05, 3.537499999994864e-05, 3.5306000000012716e-05, 3.5291999999964574e-05, 3.532000000000535e-05, 3.5292000000020085e-05]</msg>
<status status="PASS" starttime="20201029 09:33:25.964" endtime="20201029 09:33:25.968"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.958" endtime="20201029 09:33:25.969"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.264" endtime="20201029 09:33:25.971"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:25.189" endtime="20201029 09:33:25.972" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:25.986" endtime="20201029 09:33:26.009"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.983" endtime="20201029 09:33:26.012"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.053" endtime="20201029 09:33:26.071"></status>
</kw>
<msg timestamp="20201029 09:33:26.071" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.048" endtime="20201029 09:33:26.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.074" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.072" endtime="20201029 09:33:26.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.077" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:26.075" endtime="20201029 09:33:26.077"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:26.041" endtime="20201029 09:33:26.078"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:26.031" endtime="20201029 09:33:26.079"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.027" endtime="20201029 09:33:26.079"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:26.083" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:26.082" endtime="20201029 09:33:26.083"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.080" endtime="20201029 09:33:26.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.025" endtime="20201029 09:33:26.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.023" endtime="20201029 09:33:26.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.085" endtime="20201029 09:33:26.086"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.019" endtime="20201029 09:33:26.087"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.014" endtime="20201029 09:33:26.087"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.980" endtime="20201029 09:33:26.088"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.091" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:26.100" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:27.345" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:26.090" endtime="20201029 09:33:27.346"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.348" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:33:27.347" endtime="20201029 09:33:27.349"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.088" endtime="20201029 09:33:27.349"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:27.353" endtime="20201029 09:33:27.372"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.351" endtime="20201029 09:33:27.373"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.382" endtime="20201029 09:33:27.389"></status>
</kw>
<msg timestamp="20201029 09:33:27.390" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.380" endtime="20201029 09:33:27.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.393" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.391" endtime="20201029 09:33:27.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.394" endtime="20201029 09:33:27.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.377" endtime="20201029 09:33:27.403"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.375" endtime="20201029 09:33:27.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.412" endtime="20201029 09:33:27.723"></status>
</kw>
<msg timestamp="20201029 09:33:27.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018624597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018632278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.411" endtime="20201029 09:33:27.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018624597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018632278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.727" endtime="20201029 09:33:27.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.736" endtime="20201029 09:33:27.737"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.407" endtime="20201029 09:33:27.738"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.405" endtime="20201029 09:33:27.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:27.743" level="INFO">${PHILIP_RES} = [{'diff': 7.680999999998966e-06}, {'diff': 7.666999999999397e-06}, {'diff': 7.707999999998633e-06}, {'diff': 7.680999999998966e-06}, {'diff': 7.722000000001672e-06}, {'diff': 7.665999999999923e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:27.739" endtime="20201029 09:33:27.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:27.747" level="INFO">${RESULT} = {'diff': [7.680999999998966e-06, 7.666999999999397e-06, 7.707999999998633e-06, 7.680999999998966e-06, 7.722000000001672e-06, 7.665999999999923e-06, 7.680999999998966e-06, 7.709000000001576e-06, 7.6939...</msg>
<status status="PASS" starttime="20201029 09:33:27.744" endtime="20201029 09:33:27.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.752" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:27.751" endtime="20201029 09:33:27.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.754" level="INFO">VALUE: [7.680999999998966e-06, 7.666999999999397e-06, 7.707999999998633e-06, 7.680999999998966e-06, 7.722000000001672e-06, 7.665999999999923e-06, 7.680999999998966e-06, 7.709000000001576e-06, 7.693999999999063e-06, 7.666999999999397e-06, 7.679999999999493e-06, 7.693999999999063e-06, 7.736000000001242e-06, 7.721999999998203e-06, 7.666999999999397e-06, 7.695000000002006e-06, 7.721999999998203e-06, 7.667000000002866e-06, 7.709000000001576e-06, 7.679999999999493e-06, 7.764000000000382e-06, 7.625000000000687e-06, 7.722000000001672e-06, 7.666999999999397e-06, 7.708999999998106e-06, 7.694000000002532e-06, 7.680999999998966e-06, 7.708999999998106e-06, 7.693999999999063e-06, 7.680999999998966e-06, 7.681000000002436e-06, 7.693999999999063e-06, 7.708999999998106e-06, 7.709000000001576e-06, 7.707999999998633e-06, 7.709000000001576e-06, 7.709000000001576e-06, 7.679999999999493e-06, 7.722000000001672e-06, 7.666999999999397e-06, 7.721999999998203e-06, 7.667000000002866e-06, 7.709000000001576e-06, 7.707999999998633e-06, 7.695000000002006e-06, 7.693999999999063e-06, 7.694000000002532e-06, 7.694999999998536e-06, 7.679999999999493e-06, 7.722000000001672e-06]</msg>
<status status="PASS" starttime="20201029 09:33:27.753" endtime="20201029 09:33:27.755"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.748" endtime="20201029 09:33:27.755"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.374" endtime="20201029 09:33:27.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.351" endtime="20201029 09:33:27.756"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:27.758" endtime="20201029 09:33:27.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.757" endtime="20201029 09:33:27.778"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.788" endtime="20201029 09:33:27.796"></status>
</kw>
<msg timestamp="20201029 09:33:27.797" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.786" endtime="20201029 09:33:27.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.799" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.798" endtime="20201029 09:33:27.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.800" endtime="20201029 09:33:27.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.783" endtime="20201029 09:33:27.803"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.780" endtime="20201029 09:33:27.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.810" endtime="20201029 09:33:28.097"></status>
</kw>
<msg timestamp="20201029 09:33:28.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0189995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019014625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:27.809" endtime="20201029 09:33:28.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0189995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019014625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:28.103" endtime="20201029 09:33:28.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.113" endtime="20201029 09:33:28.115"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.806" endtime="20201029 09:33:28.116"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.804" endtime="20201029 09:33:28.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:28.121" level="INFO">${PHILIP_RES} = [{'diff': 1.5125000000001249e-05}, {'diff': 1.5139000000000818e-05}, {'diff': 1.5180000000000055e-05}, {'diff': 1.5166000000000485e-05}, {'diff': 1.5166000000000485e-05}, {'diff': 1.5139000000000818e-...</msg>
<status status="PASS" starttime="20201029 09:33:28.117" endtime="20201029 09:33:28.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:28.126" level="INFO">${RESULT} = {'diff': [1.5125000000001249e-05, 1.5139000000000818e-05, 1.5180000000000055e-05, 1.5166000000000485e-05, 1.5166000000000485e-05, 1.5139000000000818e-05, 1.5125000000001249e-05, 1.5194000000003094e-05...</msg>
<status status="PASS" starttime="20201029 09:33:28.122" endtime="20201029 09:33:28.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.130" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:28.129" endtime="20201029 09:33:28.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.133" level="INFO">VALUE: [1.5125000000001249e-05, 1.5139000000000818e-05, 1.5180000000000055e-05, 1.5166000000000485e-05, 1.5166000000000485e-05, 1.5139000000000818e-05, 1.5125000000001249e-05, 1.5194000000003094e-05, 1.5125000000001249e-05, 1.5124999999997779e-05, 1.5139000000000818e-05, 1.5139000000000818e-05, 1.5153000000000388e-05, 1.5153000000000388e-05, 1.5139000000000818e-05, 1.5152000000000915e-05, 1.511099999999821e-05, 1.5139000000000818e-05, 1.5153000000000388e-05, 1.5152999999996919e-05, 1.5137999999997875e-05, 1.5139000000000818e-05, 1.5153000000000388e-05, 1.5139000000000818e-05, 1.5111000000001679e-05, 1.5098000000001582e-05, 1.5138999999997349e-05, 1.5153000000000388e-05, 1.5138999999997349e-05, 1.5166999999999958e-05, 1.5152999999996919e-05, 1.5152000000000915e-05, 1.5138999999997349e-05, 1.5153000000000388e-05, 1.5193999999999624e-05, 1.5139000000000818e-05, 1.5152000000000915e-05, 1.5139000000000818e-05, 1.5139000000000818e-05, 1.5166999999999958e-05, 1.5139000000000818e-05, 1.5152000000000915e-05, 1.5139000000000818e-05, 1.5125000000001249e-05, 1.5125000000001249e-05, 1.5153000000000388e-05, 1.5153000000000388e-05, 1.5152000000000915e-05, 1.5237000000001277e-05, 1.5139000000000818e-05]</msg>
<status status="PASS" starttime="20201029 09:33:28.132" endtime="20201029 09:33:28.134"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.127" endtime="20201029 09:33:28.134"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.779" endtime="20201029 09:33:28.135"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.756" endtime="20201029 09:33:28.135"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:28.137" endtime="20201029 09:33:28.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.136" endtime="20201029 09:33:28.157"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.166" endtime="20201029 09:33:28.174"></status>
</kw>
<msg timestamp="20201029 09:33:28.175" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.164" endtime="20201029 09:33:28.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.178" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.176" endtime="20201029 09:33:28.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.179" endtime="20201029 09:33:28.181"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.161" endtime="20201029 09:33:28.181"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.159" endtime="20201029 09:33:28.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.189" endtime="20201029 09:33:28.474"></status>
</kw>
<msg timestamp="20201029 09:33:28.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018150764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018174403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.187" endtime="20201029 09:33:28.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018150764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018174403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.478" endtime="20201029 09:33:28.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.487" endtime="20201029 09:33:28.488"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.184" endtime="20201029 09:33:28.489"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.182" endtime="20201029 09:33:28.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:28.494" level="INFO">${PHILIP_RES} = [{'diff': 2.363899999999891e-05}, {'diff': 2.366699999999805e-05}, {'diff': 2.3665999999998577e-05}, {'diff': 2.366699999999805e-05}, {'diff': 2.368100000000109e-05}, {'diff': 2.3665999999998577e-05},...</msg>
<status status="PASS" starttime="20201029 09:33:28.490" endtime="20201029 09:33:28.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:28.499" level="INFO">${RESULT} = {'diff': [2.363899999999891e-05, 2.366699999999805e-05, 2.3665999999998577e-05, 2.366699999999805e-05, 2.368100000000109e-05, 2.3665999999998577e-05, 2.362499999999934e-05, 2.365300000000195e-05, 2.36...</msg>
<status status="PASS" starttime="20201029 09:33:28.495" endtime="20201029 09:33:28.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.504" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:28.503" endtime="20201029 09:33:28.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.506" level="INFO">VALUE: [2.363899999999891e-05, 2.366699999999805e-05, 2.3665999999998577e-05, 2.366699999999805e-05, 2.368100000000109e-05, 2.3665999999998577e-05, 2.362499999999934e-05, 2.365300000000195e-05, 2.3680000000001616e-05, 2.366700000000152e-05, 2.3708000000000756e-05, 2.370900000000023e-05, 2.3666000000002047e-05, 2.3722000000000326e-05, 2.366700000000152e-05, 2.3665999999998577e-05, 2.368100000000109e-05, 2.366699999999805e-05, 2.3651999999999007e-05, 2.366699999999805e-05, 2.361099999999977e-05, 2.3665999999998577e-05, 2.366699999999805e-05, 2.365299999999848e-05, 2.3665999999998577e-05, 2.3651999999999007e-05, 2.3735999999999896e-05, 2.366700000000152e-05, 2.3750000000002935e-05, 2.368100000000109e-05, 2.366700000000152e-05, 2.3680000000001616e-05, 2.366700000000152e-05, 2.366700000000152e-05, 2.3666000000002047e-05, 2.3666000000002047e-05, 2.368100000000109e-05, 2.366699999999805e-05, 2.3679999999998147e-05, 2.366699999999805e-05, 2.362499999999934e-05, 2.3693999999997717e-05, 2.366699999999805e-05, 2.363899999999891e-05, 2.366699999999805e-05, 2.365299999999848e-05, 2.368100000000109e-05, 2.366699999999805e-05, 2.3680000000001616e-05, 2.366700000000152e-05]</msg>
<status status="PASS" starttime="20201029 09:33:28.505" endtime="20201029 09:33:28.507"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.500" endtime="20201029 09:33:28.507"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.158" endtime="20201029 09:33:28.508"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.135" endtime="20201029 09:33:28.508"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:28.510" endtime="20201029 09:33:28.530"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.509" endtime="20201029 09:33:28.530"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.539" endtime="20201029 09:33:28.549"></status>
</kw>
<msg timestamp="20201029 09:33:28.549" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.537" endtime="20201029 09:33:28.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.552" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.551" endtime="20201029 09:33:28.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.554" endtime="20201029 09:33:28.555"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.535" endtime="20201029 09:33:28.556"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.533" endtime="20201029 09:33:28.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.563" endtime="20201029 09:33:28.850"></status>
</kw>
<msg timestamp="20201029 09:33:28.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018107542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018140792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.561" endtime="20201029 09:33:28.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018107542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018140792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.855" endtime="20201029 09:33:28.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.864" endtime="20201029 09:33:28.865"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.559" endtime="20201029 09:33:28.866"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.557" endtime="20201029 09:33:28.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:28.870" level="INFO">${PHILIP_RES} = [{'diff': 3.324999999999856e-05}, {'diff': 3.327800000000117e-05}, {'diff': 3.327800000000117e-05}, {'diff': 3.32779999999977e-05}, {'diff': 3.324999999999856e-05}, {'diff': 3.3277000000001694e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:28.867" endtime="20201029 09:33:28.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:28.875" level="INFO">${RESULT} = {'diff': [3.324999999999856e-05, 3.327800000000117e-05, 3.327800000000117e-05, 3.32779999999977e-05, 3.324999999999856e-05, 3.3277000000001694e-05, 3.325000000000203e-05, 3.327800000000117e-05, 3.3277...</msg>
<status status="PASS" starttime="20201029 09:33:28.871" endtime="20201029 09:33:28.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.879" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:28.878" endtime="20201029 09:33:28.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.882" level="INFO">VALUE: [3.324999999999856e-05, 3.327800000000117e-05, 3.327800000000117e-05, 3.32779999999977e-05, 3.324999999999856e-05, 3.3277000000001694e-05, 3.325000000000203e-05, 3.327800000000117e-05, 3.32779999999977e-05, 3.329200000000074e-05, 3.325000000000203e-05, 3.326399999999813e-05, 3.3290999999997795e-05, 3.3291000000001264e-05, 3.327800000000117e-05, 3.327800000000117e-05, 3.329200000000074e-05, 3.326399999999813e-05, 3.319400000000028e-05, 3.329200000000074e-05, 3.326399999999813e-05, 3.3276999999998225e-05, 3.327800000000117e-05, 3.320899999999932e-05, 3.326399999999813e-05, 3.32779999999977e-05, 3.329200000000074e-05, 3.32640000000016e-05, 3.3277000000001694e-05, 3.3276999999998225e-05, 3.32779999999977e-05, 3.32640000000016e-05, 3.327800000000117e-05, 3.3346999999999544e-05, 3.333399999999945e-05, 3.327800000000117e-05, 3.3305000000000834e-05, 3.3263000000002124e-05, 3.32779999999977e-05, 3.32779999999977e-05, 3.329200000000074e-05, 3.327800000000117e-05, 3.327800000000117e-05, 3.32640000000016e-05, 3.3263000000002124e-05, 3.327800000000117e-05, 3.329200000000074e-05, 3.326399999999813e-05, 3.330600000000031e-05, 3.327800000000117e-05]</msg>
<status status="PASS" starttime="20201029 09:33:28.881" endtime="20201029 09:33:28.882"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.876" endtime="20201029 09:33:28.883"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.531" endtime="20201029 09:33:28.883"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.508" endtime="20201029 09:33:28.884"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:28.886" endtime="20201029 09:33:28.905"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.885" endtime="20201029 09:33:28.906"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.915" endtime="20201029 09:33:28.926"></status>
</kw>
<msg timestamp="20201029 09:33:28.927" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.913" endtime="20201029 09:33:28.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.929" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.928" endtime="20201029 09:33:28.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.930" endtime="20201029 09:33:28.932"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.910" endtime="20201029 09:33:28.932"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.908" endtime="20201029 09:33:28.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.940" endtime="20201029 09:33:29.226"></status>
</kw>
<msg timestamp="20201029 09:33:29.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019344431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019388375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.938" endtime="20201029 09:33:29.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019344431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019388375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.230" endtime="20201029 09:33:29.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.239" endtime="20201029 09:33:29.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.935" endtime="20201029 09:33:29.241"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.934" endtime="20201029 09:33:29.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:29.246" level="INFO">${PHILIP_RES} = [{'diff': 4.394400000000062e-05}, {'diff': 4.395800000000019e-05}, {'diff': 4.39999999999989e-05}, {'diff': 4.3945000000000095e-05}, {'diff': 4.397199999999976e-05}, {'diff': 4.397199999999976e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:29.242" endtime="20201029 09:33:29.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:29.250" level="INFO">${RESULT} = {'diff': [4.394400000000062e-05, 4.395800000000019e-05, 4.39999999999989e-05, 4.3945000000000095e-05, 4.397199999999976e-05, 4.397199999999976e-05, 4.3972999999999235e-05, 4.395800000000019e-05, 4.391...</msg>
<status status="PASS" starttime="20201029 09:33:29.247" endtime="20201029 09:33:29.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.255" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:29.253" endtime="20201029 09:33:29.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.257" level="INFO">VALUE: [4.394400000000062e-05, 4.395800000000019e-05, 4.39999999999989e-05, 4.3945000000000095e-05, 4.397199999999976e-05, 4.397199999999976e-05, 4.3972999999999235e-05, 4.395800000000019e-05, 4.391600000000148e-05, 4.402799999999804e-05, 4.395800000000019e-05, 4.3917000000000955e-05, 4.394399999999715e-05, 4.3945000000000095e-05, 4.395800000000019e-05, 4.397199999999976e-05, 4.397199999999976e-05, 4.398599999999933e-05, 4.400000000000237e-05, 4.394400000000062e-05, 4.3958999999999665e-05, 4.398599999999933e-05, 4.395800000000019e-05, 4.3958999999999665e-05, 4.3958999999999665e-05, 4.397199999999976e-05, 4.398599999999933e-05, 4.3958999999999665e-05, 4.397199999999976e-05, 4.391600000000148e-05, 4.3959000000003134e-05, 4.394400000000062e-05, 4.3888999999998346e-05, 4.395800000000019e-05, 4.3874999999998776e-05, 4.397199999999976e-05, 4.395800000000019e-05, 4.398599999999933e-05, 4.3972999999999235e-05, 4.394400000000062e-05, 4.395800000000019e-05, 4.3958999999999665e-05, 4.39999999999989e-05, 4.398599999999933e-05, 4.395800000000019e-05, 4.3958999999999665e-05, 4.397199999999976e-05, 4.395800000000019e-05, 4.39860000000028e-05, 4.3958999999999665e-05]</msg>
<status status="PASS" starttime="20201029 09:33:29.256" endtime="20201029 09:33:29.258"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.251" endtime="20201029 09:33:29.259"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.907" endtime="20201029 09:33:29.259"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.884" endtime="20201029 09:33:29.260"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:29.262" endtime="20201029 09:33:29.281"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.261" endtime="20201029 09:33:29.282"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.291" endtime="20201029 09:33:29.303"></status>
</kw>
<msg timestamp="20201029 09:33:29.303" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.289" endtime="20201029 09:33:29.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.306" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.304" endtime="20201029 09:33:29.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.307" endtime="20201029 09:33:29.308"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.286" endtime="20201029 09:33:29.309"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.284" endtime="20201029 09:33:29.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.316" endtime="20201029 09:33:29.604"></status>
</kw>
<msg timestamp="20201029 09:33:29.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018707861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018763569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.315" endtime="20201029 09:33:29.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018707861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018763569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.608" endtime="20201029 09:33:29.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.616" endtime="20201029 09:33:29.618"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.312" endtime="20201029 09:33:29.619"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.310" endtime="20201029 09:33:29.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:29.623" level="INFO">${PHILIP_RES} = [{'diff': 5.5708000000001534e-05}, {'diff': 5.5721999999997635e-05}, {'diff': 5.5722000000001104e-05}, {'diff': 5.5736000000000674e-05}, {'diff': 5.573700000000015e-05}, {'diff': 5.5736000000000674e-0...</msg>
<status status="PASS" starttime="20201029 09:33:29.620" endtime="20201029 09:33:29.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:29.628" level="INFO">${RESULT} = {'diff': [5.5708000000001534e-05, 5.5721999999997635e-05, 5.5722000000001104e-05, 5.5736000000000674e-05, 5.573700000000015e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.581900000000209e-05, ...</msg>
<status status="PASS" starttime="20201029 09:33:29.624" endtime="20201029 09:33:29.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.633" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:29.632" endtime="20201029 09:33:29.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.636" level="INFO">VALUE: [5.5708000000001534e-05, 5.5721999999997635e-05, 5.5722000000001104e-05, 5.5736000000000674e-05, 5.573700000000015e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.581900000000209e-05, 5.5736000000000674e-05, 5.5722000000001104e-05, 5.5735999999997204e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.5750000000000244e-05, 5.5735999999997204e-05, 5.5722000000001104e-05, 5.5735999999997204e-05, 5.5750000000000244e-05, 5.5749999999996774e-05, 5.5750000000000244e-05, 5.5735999999997204e-05, 5.5750000000000244e-05, 5.5750000000000244e-05, 5.5722000000001104e-05, 5.5750000000000244e-05, 5.5736000000000674e-05, 5.572300000000058e-05, 5.5736000000000674e-05, 5.5722000000001104e-05, 5.5736000000000674e-05, 5.570900000000101e-05, 5.5707999999998065e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.572300000000058e-05, 5.5694000000001964e-05, 5.5736000000000674e-05, 5.5735999999997204e-05, 5.5736000000000674e-05, 5.573700000000015e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.5722000000001104e-05, 5.5736000000000674e-05, 5.5722000000001104e-05, 5.5693999999998495e-05, 5.5736000000000674e-05, 5.570899999999754e-05, 5.5736000000000674e-05, 5.5736000000000674e-05]</msg>
<status status="PASS" starttime="20201029 09:33:29.634" endtime="20201029 09:33:29.636"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.629" endtime="20201029 09:33:29.637"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.283" endtime="20201029 09:33:29.638"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.260" endtime="20201029 09:33:29.638"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:29.640" endtime="20201029 09:33:29.660"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.639" endtime="20201029 09:33:29.661"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.670" endtime="20201029 09:33:29.681"></status>
</kw>
<msg timestamp="20201029 09:33:29.681" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.668" endtime="20201029 09:33:29.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.684" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.682" endtime="20201029 09:33:29.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.685" endtime="20201029 09:33:29.687"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.665" endtime="20201029 09:33:29.687"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.663" endtime="20201029 09:33:29.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.695" endtime="20201029 09:33:29.980"></status>
</kw>
<msg timestamp="20201029 09:33:29.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018789, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018857569, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:29.693" endtime="20201029 09:33:29.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018789, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018857569, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:29.985" endtime="20201029 09:33:29.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.994" endtime="20201029 09:33:29.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.690" endtime="20201029 09:33:29.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.688" endtime="20201029 09:33:29.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:30.002" level="INFO">${PHILIP_RES} = [{'diff': 6.856900000000096e-05}, {'diff': 6.858300000000053e-05}, {'diff': 6.865299999999838e-05}, {'diff': 6.858300000000053e-05}, {'diff': 6.85970000000001e-05}, {'diff': 6.858300000000053e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:29.999" endtime="20201029 09:33:30.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:30.006" level="INFO">${RESULT} = {'diff': [6.856900000000096e-05, 6.858300000000053e-05, 6.865299999999838e-05, 6.858300000000053e-05, 6.85970000000001e-05, 6.858300000000053e-05, 6.85970000000001e-05, 6.859799999999958e-05, 6.861099...</msg>
<status status="PASS" starttime="20201029 09:33:30.003" endtime="20201029 09:33:30.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.011" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:30.010" endtime="20201029 09:33:30.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.014" level="INFO">VALUE: [6.856900000000096e-05, 6.858300000000053e-05, 6.865299999999838e-05, 6.858300000000053e-05, 6.85970000000001e-05, 6.858300000000053e-05, 6.85970000000001e-05, 6.859799999999958e-05, 6.861099999999967e-05, 6.8584e-05, 6.858300000000053e-05, 6.858300000000053e-05, 6.85970000000001e-05, 6.85420000000013e-05, 6.8584e-05, 6.856900000000096e-05, 6.858300000000053e-05, 6.861099999999967e-05, 6.856900000000096e-05, 6.8584e-05, 6.85970000000001e-05, 6.861100000000314e-05, 6.858300000000053e-05, 6.861099999999967e-05, 6.859800000000305e-05, 6.858300000000053e-05, 6.854199999999783e-05, 6.85970000000001e-05, 6.858300000000053e-05, 6.8584e-05, 6.862499999999924e-05, 6.85420000000013e-05, 6.856899999999749e-05, 6.861099999999967e-05, 6.8584e-05, 6.858299999999706e-05, 6.863899999999881e-05, 6.856900000000096e-05, 6.8584e-05, 6.861099999999967e-05, 6.85970000000001e-05, 6.8584e-05, 6.858300000000053e-05, 6.85970000000001e-05, 6.856900000000096e-05, 6.858300000000053e-05, 6.859799999999958e-05, 6.855500000000139e-05, 6.861099999999967e-05, 6.85970000000001e-05]</msg>
<status status="PASS" starttime="20201029 09:33:30.012" endtime="20201029 09:33:30.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.007" endtime="20201029 09:33:30.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.661" endtime="20201029 09:33:30.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.638" endtime="20201029 09:33:30.015"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:30.018" endtime="20201029 09:33:30.037"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.016" endtime="20201029 09:33:30.038"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.047" endtime="20201029 09:33:30.059"></status>
</kw>
<msg timestamp="20201029 09:33:30.060" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.045" endtime="20201029 09:33:30.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.063" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.061" endtime="20201029 09:33:30.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.064" endtime="20201029 09:33:30.069"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.042" endtime="20201029 09:33:30.069"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.040" endtime="20201029 09:33:30.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.077" endtime="20201029 09:33:30.362"></status>
</kw>
<msg timestamp="20201029 09:33:30.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018622028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018704556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.075" endtime="20201029 09:33:30.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018622028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018704556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.366" endtime="20201029 09:33:30.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.375" endtime="20201029 09:33:30.376"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.072" endtime="20201029 09:33:30.377"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.070" endtime="20201029 09:33:30.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:30.381" level="INFO">${PHILIP_RES} = [{'diff': 8.252800000000185e-05}, {'diff': 8.251299999999934e-05}, {'diff': 8.255600000000099e-05}, {'diff': 8.255600000000099e-05}, {'diff': 8.254199999999795e-05}, {'diff': 8.254200000000142e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:30.378" endtime="20201029 09:33:30.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:30.385" level="INFO">${RESULT} = {'diff': [8.252800000000185e-05, 8.251299999999934e-05, 8.255600000000099e-05, 8.255600000000099e-05, 8.254199999999795e-05, 8.254200000000142e-05, 8.254199999999795e-05, 8.251399999999881e-05, 8.2513...</msg>
<status status="PASS" starttime="20201029 09:33:30.382" endtime="20201029 09:33:30.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.390" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:30.389" endtime="20201029 09:33:30.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.392" level="INFO">VALUE: [8.252800000000185e-05, 8.251299999999934e-05, 8.255600000000099e-05, 8.255600000000099e-05, 8.254199999999795e-05, 8.254200000000142e-05, 8.254199999999795e-05, 8.251399999999881e-05, 8.251399999999881e-05, 8.251399999999881e-05, 8.252800000000185e-05, 8.254199999999795e-05, 8.255500000000152e-05, 8.252699999999891e-05, 8.252799999999838e-05, 8.254200000000142e-05, 8.252799999999838e-05, 8.252700000000238e-05, 8.252799999999838e-05, 8.252799999999838e-05, 8.249999999999924e-05, 8.251399999999881e-05, 8.255599999999752e-05, 8.252800000000185e-05, 8.251399999999881e-05, 8.254200000000142e-05, 8.252799999999838e-05, 8.252800000000185e-05, 8.254100000000195e-05, 8.251399999999881e-05, 8.251400000000228e-05, 8.255499999999805e-05, 8.252699999999891e-05, 8.251399999999881e-05, 8.254199999999795e-05, 9.536100000000214e-05, 8.252799999999838e-05, 8.254200000000142e-05, 8.255499999999805e-05, 8.252800000000185e-05, 8.254200000000142e-05, 8.254199999999795e-05, 8.252700000000238e-05, 8.252799999999838e-05, 8.251399999999881e-05, 8.251400000000228e-05, 8.251399999999881e-05, 8.255600000000099e-05, 8.254200000000142e-05, 8.254099999999848e-05]</msg>
<status status="PASS" starttime="20201029 09:33:30.391" endtime="20201029 09:33:30.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.386" endtime="20201029 09:33:30.394"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.038" endtime="20201029 09:33:30.394"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.016" endtime="20201029 09:33:30.394"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:30.397" endtime="20201029 09:33:30.416"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.395" endtime="20201029 09:33:30.417"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.425" endtime="20201029 09:33:30.438"></status>
</kw>
<msg timestamp="20201029 09:33:30.439" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.424" endtime="20201029 09:33:30.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.441" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.440" endtime="20201029 09:33:30.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.442" endtime="20201029 09:33:30.444"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.421" endtime="20201029 09:33:30.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.419" endtime="20201029 09:33:30.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.451" endtime="20201029 09:33:30.756"></status>
</kw>
<msg timestamp="20201029 09:33:30.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018184458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018282, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:30.450" endtime="20201029 09:33:30.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018184458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018282, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:30.760" endtime="20201029 09:33:30.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.768" endtime="20201029 09:33:30.770"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.447" endtime="20201029 09:33:30.770"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.446" endtime="20201029 09:33:30.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:30.775" level="INFO">${PHILIP_RES} = [{'diff': 9.754199999999907e-05}, {'diff': 9.759700000000135e-05}, {'diff': 9.75409999999996e-05}, {'diff': 9.755600000000211e-05}, {'diff': 9.754199999999907e-05}, {'diff': 9.75279999999995e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:30.772" endtime="20201029 09:33:30.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:30.780" level="INFO">${RESULT} = {'diff': [9.754199999999907e-05, 9.759700000000135e-05, 9.75409999999996e-05, 9.755600000000211e-05, 9.754199999999907e-05, 9.75279999999995e-05, 9.755499999999917e-05, 9.754199999999907e-05, 9.747200...</msg>
<status status="PASS" starttime="20201029 09:33:30.776" endtime="20201029 09:33:30.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.784" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:30.783" endtime="20201029 09:33:30.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.787" level="INFO">VALUE: [9.754199999999907e-05, 9.759700000000135e-05, 9.75409999999996e-05, 9.755600000000211e-05, 9.754199999999907e-05, 9.75279999999995e-05, 9.755499999999917e-05, 9.754199999999907e-05, 9.747200000000122e-05, 9.751399999999993e-05, 9.75279999999995e-05, 9.754199999999907e-05, 9.755599999999864e-05, 9.757000000000168e-05, 9.75409999999996e-05, 9.756899999999874e-05, 9.762500000000049e-05, 9.755600000000211e-05, 9.762500000000049e-05, 9.755499999999917e-05, 9.755599999999864e-05, 9.759700000000135e-05, 9.755600000000211e-05, 9.758299999999831e-05, 9.755499999999917e-05, 9.754199999999907e-05, 9.755599999999864e-05, 9.74999999999969e-05, 9.756900000000221e-05, 9.755599999999864e-05, 9.755599999999864e-05, 9.75279999999995e-05, 9.75409999999996e-05, 9.754200000000254e-05, 9.754199999999907e-05, 9.75279999999995e-05, 9.75409999999996e-05, 9.752700000000003e-05, 9.755600000000211e-05, 9.757000000000168e-05, 9.756899999999874e-05, 9.755499999999917e-05, 9.755600000000211e-05, 9.761100000000092e-05, 9.757000000000168e-05, 9.756899999999874e-05, 9.756899999999874e-05, 9.755600000000211e-05, 9.75279999999995e-05, 9.755599999999864e-05]</msg>
<status status="PASS" starttime="20201029 09:33:30.785" endtime="20201029 09:33:30.787"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.781" endtime="20201029 09:33:30.788"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.417" endtime="20201029 09:33:30.788"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.395" endtime="20201029 09:33:30.788"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:30.791" endtime="20201029 09:33:30.810"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.789" endtime="20201029 09:33:30.811"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.819" endtime="20201029 09:33:30.833"></status>
</kw>
<msg timestamp="20201029 09:33:30.833" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.818" endtime="20201029 09:33:30.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.836" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.834" endtime="20201029 09:33:30.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.837" endtime="20201029 09:33:30.839"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.815" endtime="20201029 09:33:30.839"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.813" endtime="20201029 09:33:30.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.846" endtime="20201029 09:33:31.132"></status>
</kw>
<msg timestamp="20201029 09:33:31.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017790778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017904417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.845" endtime="20201029 09:33:31.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017790778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017904417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.136" endtime="20201029 09:33:31.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.144" endtime="20201029 09:33:31.147"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.842" endtime="20201029 09:33:31.148"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.840" endtime="20201029 09:33:31.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:31.152" level="INFO">${PHILIP_RES} = [{'diff': 0.00011363899999999871}, {'diff': 0.00011366700000000132}, {'diff': 0.00011366700000000132}, {'diff': 0.00011363900000000218}, {'diff': 0.00011366700000000132}, {'diff': 0.000113624999999999...</msg>
<status status="PASS" starttime="20201029 09:33:31.149" endtime="20201029 09:33:31.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:31.156" level="INFO">${RESULT} = {'diff': [0.00011363899999999871, 0.00011366700000000132, 0.00011366700000000132, 0.00011363900000000218, 0.00011366700000000132, 0.00011362499999999914, 0.00011365299999999828, 0.00011366699999999785...</msg>
<status status="PASS" starttime="20201029 09:33:31.153" endtime="20201029 09:33:31.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.160" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:31.159" endtime="20201029 09:33:31.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.163" level="INFO">VALUE: [0.00011363899999999871, 0.00011366700000000132, 0.00011366700000000132, 0.00011363900000000218, 0.00011366700000000132, 0.00011362499999999914, 0.00011365299999999828, 0.00011366699999999785, 0.00011366700000000132, 0.00011363900000000218, 0.00011366700000000132, 0.00011366700000000132, 0.00011369399999999752, 0.00011366599999999838, 0.00011365299999999828, 0.000113597, 0.00011366600000000185, 0.00011363799999999924, 0.00011363899999999871, 0.00011366599999999838, 0.00011367999999999795, 0.00011366700000000132, 0.00011359800000000295, 0.00011366700000000132, 0.00011366700000000132, 0.00011365299999999828, 0.00011363899999999871, 0.00011365299999999828, 0.00011368100000000089, 0.00011365300000000175, 0.00011368100000000089, 0.00011365300000000175, 0.00011363899999999871, 0.00011366699999999785, 0.00011365299999999828, 0.00011365300000000175, 0.00011365300000000175, 0.00011366699999999785, 0.00011365199999999881, 0.00011362499999999914, 0.00011362499999999914, 0.00011368000000000142, 0.00011365300000000175, 0.00011372200000000013, 0.00011363899999999871, 0.00011358399999999991, 0.00011365299999999828, 0.00011363899999999871, 0.00011366700000000132, 0.00011366700000000132]</msg>
<status status="PASS" starttime="20201029 09:33:31.161" endtime="20201029 09:33:31.163"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.157" endtime="20201029 09:33:31.164"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.812" endtime="20201029 09:33:31.164"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.789" endtime="20201029 09:33:31.165"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:31.167" endtime="20201029 09:33:31.186"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.166" endtime="20201029 09:33:31.187"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.195" endtime="20201029 09:33:31.211"></status>
</kw>
<msg timestamp="20201029 09:33:31.211" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.194" endtime="20201029 09:33:31.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.214" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.212" endtime="20201029 09:33:31.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.215" endtime="20201029 09:33:31.217"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.191" endtime="20201029 09:33:31.218"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.189" endtime="20201029 09:33:31.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.225" endtime="20201029 09:33:31.510"></status>
</kw>
<msg timestamp="20201029 09:33:31.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017908125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018038944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.223" endtime="20201029 09:33:31.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017908125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018038944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.515" endtime="20201029 09:33:31.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.523" endtime="20201029 09:33:31.525"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.221" endtime="20201029 09:33:31.525"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.219" endtime="20201029 09:33:31.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:31.530" level="INFO">${PHILIP_RES} = [{'diff': 0.00013081900000000077}, {'diff': 0.00013084799999999938}, {'diff': 0.0001307920000000011}, {'diff': 0.00013086099999999948}, {'diff': 0.00013084700000000338}, {'diff': 0.0001308469999999999...</msg>
<status status="PASS" starttime="20201029 09:33:31.526" endtime="20201029 09:33:31.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:31.534" level="INFO">${RESULT} = {'diff': [0.00013081900000000077, 0.00013084799999999938, 0.0001307920000000011, 0.00013086099999999948, 0.00013084700000000338, 0.0001308469999999999, 0.0001308469999999999, 0.00013086099999999948, 0...</msg>
<status status="PASS" starttime="20201029 09:33:31.531" endtime="20201029 09:33:31.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.538" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:31.537" endtime="20201029 09:33:31.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.541" level="INFO">VALUE: [0.00013081900000000077, 0.00013084799999999938, 0.0001307920000000011, 0.00013086099999999948, 0.00013084700000000338, 0.0001308469999999999, 0.0001308469999999999, 0.00013086099999999948, 0.00013084700000000338, 0.00013083300000000034, 0.0001308469999999999, 0.0001489169999999984, 0.00013083300000000034, 0.0001308469999999999, 0.0001308339999999998, 0.00013084799999999938, 0.00013080600000000067, 0.0001308469999999999, 0.0001308469999999999, 0.0001308339999999998, 0.00013086099999999948, 0.0001308469999999999, 0.0001308469999999999, 0.0001308469999999999, 0.00013086099999999948, 0.00013086099999999948, 0.00013082000000000024, 0.0001308189999999973, 0.00013083300000000034, 0.0001309310000000008, 0.0001309029999999982, 0.0001308469999999999, 0.00013091699999999776, 0.0001308890000000021, 0.00013086099999999948, 0.0001308339999999998, 0.00013087499999999905, 0.0001308469999999999, 0.0001308469999999999, 0.0001309029999999982, 0.00013087500000000252, 0.00013084799999999938, 0.0001308469999999999, 0.0001308469999999999, 0.0001308469999999999, 0.00013087499999999905, 0.0001308469999999999, 0.00013083300000000034, 0.00013083300000000034, 0.00013083299999999687]</msg>
<status status="PASS" starttime="20201029 09:33:31.539" endtime="20201029 09:33:31.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.535" endtime="20201029 09:33:31.543"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.188" endtime="20201029 09:33:31.543"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.165" endtime="20201029 09:33:31.543"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:31.546" endtime="20201029 09:33:31.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.544" endtime="20201029 09:33:31.566"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.577" endtime="20201029 09:33:31.594"></status>
</kw>
<msg timestamp="20201029 09:33:31.595" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.575" endtime="20201029 09:33:31.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.599" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.597" endtime="20201029 09:33:31.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.600" endtime="20201029 09:33:31.602"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.571" endtime="20201029 09:33:31.602"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.568" endtime="20201029 09:33:31.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.609" endtime="20201029 09:33:31.894"></status>
</kw>
<msg timestamp="20201029 09:33:31.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.608" endtime="20201029 09:33:31.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.898" endtime="20201029 09:33:31.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.906" endtime="20201029 09:33:31.908"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.605" endtime="20201029 09:33:31.908"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.603" endtime="20201029 09:33:31.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:31.913" level="INFO">${PHILIP_RES} = [{'diff': 0.0001490970000000008}, {'diff': 0.0001490970000000008}, {'diff': 0.00014911100000000038}, {'diff': 0.00014911100000000038}, {'diff': 0.00014911100000000038}, {'diff': 0.00014912499999999995...</msg>
<status status="PASS" starttime="20201029 09:33:31.910" endtime="20201029 09:33:31.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:31.918" level="INFO">${RESULT} = {'diff': [0.0001490970000000008, 0.0001490970000000008, 0.00014911100000000038, 0.00014911100000000038, 0.00014911100000000038, 0.00014912499999999995, 0.0001491109999999969, 0.0001490970000000008, 0....</msg>
<status status="PASS" starttime="20201029 09:33:31.914" endtime="20201029 09:33:31.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.922" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:31.921" endtime="20201029 09:33:31.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.925" level="INFO">VALUE: [0.0001490970000000008, 0.0001490970000000008, 0.00014911100000000038, 0.00014911100000000038, 0.00014911100000000038, 0.00014912499999999995, 0.0001491109999999969, 0.0001490970000000008, 0.00014908300000000124, 0.00014911100000000038, 0.0001491529999999991, 0.00014912499999999995, 0.00014911100000000038, 0.00014911100000000038, 0.0001491659999999992, 0.0001491109999999969, 0.00014911100000000038, 0.00014911100000000038, 0.00014911100000000038, 0.0001490970000000008, 0.00014918000000000223, 0.00014912499999999995, 0.0001491109999999969, 0.00014912499999999995, 0.00014908300000000124, 0.00014906900000000167, 0.00014912499999999995, 0.00014912499999999995, 0.00014912499999999995, 0.00014912499999999995, 0.00014912499999999995, 0.0001491109999999969, 0.00014912499999999995, 0.00014911199999999986, 0.0001490970000000008, 0.00014912499999999995, 0.00014918000000000223, 0.00014912499999999995, 0.0001491109999999969, 0.00014913899999999952, 0.00014911100000000038, 0.00014912499999999995, 0.00014913800000000005, 0.00014913899999999952, 0.00014911100000000038, 0.00014913800000000005, 0.00014912500000000342, 0.00014912499999999995, 0.00014909800000000029, 0.00014912499999999995]</msg>
<status status="PASS" starttime="20201029 09:33:31.923" endtime="20201029 09:33:31.925"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.919" endtime="20201029 09:33:31.926"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.566" endtime="20201029 09:33:31.926"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.544" endtime="20201029 09:33:31.927"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:31.929" endtime="20201029 09:33:31.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.927" endtime="20201029 09:33:31.949"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.957" endtime="20201029 09:33:31.974"></status>
</kw>
<msg timestamp="20201029 09:33:31.974" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.955" endtime="20201029 09:33:31.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.977" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.975" endtime="20201029 09:33:31.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.978" endtime="20201029 09:33:31.979"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.953" endtime="20201029 09:33:31.980"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.951" endtime="20201029 09:33:31.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.987" endtime="20201029 09:33:32.272"></status>
</kw>
<msg timestamp="20201029 09:33:32.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017906611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018075083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.986" endtime="20201029 09:33:32.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017906611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018075083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.277" endtime="20201029 09:33:32.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.285" endtime="20201029 09:33:32.288"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.983" endtime="20201029 09:33:32.288"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.981" endtime="20201029 09:33:32.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:32.292" level="INFO">${PHILIP_RES} = [{'diff': 0.00016847199999999937}, {'diff': 0.0001684860000000024}, {'diff': 0.00016847199999999937}, {'diff': 0.0001684860000000024}, {'diff': 0.00016843000000000066}, {'diff': 0.0001684999999999985}...</msg>
<status status="PASS" starttime="20201029 09:33:32.289" endtime="20201029 09:33:32.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:32.297" level="INFO">${RESULT} = {'diff': [0.00016847199999999937, 0.0001684860000000024, 0.00016847199999999937, 0.0001684860000000024, 0.00016843000000000066, 0.0001684999999999985, 0.00016847199999999937, 0.0001684579999999998, 0....</msg>
<status status="PASS" starttime="20201029 09:33:32.293" endtime="20201029 09:33:32.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.301" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:32.300" endtime="20201029 09:33:32.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.303" level="INFO">VALUE: [0.00016847199999999937, 0.0001684860000000024, 0.00016847199999999937, 0.0001684860000000024, 0.00016843000000000066, 0.0001684999999999985, 0.00016847199999999937, 0.0001684579999999998, 0.00016847199999999937, 0.00016847200000000284, 0.00016847199999999937, 0.00016848599999999894, 0.00016848599999999894, 0.00016847199999999937, 0.00016848599999999894, 0.00016847199999999937, 0.0001684860000000024, 0.0001684860000000024, 0.00016847199999999937, 0.00016848599999999894, 0.00016847199999999937, 0.00016848699999999842, 0.00016848599999999894, 0.00016843100000000014, 0.0001684579999999998, 0.00016847299999999885, 0.0001684579999999998, 0.00016847299999999885, 0.00016847199999999937, 0.00016847299999999885, 0.00016844399999999676, 0.0001684860000000024, 0.00016852799999999765, 0.00016847299999999885, 0.00016848599999999894, 0.00016847299999999885, 0.00016851400000000155, 0.00016841599999999762, 0.0001684860000000024, 0.0001684579999999998, 0.00016847199999999937, 0.00016847199999999937, 0.00016848599999999894, 0.0001684579999999998, 0.0001684860000000024, 0.0001684860000000024, 0.00016847199999999937, 0.00016852799999999765, 0.00016847199999999937, 0.00016847199999999937]</msg>
<status status="PASS" starttime="20201029 09:33:32.302" endtime="20201029 09:33:32.304"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.297" endtime="20201029 09:33:32.305"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.949" endtime="20201029 09:33:32.305"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.927" endtime="20201029 09:33:32.305"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:32.308" endtime="20201029 09:33:32.327"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.306" endtime="20201029 09:33:32.328"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.336" endtime="20201029 09:33:32.354"></status>
</kw>
<msg timestamp="20201029 09:33:32.355" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.334" endtime="20201029 09:33:32.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.357" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.356" endtime="20201029 09:33:32.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.358" endtime="20201029 09:33:32.361"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.332" endtime="20201029 09:33:32.361"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.330" endtime="20201029 09:33:32.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.368" endtime="20201029 09:33:32.654"></status>
</kw>
<msg timestamp="20201029 09:33:32.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018055389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018244278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.367" endtime="20201029 09:33:32.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018055389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018244278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.659" endtime="20201029 09:33:32.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.667" endtime="20201029 09:33:32.668"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.364" endtime="20201029 09:33:32.669"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.363" endtime="20201029 09:33:32.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:32.673" level="INFO">${PHILIP_RES} = [{'diff': 0.00018888899999999764}, {'diff': 0.00018891600000000078}, {'diff': 0.00018891700000000025}, {'diff': 0.00018893099999999982}, {'diff': 0.0001889449999999994}, {'diff': 0.0001889170000000002...</msg>
<status status="PASS" starttime="20201029 09:33:32.670" endtime="20201029 09:33:32.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:32.677" level="INFO">${RESULT} = {'diff': [0.00018888899999999764, 0.00018891600000000078, 0.00018891700000000025, 0.00018893099999999982, 0.0001889449999999994, 0.00018891700000000025, 0.00018891700000000025, 0.00018890300000000068,...</msg>
<status status="PASS" starttime="20201029 09:33:32.674" endtime="20201029 09:33:32.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.682" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:32.681" endtime="20201029 09:33:32.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.685" level="INFO">VALUE: [0.00018888899999999764, 0.00018891600000000078, 0.00018891700000000025, 0.00018893099999999982, 0.0001889449999999994, 0.00018891700000000025, 0.00018891700000000025, 0.00018890300000000068, 0.0001889310000000033, 0.00018891600000000078, 0.00018893099999999982, 0.00018891700000000025, 0.00018890199999999774, 0.00018891700000000025, 0.00018891700000000025, 0.00018891700000000025, 0.0001889029999999972, 0.00018893000000000035, 0.00018883299999999936, 0.00018893099999999982, 0.00018891600000000078, 0.00018891700000000025, 0.00018886100000000197, 0.0001889020000000012, 0.00018891700000000025, 0.00018891700000000025, 0.00018891600000000078, 0.00018891700000000025, 0.00018893000000000035, 0.00018898700000000157, 0.00018891700000000025, 0.0001889020000000012, 0.00018893099999999982, 0.00018893099999999982, 0.0001888470000000024, 0.00018891700000000025, 0.0001889999999999982, 0.00020872300000000094, 0.00018891600000000078, 0.00018891700000000025, 0.00018891700000000025, 0.00018891600000000078, 0.00018893099999999982, 0.00018891600000000078, 0.00018893099999999982, 0.00018891700000000025, 0.0001889579999999995, 0.00018887499999999807, 0.00018894399999999992, 0.00018890300000000068]</msg>
<status status="PASS" starttime="20201029 09:33:32.683" endtime="20201029 09:33:32.686"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.678" endtime="20201029 09:33:32.687"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.328" endtime="20201029 09:33:32.688"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.306" endtime="20201029 09:33:32.688"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:32.690" endtime="20201029 09:33:32.710"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.689" endtime="20201029 09:33:32.711"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.719" endtime="20201029 09:33:32.740"></status>
</kw>
<msg timestamp="20201029 09:33:32.741" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.717" endtime="20201029 09:33:32.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.746" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.743" endtime="20201029 09:33:32.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.748" endtime="20201029 09:33:32.752"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.715" endtime="20201029 09:33:32.753"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.713" endtime="20201029 09:33:32.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.767" endtime="20201029 09:33:33.063"></status>
</kw>
<msg timestamp="20201029 09:33:33.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017935639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018146056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.764" endtime="20201029 09:33:33.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017935639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018146056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.067" endtime="20201029 09:33:33.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.075" endtime="20201029 09:33:33.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.759" endtime="20201029 09:33:33.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.755" endtime="20201029 09:33:33.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:33.082" level="INFO">${PHILIP_RES} = [{'diff': 0.00021041700000000094}, {'diff': 0.0002104310000000005}, {'diff': 0.00021044500000000008}, {'diff': 0.0002104449999999966}, {'diff': 0.00021045800000000017}, {'diff': 0.00021043000000000103...</msg>
<status status="PASS" starttime="20201029 09:33:33.079" endtime="20201029 09:33:33.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:33.087" level="INFO">${RESULT} = {'diff': [0.00021041700000000094, 0.0002104310000000005, 0.00021044500000000008, 0.0002104449999999966, 0.00021045800000000017, 0.00021043000000000103, 0.0002104440000000006, 0.00021044399999999713, 0...</msg>
<status status="PASS" starttime="20201029 09:33:33.083" endtime="20201029 09:33:33.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.091" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:33.090" endtime="20201029 09:33:33.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.094" level="INFO">VALUE: [0.00021041700000000094, 0.0002104310000000005, 0.00021044500000000008, 0.0002104449999999966, 0.00021045800000000017, 0.00021043000000000103, 0.0002104440000000006, 0.00021044399999999713, 0.0002104440000000006, 0.00021045800000000017, 0.00021044500000000008, 0.00021038899999999833, 0.0002104310000000005, 0.0002104440000000006, 0.00021038899999999833, 0.00021042999999999756, 0.00021049999999999888, 0.00021045800000000017, 0.00021044500000000008, 0.00021045900000000312, 0.00021044500000000008, 0.00021045899999999965, 0.0002104310000000005, 0.00021050000000000235, 0.0002104440000000006, 0.00021049999999999888, 0.00021043000000000103, 0.00021044399999999713, 0.00021044500000000008, 0.00021045899999999965, 0.00021045899999999965, 0.00021045800000000017, 0.00021045800000000017, 0.00021041600000000146, 0.0002104440000000006, 0.0002104440000000006, 0.00021044500000000008, 0.0002104310000000005, 0.00021041700000000094, 0.00021041699999999747, 0.00021043099999999704, 0.00021045800000000017, 0.00021045800000000017, 0.0002104440000000006, 0.00021042999999999756, 0.00021044500000000008, 0.00021045800000000017, 0.0002104310000000005, 0.00021050000000000235, 0.0002104440000000006]</msg>
<status status="PASS" starttime="20201029 09:33:33.092" endtime="20201029 09:33:33.094"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.088" endtime="20201029 09:33:33.095"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.711" endtime="20201029 09:33:33.095"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.688" endtime="20201029 09:33:33.095"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:33.098" endtime="20201029 09:33:33.117"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.096" endtime="20201029 09:33:33.118"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.126" endtime="20201029 09:33:33.147"></status>
</kw>
<msg timestamp="20201029 09:33:33.148" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.124" endtime="20201029 09:33:33.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.150" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.149" endtime="20201029 09:33:33.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.151" endtime="20201029 09:33:33.153"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.122" endtime="20201029 09:33:33.153"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.120" endtime="20201029 09:33:33.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.160" endtime="20201029 09:33:33.447"></status>
</kw>
<msg timestamp="20201029 09:33:33.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017804389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018037417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.159" endtime="20201029 09:33:33.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017804389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018037417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.451" endtime="20201029 09:33:33.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.459" endtime="20201029 09:33:33.461"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.156" endtime="20201029 09:33:33.461"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.154" endtime="20201029 09:33:33.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:33.466" level="INFO">${PHILIP_RES} = [{'diff': 0.0002330279999999997}, {'diff': 0.00023309699999999808}, {'diff': 0.00023304200000000275}, {'diff': 0.00023305599999999885}, {'diff': 0.00023306899999999894}, {'diff': 0.0002330409999999998...</msg>
<status status="PASS" starttime="20201029 09:33:33.462" endtime="20201029 09:33:33.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:33.470" level="INFO">${RESULT} = {'diff': [0.0002330279999999997, 0.00023309699999999808, 0.00023304200000000275, 0.00023305599999999885, 0.00023306899999999894, 0.0002330409999999998, 0.00023306899999999894, 0.00023301400000000014, ...</msg>
<status status="PASS" starttime="20201029 09:33:33.467" endtime="20201029 09:33:33.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.474" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:33.473" endtime="20201029 09:33:33.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.476" level="INFO">VALUE: [0.0002330279999999997, 0.00023309699999999808, 0.00023304200000000275, 0.00023305599999999885, 0.00023306899999999894, 0.0002330409999999998, 0.00023306899999999894, 0.00023301400000000014, 0.0002330279999999997, 0.0002330279999999997, 0.00023305599999999885, 0.0002330279999999997, 0.00023305599999999885, 0.00023305599999999885, 0.00023304199999999928, 0.00023304199999999928, 0.00023306899999999894, 0.0002563610000000001, 0.00023302800000000318, 0.00023306999999999842, 0.00023306999999999842, 0.00023302800000000318, 0.00023304199999999928, 0.00023306899999999894, 0.00023305499999999937, 0.0002330409999999998, 0.00023306899999999894, 0.00023305499999999937, 0.00023304199999999928, 0.00023305599999999885, 0.0002330279999999997, 0.00023304199999999928, 0.00023306999999999842, 0.0002330279999999997, 0.00023301400000000014, 0.00023306899999999894, 0.00023305499999999937, 0.00023297200000000143, 0.00023297199999999796, 0.0002330409999999998, 0.00023305499999999937, 0.00023305599999999885, 0.0002330279999999997, 0.00023305600000000232, 0.00023304199999999928, 0.00023306999999999842, 0.0002330279999999997, 0.00023305599999999885, 0.00023306899999999894, 0.0002330690000000024]</msg>
<status status="PASS" starttime="20201029 09:33:33.475" endtime="20201029 09:33:33.477"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.470" endtime="20201029 09:33:33.478"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.118" endtime="20201029 09:33:33.478"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.096" endtime="20201029 09:33:33.478"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:33.481" endtime="20201029 09:33:33.500"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.479" endtime="20201029 09:33:33.501"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.509" endtime="20201029 09:33:33.531"></status>
</kw>
<msg timestamp="20201029 09:33:33.532" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.507" endtime="20201029 09:33:33.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.534" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.533" endtime="20201029 09:33:33.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.535" endtime="20201029 09:33:33.540"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.505" endtime="20201029 09:33:33.541"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.503" endtime="20201029 09:33:33.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.548" endtime="20201029 09:33:33.834"></status>
</kw>
<msg timestamp="20201029 09:33:33.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017737, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017993722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:33.546" endtime="20201029 09:33:33.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017737, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017993722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:33.838" endtime="20201029 09:33:33.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.846" endtime="20201029 09:33:33.848"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.543" endtime="20201029 09:33:33.848"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.542" endtime="20201029 09:33:33.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:33.853" level="INFO">${PHILIP_RES} = [{'diff': 0.0002567220000000009}, {'diff': 0.00025673600000000046}, {'diff': 0.0002567640000000031}, {'diff': 0.00025675000000000003}, {'diff': 0.00025675000000000003}, {'diff': 0.00025672300000000037...</msg>
<status status="PASS" starttime="20201029 09:33:33.849" endtime="20201029 09:33:33.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:33.857" level="INFO">${RESULT} = {'diff': [0.0002567220000000009, 0.00025673600000000046, 0.0002567640000000031, 0.00025675000000000003, 0.00025675000000000003, 0.00025672300000000037, 0.00025673699999999994, 0.00025675000000000003, ...</msg>
<status status="PASS" starttime="20201029 09:33:33.854" endtime="20201029 09:33:33.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.861" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:33.860" endtime="20201029 09:33:33.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.863" level="INFO">VALUE: [0.0002567220000000009, 0.00025673600000000046, 0.0002567640000000031, 0.00025675000000000003, 0.00025675000000000003, 0.00025672300000000037, 0.00025673699999999994, 0.00025675000000000003, 0.00025673600000000046, 0.00025675000000000003, 0.00025673600000000046, 0.00025673600000000046, 0.0002567220000000009, 0.00025673600000000046, 0.0002566800000000022, 0.00025675000000000003, 0.00025673600000000046, 0.00025673600000000046, 0.0002567220000000009, 0.00025675000000000003, 0.00025672300000000037, 0.00025673699999999994, 0.00025673699999999994, 0.00025673600000000046, 0.00025670899999999733, 0.00025673600000000046, 0.00025675000000000003, 0.0002568189999999984, 0.0002567219999999974, 0.00025673600000000046, 0.00025673600000000046, 0.0002567779999999992, 0.00025675000000000003, 0.0002566939999999983, 0.0002567220000000009, 0.00025673699999999994, 0.00025675000000000003, 0.00025673600000000046, 0.00025673600000000046, 0.00025673600000000046, 0.00025673600000000046, 0.0002567640000000031, 0.0002567220000000009, 0.00025675000000000003, 0.00025675000000000003, 0.000256735999999997, 0.00025670799999999785, 0.0002566800000000022, 0.00025675000000000003, 0.00025673600000000046]</msg>
<status status="PASS" starttime="20201029 09:33:33.862" endtime="20201029 09:33:33.865"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.857" endtime="20201029 09:33:33.865"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.501" endtime="20201029 09:33:33.866"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.479" endtime="20201029 09:33:33.866"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:33.868" endtime="20201029 09:33:33.888"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.867" endtime="20201029 09:33:33.888"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.897" endtime="20201029 09:33:33.921"></status>
</kw>
<msg timestamp="20201029 09:33:33.921" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.895" endtime="20201029 09:33:33.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.924" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.922" endtime="20201029 09:33:33.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.925" endtime="20201029 09:33:33.926"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.893" endtime="20201029 09:33:33.927"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.891" endtime="20201029 09:33:33.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.934" endtime="20201029 09:33:34.220"></status>
</kw>
<msg timestamp="20201029 09:33:34.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018139917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018421458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.932" endtime="20201029 09:33:34.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018139917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018421458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.225" endtime="20201029 09:33:34.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.233" endtime="20201029 09:33:34.234"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.930" endtime="20201029 09:33:34.235"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.928" endtime="20201029 09:33:34.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:34.239" level="INFO">${PHILIP_RES} = [{'diff': 0.0002815410000000032}, {'diff': 0.00028152799999999964}, {'diff': 0.00028151400000000007}, {'diff': 0.00028148600000000093}, {'diff': 0.00028148599999999746}, {'diff': 0.0002814720000000013...</msg>
<status status="PASS" starttime="20201029 09:33:34.236" endtime="20201029 09:33:34.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:34.244" level="INFO">${RESULT} = {'diff': [0.0002815410000000032, 0.00028152799999999964, 0.00028151400000000007, 0.00028148600000000093, 0.00028148599999999746, 0.00028147200000000136, 0.0002815000000000005, 0.0002815000000000005, 0...</msg>
<status status="PASS" starttime="20201029 09:33:34.240" endtime="20201029 09:33:34.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.249" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:34.248" endtime="20201029 09:33:34.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.251" level="INFO">VALUE: [0.0002815410000000032, 0.00028152799999999964, 0.00028151400000000007, 0.00028148600000000093, 0.00028148599999999746, 0.00028147200000000136, 0.0002815000000000005, 0.0002815000000000005, 0.00028152799999999964, 0.00028151400000000007, 0.0002815000000000005, 0.0002815280000000031, 0.00028151400000000007, 0.00028152799999999964, 0.0002815000000000005, 0.0002814450000000017, 0.00028152799999999964, 0.00028152799999999964, 0.00028151400000000007, 0.00028148600000000093, 0.00028147299999999736, 0.0002815419999999992, 0.0002815000000000005, 0.00028151400000000007, 0.00028152799999999964, 0.00028152799999999964, 0.00028152799999999964, 0.00028148599999999746, 0.00028152799999999964, 0.00028149999999999703, 0.00028152799999999964, 0.0002815130000000006, 0.0002815000000000005, 0.0002815000000000005, 0.00028148599999999746, 0.00028158299999999845, 0.00028151400000000007, 0.00028148600000000093, 0.0002814719999999979, 0.0002815419999999992, 0.0002815000000000005, 0.00028151400000000007, 0.0002815139999999966, 0.0002815280000000031, 0.00028149999999999703, 0.00028149999999999703, 0.00028151400000000354, 0.00028151400000000354, 0.0002815139999999966, 0.0002815139999999966]</msg>
<status status="PASS" starttime="20201029 09:33:34.250" endtime="20201029 09:33:34.252"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.245" endtime="20201029 09:33:34.252"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.889" endtime="20201029 09:33:34.253"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.866" endtime="20201029 09:33:34.253"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:34.255" endtime="20201029 09:33:34.275"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.254" endtime="20201029 09:33:34.275"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.284" endtime="20201029 09:33:34.309"></status>
</kw>
<msg timestamp="20201029 09:33:34.309" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.282" endtime="20201029 09:33:34.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.312" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.310" endtime="20201029 09:33:34.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.313" endtime="20201029 09:33:34.314"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.279" endtime="20201029 09:33:34.315"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.277" endtime="20201029 09:33:34.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.322" endtime="20201029 09:33:34.609"></status>
</kw>
<msg timestamp="20201029 09:33:34.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017956875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018264222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.320" endtime="20201029 09:33:34.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017956875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018264222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.613" endtime="20201029 09:33:34.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.621" endtime="20201029 09:33:34.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.318" endtime="20201029 09:33:34.624"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.316" endtime="20201029 09:33:34.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:34.628" level="INFO">${PHILIP_RES} = [{'diff': 0.0003073469999999995}, {'diff': 0.0003073469999999995}, {'diff': 0.0003073749999999986}, {'diff': 0.0003073889999999982}, {'diff': 0.000307443999999997}, {'diff': 0.0003072780000000011}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:34.625" endtime="20201029 09:33:34.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:34.632" level="INFO">${RESULT} = {'diff': [0.0003073469999999995, 0.0003073469999999995, 0.0003073749999999986, 0.0003073889999999982, 0.000307443999999997, 0.0003072780000000011, 0.00030736099999999905, 0.00030730600000000025, 0.000...</msg>
<status status="PASS" starttime="20201029 09:33:34.629" endtime="20201029 09:33:34.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.636" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:34.635" endtime="20201029 09:33:34.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.639" level="INFO">VALUE: [0.0003073469999999995, 0.0003073469999999995, 0.0003073749999999986, 0.0003073889999999982, 0.000307443999999997, 0.0003072780000000011, 0.00030736099999999905, 0.00030730600000000025, 0.0003074170000000008, 0.00030736099999999905, 0.00030734799999999896, 0.00030738900000000166, 0.0003073610000000025, 0.00030736099999999905, 0.0003073749999999986, 0.0003073750000000021, 0.00030736099999999905, 0.0003073749999999986, 0.0003073750000000021, 0.00030736099999999905, 0.0003073749999999986, 0.0003073619999999985, 0.0003073750000000021, 0.0003073749999999986, 0.0003073879999999987, 0.00030738900000000166, 0.0003073750000000021, 0.0003073619999999985, 0.00030736099999999905, 0.0003073610000000025, 0.0003073750000000021, 0.00030736099999999905, 0.00030738900000000166, 0.0003073750000000021, 0.0003073749999999986, 0.00030736099999999905, 0.0003073610000000025, 0.0003073749999999986, 0.0003073889999999982, 0.0003073749999999986, 0.0003073469999999995, 0.00030736200000000546, 0.0003073749999999986, 0.00030736099999999905, 0.0003073749999999986, 0.0003073749999999986, 0.0003073749999999986, 0.00030736099999999905, 0.000307361000000006, 0.00030736099999999905]</msg>
<status status="PASS" starttime="20201029 09:33:34.638" endtime="20201029 09:33:34.640"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.633" endtime="20201029 09:33:34.640"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.276" endtime="20201029 09:33:34.641"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.253" endtime="20201029 09:33:34.641"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:34.643" endtime="20201029 09:33:34.663"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.642" endtime="20201029 09:33:34.663"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.672" endtime="20201029 09:33:34.698"></status>
</kw>
<msg timestamp="20201029 09:33:34.699" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.670" endtime="20201029 09:33:34.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.701" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.700" endtime="20201029 09:33:34.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.702" endtime="20201029 09:33:34.705"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.667" endtime="20201029 09:33:34.706"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.666" endtime="20201029 09:33:34.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.713" endtime="20201029 09:33:35.001"></status>
</kw>
<msg timestamp="20201029 09:33:35.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017954292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018288653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.711" endtime="20201029 09:33:35.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017954292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018288653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.005" endtime="20201029 09:33:35.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.013" endtime="20201029 09:33:35.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.708" endtime="20201029 09:33:35.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.707" endtime="20201029 09:33:35.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:35.019" level="INFO">${PHILIP_RES} = [{'diff': 0.0003343609999999983}, {'diff': 0.0003343059999999995}, {'diff': 0.00033429100000000045}, {'diff': 0.0003343340000000021}, {'diff': 0.0003343189999999996}, {'diff': 0.0003343059999999995}, ...</msg>
<status status="PASS" starttime="20201029 09:33:35.016" endtime="20201029 09:33:35.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:35.023" level="INFO">${RESULT} = {'diff': [0.0003343609999999983, 0.0003343059999999995, 0.00033429100000000045, 0.0003343340000000021, 0.0003343189999999996, 0.0003343059999999995, 0.0003344030000000005, 0.0003342640000000008, 0.000...</msg>
<status status="PASS" starttime="20201029 09:33:35.020" endtime="20201029 09:33:35.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.028" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:35.026" endtime="20201029 09:33:35.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.030" level="INFO">VALUE: [0.0003343609999999983, 0.0003343059999999995, 0.00033429100000000045, 0.0003343340000000021, 0.0003343189999999996, 0.0003343059999999995, 0.0003344030000000005, 0.0003342640000000008, 0.000334305, 0.00033431999999999906, 0.000334305, 0.00033433399999999863, 0.000334305, 0.0003343059999999995, 0.0003343189999999996, 0.0003343059999999995, 0.000334305, 0.00033430600000000296, 0.000334305, 0.00033433299999999916, 0.000334305, 0.00033436100000000177, 0.0003343059999999995, 0.00033431999999999906, 0.00033434699999999873, 0.0003343059999999995, 0.00033424999999999774, 0.0003343059999999995, 0.0003343059999999995, 0.0003342919999999999, 0.0003343059999999995, 0.0003343890000000009, 0.0003343059999999995, 0.0003343189999999996, 0.00033427800000000035, 0.000334305, 0.0003343059999999995, 0.00033429100000000045, 0.000334320000000006, 0.00033433299999999916, 0.0003343059999999995, 0.000334305, 0.0003343059999999995, 0.0003343189999999996, 0.00033427800000000035, 0.000334305, 0.00033422199999999513, 0.000334305, 0.0003343479999999982, 0.000334305]</msg>
<status status="PASS" starttime="20201029 09:33:35.029" endtime="20201029 09:33:35.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.024" endtime="20201029 09:33:35.032"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.664" endtime="20201029 09:33:35.033"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.641" endtime="20201029 09:33:35.033"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:35.035" endtime="20201029 09:33:35.054"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.034" endtime="20201029 09:33:35.055"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.064" endtime="20201029 09:33:35.092"></status>
</kw>
<msg timestamp="20201029 09:33:35.092" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.062" endtime="20201029 09:33:35.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.095" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.093" endtime="20201029 09:33:35.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.096" endtime="20201029 09:33:35.097"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.059" endtime="20201029 09:33:35.098"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.057" endtime="20201029 09:33:35.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.105" endtime="20201029 09:33:35.391"></status>
</kw>
<msg timestamp="20201029 09:33:35.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018324333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018686681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.104" endtime="20201029 09:33:35.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018324333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018686681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.396" endtime="20201029 09:33:35.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.404" endtime="20201029 09:33:35.405"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.101" endtime="20201029 09:33:35.406"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.099" endtime="20201029 09:33:35.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:35.410" level="INFO">${PHILIP_RES} = [{'diff': 0.00036234799999999845}, {'diff': 0.0003820830000000018}, {'diff': 0.00036234700000000244}, {'diff': 0.000362346999999999}, {'diff': 0.0003623329999999994}, {'diff': 0.000362346999999999}, {...</msg>
<status status="PASS" starttime="20201029 09:33:35.407" endtime="20201029 09:33:35.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:35.415" level="INFO">${RESULT} = {'diff': [0.00036234799999999845, 0.0003820830000000018, 0.00036234700000000244, 0.000362346999999999, 0.0003623329999999994, 0.000362346999999999, 0.0003624019999999978, 0.00036236099999999855, 0.000...</msg>
<status status="PASS" starttime="20201029 09:33:35.411" endtime="20201029 09:33:35.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.419" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:35.418" endtime="20201029 09:33:35.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.422" level="INFO">VALUE: [0.00036234799999999845, 0.0003820830000000018, 0.00036234700000000244, 0.000362346999999999, 0.0003623329999999994, 0.000362346999999999, 0.0003624019999999978, 0.00036236099999999855, 0.00036231899999999984, 0.0003623880000000017, 0.0003623329999999994, 0.0003623329999999994, 0.0003623199999999993, 0.0003623200000000028, 0.000362361000000002, 0.0003622780000000006, 0.0003623199999999993, 0.0003623339999999989, 0.0003623329999999994, 0.000362346999999999, 0.0003623329999999994, 0.000362346999999999, 0.0003623329999999994, 0.00036231899999999984, 0.00036231899999999984, 0.00036230500000000027, 0.0003623049999999968, 0.0003623330000000029, 0.0003623329999999994, 0.000362346999999999, 0.000362346999999999, 0.0003624030000000007, 0.0003623329999999994, 0.0003623610000000055, 0.0003623329999999994, 0.0003623199999999993, 0.0003623329999999994, 0.0003623749999999981, 0.0003623749999999981, 0.0003623339999999989, 0.0003623199999999993, 0.0003623199999999993, 0.00036234799999999845, 0.0003623329999999994, 0.0003623199999999993, 0.000362346999999999, 0.0003623190000000068, 0.000362346999999999, 0.0003623470000000059, 0.0003623329999999994]</msg>
<status status="PASS" starttime="20201029 09:33:35.421" endtime="20201029 09:33:35.423"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.416" endtime="20201029 09:33:35.423"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.056" endtime="20201029 09:33:35.424"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.033" endtime="20201029 09:33:35.424"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:35.426" endtime="20201029 09:33:35.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.425" endtime="20201029 09:33:35.446"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.454" endtime="20201029 09:33:35.484"></status>
</kw>
<msg timestamp="20201029 09:33:35.484" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.453" endtime="20201029 09:33:35.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.487" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.485" endtime="20201029 09:33:35.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.488" endtime="20201029 09:33:35.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.450" endtime="20201029 09:33:35.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.448" endtime="20201029 09:33:35.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.497" endtime="20201029 09:33:35.784"></status>
</kw>
<msg timestamp="20201029 09:33:35.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017895347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01828675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:35.496" endtime="20201029 09:33:35.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017895347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01828675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:35.789" endtime="20201029 09:33:35.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.797" endtime="20201029 09:33:35.799"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.493" endtime="20201029 09:33:35.799"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.491" endtime="20201029 09:33:35.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:35.803" level="INFO">${PHILIP_RES} = [{'diff': 0.00039140300000000197}, {'diff': 0.0003914310000000011}, {'diff': 0.0003914580000000008}, {'diff': 0.00039141600000000207}, {'diff': 0.0003914310000000011}, {'diff': 0.0003914449999999972},...</msg>
<status status="PASS" starttime="20201029 09:33:35.800" endtime="20201029 09:33:35.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:35.808" level="INFO">${RESULT} = {'diff': [0.00039140300000000197, 0.0003914310000000011, 0.0003914580000000008, 0.00039141600000000207, 0.0003914310000000011, 0.0003914449999999972, 0.0003913890000000024, 0.0004012080000000001, 0.00...</msg>
<status status="PASS" starttime="20201029 09:33:35.804" endtime="20201029 09:33:35.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.812" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:35.811" endtime="20201029 09:33:35.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.815" level="INFO">VALUE: [0.00039140300000000197, 0.0003914310000000011, 0.0003914580000000008, 0.00039141600000000207, 0.0003914310000000011, 0.0003914449999999972, 0.0003913890000000024, 0.0004012080000000001, 0.0003914310000000011, 0.00039140300000000197, 0.00039140199999999903, 0.00039142999999999817, 0.0003914450000000007, 0.0003914450000000007, 0.0003914450000000007, 0.00039142999999999817, 0.0003914580000000008, 0.0003914310000000011, 0.00039143099999999764, 0.0003914440000000012, 0.0003914440000000012, 0.0003914450000000007, 0.00039145900000000025, 0.00039143000000000164, 0.0003914029999999985, 0.00039144399999999774, 0.00039143000000000164, 0.0003914310000000011, 0.00039142999999999817, 0.0003914450000000007, 0.0003914590000000037, 0.00039148599999999645, 0.00039145800000000425, 0.00039138899999999893, 0.0003914589999999968, 0.0003914310000000046, 0.00039144399999999774, 0.00039142999999999817, 0.00039140300000000544, 0.00039143099999999764, 0.00039142999999999817, 0.00039140300000000544, 0.000391499999999996, 0.0003914590000000037, 0.00039144500000000415, 0.00039138899999999893, 0.00039142999999999817, 0.0003914590000000037, 0.0003914449999999972, 0.00039145800000000425]</msg>
<status status="PASS" starttime="20201029 09:33:35.813" endtime="20201029 09:33:35.815"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.808" endtime="20201029 09:33:35.816"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.447" endtime="20201029 09:33:35.816"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.424" endtime="20201029 09:33:35.816"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:35.819" endtime="20201029 09:33:35.838"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.817" endtime="20201029 09:33:35.839"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.847" endtime="20201029 09:33:35.878"></status>
</kw>
<msg timestamp="20201029 09:33:35.878" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.846" endtime="20201029 09:33:35.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.881" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.879" endtime="20201029 09:33:35.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.882" endtime="20201029 09:33:35.885"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.843" endtime="20201029 09:33:35.885"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.841" endtime="20201029 09:33:35.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.892" endtime="20201029 09:33:36.178"></status>
</kw>
<msg timestamp="20201029 09:33:36.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018004389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018425986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.890" endtime="20201029 09:33:36.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018004389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018425986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.182" endtime="20201029 09:33:36.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.190" endtime="20201029 09:33:36.192"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.888" endtime="20201029 09:33:36.192"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.886" endtime="20201029 09:33:36.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:36.197" level="INFO">${PHILIP_RES} = [{'diff': 0.00042159699999999925}, {'diff': 0.00042163899999999796}, {'diff': 0.00042163899999999796}, {'diff': 0.0004216249999999984}, {'diff': 0.00042163900000000143}, {'diff': 0.0004216660000000011...</msg>
<status status="PASS" starttime="20201029 09:33:36.193" endtime="20201029 09:33:36.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:36.201" level="INFO">${RESULT} = {'diff': [0.00042159699999999925, 0.00042163899999999796, 0.00042163899999999796, 0.0004216249999999984, 0.00042163900000000143, 0.0004216660000000011, 0.00042163900000000143, 0.00045194399999999926, ...</msg>
<status status="PASS" starttime="20201029 09:33:36.198" endtime="20201029 09:33:36.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.205" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:36.204" endtime="20201029 09:33:36.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.207" level="INFO">VALUE: [0.00042159699999999925, 0.00042163899999999796, 0.00042163899999999796, 0.0004216249999999984, 0.00042163900000000143, 0.0004216660000000011, 0.00042163900000000143, 0.00045194399999999926, 0.0004216109999999988, 0.0004216249999999984, 0.00042163900000000143, 0.0004216660000000011, 0.00042162500000000186, 0.00042163899999999796, 0.0004216109999999988, 0.0004216109999999988, 0.0004216109999999988, 0.00042162500000000186, 0.0004216110000000023, 0.00042169400000000024, 0.000421653000000001, 0.0004216109999999988, 0.0004216249999999984, 0.0004216109999999988, 0.0004216950000000032, 0.0004216110000000023, 0.00042166700000000057, 0.000421653000000001, 0.00042163899999999796, 0.00042162500000000186, 0.00042163900000000143, 0.0004216110000000023, 0.0004215980000000022, 0.0004215970000000027, 0.000421653000000001, 0.00042163900000000143, 0.00042163900000000143, 0.00042162500000000186, 0.00042162500000000186, 0.0004215699999999961, 0.00042161099999999535, 0.000421541999999997, 0.0004216249999999949, 0.00042161099999999535, 0.000421653000000001, 0.00042156899999999664, 0.00042162500000000186, 0.0004216110000000023, 0.0004215420000000039, 0.00042163900000000143]</msg>
<status status="PASS" starttime="20201029 09:33:36.206" endtime="20201029 09:33:36.209"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.202" endtime="20201029 09:33:36.210"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.839" endtime="20201029 09:33:36.210"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.817" endtime="20201029 09:33:36.210"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:36.213" endtime="20201029 09:33:36.232"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.211" endtime="20201029 09:33:36.233"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.241" endtime="20201029 09:33:36.274"></status>
</kw>
<msg timestamp="20201029 09:33:36.274" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.239" endtime="20201029 09:33:36.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.276" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.275" endtime="20201029 09:33:36.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.278" endtime="20201029 09:33:36.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.237" endtime="20201029 09:33:36.280"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.235" endtime="20201029 09:33:36.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.287" endtime="20201029 09:33:36.572"></status>
</kw>
<msg timestamp="20201029 09:33:36.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017767194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018220056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.285" endtime="20201029 09:33:36.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017767194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018220056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.576" endtime="20201029 09:33:36.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.585" endtime="20201029 09:33:36.586"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.283" endtime="20201029 09:33:36.587"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.281" endtime="20201029 09:33:36.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:36.591" level="INFO">${PHILIP_RES} = [{'diff': 0.0004528619999999983}, {'diff': 0.00045290299999999756}, {'diff': 0.0004529300000000007}, {'diff': 0.00045288900000000146}, {'diff': 0.0004529170000000006}, {'diff': 0.00045291599999999765}...</msg>
<status status="PASS" starttime="20201029 09:33:36.588" endtime="20201029 09:33:36.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:36.596" level="INFO">${RESULT} = {'diff': [0.0004528619999999983, 0.00045290299999999756, 0.0004529300000000007, 0.00045288900000000146, 0.0004529170000000006, 0.00045291599999999765, 0.0004814859999999997, 0.00045290299999999756, 0....</msg>
<status status="PASS" starttime="20201029 09:33:36.592" endtime="20201029 09:33:36.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.600" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:36.599" endtime="20201029 09:33:36.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.603" level="INFO">VALUE: [0.0004528619999999983, 0.00045290299999999756, 0.0004529300000000007, 0.00045288900000000146, 0.0004529170000000006, 0.00045291599999999765, 0.0004814859999999997, 0.00045290299999999756, 0.00045288900000000146, 0.000452888000000002, 0.000452903000000001, 0.00045290299999999756, 0.00045295799999999983, 0.00045298599999999897, 0.00045290200000000155, 0.000452903000000001, 0.00045291699999999713, 0.0004529160000000011, 0.00045288900000000146, 0.00045294499999999974, 0.0004529160000000011, 0.00045290299999999756, 0.00045290200000000155, 0.000452903000000001, 0.00045294499999999974, 0.0004529019999999981, 0.00045288900000000146, 0.00045286099999999885, 0.000452888999999998, 0.00045291699999999713, 0.0004529019999999981, 0.0004529030000000045, 0.00045290299999999756, 0.0004528879999999985, 0.0004529030000000045, 0.0004528749999999984, 0.0004529030000000045, 0.00045290299999999756, 0.00045291700000000407, 0.0004528890000000049, 0.00045290299999999756, 0.0004529160000000046, 0.00045290299999999756, 0.00045290299999999756, 0.0004528890000000049, 0.00045290299999999756, 0.0004529030000000045, 0.00045290299999999756, 0.0004529309999999967, 0.0004529160000000046]</msg>
<status status="PASS" starttime="20201029 09:33:36.602" endtime="20201029 09:33:36.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.597" endtime="20201029 09:33:36.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.233" endtime="20201029 09:33:36.605"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.211" endtime="20201029 09:33:36.605"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:36.607" endtime="20201029 09:33:36.626"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.606" endtime="20201029 09:33:36.627"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.635" endtime="20201029 09:33:36.670"></status>
</kw>
<msg timestamp="20201029 09:33:36.671" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.634" endtime="20201029 09:33:36.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.673" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.672" endtime="20201029 09:33:36.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.674" endtime="20201029 09:33:36.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.631" endtime="20201029 09:33:36.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.629" endtime="20201029 09:33:36.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.683" endtime="20201029 09:33:36.970"></status>
</kw>
<msg timestamp="20201029 09:33:36.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017824861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018310097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.682" endtime="20201029 09:33:36.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017824861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018310097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.975" endtime="20201029 09:33:36.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.983" endtime="20201029 09:33:36.984"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.679" endtime="20201029 09:33:36.985"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.678" endtime="20201029 09:33:36.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:36.989" level="INFO">${PHILIP_RES} = [{'diff': 0.000485236}, {'diff': 0.00048522200000000043}, {'diff': 0.0004852909999999988}, {'diff': 0.0005155690000000004}, {'diff': 0.00048524999999999957}, {'diff': 0.00048526399999999914}, {'diff':...</msg>
<status status="PASS" starttime="20201029 09:33:36.986" endtime="20201029 09:33:36.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:36.993" level="INFO">${RESULT} = {'diff': [0.000485236, 0.00048522200000000043, 0.0004852909999999988, 0.0005155690000000004, 0.00048524999999999957, 0.00048526399999999914, 0.00048524999999999957, 0.00048524999999999957, 0.000485263...</msg>
<status status="PASS" starttime="20201029 09:33:36.990" endtime="20201029 09:33:36.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.998" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:36.997" endtime="20201029 09:33:36.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.000" level="INFO">VALUE: [0.000485236, 0.00048522200000000043, 0.0004852909999999988, 0.0005155690000000004, 0.00048524999999999957, 0.00048526399999999914, 0.00048524999999999957, 0.00048524999999999957, 0.00048526399999999914, 0.0004852779999999987, 0.00048526399999999914, 0.00048530500000000185, 0.00048526399999999914, 0.00048525000000000304, 0.00048526399999999914, 0.0004852640000000026, 0.00048524999999999957, 0.00048526399999999914, 0.00048526399999999914, 0.0004852779999999987, 0.00048524999999999957, 0.00048526299999999967, 0.00048526399999999914, 0.0004852779999999987, 0.0004852779999999987, 0.00048530599999999785, 0.00048526399999999914, 0.00048520800000000086, 0.00048526399999999914, 0.000485236, 0.0004853060000000048, 0.0004852779999999987, 0.0004852779999999987, 0.00048526399999999914, 0.0004852500000000065, 0.0004852640000000061, 0.0004851940000000013, 0.00048524999999999957, 0.00048526299999999967, 0.00048526399999999914, 0.00048524999999999957, 0.0004853329999999975, 0.0004853199999999974, 0.0004852919999999983, 0.00048526299999999967, 0.00048524999999999957, 0.0004852779999999987, 0.00048526399999999914, 0.00048526399999999914, 0.0004853199999999974]</msg>
<status status="PASS" starttime="20201029 09:33:36.999" endtime="20201029 09:33:37.001"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.994" endtime="20201029 09:33:37.002"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.628" endtime="20201029 09:33:37.002"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.605" endtime="20201029 09:33:37.002"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:37.005" endtime="20201029 09:33:37.024"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.003" endtime="20201029 09:33:37.025"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.033" endtime="20201029 09:33:37.069"></status>
</kw>
<msg timestamp="20201029 09:33:37.069" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.031" endtime="20201029 09:33:37.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.072" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.070" endtime="20201029 09:33:37.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.073" endtime="20201029 09:33:37.078"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.029" endtime="20201029 09:33:37.078"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.027" endtime="20201029 09:33:37.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.085" endtime="20201029 09:33:37.372"></status>
</kw>
<msg timestamp="20201029 09:33:37.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017830194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018348875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.084" endtime="20201029 09:33:37.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017830194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018348875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.376" endtime="20201029 09:33:37.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.384" endtime="20201029 09:33:37.385"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.081" endtime="20201029 09:33:37.386"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.079" endtime="20201029 09:33:37.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:37.390" level="INFO">${PHILIP_RES} = [{'diff': 0.000518681}, {'diff': 0.0005186940000000001}, {'diff': 0.0005187079999999997}, {'diff': 0.0005186949999999996}, {'diff': 0.0005186940000000001}, {'diff': 0.0005186949999999996}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 09:33:37.387" endtime="20201029 09:33:37.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:37.394" level="INFO">${RESULT} = {'diff': [0.000518681, 0.0005186940000000001, 0.0005187079999999997, 0.0005186949999999996, 0.0005186940000000001, 0.0005186949999999996, 0.0005186949999999996, 0.0005187079999999997, 0.00051865199999...</msg>
<status status="PASS" starttime="20201029 09:33:37.391" endtime="20201029 09:33:37.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.399" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:37.398" endtime="20201029 09:33:37.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.401" level="INFO">VALUE: [0.000518681, 0.0005186940000000001, 0.0005187079999999997, 0.0005186949999999996, 0.0005186940000000001, 0.0005186949999999996, 0.0005186949999999996, 0.0005187079999999997, 0.0005186519999999979, 0.0005187229999999987, 0.0005187079999999997, 0.0005187079999999997, 0.0005187089999999991, 0.0005187079999999997, 0.0005187079999999997, 0.000518695000000003, 0.000518681, 0.0005186530000000009, 0.0005187220000000027, 0.000518666999999997, 0.0005186940000000001, 0.0005187079999999997, 0.0005187090000000026, 0.0005186940000000036, 0.0005186800000000005, 0.0005187089999999991, 0.0005186940000000001, 0.0005187219999999992, 0.0005187089999999991, 0.0005186940000000001, 0.0005187079999999997, 0.0005187219999999992, 0.0005187079999999997, 0.0005187079999999997, 0.0005186940000000001, 0.0005187229999999987, 0.0005186940000000001, 0.0005187220000000062, 0.0005186940000000001, 0.0005187219999999992, 0.0005186940000000001, 0.0005186949999999996, 0.0005186949999999996, 0.0005187219999999992, 0.0005187359999999988, 0.0005187220000000062, 0.0005186940000000001, 0.0005186949999999996, 0.0005187089999999991, 0.0005186940000000001]</msg>
<status status="PASS" starttime="20201029 09:33:37.400" endtime="20201029 09:33:37.403"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.395" endtime="20201029 09:33:37.403"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.025" endtime="20201029 09:33:37.404"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.003" endtime="20201029 09:33:37.404"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:37.406" endtime="20201029 09:33:37.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.405" endtime="20201029 09:33:37.426"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.434" endtime="20201029 09:33:37.472"></status>
</kw>
<msg timestamp="20201029 09:33:37.472" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.433" endtime="20201029 09:33:37.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.475" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.473" endtime="20201029 09:33:37.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.476" endtime="20201029 09:33:37.477"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.430" endtime="20201029 09:33:37.478"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.428" endtime="20201029 09:33:37.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.485" endtime="20201029 09:33:37.772"></status>
</kw>
<msg timestamp="20201029 09:33:37.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017719806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018273014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.483" endtime="20201029 09:33:37.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017719806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018273014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.776" endtime="20201029 09:33:37.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.785" endtime="20201029 09:33:37.787"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.481" endtime="20201029 09:33:37.787"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.479" endtime="20201029 09:33:37.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:37.796" level="INFO">${PHILIP_RES} = [{'diff': 0.0005532079999999995}, {'diff': 0.0005532090000000024}, {'diff': 0.0005532359999999986}, {'diff': 0.000553221999999999}, {'diff': 0.0005532360000000021}, {'diff': 0.000553221999999999}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:37.789" endtime="20201029 09:33:37.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:37.806" level="INFO">${RESULT} = {'diff': [0.0005532079999999995, 0.0005532090000000024, 0.0005532359999999986, 0.000553221999999999, 0.0005532360000000021, 0.000553221999999999, 0.0005532359999999986, 0.000553221999999999, 0.0005532...</msg>
<status status="PASS" starttime="20201029 09:33:37.798" endtime="20201029 09:33:37.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.815" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:37.813" endtime="20201029 09:33:37.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.821" level="INFO">VALUE: [0.0005532079999999995, 0.0005532090000000024, 0.0005532359999999986, 0.000553221999999999, 0.0005532360000000021, 0.000553221999999999, 0.0005532359999999986, 0.000553221999999999, 0.0005532780000000008, 0.000553221999999999, 0.0005532370000000016, 0.0005532360000000021, 0.000553221999999999, 0.000553221999999999, 0.000553223000000002, 0.000553221999999999, 0.0005531939999999999, 0.0005532500000000017, 0.0005532360000000021, 0.000553208999999999, 0.000553221999999999, 0.0005532360000000021, 0.0005532359999999986, 0.0005532499999999982, 0.000553221999999999, 0.000553221999999999, 0.0005532360000000056, 0.0005532359999999986, 0.0005532639999999978, 0.0005532359999999986, 0.0005532359999999986, 0.0005532359999999986, 0.0005532359999999986, 0.0005532500000000051, 0.0005531660000000008, 0.000553221999999999, 0.0005844299999999969, 0.0005532359999999986, 0.0005531670000000002, 0.0005532499999999982, 0.000553221999999999, 0.0005532079999999995, 0.0005532360000000056, 0.0005531809999999998, 0.0005532359999999986, 0.0005532359999999986, 0.0005532359999999986, 0.0005532359999999986, 0.0005532360000000056, 0.0005532499999999982]</msg>
<status status="PASS" starttime="20201029 09:33:37.818" endtime="20201029 09:33:37.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.808" endtime="20201029 09:33:37.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.427" endtime="20201029 09:33:37.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.404" endtime="20201029 09:33:37.825"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:37.830" endtime="20201029 09:33:37.851"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.827" endtime="20201029 09:33:37.853"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.870" endtime="20201029 09:33:37.911"></status>
</kw>
<msg timestamp="20201029 09:33:37.912" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.867" endtime="20201029 09:33:37.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.914" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.913" endtime="20201029 09:33:37.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.915" endtime="20201029 09:33:37.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.861" endtime="20201029 09:33:37.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.857" endtime="20201029 09:33:37.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.924" endtime="20201029 09:33:38.211"></status>
</kw>
<msg timestamp="20201029 09:33:38.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030528472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031117306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.923" endtime="20201029 09:33:38.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030528472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031117306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.215" endtime="20201029 09:33:38.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.223" endtime="20201029 09:33:38.225"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.920" endtime="20201029 09:33:38.225"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.918" endtime="20201029 09:33:38.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:38.230" level="INFO">${PHILIP_RES} = [{'diff': 0.0005888339999999999}, {'diff': 0.0005888329999999969}, {'diff': 0.0005888339999999964}, {'diff': 0.0005888329999999969}, {'diff': 0.0005888189999999974}, {'diff': 0.0005888199999999968}, {...</msg>
<status status="PASS" starttime="20201029 09:33:38.227" endtime="20201029 09:33:38.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:38.234" level="INFO">${RESULT} = {'diff': [0.0005888339999999999, 0.0005888329999999969, 0.0005888339999999964, 0.0005888329999999969, 0.0005888189999999974, 0.0005888199999999968, 0.000588861000000003, 0.0005888200000000038, 0.00058...</msg>
<status status="PASS" starttime="20201029 09:33:38.231" endtime="20201029 09:33:38.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.238" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:38.237" endtime="20201029 09:33:38.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.240" level="INFO">VALUE: [0.0005888339999999999, 0.0005888329999999969, 0.0005888339999999964, 0.0005888329999999969, 0.0005888189999999974, 0.0005888199999999968, 0.000588861000000003, 0.0005888200000000038, 0.000588861000000003, 0.0005888470000000035, 0.0005888330000000039, 0.0005888330000000039, 0.0005888330000000039, 0.0005887780000000051, 0.0005888620000000025, 0.0005888330000000039, 0.0005888330000000039, 0.0005888470000000035, 0.0006025270000000055, 0.0005888190000000043, 0.0005888480000000029, 0.0005888470000000035, 0.0005888340000000034, 0.0005888190000000043, 0.000588861000000003, 0.0005888200000000038, 0.0005888190000000043, 0.000588861000000003, 0.0005888049999999978, 0.0005888480000000029, 0.0005888330000000039, 0.0005888190000000043, 0.0005888200000000038, 0.0005887919999999977, 0.0005888189999999974, 0.0005888609999999961, 0.0005888199999999968, 0.0005888329999999969, 0.0005888469999999965, 0.0005888339999999964, 0.0005888189999999974, 0.000588847999999996, 0.0005888469999999965, 0.0005888329999999969, 0.0005888329999999969, 0.0005888609999999961, 0.0005888329999999969, 0.0005888609999999961, 0.000588847999999996, 0.0005888470000000035]</msg>
<status status="PASS" starttime="20201029 09:33:38.239" endtime="20201029 09:33:38.241"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.235" endtime="20201029 09:33:38.242"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.854" endtime="20201029 09:33:38.242"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.825" endtime="20201029 09:33:38.242"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:38.245" endtime="20201029 09:33:38.264"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.243" endtime="20201029 09:33:38.265"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.273" endtime="20201029 09:33:38.315"></status>
</kw>
<msg timestamp="20201029 09:33:38.315" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.271" endtime="20201029 09:33:38.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.318" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.316" endtime="20201029 09:33:38.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.319" endtime="20201029 09:33:38.321"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.269" endtime="20201029 09:33:38.322"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.267" endtime="20201029 09:33:38.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.329" endtime="20201029 09:33:38.626"></status>
</kw>
<msg timestamp="20201029 09:33:38.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017971431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018596931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.328" endtime="20201029 09:33:38.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017971431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018596931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.636" endtime="20201029 09:33:38.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.656" endtime="20201029 09:33:38.660"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.325" endtime="20201029 09:33:38.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.323" endtime="20201029 09:33:38.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:38.673" level="INFO">${PHILIP_RES} = [{'diff': 0.0006255000000000011}, {'diff': 0.0006254580000000023}, {'diff': 0.0006255969999999986}, {'diff': 0.0006255419999999998}, {'diff': 0.000648847000000001}, {'diff': 0.0006255269999999973}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:38.665" endtime="20201029 09:33:38.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:38.682" level="INFO">${RESULT} = {'diff': [0.0006255000000000011, 0.0006254580000000023, 0.0006255969999999986, 0.0006255419999999998, 0.000648847000000001, 0.0006255269999999973, 0.000625485999999998, 0.0006255280000000002, 0.000625...</msg>
<status status="PASS" starttime="20201029 09:33:38.676" endtime="20201029 09:33:38.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.691" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:38.689" endtime="20201029 09:33:38.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.696" level="INFO">VALUE: [0.0006255000000000011, 0.0006254580000000023, 0.0006255969999999986, 0.0006255419999999998, 0.000648847000000001, 0.0006255269999999973, 0.000625485999999998, 0.0006255280000000002, 0.0006255130000000012, 0.0006255269999999973, 0.0006255840000000019, 0.0006255280000000002, 0.0006255270000000007, 0.0006255139999999972, 0.0006255140000000006, 0.0006255280000000002, 0.0006255140000000006, 0.0006255279999999967, 0.0006255689999999994, 0.0006255269999999973, 0.0006255280000000002, 0.0006255419999999998, 0.0006255410000000003, 0.0006254860000000015, 0.0006255419999999998, 0.0006255280000000002, 0.0006255000000000011, 0.0006255279999999933, 0.0006255140000000006, 0.0006255270000000007, 0.0006255280000000002, 0.0006254860000000015, 0.0006255139999999937, 0.0006255280000000002, 0.0006255280000000002, 0.0006255280000000002, 0.0006254860000000015, 0.0006255419999999998, 0.0006255559999999993, 0.0006255280000000002, 0.0006255139999999937, 0.0006255280000000002, 0.0006255419999999998, 0.0006254860000000015, 0.0006255140000000006, 0.0006255419999999998, 0.0006255270000000007, 0.0006255280000000002, 0.0006254999999999941, 0.0006255000000000011]</msg>
<status status="PASS" starttime="20201029 09:33:38.693" endtime="20201029 09:33:38.698"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.684" endtime="20201029 09:33:38.698"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.265" endtime="20201029 09:33:38.699"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.243" endtime="20201029 09:33:38.699"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:38.701" endtime="20201029 09:33:38.720"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.700" endtime="20201029 09:33:38.721"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.729" endtime="20201029 09:33:38.773"></status>
</kw>
<msg timestamp="20201029 09:33:38.774" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.728" endtime="20201029 09:33:38.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.777" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.775" endtime="20201029 09:33:38.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.787" endtime="20201029 09:33:38.794"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.725" endtime="20201029 09:33:38.798"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.723" endtime="20201029 09:33:38.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.823" endtime="20201029 09:33:39.111"></status>
</kw>
<msg timestamp="20201029 09:33:39.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017692514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018355778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.820" endtime="20201029 09:33:39.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017692514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018355778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.115" endtime="20201029 09:33:39.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.123" endtime="20201029 09:33:39.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.811" endtime="20201029 09:33:39.125"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.803" endtime="20201029 09:33:39.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:39.129" level="INFO">${PHILIP_RES} = [{'diff': 0.0006632640000000002}, {'diff': 0.0006632919999999994}, {'diff': 0.0006633049999999995}, {'diff': 0.0006633470000000016}, {'diff': 0.0006632909999999999}, {'diff': 0.0006633059999999989}, {...</msg>
<status status="PASS" starttime="20201029 09:33:39.126" endtime="20201029 09:33:39.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:39.134" level="INFO">${RESULT} = {'diff': [0.0006632640000000002, 0.0006632919999999994, 0.0006633049999999995, 0.0006633470000000016, 0.0006632909999999999, 0.0006633059999999989, 0.0006632919999999994, 0.0006632919999999994, 0.0006...</msg>
<status status="PASS" starttime="20201029 09:33:39.130" endtime="20201029 09:33:39.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.138" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:39.137" endtime="20201029 09:33:39.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.141" level="INFO">VALUE: [0.0006632640000000002, 0.0006632919999999994, 0.0006633049999999995, 0.0006633470000000016, 0.0006632909999999999, 0.0006633059999999989, 0.0006632919999999994, 0.0006632919999999994, 0.0006632919999999994, 0.0006633059999999989, 0.0006633049999999995, 0.0006633049999999995, 0.0006632909999999999, 0.0006632919999999994, 0.0006633059999999989, 0.0006633609999999977, 0.000663318999999999, 0.0006632919999999994, 0.0006633049999999995, 0.0006632919999999959, 0.0006632499999999972, 0.0006632920000000028, 0.0006633750000000008, 0.0006632910000000034, 0.0006633610000000012, 0.0006633060000000024, 0.0006633059999999955, 0.0006633059999999955, 0.000663304999999996, 0.0006632909999999964, 0.0006633330000000021, 0.0006633060000000024, 0.000663320000000002, 0.0006632920000000028, 0.0006633050000000029, 0.0006632780000000033, 0.0006633190000000025, 0.0006632919999999959, 0.0006633059999999955, 0.0006633059999999955, 0.000663304999999996, 0.000663319999999995, 0.0006632780000000033, 0.0006633330000000021, 0.0006632920000000028, 0.0006633060000000024, 0.0006633050000000029, 0.0006632500000000041, 0.0006632919999999959, 0.000663319999999995]</msg>
<status status="PASS" starttime="20201029 09:33:39.139" endtime="20201029 09:33:39.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.135" endtime="20201029 09:33:39.142"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.722" endtime="20201029 09:33:39.142"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.699" endtime="20201029 09:33:39.143"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:39.145" endtime="20201029 09:33:39.164"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.144" endtime="20201029 09:33:39.165"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.173" endtime="20201029 09:33:39.218"></status>
</kw>
<msg timestamp="20201029 09:33:39.219" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.171" endtime="20201029 09:33:39.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.221" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.220" endtime="20201029 09:33:39.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.222" endtime="20201029 09:33:39.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.169" endtime="20201029 09:33:39.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.167" endtime="20201029 09:33:39.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.231" endtime="20201029 09:33:39.530"></status>
</kw>
<msg timestamp="20201029 09:33:39.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017566167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018268278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.230" endtime="20201029 09:33:39.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017566167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018268278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.534" endtime="20201029 09:33:39.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.543" endtime="20201029 09:33:39.544"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.227" endtime="20201029 09:33:39.545"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.225" endtime="20201029 09:33:39.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:39.549" level="INFO">${PHILIP_RES} = [{'diff': 0.0007021109999999983}, {'diff': 0.0007021670000000001}, {'diff': 0.0007021530000000005}, {'diff': 0.0007021390000000009}, {'diff': 0.0007021389999999975}, {'diff': 0.0007021670000000001}, {...</msg>
<status status="PASS" starttime="20201029 09:33:39.546" endtime="20201029 09:33:39.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:39.553" level="INFO">${RESULT} = {'diff': [0.0007021109999999983, 0.0007021670000000001, 0.0007021530000000005, 0.0007021390000000009, 0.0007021389999999975, 0.0007021670000000001, 0.0007021390000000009, 0.0007021660000000006, 0.0007...</msg>
<status status="PASS" starttime="20201029 09:33:39.550" endtime="20201029 09:33:39.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.557" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:39.556" endtime="20201029 09:33:39.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.560" level="INFO">VALUE: [0.0007021109999999983, 0.0007021670000000001, 0.0007021530000000005, 0.0007021390000000009, 0.0007021389999999975, 0.0007021670000000001, 0.0007021390000000009, 0.0007021660000000006, 0.000702152000000001, 0.0007021660000000006, 0.0007021519999999976, 0.0007021530000000005, 0.000702152000000001, 0.0007021659999999971, 0.0007021670000000001, 0.0007021530000000005, 0.0007021390000000009, 0.0007021670000000035, 0.0007021669999999966, 0.0007021390000000044, 0.0007021669999999966, 0.0007021249999999979, 0.0007021110000000053, 0.000702152999999997, 0.0007021810000000031, 0.000702153000000004, 0.000702152999999997, 0.0007237080000000035, 0.0007022220000000023, 0.0007021939999999963, 0.000702153000000004, 0.0007021669999999966, 0.0007021950000000027, 0.0007021390000000044, 0.0007021949999999957, 0.0007021109999999983, 0.0007021389999999975, 0.000702152999999997, 0.000702153000000004, 0.0007021669999999966, 0.0007021670000000035, 0.0007021810000000031, 0.000702152999999997, 0.000702153000000004, 0.0007021669999999966, 0.0007021669999999966, 0.000702153000000004, 0.0007021669999999966, 0.0007021670000000035, 0.0007021669999999966]</msg>
<status status="PASS" starttime="20201029 09:33:39.558" endtime="20201029 09:33:39.560"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.554" endtime="20201029 09:33:39.561"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.165" endtime="20201029 09:33:39.561"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.143" endtime="20201029 09:33:39.561"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:39.564" endtime="20201029 09:33:39.583"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.562" endtime="20201029 09:33:39.584"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.592" endtime="20201029 09:33:39.639"></status>
</kw>
<msg timestamp="20201029 09:33:39.640" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.590" endtime="20201029 09:33:39.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.642" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.641" endtime="20201029 09:33:39.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.643" endtime="20201029 09:33:39.646"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.588" endtime="20201029 09:33:39.646"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.586" endtime="20201029 09:33:39.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.653" endtime="20201029 09:33:39.939"></status>
</kw>
<msg timestamp="20201029 09:33:39.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017650514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018392583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.652" endtime="20201029 09:33:39.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017650514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018392583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.943" endtime="20201029 09:33:39.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.951" endtime="20201029 09:33:39.953"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.649" endtime="20201029 09:33:39.954"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.647" endtime="20201029 09:33:39.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:39.958" level="INFO">${PHILIP_RES} = [{'diff': 0.0007420690000000014}, {'diff': 0.0007421389999999993}, {'diff': 0.0007420970000000006}, {'diff': 0.0007421110000000002}, {'diff': 0.0007420980000000001}, {'diff': 0.0007420970000000006}, {...</msg>
<status status="PASS" starttime="20201029 09:33:39.955" endtime="20201029 09:33:39.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:39.962" level="INFO">${RESULT} = {'diff': [0.0007420690000000014, 0.0007421389999999993, 0.0007420970000000006, 0.0007421110000000002, 0.0007420980000000001, 0.0007420970000000006, 0.0007420970000000006, 0.0007421249999999997, 0.0007...</msg>
<status status="PASS" starttime="20201029 09:33:39.959" endtime="20201029 09:33:39.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.966" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:39.965" endtime="20201029 09:33:39.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.969" level="INFO">VALUE: [0.0007420690000000014, 0.0007421389999999993, 0.0007420970000000006, 0.0007421110000000002, 0.0007420980000000001, 0.0007420970000000006, 0.0007420970000000006, 0.0007421249999999997, 0.0007420970000000006, 0.0007421249999999997, 0.0007421529999999989, 0.000742083000000001, 0.0007420409999999988, 0.0007421110000000002, 0.0007421249999999997, 0.0007421110000000002, 0.0007421109999999967, 0.0007421109999999967, 0.0007420969999999971, 0.0007421109999999967, 0.0007421250000000032, 0.000742195000000001, 0.0007420830000000045, 0.0007420829999999976, 0.0007420559999999979, 0.0007420980000000035, 0.0007420969999999971, 0.0007420969999999971, 0.0007420279999999987, 0.0007421110000000036, 0.0007421110000000036, 0.0007421109999999967, 0.0007420409999999988, 0.0007420969999999971, 0.0007725000000000024, 0.0007420699999999975, 0.0007421120000000031, 0.0007421249999999963, 0.0007421250000000032, 0.0007421109999999967, 0.0007421110000000036, 0.0007421109999999967, 0.0007420830000000045, 0.0007421109999999967, 0.0007421110000000036, 0.0007421529999999954, 0.0007420980000000035, 0.0007421119999999962, 0.0007420980000000035, 0.0007420969999999971]</msg>
<status status="PASS" starttime="20201029 09:33:39.967" endtime="20201029 09:33:39.970"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.963" endtime="20201029 09:33:39.971"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.584" endtime="20201029 09:33:39.971"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.562" endtime="20201029 09:33:39.971"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:39.974" endtime="20201029 09:33:39.993"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.972" endtime="20201029 09:33:39.994"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.002" endtime="20201029 09:33:40.052"></status>
</kw>
<msg timestamp="20201029 09:33:40.053" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.000" endtime="20201029 09:33:40.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.055" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.054" endtime="20201029 09:33:40.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.056" endtime="20201029 09:33:40.058"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.998" endtime="20201029 09:33:40.058"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.996" endtime="20201029 09:33:40.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.065" endtime="20201029 09:33:40.370"></status>
</kw>
<msg timestamp="20201029 09:33:40.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018083667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018866778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.064" endtime="20201029 09:33:40.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018083667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018866778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.374" endtime="20201029 09:33:40.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.382" endtime="20201029 09:33:40.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.061" endtime="20201029 09:33:40.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.059" endtime="20201029 09:33:40.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:40.389" level="INFO">${PHILIP_RES} = [{'diff': 0.0007831109999999995}, {'diff': 0.0007831109999999995}, {'diff': 0.0007831389999999987}, {'diff': 0.0007831519999999988}, {'diff': 0.0007831669999999978}, {'diff': 0.0007831389999999987}, {...</msg>
<status status="PASS" starttime="20201029 09:33:40.386" endtime="20201029 09:33:40.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:40.393" level="INFO">${RESULT} = {'diff': [0.0007831109999999995, 0.0007831109999999995, 0.0007831389999999987, 0.0007831519999999988, 0.0007831669999999978, 0.0007831389999999987, 0.000783111000000003, 0.0007832080000000005, 0.00078...</msg>
<status status="PASS" starttime="20201029 09:33:40.390" endtime="20201029 09:33:40.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.398" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:40.397" endtime="20201029 09:33:40.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.400" level="INFO">VALUE: [0.0007831109999999995, 0.0007831109999999995, 0.0007831389999999987, 0.0007831519999999988, 0.0007831669999999978, 0.0007831389999999987, 0.000783111000000003, 0.0007832080000000005, 0.0007831109999999995, 0.0007831669999999978, 0.0007831249999999991, 0.0007831389999999987, 0.0008178330000000004, 0.0007831389999999987, 0.0007831389999999987, 0.0007831109999999995, 0.0007831250000000026, 0.0007831249999999956, 0.0007831250000000026, 0.0007831389999999952, 0.0007831250000000026, 0.0007831530000000017, 0.0007831380000000027, 0.0007830690000000043, 0.0007831249999999956, 0.0007831390000000021, 0.0007831389999999952, 0.000783111000000003, 0.0007831529999999948, 0.0007831530000000017, 0.0007831390000000021, 0.0007831520000000022, 0.0007831250000000026, 0.0007831799999999944, 0.0007831390000000021, 0.0007831389999999952, 0.0007831390000000021, 0.0007831250000000026, 0.0007831530000000017, 0.0007831390000000021, 0.0007831520000000022, 0.0007831390000000021, 0.0007831249999999956, 0.0007831530000000017, 0.0007831389999999952, 0.0007831530000000017, 0.0007831389999999952, 0.0007831530000000017, 0.000783111000000003, 0.0007831250000000026]</msg>
<status status="PASS" starttime="20201029 09:33:40.399" endtime="20201029 09:33:40.401"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.394" endtime="20201029 09:33:40.402"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.994" endtime="20201029 09:33:40.402"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.972" endtime="20201029 09:33:40.402"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:40.405" endtime="20201029 09:33:40.424"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.403" endtime="20201029 09:33:40.425"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.433" endtime="20201029 09:33:40.484"></status>
</kw>
<msg timestamp="20201029 09:33:40.485" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.431" endtime="20201029 09:33:40.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.487" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.486" endtime="20201029 09:33:40.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.488" endtime="20201029 09:33:40.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.429" endtime="20201029 09:33:40.491"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.427" endtime="20201029 09:33:40.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.498" endtime="20201029 09:33:40.784"></status>
</kw>
<msg timestamp="20201029 09:33:40.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017797056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01862225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:40.496" endtime="20201029 09:33:40.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017797056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01862225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:40.789" endtime="20201029 09:33:40.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.797" endtime="20201029 09:33:40.799"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.493" endtime="20201029 09:33:40.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.492" endtime="20201029 09:33:40.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:40.805" level="INFO">${PHILIP_RES} = [{'diff': 0.0008251940000000013}, {'diff': 0.000825236}, {'diff': 0.0008252229999999999}, {'diff': 0.000825236}, {'diff': 0.0008252640000000026}, {'diff': 0.000825236}, {'diff': 0.000825236}, {'diff':...</msg>
<status status="PASS" starttime="20201029 09:33:40.801" endtime="20201029 09:33:40.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:40.809" level="INFO">${RESULT} = {'diff': [0.0008251940000000013, 0.000825236, 0.0008252229999999999, 0.000825236, 0.0008252640000000026, 0.000825236, 0.000825236, 0.0008252229999999999, 0.0008252499999999996, 0.000825236, 0.00082523...</msg>
<status status="PASS" starttime="20201029 09:33:40.806" endtime="20201029 09:33:40.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.814" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:40.813" endtime="20201029 09:33:40.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.816" level="INFO">VALUE: [0.0008251940000000013, 0.000825236, 0.0008252229999999999, 0.000825236, 0.0008252640000000026, 0.000825236, 0.000825236, 0.0008252229999999999, 0.0008252499999999996, 0.000825236, 0.000825236, 0.0008252499999999996, 0.0008252220000000005, 0.000825236, 0.000825221999999997, 0.0008252639999999992, 0.0008252499999999996, 0.000825236, 0.0008252369999999995, 0.0008252220000000005, 0.0008253199999999974, 0.0008252499999999996, 0.0008252220000000005, 0.0008252499999999996, 0.0008252629999999997, 0.000825236, 0.000825236, 0.0008252499999999996, 0.0008252500000000065, 0.000825236, 0.0008252499999999996, 0.0008252499999999996, 0.000825236, 0.0008252770000000062, 0.0008252499999999996, 0.0008252220000000005, 0.0008252220000000005, 0.000825236, 0.0008251799999999948, 0.0008252499999999996, 0.000825236, 0.0008252229999999999, 0.0008251810000000012, 0.000858167, 0.0008252639999999992, 0.0008252499999999996, 0.000825236, 0.000825236, 0.0008251799999999948, 0.0008252220000000074]</msg>
<status status="PASS" starttime="20201029 09:33:40.815" endtime="20201029 09:33:40.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.810" endtime="20201029 09:33:40.818"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.425" endtime="20201029 09:33:40.818"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.403" endtime="20201029 09:33:40.818"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:40.821" endtime="20201029 09:33:40.840"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.819" endtime="20201029 09:33:40.840"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.849" endtime="20201029 09:33:40.904"></status>
</kw>
<msg timestamp="20201029 09:33:40.904" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.847" endtime="20201029 09:33:40.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.906" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.905" endtime="20201029 09:33:40.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.908" endtime="20201029 09:33:40.912"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.845" endtime="20201029 09:33:40.913"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.843" endtime="20201029 09:33:40.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.920" endtime="20201029 09:33:41.216"></status>
</kw>
<msg timestamp="20201029 09:33:41.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017834847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018703264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.918" endtime="20201029 09:33:41.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017834847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018703264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.220" endtime="20201029 09:33:41.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.229" endtime="20201029 09:33:41.230"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.916" endtime="20201029 09:33:41.231"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.914" endtime="20201029 09:33:41.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:41.235" level="INFO">${PHILIP_RES} = [{'diff': 0.0008684169999999998}, {'diff': 0.0008684439999999995}, {'diff': 0.0008684169999999998}, {'diff': 0.0008684030000000002}, {'diff': 0.0008684169999999998}, {'diff': 0.0008684439999999995}, {...</msg>
<status status="PASS" starttime="20201029 09:33:41.232" endtime="20201029 09:33:41.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:41.239" level="INFO">${RESULT} = {'diff': [0.0008684169999999998, 0.0008684439999999995, 0.0008684169999999998, 0.0008684030000000002, 0.0008684169999999998, 0.0008684439999999995, 0.0008684450000000024, 0.0008684299999999999, 0.0008...</msg>
<status status="PASS" starttime="20201029 09:33:41.236" endtime="20201029 09:33:41.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.243" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:41.242" endtime="20201029 09:33:41.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.246" level="INFO">VALUE: [0.0008684169999999998, 0.0008684439999999995, 0.0008684169999999998, 0.0008684030000000002, 0.0008684169999999998, 0.0008684439999999995, 0.0008684450000000024, 0.0008684299999999999, 0.0008684169999999998, 0.0008684719999999986, 0.0008683890000000007, 0.000868457999999999, 0.0008683890000000007, 0.0008684310000000028, 0.000868443999999996, 0.0008684310000000028, 0.0008684300000000034, 0.0008996249999999942, 0.0008683890000000041, 0.0008684160000000038, 0.0008684029999999968, 0.0008684159999999969, 0.0008684310000000028, 0.0008684300000000034, 0.0008684310000000028, 0.0008684029999999968, 0.0008684309999999959, 0.0008684580000000025, 0.0008685000000000012, 0.0008684440000000029, 0.0008684309999999959, 0.0008684309999999959, 0.0008684440000000029, 0.0008684310000000028, 0.0008684299999999964, 0.0008684309999999959, 0.0008684300000000034, 0.0008684450000000024, 0.0008684300000000034, 0.0008684449999999955, 0.0008684299999999964, 0.0008684310000000028, 0.0008684300000000034, 0.0008684169999999963, 0.000868443999999996, 0.0008684450000000024, 0.0008684170000000033, 0.0008684450000000093, 0.000868472000000009, 0.0008684300000000034]</msg>
<status status="PASS" starttime="20201029 09:33:41.244" endtime="20201029 09:33:41.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.240" endtime="20201029 09:33:41.248"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.841" endtime="20201029 09:33:41.248"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.819" endtime="20201029 09:33:41.249"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:41.251" endtime="20201029 09:33:41.270"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.249" endtime="20201029 09:33:41.271"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.279" endtime="20201029 09:33:41.335"></status>
</kw>
<msg timestamp="20201029 09:33:41.336" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.277" endtime="20201029 09:33:41.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.338" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.337" endtime="20201029 09:33:41.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.339" endtime="20201029 09:33:41.341"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.275" endtime="20201029 09:33:41.341"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.273" endtime="20201029 09:33:41.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.349" endtime="20201029 09:33:41.635"></status>
</kw>
<msg timestamp="20201029 09:33:41.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017885278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018797958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.347" endtime="20201029 09:33:41.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017885278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018797958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.640" endtime="20201029 09:33:41.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.648" endtime="20201029 09:33:41.650"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.345" endtime="20201029 09:33:41.650"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.343" endtime="20201029 09:33:41.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:41.655" level="INFO">${PHILIP_RES} = [{'diff': 0.000912679999999999}, {'diff': 0.0009127080000000017}, {'diff': 0.0009127079999999982}, {'diff': 0.0009127080000000017}, {'diff': 0.0009126939999999986}, {'diff': 0.0009127079999999982}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:41.651" endtime="20201029 09:33:41.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:41.660" level="INFO">${RESULT} = {'diff': [0.000912679999999999, 0.0009127080000000017, 0.0009127079999999982, 0.0009127080000000017, 0.0009126939999999986, 0.0009127079999999982, 0.0009127080000000017, 0.0009127090000000011, 0.00091...</msg>
<status status="PASS" starttime="20201029 09:33:41.656" endtime="20201029 09:33:41.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.664" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:41.663" endtime="20201029 09:33:41.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.667" level="INFO">VALUE: [0.000912679999999999, 0.0009127080000000017, 0.0009127079999999982, 0.0009127080000000017, 0.0009126939999999986, 0.0009127079999999982, 0.0009127080000000017, 0.0009127090000000011, 0.000912666999999999, 0.0009127090000000011, 0.0009127089999999977, 0.0009127090000000011, 0.0009386530000000011, 0.0009126809999999985, 0.0009126949999999981, 0.0009127090000000046, 0.0009127360000000043, 0.0009127229999999972, 0.0009126949999999981, 0.000912666999999999, 0.0009127079999999982, 0.0009127080000000051, 0.0009127219999999978, 0.0009127219999999978, 0.0009126939999999986, 0.0009127079999999982, 0.0009127080000000051, 0.0009126940000000056, 0.0009127079999999982, 0.0009126939999999986, 0.0009127089999999977, 0.0009127230000000042, 0.0009127090000000046, 0.0009127079999999982, 0.0009127079999999982, 0.0009126519999999999, 0.0009127079999999982, 0.0009126940000000056, 0.0009127079999999982, 0.0009127359999999973, 0.0009127079999999982, 0.0009127219999999978, 0.0009127079999999982, 0.000912695000000005, 0.0009127089999999977, 0.0009447779999999933, 0.0009127359999999973, 0.0009127079999999982, 0.0009126939999999917, 0.0009127079999999982]</msg>
<status status="PASS" starttime="20201029 09:33:41.666" endtime="20201029 09:33:41.668"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.661" endtime="20201029 09:33:41.668"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.271" endtime="20201029 09:33:41.669"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.249" endtime="20201029 09:33:41.669"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:41.671" endtime="20201029 09:33:41.691"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.670" endtime="20201029 09:33:41.691"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.700" endtime="20201029 09:33:41.759"></status>
</kw>
<msg timestamp="20201029 09:33:41.760" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.698" endtime="20201029 09:33:41.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.762" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.761" endtime="20201029 09:33:41.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.763" endtime="20201029 09:33:41.765"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.696" endtime="20201029 09:33:41.766"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.694" endtime="20201029 09:33:41.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.773" endtime="20201029 09:33:42.080"></status>
</kw>
<msg timestamp="20201029 09:33:42.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018125222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019083264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.771" endtime="20201029 09:33:42.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018125222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019083264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.085" endtime="20201029 09:33:42.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.093" endtime="20201029 09:33:42.095"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.769" endtime="20201029 09:33:42.095"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.767" endtime="20201029 09:33:42.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:42.100" level="INFO">${PHILIP_RES} = [{'diff': 0.0009580419999999992}, {'diff': 0.0009580830000000019}, {'diff': 0.0009580830000000019}, {'diff': 0.0009580560000000023}, {'diff': 0.0009580559999999988}, {'diff': 0.0009580689999999989}, {...</msg>
<status status="PASS" starttime="20201029 09:33:42.097" endtime="20201029 09:33:42.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:42.104" level="INFO">${RESULT} = {'diff': [0.0009580419999999992, 0.0009580830000000019, 0.0009580830000000019, 0.0009580560000000023, 0.0009580559999999988, 0.0009580689999999989, 0.0009580689999999989, 0.0009580560000000023, 0.0009...</msg>
<status status="PASS" starttime="20201029 09:33:42.101" endtime="20201029 09:33:42.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.109" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:42.107" endtime="20201029 09:33:42.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.111" level="INFO">VALUE: [0.0009580419999999992, 0.0009580830000000019, 0.0009580830000000019, 0.0009580560000000023, 0.0009580559999999988, 0.0009580689999999989, 0.0009580689999999989, 0.0009580560000000023, 0.0009580279999999997, 0.0009580829999999985, 0.0009580559999999988, 0.0009580559999999988, 0.0009580550000000028, 0.0009580000000000005, 0.0009581109999999976, 0.0009580690000000058, 0.0009997909999999999, 0.0009580689999999989, 0.0009580829999999985, 0.0009580560000000057, 0.0009580829999999985, 0.0009580689999999989, 0.0009580689999999989, 0.0009580699999999984, 0.0009580549999999993, 0.0009581390000000037, 0.0009581109999999976, 0.0009580829999999985, 0.0009580689999999989, 0.0009580140000000001, 0.0009580699999999984, 0.0009580689999999989, 0.0009580689999999989, 0.0009581109999999976, 0.0009580560000000057, 0.0009580689999999989, 0.0009580279999999997, 0.0009581109999999976, 0.0009580689999999989, 0.0009581110000000045, 0.0009580559999999988, 0.0009580409999999998, 0.0009580830000000054, 0.0009580980000000044, 0.0009580699999999914, 0.0009580830000000123, 0.0009580690000000058, 0.0009580699999999914, 0.0009928190000000059, 0.0009580700000000053]</msg>
<status status="PASS" starttime="20201029 09:33:42.110" endtime="20201029 09:33:42.112"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.105" endtime="20201029 09:33:42.112"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.692" endtime="20201029 09:33:42.113"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.669" endtime="20201029 09:33:42.113"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:42.116" endtime="20201029 09:33:42.135"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.114" endtime="20201029 09:33:42.136"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.144" endtime="20201029 09:33:42.206"></status>
</kw>
<msg timestamp="20201029 09:33:42.206" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.142" endtime="20201029 09:33:42.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.209" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.208" endtime="20201029 09:33:42.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.210" endtime="20201029 09:33:42.213"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.140" endtime="20201029 09:33:42.213"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.138" endtime="20201029 09:33:42.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.221" endtime="20201029 09:33:42.507"></status>
</kw>
<msg timestamp="20201029 09:33:42.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018318069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019322556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.219" endtime="20201029 09:33:42.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018318069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019322556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.511" endtime="20201029 09:33:42.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.520" endtime="20201029 09:33:42.521"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.216" endtime="20201029 09:33:42.522"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.214" endtime="20201029 09:33:42.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:42.527" level="INFO">${PHILIP_RES} = [{'diff': 0.0010044870000000018}, {'diff': 0.0010044720000000028}, {'diff': 0.001004500000000002}, {'diff': 0.0010045279999999976}, {'diff': 0.0010044579999999997}, {'diff': 0.0010044999999999984}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:42.523" endtime="20201029 09:33:42.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:42.531" level="INFO">${RESULT} = {'diff': [0.0010044870000000018, 0.0010044720000000028, 0.001004500000000002, 0.0010045279999999976, 0.0010044579999999997, 0.0010044999999999984, 0.0010045549999999973, 0.001004513999999998, 0.001004...</msg>
<status status="PASS" starttime="20201029 09:33:42.528" endtime="20201029 09:33:42.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.535" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:42.534" endtime="20201029 09:33:42.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.538" level="INFO">VALUE: [0.0010044870000000018, 0.0010044720000000028, 0.001004500000000002, 0.0010045279999999976, 0.0010044579999999997, 0.0010044999999999984, 0.0010045549999999973, 0.001004513999999998, 0.001004513999999998, 0.001004513999999998, 0.0010044719999999993, 0.001004500000000002, 0.0010045269999999981, 0.0010044999999999984, 0.0010044999999999984, 0.001004513999999998, 0.0010045419999999972, 0.0010044870000000053, 0.0010045269999999981, 0.0010045840000000028, 0.0010044999999999984, 0.0010045280000000045, 0.0010044999999999984, 0.0010044859999999989, 0.0010044869999999984, 0.001004513999999998, 0.001004513999999998, 0.001004513999999998, 0.0010045560000000037, 0.0010383890000000007, 0.0010044440000000002, 0.0010045000000000054, 0.001004513999999998, 0.001004527000000005, 0.0010045279999999976, 0.0010044859999999989, 0.001004513999999998, 0.001004513999999998, 0.0010044999999999984, 0.001004513999999998, 0.001004513999999998, 0.0010045280000000045, 0.001004513999999998, 0.0010045970000000098, 0.001004513999999998, 0.0010045690000000107, 0.0010045280000000045, 0.0010045000000000054, 0.0010044579999999997, 0.0010045000000000054]</msg>
<status status="PASS" starttime="20201029 09:33:42.536" endtime="20201029 09:33:42.544"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.532" endtime="20201029 09:33:42.545"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.136" endtime="20201029 09:33:42.545"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.113" endtime="20201029 09:33:42.545"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:42.548" endtime="20201029 09:33:42.568"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.546" endtime="20201029 09:33:42.568"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.578" endtime="20201029 09:33:42.643"></status>
</kw>
<msg timestamp="20201029 09:33:42.644" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.576" endtime="20201029 09:33:42.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.649" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.646" endtime="20201029 09:33:42.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.652" endtime="20201029 09:33:42.655"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.573" endtime="20201029 09:33:42.656"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.571" endtime="20201029 09:33:42.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.672" endtime="20201029 09:33:42.967"></status>
</kw>
<msg timestamp="20201029 09:33:42.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019039597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020091639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.669" endtime="20201029 09:33:42.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019039597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020091639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.971" endtime="20201029 09:33:42.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.980" endtime="20201029 09:33:42.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.663" endtime="20201029 09:33:42.982"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.659" endtime="20201029 09:33:42.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:42.986" level="INFO">${PHILIP_RES} = [{'diff': 0.001052042000000003}, {'diff': 0.0010520549999999997}, {'diff': 0.001052028}, {'diff': 0.0010520560000000026}, {'diff': 0.0010520140000000004}, {'diff': 0.001052041}, {'diff': 0.00105205600...</msg>
<status status="PASS" starttime="20201029 09:33:42.983" endtime="20201029 09:33:42.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:42.991" level="INFO">${RESULT} = {'diff': [0.001052042000000003, 0.0010520549999999997, 0.001052028, 0.0010520560000000026, 0.0010520140000000004, 0.001052041, 0.0010520560000000026, 0.001052028, 0.0010520549999999997, 0.001052041999...</msg>
<status status="PASS" starttime="20201029 09:33:42.987" endtime="20201029 09:33:42.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.996" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:42.995" endtime="20201029 09:33:42.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.998" level="INFO">VALUE: [0.001052042000000003, 0.0010520549999999997, 0.001052028, 0.0010520560000000026, 0.0010520140000000004, 0.001052041, 0.0010520560000000026, 0.001052028, 0.0010520549999999997, 0.0010520419999999996, 0.0010520560000000026, 0.0010520409999999966, 0.0010520280000000035, 0.001052041999999996, 0.001052041999999996, 0.0010520410000000036, 0.0010520279999999965, 0.001052041999999996, 0.0010520410000000036, 0.0010520549999999962, 0.0010520279999999965, 0.001092862, 0.0010520280000000035, 0.001052042000000003, 0.0010520409999999966, 0.0010520280000000035, 0.0010520280000000035, 0.0010520409999999966, 0.001052013999999997, 0.0010520970000000018, 0.0010519859999999978, 0.0010520129999999975, 0.0010520140000000039, 0.001052041999999996, 0.0010520410000000036, 0.0010520280000000035, 0.0010519859999999978, 0.0010520410000000036, 0.0010520409999999966, 0.0010520970000000018, 0.0010520560000000095, 0.001052026999999997, 0.001052042000000003, 0.0010520279999999965, 0.0010520279999999965, 0.0010520140000000039, 0.001052042000000003, 0.00105201399999999, 0.001052026999999997, 0.0010520690000000027]</msg>
<status status="PASS" starttime="20201029 09:33:42.997" endtime="20201029 09:33:42.999"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.992" endtime="20201029 09:33:43.000"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.569" endtime="20201029 09:33:43.000"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.546" endtime="20201029 09:33:43.001"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:43.003" endtime="20201029 09:33:43.023"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.001" endtime="20201029 09:33:43.023"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.031" endtime="20201029 09:33:43.098"></status>
</kw>
<msg timestamp="20201029 09:33:43.099" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.030" endtime="20201029 09:33:43.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.101" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.100" endtime="20201029 09:33:43.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.102" endtime="20201029 09:33:43.104"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.027" endtime="20201029 09:33:43.105"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.025" endtime="20201029 09:33:43.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.112" endtime="20201029 09:33:43.399"></status>
</kw>
<msg timestamp="20201029 09:33:43.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018149583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019250222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.110" endtime="20201029 09:33:43.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018149583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019250222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.403" endtime="20201029 09:33:43.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.411" endtime="20201029 09:33:43.413"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.108" endtime="20201029 09:33:43.414"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.106" endtime="20201029 09:33:43.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:43.418" level="INFO">${PHILIP_RES} = [{'diff': 0.0011006390000000005}, {'diff': 0.001100638000000001}, {'diff': 0.001100638000000001}, {'diff': 0.0011006390000000005}, {'diff': 0.0011006110000000013}, {'diff': 0.001100638999999997}, {'di...</msg>
<status status="PASS" starttime="20201029 09:33:43.415" endtime="20201029 09:33:43.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:43.422" level="INFO">${RESULT} = {'diff': [0.0011006390000000005, 0.001100638000000001, 0.001100638000000001, 0.0011006390000000005, 0.0011006110000000013, 0.001100638999999997, 0.001100667000000003, 0.0011006529999999966, 0.00110063...</msg>
<status status="PASS" starttime="20201029 09:33:43.419" endtime="20201029 09:33:43.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.427" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:43.426" endtime="20201029 09:33:43.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.429" level="INFO">VALUE: [0.0011006390000000005, 0.001100638000000001, 0.001100638000000001, 0.0011006390000000005, 0.0011006110000000013, 0.001100638999999997, 0.001100667000000003, 0.0011006529999999966, 0.0011006390000000005, 0.0011006669999999996, 0.001100653, 0.0011006390000000005, 0.0011006390000000005, 0.0011006390000000005, 0.0011006110000000013, 0.001100638000000001, 0.001100653, 0.0011006390000000005, 0.0011006520000000006, 0.0011006390000000005, 0.001100653, 0.001100653, 0.0011006669999999996, 0.0011006669999999996, 0.001145860999999998, 0.001100625000000001, 0.001100653, 0.0011006660000000001, 0.0011006520000000006, 0.0011006120000000008, 0.0011006660000000001, 0.0011006390000000005, 0.0011005840000000017, 0.0011006390000000005, 0.0011006390000000005, 0.0011006390000000005, 0.001100653, 0.0011006110000000013, 0.0011006389999999866, 0.0011006669999999996, 0.001100624999999994, 0.0011006379999999871, 0.0011006800000000067, 0.0011006660000000001, 0.0011006390000000005, 0.0011006529999999931, 0.0011006669999999996, 0.0011006390000000005, 0.0011006529999999931, 0.0011005969999999948]</msg>
<status status="PASS" starttime="20201029 09:33:43.428" endtime="20201029 09:33:43.430"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.423" endtime="20201029 09:33:43.431"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.024" endtime="20201029 09:33:43.431"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.001" endtime="20201029 09:33:43.431"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:43.434" endtime="20201029 09:33:43.453"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.432" endtime="20201029 09:33:43.454"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.463" endtime="20201029 09:33:43.532"></status>
</kw>
<msg timestamp="20201029 09:33:43.533" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.461" endtime="20201029 09:33:43.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.536" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.534" endtime="20201029 09:33:43.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.537" endtime="20201029 09:33:43.539"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.458" endtime="20201029 09:33:43.540"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.456" endtime="20201029 09:33:43.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.547" endtime="20201029 09:33:43.833"></status>
</kw>
<msg timestamp="20201029 09:33:43.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018266569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019416889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.545" endtime="20201029 09:33:43.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018266569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019416889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.838" endtime="20201029 09:33:43.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.846" endtime="20201029 09:33:43.848"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.543" endtime="20201029 09:33:43.848"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.541" endtime="20201029 09:33:43.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:43.853" level="INFO">${PHILIP_RES} = [{'diff': 0.0011503199999999998}, {'diff': 0.0011503469999999995}, {'diff': 0.0011503190000000003}, {'diff': 0.0011503469999999995}, {'diff': 0.001150347999999999}, {'diff': 0.001150360999999999}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:43.850" endtime="20201029 09:33:43.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:43.857" level="INFO">${RESULT} = {'diff': [0.0011503199999999998, 0.0011503469999999995, 0.0011503190000000003, 0.0011503469999999995, 0.001150347999999999, 0.001150360999999999, 0.001150333, 0.0011503189999999969, 0.0011503469999999...</msg>
<status status="PASS" starttime="20201029 09:33:43.854" endtime="20201029 09:33:43.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.862" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:43.861" endtime="20201029 09:33:43.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.865" level="INFO">VALUE: [0.0011503199999999998, 0.0011503469999999995, 0.0011503190000000003, 0.0011503469999999995, 0.001150347999999999, 0.001150360999999999, 0.001150333, 0.0011503189999999969, 0.0011503469999999995, 0.0011503200000000033, 0.001150375000000002, 0.001150263999999998, 0.0011503050000000042, 0.0011503330000000034, 0.0011503480000000024, 0.0011503330000000034, 0.0011503609999999956, 0.0011503050000000042, 0.0011503329999999964, 0.001195472000000003, 0.0011503330000000034, 0.001150347000000003, 0.001150362000000002, 0.0011503330000000034, 0.0011503189999999969, 0.001150347000000003, 0.001150346999999996, 0.0011503200000000033, 0.001150346999999996, 0.001150347000000003, 0.0011503609999999956, 0.0011503190000000038, 0.0011503480000000024, 0.0011503610000000025, 0.0011503610000000025, 0.0011503329999999964, 0.0011503890000000017, 0.0011503749999999952, 0.0011503340000000029, 0.0011503200000000102, 0.001150346999999996, 0.0011503610000000025, 0.0011503610000000025, 0.0011503199999999963, 0.0011503060000000037, 0.0011503610000000025, 0.0011841530000000072, 0.0011503330000000034, 0.0011503330000000034, 0.0011503330000000034]</msg>
<status status="PASS" starttime="20201029 09:33:43.864" endtime="20201029 09:33:43.867"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.858" endtime="20201029 09:33:43.868"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.455" endtime="20201029 09:33:43.868"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.432" endtime="20201029 09:33:43.868"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:43.871" endtime="20201029 09:33:43.890"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.869" endtime="20201029 09:33:43.891"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.899" endtime="20201029 09:33:43.971"></status>
</kw>
<msg timestamp="20201029 09:33:43.971" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.898" endtime="20201029 09:33:43.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.974" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.973" endtime="20201029 09:33:43.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.975" endtime="20201029 09:33:43.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.895" endtime="20201029 09:33:43.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.893" endtime="20201029 09:33:43.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.985" endtime="20201029 09:33:44.292"></status>
</kw>
<msg timestamp="20201029 09:33:44.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018286042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019487125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.983" endtime="20201029 09:33:44.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018286042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019487125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:44.296" endtime="20201029 09:33:44.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.304" endtime="20201029 09:33:44.306"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.980" endtime="20201029 09:33:44.307"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.979" endtime="20201029 09:33:44.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:44.311" level="INFO">${PHILIP_RES} = [{'diff': 0.001201083000000002}, {'diff': 0.0012011110000000012}, {'diff': 0.0012011109999999978}, {'diff': 0.0012011250000000008}, {'diff': 0.0012011110000000012}, {'diff': 0.0012011250000000008}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:44.308" endtime="20201029 09:33:44.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:44.316" level="INFO">${RESULT} = {'diff': [0.001201083000000002, 0.0012011110000000012, 0.0012011109999999978, 0.0012011250000000008, 0.0012011110000000012, 0.0012011250000000008, 0.0012010969999999982, 0.001201180999999999, 0.001201...</msg>
<status status="PASS" starttime="20201029 09:33:44.312" endtime="20201029 09:33:44.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.321" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:44.320" endtime="20201029 09:33:44.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.323" level="INFO">VALUE: [0.001201083000000002, 0.0012011110000000012, 0.0012011109999999978, 0.0012011250000000008, 0.0012011110000000012, 0.0012011250000000008, 0.0012010969999999982, 0.001201180999999999, 0.0012011390000000004, 0.0012011110000000012, 0.0012401530000000008, 0.0012011119999999972, 0.0012011109999999978, 0.0012011109999999978, 0.0012011249999999973, 0.0012011109999999978, 0.0012011250000000043, 0.0012011250000000043, 0.0012010970000000051, 0.0012011119999999972, 0.0012011249999999973, 0.0012011109999999978, 0.0012011119999999972, 0.0012011249999999973, 0.0012011390000000038, 0.0012011120000000042, 0.0012010970000000051, 0.0012011249999999973, 0.0012011119999999972, 0.0012011109999999978, 0.001201138999999997, 0.0012011249999999973, 0.0012011109999999978, 0.0012011110000000047, 0.0012011109999999978, 0.0012011249999999973, 0.0012183189999999955, 0.0012011249999999973, 0.0012010829999999917, 0.0012010969999999982, 0.001201151999999997, 0.0012010830000000056, 0.0012011390000000038, 0.0012010419999999994, 0.0012011110000000047, 0.0012011109999999908, 0.0012010979999999977, 0.0012011109999999908, 0.0012011249999999973, 0.0012011249999999973]</msg>
<status status="PASS" starttime="20201029 09:33:44.322" endtime="20201029 09:33:44.324"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.317" endtime="20201029 09:33:44.325"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.892" endtime="20201029 09:33:44.325"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.869" endtime="20201029 09:33:44.325"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:44.328" endtime="20201029 09:33:44.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.326" endtime="20201029 09:33:44.348"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.356" endtime="20201029 09:33:44.431"></status>
</kw>
<msg timestamp="20201029 09:33:44.431" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.355" endtime="20201029 09:33:44.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.434" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.432" endtime="20201029 09:33:44.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.435" endtime="20201029 09:33:44.437"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.352" endtime="20201029 09:33:44.437"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.350" endtime="20201029 09:33:44.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.444" endtime="20201029 09:33:44.732"></status>
</kw>
<msg timestamp="20201029 09:33:44.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018242625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019495583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:44.443" endtime="20201029 09:33:44.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018242625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019495583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:44.736" endtime="20201029 09:33:44.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.744" endtime="20201029 09:33:44.746"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.440" endtime="20201029 09:33:44.747"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.438" endtime="20201029 09:33:44.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:44.751" level="INFO">${PHILIP_RES} = [{'diff': 0.001252958000000002}, {'diff': 0.0012530000000000006}, {'diff': 0.001252986000000001}, {'diff': 0.001252973000000001}, {'diff': 0.001252986000000001}, {'diff': 0.001252973000000001}, {'diff...</msg>
<status status="PASS" starttime="20201029 09:33:44.748" endtime="20201029 09:33:44.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:44.755" level="INFO">${RESULT} = {'diff': [0.001252958000000002, 0.0012530000000000006, 0.001252986000000001, 0.001252973000000001, 0.001252986000000001, 0.001252973000000001, 0.001252986000000001, 0.001252971999999998, 0.00125301400...</msg>
<status status="PASS" starttime="20201029 09:33:44.752" endtime="20201029 09:33:44.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.760" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:44.759" endtime="20201029 09:33:44.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.763" level="INFO">VALUE: [0.001252958000000002, 0.0012530000000000006, 0.001252986000000001, 0.001252973000000001, 0.001252986000000001, 0.001252973000000001, 0.001252986000000001, 0.001252971999999998, 0.0012530140000000002, 0.0012529999999999972, 0.0012529729999999975, 0.0012964030000000015, 0.0012529860000000045, 0.001252971999999998, 0.001253055000000003, 0.001252971999999998, 0.0012529999999999972, 0.0012529999999999972, 0.0012529729999999975, 0.0012529859999999976, 0.0012529579999999985, 0.0012529999999999972, 0.0012529579999999985, 0.001252958999999998, 0.0012529859999999976, 0.0012529999999999972, 0.0012529859999999976, 0.0012529579999999985, 0.001252971999999998, 0.0012530139999999967, 0.001252971999999998, 0.0012529579999999985, 0.0012530000000000041, 0.0012529999999999902, 0.0012529859999999976, 0.001252972000000005, 0.001278042000000007, 0.001252943999999992, 0.0012530139999999967, 0.0012529580000000123, 0.0012529440000000058, 0.0012529440000000058, 0.0012530000000000041, 0.0012529860000000115, 0.001252971999999991, 0.0012529730000000044, 0.0012529859999999976, 0.0012529730000000044, 0.0012530280000000033, 0.0012529579999999985]</msg>
<status status="PASS" starttime="20201029 09:33:44.761" endtime="20201029 09:33:44.763"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.756" endtime="20201029 09:33:44.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.348" endtime="20201029 09:33:44.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.326" endtime="20201029 09:33:44.765"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:44.767" endtime="20201029 09:33:44.786"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.766" endtime="20201029 09:33:44.787"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.796" endtime="20201029 09:33:44.873"></status>
</kw>
<msg timestamp="20201029 09:33:44.873" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.794" endtime="20201029 09:33:44.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.876" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.874" endtime="20201029 09:33:44.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.877" endtime="20201029 09:33:44.882"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.791" endtime="20201029 09:33:44.883"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.789" endtime="20201029 09:33:44.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.891" endtime="20201029 09:33:45.197"></status>
</kw>
<msg timestamp="20201029 09:33:45.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018286972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019592889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:44.889" endtime="20201029 09:33:45.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018286972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019592889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:45.201" endtime="20201029 09:33:45.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.209" endtime="20201029 09:33:45.211"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.886" endtime="20201029 09:33:45.212"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.884" endtime="20201029 09:33:45.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:45.216" level="INFO">${PHILIP_RES} = [{'diff': 0.0013059170000000002}, {'diff': 0.0013511800000000004}, {'diff': 0.0013059160000000007}, {'diff': 0.0013059170000000002}, {'diff': 0.0013059309999999998}, {'diff': 0.0013059029999999971}, {...</msg>
<status status="PASS" starttime="20201029 09:33:45.213" endtime="20201029 09:33:45.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:45.220" level="INFO">${RESULT} = {'diff': [0.0013059170000000002, 0.0013511800000000004, 0.0013059160000000007, 0.0013059170000000002, 0.0013059309999999998, 0.0013059029999999971, 0.0013059170000000002, 0.0013059019999999977, 0.0013...</msg>
<status status="PASS" starttime="20201029 09:33:45.217" endtime="20201029 09:33:45.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.225" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:45.224" endtime="20201029 09:33:45.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.227" level="INFO">VALUE: [0.0013059170000000002, 0.0013511800000000004, 0.0013059160000000007, 0.0013059170000000002, 0.0013059309999999998, 0.0013059029999999971, 0.0013059170000000002, 0.0013059019999999977, 0.0013059029999999971, 0.0013059160000000042, 0.0013059310000000032, 0.0013059300000000038, 0.0013059310000000032, 0.0013059170000000037, 0.0013059170000000037, 0.0013059310000000032, 0.0013059160000000042, 0.0013059170000000037, 0.0013058609999999984, 0.0013059169999999967, 0.0013059159999999972, 0.0013059169999999967, 0.0013059299999999968, 0.0013059169999999967, 0.0013059439999999964, 0.0013344030000000048, 0.0013059300000000038, 0.0013059310000000032, 0.0013059300000000038, 0.0013059169999999967, 0.0013059159999999972, 0.0013059169999999967, 0.001305888000000005, 0.001305903000000011, 0.0013059170000000037, 0.0013059170000000037, 0.0013059170000000037, 0.0013059440000000033, 0.0013059309999999963, 0.0013059299999999968, 0.0013059309999999963, 0.0013059300000000107, 0.0013059170000000037, 0.0013059019999999977, 0.0013059029999999971, 0.0013059029999999971, 0.0013059170000000037, 0.0013059170000000037, 0.0013493749999999999, 0.0013058469999999989]</msg>
<status status="PASS" starttime="20201029 09:33:45.226" endtime="20201029 09:33:45.229"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.221" endtime="20201029 09:33:45.229"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.788" endtime="20201029 09:33:45.230"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.765" endtime="20201029 09:33:45.230"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:45.232" endtime="20201029 09:33:45.252"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.231" endtime="20201029 09:33:45.252"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.261" endtime="20201029 09:33:45.342"></status>
</kw>
<msg timestamp="20201029 09:33:45.342" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:45.259" endtime="20201029 09:33:45.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.345" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:45.343" endtime="20201029 09:33:45.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.346" endtime="20201029 09:33:45.348"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.257" endtime="20201029 09:33:45.348"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.255" endtime="20201029 09:33:45.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.355" endtime="20201029 09:33:45.642"></status>
</kw>
<msg timestamp="20201029 09:33:45.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018208903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019568833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:45.354" endtime="20201029 09:33:45.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018208903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019568833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:45.646" endtime="20201029 09:33:45.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.654" endtime="20201029 09:33:45.656"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.351" endtime="20201029 09:33:45.657"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.349" endtime="20201029 09:33:45.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:45.661" level="INFO">${PHILIP_RES} = [{'diff': 0.0013599300000000022}, {'diff': 0.001359957999999998}, {'diff': 0.0013599299999999988}, {'diff': 0.0013599440000000018}, {'diff': 0.0013599439999999983}, {'diff': 0.0013598750000000034}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:45.658" endtime="20201029 09:33:45.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:45.666" level="INFO">${RESULT} = {'diff': [0.0013599300000000022, 0.001359957999999998, 0.0013599299999999988, 0.0013599440000000018, 0.0013599439999999983, 0.0013598750000000034, 0.0013599440000000018, 0.001359957999999998, 0.001359...</msg>
<status status="PASS" starttime="20201029 09:33:45.662" endtime="20201029 09:33:45.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.671" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:45.670" endtime="20201029 09:33:45.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.673" level="INFO">VALUE: [0.0013599300000000022, 0.001359957999999998, 0.0013599299999999988, 0.0013599440000000018, 0.0013599439999999983, 0.0013598750000000034, 0.0013599440000000018, 0.001359957999999998, 0.0013599580000000014, 0.0013599439999999949, 0.001359972000000001, 0.0013600139999999997, 0.0013599300000000022, 0.0013599299999999953, 0.0013599439999999949, 0.0013599580000000014, 0.001359972000000001, 0.0013600139999999997, 0.0013599440000000018, 0.0014068890000000014, 0.0013599579999999944, 0.0013599450000000013, 0.0013599450000000013, 0.0013599450000000013, 0.0013599450000000013, 0.0013599450000000013, 0.0013599449999999944, 0.0013599310000000017, 0.0013599160000000027, 0.0013599590000000009, 0.0013599450000000082, 0.0013599309999999948, 0.001359889000000003, 0.0013599310000000087, 0.001359971999999987, 0.0013599590000000078, 0.0013599450000000013, 0.0013599590000000078, 0.0013599450000000013, 0.0013599450000000013, 0.0013599309999999948, 0.00136, 0.0013946250000000104, 0.0013599440000000018, 0.0013599450000000013, 0.001359958999999994, 0.0013599310000000087, 0.001359943999999988, 0.0013599859999999936, 0.0013599579999999944]</msg>
<status status="PASS" starttime="20201029 09:33:45.672" endtime="20201029 09:33:45.674"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.667" endtime="20201029 09:33:45.675"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.253" endtime="20201029 09:33:45.675"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.230" endtime="20201029 09:33:45.675"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:45.678" endtime="20201029 09:33:45.697"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.676" endtime="20201029 09:33:45.698"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.706" endtime="20201029 09:33:45.790"></status>
</kw>
<msg timestamp="20201029 09:33:45.791" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:45.705" endtime="20201029 09:33:45.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.796" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:45.793" endtime="20201029 09:33:45.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.799" endtime="20201029 09:33:45.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.702" endtime="20201029 09:33:45.804"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.700" endtime="20201029 09:33:45.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.819" endtime="20201029 09:33:46.115"></status>
</kw>
<msg timestamp="20201029 09:33:46.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018269333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019684375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:45.816" endtime="20201029 09:33:46.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018269333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019684375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:46.119" endtime="20201029 09:33:46.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.127" endtime="20201029 09:33:46.129"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.810" endtime="20201029 09:33:46.130"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.806" endtime="20201029 09:33:46.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:46.134" level="INFO">${PHILIP_RES} = [{'diff': 0.0014150420000000018}, {'diff': 0.0014150560000000013}, {'diff': 0.0014150419999999983}, {'diff': 0.0014150549999999984}, {'diff': 0.0014150419999999983}, {'diff': 0.0014150559999999979}, {...</msg>
<status status="PASS" starttime="20201029 09:33:46.131" endtime="20201029 09:33:46.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:46.138" level="INFO">${RESULT} = {'diff': [0.0014150420000000018, 0.0014150560000000013, 0.0014150419999999983, 0.0014150549999999984, 0.0014150419999999983, 0.0014150559999999979, 0.0014472500000000006, 0.0014150840000000005, 0.0014...</msg>
<status status="PASS" starttime="20201029 09:33:46.135" endtime="20201029 09:33:46.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.143" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:46.142" endtime="20201029 09:33:46.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.145" level="INFO">VALUE: [0.0014150420000000018, 0.0014150560000000013, 0.0014150419999999983, 0.0014150549999999984, 0.0014150419999999983, 0.0014150559999999979, 0.0014472500000000006, 0.0014150840000000005, 0.0014150840000000005, 0.0014150830000000045, 0.0014150549999999984, 0.0014150700000000044, 0.0014150559999999979, 0.0014150830000000045, 0.0014150139999999992, 0.0014150549999999984, 0.0014149999999999996, 0.0014150559999999979, 0.0014150409999999988, 0.0014151249999999962, 0.0014150560000000048, 0.0014150699999999974, 0.0014150550000000053, 0.001415096999999997, 0.001415084000000004, 0.0014150139999999992, 0.0014150830000000045, 0.0014150409999999988, 0.0014296519999999965, 0.001415068999999998, 0.0014150550000000123, 0.0014151250000000032, 0.0014150420000000052, 0.0014150279999999987, 0.0014150410000000058, 0.0014150549999999984, 0.0014150700000000044, 0.0014150419999999914, 0.0014150829999999975, 0.001415069000000005, 0.0014150559999999979, 0.0014150560000000117, 0.0014150559999999979, 0.0014150549999999984, 0.0014150279999999987, 0.0014150559999999979, 0.0014150559999999979, 0.0014150549999999984, 0.0014150549999999984, 0.0014602499999999963]</msg>
<status status="PASS" starttime="20201029 09:33:46.144" endtime="20201029 09:33:46.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.139" endtime="20201029 09:33:46.147"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.698" endtime="20201029 09:33:46.147"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.676" endtime="20201029 09:33:46.147"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:46.150" endtime="20201029 09:33:46.169"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.148" endtime="20201029 09:33:46.170"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.178" endtime="20201029 09:33:46.264"></status>
</kw>
<msg timestamp="20201029 09:33:46.264" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.177" endtime="20201029 09:33:46.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.267" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.265" endtime="20201029 09:33:46.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.268" endtime="20201029 09:33:46.270"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.174" endtime="20201029 09:33:46.271"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.172" endtime="20201029 09:33:46.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.278" endtime="20201029 09:33:46.564"></status>
</kw>
<msg timestamp="20201029 09:33:46.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018312292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019783514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:46.277" endtime="20201029 09:33:46.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018312292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019783514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:46.568" endtime="20201029 09:33:46.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.581" endtime="20201029 09:33:46.584"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.274" endtime="20201029 09:33:46.586"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.272" endtime="20201029 09:33:46.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:46.595" level="INFO">${PHILIP_RES} = [{'diff': 0.0014712219999999977}, {'diff': 0.001471264}, {'diff': 0.0014713189999999987}, {'diff': 0.0014712500000000003}, {'diff': 0.001471264}, {'diff': 0.0014711939999999986}, {'diff': 0.0014712500...</msg>
<status status="PASS" starttime="20201029 09:33:46.588" endtime="20201029 09:33:46.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:46.604" level="INFO">${RESULT} = {'diff': [0.0014712219999999977, 0.001471264, 0.0014713189999999987, 0.0014712500000000003, 0.001471264, 0.0014711939999999986, 0.0014712500000000003, 0.0014712500000000003, 0.0014712640000000034, 0.0...</msg>
<status status="PASS" starttime="20201029 09:33:46.597" endtime="20201029 09:33:46.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.614" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:46.612" endtime="20201029 09:33:46.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.619" level="INFO">VALUE: [0.0014712219999999977, 0.001471264, 0.0014713189999999987, 0.0014712500000000003, 0.001471264, 0.0014711939999999986, 0.0014712500000000003, 0.0014712500000000003, 0.0014712640000000034, 0.001471264, 0.0014712360000000008, 0.001471264, 0.0014712500000000003, 0.001471264, 0.0014712500000000003, 0.0014712500000000003, 0.001471264, 0.001471264, 0.0015146389999999982, 0.0014712360000000008, 0.0014712500000000003, 0.0014712220000000012, 0.001471264, 0.0014712779999999995, 0.0014712500000000003, 0.0014712500000000003, 0.0014712500000000003, 0.0014712500000000003, 0.0014712500000000003, 0.0014712080000000016, 0.001471264, 0.0014712360000000008, 0.0014712360000000008, 0.0014712499999999934, 0.0014712499999999934, 0.0014712219999999943, 0.0014713060000000056, 0.0014712360000000008, 0.0014712499999999934, 0.0015120829999999974, 0.0014712360000000008, 0.0014712780000000064, 0.001471291999999999, 0.0014712500000000073, 0.0014712500000000073, 0.0014712499999999934, 0.001471264, 0.0014712499999999934, 0.001471264, 0.0014712360000000008]</msg>
<status status="PASS" starttime="20201029 09:33:46.616" endtime="20201029 09:33:46.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.606" endtime="20201029 09:33:46.624"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.170" endtime="20201029 09:33:46.625"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.148" endtime="20201029 09:33:46.625"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:46.630" endtime="20201029 09:33:46.652"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.627" endtime="20201029 09:33:46.654"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.672" endtime="20201029 09:33:46.763"></status>
</kw>
<msg timestamp="20201029 09:33:46.763" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.668" endtime="20201029 09:33:46.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.766" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.764" endtime="20201029 09:33:46.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.767" endtime="20201029 09:33:46.768"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.662" endtime="20201029 09:33:46.769"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.658" endtime="20201029 09:33:46.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.776" endtime="20201029 09:33:47.065"></status>
</kw>
<msg timestamp="20201029 09:33:47.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031738333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033266847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:46.775" endtime="20201029 09:33:47.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031738333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033266847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:47.070" endtime="20201029 09:33:47.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.078" endtime="20201029 09:33:47.080"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.772" endtime="20201029 09:33:47.080"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.770" endtime="20201029 09:33:47.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:47.085" level="INFO">${PHILIP_RES} = [{'diff': 0.0015285140000000016}, {'diff': 0.0015285550000000009}, {'diff': 0.0015285280000000012}, {'diff': 0.001528583}, {'diff': 0.0015285280000000012}, {'diff': 0.0015285280000000012}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 09:33:47.081" endtime="20201029 09:33:47.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:47.090" level="INFO">${RESULT} = {'diff': [0.0015285140000000016, 0.0015285550000000009, 0.0015285280000000012, 0.001528583, 0.0015285280000000012, 0.0015285280000000012, 0.0015285280000000012, 0.0015285420000000008, 0.00152854200000...</msg>
<status status="PASS" starttime="20201029 09:33:47.086" endtime="20201029 09:33:47.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.094" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:47.093" endtime="20201029 09:33:47.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.097" level="INFO">VALUE: [0.0015285140000000016, 0.0015285550000000009, 0.0015285280000000012, 0.001528583, 0.0015285280000000012, 0.0015285280000000012, 0.0015285280000000012, 0.0015285420000000008, 0.0015285420000000008, 0.001528583, 0.001528583, 0.0015285420000000008, 0.0015285410000000013, 0.0015286109999999992, 0.0015285420000000008, 0.0015285280000000012, 0.0015474720000000011, 0.0015285410000000013, 0.001528471999999996, 0.0015285420000000077, 0.0015285410000000083, 0.0015285280000000012, 0.001528471999999989, 0.0015285689999999935, 0.0015285280000000012, 0.0015285140000000086, 0.0015285270000000017, 0.0015285279999999873, 0.0015285139999999947, 0.0015285270000000017, 0.0015285140000000086, 0.0015285280000000012, 0.0015285270000000017, 0.0015285280000000012, 0.0015285419999999939, 0.0015285270000000017, 0.0015562360000000025, 0.0015285280000000012, 0.0015285419999999939, 0.0015285280000000012, 0.0015285270000000017, 0.0015285280000000012, 0.0015285280000000012, 0.0015285139999999947, 0.001528471999999989, 0.0015285550000000009, 0.0015285410000000083, 0.0015285280000000012, 0.0015285280000000012, 0.0015285280000000012]</msg>
<status status="PASS" starttime="20201029 09:33:47.095" endtime="20201029 09:33:47.097"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.090" endtime="20201029 09:33:47.098"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.655" endtime="20201029 09:33:47.098"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.626" endtime="20201029 09:33:47.099"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:47.101" endtime="20201029 09:33:47.120"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.100" endtime="20201029 09:33:47.121"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.130" endtime="20201029 09:33:47.222"></status>
</kw>
<msg timestamp="20201029 09:33:47.222" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:47.128" endtime="20201029 09:33:47.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.225" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:47.223" endtime="20201029 09:33:47.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.226" endtime="20201029 09:33:47.228"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.125" endtime="20201029 09:33:47.228"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.123" endtime="20201029 09:33:47.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.236" endtime="20201029 09:33:47.544"></status>
</kw>
<msg timestamp="20201029 09:33:47.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018258694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019845556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:47.234" endtime="20201029 09:33:47.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018258694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019845556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:47.548" endtime="20201029 09:33:47.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.556" endtime="20201029 09:33:47.558"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.231" endtime="20201029 09:33:47.558"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.229" endtime="20201029 09:33:47.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:47.563" level="INFO">${PHILIP_RES} = [{'diff': 0.0015868620000000014}, {'diff': 0.0015868889999999976}, {'diff': 0.0015869030000000006}, {'diff': 0.001586889000000001}, {'diff': 0.001586889000000001}, {'diff': 0.001586889000000001}, {'di...</msg>
<status status="PASS" starttime="20201029 09:33:47.560" endtime="20201029 09:33:47.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:47.567" level="INFO">${RESULT} = {'diff': [0.0015868620000000014, 0.0015868889999999976, 0.0015869030000000006, 0.001586889000000001, 0.001586889000000001, 0.001586889000000001, 0.0015868889999999976, 0.0015868880000000016, 0.0015868...</msg>
<status status="PASS" starttime="20201029 09:33:47.564" endtime="20201029 09:33:47.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.572" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:47.571" endtime="20201029 09:33:47.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.574" level="INFO">VALUE: [0.0015868620000000014, 0.0015868889999999976, 0.0015869030000000006, 0.001586889000000001, 0.001586889000000001, 0.001586889000000001, 0.0015868889999999976, 0.0015868880000000016, 0.001586889000000001, 0.0015868889999999941, 0.0015869030000000006, 0.0015868750000000015, 0.001586889000000001, 0.0015869449999999993, 0.001586889000000001, 0.001586889000000001, 0.001639083999999999, 0.001586889000000001, 0.001586889000000001, 0.0015869030000000006, 0.0015869030000000006, 0.0015869309999999998, 0.001586889000000001, 0.0015868480000000018, 0.0015869030000000006, 0.0015869170000000002, 0.0015869030000000006, 0.0015868749999999876, 0.0015868889999999941, 0.0015868889999999941, 0.0015868750000000015, 0.001586889000000008, 0.0015868750000000015, 0.001586889000000008, 0.0015869169999999932, 0.0015869169999999932, 0.001620708999999998, 0.0015868889999999941, 0.001586889000000008, 0.0015869169999999932, 0.0015869450000000063, 0.0015869030000000006, 0.0015869309999999998, 0.0015868879999999946, 0.0015868889999999941, 0.0015868059999999962, 0.0015868889999999941, 0.0015869030000000006, 0.001586889000000008, 0.0015869030000000006]</msg>
<status status="PASS" starttime="20201029 09:33:47.573" endtime="20201029 09:33:47.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.568" endtime="20201029 09:33:47.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.122" endtime="20201029 09:33:47.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.099" endtime="20201029 09:33:47.580"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:47.583" endtime="20201029 09:33:47.603"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.581" endtime="20201029 09:33:47.603"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.612" endtime="20201029 09:33:47.708"></status>
</kw>
<msg timestamp="20201029 09:33:47.708" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:47.610" endtime="20201029 09:33:47.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.711" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:47.710" endtime="20201029 09:33:47.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.712" endtime="20201029 09:33:47.715"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.607" endtime="20201029 09:33:47.715"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.605" endtime="20201029 09:33:47.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.723" endtime="20201029 09:33:48.010"></status>
</kw>
<msg timestamp="20201029 09:33:48.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01820925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:47.721" endtime="20201029 09:33:48.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01820925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:48.015" endtime="20201029 09:33:48.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.023" endtime="20201029 09:33:48.024"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.718" endtime="20201029 09:33:48.025"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.716" endtime="20201029 09:33:48.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:48.029" level="INFO">${PHILIP_RES} = [{'diff': 0.0016463329999999998}, {'diff': 0.0016463749999999985}, {'diff': 0.0016463469999999994}, {'diff': 0.0016463329999999998}, {'diff': 0.001646388999999998}, {'diff': 0.0016463060000000002}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:48.026" endtime="20201029 09:33:48.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:48.034" level="INFO">${RESULT} = {'diff': [0.0016463329999999998, 0.0016463749999999985, 0.0016463469999999994, 0.0016463329999999998, 0.001646388999999998, 0.0016463060000000002, 0.001646263999999998, 0.0016463329999999964, 0.001646...</msg>
<status status="PASS" starttime="20201029 09:33:48.030" endtime="20201029 09:33:48.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.038" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:48.037" endtime="20201029 09:33:48.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.041" level="INFO">VALUE: [0.0016463329999999998, 0.0016463749999999985, 0.0016463469999999994, 0.0016463329999999998, 0.001646388999999998, 0.0016463060000000002, 0.001646263999999998, 0.0016463329999999964, 0.0016463329999999998, 0.0016463199999999997, 0.0016463329999999998, 0.0016463469999999994, 0.0016463470000000063, 0.0016463199999999997, 0.0016463199999999997, 0.0016463329999999998, 0.0016463329999999998, 0.0016463340000000062, 0.0016463339999999993, 0.0016463469999999994, 0.0016463469999999994, 0.0016932779999999995, 0.0016463190000000003, 0.0016463469999999994, 0.0016463469999999994, 0.0016463340000000062, 0.0016463329999999998, 0.0016463470000000063, 0.0016463329999999998, 0.0016463339999999993, 0.0016463199999999928, 0.0016463329999999998, 0.0016463190000000072, 0.0016463329999999998, 0.0016463339999999993, 0.0016463329999999998, 0.0016463610000000128, 0.0016463329999999998, 0.0016463199999999928, 0.0016463329999999998, 0.0016845280000000046, 0.0016463339999999993, 0.0016463329999999998, 0.0016463470000000063, 0.0016463470000000063, 0.0016463480000000058, 0.0016463199999999928, 0.0016463329999999998, 0.0016463189999999933, 0.0016463200000000067]</msg>
<status status="PASS" starttime="20201029 09:33:48.039" endtime="20201029 09:33:48.042"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.035" endtime="20201029 09:33:48.043"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.604" endtime="20201029 09:33:48.043"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.581" endtime="20201029 09:33:48.044"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.350" endtime="20201029 09:33:48.044"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:25.975" endtime="20201029 09:33:48.044" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:33:05.043" endtime="20201029 09:33:48.053"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 09:33:02.881" endtime="20201029 09:33:48.084"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="10" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="10" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
