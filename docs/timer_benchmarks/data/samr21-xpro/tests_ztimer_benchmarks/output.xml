<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201030 18:31:18.599" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.875" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:31:19.892" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:31:21.930" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:31:19.871" endtime="20201030 18:31:21.932"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.938" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:31:21.934" endtime="20201030 18:31:21.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.868" endtime="20201030 18:31:21.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:21.947" endtime="20201030 18:31:22.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.944" endtime="20201030 18:31:22.296"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.331" endtime="20201030 18:31:22.347"></status>
</kw>
<msg timestamp="20201030 18:31:22.348" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.327" endtime="20201030 18:31:22.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.354" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.350" endtime="20201030 18:31:22.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.361" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:22.357" endtime="20201030 18:31:22.362"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:22.321" endtime="20201030 18:31:22.364"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:22.314" endtime="20201030 18:31:22.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.311" endtime="20201030 18:31:22.367"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:22.375" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:22.374" endtime="20201030 18:31:22.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.369" endtime="20201030 18:31:22.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.309" endtime="20201030 18:31:22.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.307" endtime="20201030 18:31:22.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.379" endtime="20201030 18:31:22.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.303" endtime="20201030 18:31:22.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.386" endtime="20201030 18:31:22.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.298" endtime="20201030 18:31:22.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.864" endtime="20201030 18:31:22.393"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.407" endtime="20201030 18:31:22.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.404" endtime="20201030 18:31:22.431"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.466" endtime="20201030 18:31:22.482"></status>
</kw>
<msg timestamp="20201030 18:31:22.483" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.463" endtime="20201030 18:31:22.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.489" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.485" endtime="20201030 18:31:22.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.496" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:22.492" endtime="20201030 18:31:22.497"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:22.455" endtime="20201030 18:31:22.498"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:22.449" endtime="20201030 18:31:22.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.444" endtime="20201030 18:31:22.501"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:22.509" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:22.507" endtime="20201030 18:31:22.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.503" endtime="20201030 18:31:22.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.443" endtime="20201030 18:31:22.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.441" endtime="20201030 18:31:22.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.512" endtime="20201030 18:31:22.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.437" endtime="20201030 18:31:22.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.432" endtime="20201030 18:31:22.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.401" endtime="20201030 18:31:22.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.536" endtime="20201030 18:31:22.547"></status>
</kw>
<msg timestamp="20201030 18:31:22.548" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.533" endtime="20201030 18:31:22.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.554" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.550" endtime="20201030 18:31:22.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.556" endtime="20201030 18:31:22.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.526" endtime="20201030 18:31:22.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.521" endtime="20201030 18:31:22.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.573" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 18:31:22.570" endtime="20201030 18:31:22.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.577" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201030 18:31:22.575" endtime="20201030 18:31:22.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.564" endtime="20201030 18:31:22.579"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:22.394" endtime="20201030 18:31:22.581" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:31:18.882" endtime="20201030 18:31:22.587"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.720" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:31:22.735" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:31:24.755" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:31:22.716" endtime="20201030 18:31:24.757"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.762" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:31:24.759" endtime="20201030 18:31:24.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.713" endtime="20201030 18:31:24.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:24.769" endtime="20201030 18:31:25.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.766" endtime="20201030 18:31:25.108"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.141" endtime="20201030 18:31:25.157"></status>
</kw>
<msg timestamp="20201030 18:31:25.158" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.137" endtime="20201030 18:31:25.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.164" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.160" endtime="20201030 18:31:25.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.171" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:25.167" endtime="20201030 18:31:25.172"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:25.131" endtime="20201030 18:31:25.174"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:25.125" endtime="20201030 18:31:25.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.121" endtime="20201030 18:31:25.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:25.184" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:25.183" endtime="20201030 18:31:25.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.178" endtime="20201030 18:31:25.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.119" endtime="20201030 18:31:25.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.117" endtime="20201030 18:31:25.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.187" endtime="20201030 18:31:25.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.113" endtime="20201030 18:31:25.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.194" endtime="20201030 18:31:25.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.110" endtime="20201030 18:31:25.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.710" endtime="20201030 18:31:25.200"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:25.214" endtime="20201030 18:31:25.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.210" endtime="20201030 18:31:25.237"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.335" endtime="20201030 18:31:25.351"></status>
</kw>
<msg timestamp="20201030 18:31:25.352" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.332" endtime="20201030 18:31:25.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.359" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.355" endtime="20201030 18:31:25.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.366" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:25.362" endtime="20201030 18:31:25.366"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:25.324" endtime="20201030 18:31:25.368"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:25.254" endtime="20201030 18:31:25.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.251" endtime="20201030 18:31:25.371"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:25.378" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:25.377" endtime="20201030 18:31:25.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.372" endtime="20201030 18:31:25.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.249" endtime="20201030 18:31:25.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.247" endtime="20201030 18:31:25.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.382" endtime="20201030 18:31:25.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.243" endtime="20201030 18:31:25.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.239" endtime="20201030 18:31:25.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.207" endtime="20201030 18:31:25.389"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.412" endtime="20201030 18:31:25.422"></status>
</kw>
<msg timestamp="20201030 18:31:25.424" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.408" endtime="20201030 18:31:25.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.430" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.426" endtime="20201030 18:31:25.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.432" endtime="20201030 18:31:25.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.401" endtime="20201030 18:31:25.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.396" endtime="20201030 18:31:25.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.457" endtime="20201030 18:31:25.839"></status>
</kw>
<msg timestamp="20201030 18:31:25.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.187879569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.187880042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.454" endtime="20201030 18:31:25.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.187879569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.187880042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.848" endtime="20201030 18:31:25.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.867" endtime="20201030 18:31:25.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.445" endtime="20201030 18:31:25.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.440" endtime="20201030 18:31:25.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:25.939" level="INFO">${debug} = {'source_diff': [0, 4.7300000000083386e-07, 9.763999999995443e-06, 4.720000000013602e-07, 1.072200000001855e-05, 4.720000000013602e-07, 1.0791999999981705e-05, 4.720000000013602e-07, 9.958000000004352...</msg>
<status status="PASS" starttime="20201030 18:31:25.876" endtime="20201030 18:31:25.940"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.942" endtime="20201030 18:31:25.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.960" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:25.956" endtime="20201030 18:31:25.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.971" level="INFO">VALUE: {'source_diff': [0, 4.7300000000083386e-07, 9.763999999995443e-06, 4.720000000013602e-07, 1.072200000001855e-05, 4.720000000013602e-07, 1.0791999999981705e-05, 4.720000000013602e-07, 9.958000000004352e-06, 4.7300000000083386e-07, 9.36099999998552e-06, 4.720000000013602e-07, 1.0694000000005532e-05, 4.7300000000083386e-07, 9.430000000004712e-06, 4.720000000013602e-07, 8.083999999991542e-06, 4.720000000013602e-07, 1.1125000000000718e-05, 4.720000000013602e-07, 8.610999999991709e-06, 4.7300000000083386e-07, 9.19400000001791e-06, 4.720000000013602e-07, 1.0527999999981885e-05, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 1.079200000000946e-05, 4.720000000013602e-07, 1.0193999999991155e-05, 4.7300000000083386e-07, 8.40200000001845e-06, 4.7300000000083386e-07, 9.540999999974042e-06, 4.720000000013602e-07, 1.0681000000012375e-05, 4.720000000013602e-07, 1.1014000000003632e-05, 4.720000000013602e-07, 8.735999999981425e-06, 4.7300000000083386e-07, 8.068999999999438e-06, 4.720000000013602e-07, 9.139000000019104e-06, 4.720000000013602e-07, 8.62499999998434e-06, 4.7300000000083386e-07, 8.707999999996163e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 1.0805000000002618e-05, 4.7300000000083386e-07, 1.1111000000008087e-05, 4.720000000013602e-07, 1.1222000000005172e-05, 4.720000000013602e-07, 9.458999999989448e-06, 4.720000000013602e-07, 8.818999999993249e-06, 4.7300000000083386e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 8.19400000001691e-06, 4.7300000000083386e-07, 1.0457999999990975e-05, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.083299999998788e-05, 4.7300000000083386e-07, 9.915999999998704e-06, 4.7300000000083386e-07, 1.0388000000000064e-05, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 9.874999999992529e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.720000000013602e-07, 1.0889000000013915e-05, 4.7300000000083386e-07, 1.029099999999561e-05, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 1.0513999999989254e-05, 4.720000000013602e-07, 1.079200000000946e-05, 4.720000000013602e-07, 1.1207999999984786e-05, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.187879569, 0.187880042, 0.187889806, 0.187890278, 0.187901, 0.187901472, 0.187912264, 0.187912736, 0.187922694, 0.187923167, 0.187932528, 0.187933, 0.187943694, 0.187944167, 0.187953597, 0.187954069, 0.187962153, 0.187962625, 0.18797375, 0.187974222, 0.187982833, 0.187983306, 0.1879925, 0.187992972, 0.1880035, 0.188003972, 0.188013306, 0.188013778, 0.188024278, 0.18802475, 0.188035542, 0.188036014, 0.188046208, 0.188046681, 0.188055083, 0.188055556, 0.188065097, 0.188065569, 0.18807625, 0.188076722, 0.188087736, 0.188088208, 0.188096944, 0.188097417, 0.188105486, 0.188105958, 0.188115097, 0.188115569, 0.188124194, 0.188124667, 0.188133375, 0.188133847, 0.188141917, 0.188142389, 0.188153194, 0.188153667, 0.188164778, 0.18816525, 0.188176472, 0.188176944, 0.188186403, 0.188186875, 0.188195694, 0.188196167, 0.188206667, 0.188207139, 0.188215333, 0.188215806, 0.188226264, 0.188226736, 0.188236389, 0.188236861, 0.188247694, 0.188248167, 0.188258083, 0.188258556, 0.188268944, 0.188269417, 0.188278542, 0.188279014, 0.188288667, 0.188289139, 0.188299736, 0.188300208, 0.188310083, 0.188310556, 0.188319472, 0.188319944, 0.188330833, 0.188331306, 0.188341597, 0.188342069, 0.188350667, 0.188351139, 0.188361653, 0.188362125, 0.188372917, 0.188373389, 0.188384597, 0.188385069], 'sourcediff': [0, 4.7300000000083386e-07, 9.763999999995443e-06, 4.720000000013602e-07, 1.072200000001855e-05, 4.720000000013602e-07, 1.0791999999981705e-05, 4.720000000013602e-07, 9.958000000004352e-06, 4.7300000000083386e-07, 9.36099999998552e-06, 4.720000000013602e-07, 1.0694000000005532e-05, 4.7300000000083386e-07, 9.430000000004712e-06, 4.720000000013602e-07, 8.083999999991542e-06, 4.720000000013602e-07, 1.1125000000000718e-05, 4.720000000013602e-07, 8.610999999991709e-06, 4.7300000000083386e-07, 9.19400000001791e-06, 4.720000000013602e-07, 1.0527999999981885e-05, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 1.079200000000946e-05, 4.720000000013602e-07, 1.0193999999991155e-05, 4.7300000000083386e-07, 8.40200000001845e-06, 4.7300000000083386e-07, 9.540999999974042e-06, 4.720000000013602e-07, 1.0681000000012375e-05, 4.720000000013602e-07, 1.1014000000003632e-05, 4.720000000013602e-07, 8.735999999981425e-06, 4.7300000000083386e-07, 8.068999999999438e-06, 4.720000000013602e-07, 9.139000000019104e-06, 4.720000000013602e-07, 8.62499999998434e-06, 4.7300000000083386e-07, 8.707999999996163e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 1.0805000000002618e-05, 4.7300000000083386e-07, 1.1111000000008087e-05, 4.720000000013602e-07, 1.1222000000005172e-05, 4.720000000013602e-07, 9.458999999989448e-06, 4.720000000013602e-07, 8.818999999993249e-06, 4.7300000000083386e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 8.19400000001691e-06, 4.7300000000083386e-07, 1.0457999999990975e-05, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.083299999998788e-05, 4.7300000000083386e-07, 9.915999999998704e-06, 4.7300000000083386e-07, 1.0388000000000064e-05, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 9.874999999992529e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.720000000013602e-07, 1.0889000000013915e-05, 4.7300000000083386e-07, 1.029099999999561e-05, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 1.0513999999989254e-05, 4.720000000013602e-07, 1.079200000000946e-05, 4.720000000013602e-07, 1.1207999999984786e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:25.963" endtime="20201030 18:31:25.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.949" endtime="20201030 18:31:25.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:25.991" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 18:31:25.979" endtime="20201030 18:31:25.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:26.005" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:31:25.994" endtime="20201030 18:31:26.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.019" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:26.016" endtime="20201030 18:31:26.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.027" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:31:26.023" endtime="20201030 18:31:26.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.008" endtime="20201030 18:31:26.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.044" endtime="20201030 18:31:26.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.039" endtime="20201030 18:31:26.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.035" endtime="20201030 18:31:26.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.393" endtime="20201030 18:31:26.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.392" endtime="20201030 18:31:26.073"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.107" endtime="20201030 18:31:26.120"></status>
</kw>
<msg timestamp="20201030 18:31:26.121" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.099" endtime="20201030 18:31:26.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.131" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.125" endtime="20201030 18:31:26.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.135" endtime="20201030 18:31:26.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.088" endtime="20201030 18:31:26.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.080" endtime="20201030 18:31:26.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.159" endtime="20201030 18:31:26.531"></status>
</kw>
<msg timestamp="20201030 18:31:26.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053146611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053147083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.156" endtime="20201030 18:31:26.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053146611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053147083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.541" endtime="20201030 18:31:26.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.560" endtime="20201030 18:31:26.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.149" endtime="20201030 18:31:26.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.144" endtime="20201030 18:31:26.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:26.622" level="INFO">${debug} = {'source_diff': [0, 4.7199999999442133e-07, 9.459000000003326e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7199999999442133e-07, 8.195000000002506e-06, 4.720000000013602e-07, 9.86099999999989...</msg>
<status status="PASS" starttime="20201030 18:31:26.569" endtime="20201030 18:31:26.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.625" endtime="20201030 18:31:26.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.637" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:26.635" endtime="20201030 18:31:26.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.646" level="INFO">VALUE: {'source_diff': [0, 4.7199999999442133e-07, 9.459000000003326e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7199999999442133e-07, 8.195000000002506e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 1.0819999999994723e-05, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 1.1013999999996693e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 9.556000000000842e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.7300000000083386e-07, 9.250000000002312e-06, 4.720000000013602e-07, 9.429999999997773e-06, 4.7300000000083386e-07, 1.027699999999604e-05, 4.7300000000083386e-07, 9.444000000004282e-06, 4.7199999999442133e-07, 8.389000000004476e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.7300000000083386e-07, 8.513000000001658e-06, 4.7300000000083386e-07, 1.0263999999995943e-05, 4.720000000013602e-07, 8.194000000003032e-06, 4.7199999999442133e-07, 1.1223000000004646e-05, 4.720000000013602e-07, 9.554999999994429e-06, 4.7300000000083386e-07, 8.180000000003462e-06, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 1.1110999999994209e-05, 4.720000000013602e-07, 8.403000000004046e-06, 4.7199999999442133e-07, 9.986000000003492e-06, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 7.972999999994457e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 9.221999999996233e-06, 4.720000000013602e-07, 1.1139000000000288e-05, 4.720000000013602e-07, 1.0806000000002092e-05, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7199999999442133e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 9.555000000001368e-06, 4.7199999999442133e-07, 8.667000000003866e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.7300000000083386e-07, 8.707999999996163e-06, 4.720000000013602e-07, 1.0695000000005006e-05, 4.7199999999442133e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.053146611, 0.053147083, 0.053156542, 0.053157014, 0.053167389, 0.053167861, 0.053176056, 0.053176528, 0.053186389, 0.053186861, 0.053196194, 0.053196667, 0.05320475, 0.053205222, 0.053216042, 0.053216514, 0.053225014, 0.053225486, 0.053235667, 0.053236139, 0.053247153, 0.053247625, 0.05325675, 0.053257222, 0.053265625, 0.053266097, 0.053275653, 0.053276125, 0.053286611, 0.053287083, 0.053296944, 0.053297417, 0.053306667, 0.053307139, 0.053316569, 0.053317042, 0.053327319, 0.053327792, 0.053337236, 0.053337708, 0.053346097, 0.053346569, 0.053356333, 0.053356806, 0.053365319, 0.053365792, 0.053376056, 0.053376528, 0.053384722, 0.053385194, 0.053396417, 0.053396889, 0.053406444, 0.053406917, 0.053415097, 0.053415569, 0.053424167, 0.053424639, 0.05343575, 0.053436222, 0.053444625, 0.053445097, 0.053455083, 0.053455556, 0.053465722, 0.053466194, 0.053474486, 0.053474958, 0.053482931, 0.053483403, 0.053493264, 0.053493736, 0.053502556, 0.053503028, 0.05351225, 0.053512722, 0.053523861, 0.053524333, 0.053535139, 0.053535611, 0.053544528, 0.053545, 0.053555597, 0.053556069, 0.053564569, 0.053565042, 0.053574181, 0.053574653, 0.053583458, 0.053583931, 0.053593486, 0.053593958, 0.053602625, 0.053603097, 0.053613833, 0.053614306, 0.053623014, 0.053623486, 0.053634181, 0.053634653], 'sourcediff': [0, 4.7199999999442133e-07, 9.459000000003326e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7199999999442133e-07, 8.195000000002506e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 1.0819999999994723e-05, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 1.1013999999996693e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 9.556000000000842e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.7300000000083386e-07, 9.250000000002312e-06, 4.720000000013602e-07, 9.429999999997773e-06, 4.7300000000083386e-07, 1.027699999999604e-05, 4.7300000000083386e-07, 9.444000000004282e-06, 4.7199999999442133e-07, 8.389000000004476e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.7300000000083386e-07, 8.513000000001658e-06, 4.7300000000083386e-07, 1.0263999999995943e-05, 4.720000000013602e-07, 8.194000000003032e-06, 4.7199999999442133e-07, 1.1223000000004646e-05, 4.720000000013602e-07, 9.554999999994429e-06, 4.7300000000083386e-07, 8.180000000003462e-06, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 1.1110999999994209e-05, 4.720000000013602e-07, 8.403000000004046e-06, 4.7199999999442133e-07, 9.986000000003492e-06, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 7.972999999994457e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 9.221999999996233e-06, 4.720000000013602e-07, 1.1139000000000288e-05, 4.720000000013602e-07, 1.0806000000002092e-05, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7199999999442133e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 9.555000000001368e-06, 4.7199999999442133e-07, 8.667000000003866e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.7300000000083386e-07, 8.707999999996163e-06, 4.720000000013602e-07, 1.0695000000005006e-05, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:26.639" endtime="20201030 18:31:26.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.630" endtime="20201030 18:31:26.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:26.660" level="INFO">${RESULT} = [{'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}...</msg>
<status status="PASS" starttime="20201030 18:31:26.652" endtime="20201030 18:31:26.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:26.673" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:31:26.663" endtime="20201030 18:31:26.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.683" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:26.681" endtime="20201030 18:31:26.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.688" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201030 18:31:26.685" endtime="20201030 18:31:26.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.674" endtime="20201030 18:31:26.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.700" endtime="20201030 18:31:26.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.696" endtime="20201030 18:31:26.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.693" endtime="20201030 18:31:26.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.076" endtime="20201030 18:31:26.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.074" endtime="20201030 18:31:26.725"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.746" endtime="20201030 18:31:26.757"></status>
</kw>
<msg timestamp="20201030 18:31:26.758" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.743" endtime="20201030 18:31:26.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.764" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.760" endtime="20201030 18:31:26.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.766" endtime="20201030 18:31:26.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.735" endtime="20201030 18:31:26.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.731" endtime="20201030 18:31:26.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.790" endtime="20201030 18:31:27.135"></status>
</kw>
<msg timestamp="20201030 18:31:27.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03611625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036116722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:26.786" endtime="20201030 18:31:27.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03611625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036116722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:27.144" endtime="20201030 18:31:27.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.164" endtime="20201030 18:31:27.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.779" endtime="20201030 18:31:27.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.775" endtime="20201030 18:31:27.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:27.227" level="INFO">${debug} = {'source_diff': [0, 4.7199999999442133e-07, 9.153000000004796e-06, 4.720000000013602e-07, 1.0777999999996013e-05, 4.720000000013602e-07, 1.1221999999998233e-05, 4.7300000000083386e-07, 8.6109999999986...</msg>
<status status="PASS" starttime="20201030 18:31:27.172" endtime="20201030 18:31:27.228"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.230" endtime="20201030 18:31:27.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.242" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:27.240" endtime="20201030 18:31:27.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.251" level="INFO">VALUE: {'source_diff': [0, 4.7199999999442133e-07, 9.153000000004796e-06, 4.720000000013602e-07, 1.0777999999996013e-05, 4.720000000013602e-07, 1.1221999999998233e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.7300000000083386e-07, 9.763999999995443e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 1.1139000000000288e-05, 4.720000000013602e-07, 9.221999999996233e-06, 4.7300000000083386e-07, 1.0805000000002618e-05, 4.7199999999442133e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 1.1027000000003728e-05, 4.7300000000083386e-07, 9.429999999997773e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.110999999999148e-06, 4.720000000013602e-07, 8.722000000002672e-06, 4.7300000000083386e-07, 9.235999999995803e-06, 4.720000000013602e-07, 9.443999999997343e-06, 4.7300000000083386e-07, 8.944000000003782e-06, 4.720000000013602e-07, 7.958999999994887e-06, 4.720000000013602e-07, 9.472000000003422e-06, 4.7199999999442133e-07, 1.0167000000005366e-05, 4.7199999999442133e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 8.195000000002506e-06, 4.7199999999442133e-07, 1.0694000000005532e-05, 4.7199999999442133e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7199999999442133e-07, 8.403000000004046e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.7199999999442133e-07, 8.083000000005947e-06, 4.7299999999389497e-07, 9.861000000006837e-06, 4.7199999999442133e-07, 8.514000000001132e-06, 4.720000000013602e-07, 1.1139000000000288e-05, 4.720000000013602e-07, 9.624999999999218e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.7199999999442133e-07, 8.542000000000272e-06, 4.720000000013602e-07, 8.695000000003006e-06, 4.720000000013602e-07, 1.0999999999997123e-05, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 1.1222999999997707e-05, 4.720000000013602e-07, 9.333000000000258e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 8.514000000001132e-06, 4.720000000013602e-07, 1.1013999999996693e-05, 4.720000000013602e-07, 1.0792000000002522e-05, 4.7199999999442133e-07], 'eventtime': [0.03611625, 0.036116722, 0.036125875, 0.036126347, 0.036137125, 0.036137597, 0.036148819, 0.036149292, 0.036157903, 0.036158375, 0.036168236, 0.036168708, 0.036178569, 0.036179042, 0.036188806, 0.036189278, 0.036197264, 0.036197736, 0.036208875, 0.036209347, 0.036218569, 0.036219042, 0.036229847, 0.036230319, 0.036240694, 0.036241167, 0.036252194, 0.036252667, 0.036262097, 0.036262569, 0.036272333, 0.036272806, 0.036282167, 0.036282639, 0.03629175, 0.036292222, 0.036300944, 0.036301417, 0.036310653, 0.036311125, 0.036320569, 0.036321042, 0.036329986, 0.036330458, 0.036338417, 0.036338889, 0.036348361, 0.036348833, 0.036359, 0.036359472, 0.036370264, 0.036370736, 0.036378931, 0.036379403, 0.036390097, 0.036390569, 0.036400958, 0.036401431, 0.036410042, 0.036410514, 0.036420792, 0.036421264, 0.036431861, 0.036432333, 0.036440736, 0.036441208, 0.036449514, 0.036449986, 0.036458069, 0.036458542, 0.036468403, 0.036468875, 0.036477389, 0.036477861, 0.036489, 0.036489472, 0.036499097, 0.036499569, 0.036510472, 0.036510944, 0.036519486, 0.036519958, 0.036528653, 0.036529125, 0.036540125, 0.036540597, 0.036551097, 0.036551569, 0.036562792, 0.036563264, 0.036572597, 0.036573069, 0.036582944, 0.036583417, 0.036591931, 0.036592403, 0.036603417, 0.036603889, 0.036614681, 0.036615153], 'sourcediff': [0, 4.7199999999442133e-07, 9.153000000004796e-06, 4.720000000013602e-07, 1.0777999999996013e-05, 4.720000000013602e-07, 1.1221999999998233e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.7300000000083386e-07, 9.763999999995443e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 1.1139000000000288e-05, 4.720000000013602e-07, 9.221999999996233e-06, 4.7300000000083386e-07, 1.0805000000002618e-05, 4.7199999999442133e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 1.1027000000003728e-05, 4.7300000000083386e-07, 9.429999999997773e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.110999999999148e-06, 4.720000000013602e-07, 8.722000000002672e-06, 4.7300000000083386e-07, 9.235999999995803e-06, 4.720000000013602e-07, 9.443999999997343e-06, 4.7300000000083386e-07, 8.944000000003782e-06, 4.720000000013602e-07, 7.958999999994887e-06, 4.720000000013602e-07, 9.472000000003422e-06, 4.7199999999442133e-07, 1.0167000000005366e-05, 4.7199999999442133e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 8.195000000002506e-06, 4.7199999999442133e-07, 1.0694000000005532e-05, 4.7199999999442133e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7199999999442133e-07, 8.403000000004046e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.7199999999442133e-07, 8.083000000005947e-06, 4.7299999999389497e-07, 9.861000000006837e-06, 4.7199999999442133e-07, 8.514000000001132e-06, 4.720000000013602e-07, 1.1139000000000288e-05, 4.720000000013602e-07, 9.624999999999218e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.7199999999442133e-07, 8.542000000000272e-06, 4.720000000013602e-07, 8.695000000003006e-06, 4.720000000013602e-07, 1.0999999999997123e-05, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 1.1222999999997707e-05, 4.720000000013602e-07, 9.333000000000258e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 8.514000000001132e-06, 4.720000000013602e-07, 1.1013999999996693e-05, 4.720000000013602e-07, 1.0792000000002522e-05, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:27.244" endtime="20201030 18:31:27.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.234" endtime="20201030 18:31:27.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:27.265" level="INFO">${RESULT} = [{'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 18:31:27.257" endtime="20201030 18:31:27.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:27.275" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:31:27.268" endtime="20201030 18:31:27.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.285" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:27.283" endtime="20201030 18:31:27.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.291" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201030 18:31:27.287" endtime="20201030 18:31:27.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.277" endtime="20201030 18:31:27.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:27.303" endtime="20201030 18:31:27.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.298" endtime="20201030 18:31:27.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.296" endtime="20201030 18:31:27.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.727" endtime="20201030 18:31:27.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.726" endtime="20201030 18:31:27.328"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.353" endtime="20201030 18:31:27.364"></status>
</kw>
<msg timestamp="20201030 18:31:27.366" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.349" endtime="20201030 18:31:27.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.373" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.368" endtime="20201030 18:31:27.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.376" endtime="20201030 18:31:27.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.338" endtime="20201030 18:31:27.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.333" endtime="20201030 18:31:27.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.403" endtime="20201030 18:31:27.755"></status>
</kw>
<msg timestamp="20201030 18:31:27.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040372917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040373389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.399" endtime="20201030 18:31:27.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040372917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040373389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.765" endtime="20201030 18:31:27.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.784" endtime="20201030 18:31:27.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.392" endtime="20201030 18:31:27.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.386" endtime="20201030 18:31:27.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:27.847" level="INFO">${debug} = {'source_diff': [0, 4.720000000013602e-07, 7.971999999994983e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.7199999999442133e-07, 1.1014000000003632e-05, 4.720000000013602e-07, 9.888999999999037...</msg>
<status status="PASS" starttime="20201030 18:31:27.793" endtime="20201030 18:31:27.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.849" endtime="20201030 18:31:27.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.861" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:27.859" endtime="20201030 18:31:27.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.870" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 7.971999999994983e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.7199999999442133e-07, 1.1014000000003632e-05, 4.720000000013602e-07, 9.888999999999037e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 1.1235999999997803e-05, 4.720000000013602e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 9.458999999996387e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 8.695000000003006e-06, 4.7199999999442133e-07, 1.1222000000005172e-05, 4.7199999999442133e-07, 8.61200000000506e-06, 4.7199999999442133e-07, 8.832999999999758e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.7300000000083386e-07, 8.930000000004212e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 1.1110999999994209e-05, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 9.014000000001632e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 1.1013999999996693e-05, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.207999999995663e-06, 4.7300000000083386e-07, 1.0679999999999024e-05, 4.720000000013602e-07, 1.0181000000004936e-05, 4.7199999999442133e-07, 9.972000000003922e-06, 4.7300000000083386e-07, 1.0915999999999704e-05, 4.7300000000083386e-07, 8.901999999998134e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 1.0598000000000551e-05, 4.720000000013602e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 8.472000000002422e-06, 4.720000000013602e-07, 9.958999999996887e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.0999999999997123e-05, 4.720000000013602e-07, 9.986000000003492e-06, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07, 9.888999999999037e-06, 4.7199999999442133e-07, 8.389000000004476e-06, 4.7300000000083386e-07, 8.291000000000548e-06, 4.7199999999442133e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.040372917, 0.040373389, 0.040381361, 0.040381833, 0.040391278, 0.04039175, 0.040402764, 0.040403236, 0.040413125, 0.040413597, 0.040423528, 0.040424, 0.040434694, 0.040435167, 0.040446403, 0.040446875, 0.040457986, 0.040458458, 0.040467917, 0.040468389, 0.040476486, 0.040476958, 0.040485653, 0.040486125, 0.040497347, 0.040497819, 0.040506431, 0.040506903, 0.040515736, 0.040516208, 0.040525333, 0.040525806, 0.040534736, 0.040535208, 0.040544875, 0.040545347, 0.040556458, 0.040556931, 0.04056575, 0.040566222, 0.040575361, 0.040575833, 0.040586514, 0.040586986, 0.040596, 0.040596472, 0.040607069, 0.040607542, 0.040617194, 0.040617667, 0.040628681, 0.040629153, 0.040637764, 0.040638236, 0.040646444, 0.040646917, 0.040657597, 0.040658069, 0.04066825, 0.040668722, 0.040678694, 0.040679167, 0.040690083, 0.040690556, 0.040699458, 0.040699931, 0.040708014, 0.040708486, 0.040717639, 0.040718111, 0.040727347, 0.040727819, 0.040737986, 0.040738458, 0.040749056, 0.040749528, 0.040760736, 0.040761208, 0.040770083, 0.040770556, 0.040779792, 0.040780264, 0.040788736, 0.040789208, 0.040799167, 0.040799639, 0.040808667, 0.040809139, 0.040820139, 0.040820611, 0.040830597, 0.040831069, 0.040839986, 0.040840458, 0.040850347, 0.040850819, 0.040859208, 0.040859681, 0.040867972, 0.040868444], 'sourcediff': [0, 4.720000000013602e-07, 7.971999999994983e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.7199999999442133e-07, 1.1014000000003632e-05, 4.720000000013602e-07, 9.888999999999037e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 1.1235999999997803e-05, 4.720000000013602e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 9.458999999996387e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 8.695000000003006e-06, 4.7199999999442133e-07, 1.1222000000005172e-05, 4.7199999999442133e-07, 8.61200000000506e-06, 4.7199999999442133e-07, 8.832999999999758e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.7300000000083386e-07, 8.930000000004212e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 1.1110999999994209e-05, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 9.014000000001632e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 1.1013999999996693e-05, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.207999999995663e-06, 4.7300000000083386e-07, 1.0679999999999024e-05, 4.720000000013602e-07, 1.0181000000004936e-05, 4.7199999999442133e-07, 9.972000000003922e-06, 4.7300000000083386e-07, 1.0915999999999704e-05, 4.7300000000083386e-07, 8.901999999998134e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 1.0598000000000551e-05, 4.720000000013602e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 8.472000000002422e-06, 4.720000000013602e-07, 9.958999999996887e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.0999999999997123e-05, 4.720000000013602e-07, 9.986000000003492e-06, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07, 9.888999999999037e-06, 4.7199999999442133e-07, 8.389000000004476e-06, 4.7300000000083386e-07, 8.291000000000548e-06, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:27.863" endtime="20201030 18:31:27.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.854" endtime="20201030 18:31:27.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:27.885" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:31:27.876" endtime="20201030 18:31:27.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:27.895" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 18:31:27.887" endtime="20201030 18:31:27.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.906" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:27.903" endtime="20201030 18:31:27.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.912" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201030 18:31:27.908" endtime="20201030 18:31:27.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.897" endtime="20201030 18:31:27.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:27.930" endtime="20201030 18:31:27.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.924" endtime="20201030 18:31:27.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.919" endtime="20201030 18:31:27.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.330" endtime="20201030 18:31:27.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.329" endtime="20201030 18:31:27.958"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.979" endtime="20201030 18:31:27.991"></status>
</kw>
<msg timestamp="20201030 18:31:27.992" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.975" endtime="20201030 18:31:27.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.998" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.994" endtime="20201030 18:31:27.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.001" endtime="20201030 18:31:28.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.968" endtime="20201030 18:31:28.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.963" endtime="20201030 18:31:28.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.025" endtime="20201030 18:31:28.379"></status>
</kw>
<msg timestamp="20201030 18:31:28.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038380389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038380861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.021" endtime="20201030 18:31:28.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038380389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038380861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.388" endtime="20201030 18:31:28.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.408" endtime="20201030 18:31:28.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.014" endtime="20201030 18:31:28.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.009" endtime="20201030 18:31:28.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:28.472" level="INFO">${debug} = {'source_diff': [0, 4.720000000013602e-07, 9.597000000000078e-06, 4.7300000000083386e-07, 1.0818999999995249e-05, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.088900000000003...</msg>
<status status="PASS" starttime="20201030 18:31:28.419" endtime="20201030 18:31:28.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.474" endtime="20201030 18:31:28.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.486" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:28.484" endtime="20201030 18:31:28.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.496" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 9.597000000000078e-06, 4.7300000000083386e-07, 1.0818999999995249e-05, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.7199999999442133e-07, 1.0695000000005006e-05, 4.720000000013602e-07, 8.806000000000092e-06, 4.7199999999442133e-07, 9.125000000005656e-06, 4.7199999999442133e-07, 8.111000000005086e-06, 4.7199999999442133e-07, 9.847999999999801e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 9.778000000001952e-06, 4.720000000013602e-07, 9.110999999999148e-06, 4.7300000000083386e-07, 9.665999999998454e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 1.026299999999647e-05, 4.7300000000083386e-07, 9.957999999997413e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.7300000000083386e-07, 8.180000000003462e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.7300000000083386e-07, 9.429999999997773e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.487000000001466e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.1221999999998233e-05, 4.7300000000083386e-07, 1.0999999999997123e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 8.708999999995637e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 1.1110999999994209e-05, 4.720000000013602e-07, 9.958000000004352e-06, 4.7299999999389497e-07, 8.722000000002672e-06, 4.720000000013602e-07, 8.486000000001992e-06, 4.7199999999442133e-07, 9.042000000000772e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.7300000000083386e-07, 1.079099999999611e-05, 4.7300000000083386e-07, 1.0291000000002548e-05, 4.7199999999442133e-07, 1.0167000000005366e-05, 4.7199999999442133e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.917000000004116e-06, 4.7199999999442133e-07, 8.514000000001132e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07], 'eventtime': [0.038380389, 0.038380861, 0.038390458, 0.038390931, 0.03840175, 0.038402222, 0.03841125, 0.038411722, 0.038422611, 0.038423083, 0.038433778, 0.03843425, 0.038443056, 0.038443528, 0.038452653, 0.038453125, 0.038461236, 0.038461708, 0.038471556, 0.038472028, 0.038480625, 0.038481097, 0.038490875, 0.038491347, 0.038500458, 0.038500931, 0.038510597, 0.038511069, 0.038521458, 0.038521931, 0.038532194, 0.038532667, 0.038542625, 0.038543097, 0.038551708, 0.038552181, 0.038560361, 0.038560833, 0.038571014, 0.038571486, 0.038580611, 0.038581083, 0.038590319, 0.038590792, 0.038600222, 0.038600694, 0.038611, 0.038611472, 0.038621222, 0.038621694, 0.038630181, 0.038630653, 0.038640514, 0.038640986, 0.038652208, 0.038652681, 0.038663681, 0.038664153, 0.038674014, 0.038674486, 0.038683931, 0.038684403, 0.038694681, 0.038695153, 0.03870325, 0.038703722, 0.038713375, 0.038713847, 0.038722556, 0.038723028, 0.038733306, 0.038733778, 0.038744889, 0.038745361, 0.038755319, 0.038755792, 0.038764514, 0.038764986, 0.038773472, 0.038773944, 0.038782986, 0.038783458, 0.038792694, 0.038793167, 0.038803958, 0.038804431, 0.038814722, 0.038815194, 0.038825361, 0.038825833, 0.038836222, 0.038836694, 0.038845611, 0.038846083, 0.038854597, 0.038855069, 0.038863153, 0.038863625, 0.038872125, 0.038872597], 'sourcediff': [0, 4.720000000013602e-07, 9.597000000000078e-06, 4.7300000000083386e-07, 1.0818999999995249e-05, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.7199999999442133e-07, 1.0695000000005006e-05, 4.720000000013602e-07, 8.806000000000092e-06, 4.7199999999442133e-07, 9.125000000005656e-06, 4.7199999999442133e-07, 8.111000000005086e-06, 4.7199999999442133e-07, 9.847999999999801e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 9.778000000001952e-06, 4.720000000013602e-07, 9.110999999999148e-06, 4.7300000000083386e-07, 9.665999999998454e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 1.026299999999647e-05, 4.7300000000083386e-07, 9.957999999997413e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.7300000000083386e-07, 8.180000000003462e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.7300000000083386e-07, 9.429999999997773e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.487000000001466e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.1221999999998233e-05, 4.7300000000083386e-07, 1.0999999999997123e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 8.708999999995637e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 1.1110999999994209e-05, 4.720000000013602e-07, 9.958000000004352e-06, 4.7299999999389497e-07, 8.722000000002672e-06, 4.720000000013602e-07, 8.486000000001992e-06, 4.7199999999442133e-07, 9.042000000000772e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.7300000000083386e-07, 1.079099999999611e-05, 4.7300000000083386e-07, 1.0291000000002548e-05, 4.7199999999442133e-07, 1.0167000000005366e-05, 4.7199999999442133e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.917000000004116e-06, 4.7199999999442133e-07, 8.514000000001132e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:28.489" endtime="20201030 18:31:28.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.479" endtime="20201030 18:31:28.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:28.510" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 18:31:28.501" endtime="20201030 18:31:28.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:28.520" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4....</msg>
<status status="PASS" starttime="20201030 18:31:28.512" endtime="20201030 18:31:28.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.531" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:28.529" endtime="20201030 18:31:28.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.537" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:31:28.534" endtime="20201030 18:31:28.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.522" endtime="20201030 18:31:28.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:28.549" endtime="20201030 18:31:28.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.544" endtime="20201030 18:31:28.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.542" endtime="20201030 18:31:28.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.960" endtime="20201030 18:31:28.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.959" endtime="20201030 18:31:28.574"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.605" endtime="20201030 18:31:28.620"></status>
</kw>
<msg timestamp="20201030 18:31:28.622" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.599" endtime="20201030 18:31:28.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.630" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.625" endtime="20201030 18:31:28.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.632" endtime="20201030 18:31:28.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.589" endtime="20201030 18:31:28.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.582" endtime="20201030 18:31:28.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.656" endtime="20201030 18:31:29.009"></status>
</kw>
<msg timestamp="20201030 18:31:29.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047864111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047864583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.652" endtime="20201030 18:31:29.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047864111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047864583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.018" endtime="20201030 18:31:29.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.037" endtime="20201030 18:31:29.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.645" endtime="20201030 18:31:29.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.641" endtime="20201030 18:31:29.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:29.101" level="INFO">${debug} = {'source_diff': [0, 4.720000000013602e-07, 8.749999999994873e-06, 4.7300000000083386e-07, 9.874999999999468e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 8.735999999995303e...</msg>
<status status="PASS" starttime="20201030 18:31:29.046" endtime="20201030 18:31:29.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.103" endtime="20201030 18:31:29.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.116" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:29.113" endtime="20201030 18:31:29.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.125" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 8.749999999994873e-06, 4.7300000000083386e-07, 9.874999999999468e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 8.735999999995303e-06, 4.720000000013602e-07, 8.681000000003436e-06, 4.720000000013602e-07, 9.027999999994263e-06, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 1.1222000000005172e-05, 4.7199999999442133e-07, 8.931000000003686e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 1.0999999999997123e-05, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 9.222999999995707e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 9.735999999996303e-06, 4.7300000000083386e-07, 1.0486000000003992e-05, 4.7199999999442133e-07, 9.847000000000328e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 1.0291000000002548e-05, 4.7300000000083386e-07, 1.0679999999999024e-05, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 1.1125000000000718e-05, 4.7199999999442133e-07, 1.0820000000001662e-05, 4.720000000013602e-07, 8.792000000000522e-06, 4.720000000013602e-07, 1.1125000000000718e-05, 4.7199999999442133e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 8.167000000003366e-06, 4.720000000013602e-07, 9.569000000000938e-06, 4.7199999999442133e-07, 1.0917000000006116e-05, 4.7199999999442133e-07, 9.528000000001702e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 1.0749999999996873e-05, 4.7300000000083386e-07, 8.236000000001742e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.7199999999442133e-07, 1.0528000000002702e-05, 4.720000000013602e-07, 8.152999999996857e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 1.1277999999996513e-05, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 8.707999999996163e-06, 4.720000000013602e-07, 8.153000000003796e-06, 4.7199999999442133e-07, 8.639000000004726e-06, 4.7300000000083386e-07, 8.596999999999078e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.7199999999442133e-07], 'eventtime': [0.047864111, 0.047864583, 0.047873333, 0.047873806, 0.047883681, 0.047884153, 0.047892653, 0.047893125, 0.047901861, 0.047902333, 0.047911014, 0.047911486, 0.047920514, 0.047920986, 0.047929306, 0.047929778, 0.047938681, 0.047939153, 0.047950375, 0.047950847, 0.047959778, 0.04796025, 0.047968653, 0.047969125, 0.047980125, 0.047980597, 0.047989861, 0.047990333, 0.047999556, 0.048000028, 0.048008528, 0.048009, 0.048019736, 0.048020208, 0.048029944, 0.048030417, 0.048040903, 0.048041375, 0.048051222, 0.048051694, 0.048061569, 0.048062042, 0.048072333, 0.048072806, 0.048083486, 0.048083958, 0.048094653, 0.048095125, 0.04810625, 0.048106722, 0.048117542, 0.048118014, 0.048126806, 0.048127278, 0.048138403, 0.048138875, 0.048148542, 0.048149014, 0.048157181, 0.048157653, 0.048167222, 0.048167694, 0.048178611, 0.048179083, 0.048188611, 0.048189083, 0.0482, 0.048200472, 0.048210111, 0.048210583, 0.048220028, 0.0482205, 0.048231097, 0.048231569, 0.048242319, 0.048242792, 0.048251028, 0.0482515, 0.048261361, 0.048261833, 0.048272361, 0.048272833, 0.048280986, 0.048281458, 0.048291542, 0.048292014, 0.048303292, 0.048303764, 0.048312042, 0.048312514, 0.048321222, 0.048321694, 0.048329847, 0.048330319, 0.048338958, 0.048339431, 0.048348028, 0.0483485, 0.048358111, 0.048358583], 'sourcediff': [0, 4.720000000013602e-07, 8.749999999994873e-06, 4.7300000000083386e-07, 9.874999999999468e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 8.735999999995303e-06, 4.720000000013602e-07, 8.681000000003436e-06, 4.720000000013602e-07, 9.027999999994263e-06, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 1.1222000000005172e-05, 4.7199999999442133e-07, 8.931000000003686e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 1.0999999999997123e-05, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 9.222999999995707e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 9.735999999996303e-06, 4.7300000000083386e-07, 1.0486000000003992e-05, 4.7199999999442133e-07, 9.847000000000328e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 1.0291000000002548e-05, 4.7300000000083386e-07, 1.0679999999999024e-05, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 1.1125000000000718e-05, 4.7199999999442133e-07, 1.0820000000001662e-05, 4.720000000013602e-07, 8.792000000000522e-06, 4.720000000013602e-07, 1.1125000000000718e-05, 4.7199999999442133e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 8.167000000003366e-06, 4.720000000013602e-07, 9.569000000000938e-06, 4.7199999999442133e-07, 1.0917000000006116e-05, 4.7199999999442133e-07, 9.528000000001702e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 1.0749999999996873e-05, 4.7300000000083386e-07, 8.236000000001742e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.7199999999442133e-07, 1.0528000000002702e-05, 4.720000000013602e-07, 8.152999999996857e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 1.1277999999996513e-05, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 8.707999999996163e-06, 4.720000000013602e-07, 8.153000000003796e-06, 4.7199999999442133e-07, 8.639000000004726e-06, 4.7300000000083386e-07, 8.596999999999078e-06, 4.720000000013602e-07, 9.610999999999648e-06, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:29.118" endtime="20201030 18:31:29.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.108" endtime="20201030 18:31:29.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:29.139" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:31:29.130" endtime="20201030 18:31:29.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:29.148" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720...</msg>
<status status="PASS" starttime="20201030 18:31:29.141" endtime="20201030 18:31:29.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.159" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:29.156" endtime="20201030 18:31:29.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.164" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201030 18:31:29.161" endtime="20201030 18:31:29.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.150" endtime="20201030 18:31:29.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:29.176" endtime="20201030 18:31:29.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.172" endtime="20201030 18:31:29.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.169" endtime="20201030 18:31:29.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.576" endtime="20201030 18:31:29.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.575" endtime="20201030 18:31:29.201"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.224" endtime="20201030 18:31:29.235"></status>
</kw>
<msg timestamp="20201030 18:31:29.237" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.219" endtime="20201030 18:31:29.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.243" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.239" endtime="20201030 18:31:29.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.245" endtime="20201030 18:31:29.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.211" endtime="20201030 18:31:29.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.207" endtime="20201030 18:31:29.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.269" endtime="20201030 18:31:29.676"></status>
</kw>
<msg timestamp="20201030 18:31:29.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037790597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037791069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.265" endtime="20201030 18:31:29.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037790597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037791069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.686" endtime="20201030 18:31:29.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.705" endtime="20201030 18:31:29.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.258" endtime="20201030 18:31:29.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.253" endtime="20201030 18:31:29.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:29.769" level="INFO">${debug} = {'source_diff': [0, 4.7199999999442133e-07, 1.1223000000004646e-05, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 9.972000000003922e-06, 4.7199999999442133e-07, 9.3469999999998...</msg>
<status status="PASS" starttime="20201030 18:31:29.714" endtime="20201030 18:31:29.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.771" endtime="20201030 18:31:29.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.783" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:29.781" endtime="20201030 18:31:29.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.793" level="INFO">VALUE: {'source_diff': [0, 4.7199999999442133e-07, 1.1223000000004646e-05, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 9.972000000003922e-06, 4.7199999999442133e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 8.180000000003462e-06, 4.720000000013602e-07, 9.458999999996387e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 9.249999999995373e-06, 4.720000000013602e-07, 8.445000000002756e-06, 4.720000000013602e-07, 9.915999999998704e-06, 4.7300000000083386e-07, 8.193999999996093e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 8.416999999996677e-06, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 9.555000000001368e-06, 4.7300000000083386e-07, 9.637999999999314e-06, 4.7300000000083386e-07, 9.540999999994859e-06, 4.7300000000083386e-07, 1.1152000000000384e-05, 4.7300000000083386e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 8.555000000000368e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 1.0709000000004576e-05, 4.7199999999442133e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 8.082999999999008e-06, 4.7300000000083386e-07, 9.638999999998787e-06, 4.720000000013602e-07, 8.193999999996093e-06, 4.720000000013602e-07, 7.987000000000966e-06, 4.720000000013602e-07, 8.291000000000548e-06, 4.7300000000083386e-07, 1.0401999999999634e-05, 4.7299999999389497e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 9.319000000000688e-06, 4.720000000013602e-07, 1.1236999999997277e-05, 4.720000000013602e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 1.1222000000005172e-05, 4.7300000000083386e-07, 7.985999999994553e-06, 4.720000000013602e-07, 8.389000000004476e-06, 4.7199999999442133e-07, 8.194000000003032e-06, 4.7300000000083386e-07, 7.972000000001922e-06, 4.7199999999442133e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 8.195000000002506e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07], 'eventtime': [0.037790597, 0.037791069, 0.037802292, 0.037802764, 0.037813556, 0.037814028, 0.037824, 0.037824472, 0.037833819, 0.037834292, 0.037842472, 0.037842944, 0.037852403, 0.037852875, 0.037861167, 0.037861639, 0.037870889, 0.037871361, 0.037879806, 0.037880278, 0.037890194, 0.037890667, 0.037898861, 0.037899333, 0.037908667, 0.037909139, 0.037919542, 0.037920014, 0.037931222, 0.037931694, 0.037940111, 0.037940583, 0.037949181, 0.037949653, 0.037959208, 0.037959681, 0.037969319, 0.037969792, 0.037979333, 0.037979806, 0.037990958, 0.037991431, 0.038002042, 0.038002514, 0.038011069, 0.038011542, 0.038021722, 0.038022194, 0.038030597, 0.038031069, 0.03804, 0.038040472, 0.038051181, 0.038051653, 0.038062764, 0.038063236, 0.038071542, 0.038072014, 0.038080931, 0.038081403, 0.038092514, 0.038092986, 0.038101069, 0.038101542, 0.038111181, 0.038111653, 0.038119847, 0.038120319, 0.038128306, 0.038128778, 0.038137069, 0.038137542, 0.038147944, 0.038148417, 0.038159, 0.038159472, 0.038170181, 0.038170653, 0.038179972, 0.038180444, 0.038191681, 0.038192153, 0.038201389, 0.038201861, 0.038213083, 0.038213556, 0.038221542, 0.038222014, 0.038230403, 0.038230875, 0.038239069, 0.038239542, 0.038247514, 0.038247986, 0.038258889, 0.038259361, 0.038267556, 0.038268028, 0.038277778, 0.03827825], 'sourcediff': [0, 4.7199999999442133e-07, 1.1223000000004646e-05, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 9.972000000003922e-06, 4.7199999999442133e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 8.180000000003462e-06, 4.720000000013602e-07, 9.458999999996387e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 9.249999999995373e-06, 4.720000000013602e-07, 8.445000000002756e-06, 4.720000000013602e-07, 9.915999999998704e-06, 4.7300000000083386e-07, 8.193999999996093e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 8.416999999996677e-06, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 9.555000000001368e-06, 4.7300000000083386e-07, 9.637999999999314e-06, 4.7300000000083386e-07, 9.540999999994859e-06, 4.7300000000083386e-07, 1.1152000000000384e-05, 4.7300000000083386e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 8.555000000000368e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 1.0709000000004576e-05, 4.7199999999442133e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 8.082999999999008e-06, 4.7300000000083386e-07, 9.638999999998787e-06, 4.720000000013602e-07, 8.193999999996093e-06, 4.720000000013602e-07, 7.987000000000966e-06, 4.720000000013602e-07, 8.291000000000548e-06, 4.7300000000083386e-07, 1.0401999999999634e-05, 4.7299999999389497e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 9.319000000000688e-06, 4.720000000013602e-07, 1.1236999999997277e-05, 4.720000000013602e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 1.1222000000005172e-05, 4.7300000000083386e-07, 7.985999999994553e-06, 4.720000000013602e-07, 8.389000000004476e-06, 4.7199999999442133e-07, 8.194000000003032e-06, 4.7300000000083386e-07, 7.972000000001922e-06, 4.7199999999442133e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 8.195000000002506e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:29.786" endtime="20201030 18:31:29.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.776" endtime="20201030 18:31:29.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:29.807" level="INFO">${RESULT} = [{'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}...</msg>
<status status="PASS" starttime="20201030 18:31:29.798" endtime="20201030 18:31:29.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:29.818" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:31:29.809" endtime="20201030 18:31:29.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.828" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:29.826" endtime="20201030 18:31:29.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.833" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:31:29.830" endtime="20201030 18:31:29.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.820" endtime="20201030 18:31:29.836"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:29.845" endtime="20201030 18:31:29.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.841" endtime="20201030 18:31:29.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.838" endtime="20201030 18:31:29.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.203" endtime="20201030 18:31:29.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.202" endtime="20201030 18:31:29.870"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.891" endtime="20201030 18:31:29.903"></status>
</kw>
<msg timestamp="20201030 18:31:29.904" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.887" endtime="20201030 18:31:29.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.910" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.906" endtime="20201030 18:31:29.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.913" endtime="20201030 18:31:29.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.880" endtime="20201030 18:31:29.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.876" endtime="20201030 18:31:29.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.936" endtime="20201030 18:31:30.288"></status>
</kw>
<msg timestamp="20201030 18:31:30.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036068306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036068778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.933" endtime="20201030 18:31:30.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036068306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036068778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.298" endtime="20201030 18:31:30.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.317" endtime="20201030 18:31:30.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.925" endtime="20201030 18:31:30.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.921" endtime="20201030 18:31:30.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:30.389" level="INFO">${debug} = {'source_diff': [0, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 1.1222999999997707e-05, 4.720000000013602e-07, 1.04029999999991...</msg>
<status status="PASS" starttime="20201030 18:31:30.327" endtime="20201030 18:31:30.389"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.392" endtime="20201030 18:31:30.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.404" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:30.402" endtime="20201030 18:31:30.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.414" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 1.1222999999997707e-05, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 8.735999999995303e-06, 4.720000000013602e-07, 1.1042000000002772e-05, 4.7199999999442133e-07, 9.236000000002742e-06, 4.7300000000083386e-07, 1.1069000000002438e-05, 4.7199999999442133e-07, 9.459000000003326e-06, 4.720000000013602e-07, 1.0041999999994833e-05, 4.720000000013602e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 8.625000000005156e-06, 4.7299999999389497e-07, 8.805000000000618e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.7300000000083386e-07, 9.555000000001368e-06, 4.720000000013602e-07, 1.0042000000001772e-05, 4.7199999999442133e-07, 1.0750000000003812e-05, 4.7300000000083386e-07, 1.0679999999999024e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 1.0695000000005006e-05, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 9.221999999996233e-06, 4.7300000000083386e-07, 9.680000000004962e-06, 4.7199999999442133e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 8.527000000001228e-06, 4.7299999999389497e-07, 9.750000000002812e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999442133e-07, 8.930000000004212e-06, 4.7300000000083386e-07, 8.499999999994623e-06, 4.720000000013602e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 8.833999999999231e-06, 4.7199999999442133e-07, 9.750000000002812e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 1.0042000000001772e-05, 4.720000000013602e-07, 8.513999999994193e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.720000000013602e-07, 7.973000000001396e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 8.430999999996247e-06, 4.720000000013602e-07, 1.0778000000002952e-05, 4.7199999999442133e-07], 'eventtime': [0.036068306, 0.036068778, 0.036079278, 0.03607975, 0.036090861, 0.036091333, 0.036102556, 0.036103028, 0.036113431, 0.036113903, 0.036124389, 0.036124861, 0.036133139, 0.036133611, 0.036142347, 0.036142819, 0.036153861, 0.036154333, 0.036163569, 0.036164042, 0.036175111, 0.036175583, 0.036185042, 0.036185514, 0.036195556, 0.036196028, 0.036207139, 0.036207611, 0.036216847, 0.036217319, 0.036225944, 0.036226417, 0.036235222, 0.036235694, 0.036244819, 0.036245292, 0.036254847, 0.036255319, 0.036265361, 0.036265833, 0.036276583, 0.036277056, 0.036287736, 0.036288208, 0.0362965, 0.036296972, 0.036307667, 0.036308139, 0.036318639, 0.036319111, 0.036328333, 0.036328806, 0.036338486, 0.036338958, 0.036349028, 0.0363495, 0.036357792, 0.036358264, 0.036369153, 0.036369625, 0.036380319, 0.036380792, 0.036389319, 0.036389792, 0.036399542, 0.036400014, 0.036409042, 0.036409514, 0.036418444, 0.036418917, 0.036427417, 0.036427889, 0.036438375, 0.036438847, 0.036447681, 0.036448153, 0.036457903, 0.036458375, 0.036469111, 0.036469583, 0.036479625, 0.036480097, 0.036488611, 0.036489083, 0.036498417, 0.036498889, 0.036508347, 0.036508819, 0.036516792, 0.036517264, 0.036528167, 0.036528639, 0.036539278, 0.03653975, 0.036548639, 0.036549111, 0.036557542, 0.036558014, 0.036568792, 0.036569264], 'sourcediff': [0, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 1.1222999999997707e-05, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 8.735999999995303e-06, 4.720000000013602e-07, 1.1042000000002772e-05, 4.7199999999442133e-07, 9.236000000002742e-06, 4.7300000000083386e-07, 1.1069000000002438e-05, 4.7199999999442133e-07, 9.459000000003326e-06, 4.720000000013602e-07, 1.0041999999994833e-05, 4.720000000013602e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 8.625000000005156e-06, 4.7299999999389497e-07, 8.805000000000618e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.7300000000083386e-07, 9.555000000001368e-06, 4.720000000013602e-07, 1.0042000000001772e-05, 4.7199999999442133e-07, 1.0750000000003812e-05, 4.7300000000083386e-07, 1.0679999999999024e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 1.0695000000005006e-05, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 9.221999999996233e-06, 4.7300000000083386e-07, 9.680000000004962e-06, 4.7199999999442133e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 8.527000000001228e-06, 4.7299999999389497e-07, 9.750000000002812e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999442133e-07, 8.930000000004212e-06, 4.7300000000083386e-07, 8.499999999994623e-06, 4.720000000013602e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 8.833999999999231e-06, 4.7199999999442133e-07, 9.750000000002812e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 1.0042000000001772e-05, 4.720000000013602e-07, 8.513999999994193e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.720000000013602e-07, 7.973000000001396e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 8.888999999998037e-06, 4.720000000013602e-07, 8.430999999996247e-06, 4.720000000013602e-07, 1.0778000000002952e-05, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:30.406" endtime="20201030 18:31:30.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.397" endtime="20201030 18:31:30.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:30.428" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:31:30.419" endtime="20201030 18:31:30.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:30.438" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199...</msg>
<status status="PASS" starttime="20201030 18:31:30.430" endtime="20201030 18:31:30.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.449" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:30.447" endtime="20201030 18:31:30.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.455" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201030 18:31:30.452" endtime="20201030 18:31:30.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.439" endtime="20201030 18:31:30.457"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:30.467" endtime="20201030 18:31:30.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.462" endtime="20201030 18:31:30.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.460" endtime="20201030 18:31:30.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.872" endtime="20201030 18:31:30.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.871" endtime="20201030 18:31:30.492"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.513" endtime="20201030 18:31:30.524"></status>
</kw>
<msg timestamp="20201030 18:31:30.526" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.509" endtime="20201030 18:31:30.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.532" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.528" endtime="20201030 18:31:30.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.534" endtime="20201030 18:31:30.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.502" endtime="20201030 18:31:30.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.497" endtime="20201030 18:31:30.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.557" endtime="20201030 18:31:30.906"></status>
</kw>
<msg timestamp="20201030 18:31:30.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036087931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036088403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.554" endtime="20201030 18:31:30.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036087931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036088403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.916" endtime="20201030 18:31:30.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.935" endtime="20201030 18:31:30.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.547" endtime="20201030 18:31:30.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.542" endtime="20201030 18:31:30.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:31.000" level="INFO">${debug} = {'source_diff': [0, 4.720000000013602e-07, 8.000000000001062e-06, 4.720000000013602e-07, 1.1193999999999094e-05, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 9.44399999999734...</msg>
<status status="PASS" starttime="20201030 18:31:30.944" endtime="20201030 18:31:31.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.002" endtime="20201030 18:31:31.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.014" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:31.012" endtime="20201030 18:31:31.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.024" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 8.000000000001062e-06, 4.720000000013602e-07, 1.1193999999999094e-05, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 9.443999999997343e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 1.0778000000002952e-05, 4.7199999999442133e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 1.0820000000001662e-05, 4.7199999999442133e-07, 1.0250000000003312e-05, 4.720000000013602e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 9.235999999995803e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 9.027999999994263e-06, 4.720000000013602e-07, 9.528000000001702e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.7300000000083386e-07, 9.638999999998787e-06, 4.720000000013602e-07, 9.624999999999218e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.720000000013602e-07, 9.237000000002216e-06, 4.720000000013602e-07, 8.915999999997704e-06, 4.7300000000083386e-07, 8.846999999999328e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0584000000000982e-05, 4.7199999999442133e-07, 9.681000000004436e-06, 4.720000000013602e-07, 7.943999999995843e-06, 4.720000000013602e-07, 9.972999999996457e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7300000000083386e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.7199999999442133e-07, 8.582999999999508e-06, 4.7300000000083386e-07, 8.514000000001132e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.720000000013602e-07, 1.1222999999997707e-05, 4.720000000013602e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 1.1111000000001148e-05, 4.7199999999442133e-07, 9.959000000003826e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 9.958999999996887e-06, 4.720000000013602e-07], 'eventtime': [0.036087931, 0.036088403, 0.036096403, 0.036096875, 0.036108069, 0.036108542, 0.036118194, 0.036118667, 0.036128111, 0.036128583, 0.036136889, 0.036137361, 0.036148139, 0.036148611, 0.036158889, 0.036159361, 0.036170181, 0.036170653, 0.036180903, 0.036181375, 0.036190194, 0.036190667, 0.036199903, 0.036200375, 0.036208361, 0.036208833, 0.036217861, 0.036218333, 0.036227861, 0.036228333, 0.036238319, 0.036238792, 0.036248431, 0.036248903, 0.036258528, 0.036259, 0.036267083, 0.036267556, 0.036276472, 0.036276944, 0.036286181, 0.036286653, 0.036295569, 0.036296042, 0.036304889, 0.036305361, 0.036314236, 0.036314708, 0.036325097, 0.036325569, 0.036336153, 0.036336625, 0.036346306, 0.036346778, 0.036354722, 0.036355194, 0.036365167, 0.036365639, 0.03637425, 0.036374722, 0.036385403, 0.036385875, 0.036395958, 0.036396431, 0.036407639, 0.036408111, 0.036418278, 0.03641875, 0.036429639, 0.036430111, 0.036438931, 0.036439403, 0.036448014, 0.036448486, 0.036457014, 0.036457486, 0.036466069, 0.036466542, 0.036475056, 0.036475528, 0.036484861, 0.036485333, 0.036496556, 0.036497028, 0.036507389, 0.036507861, 0.036518347, 0.036518819, 0.036527639, 0.036528111, 0.036539222, 0.036539694, 0.036549653, 0.036550125, 0.036559042, 0.036559514, 0.036567597, 0.036568069, 0.036578028, 0.0365785], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 4.720000000013602e-07, 8.000000000001062e-06, 4.720000000013602e-07, 1.1193999999999094e-05, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 9.443999999997343e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 1.0778000000002952e-05, 4.7199999999442133e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 1.0820000000001662e-05, 4.7199999999442133e-07, 1.0250000000003312e-05, 4.720000000013602e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 9.235999999995803e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 9.027999999994263e-06, 4.720000000013602e-07, 9.528000000001702e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.7300000000083386e-07, 9.638999999998787e-06, 4.720000000013602e-07, 9.624999999999218e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.720000000013602e-07, 9.237000000002216e-06, 4.720000000013602e-07, 8.915999999997704e-06, 4.7300000000083386e-07, 8.846999999999328e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0584000000000982e-05, 4.7199999999442133e-07, 9.681000000004436e-06, 4.720000000013602e-07, 7.943999999995843e-06, 4.720000000013602e-07, 9.972999999996457e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7300000000083386e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.7199999999442133e-07, 8.582999999999508e-06, 4.7300000000083386e-07, 8.514000000001132e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.720000000013602e-07, 1.1222999999997707e-05, 4.720000000013602e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 1.1111000000001148e-05, 4.7199999999442133e-07, 9.959000000003826e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 9.958999999996887e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:31.017" endtime="20201030 18:31:31.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.007" endtime="20201030 18:31:31.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:31.038" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 18:31:31.029" endtime="20201030 18:31:31.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:31.047" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:31:31.040" endtime="20201030 18:31:31.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.057" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:31.055" endtime="20201030 18:31:31.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.063" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:31:31.060" endtime="20201030 18:31:31.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.049" endtime="20201030 18:31:31.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:31.075" endtime="20201030 18:31:31.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.071" endtime="20201030 18:31:31.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.068" endtime="20201030 18:31:31.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.494" endtime="20201030 18:31:31.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.493" endtime="20201030 18:31:31.100"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.122" endtime="20201030 18:31:31.133"></status>
</kw>
<msg timestamp="20201030 18:31:31.134" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.119" endtime="20201030 18:31:31.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.140" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.136" endtime="20201030 18:31:31.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.143" endtime="20201030 18:31:31.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.110" endtime="20201030 18:31:31.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.105" endtime="20201030 18:31:31.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.166" endtime="20201030 18:31:31.508"></status>
</kw>
<msg timestamp="20201030 18:31:31.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037436069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037436542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.163" endtime="20201030 18:31:31.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037436069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037436542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.519" endtime="20201030 18:31:31.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.539" endtime="20201030 18:31:31.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.155" endtime="20201030 18:31:31.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.151" endtime="20201030 18:31:31.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:31.602" level="INFO">${debug} = {'source_diff': [0, 4.7300000000083386e-07, 8.915999999997704e-06, 4.7300000000083386e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 1.0292000000002022e-05, 4.7199999999442133e-07, 1.087500000000...</msg>
<status status="PASS" starttime="20201030 18:31:31.548" endtime="20201030 18:31:31.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.604" endtime="20201030 18:31:31.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.616" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:31.614" endtime="20201030 18:31:31.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.626" level="INFO">VALUE: {'source_diff': [0, 4.7300000000083386e-07, 8.915999999997704e-06, 4.7300000000083386e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 1.0292000000002022e-05, 4.7199999999442133e-07, 1.0875000000000468e-05, 4.720000000013602e-07, 8.709000000002576e-06, 4.7199999999442133e-07, 9.250000000002312e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 1.1193999999999094e-05, 4.720000000013602e-07, 8.611999999998121e-06, 4.720000000013602e-07, 8.403000000004046e-06, 4.7199999999442133e-07, 8.708000000003102e-06, 4.720000000013602e-07, 8.097999999998051e-06, 4.720000000013602e-07, 7.971999999994983e-06, 4.720000000013602e-07, 9.959000000003826e-06, 4.720000000013602e-07, 9.443999999997343e-06, 4.720000000013602e-07, 1.0598000000000551e-05, 4.7199999999442133e-07, 1.1208000000005602e-05, 4.7199999999442133e-07, 9.556000000000842e-06, 4.720000000013602e-07, 1.0486000000003992e-05, 4.7299999999389497e-07, 8.402000000004572e-06, 4.7300000000083386e-07, 1.0068999999994499e-05, 4.720000000013602e-07, 8.736000000002242e-06, 4.7300000000083386e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.7199999999442133e-07, 9.250000000002312e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 1.079099999999611e-05, 4.720000000013602e-07, 9.764000000002382e-06, 4.7300000000083386e-07, 9.333000000000258e-06, 4.7199999999442133e-07, 9.250000000002312e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.7300000000083386e-07, 9.874999999999468e-06, 4.720000000013602e-07, 1.0264000000002882e-05, 4.720000000013602e-07, 9.971999999996983e-06, 4.720000000013602e-07, 1.0999999999997123e-05, 4.7300000000083386e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 9.014000000001632e-06, 4.7199999999442133e-07, 8.014000000000632e-06, 4.720000000013602e-07, 7.945000000002256e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7199999999442133e-07, 1.0181000000004936e-05, 4.7199999999442133e-07, 8.83400000000617e-06, 4.7199999999442133e-07, 9.333000000000258e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07], 'eventtime': [0.037436069, 0.037436542, 0.037445458, 0.037445931, 0.037456639, 0.037457111, 0.037467403, 0.037467875, 0.03747875, 0.037479222, 0.037487931, 0.037488403, 0.037497653, 0.037498125, 0.037508083, 0.037508556, 0.037516639, 0.037517111, 0.037525431, 0.037525903, 0.037537097, 0.037537569, 0.037546181, 0.037546653, 0.037555056, 0.037555528, 0.037564236, 0.037564708, 0.037572806, 0.037573278, 0.03758125, 0.037581722, 0.037591681, 0.037592153, 0.037601597, 0.037602069, 0.037612667, 0.037613139, 0.037624347, 0.037624819, 0.037634375, 0.037634847, 0.037645333, 0.037645806, 0.037654208, 0.037654681, 0.03766475, 0.037665222, 0.037673958, 0.037674431, 0.037684292, 0.037684764, 0.037693667, 0.037694139, 0.037703681, 0.037704153, 0.037713403, 0.037713875, 0.037722167, 0.037722639, 0.037733333, 0.037733806, 0.037744597, 0.037745069, 0.037754833, 0.037755306, 0.037764639, 0.037765111, 0.037774361, 0.037774833, 0.037784583, 0.037785056, 0.037794931, 0.037795403, 0.037805667, 0.037806139, 0.037816111, 0.037816583, 0.037827583, 0.037828056, 0.037838125, 0.037838597, 0.037847611, 0.037848083, 0.037856097, 0.037856569, 0.037864514, 0.037864986, 0.037874125, 0.037874597, 0.037884972, 0.037885444, 0.037895625, 0.037896097, 0.037904931, 0.037905403, 0.037914736, 0.037915208, 0.037923514, 0.037923986], 'sourcediff': [0, 4.7300000000083386e-07, 8.915999999997704e-06, 4.7300000000083386e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 1.0292000000002022e-05, 4.7199999999442133e-07, 1.0875000000000468e-05, 4.720000000013602e-07, 8.709000000002576e-06, 4.7199999999442133e-07, 9.250000000002312e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 1.1193999999999094e-05, 4.720000000013602e-07, 8.611999999998121e-06, 4.720000000013602e-07, 8.403000000004046e-06, 4.7199999999442133e-07, 8.708000000003102e-06, 4.720000000013602e-07, 8.097999999998051e-06, 4.720000000013602e-07, 7.971999999994983e-06, 4.720000000013602e-07, 9.959000000003826e-06, 4.720000000013602e-07, 9.443999999997343e-06, 4.720000000013602e-07, 1.0598000000000551e-05, 4.7199999999442133e-07, 1.1208000000005602e-05, 4.7199999999442133e-07, 9.556000000000842e-06, 4.720000000013602e-07, 1.0486000000003992e-05, 4.7299999999389497e-07, 8.402000000004572e-06, 4.7300000000083386e-07, 1.0068999999994499e-05, 4.720000000013602e-07, 8.736000000002242e-06, 4.7300000000083386e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.7199999999442133e-07, 9.250000000002312e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 1.079099999999611e-05, 4.720000000013602e-07, 9.764000000002382e-06, 4.7300000000083386e-07, 9.333000000000258e-06, 4.7199999999442133e-07, 9.250000000002312e-06, 4.720000000013602e-07, 9.749999999995873e-06, 4.7300000000083386e-07, 9.874999999999468e-06, 4.720000000013602e-07, 1.0264000000002882e-05, 4.720000000013602e-07, 9.971999999996983e-06, 4.720000000013602e-07, 1.0999999999997123e-05, 4.7300000000083386e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 9.014000000001632e-06, 4.7199999999442133e-07, 8.014000000000632e-06, 4.720000000013602e-07, 7.945000000002256e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7199999999442133e-07, 1.0181000000004936e-05, 4.7199999999442133e-07, 8.83400000000617e-06, 4.7199999999442133e-07, 9.333000000000258e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:31.619" endtime="20201030 18:31:31.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.609" endtime="20201030 18:31:31.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:31.640" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07...</msg>
<status status="PASS" starttime="20201030 18:31:31.631" endtime="20201030 18:31:31.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:31.651" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4...</msg>
<status status="PASS" starttime="20201030 18:31:31.642" endtime="20201030 18:31:31.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.661" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:31.659" endtime="20201030 18:31:31.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.667" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:31:31.663" endtime="20201030 18:31:31.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.653" endtime="20201030 18:31:31.669"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:31.679" endtime="20201030 18:31:31.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.675" endtime="20201030 18:31:31.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.672" endtime="20201030 18:31:31.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.102" endtime="20201030 18:31:31.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.101" endtime="20201030 18:31:31.705"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.725" endtime="20201030 18:31:31.736"></status>
</kw>
<msg timestamp="20201030 18:31:31.737" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.722" endtime="20201030 18:31:31.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.744" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.740" endtime="20201030 18:31:31.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.746" endtime="20201030 18:31:31.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.715" endtime="20201030 18:31:31.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.710" endtime="20201030 18:31:31.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.769" endtime="20201030 18:31:32.107"></status>
</kw>
<msg timestamp="20201030 18:31:32.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036410792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036411264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.766" endtime="20201030 18:31:32.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036410792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036411264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.116" endtime="20201030 18:31:32.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.136" endtime="20201030 18:31:32.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.759" endtime="20201030 18:31:32.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.754" endtime="20201030 18:31:32.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:32.201" level="INFO">${debug} = {'source_diff': [0, 4.720000000013602e-07, 1.0236000000003742e-05, 4.7199999999442133e-07, 8.806000000000092e-06, 4.720000000013602e-07, 9.278000000001452e-06, 4.720000000013602e-07, 8.971999999995983...</msg>
<status status="PASS" starttime="20201030 18:31:32.146" endtime="20201030 18:31:32.201"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.203" endtime="20201030 18:31:32.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.215" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:32.213" endtime="20201030 18:31:32.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.225" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 1.0236000000003742e-05, 4.7199999999442133e-07, 8.806000000000092e-06, 4.720000000013602e-07, 9.278000000001452e-06, 4.720000000013602e-07, 8.971999999995983e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 1.0207999999997663e-05, 4.720000000013602e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 1.0487000000003466e-05, 4.7199999999442133e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 1.0054999999994929e-05, 4.7300000000083386e-07, 8.291000000000548e-06, 4.7300000000083386e-07, 8.874999999998467e-06, 4.720000000013602e-07, 9.915999999998704e-06, 4.7300000000083386e-07, 9.527000000002228e-06, 4.7300000000083386e-07, 9.971999999996983e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.7300000000083386e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 9.958000000004352e-06, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7199999999442133e-07, 8.709000000002576e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.806000000000092e-06, 4.720000000013602e-07, 1.1139000000000288e-05, 4.7199999999442133e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 1.0388000000000064e-05, 4.7300000000083386e-07, 1.0486000000003992e-05, 4.7199999999442133e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7300000000083386e-07, 1.0555000000002368e-05, 4.7199999999442133e-07, 7.917000000003116e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 9.222999999995707e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 9.637999999999314e-06, 4.7300000000083386e-07, 1.0069000000001438e-05, 4.7199999999442133e-07, 8.8200000000066e-06, 4.7199999999442133e-07, 8.305999999999591e-06, 4.720000000013602e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 9.055000000000868e-06, 4.720000000013602e-07, 1.0875000000000468e-05, 4.7299999999389497e-07, 1.0902000000000134e-05, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 1.1000000000004062e-05, 4.7199999999442133e-07], 'eventtime': [0.036410792, 0.036411264, 0.0364215, 0.036421972, 0.036430778, 0.03643125, 0.036440528, 0.036441, 0.036449972, 0.036450444, 0.036460833, 0.036461306, 0.036471514, 0.036471986, 0.036482347, 0.036482819, 0.036493306, 0.036493778, 0.036502583, 0.036503056, 0.036513139, 0.036513611, 0.036521903, 0.036522375, 0.036533292, 0.036533764, 0.036543819, 0.036544292, 0.036552583, 0.036553056, 0.036561931, 0.036562403, 0.036572319, 0.036572792, 0.036582319, 0.036582792, 0.036592764, 0.036593236, 0.036603194, 0.036603667, 0.036612903, 0.036613375, 0.036623333, 0.036623806, 0.036632931, 0.036633403, 0.036643472, 0.036643944, 0.036652653, 0.036653125, 0.036663625, 0.036664097, 0.036674472, 0.036674944, 0.03668375, 0.036684222, 0.036695361, 0.036695833, 0.036706208, 0.036706681, 0.036717069, 0.036717542, 0.036728028, 0.0367285, 0.036738361, 0.036738833, 0.036746917, 0.036747389, 0.036757458, 0.036757931, 0.036768486, 0.036768958, 0.036776875, 0.036777347, 0.036787222, 0.036787694, 0.036796917, 0.036797389, 0.036806208, 0.036806681, 0.036816319, 0.036816792, 0.036826861, 0.036827333, 0.036836153, 0.036836625, 0.036844931, 0.036845403, 0.036854208, 0.036854681, 0.036863736, 0.036864208, 0.036875083, 0.036875556, 0.036886458, 0.036886931, 0.036897306, 0.036897778, 0.036908778, 0.03690925], 'sourcediff': [0, 4.720000000013602e-07, 1.0236000000003742e-05, 4.7199999999442133e-07, 8.806000000000092e-06, 4.720000000013602e-07, 9.278000000001452e-06, 4.720000000013602e-07, 8.971999999995983e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7300000000083386e-07, 1.0207999999997663e-05, 4.720000000013602e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 1.0487000000003466e-05, 4.7199999999442133e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 1.0054999999994929e-05, 4.7300000000083386e-07, 8.291000000000548e-06, 4.7300000000083386e-07, 8.874999999998467e-06, 4.720000000013602e-07, 9.915999999998704e-06, 4.7300000000083386e-07, 9.527000000002228e-06, 4.7300000000083386e-07, 9.971999999996983e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.7300000000083386e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 9.958000000004352e-06, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7199999999442133e-07, 8.709000000002576e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.806000000000092e-06, 4.720000000013602e-07, 1.1139000000000288e-05, 4.7199999999442133e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 1.0388000000000064e-05, 4.7300000000083386e-07, 1.0486000000003992e-05, 4.7199999999442133e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7300000000083386e-07, 1.0555000000002368e-05, 4.7199999999442133e-07, 7.917000000003116e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 9.222999999995707e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 9.637999999999314e-06, 4.7300000000083386e-07, 1.0069000000001438e-05, 4.7199999999442133e-07, 8.8200000000066e-06, 4.7199999999442133e-07, 8.305999999999591e-06, 4.720000000013602e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 9.055000000000868e-06, 4.720000000013602e-07, 1.0875000000000468e-05, 4.7299999999389497e-07, 1.0902000000000134e-05, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 1.1000000000004062e-05, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:32.218" endtime="20201030 18:31:32.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.208" endtime="20201030 18:31:32.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:32.239" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07},...</msg>
<status status="PASS" starttime="20201030 18:31:32.230" endtime="20201030 18:31:32.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:32.248" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 18:31:32.241" endtime="20201030 18:31:32.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.260" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:32.256" endtime="20201030 18:31:32.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.266" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201030 18:31:32.262" endtime="20201030 18:31:32.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.250" endtime="20201030 18:31:32.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.277" endtime="20201030 18:31:32.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.273" endtime="20201030 18:31:32.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.271" endtime="20201030 18:31:32.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.706" endtime="20201030 18:31:32.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.706" endtime="20201030 18:31:32.303"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.323" endtime="20201030 18:31:32.334"></status>
</kw>
<msg timestamp="20201030 18:31:32.335" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.320" endtime="20201030 18:31:32.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.341" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.337" endtime="20201030 18:31:32.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.344" endtime="20201030 18:31:32.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.312" endtime="20201030 18:31:32.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.308" endtime="20201030 18:31:32.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.367" endtime="20201030 18:31:32.709"></status>
</kw>
<msg timestamp="20201030 18:31:32.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035797528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035798, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:32.363" endtime="20201030 18:31:32.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035797528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035798, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:32.719" endtime="20201030 18:31:32.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.739" endtime="20201030 18:31:32.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.356" endtime="20201030 18:31:32.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.352" endtime="20201030 18:31:32.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:32.803" level="INFO">${debug} = {'source_diff': [0, 4.720000000013602e-07, 9.013999999994693e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 9.346999999999828e-...</msg>
<status status="PASS" starttime="20201030 18:31:32.747" endtime="20201030 18:31:32.803"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.805" endtime="20201030 18:31:32.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.818" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:32.815" endtime="20201030 18:31:32.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.829" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 9.013999999994693e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 9.957999999997413e-06, 4.720000000013602e-07, 1.1221999999998233e-05, 4.7300000000083386e-07, 1.1125000000000718e-05, 4.720000000013602e-07, 9.847000000000328e-06, 4.7199999999442133e-07, 9.653000000005296e-06, 4.7199999999442133e-07, 1.1222000000005172e-05, 4.7300000000083386e-07, 8.332999999999258e-06, 4.720000000013602e-07, 9.721999999996733e-06, 4.7300000000083386e-07, 1.1013999999996693e-05, 4.720000000013602e-07, 1.0791000000003048e-05, 4.7300000000083386e-07, 1.0082999999994069e-05, 4.720000000013602e-07, 9.945000000004256e-06, 4.7199999999442133e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 8.625000000005156e-06, 4.7199999999442133e-07, 8.708000000003102e-06, 4.7300000000083386e-07, 1.0583000000001508e-05, 4.7199999999442133e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 8.945000000003256e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.720000000013602e-07, 1.0985999999997553e-05, 4.720000000013602e-07, 1.1125000000000718e-05, 4.7299999999389497e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 9.806000000001092e-06, 4.7199999999442133e-07, 8.846999999999328e-06, 4.720000000013602e-07, 9.806000000001092e-06, 4.720000000013602e-07, 9.221999999996233e-06, 4.720000000013602e-07, 9.153000000004796e-06, 4.7199999999442133e-07, 8.181000000002936e-06, 4.720000000013602e-07, 1.0291999999995083e-05, 4.720000000013602e-07, 1.0570000000001412e-05, 4.720000000013602e-07, 1.1125000000000718e-05, 4.720000000013602e-07, 1.0471999999997483e-05, 4.720000000013602e-07, 1.1222999999997707e-05, 4.720000000013602e-07, 9.778000000001952e-06, 4.7199999999442133e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.0957999999998413e-05, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.08400000000542e-06, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07], 'eventtime': [0.035797528, 0.035798, 0.035807014, 0.035807486, 0.035816625, 0.035817097, 0.035826639, 0.035827111, 0.035836458, 0.035836931, 0.035846889, 0.035847361, 0.035858583, 0.035859056, 0.035870181, 0.035870653, 0.0358805, 0.035880972, 0.035890625, 0.035891097, 0.035902319, 0.035902792, 0.035911125, 0.035911597, 0.035921319, 0.035921792, 0.035932806, 0.035933278, 0.035944069, 0.035944542, 0.035954625, 0.035955097, 0.035965042, 0.035965514, 0.035976417, 0.035976889, 0.035985514, 0.035985986, 0.035994694, 0.035995167, 0.03600575, 0.036006222, 0.036017111, 0.036017583, 0.036026528, 0.036027, 0.036035931, 0.036036403, 0.036046361, 0.036046833, 0.036056597, 0.036057069, 0.036065569, 0.036066042, 0.036074972, 0.036075444, 0.036084889, 0.036085361, 0.036096347, 0.036096819, 0.036107944, 0.036108417, 0.036118903, 0.036119375, 0.036129181, 0.036129653, 0.0361385, 0.036138972, 0.036148778, 0.03614925, 0.036158472, 0.036158944, 0.036168097, 0.036168569, 0.03617675, 0.036177222, 0.036187514, 0.036187986, 0.036198556, 0.036199028, 0.036210153, 0.036210625, 0.036221097, 0.036221569, 0.036232792, 0.036233264, 0.036243042, 0.036243514, 0.036254667, 0.036255139, 0.036266097, 0.036266569, 0.036276736, 0.036277208, 0.036286347, 0.036286819, 0.036294903, 0.036295375, 0.036304292, 0.036304764], 'sourcediff': [0, 4.720000000013602e-07, 9.013999999994693e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 9.957999999997413e-06, 4.720000000013602e-07, 1.1221999999998233e-05, 4.7300000000083386e-07, 1.1125000000000718e-05, 4.720000000013602e-07, 9.847000000000328e-06, 4.7199999999442133e-07, 9.653000000005296e-06, 4.7199999999442133e-07, 1.1222000000005172e-05, 4.7300000000083386e-07, 8.332999999999258e-06, 4.720000000013602e-07, 9.721999999996733e-06, 4.7300000000083386e-07, 1.1013999999996693e-05, 4.720000000013602e-07, 1.0791000000003048e-05, 4.7300000000083386e-07, 1.0082999999994069e-05, 4.720000000013602e-07, 9.945000000004256e-06, 4.7199999999442133e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 8.625000000005156e-06, 4.7199999999442133e-07, 8.708000000003102e-06, 4.7300000000083386e-07, 1.0583000000001508e-05, 4.7199999999442133e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 8.945000000003256e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.720000000013602e-07, 1.0985999999997553e-05, 4.720000000013602e-07, 1.1125000000000718e-05, 4.7299999999389497e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 9.806000000001092e-06, 4.7199999999442133e-07, 8.846999999999328e-06, 4.720000000013602e-07, 9.806000000001092e-06, 4.720000000013602e-07, 9.221999999996233e-06, 4.720000000013602e-07, 9.153000000004796e-06, 4.7199999999442133e-07, 8.181000000002936e-06, 4.720000000013602e-07, 1.0291999999995083e-05, 4.720000000013602e-07, 1.0570000000001412e-05, 4.720000000013602e-07, 1.1125000000000718e-05, 4.720000000013602e-07, 1.0471999999997483e-05, 4.720000000013602e-07, 1.1222999999997707e-05, 4.720000000013602e-07, 9.778000000001952e-06, 4.7199999999442133e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.0957999999998413e-05, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.08400000000542e-06, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:32.821" endtime="20201030 18:31:32.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.810" endtime="20201030 18:31:32.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:32.845" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:31:32.835" endtime="20201030 18:31:32.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:32.856" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 18:31:32.847" endtime="20201030 18:31:32.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.868" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:32.865" endtime="20201030 18:31:32.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.874" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:31:32.871" endtime="20201030 18:31:32.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.858" endtime="20201030 18:31:32.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.886" endtime="20201030 18:31:32.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.882" endtime="20201030 18:31:32.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.879" endtime="20201030 18:31:32.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.305" endtime="20201030 18:31:32.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.304" endtime="20201030 18:31:32.911"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.934" endtime="20201030 18:31:32.944"></status>
</kw>
<msg timestamp="20201030 18:31:32.945" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.929" endtime="20201030 18:31:32.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.952" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.948" endtime="20201030 18:31:32.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.954" endtime="20201030 18:31:32.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.921" endtime="20201030 18:31:32.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.916" endtime="20201030 18:31:32.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.977" endtime="20201030 18:31:33.320"></status>
</kw>
<msg timestamp="20201030 18:31:33.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037599681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037600153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.974" endtime="20201030 18:31:33.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037599681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037600153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.329" endtime="20201030 18:31:33.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.349" endtime="20201030 18:31:33.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.967" endtime="20201030 18:31:33.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.962" endtime="20201030 18:31:33.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:33.413" level="INFO">${debug} = {'source_diff': [0, 4.7199999999442133e-07, 8.708000000003102e-06, 4.720000000013602e-07, 8.097999999998051e-06, 4.720000000013602e-07, 8.943999999996843e-06, 4.720000000013602e-07, 8.069999999998911e...</msg>
<status status="PASS" starttime="20201030 18:31:33.357" endtime="20201030 18:31:33.413"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.415" endtime="20201030 18:31:33.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.427" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:33.425" endtime="20201030 18:31:33.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.437" level="INFO">VALUE: {'source_diff': [0, 4.7199999999442133e-07, 8.708000000003102e-06, 4.720000000013602e-07, 8.097999999998051e-06, 4.720000000013602e-07, 8.943999999996843e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.7199999999442133e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 8.973000000002396e-06, 4.7199999999442133e-07, 1.0569000000001938e-05, 4.720000000013602e-07, 8.388999999997537e-06, 4.7300000000083386e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 8.179999999996523e-06, 4.7300000000083386e-07, 8.651999999997884e-06, 4.7300000000083386e-07, 9.000000000002062e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 9.263999999994943e-06, 4.720000000013602e-07, 8.568999999999938e-06, 4.7300000000083386e-07, 9.874999999999468e-06, 4.720000000013602e-07, 1.1221999999998233e-05, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 8.431000000003186e-06, 4.7199999999442133e-07, 1.1014000000003632e-05, 4.720000000013602e-07, 8.166999999996427e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.7199999999442133e-07, 9.653000000005296e-06, 4.720000000013602e-07, 1.0818999999995249e-05, 4.7300000000083386e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.1013999999996693e-05, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 9.597999999999551e-06, 4.7199999999442133e-07, 1.0653000000006296e-05, 4.7199999999442133e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 8.944999999996317e-06, 4.720000000013602e-07, 9.222000000003172e-06, 4.7300000000083386e-07, 9.76299999999597e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 9.347999999999301e-06, 4.720000000013602e-07, 1.0568999999994999e-05, 4.720000000013602e-07, 1.0500000000003562e-05, 4.7300000000083386e-07], 'eventtime': [0.037599681, 0.037600153, 0.037608861, 0.037609333, 0.037617431, 0.037617903, 0.037626847, 0.037627319, 0.037635389, 0.037635861, 0.037646653, 0.037647125, 0.037657417, 0.037657889, 0.037666486, 0.037666958, 0.037675931, 0.037676403, 0.037686972, 0.037687444, 0.037695833, 0.037696306, 0.037707417, 0.037707889, 0.037716069, 0.037716542, 0.037725194, 0.037725667, 0.037734667, 0.037735139, 0.037744792, 0.037745264, 0.037756375, 0.037756847, 0.037767556, 0.037768028, 0.037777292, 0.037777764, 0.037786333, 0.037786806, 0.037796681, 0.037797153, 0.037808375, 0.037808847, 0.037819014, 0.037819486, 0.037827917, 0.037828389, 0.037839403, 0.037839875, 0.037848042, 0.037848514, 0.037856917, 0.037857389, 0.037866417, 0.037866889, 0.037876014, 0.037876486, 0.037887403, 0.037887875, 0.037897, 0.037897472, 0.037906306, 0.037906778, 0.037917667, 0.037918139, 0.037927792, 0.037928264, 0.037939083, 0.037939556, 0.037949417, 0.037949889, 0.037960903, 0.037961375, 0.037971972, 0.037972444, 0.037980722, 0.037981194, 0.037990792, 0.037991264, 0.038001917, 0.038002389, 0.038012778, 0.03801325, 0.038023847, 0.038024319, 0.038033264, 0.038033736, 0.038042958, 0.038043431, 0.038053194, 0.038053667, 0.038062486, 0.038062958, 0.038072306, 0.038072778, 0.038083347, 0.038083819, 0.038094319, 0.038094792], 'sourcediff': [0, 4.7199999999442133e-07, 8.708000000003102e-06, 4.720000000013602e-07, 8.097999999998051e-06, 4.720000000013602e-07, 8.943999999996843e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.7199999999442133e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 8.973000000002396e-06, 4.7199999999442133e-07, 1.0569000000001938e-05, 4.720000000013602e-07, 8.388999999997537e-06, 4.7300000000083386e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 8.179999999996523e-06, 4.7300000000083386e-07, 8.651999999997884e-06, 4.7300000000083386e-07, 9.000000000002062e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 9.263999999994943e-06, 4.720000000013602e-07, 8.568999999999938e-06, 4.7300000000083386e-07, 9.874999999999468e-06, 4.720000000013602e-07, 1.1221999999998233e-05, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 8.431000000003186e-06, 4.7199999999442133e-07, 1.1014000000003632e-05, 4.720000000013602e-07, 8.166999999996427e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.7199999999442133e-07, 9.653000000005296e-06, 4.720000000013602e-07, 1.0818999999995249e-05, 4.7300000000083386e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.1013999999996693e-05, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 9.597999999999551e-06, 4.7199999999442133e-07, 1.0653000000006296e-05, 4.7199999999442133e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 8.944999999996317e-06, 4.720000000013602e-07, 9.222000000003172e-06, 4.7300000000083386e-07, 9.76299999999597e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 9.347999999999301e-06, 4.720000000013602e-07, 1.0568999999994999e-05, 4.720000000013602e-07, 1.0500000000003562e-05, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:33.430" endtime="20201030 18:31:33.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.420" endtime="20201030 18:31:33.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:33.451" level="INFO">${RESULT} = [{'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07},...</msg>
<status status="PASS" starttime="20201030 18:31:33.442" endtime="20201030 18:31:33.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:33.462" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 18:31:33.453" endtime="20201030 18:31:33.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.472" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:33.470" endtime="20201030 18:31:33.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.477" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 18:31:33.474" endtime="20201030 18:31:33.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.463" endtime="20201030 18:31:33.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:33.489" endtime="20201030 18:31:33.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.485" endtime="20201030 18:31:33.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.482" endtime="20201030 18:31:33.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.913" endtime="20201030 18:31:33.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.912" endtime="20201030 18:31:33.515"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.535" endtime="20201030 18:31:33.546"></status>
</kw>
<msg timestamp="20201030 18:31:33.547" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.532" endtime="20201030 18:31:33.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.554" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.550" endtime="20201030 18:31:33.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.556" endtime="20201030 18:31:33.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.525" endtime="20201030 18:31:33.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.520" endtime="20201030 18:31:33.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.579" endtime="20201030 18:31:33.916"></status>
</kw>
<msg timestamp="20201030 18:31:33.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036312431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036312903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.576" endtime="20201030 18:31:33.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036312431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036312903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.926" endtime="20201030 18:31:33.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.945" endtime="20201030 18:31:33.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.569" endtime="20201030 18:31:33.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.564" endtime="20201030 18:31:33.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:34.009" level="INFO">${debug} = {'source_diff': [0, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 8.499999999994623e-06, 4.7300000000083386e-07, 9.665999999998454...</msg>
<status status="PASS" starttime="20201030 18:31:33.954" endtime="20201030 18:31:34.010"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.012" endtime="20201030 18:31:34.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.024" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:34.022" endtime="20201030 18:31:34.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.034" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 8.499999999994623e-06, 4.7300000000083386e-07, 9.665999999998454e-06, 4.720000000013602e-07, 1.1056000000002342e-05, 4.720000000013602e-07, 8.958999999995887e-06, 4.720000000013602e-07, 9.458000000003852e-06, 4.7199999999442133e-07, 9.014000000001632e-06, 4.720000000013602e-07, 9.750000000002812e-06, 4.7299999999389497e-07, 9.764000000002382e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 8.194000000003032e-06, 4.7300000000083386e-07, 1.079099999999611e-05, 4.720000000013602e-07, 9.431000000004186e-06, 4.7199999999442133e-07, 1.1306000000002592e-05, 4.720000000013602e-07, 1.1125000000000718e-05, 4.7199999999442133e-07, 9.250000000002312e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.7300000000083386e-07, 1.1111000000001148e-05, 4.7199999999442133e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 7.972000000001922e-06, 4.7300000000083386e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 8.082999999999008e-06, 4.7300000000083386e-07, 8.832999999999758e-06, 4.720000000013602e-07, 8.486000000001992e-06, 4.7199999999442133e-07, 9.042000000000772e-06, 4.720000000013602e-07, 1.0570000000001412e-05, 4.720000000013602e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 9.973000000003396e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 1.0263999999995943e-05, 4.7300000000083386e-07, 9.444000000004282e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.7300000000083386e-07, 9.860999999999898e-06, 4.7199999999442133e-07, 1.0694000000005532e-05, 4.7300000000083386e-07, 8.874999999998467e-06, 4.720000000013602e-07, 1.0013999999995693e-05, 4.720000000013602e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 1.0583999999994043e-05, 4.720000000013602e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 1.1096999999994639e-05, 4.720000000013602e-07, 9.973000000003396e-06, 4.7199999999442133e-07, 9.694000000004532e-06, 4.7300000000083386e-07, 1.0943999999998844e-05, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07], 'eventtime': [0.036312431, 0.036312903, 0.036322556, 0.036323028, 0.036333611, 0.036334083, 0.036342583, 0.036343056, 0.036352722, 0.036353194, 0.03636425, 0.036364722, 0.036373681, 0.036374153, 0.036383611, 0.036384083, 0.036393097, 0.036393569, 0.036403319, 0.036403792, 0.036413556, 0.036414028, 0.036423792, 0.036424264, 0.036432458, 0.036432931, 0.036443722, 0.036444194, 0.036453625, 0.036454097, 0.036465403, 0.036465875, 0.036477, 0.036477472, 0.036486722, 0.036487194, 0.036498083, 0.036498556, 0.036509667, 0.036510139, 0.036520528, 0.036521, 0.036531389, 0.036531861, 0.036540889, 0.036541361, 0.036551125, 0.036551597, 0.036559569, 0.036560042, 0.036570528, 0.036571, 0.036579083, 0.036579556, 0.036588389, 0.036588861, 0.036597347, 0.036597819, 0.036606861, 0.036607333, 0.036617903, 0.036618375, 0.036626361, 0.036626833, 0.036636806, 0.036637278, 0.036645889, 0.036646361, 0.036656847, 0.036657319, 0.036667583, 0.036668056, 0.0366775, 0.036677972, 0.036686583, 0.036687056, 0.036696917, 0.036697389, 0.036708083, 0.036708556, 0.036717431, 0.036717903, 0.036727917, 0.036728389, 0.0367395, 0.036739972, 0.036750556, 0.036751028, 0.036761528, 0.036762, 0.036773097, 0.036773569, 0.036783542, 0.036784014, 0.036793708, 0.036794181, 0.036805125, 0.036805597, 0.036815986, 0.036816458], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 8.499999999994623e-06, 4.7300000000083386e-07, 9.665999999998454e-06, 4.720000000013602e-07, 1.1056000000002342e-05, 4.720000000013602e-07, 8.958999999995887e-06, 4.720000000013602e-07, 9.458000000003852e-06, 4.7199999999442133e-07, 9.014000000001632e-06, 4.720000000013602e-07, 9.750000000002812e-06, 4.7299999999389497e-07, 9.764000000002382e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 8.194000000003032e-06, 4.7300000000083386e-07, 1.079099999999611e-05, 4.720000000013602e-07, 9.431000000004186e-06, 4.7199999999442133e-07, 1.1306000000002592e-05, 4.720000000013602e-07, 1.1125000000000718e-05, 4.7199999999442133e-07, 9.250000000002312e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.7300000000083386e-07, 1.1111000000001148e-05, 4.7199999999442133e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 7.972000000001922e-06, 4.7300000000083386e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 8.082999999999008e-06, 4.7300000000083386e-07, 8.832999999999758e-06, 4.720000000013602e-07, 8.486000000001992e-06, 4.7199999999442133e-07, 9.042000000000772e-06, 4.720000000013602e-07, 1.0570000000001412e-05, 4.720000000013602e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 9.973000000003396e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 1.0263999999995943e-05, 4.7300000000083386e-07, 9.444000000004282e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.7300000000083386e-07, 9.860999999999898e-06, 4.7199999999442133e-07, 1.0694000000005532e-05, 4.7300000000083386e-07, 8.874999999998467e-06, 4.720000000013602e-07, 1.0013999999995693e-05, 4.720000000013602e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 1.0583999999994043e-05, 4.720000000013602e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 1.1096999999994639e-05, 4.720000000013602e-07, 9.973000000003396e-06, 4.7199999999442133e-07, 9.694000000004532e-06, 4.7300000000083386e-07, 1.0943999999998844e-05, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:34.027" endtime="20201030 18:31:34.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.016" endtime="20201030 18:31:34.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:34.049" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:31:34.040" endtime="20201030 18:31:34.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:34.059" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 18:31:34.051" endtime="20201030 18:31:34.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.069" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:34.066" endtime="20201030 18:31:34.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.074" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:31:34.071" endtime="20201030 18:31:34.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.060" endtime="20201030 18:31:34.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:34.088" endtime="20201030 18:31:34.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.083" endtime="20201030 18:31:34.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.081" endtime="20201030 18:31:34.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.516" endtime="20201030 18:31:34.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.515" endtime="20201030 18:31:34.113"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.134" endtime="20201030 18:31:34.144"></status>
</kw>
<msg timestamp="20201030 18:31:34.146" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.130" endtime="20201030 18:31:34.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.152" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.148" endtime="20201030 18:31:34.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.154" endtime="20201030 18:31:34.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.123" endtime="20201030 18:31:34.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.118" endtime="20201030 18:31:34.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.178" endtime="20201030 18:31:34.531"></status>
</kw>
<msg timestamp="20201030 18:31:34.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036250597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036251069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.175" endtime="20201030 18:31:34.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036250597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036251069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.540" endtime="20201030 18:31:34.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.559" endtime="20201030 18:31:34.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.167" endtime="20201030 18:31:34.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.162" endtime="20201030 18:31:34.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:34.623" level="INFO">${debug} = {'source_diff': [0, 4.7199999999442133e-07, 9.764000000002382e-06, 4.7300000000083386e-07, 8.708000000003102e-06, 4.7199999999442133e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 8.6950000000030...</msg>
<status status="PASS" starttime="20201030 18:31:34.567" endtime="20201030 18:31:34.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.625" endtime="20201030 18:31:34.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.637" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:34.635" endtime="20201030 18:31:34.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.646" level="INFO">VALUE: {'source_diff': [0, 4.7199999999442133e-07, 9.764000000002382e-06, 4.7300000000083386e-07, 8.708000000003102e-06, 4.7199999999442133e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 8.695000000003006e-06, 4.7199999999442133e-07, 9.014000000001632e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 8.124999999997717e-06, 4.720000000013602e-07, 1.1069999999994973e-05, 4.720000000013602e-07, 9.236000000002742e-06, 4.720000000013602e-07, 1.0985999999997553e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999442133e-07, 8.208000000002602e-06, 4.7300000000083386e-07, 8.596999999999078e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.7199999999442133e-07, 8.125000000004656e-06, 4.720000000013602e-07, 1.0346999999993889e-05, 4.7300000000083386e-07, 9.333000000000258e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 1.1193999999999094e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 1.1249999999997373e-05, 4.720000000013602e-07, 8.569999999999411e-06, 4.720000000013602e-07, 8.708000000003102e-06, 4.7300000000083386e-07, 1.0082999999994069e-05, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 1.0889000000000038e-05, 4.7300000000083386e-07, 1.0471999999997483e-05, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 8.722999999995207e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.444000000003282e-06, 4.7299999999389497e-07, 9.902000000006073e-06, 4.7299999999389497e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 9.556000000000842e-06, 4.720000000013602e-07, 9.485999999996053e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 8.193999999996093e-06, 4.720000000013602e-07, 7.987000000000966e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07], 'eventtime': [0.036250597, 0.036251069, 0.036260833, 0.036261306, 0.036270014, 0.036270486, 0.036281111, 0.036281583, 0.036290278, 0.03629075, 0.036299764, 0.036300236, 0.036310528, 0.036311, 0.036319125, 0.036319597, 0.036330667, 0.036331139, 0.036340375, 0.036340847, 0.036351833, 0.036352306, 0.036360917, 0.036361389, 0.036369889, 0.036370361, 0.036378569, 0.036379042, 0.036387639, 0.036388111, 0.036398917, 0.036399389, 0.036407514, 0.036407986, 0.036418333, 0.036418806, 0.036428139, 0.036428611, 0.036437222, 0.036437694, 0.036448389, 0.036448861, 0.036459569, 0.036460042, 0.036468653, 0.036469125, 0.036480319, 0.036480792, 0.036489403, 0.036489875, 0.03650025, 0.036500722, 0.036511972, 0.036512444, 0.036521014, 0.036521486, 0.036530194, 0.036530667, 0.03654075, 0.036541222, 0.036551389, 0.036551861, 0.036561, 0.036561472, 0.036571972, 0.036572444, 0.036583333, 0.036583806, 0.036594278, 0.03659475, 0.036602847, 0.036603319, 0.036613486, 0.036613958, 0.036622681, 0.036623153, 0.036633528, 0.036634, 0.036642444, 0.036642917, 0.036652819, 0.036653292, 0.036663875, 0.036664347, 0.03667525, 0.036675722, 0.036685278, 0.03668575, 0.036695236, 0.036695708, 0.036704264, 0.036704736, 0.036713556, 0.036714028, 0.036722222, 0.036722694, 0.036730681, 0.036731153, 0.036740806, 0.036741278], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 4.7199999999442133e-07, 9.764000000002382e-06, 4.7300000000083386e-07, 8.708000000003102e-06, 4.7199999999442133e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 8.695000000003006e-06, 4.7199999999442133e-07, 9.014000000001632e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 8.124999999997717e-06, 4.720000000013602e-07, 1.1069999999994973e-05, 4.720000000013602e-07, 9.236000000002742e-06, 4.720000000013602e-07, 1.0985999999997553e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999442133e-07, 8.208000000002602e-06, 4.7300000000083386e-07, 8.596999999999078e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.7199999999442133e-07, 8.125000000004656e-06, 4.720000000013602e-07, 1.0346999999993889e-05, 4.7300000000083386e-07, 9.333000000000258e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 1.1193999999999094e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 1.1249999999997373e-05, 4.720000000013602e-07, 8.569999999999411e-06, 4.720000000013602e-07, 8.708000000003102e-06, 4.7300000000083386e-07, 1.0082999999994069e-05, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 1.0889000000000038e-05, 4.7300000000083386e-07, 1.0471999999997483e-05, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 8.722999999995207e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.444000000003282e-06, 4.7299999999389497e-07, 9.902000000006073e-06, 4.7299999999389497e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 9.556000000000842e-06, 4.720000000013602e-07, 9.485999999996053e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 8.193999999996093e-06, 4.720000000013602e-07, 7.987000000000966e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:34.639" endtime="20201030 18:31:34.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.630" endtime="20201030 18:31:34.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:34.660" level="INFO">${RESULT} = [{'diff': 4.7199999999442133e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07...</msg>
<status status="PASS" starttime="20201030 18:31:34.651" endtime="20201030 18:31:34.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:34.669" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4....</msg>
<status status="PASS" starttime="20201030 18:31:34.662" endtime="20201030 18:31:34.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.679" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:34.677" endtime="20201030 18:31:34.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.685" level="INFO">VALUE: [4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:31:34.682" endtime="20201030 18:31:34.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.671" endtime="20201030 18:31:34.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:34.696" endtime="20201030 18:31:34.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.692" endtime="20201030 18:31:34.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.690" endtime="20201030 18:31:34.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.115" endtime="20201030 18:31:34.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.114" endtime="20201030 18:31:34.721"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.743" endtime="20201030 18:31:34.753"></status>
</kw>
<msg timestamp="20201030 18:31:34.755" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.738" endtime="20201030 18:31:34.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.761" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.757" endtime="20201030 18:31:34.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.763" endtime="20201030 18:31:34.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.731" endtime="20201030 18:31:34.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.726" endtime="20201030 18:31:34.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.787" endtime="20201030 18:31:35.124"></status>
</kw>
<msg timestamp="20201030 18:31:35.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036879556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036880028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.784" endtime="20201030 18:31:35.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036879556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036880028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.134" endtime="20201030 18:31:35.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.153" endtime="20201030 18:31:35.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.777" endtime="20201030 18:31:35.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.772" endtime="20201030 18:31:35.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:35.214" level="INFO">${debug} = {'source_diff': [0, 4.720000000013602e-07, 8.415999999997203e-06, 4.7300000000083386e-07, 8.068999999999438e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 9.749999999995873...</msg>
<status status="PASS" starttime="20201030 18:31:35.161" endtime="20201030 18:31:35.215"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.217" endtime="20201030 18:31:35.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.229" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:35.226" endtime="20201030 18:31:35.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.238" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 8.415999999997203e-06, 4.7300000000083386e-07, 8.068999999999438e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 1.0820000000001662e-05, 4.7199999999442133e-07, 9.014000000001632e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 8.166999999996427e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 1.1125000000000718e-05, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 1.0263999999995943e-05, 4.720000000013602e-07, 1.0500000000003562e-05, 4.7199999999442133e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 1.1096999999994639e-05, 4.7300000000083386e-07, 7.972000000001922e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 1.0679999999999024e-05, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 9.777999999995013e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 9.999999999996123e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 9.943999999997843e-06, 4.7300000000083386e-07, 8.750000000001812e-06, 4.720000000013602e-07, 8.277999999993513e-06, 4.720000000013602e-07, 1.1222000000005172e-05, 4.7199999999442133e-07, 1.0695000000005006e-05, 4.7199999999442133e-07, 9.333000000000258e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.7300000000083386e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0291000000002548e-05, 4.7300000000083386e-07, 1.079099999999611e-05, 4.7300000000083386e-07, 9.222000000003172e-06, 4.7199999999442133e-07, 1.0833000000001758e-05, 4.7300000000083386e-07, 9.041000000001298e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 1.0665999999999454e-05, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.7199999999442133e-07, 9.237000000002216e-06, 4.720000000013602e-07], 'eventtime': [0.036879556, 0.036880028, 0.036888444, 0.036888917, 0.036896986, 0.036897458, 0.036907528, 0.036908, 0.03691775, 0.036918222, 0.036929042, 0.036929514, 0.036938528, 0.036939, 0.036947083, 0.036947556, 0.036956375, 0.036956847, 0.03696775, 0.036968222, 0.036977889, 0.036978361, 0.036986528, 0.036987, 0.036995819, 0.036996292, 0.037005944, 0.037006417, 0.037017542, 0.037018014, 0.037026931, 0.037027403, 0.037035486, 0.037035958, 0.037045611, 0.037046083, 0.037056167, 0.037056639, 0.037066903, 0.037067375, 0.037077875, 0.037078347, 0.037089264, 0.037089736, 0.0370995, 0.037099972, 0.037111069, 0.037111542, 0.037119514, 0.037119986, 0.037128292, 0.037128764, 0.037139444, 0.037139917, 0.037148736, 0.037149208, 0.037158986, 0.037159458, 0.03717025, 0.037170722, 0.037180722, 0.037181194, 0.03718975, 0.037190222, 0.037200917, 0.037201389, 0.037211333, 0.037211806, 0.037220556, 0.037221028, 0.037229306, 0.037229778, 0.037241, 0.037241472, 0.037252167, 0.037252639, 0.037261972, 0.037262444, 0.037271569, 0.037272042, 0.037282431, 0.037282903, 0.037293194, 0.037293667, 0.037304458, 0.037304931, 0.037314153, 0.037314625, 0.037325458, 0.037325931, 0.037334972, 0.037335444, 0.037345819, 0.037346292, 0.037356958, 0.037357431, 0.037367597, 0.037368069, 0.037377306, 0.037377778], 'sourcediff': [0, 4.720000000013602e-07, 8.415999999997203e-06, 4.7300000000083386e-07, 8.068999999999438e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 1.0820000000001662e-05, 4.7199999999442133e-07, 9.014000000001632e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 8.166999999996427e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 1.1125000000000718e-05, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 1.0263999999995943e-05, 4.720000000013602e-07, 1.0500000000003562e-05, 4.7199999999442133e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 1.1096999999994639e-05, 4.7300000000083386e-07, 7.972000000001922e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 1.0679999999999024e-05, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 9.777999999995013e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 9.999999999996123e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 9.943999999997843e-06, 4.7300000000083386e-07, 8.750000000001812e-06, 4.720000000013602e-07, 8.277999999993513e-06, 4.720000000013602e-07, 1.1222000000005172e-05, 4.7199999999442133e-07, 1.0695000000005006e-05, 4.7199999999442133e-07, 9.333000000000258e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.7300000000083386e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0291000000002548e-05, 4.7300000000083386e-07, 1.079099999999611e-05, 4.7300000000083386e-07, 9.222000000003172e-06, 4.7199999999442133e-07, 1.0833000000001758e-05, 4.7300000000083386e-07, 9.041000000001298e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 1.0665999999999454e-05, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.7199999999442133e-07, 9.237000000002216e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:35.231" endtime="20201030 18:31:35.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.221" endtime="20201030 18:31:35.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:35.252" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07},...</msg>
<status status="PASS" starttime="20201030 18:31:35.243" endtime="20201030 18:31:35.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:35.262" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:31:35.254" endtime="20201030 18:31:35.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.272" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:35.270" endtime="20201030 18:31:35.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.278" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:31:35.274" endtime="20201030 18:31:35.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.264" endtime="20201030 18:31:35.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:35.289" endtime="20201030 18:31:35.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.285" endtime="20201030 18:31:35.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.283" endtime="20201030 18:31:35.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.723" endtime="20201030 18:31:35.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.722" endtime="20201030 18:31:35.314"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.334" endtime="20201030 18:31:35.345"></status>
</kw>
<msg timestamp="20201030 18:31:35.346" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.331" endtime="20201030 18:31:35.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.352" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.349" endtime="20201030 18:31:35.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.355" endtime="20201030 18:31:35.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.324" endtime="20201030 18:31:35.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.319" endtime="20201030 18:31:35.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.378" endtime="20201030 18:31:35.712"></status>
</kw>
<msg timestamp="20201030 18:31:35.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035211819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035212292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.374" endtime="20201030 18:31:35.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035211819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035212292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.722" endtime="20201030 18:31:35.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.745" endtime="20201030 18:31:35.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.367" endtime="20201030 18:31:35.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.363" endtime="20201030 18:31:35.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:35.809" level="INFO">${debug} = {'source_diff': [0, 4.7300000000083386e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 1.1013999999996693e-05, 4.720000000013602e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 1.1014000000003...</msg>
<status status="PASS" starttime="20201030 18:31:35.755" endtime="20201030 18:31:35.810"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.812" endtime="20201030 18:31:35.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.824" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:35.822" endtime="20201030 18:31:35.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.834" level="INFO">VALUE: {'source_diff': [0, 4.7300000000083386e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 1.1013999999996693e-05, 4.720000000013602e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 1.1014000000003632e-05, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 9.137999999998814e-06, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 8.805000000000618e-06, 4.720000000013602e-07, 1.0749999999996873e-05, 4.7300000000083386e-07, 1.0444000000005282e-05, 4.7199999999442133e-07, 1.0584000000000982e-05, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 1.0889000000000038e-05, 4.7300000000083386e-07, 1.101299999999722e-05, 4.7300000000083386e-07, 8.305000000000118e-06, 4.720000000013602e-07, 9.014000000001632e-06, 4.7300000000083386e-07, 1.0388000000000064e-05, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 1.0222999999996707e-05, 4.720000000013602e-07, 1.0542000000002272e-05, 4.7199999999442133e-07, 9.764000000002382e-06, 4.720000000013602e-07, 8.194000000003032e-06, 4.7299999999389497e-07, 8.916000000004642e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 1.1208999999998137e-05, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7300000000083386e-07, 9.415999999998204e-06, 4.7300000000083386e-07, 9.971999999996983e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 8.945000000003256e-06, 4.7199999999442133e-07, 9.444000000004282e-06, 4.720000000013602e-07, 9.027999999994263e-06, 4.720000000013602e-07, 8.389000000004476e-06, 4.7300000000083386e-07, 1.0610999999993709e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 9.778000000001952e-06, 4.720000000013602e-07, 8.485999999995053e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.056000000000342e-06, 4.720000000013602e-07], 'eventtime': [0.035211819, 0.035212292, 0.035223181, 0.035223653, 0.035234667, 0.035235139, 0.035246347, 0.035246819, 0.035257833, 0.035258306, 0.035267958, 0.035268431, 0.035277569, 0.035278042, 0.035287167, 0.035287639, 0.035297917, 0.035298389, 0.035307, 0.035307472, 0.035318167, 0.035318639, 0.035328819, 0.035329292, 0.035338097, 0.035338569, 0.035349319, 0.035349792, 0.035360236, 0.035360708, 0.035371292, 0.035371764, 0.035382472, 0.035382944, 0.035393833, 0.035394306, 0.035405319, 0.035405792, 0.035414097, 0.035414569, 0.035423583, 0.035424056, 0.035434444, 0.035434917, 0.035443847, 0.035444319, 0.035454542, 0.035455014, 0.035465556, 0.035466028, 0.035475792, 0.035476264, 0.035484458, 0.035484931, 0.035493847, 0.035494319, 0.03550325, 0.035503722, 0.035514931, 0.035515403, 0.035524014, 0.035524486, 0.035534569, 0.035535042, 0.035544458, 0.035544931, 0.035554903, 0.035555375, 0.035563764, 0.035564236, 0.035573181, 0.035573653, 0.035583097, 0.035583569, 0.035592597, 0.035593069, 0.035601458, 0.035601931, 0.035612542, 0.035613014, 0.035622139, 0.035622611, 0.035630903, 0.035631375, 0.035641153, 0.035641625, 0.035650111, 0.035650583, 0.03566025, 0.035660722, 0.035670778, 0.03567125, 0.035680181, 0.035680653, 0.035691556, 0.035692028, 0.035701389, 0.035701861, 0.035710917, 0.035711389], 'sourcediff': [0, 4.7300000000083386e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 1.1013999999996693e-05, 4.720000000013602e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 1.1014000000003632e-05, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 9.137999999998814e-06, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 8.805000000000618e-06, 4.720000000013602e-07, 1.0749999999996873e-05, 4.7300000000083386e-07, 1.0444000000005282e-05, 4.7199999999442133e-07, 1.0584000000000982e-05, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 1.0889000000000038e-05, 4.7300000000083386e-07, 1.101299999999722e-05, 4.7300000000083386e-07, 8.305000000000118e-06, 4.720000000013602e-07, 9.014000000001632e-06, 4.7300000000083386e-07, 1.0388000000000064e-05, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 1.0222999999996707e-05, 4.720000000013602e-07, 1.0542000000002272e-05, 4.7199999999442133e-07, 9.764000000002382e-06, 4.720000000013602e-07, 8.194000000003032e-06, 4.7299999999389497e-07, 8.916000000004642e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 1.1208999999998137e-05, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7300000000083386e-07, 9.415999999998204e-06, 4.7300000000083386e-07, 9.971999999996983e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 8.945000000003256e-06, 4.7199999999442133e-07, 9.444000000004282e-06, 4.720000000013602e-07, 9.027999999994263e-06, 4.720000000013602e-07, 8.389000000004476e-06, 4.7300000000083386e-07, 1.0610999999993709e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 9.778000000001952e-06, 4.720000000013602e-07, 8.485999999995053e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.056000000000342e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:35.827" endtime="20201030 18:31:35.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.817" endtime="20201030 18:31:35.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:35.848" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}...</msg>
<status status="PASS" starttime="20201030 18:31:35.839" endtime="20201030 18:31:35.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:35.857" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4....</msg>
<status status="PASS" starttime="20201030 18:31:35.850" endtime="20201030 18:31:35.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.869" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:35.865" endtime="20201030 18:31:35.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.874" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:31:35.871" endtime="20201030 18:31:35.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.859" endtime="20201030 18:31:35.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:35.886" endtime="20201030 18:31:35.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.881" endtime="20201030 18:31:35.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.879" endtime="20201030 18:31:35.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.316" endtime="20201030 18:31:35.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.315" endtime="20201030 18:31:35.911"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.931" endtime="20201030 18:31:35.941"></status>
</kw>
<msg timestamp="20201030 18:31:35.942" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.927" endtime="20201030 18:31:35.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.949" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.945" endtime="20201030 18:31:35.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.951" endtime="20201030 18:31:35.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.920" endtime="20201030 18:31:35.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.916" endtime="20201030 18:31:35.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.974" endtime="20201030 18:31:36.307"></status>
</kw>
<msg timestamp="20201030 18:31:36.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035303472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035303944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.970" endtime="20201030 18:31:36.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035303472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035303944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.317" endtime="20201030 18:31:36.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.337" endtime="20201030 18:31:36.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.963" endtime="20201030 18:31:36.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.959" endtime="20201030 18:31:36.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:36.406" level="INFO">${debug} = {'source_diff': [0, 4.7199999999442133e-07, 1.0403000000006046e-05, 4.7199999999442133e-07, 8.167000000003366e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 1.0916999999999...</msg>
<status status="PASS" starttime="20201030 18:31:36.348" endtime="20201030 18:31:36.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.409" endtime="20201030 18:31:36.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.421" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:36.419" endtime="20201030 18:31:36.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.430" level="INFO">VALUE: {'source_diff': [0, 4.7199999999442133e-07, 1.0403000000006046e-05, 4.7199999999442133e-07, 8.167000000003366e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 7.986000000001492e-06, 4.7299999999389497e-07, 9.138000000005753e-06, 4.7300000000083386e-07, 1.0889000000000038e-05, 4.7199999999442133e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 9.443999999997343e-06, 4.720000000013602e-07, 1.1209000000005076e-05, 4.7199999999442133e-07, 8.083000000005947e-06, 4.7199999999442133e-07, 9.570000000000412e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 8.445000000002756e-06, 4.7199999999442133e-07, 1.1083000000002008e-05, 4.7300000000083386e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 9.735999999996303e-06, 4.7300000000083386e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 1.1222000000005172e-05, 4.7199999999442133e-07, 1.0264000000002882e-05, 4.7300000000083386e-07, 1.1125000000000718e-05, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.0249999999996373e-05, 4.720000000013602e-07, 9.443999999997343e-06, 4.7300000000083386e-07, 9.333000000000258e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.7300000000083386e-07, 9.138000000005753e-06, 4.7299999999389497e-07, 8.125000000004656e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.720000000013602e-07, 7.971999999994983e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 9.430999999997247e-06, 4.720000000013602e-07, 1.1221999999998233e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 1.0709000000004576e-05, 4.720000000013602e-07, 9.333000000000258e-06, 4.7299999999389497e-07, 8.305000000000118e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 9.792000000001522e-06, 4.7199999999442133e-07], 'eventtime': [0.035303472, 0.035303944, 0.035314347, 0.035314819, 0.035322986, 0.035323458, 0.035333625, 0.035334097, 0.035345014, 0.035345486, 0.035356194, 0.035356667, 0.035367875, 0.035368347, 0.035376333, 0.035376806, 0.035385944, 0.035386417, 0.035397306, 0.035397778, 0.035406583, 0.035407056, 0.0354165, 0.035416972, 0.035428181, 0.035428653, 0.035436736, 0.035437208, 0.035446778, 0.03544725, 0.035455847, 0.035456319, 0.035464764, 0.035465236, 0.035476319, 0.035476792, 0.035486861, 0.035487333, 0.035497069, 0.035497542, 0.035506778, 0.03550725, 0.035518472, 0.035518944, 0.035529208, 0.035529681, 0.035540806, 0.035541278, 0.035550931, 0.035551403, 0.035561653, 0.035562125, 0.035571569, 0.035572042, 0.035581375, 0.035581847, 0.035592333, 0.035592806, 0.035601944, 0.035602417, 0.035610542, 0.035611014, 0.035620417, 0.035620889, 0.035628861, 0.035629333, 0.035639403, 0.035639875, 0.035649306, 0.035649778, 0.035661, 0.035661472, 0.035669764, 0.035670236, 0.035680944, 0.035681417, 0.035692625, 0.035693097, 0.035702764, 0.035703236, 0.035711514, 0.035711986, 0.035719972, 0.035720444, 0.035731153, 0.035731625, 0.035740958, 0.035741431, 0.035749736, 0.035750208, 0.035758292, 0.035758764, 0.035767056, 0.035767528, 0.035777597, 0.035778069, 0.035787, 0.035787472, 0.035797264, 0.035797736], 'sourcediff': [0, 4.7199999999442133e-07, 1.0403000000006046e-05, 4.7199999999442133e-07, 8.167000000003366e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 7.986000000001492e-06, 4.7299999999389497e-07, 9.138000000005753e-06, 4.7300000000083386e-07, 1.0889000000000038e-05, 4.7199999999442133e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 9.443999999997343e-06, 4.720000000013602e-07, 1.1209000000005076e-05, 4.7199999999442133e-07, 8.083000000005947e-06, 4.7199999999442133e-07, 9.570000000000412e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 8.445000000002756e-06, 4.7199999999442133e-07, 1.1083000000002008e-05, 4.7300000000083386e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 9.735999999996303e-06, 4.7300000000083386e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 1.1222000000005172e-05, 4.7199999999442133e-07, 1.0264000000002882e-05, 4.7300000000083386e-07, 1.1125000000000718e-05, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.0249999999996373e-05, 4.720000000013602e-07, 9.443999999997343e-06, 4.7300000000083386e-07, 9.333000000000258e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.7300000000083386e-07, 9.138000000005753e-06, 4.7299999999389497e-07, 8.125000000004656e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.720000000013602e-07, 7.971999999994983e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 9.430999999997247e-06, 4.720000000013602e-07, 1.1221999999998233e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 1.0709000000004576e-05, 4.720000000013602e-07, 9.333000000000258e-06, 4.7299999999389497e-07, 8.305000000000118e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 9.792000000001522e-06, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:36.423" endtime="20201030 18:31:36.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.413" endtime="20201030 18:31:36.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:36.444" level="INFO">${RESULT} = [{'diff': 4.7199999999442133e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}...</msg>
<status status="PASS" starttime="20201030 18:31:36.436" endtime="20201030 18:31:36.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:36.454" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4....</msg>
<status status="PASS" starttime="20201030 18:31:36.446" endtime="20201030 18:31:36.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.464" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:36.462" endtime="20201030 18:31:36.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.469" level="INFO">VALUE: [4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201030 18:31:36.466" endtime="20201030 18:31:36.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.456" endtime="20201030 18:31:36.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:36.481" endtime="20201030 18:31:36.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.477" endtime="20201030 18:31:36.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.474" endtime="20201030 18:31:36.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.912" endtime="20201030 18:31:36.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.911" endtime="20201030 18:31:36.506"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.528" endtime="20201030 18:31:36.539"></status>
</kw>
<msg timestamp="20201030 18:31:36.540" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.523" endtime="20201030 18:31:36.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.546" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.542" endtime="20201030 18:31:36.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.548" endtime="20201030 18:31:36.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.516" endtime="20201030 18:31:36.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.511" endtime="20201030 18:31:36.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.571" endtime="20201030 18:31:36.907"></status>
</kw>
<msg timestamp="20201030 18:31:36.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036955222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036955694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.568" endtime="20201030 18:31:36.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036955222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036955694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.917" endtime="20201030 18:31:36.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.936" endtime="20201030 18:31:36.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.561" endtime="20201030 18:31:36.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.556" endtime="20201030 18:31:36.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:36.998" level="INFO">${debug} = {'source_diff': [0, 4.7199999999442133e-07, 1.1084000000001482e-05, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 8.19500000000250...</msg>
<status status="PASS" starttime="20201030 18:31:36.944" endtime="20201030 18:31:36.998"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.000" endtime="20201030 18:31:37.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.012" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:37.010" endtime="20201030 18:31:37.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.021" level="INFO">VALUE: {'source_diff': [0, 4.7199999999442133e-07, 1.1084000000001482e-05, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 8.195000000002506e-06, 4.720000000013602e-07, 1.1125000000000718e-05, 4.7199999999442133e-07, 1.1097000000001578e-05, 4.7300000000083386e-07, 8.318999999999688e-06, 4.720000000013602e-07, 9.514000000002132e-06, 4.7199999999442133e-07, 8.209000000002076e-06, 4.720000000013602e-07, 1.1180999999998997e-05, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.7199999999442133e-07, 1.0055000000001868e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 1.0499999999996623e-05, 4.7300000000083386e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 1.1125000000000718e-05, 4.7300000000083386e-07, 1.0068999999994499e-05, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 1.0944999999998317e-05, 4.720000000013602e-07, 1.0250000000003312e-05, 4.7199999999442133e-07, 9.764000000002382e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.7300000000083386e-07, 1.0264000000002882e-05, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 1.0334000000000731e-05, 4.7199999999442133e-07, 9.903000000005546e-06, 4.7199999999442133e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 1.1236000000004742e-05, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 8.013999999993693e-06, 4.720000000013602e-07, 8.153000000003796e-06, 4.720000000013602e-07, 8.485999999995053e-06, 4.720000000013602e-07, 9.056000000000342e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 1.0264000000002882e-05, 4.7199999999442133e-07, 8.097000000005516e-06, 4.7199999999442133e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 7.972000000001922e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.7199999999442133e-07, 1.0124999999999718e-05, 4.7300000000083386e-07, 1.1236000000004742e-05, 4.7199999999442133e-07, 1.0472000000004422e-05, 4.720000000013602e-07], 'eventtime': [0.036955222, 0.036955694, 0.036966778, 0.03696725, 0.036976431, 0.036976903, 0.036988111, 0.036988583, 0.036996778, 0.03699725, 0.037008375, 0.037008847, 0.037019944, 0.037020417, 0.037028736, 0.037029208, 0.037038722, 0.037039194, 0.037047403, 0.037047875, 0.037059056, 0.037059528, 0.037067431, 0.037067903, 0.037077028, 0.0370775, 0.037086431, 0.037086903, 0.037096958, 0.037097431, 0.037106042, 0.037106514, 0.037115431, 0.037115903, 0.037126486, 0.037126958, 0.037137458, 0.037137931, 0.037149042, 0.037149514, 0.037160722, 0.037161194, 0.037172319, 0.037172792, 0.037182861, 0.037183333, 0.037194236, 0.037194708, 0.037205653, 0.037206125, 0.037216375, 0.037216847, 0.037226611, 0.037227083, 0.037236319, 0.037236792, 0.037247056, 0.037247528, 0.037255625, 0.037256097, 0.037266431, 0.037266903, 0.037276806, 0.037277278, 0.037286417, 0.037286889, 0.037298125, 0.037298597, 0.037306667, 0.037307139, 0.037315153, 0.037315625, 0.037323778, 0.03732425, 0.037332736, 0.037333208, 0.037342264, 0.037342736, 0.037353444, 0.037353917, 0.037364181, 0.037364653, 0.03737275, 0.037373222, 0.0373835, 0.037383972, 0.037392375, 0.037392847, 0.037400931, 0.037401403, 0.037409375, 0.037409847, 0.037420486, 0.037420958, 0.037431083, 0.037431556, 0.037442792, 0.037443264, 0.037453736, 0.037454208], 'sourcediff': [0, 4.7199999999442133e-07, 1.1084000000001482e-05, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 8.195000000002506e-06, 4.720000000013602e-07, 1.1125000000000718e-05, 4.7199999999442133e-07, 1.1097000000001578e-05, 4.7300000000083386e-07, 8.318999999999688e-06, 4.720000000013602e-07, 9.514000000002132e-06, 4.7199999999442133e-07, 8.209000000002076e-06, 4.720000000013602e-07, 1.1180999999998997e-05, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.7199999999442133e-07, 1.0055000000001868e-05, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 1.0499999999996623e-05, 4.7300000000083386e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 1.1125000000000718e-05, 4.7300000000083386e-07, 1.0068999999994499e-05, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 1.0944999999998317e-05, 4.720000000013602e-07, 1.0250000000003312e-05, 4.7199999999442133e-07, 9.764000000002382e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.7300000000083386e-07, 1.0264000000002882e-05, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 1.0334000000000731e-05, 4.7199999999442133e-07, 9.903000000005546e-06, 4.7199999999442133e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 1.1236000000004742e-05, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 8.013999999993693e-06, 4.720000000013602e-07, 8.153000000003796e-06, 4.720000000013602e-07, 8.485999999995053e-06, 4.720000000013602e-07, 9.056000000000342e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 1.0264000000002882e-05, 4.7199999999442133e-07, 8.097000000005516e-06, 4.7199999999442133e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 7.972000000001922e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.7199999999442133e-07, 1.0124999999999718e-05, 4.7300000000083386e-07, 1.1236000000004742e-05, 4.7199999999442133e-07, 1.0472000000004422e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:37.014" endtime="20201030 18:31:37.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.005" endtime="20201030 18:31:37.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:37.035" level="INFO">${RESULT} = [{'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07},...</msg>
<status status="PASS" starttime="20201030 18:31:37.026" endtime="20201030 18:31:37.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:37.047" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:31:37.037" endtime="20201030 18:31:37.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.057" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:37.055" endtime="20201030 18:31:37.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.062" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:31:37.059" endtime="20201030 18:31:37.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.049" endtime="20201030 18:31:37.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.074" endtime="20201030 18:31:37.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.070" endtime="20201030 18:31:37.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.067" endtime="20201030 18:31:37.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.508" endtime="20201030 18:31:37.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.507" endtime="20201030 18:31:37.099"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.119" endtime="20201030 18:31:37.130"></status>
</kw>
<msg timestamp="20201030 18:31:37.131" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.116" endtime="20201030 18:31:37.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.137" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.133" endtime="20201030 18:31:37.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.139" endtime="20201030 18:31:37.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.109" endtime="20201030 18:31:37.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.104" endtime="20201030 18:31:37.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.162" endtime="20201030 18:31:37.495"></status>
</kw>
<msg timestamp="20201030 18:31:37.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035449819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035450292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.159" endtime="20201030 18:31:37.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035449819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035450292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.505" endtime="20201030 18:31:37.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.524" endtime="20201030 18:31:37.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.152" endtime="20201030 18:31:37.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.147" endtime="20201030 18:31:37.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:31:37.587" level="INFO">${debug} = {'source_diff': [0, 4.7300000000083386e-07, 8.805000000000618e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.7300000000083386e-07, 9.221999999996233e-06, 4.720000000013602e-07, 1.12219999999982...</msg>
<status status="PASS" starttime="20201030 18:31:37.532" endtime="20201030 18:31:37.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.589" endtime="20201030 18:31:37.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.601" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:31:37.599" endtime="20201030 18:31:37.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.610" level="INFO">VALUE: {'source_diff': [0, 4.7300000000083386e-07, 8.805000000000618e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.7300000000083386e-07, 9.221999999996233e-06, 4.720000000013602e-07, 1.1221999999998233e-05, 4.7300000000083386e-07, 9.652000000005823e-06, 4.7299999999389497e-07, 1.0708000000005102e-05, 4.7199999999442133e-07, 1.1000000000004062e-05, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 8.207999999995663e-06, 4.720000000013602e-07, 9.111999999998621e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 9.847999999999801e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 9.527999999994763e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 1.1111000000001148e-05, 4.7300000000083386e-07, 1.0068999999994499e-05, 4.720000000013602e-07, 1.1111000000001148e-05, 4.7300000000083386e-07, 7.972000000001922e-06, 4.7199999999442133e-07, 8.832999999999758e-06, 4.7300000000083386e-07, 8.097000000005516e-06, 4.7199999999442133e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 8.513999999994193e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.720000000013602e-07, 9.459000000003326e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.7199999999442133e-07, 1.0708000000005102e-05, 4.720000000013602e-07, 8.472999999994957e-06, 4.720000000013602e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 8.999999999995123e-06, 4.720000000013602e-07, 8.431000000003186e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 1.0584000000000982e-05, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.194000000003032e-06, 4.7300000000083386e-07, 1.1013999999996693e-05, 4.720000000013602e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 1.027699999999604e-05, 4.7300000000083386e-07, 1.1083000000002008e-05, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 1.0486000000003992e-05, 4.7300000000083386e-07, 9.76299999999597e-06, 4.7300000000083386e-07], 'eventtime': [0.035449819, 0.035450292, 0.035459097, 0.035459569, 0.035470069, 0.035470542, 0.035479764, 0.035480236, 0.035491458, 0.035491931, 0.035501583, 0.035502056, 0.035512764, 0.035513236, 0.035524236, 0.035524708, 0.035534042, 0.035534514, 0.035542722, 0.035543194, 0.035552306, 0.035552778, 0.035563486, 0.035563958, 0.035573806, 0.035574278, 0.035584236, 0.035584708, 0.035595514, 0.035595986, 0.035605514, 0.035605986, 0.035615125, 0.035615597, 0.035623681, 0.035624153, 0.03563475, 0.035635222, 0.035646333, 0.035646806, 0.035656875, 0.035657347, 0.035668458, 0.035668931, 0.035676903, 0.035677375, 0.035686208, 0.035686681, 0.035694778, 0.03569525, 0.035705736, 0.035706208, 0.035714722, 0.035715194, 0.035724597, 0.035725069, 0.035734528, 0.035735, 0.035743306, 0.035743778, 0.035754486, 0.035754958, 0.035763431, 0.035763903, 0.035775014, 0.035775486, 0.035784486, 0.035784958, 0.035793389, 0.035793861, 0.035802361, 0.035802833, 0.035812917, 0.035813389, 0.035821778, 0.03582225, 0.035830875, 0.035831347, 0.035841931, 0.035842403, 0.035852153, 0.035852625, 0.035860819, 0.035861292, 0.035872306, 0.035872778, 0.035882944, 0.035883417, 0.035893694, 0.035894167, 0.03590525, 0.035905722, 0.035916139, 0.035916611, 0.035926375, 0.035926847, 0.035937333, 0.035937806, 0.035947569, 0.035948042], 'sourcediff': [0, 4.7300000000083386e-07, 8.805000000000618e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.7300000000083386e-07, 9.221999999996233e-06, 4.720000000013602e-07, 1.1221999999998233e-05, 4.7300000000083386e-07, 9.652000000005823e-06, 4.7299999999389497e-07, 1.0708000000005102e-05, 4.7199999999442133e-07, 1.1000000000004062e-05, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 8.207999999995663e-06, 4.720000000013602e-07, 9.111999999998621e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 9.847999999999801e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 9.527999999994763e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 1.1111000000001148e-05, 4.7300000000083386e-07, 1.0068999999994499e-05, 4.720000000013602e-07, 1.1111000000001148e-05, 4.7300000000083386e-07, 7.972000000001922e-06, 4.7199999999442133e-07, 8.832999999999758e-06, 4.7300000000083386e-07, 8.097000000005516e-06, 4.7199999999442133e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 8.513999999994193e-06, 4.720000000013602e-07, 9.402999999998107e-06, 4.720000000013602e-07, 9.459000000003326e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.7199999999442133e-07, 1.0708000000005102e-05, 4.720000000013602e-07, 8.472999999994957e-06, 4.720000000013602e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 8.999999999995123e-06, 4.720000000013602e-07, 8.431000000003186e-06, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 1.0584000000000982e-05, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.194000000003032e-06, 4.7300000000083386e-07, 1.1013999999996693e-05, 4.720000000013602e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 1.027699999999604e-05, 4.7300000000083386e-07, 1.1083000000002008e-05, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 1.0486000000003992e-05, 4.7300000000083386e-07, 9.76299999999597e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201030 18:31:37.603" endtime="20201030 18:31:37.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.594" endtime="20201030 18:31:37.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:37.624" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7299999999389497e-07...</msg>
<status status="PASS" starttime="20201030 18:31:37.615" endtime="20201030 18:31:37.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:37.633" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4...</msg>
<status status="PASS" starttime="20201030 18:31:37.626" endtime="20201030 18:31:37.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.643" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:31:37.641" endtime="20201030 18:31:37.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.649" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 18:31:37.645" endtime="20201030 18:31:37.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.635" endtime="20201030 18:31:37.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.662" endtime="20201030 18:31:37.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.656" endtime="20201030 18:31:37.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.653" endtime="20201030 18:31:37.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.101" endtime="20201030 18:31:37.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.100" endtime="20201030 18:31:37.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.390" endtime="20201030 18:31:37.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.697" endtime="20201030 18:31:37.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.692" endtime="20201030 18:31:37.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.690" endtime="20201030 18:31:37.721"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:25.201" endtime="20201030 18:31:37.721" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.738" endtime="20201030 18:31:37.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.734" endtime="20201030 18:31:37.761"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.794" endtime="20201030 18:31:37.811"></status>
</kw>
<msg timestamp="20201030 18:31:37.812" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.791" endtime="20201030 18:31:37.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.819" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.814" endtime="20201030 18:31:37.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.826" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:37.822" endtime="20201030 18:31:37.827"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:37.784" endtime="20201030 18:31:37.828"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:37.777" endtime="20201030 18:31:37.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.775" endtime="20201030 18:31:37.831"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:37.839" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:37.837" endtime="20201030 18:31:37.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.833" endtime="20201030 18:31:37.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.773" endtime="20201030 18:31:37.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.771" endtime="20201030 18:31:37.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.842" endtime="20201030 18:31:37.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.767" endtime="20201030 18:31:37.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.763" endtime="20201030 18:31:37.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.732" endtime="20201030 18:31:37.849"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.873" endtime="20201030 18:31:37.887"></status>
</kw>
<msg timestamp="20201030 18:31:37.888" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.870" endtime="20201030 18:31:37.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.894" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.890" endtime="20201030 18:31:37.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.897" endtime="20201030 18:31:37.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.862" endtime="20201030 18:31:37.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.856" endtime="20201030 18:31:37.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.920" endtime="20201030 18:31:38.277"></status>
</kw>
<msg timestamp="20201030 18:31:38.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126205764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126214681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.917" endtime="20201030 18:31:38.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126205764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126214681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.286" endtime="20201030 18:31:38.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.305" endtime="20201030 18:31:38.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.910" endtime="20201030 18:31:38.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.905" endtime="20201030 18:31:38.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:38.322" level="INFO">${RESULT} = [{'diff': 8.916999999997177e-06}, {'diff': 8.94499999998244e-06}, {'diff': 9.763999999995443e-06}, {'diff': 9.4169999999838e-06}, {'diff': 9.639000000005726e-06}, {'diff': 9.417000000011555e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 18:31:38.313" endtime="20201030 18:31:38.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:38.331" level="INFO">${OVERHEAD} = {'diff': [8.916999999997177e-06, 8.94499999998244e-06, 9.763999999995443e-06, 9.4169999999838e-06, 9.639000000005726e-06, 9.417000000011555e-06, 8.916999999997177e-06, 8.915999999997704e-06, 9.5829999...</msg>
<status status="PASS" starttime="20201030 18:31:38.324" endtime="20201030 18:31:38.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.343" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:38.341" endtime="20201030 18:31:38.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.349" level="INFO">VALUE: [8.916999999997177e-06, 8.94499999998244e-06, 9.763999999995443e-06, 9.4169999999838e-06, 9.639000000005726e-06, 9.417000000011555e-06, 8.916999999997177e-06, 8.915999999997704e-06, 9.582999999979691e-06, 8.944000000010721e-06, 9.235999999995803e-06, 9.58400000000692e-06, 8.930999999989808e-06, 9.069999999999911e-06, 9.4169999999838e-06, 9.222000000003172e-06, 9.25000000001619e-06, 9.542000000001272e-06, 8.915999999997704e-06, 8.916999999997177e-06, 8.93000000001809e-06, 9.56899999998706e-06, 9.083999999992542e-06, 8.931000000017564e-06, 9.235999999995803e-06, 9.431000000004186e-06, 8.999999999981245e-06, 9.471999999982605e-06, 9.097000000013455e-06, 9.583000000007447e-06, 9.431000000004186e-06, 9.429999999976957e-06, 9.097999999985174e-06, 9.763999999995443e-06, 9.763999999995443e-06, 9.402999999991168e-06, 9.082999999993069e-06, 9.750000000002812e-06, 9.569000000014816e-06, 9.26400000000882e-06, 9.721999999989794e-06, 9.431000000004186e-06, 9.082999999993069e-06, 9.30499999998724e-06, 9.777999999988074e-06, 9.415999999984326e-06, 9.431000000004186e-06, 9.249999999988434e-06, 9.263999999981065e-06, 9.069000000000438e-06]</msg>
<status status="PASS" starttime="20201030 18:31:38.346" endtime="20201030 18:31:38.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.333" endtime="20201030 18:31:38.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:38.360" endtime="20201030 18:31:38.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.356" endtime="20201030 18:31:38.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.354" endtime="20201030 18:31:38.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.852" endtime="20201030 18:31:38.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.851" endtime="20201030 18:31:38.386"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.406" endtime="20201030 18:31:38.419"></status>
</kw>
<msg timestamp="20201030 18:31:38.420" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.402" endtime="20201030 18:31:38.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.426" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.422" endtime="20201030 18:31:38.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.428" endtime="20201030 18:31:38.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.395" endtime="20201030 18:31:38.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.391" endtime="20201030 18:31:38.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.452" endtime="20201030 18:31:38.805"></status>
</kw>
<msg timestamp="20201030 18:31:38.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036037611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036046694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.448" endtime="20201030 18:31:38.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036037611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036046694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.815" endtime="20201030 18:31:38.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.833" endtime="20201030 18:31:38.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.441" endtime="20201030 18:31:38.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.436" endtime="20201030 18:31:38.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:38.851" level="INFO">${RESULT} = [{'diff': 9.083000000000008e-06}, {'diff': 8.930000000004212e-06}, {'diff': 9.597999999999551e-06}, {'diff': 9.597000000000078e-06}, {'diff': 9.083000000000008e-06}, {'diff': 9.778000000001952e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:38.842" endtime="20201030 18:31:38.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:38.863" level="INFO">${OVERHEAD} = {'diff': [9.083000000000008e-06, 8.930000000004212e-06, 9.597999999999551e-06, 9.597000000000078e-06, 9.083000000000008e-06, 9.778000000001952e-06, 9.083000000000008e-06, 9.416999999997677e-06, 9.9029...</msg>
<status status="PASS" starttime="20201030 18:31:38.853" endtime="20201030 18:31:38.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.873" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:38.870" endtime="20201030 18:31:38.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.878" level="INFO">VALUE: [9.083000000000008e-06, 8.930000000004212e-06, 9.597999999999551e-06, 9.597000000000078e-06, 9.083000000000008e-06, 9.778000000001952e-06, 9.083000000000008e-06, 9.416999999997677e-06, 9.902999999998607e-06, 8.903000000004546e-06, 9.083999999999481e-06, 9.277999999994513e-06, 9.249999999995373e-06, 9.430000000004712e-06, 9.568999999993999e-06, 8.917000000004116e-06, 8.971999999995983e-06, 9.610999999999648e-06, 8.958000000003352e-06, 9.263999999994943e-06, 9.764000000002382e-06, 9.597999999999551e-06, 9.653000000005296e-06, 9.471999999996483e-06, 9.110999999999148e-06, 9.597000000000078e-06, 9.763000000002908e-06, 9.096999999999578e-06, 9.583000000000508e-06, 9.223000000002646e-06, 9.415999999998204e-06, 9.235999999995803e-06, 9.083000000000008e-06, 9.416999999997677e-06, 9.763999999995443e-06, 9.263999999994943e-06, 9.722000000003672e-06, 9.764000000002382e-06, 8.930000000004212e-06, 9.444999999996817e-06, 9.249999999995373e-06, 9.096999999999578e-06, 9.125000000005656e-06, 9.679999999998024e-06, 9.083000000000008e-06, 9.250000000002312e-06, 9.597000000000078e-06, 9.083000000000008e-06, 9.264000000001882e-06, 9.555000000001368e-06]</msg>
<status status="PASS" starttime="20201030 18:31:38.875" endtime="20201030 18:31:38.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.864" endtime="20201030 18:31:38.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:38.890" endtime="20201030 18:31:38.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.886" endtime="20201030 18:31:38.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.883" endtime="20201030 18:31:38.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.387" endtime="20201030 18:31:38.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.386" endtime="20201030 18:31:38.916"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.943" endtime="20201030 18:31:38.958"></status>
</kw>
<msg timestamp="20201030 18:31:38.960" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.939" endtime="20201030 18:31:38.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.967" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.962" endtime="20201030 18:31:38.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.971" endtime="20201030 18:31:38.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.929" endtime="20201030 18:31:38.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.923" endtime="20201030 18:31:38.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.998" endtime="20201030 18:31:39.361"></status>
</kw>
<msg timestamp="20201030 18:31:39.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044582819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044592069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.994" endtime="20201030 18:31:39.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044582819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044592069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.371" endtime="20201030 18:31:39.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.390" endtime="20201030 18:31:39.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.987" endtime="20201030 18:31:39.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.981" endtime="20201030 18:31:39.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:39.409" level="INFO">${RESULT} = [{'diff': 9.249999999995373e-06}, {'diff': 9.042000000000772e-06}, {'diff': 9.110999999999148e-06}, {'diff': 9.374999999998967e-06}, {'diff': 9.416999999997677e-06}, {'diff': 9.597000000000078e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:39.398" endtime="20201030 18:31:39.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:39.419" level="INFO">${OVERHEAD} = {'diff': [9.249999999995373e-06, 9.042000000000772e-06, 9.110999999999148e-06, 9.374999999998967e-06, 9.416999999997677e-06, 9.597000000000078e-06, 9.250000000002312e-06, 9.763999999995443e-06, 8.9859...</msg>
<status status="PASS" starttime="20201030 18:31:39.412" endtime="20201030 18:31:39.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.429" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:39.427" endtime="20201030 18:31:39.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.435" level="INFO">VALUE: [9.249999999995373e-06, 9.042000000000772e-06, 9.110999999999148e-06, 9.374999999998967e-06, 9.416999999997677e-06, 9.597000000000078e-06, 9.250000000002312e-06, 9.763999999995443e-06, 8.985999999995553e-06, 9.735999999996303e-06, 8.930999999996747e-06, 9.083999999999481e-06, 9.110999999999148e-06, 8.944000000003782e-06, 9.195000000003506e-06, 9.264000000001882e-06, 9.264000000001882e-06, 9.278000000001452e-06, 9.110999999999148e-06, 9.083999999999481e-06, 9.430000000004712e-06, 9.235999999995803e-06, 9.07000000000685e-06, 9.583000000000508e-06, 8.931000000003686e-06, 9.264000000001882e-06, 8.931000000003686e-06, 8.902999999997607e-06, 9.320000000000161e-06, 9.750000000002812e-06, 9.097000000006517e-06, 9.597000000000078e-06, 9.403000000005046e-06, 8.916999999997177e-06, 9.263999999994943e-06, 9.083000000000008e-06, 9.514000000002132e-06, 9.138999999998287e-06, 9.249999999995373e-06, 9.429999999997773e-06, 9.431000000004186e-06, 9.068999999993499e-06, 9.403000000005046e-06, 9.236000000002742e-06, 9.083000000000008e-06, 9.250000000002312e-06, 8.931000000003686e-06, 9.430999999997247e-06, 9.430999999997247e-06, 9.250000000002312e-06]</msg>
<status status="PASS" starttime="20201030 18:31:39.431" endtime="20201030 18:31:39.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.421" endtime="20201030 18:31:39.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.446" endtime="20201030 18:31:39.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.442" endtime="20201030 18:31:39.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.440" endtime="20201030 18:31:39.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.918" endtime="20201030 18:31:39.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.917" endtime="20201030 18:31:39.472"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.499" endtime="20201030 18:31:39.516"></status>
</kw>
<msg timestamp="20201030 18:31:39.518" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.494" endtime="20201030 18:31:39.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.528" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.522" endtime="20201030 18:31:39.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.531" endtime="20201030 18:31:39.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.483" endtime="20201030 18:31:39.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.477" endtime="20201030 18:31:39.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.571" endtime="20201030 18:31:39.940"></status>
</kw>
<msg timestamp="20201030 18:31:39.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044906708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044915819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.564" endtime="20201030 18:31:39.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044906708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044915819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.950" endtime="20201030 18:31:39.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.969" endtime="20201030 18:31:39.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.552" endtime="20201030 18:31:39.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.545" endtime="20201030 18:31:39.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:39.987" level="INFO">${RESULT} = [{'diff': 9.111000000006086e-06}, {'diff': 9.278000000001452e-06}, {'diff': 9.249999999995373e-06}, {'diff': 9.110999999999148e-06}, {'diff': 9.263999999994943e-06}, {'diff': 9.416999999997677e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:39.978" endtime="20201030 18:31:39.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:39.997" level="INFO">${OVERHEAD} = {'diff': [9.111000000006086e-06, 9.278000000001452e-06, 9.249999999995373e-06, 9.110999999999148e-06, 9.263999999994943e-06, 9.416999999997677e-06, 9.110999999999148e-06, 9.388999999998537e-06, 9.0969...</msg>
<status status="PASS" starttime="20201030 18:31:39.989" endtime="20201030 18:31:39.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.007" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:40.005" endtime="20201030 18:31:40.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.012" level="INFO">VALUE: [9.111000000006086e-06, 9.278000000001452e-06, 9.249999999995373e-06, 9.110999999999148e-06, 9.263999999994943e-06, 9.416999999997677e-06, 9.110999999999148e-06, 9.388999999998537e-06, 9.096999999999578e-06, 9.09800000000599e-06, 9.110999999999148e-06, 9.583000000000508e-06, 9.083000000000008e-06, 9.415999999998204e-06, 9.541000000001798e-06, 9.416999999997677e-06, 9.097999999999051e-06, 9.416000000005142e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.597000000000078e-06, 9.583999999999981e-06, 9.485999999996053e-06, 9.124999999998717e-06, 9.110999999999148e-06, 9.583000000000508e-06, 9.778000000001952e-06, 9.249999999995373e-06, 9.583000000000508e-06, 9.679999999998024e-06, 9.306000000000592e-06, 9.250000000002312e-06, 9.278000000001452e-06, 9.583000000000508e-06, 9.430999999997247e-06, 9.750000000002812e-06, 9.096999999999578e-06, 9.042000000000772e-06, 9.096999999999578e-06, 9.429999999997773e-06, 9.597000000000078e-06, 9.847000000000328e-06, 9.209000000003076e-06, 9.763999999995443e-06, 9.583999999999981e-06, 9.264000000001882e-06, 9.430999999997247e-06, 9.083000000000008e-06, 9.069000000000438e-06, 9.250000000002312e-06]</msg>
<status status="PASS" starttime="20201030 18:31:40.009" endtime="20201030 18:31:40.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.998" endtime="20201030 18:31:40.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:40.024" endtime="20201030 18:31:40.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.020" endtime="20201030 18:31:40.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.017" endtime="20201030 18:31:40.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.474" endtime="20201030 18:31:40.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.473" endtime="20201030 18:31:40.050"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.073" endtime="20201030 18:31:40.086"></status>
</kw>
<msg timestamp="20201030 18:31:40.088" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.070" endtime="20201030 18:31:40.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.094" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.090" endtime="20201030 18:31:40.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.096" endtime="20201030 18:31:40.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.059" endtime="20201030 18:31:40.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.055" endtime="20201030 18:31:40.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.120" endtime="20201030 18:31:40.476"></status>
</kw>
<msg timestamp="20201030 18:31:40.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039613972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039623236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:40.116" endtime="20201030 18:31:40.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039613972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039623236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:40.486" endtime="20201030 18:31:40.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.505" endtime="20201030 18:31:40.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.109" endtime="20201030 18:31:40.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.104" endtime="20201030 18:31:40.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:40.523" level="INFO">${RESULT} = [{'diff': 9.264000000001882e-06}, {'diff': 9.360999999999398e-06}, {'diff': 9.097999999999051e-06}, {'diff': 9.277999999994513e-06}, {'diff': 9.597000000000078e-06}, {'diff': 9.166999999997427e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:40.514" endtime="20201030 18:31:40.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:40.532" level="INFO">${OVERHEAD} = {'diff': [9.264000000001882e-06, 9.360999999999398e-06, 9.097999999999051e-06, 9.277999999994513e-06, 9.597000000000078e-06, 9.166999999997427e-06, 9.416999999997677e-06, 9.110999999999148e-06, 9.0830...</msg>
<status status="PASS" starttime="20201030 18:31:40.525" endtime="20201030 18:31:40.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.542" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:40.540" endtime="20201030 18:31:40.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.548" level="INFO">VALUE: [9.264000000001882e-06, 9.360999999999398e-06, 9.097999999999051e-06, 9.277999999994513e-06, 9.597000000000078e-06, 9.166999999997427e-06, 9.416999999997677e-06, 9.110999999999148e-06, 9.083000000000008e-06, 9.083999999999481e-06, 8.929999999997273e-06, 9.250000000002312e-06, 9.083999999999481e-06, 9.096999999999578e-06, 9.263000000002408e-06, 8.917000000004116e-06, 8.944000000003782e-06, 8.915999999997704e-06, 9.750000000002812e-06, 9.416999999997677e-06, 9.250000000002312e-06, 9.096999999999578e-06, 9.723000000003146e-06, 9.597000000000078e-06, 9.430999999997247e-06, 9.083000000000008e-06, 9.083000000000008e-06, 9.110999999999148e-06, 9.417000000004616e-06, 9.096999999999578e-06, 9.833000000000758e-06, 8.903000000004546e-06, 9.597000000000078e-06, 9.083000000000008e-06, 9.096999999999578e-06, 9.416999999997677e-06, 9.721999999996733e-06, 8.915999999997704e-06, 9.416999999997677e-06, 8.917000000004116e-06, 9.583000000000508e-06, 9.583000000000508e-06, 9.402999999998107e-06, 9.250000000002312e-06, 9.597000000000078e-06, 9.417000000004616e-06, 8.929999999997273e-06, 9.764000000002382e-06, 9.694000000004532e-06, 9.083000000000008e-06]</msg>
<status status="PASS" starttime="20201030 18:31:40.545" endtime="20201030 18:31:40.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.534" endtime="20201030 18:31:40.550"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:40.561" endtime="20201030 18:31:40.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.555" endtime="20201030 18:31:40.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.553" endtime="20201030 18:31:40.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.051" endtime="20201030 18:31:40.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.050" endtime="20201030 18:31:40.586"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.607" endtime="20201030 18:31:40.619"></status>
</kw>
<msg timestamp="20201030 18:31:40.620" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.603" endtime="20201030 18:31:40.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.626" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.622" endtime="20201030 18:31:40.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.629" endtime="20201030 18:31:40.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.596" endtime="20201030 18:31:40.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.592" endtime="20201030 18:31:40.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.653" endtime="20201030 18:31:40.993"></status>
</kw>
<msg timestamp="20201030 18:31:41.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036471306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036480236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:40.649" endtime="20201030 18:31:41.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036471306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036480236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.007" endtime="20201030 18:31:41.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.026" endtime="20201030 18:31:41.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.642" endtime="20201030 18:31:41.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.637" endtime="20201030 18:31:41.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:41.044" level="INFO">${RESULT} = [{'diff': 8.929999999997273e-06}, {'diff': 9.707999999997163e-06}, {'diff': 9.305000000001118e-06}, {'diff': 9.750000000002812e-06}, {'diff': 9.278000000001452e-06}, {'diff': 8.916999999997177e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:41.035" endtime="20201030 18:31:41.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:41.055" level="INFO">${OVERHEAD} = {'diff': [8.929999999997273e-06, 9.707999999997163e-06, 9.305000000001118e-06, 9.750000000002812e-06, 9.278000000001452e-06, 8.916999999997177e-06, 9.096999999999578e-06, 9.097999999999051e-06, 9.2360...</msg>
<status status="PASS" starttime="20201030 18:31:41.046" endtime="20201030 18:31:41.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.065" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:41.063" endtime="20201030 18:31:41.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.070" level="INFO">VALUE: [8.929999999997273e-06, 9.707999999997163e-06, 9.305000000001118e-06, 9.750000000002812e-06, 9.278000000001452e-06, 8.916999999997177e-06, 9.096999999999578e-06, 9.097999999999051e-06, 9.236000000002742e-06, 9.110999999999148e-06, 9.415999999998204e-06, 9.806000000001092e-06, 9.083000000000008e-06, 9.763999999995443e-06, 9.429999999997773e-06, 9.083000000000008e-06, 9.445000000003756e-06, 9.401999999998634e-06, 9.749999999995873e-06, 9.083000000000008e-06, 8.929999999997273e-06, 9.096999999999578e-06, 9.430999999997247e-06, 9.750000000002812e-06, 9.221999999996233e-06, 9.597000000000078e-06, 8.916999999997177e-06, 9.208000000003602e-06, 9.083000000000008e-06, 9.110999999999148e-06, 8.902999999997607e-06, 9.096999999999578e-06, 9.597000000000078e-06, 8.917000000004116e-06, 9.596999999993139e-06, 9.235999999995803e-06, 9.209000000003076e-06, 9.597000000000078e-06, 9.444000000004282e-06, 9.069000000000438e-06, 9.083999999999481e-06, 8.915999999997704e-06, 9.166999999997427e-06, 9.916999999998177e-06, 9.556000000000842e-06, 8.931000000003686e-06, 9.763999999995443e-06, 8.915999999997704e-06, 9.416999999997677e-06, 9.597000000000078e-06]</msg>
<status status="PASS" starttime="20201030 18:31:41.067" endtime="20201030 18:31:41.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.057" endtime="20201030 18:31:41.073"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:41.082" endtime="20201030 18:31:41.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.078" endtime="20201030 18:31:41.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.075" endtime="20201030 18:31:41.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.588" endtime="20201030 18:31:41.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.587" endtime="20201030 18:31:41.107"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.127" endtime="20201030 18:31:41.140"></status>
</kw>
<msg timestamp="20201030 18:31:41.141" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.124" endtime="20201030 18:31:41.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.147" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.143" endtime="20201030 18:31:41.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.150" endtime="20201030 18:31:41.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.117" endtime="20201030 18:31:41.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.112" endtime="20201030 18:31:41.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.173" endtime="20201030 18:31:41.514"></status>
</kw>
<msg timestamp="20201030 18:31:41.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036249653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036259417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.169" endtime="20201030 18:31:41.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036249653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036259417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.524" endtime="20201030 18:31:41.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.544" endtime="20201030 18:31:41.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.162" endtime="20201030 18:31:41.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.157" endtime="20201030 18:31:41.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:41.562" level="INFO">${RESULT} = [{'diff': 9.764000000002382e-06}, {'diff': 8.916000000004642e-06}, {'diff': 9.069000000000438e-06}, {'diff': 9.166999999997427e-06}, {'diff': 9.429999999997773e-06}, {'diff': 9.736000000003242e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:41.553" endtime="20201030 18:31:41.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:41.573" level="INFO">${OVERHEAD} = {'diff': [9.764000000002382e-06, 8.916000000004642e-06, 9.069000000000438e-06, 9.166999999997427e-06, 9.429999999997773e-06, 9.736000000003242e-06, 8.916999999997177e-06, 8.916999999997177e-06, 8.9589...</msg>
<status status="PASS" starttime="20201030 18:31:41.564" endtime="20201030 18:31:41.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.583" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:41.581" endtime="20201030 18:31:41.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.589" level="INFO">VALUE: [9.764000000002382e-06, 8.916000000004642e-06, 9.069000000000438e-06, 9.166999999997427e-06, 9.429999999997773e-06, 9.736000000003242e-06, 8.916999999997177e-06, 8.916999999997177e-06, 8.958999999995887e-06, 9.597000000000078e-06, 9.431000000004186e-06, 9.264000000001882e-06, 9.763999999995443e-06, 8.959000000002826e-06, 9.764000000002382e-06, 9.096999999999578e-06, 9.583000000000508e-06, 9.277000000001978e-06, 9.096999999999578e-06, 8.958999999995887e-06, 9.415999999998204e-06, 9.610999999999648e-06, 9.430999999997247e-06, 8.930999999996747e-06, 9.750000000002812e-06, 9.415999999998204e-06, 8.917000000004116e-06, 8.930999999996747e-06, 9.069999999999911e-06, 9.277000000001978e-06, 9.180000000004462e-06, 9.415999999998204e-06, 9.278000000001452e-06, 9.402999999998107e-06, 9.083000000000008e-06, 9.236000000002742e-06, 8.931000000003686e-06, 9.76299999999597e-06, 9.624999999999218e-06, 9.778000000001952e-06, 9.01299999999522e-06, 9.583000000000508e-06, 9.957999999997413e-06, 9.250000000002312e-06, 9.415999999998204e-06, 9.236000000002742e-06, 9.750000000002812e-06, 8.916999999997177e-06, 9.249999999995373e-06, 9.250000000002312e-06]</msg>
<status status="PASS" starttime="20201030 18:31:41.586" endtime="20201030 18:31:41.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.575" endtime="20201030 18:31:41.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:41.601" endtime="20201030 18:31:41.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.596" endtime="20201030 18:31:41.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.594" endtime="20201030 18:31:41.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.109" endtime="20201030 18:31:41.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.108" endtime="20201030 18:31:41.626"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.647" endtime="20201030 18:31:41.659"></status>
</kw>
<msg timestamp="20201030 18:31:41.660" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.643" endtime="20201030 18:31:41.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.666" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.662" endtime="20201030 18:31:41.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.669" endtime="20201030 18:31:41.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.636" endtime="20201030 18:31:41.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.631" endtime="20201030 18:31:41.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.693" endtime="20201030 18:31:42.035"></status>
</kw>
<msg timestamp="20201030 18:31:42.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036632681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036641944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.690" endtime="20201030 18:31:42.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036632681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036641944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.044" endtime="20201030 18:31:42.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.063" endtime="20201030 18:31:42.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.682" endtime="20201030 18:31:42.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.677" endtime="20201030 18:31:42.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:42.081" level="INFO">${RESULT} = [{'diff': 9.263000000002408e-06}, {'diff': 9.264000000001882e-06}, {'diff': 9.638999999998787e-06}, {'diff': 9.27699999999504e-06}, {'diff': 9.750000000002812e-06}, {'diff': 9.069000000000438e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:42.072" endtime="20201030 18:31:42.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:42.090" level="INFO">${OVERHEAD} = {'diff': [9.263000000002408e-06, 9.264000000001882e-06, 9.638999999998787e-06, 9.27699999999504e-06, 9.750000000002812e-06, 9.069000000000438e-06, 9.695000000004006e-06, 8.945000000003256e-06, 8.91700...</msg>
<status status="PASS" starttime="20201030 18:31:42.083" endtime="20201030 18:31:42.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.100" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:42.098" endtime="20201030 18:31:42.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.106" level="INFO">VALUE: [9.263000000002408e-06, 9.264000000001882e-06, 9.638999999998787e-06, 9.27699999999504e-06, 9.750000000002812e-06, 9.069000000000438e-06, 9.695000000004006e-06, 8.945000000003256e-06, 8.917000000004116e-06, 9.083000000000008e-06, 9.096999999999578e-06, 9.402999999998107e-06, 9.264000000001882e-06, 9.430000000004712e-06, 9.346999999999828e-06, 8.902999999997607e-06, 9.653000000005296e-06, 9.028000000001202e-06, 8.930000000004212e-06, 9.902000000006073e-06, 9.222000000003172e-06, 9.597000000000078e-06, 9.763000000002908e-06, 9.735999999996303e-06, 8.917000000004116e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.083000000000008e-06, 9.083999999999481e-06, 9.250000000002312e-06, 8.860999999998898e-06, 9.430000000004712e-06, 9.292000000001022e-06, 9.431000000004186e-06, 8.915999999997704e-06, 9.652999999998357e-06, 9.431000000004186e-06, 9.569000000000938e-06, 9.736000000003242e-06, 9.097000000006517e-06, 9.583999999999981e-06, 9.597000000000078e-06, 9.096999999999578e-06, 9.542000000001272e-06, 8.917000000004116e-06, 9.583000000000508e-06, 9.583000000000508e-06, 9.429999999997773e-06, 9.764000000002382e-06, 8.901999999998134e-06]</msg>
<status status="PASS" starttime="20201030 18:31:42.103" endtime="20201030 18:31:42.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.092" endtime="20201030 18:31:42.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:42.117" endtime="20201030 18:31:42.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.113" endtime="20201030 18:31:42.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.111" endtime="20201030 18:31:42.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.628" endtime="20201030 18:31:42.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.627" endtime="20201030 18:31:42.143"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.163" endtime="20201030 18:31:42.177"></status>
</kw>
<msg timestamp="20201030 18:31:42.178" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.160" endtime="20201030 18:31:42.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.184" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.180" endtime="20201030 18:31:42.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.186" endtime="20201030 18:31:42.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.153" endtime="20201030 18:31:42.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.148" endtime="20201030 18:31:42.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.211" endtime="20201030 18:31:42.554"></status>
</kw>
<msg timestamp="20201030 18:31:42.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037876361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03788525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:42.207" endtime="20201030 18:31:42.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037876361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03788525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:42.563" endtime="20201030 18:31:42.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.582" endtime="20201030 18:31:42.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.200" endtime="20201030 18:31:42.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.196" endtime="20201030 18:31:42.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:42.599" level="INFO">${RESULT} = [{'diff': 8.889000000004976e-06}, {'diff': 9.430999999997247e-06}, {'diff': 9.444999999996817e-06}, {'diff': 9.763999999995443e-06}, {'diff': 9.542000000001272e-06}, {'diff': 9.096999999999578e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:42.590" endtime="20201030 18:31:42.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:42.609" level="INFO">${OVERHEAD} = {'diff': [8.889000000004976e-06, 9.430999999997247e-06, 9.444999999996817e-06, 9.763999999995443e-06, 9.542000000001272e-06, 9.096999999999578e-06, 9.207999999996663e-06, 9.069999999999911e-06, 9.2500...</msg>
<status status="PASS" starttime="20201030 18:31:42.601" endtime="20201030 18:31:42.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.619" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:42.617" endtime="20201030 18:31:42.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.625" level="INFO">VALUE: [8.889000000004976e-06, 9.430999999997247e-06, 9.444999999996817e-06, 9.763999999995443e-06, 9.542000000001272e-06, 9.096999999999578e-06, 9.207999999996663e-06, 9.069999999999911e-06, 9.250000000002312e-06, 9.249999999995373e-06, 9.249999999995373e-06, 9.680000000004962e-06, 9.08400000000642e-06, 9.056000000000342e-06, 9.235999999995803e-06, 9.778000000001952e-06, 9.056000000000342e-06, 9.333000000000258e-06, 9.263999999994943e-06, 8.861000000005836e-06, 9.417000000004616e-06, 9.416999999997677e-06, 9.415999999998204e-06, 9.750000000002812e-06, 9.083000000000008e-06, 9.431000000004186e-06, 9.430000000004712e-06, 9.764000000002382e-06, 8.930999999996747e-06, 9.083000000000008e-06, 9.430999999997247e-06, 9.416999999997677e-06, 9.096999999999578e-06, 9.263000000002408e-06, 9.180999999996997e-06, 9.777999999995013e-06, 9.750000000002812e-06, 9.083999999999481e-06, 9.083999999999481e-06, 9.250000000002312e-06, 9.917000000005116e-06, 9.597999999999551e-06, 9.569000000000938e-06, 9.763999999995443e-06, 9.333999999999731e-06, 9.929999999998274e-06, 9.707999999997163e-06, 9.264000000001882e-06, 9.833000000000758e-06, 9.444999999996817e-06]</msg>
<status status="PASS" starttime="20201030 18:31:42.622" endtime="20201030 18:31:42.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.611" endtime="20201030 18:31:42.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:42.638" endtime="20201030 18:31:42.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.632" endtime="20201030 18:31:42.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.630" endtime="20201030 18:31:42.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.145" endtime="20201030 18:31:42.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.144" endtime="20201030 18:31:42.663"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.684" endtime="20201030 18:31:42.696"></status>
</kw>
<msg timestamp="20201030 18:31:42.697" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.680" endtime="20201030 18:31:42.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.704" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.700" endtime="20201030 18:31:42.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.706" endtime="20201030 18:31:42.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.673" endtime="20201030 18:31:42.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.668" endtime="20201030 18:31:42.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.730" endtime="20201030 18:31:43.069"></status>
</kw>
<msg timestamp="20201030 18:31:43.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036515069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036524319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.726" endtime="20201030 18:31:43.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036515069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036524319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.078" endtime="20201030 18:31:43.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.097" endtime="20201030 18:31:43.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.719" endtime="20201030 18:31:43.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.715" endtime="20201030 18:31:43.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:43.114" level="INFO">${RESULT} = [{'diff': 9.250000000002312e-06}, {'diff': 9.153000000004796e-06}, {'diff': 9.429999999997773e-06}, {'diff': 9.679999999998024e-06}, {'diff': 9.096999999999578e-06}, {'diff': 9.250000000002312e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:43.105" endtime="20201030 18:31:43.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:43.125" level="INFO">${OVERHEAD} = {'diff': [9.250000000002312e-06, 9.153000000004796e-06, 9.429999999997773e-06, 9.679999999998024e-06, 9.096999999999578e-06, 9.250000000002312e-06, 8.930999999996747e-06, 9.570000000000412e-06, 9.7220...</msg>
<status status="PASS" starttime="20201030 18:31:43.116" endtime="20201030 18:31:43.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.135" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:43.133" endtime="20201030 18:31:43.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.140" level="INFO">VALUE: [9.250000000002312e-06, 9.153000000004796e-06, 9.429999999997773e-06, 9.679999999998024e-06, 9.096999999999578e-06, 9.250000000002312e-06, 8.930999999996747e-06, 9.570000000000412e-06, 9.722000000003672e-06, 9.570000000000412e-06, 9.694000000004532e-06, 8.916999999997177e-06, 9.416999999997677e-06, 9.583000000000508e-06, 9.806000000001092e-06, 9.097999999999051e-06, 9.069000000000438e-06, 9.416000000005142e-06, 9.791999999994583e-06, 9.096999999999578e-06, 9.292000000001022e-06, 8.875000000005406e-06, 9.249999999995373e-06, 9.749999999995873e-06, 9.250000000002312e-06, 8.889000000004976e-06, 8.917000000004116e-06, 9.152999999997857e-06, 9.056000000000342e-06, 9.764000000002382e-06, 9.083000000000008e-06, 9.695000000004006e-06, 9.610999999999648e-06, 8.943999999996843e-06, 9.264000000001882e-06, 9.472000000003422e-06, 9.583999999999981e-06, 9.250000000002312e-06, 9.096999999999578e-06, 9.083999999999481e-06, 8.931000000003686e-06, 9.736000000003242e-06, 8.903000000004546e-06, 9.083999999999481e-06, 8.987000000001966e-06, 8.916999999997177e-06, 9.083000000000008e-06, 9.735999999996303e-06, 9.750000000002812e-06, 9.083000000000008e-06]</msg>
<status status="PASS" starttime="20201030 18:31:43.137" endtime="20201030 18:31:43.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.127" endtime="20201030 18:31:43.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:43.152" endtime="20201030 18:31:43.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.148" endtime="20201030 18:31:43.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.146" endtime="20201030 18:31:43.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.665" endtime="20201030 18:31:43.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.664" endtime="20201030 18:31:43.177"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.198" endtime="20201030 18:31:43.211"></status>
</kw>
<msg timestamp="20201030 18:31:43.212" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.195" endtime="20201030 18:31:43.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.219" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.215" endtime="20201030 18:31:43.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.221" endtime="20201030 18:31:43.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.187" endtime="20201030 18:31:43.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.183" endtime="20201030 18:31:43.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.245" endtime="20201030 18:31:43.598"></status>
</kw>
<msg timestamp="20201030 18:31:43.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037273958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037283222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.241" endtime="20201030 18:31:43.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037273958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037283222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.607" endtime="20201030 18:31:43.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.626" endtime="20201030 18:31:43.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.234" endtime="20201030 18:31:43.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.229" endtime="20201030 18:31:43.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:43.643" level="INFO">${RESULT} = [{'diff': 9.263999999994943e-06}, {'diff': 9.667000000004866e-06}, {'diff': 8.874999999998467e-06}, {'diff': 9.721999999996733e-06}, {'diff': 8.916000000004642e-06}, {'diff': 9.083000000000008e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:43.634" endtime="20201030 18:31:43.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:43.654" level="INFO">${OVERHEAD} = {'diff': [9.263999999994943e-06, 9.667000000004866e-06, 8.874999999998467e-06, 9.721999999996733e-06, 8.916000000004642e-06, 9.083000000000008e-06, 9.069999999999911e-06, 9.431000000004186e-06, 9.0140...</msg>
<status status="PASS" starttime="20201030 18:31:43.645" endtime="20201030 18:31:43.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.664" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:43.661" endtime="20201030 18:31:43.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.669" level="INFO">VALUE: [9.263999999994943e-06, 9.667000000004866e-06, 8.874999999998467e-06, 9.721999999996733e-06, 8.916000000004642e-06, 9.083000000000008e-06, 9.069999999999911e-06, 9.431000000004186e-06, 9.014000000001632e-06, 9.069999999999911e-06, 9.320000000000161e-06, 9.360999999999398e-06, 9.777000000002478e-06, 9.763999999995443e-06, 9.290999999994609e-06, 9.083000000000008e-06, 9.402999999998107e-06, 9.597999999999551e-06, 9.778000000001952e-06, 9.26299999999547e-06, 8.916999999997177e-06, 9.597000000000078e-06, 9.264000000001882e-06, 9.083000000000008e-06, 8.943999999996843e-06, 8.985999999995553e-06, 9.249999999995373e-06, 9.096999999999578e-06, 9.792000000001522e-06, 9.26299999999547e-06, 9.583000000000508e-06, 9.416000000005142e-06, 8.916000000004642e-06, 9.055000000000868e-06, 9.250000000002312e-06, 9.401999999998634e-06, 9.277000000001978e-06, 9.444000000004282e-06, 9.402999999998107e-06, 9.250000000002312e-06, 9.083999999999481e-06, 9.069999999999911e-06, 9.611000000006586e-06, 9.944000000004782e-06, 9.445000000003756e-06, 9.735999999996303e-06, 9.083999999999481e-06, 9.764000000002382e-06, 9.431000000004186e-06, 9.429999999997773e-06]</msg>
<status status="PASS" starttime="20201030 18:31:43.666" endtime="20201030 18:31:43.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.655" endtime="20201030 18:31:43.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:43.681" endtime="20201030 18:31:43.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.676" endtime="20201030 18:31:43.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.674" endtime="20201030 18:31:43.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.179" endtime="20201030 18:31:43.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.178" endtime="20201030 18:31:43.705"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.726" endtime="20201030 18:31:43.738"></status>
</kw>
<msg timestamp="20201030 18:31:43.740" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.723" endtime="20201030 18:31:43.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.746" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.742" endtime="20201030 18:31:43.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.748" endtime="20201030 18:31:43.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.716" endtime="20201030 18:31:43.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.711" endtime="20201030 18:31:43.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.771" endtime="20201030 18:31:44.113"></status>
</kw>
<msg timestamp="20201030 18:31:44.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036568986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036578569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.768" endtime="20201030 18:31:44.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036568986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036578569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.123" endtime="20201030 18:31:44.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.142" endtime="20201030 18:31:44.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.761" endtime="20201030 18:31:44.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.756" endtime="20201030 18:31:44.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:44.159" level="INFO">${RESULT} = [{'diff': 9.583000000000508e-06}, {'diff': 9.250000000002312e-06}, {'diff': 9.764000000002382e-06}, {'diff': 9.264000000001882e-06}, {'diff': 9.445000000003756e-06}, {'diff': 9.360999999999398e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:44.150" endtime="20201030 18:31:44.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:44.168" level="INFO">${OVERHEAD} = {'diff': [9.583000000000508e-06, 9.250000000002312e-06, 9.764000000002382e-06, 9.264000000001882e-06, 9.445000000003756e-06, 9.360999999999398e-06, 9.278000000001452e-06, 9.929999999998274e-06, 9.2629...</msg>
<status status="PASS" starttime="20201030 18:31:44.161" endtime="20201030 18:31:44.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.178" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:44.176" endtime="20201030 18:31:44.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.184" level="INFO">VALUE: [9.583000000000508e-06, 9.250000000002312e-06, 9.764000000002382e-06, 9.264000000001882e-06, 9.445000000003756e-06, 9.360999999999398e-06, 9.278000000001452e-06, 9.929999999998274e-06, 9.26299999999547e-06, 9.417000000004616e-06, 8.973000000002396e-06, 9.721999999996733e-06, 9.083000000000008e-06, 9.417000000004616e-06, 9.902999999998607e-06, 9.249999999995373e-06, 9.250000000002312e-06, 9.083999999999481e-06, 9.194000000004032e-06, 8.915999999997704e-06, 8.929999999997273e-06, 9.083000000000008e-06, 9.430999999997247e-06, 9.069000000000438e-06, 9.403000000005046e-06, 9.083000000000008e-06, 9.443999999997343e-06, 9.430999999997247e-06, 9.430000000004712e-06, 9.76299999999597e-06, 9.750000000002812e-06, 9.083000000000008e-06, 9.583000000000508e-06, 9.624999999999218e-06, 8.889000000004976e-06, 9.277999999994513e-06, 9.083000000000008e-06, 9.250000000002312e-06, 9.416999999997677e-06, 9.818999999994249e-06, 9.278000000001452e-06, 9.403000000005046e-06, 9.416999999997677e-06, 9.083000000000008e-06, 9.263999999994943e-06, 9.597999999999551e-06, 9.597999999999551e-06, 9.319000000000688e-06, 9.778000000001952e-06, 9.278000000001452e-06]</msg>
<status status="PASS" starttime="20201030 18:31:44.181" endtime="20201030 18:31:44.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.170" endtime="20201030 18:31:44.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:44.196" endtime="20201030 18:31:44.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.192" endtime="20201030 18:31:44.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.189" endtime="20201030 18:31:44.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.707" endtime="20201030 18:31:44.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.706" endtime="20201030 18:31:44.222"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.242" endtime="20201030 18:31:44.257"></status>
</kw>
<msg timestamp="20201030 18:31:44.259" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.239" endtime="20201030 18:31:44.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.265" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.261" endtime="20201030 18:31:44.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.267" endtime="20201030 18:31:44.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.232" endtime="20201030 18:31:44.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.227" endtime="20201030 18:31:44.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.290" endtime="20201030 18:31:44.702"></status>
</kw>
<msg timestamp="20201030 18:31:44.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038737472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038746903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.287" endtime="20201030 18:31:44.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038737472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038746903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.711" endtime="20201030 18:31:44.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.730" endtime="20201030 18:31:44.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.280" endtime="20201030 18:31:44.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.275" endtime="20201030 18:31:44.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:44.747" level="INFO">${RESULT} = [{'diff': 9.430999999997247e-06}, {'diff': 8.916999999997177e-06}, {'diff': 9.333999999999731e-06}, {'diff': 9.444999999996817e-06}, {'diff': 9.110999999999148e-06}, {'diff': 9.736000000003242e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:44.738" endtime="20201030 18:31:44.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:44.757" level="INFO">${OVERHEAD} = {'diff': [9.430999999997247e-06, 8.916999999997177e-06, 9.333999999999731e-06, 9.444999999996817e-06, 9.110999999999148e-06, 9.736000000003242e-06, 8.916999999997177e-06, 9.916999999998177e-06, 9.9580...</msg>
<status status="PASS" starttime="20201030 18:31:44.749" endtime="20201030 18:31:44.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.767" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:44.765" endtime="20201030 18:31:44.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.772" level="INFO">VALUE: [9.430999999997247e-06, 8.916999999997177e-06, 9.333999999999731e-06, 9.444999999996817e-06, 9.110999999999148e-06, 9.736000000003242e-06, 8.916999999997177e-06, 9.916999999998177e-06, 9.958000000004352e-06, 9.346999999999828e-06, 9.416999999997677e-06, 9.597000000000078e-06, 9.250000000002312e-06, 8.84800000000574e-06, 9.096999999999578e-06, 9.263999999994943e-06, 8.916999999997177e-06, 9.750000000002812e-06, 9.570000000000412e-06, 8.972000000002922e-06, 9.069000000000438e-06, 9.110999999999148e-06, 9.415999999998204e-06, 9.124999999998717e-06, 9.236000000002742e-06, 9.416000000005142e-06, 9.555000000001368e-06, 9.249999999995373e-06, 9.416999999997677e-06, 9.207999999996663e-06, 9.097999999999051e-06, 9.736000000003242e-06, 9.749999999995873e-06, 8.915999999997704e-06, 9.08400000000642e-06, 9.264000000001882e-06, 9.750000000002812e-06, 8.929999999997273e-06, 9.431000000004186e-06, 9.403000000005046e-06, 8.915999999997704e-06, 8.916999999997177e-06, 8.915999999997704e-06, 9.583000000000508e-06, 9.444999999996817e-06, 9.083000000000008e-06, 9.097000000006517e-06, 9.291000000001548e-06, 9.278000000001452e-06, 9.597000000000078e-06]</msg>
<status status="PASS" starttime="20201030 18:31:44.769" endtime="20201030 18:31:44.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.759" endtime="20201030 18:31:44.775"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:44.786" endtime="20201030 18:31:44.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.781" endtime="20201030 18:31:44.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.777" endtime="20201030 18:31:44.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.224" endtime="20201030 18:31:44.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.223" endtime="20201030 18:31:44.812"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.832" endtime="20201030 18:31:44.845"></status>
</kw>
<msg timestamp="20201030 18:31:44.846" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.828" endtime="20201030 18:31:44.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.853" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.849" endtime="20201030 18:31:44.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.855" endtime="20201030 18:31:44.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.821" endtime="20201030 18:31:44.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.817" endtime="20201030 18:31:44.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.878" endtime="20201030 18:31:45.230"></status>
</kw>
<msg timestamp="20201030 18:31:45.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036339444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036349208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.875" endtime="20201030 18:31:45.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036339444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036349208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.240" endtime="20201030 18:31:45.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.259" endtime="20201030 18:31:45.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.868" endtime="20201030 18:31:45.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.863" endtime="20201030 18:31:45.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:45.276" level="INFO">${RESULT} = [{'diff': 9.764000000002382e-06}, {'diff': 9.249999999995373e-06}, {'diff': 9.083000000000008e-06}, {'diff': 9.764000000002382e-06}, {'diff': 8.999999999995123e-06}, {'diff': 9.749999999995873e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:45.267" endtime="20201030 18:31:45.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:45.290" level="INFO">${OVERHEAD} = {'diff': [9.764000000002382e-06, 9.249999999995373e-06, 9.083000000000008e-06, 9.764000000002382e-06, 8.999999999995123e-06, 9.749999999995873e-06, 9.167000000004366e-06, 9.306000000000592e-06, 8.9030...</msg>
<status status="PASS" starttime="20201030 18:31:45.278" endtime="20201030 18:31:45.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.300" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:45.298" endtime="20201030 18:31:45.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.306" level="INFO">VALUE: [9.764000000002382e-06, 9.249999999995373e-06, 9.083000000000008e-06, 9.764000000002382e-06, 8.999999999995123e-06, 9.749999999995873e-06, 9.167000000004366e-06, 9.306000000000592e-06, 8.903000000004546e-06, 9.652999999998357e-06, 9.110999999999148e-06, 9.26299999999547e-06, 9.083000000000008e-06, 9.250000000002312e-06, 9.431000000004186e-06, 8.888999999998037e-06, 9.431000000004186e-06, 8.930000000004212e-06, 9.083999999999481e-06, 9.597000000000078e-06, 9.096999999999578e-06, 9.263999999994943e-06, 9.236000000002742e-06, 9.764000000002382e-06, 9.915999999998704e-06, 9.069999999999911e-06, 8.929999999997273e-06, 9.207999999996663e-06, 9.444999999996817e-06, 9.583999999999981e-06, 9.138999999998287e-06, 9.415999999998204e-06, 8.874999999998467e-06, 9.11200000000556e-06, 9.096999999999578e-06, 8.917000000004116e-06, 9.638999999998787e-06, 8.915999999997704e-06, 9.583000000000508e-06, 9.583000000000508e-06, 9.096999999999578e-06, 9.736000000003242e-06, 9.179999999997523e-06, 9.250000000002312e-06, 9.292000000001022e-06, 9.749999999995873e-06, 9.445000000003756e-06, 9.874999999999468e-06, 9.083000000000008e-06, 9.153000000004796e-06]</msg>
<status status="PASS" starttime="20201030 18:31:45.303" endtime="20201030 18:31:45.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.292" endtime="20201030 18:31:45.309"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:45.318" endtime="20201030 18:31:45.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.314" endtime="20201030 18:31:45.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.311" endtime="20201030 18:31:45.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.813" endtime="20201030 18:31:45.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.812" endtime="20201030 18:31:45.344"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.364" endtime="20201030 18:31:45.376"></status>
</kw>
<msg timestamp="20201030 18:31:45.377" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.361" endtime="20201030 18:31:45.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.384" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.380" endtime="20201030 18:31:45.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.386" endtime="20201030 18:31:45.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.354" endtime="20201030 18:31:45.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.349" endtime="20201030 18:31:45.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.409" endtime="20201030 18:31:45.750"></status>
</kw>
<msg timestamp="20201030 18:31:45.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036545889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036554792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.406" endtime="20201030 18:31:45.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036545889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036554792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.761" endtime="20201030 18:31:45.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.783" endtime="20201030 18:31:45.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.399" endtime="20201030 18:31:45.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.394" endtime="20201030 18:31:45.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:45.801" level="INFO">${RESULT} = [{'diff': 8.903000000004546e-06}, {'diff': 8.945000000003256e-06}, {'diff': 9.763999999995443e-06}, {'diff': 9.597000000000078e-06}, {'diff': 9.041000000001298e-06}, {'diff': 9.167000000004366e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:45.792" endtime="20201030 18:31:45.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:45.812" level="INFO">${OVERHEAD} = {'diff': [8.903000000004546e-06, 8.945000000003256e-06, 9.763999999995443e-06, 9.597000000000078e-06, 9.041000000001298e-06, 9.167000000004366e-06, 9.416999999997677e-06, 9.778000000001952e-06, 9.4300...</msg>
<status status="PASS" starttime="20201030 18:31:45.803" endtime="20201030 18:31:45.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.822" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:45.820" endtime="20201030 18:31:45.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.827" level="INFO">VALUE: [8.903000000004546e-06, 8.945000000003256e-06, 9.763999999995443e-06, 9.597000000000078e-06, 9.041000000001298e-06, 9.167000000004366e-06, 9.416999999997677e-06, 9.778000000001952e-06, 9.430000000004712e-06, 9.264000000001882e-06, 8.902999999997607e-06, 9.930999999997747e-06, 9.763999999995443e-06, 9.514000000002132e-06, 9.443999999997343e-06, 9.263999999994943e-06, 9.124999999998717e-06, 8.930000000004212e-06, 8.915999999997704e-06, 9.221999999996233e-06, 9.097000000006517e-06, 9.151999999998384e-06, 9.083000000000008e-06, 8.916999999997177e-06, 9.570000000000412e-06, 9.249999999995373e-06, 9.430000000004712e-06, 9.583000000000508e-06, 9.736000000003242e-06, 9.417000000004616e-06, 8.943999999996843e-06, 9.901999999999134e-06, 9.638999999998787e-06, 9.069000000000438e-06, 9.402999999998107e-06, 9.569000000000938e-06, 9.444999999996817e-06, 9.152999999997857e-06, 9.736000000003242e-06, 9.250000000002312e-06, 9.708000000004102e-06, 9.083000000000008e-06, 9.444000000004282e-06, 9.110999999999148e-06, 9.597000000000078e-06, 8.874999999998467e-06, 9.597000000000078e-06, 9.750000000002812e-06, 9.429999999997773e-06, 9.110999999999148e-06]</msg>
<status status="PASS" starttime="20201030 18:31:45.824" endtime="20201030 18:31:45.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.814" endtime="20201030 18:31:45.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:45.840" endtime="20201030 18:31:45.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.836" endtime="20201030 18:31:45.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.833" endtime="20201030 18:31:45.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.345" endtime="20201030 18:31:45.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.345" endtime="20201030 18:31:45.865"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.886" endtime="20201030 18:31:45.898"></status>
</kw>
<msg timestamp="20201030 18:31:45.899" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.882" endtime="20201030 18:31:45.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.905" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.901" endtime="20201030 18:31:45.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.907" endtime="20201030 18:31:45.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.875" endtime="20201030 18:31:45.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.870" endtime="20201030 18:31:45.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.931" endtime="20201030 18:31:46.272"></status>
</kw>
<msg timestamp="20201030 18:31:46.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036324556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036334306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.927" endtime="20201030 18:31:46.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036324556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036334306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.282" endtime="20201030 18:31:46.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.301" endtime="20201030 18:31:46.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.920" endtime="20201030 18:31:46.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.915" endtime="20201030 18:31:46.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:46.318" level="INFO">${RESULT} = [{'diff': 9.749999999995873e-06}, {'diff': 9.221999999996233e-06}, {'diff': 9.583000000000508e-06}, {'diff': 9.416999999997677e-06}, {'diff': 9.570000000000412e-06}, {'diff': 9.042000000000772e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:46.309" endtime="20201030 18:31:46.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:46.327" level="INFO">${OVERHEAD} = {'diff': [9.749999999995873e-06, 9.221999999996233e-06, 9.583000000000508e-06, 9.416999999997677e-06, 9.570000000000412e-06, 9.042000000000772e-06, 9.236000000002742e-06, 9.597000000000078e-06, 9.0839...</msg>
<status status="PASS" starttime="20201030 18:31:46.320" endtime="20201030 18:31:46.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.337" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:46.335" endtime="20201030 18:31:46.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.343" level="INFO">VALUE: [9.749999999995873e-06, 9.221999999996233e-06, 9.583000000000508e-06, 9.416999999997677e-06, 9.570000000000412e-06, 9.042000000000772e-06, 9.236000000002742e-06, 9.597000000000078e-06, 9.083999999999481e-06, 9.138999999998287e-06, 9.096999999999578e-06, 9.597000000000078e-06, 9.749999999995873e-06, 9.583999999999981e-06, 9.750000000002812e-06, 9.582999999993569e-06, 8.931000000003686e-06, 9.916999999998177e-06, 8.930999999996747e-06, 9.083000000000008e-06, 8.916999999997177e-06, 8.917000000004116e-06, 8.903000000004546e-06, 8.917000000004116e-06, 9.583000000000508e-06, 8.916000000004642e-06, 8.972000000002922e-06, 9.750000000002812e-06, 9.514000000002132e-06, 9.597000000000078e-06, 9.069000000000438e-06, 8.916999999997177e-06, 9.083000000000008e-06, 8.902000000005073e-06, 9.083999999999481e-06, 9.138999999998287e-06, 9.430999999997247e-06, 9.582999999993569e-06, 9.749999999995873e-06, 9.764000000002382e-06, 9.388999999998537e-06, 9.097999999999051e-06, 9.333000000000258e-06, 9.583000000000508e-06, 9.249999999995373e-06, 8.929999999997273e-06, 9.583999999999981e-06, 9.778000000001952e-06, 9.416999999997677e-06, 8.916000000004642e-06]</msg>
<status status="PASS" starttime="20201030 18:31:46.340" endtime="20201030 18:31:46.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.329" endtime="20201030 18:31:46.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:46.360" endtime="20201030 18:31:46.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.355" endtime="20201030 18:31:46.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.353" endtime="20201030 18:31:46.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.867" endtime="20201030 18:31:46.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.866" endtime="20201030 18:31:46.387"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.408" endtime="20201030 18:31:46.421"></status>
</kw>
<msg timestamp="20201030 18:31:46.422" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.404" endtime="20201030 18:31:46.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.429" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.424" endtime="20201030 18:31:46.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.431" endtime="20201030 18:31:46.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.397" endtime="20201030 18:31:46.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.392" endtime="20201030 18:31:46.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.454" endtime="20201030 18:31:46.788"></status>
</kw>
<msg timestamp="20201030 18:31:46.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040045653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040054569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.451" endtime="20201030 18:31:46.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040045653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040054569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.798" endtime="20201030 18:31:46.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.816" endtime="20201030 18:31:46.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.444" endtime="20201030 18:31:46.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.439" endtime="20201030 18:31:46.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:46.833" level="INFO">${RESULT} = [{'diff': 8.915999999997704e-06}, {'diff': 9.556000000000842e-06}, {'diff': 9.096999999999578e-06}, {'diff': 9.069000000000438e-06}, {'diff': 9.569000000000938e-06}, {'diff': 9.583999999999981e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:46.825" endtime="20201030 18:31:46.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:46.843" level="INFO">${OVERHEAD} = {'diff': [8.915999999997704e-06, 9.556000000000842e-06, 9.096999999999578e-06, 9.069000000000438e-06, 9.569000000000938e-06, 9.583999999999981e-06, 9.236000000002742e-06, 9.430999999997247e-06, 8.9309...</msg>
<status status="PASS" starttime="20201030 18:31:46.835" endtime="20201030 18:31:46.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.853" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:46.850" endtime="20201030 18:31:46.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.858" level="INFO">VALUE: [8.915999999997704e-06, 9.556000000000842e-06, 9.096999999999578e-06, 9.069000000000438e-06, 9.569000000000938e-06, 9.583999999999981e-06, 9.236000000002742e-06, 9.430999999997247e-06, 8.930999999996747e-06, 9.415999999998204e-06, 9.417000000004616e-06, 9.417000000004616e-06, 9.597999999999551e-06, 9.750000000002812e-06, 8.915999999997704e-06, 9.694000000004532e-06, 9.401999999998634e-06, 9.597000000000078e-06, 9.527999999994763e-06, 9.083000000000008e-06, 9.582999999993569e-06, 9.083000000000008e-06, 9.415999999998204e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.749999999995873e-06, 9.083000000000008e-06, 9.750000000002812e-06, 8.916000000004642e-06, 8.916999999997177e-06, 9.916999999998177e-06, 9.430999999997247e-06, 9.250000000002312e-06, 9.76299999999597e-06, 8.958000000003352e-06, 9.416999999997677e-06, 9.250000000002312e-06, 9.083999999999481e-06, 9.429999999997773e-06, 9.096999999999578e-06, 9.402999999998107e-06, 9.249999999995373e-06, 9.083000000000008e-06, 9.096999999999578e-06, 9.486000000002992e-06, 8.944000000003782e-06, 8.915999999997704e-06, 8.916999999997177e-06, 9.583000000000508e-06, 9.235999999995803e-06]</msg>
<status status="PASS" starttime="20201030 18:31:46.855" endtime="20201030 18:31:46.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.844" endtime="20201030 18:31:46.861"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:46.872" endtime="20201030 18:31:46.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.866" endtime="20201030 18:31:46.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.864" endtime="20201030 18:31:46.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.389" endtime="20201030 18:31:46.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.388" endtime="20201030 18:31:46.897"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.917" endtime="20201030 18:31:46.929"></status>
</kw>
<msg timestamp="20201030 18:31:46.931" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.914" endtime="20201030 18:31:46.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.937" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.933" endtime="20201030 18:31:46.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.939" endtime="20201030 18:31:46.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.907" endtime="20201030 18:31:46.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.902" endtime="20201030 18:31:46.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.962" endtime="20201030 18:31:47.303"></status>
</kw>
<msg timestamp="20201030 18:31:47.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036138097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036147528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.959" endtime="20201030 18:31:47.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036138097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036147528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.312" endtime="20201030 18:31:47.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.331" endtime="20201030 18:31:47.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.951" endtime="20201030 18:31:47.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.947" endtime="20201030 18:31:47.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:47.359" level="INFO">${RESULT} = [{'diff': 9.430999999997247e-06}, {'diff': 8.943999999996843e-06}, {'diff': 9.583000000000508e-06}, {'diff': 9.597000000000078e-06}, {'diff': 8.916999999997177e-06}, {'diff': 9.250000000002312e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:47.342" endtime="20201030 18:31:47.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:47.371" level="INFO">${OVERHEAD} = {'diff': [9.430999999997247e-06, 8.943999999996843e-06, 9.583000000000508e-06, 9.597000000000078e-06, 8.916999999997177e-06, 9.250000000002312e-06, 9.471999999996483e-06, 9.445000000003756e-06, 9.1249...</msg>
<status status="PASS" starttime="20201030 18:31:47.362" endtime="20201030 18:31:47.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.383" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:47.380" endtime="20201030 18:31:47.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.389" level="INFO">VALUE: [9.430999999997247e-06, 8.943999999996843e-06, 9.583000000000508e-06, 9.597000000000078e-06, 8.916999999997177e-06, 9.250000000002312e-06, 9.471999999996483e-06, 9.445000000003756e-06, 9.124999999998717e-06, 9.416000000005142e-06, 8.917000000004116e-06, 9.250000000002312e-06, 9.583000000000508e-06, 8.957999999996413e-06, 9.416999999997677e-06, 9.597000000000078e-06, 9.236000000002742e-06, 8.917000000004116e-06, 9.610999999999648e-06, 9.735999999996303e-06, 9.193999999997093e-06, 8.916999999997177e-06, 8.930999999996747e-06, 8.943999999996843e-06, 9.417000000004616e-06, 9.264000000001882e-06, 9.096999999999578e-06, 9.250000000002312e-06, 9.180999999996997e-06, 9.750000000002812e-06, 9.194000000004032e-06, 9.402999999998107e-06, 9.736000000003242e-06, 9.416999999997677e-06, 9.583000000000508e-06, 9.583000000000508e-06, 9.749999999995873e-06, 9.583000000000508e-06, 9.249999999995373e-06, 9.249999999995373e-06, 9.097999999999051e-06, 9.416999999997677e-06, 9.096999999999578e-06, 8.901999999998134e-06, 9.624999999999218e-06, 9.124999999998717e-06, 9.069000000000438e-06, 9.430000000004712e-06, 9.583999999999981e-06, 9.402999999998107e-06]</msg>
<status status="PASS" starttime="20201030 18:31:47.385" endtime="20201030 18:31:47.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.374" endtime="20201030 18:31:47.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:47.402" endtime="20201030 18:31:47.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.398" endtime="20201030 18:31:47.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.395" endtime="20201030 18:31:47.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.899" endtime="20201030 18:31:47.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.898" endtime="20201030 18:31:47.427"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.448" endtime="20201030 18:31:47.460"></status>
</kw>
<msg timestamp="20201030 18:31:47.461" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.444" endtime="20201030 18:31:47.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.467" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.464" endtime="20201030 18:31:47.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.470" endtime="20201030 18:31:47.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.437" endtime="20201030 18:31:47.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.433" endtime="20201030 18:31:47.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.493" endtime="20201030 18:31:47.830"></status>
</kw>
<msg timestamp="20201030 18:31:47.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036588167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036597556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.490" endtime="20201030 18:31:47.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036588167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036597556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.839" endtime="20201030 18:31:47.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.858" endtime="20201030 18:31:47.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.482" endtime="20201030 18:31:47.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.478" endtime="20201030 18:31:47.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:47.875" level="INFO">${RESULT} = [{'diff': 9.389000000005476e-06}, {'diff': 9.597999999999551e-06}, {'diff': 9.250000000002312e-06}, {'diff': 9.208000000003602e-06}, {'diff': 9.222000000003172e-06}, {'diff': 9.26299999999547e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:47.866" endtime="20201030 18:31:47.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:47.886" level="INFO">${OVERHEAD} = {'diff': [9.389000000005476e-06, 9.597999999999551e-06, 9.250000000002312e-06, 9.208000000003602e-06, 9.222000000003172e-06, 9.26299999999547e-06, 9.764000000002382e-06, 9.069000000000438e-06, 9.40199...</msg>
<status status="PASS" starttime="20201030 18:31:47.877" endtime="20201030 18:31:47.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.897" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:47.895" endtime="20201030 18:31:47.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.902" level="INFO">VALUE: [9.389000000005476e-06, 9.597999999999551e-06, 9.250000000002312e-06, 9.208000000003602e-06, 9.222000000003172e-06, 9.26299999999547e-06, 9.764000000002382e-06, 9.069000000000438e-06, 9.401999999998634e-06, 9.722000000003672e-06, 9.096999999999578e-06, 9.569000000000938e-06, 9.250000000002312e-06, 9.042000000000772e-06, 9.096999999999578e-06, 8.929999999997273e-06, 9.292000000001022e-06, 8.931000000003686e-06, 9.096999999999578e-06, 9.736000000003242e-06, 9.542000000001272e-06, 9.042000000000772e-06, 9.333000000000258e-06, 9.096999999999578e-06, 9.429999999997773e-06, 9.250000000002312e-06, 9.430999999997247e-06, 9.249999999995373e-06, 8.957999999996413e-06, 9.416999999997677e-06, 8.916999999997177e-06, 9.264000000001882e-06, 9.750000000002812e-06, 9.250000000002312e-06, 9.332999999993319e-06, 8.916000000004642e-06, 9.166999999997427e-06, 9.429999999997773e-06, 9.207999999996663e-06, 9.250000000002312e-06, 9.597000000000078e-06, 9.360999999999398e-06, 9.764000000002382e-06, 9.401999999998634e-06, 9.096999999999578e-06, 9.749999999995873e-06, 9.096999999999578e-06, 9.583000000000508e-06, 9.096999999999578e-06, 9.916999999998177e-06]</msg>
<status status="PASS" starttime="20201030 18:31:47.899" endtime="20201030 18:31:47.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.888" endtime="20201030 18:31:47.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:47.915" endtime="20201030 18:31:47.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.910" endtime="20201030 18:31:47.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.908" endtime="20201030 18:31:47.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.429" endtime="20201030 18:31:47.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.428" endtime="20201030 18:31:47.940"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.960" endtime="20201030 18:31:47.972"></status>
</kw>
<msg timestamp="20201030 18:31:47.973" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.956" endtime="20201030 18:31:47.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.979" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.975" endtime="20201030 18:31:47.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.981" endtime="20201030 18:31:47.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.949" endtime="20201030 18:31:47.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.945" endtime="20201030 18:31:47.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.004" endtime="20201030 18:31:48.352"></status>
</kw>
<msg timestamp="20201030 18:31:48.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035775833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035784847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.001" endtime="20201030 18:31:48.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035775833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035784847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.362" endtime="20201030 18:31:48.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.381" endtime="20201030 18:31:48.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.994" endtime="20201030 18:31:48.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.989" endtime="20201030 18:31:48.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:48.398" level="INFO">${RESULT} = [{'diff': 9.014000000001632e-06}, {'diff': 9.083000000000008e-06}, {'diff': 9.764000000002382e-06}, {'diff': 9.416999999997677e-06}, {'diff': 9.750000000002812e-06}, {'diff': 9.416999999997677e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:31:48.389" endtime="20201030 18:31:48.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:48.407" level="INFO">${OVERHEAD} = {'diff': [9.014000000001632e-06, 9.083000000000008e-06, 9.764000000002382e-06, 9.416999999997677e-06, 9.750000000002812e-06, 9.416999999997677e-06, 8.902999999997607e-06, 9.819000000001188e-06, 9.1669...</msg>
<status status="PASS" starttime="20201030 18:31:48.400" endtime="20201030 18:31:48.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.417" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:31:48.415" endtime="20201030 18:31:48.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.423" level="INFO">VALUE: [9.014000000001632e-06, 9.083000000000008e-06, 9.764000000002382e-06, 9.416999999997677e-06, 9.750000000002812e-06, 9.416999999997677e-06, 8.902999999997607e-06, 9.819000000001188e-06, 9.166999999997427e-06, 9.277000000001978e-06, 8.902999999997607e-06, 9.443999999997343e-06, 9.597000000000078e-06, 9.235999999995803e-06, 9.806000000001092e-06, 9.792000000001522e-06, 9.569000000000938e-06, 9.583000000000508e-06, 9.416000000005142e-06, 9.583999999999981e-06, 9.416999999997677e-06, 9.319000000000688e-06, 8.916000000004642e-06, 9.430999999997247e-06, 9.444999999996817e-06, 9.09800000000599e-06, 9.416000000005142e-06, 8.916999999997177e-06, 9.430000000004712e-06, 9.583000000000508e-06, 9.597000000000078e-06, 9.415999999998204e-06, 9.901999999999134e-06, 8.888999999998037e-06, 8.916999999997177e-06, 9.083999999999481e-06, 9.236000000002742e-06, 8.916000000004642e-06, 9.721999999996733e-06, 9.764000000002382e-06, 9.069999999999911e-06, 8.915999999997704e-06, 9.694000000004532e-06, 9.083000000000008e-06, 9.750000000002812e-06, 8.971999999995983e-06, 9.749999999995873e-06, 9.764000000002382e-06, 8.916000000004642e-06, 9.415999999998204e-06]</msg>
<status status="PASS" starttime="20201030 18:31:48.419" endtime="20201030 18:31:48.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.409" endtime="20201030 18:31:48.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:48.435" endtime="20201030 18:31:48.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.431" endtime="20201030 18:31:48.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.428" endtime="20201030 18:31:48.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.941" endtime="20201030 18:31:48.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.940" endtime="20201030 18:31:48.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.850" endtime="20201030 18:31:48.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:48.471" endtime="20201030 18:31:48.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.466" endtime="20201030 18:31:48.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.464" endtime="20201030 18:31:48.495"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:37.725" endtime="20201030 18:31:48.496" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:48.514" endtime="20201030 18:31:48.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.510" endtime="20201030 18:31:48.537"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.572" endtime="20201030 18:31:48.590"></status>
</kw>
<msg timestamp="20201030 18:31:48.591" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.569" endtime="20201030 18:31:48.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.598" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.593" endtime="20201030 18:31:48.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.604" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:48.600" endtime="20201030 18:31:48.605"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:48.562" endtime="20201030 18:31:48.607"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:48.555" endtime="20201030 18:31:48.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.553" endtime="20201030 18:31:48.609"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:48.617" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:48.615" endtime="20201030 18:31:48.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.611" endtime="20201030 18:31:48.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.551" endtime="20201030 18:31:48.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.549" endtime="20201030 18:31:48.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.620" endtime="20201030 18:31:48.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.543" endtime="20201030 18:31:48.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.539" endtime="20201030 18:31:48.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.507" endtime="20201030 18:31:48.627"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.649" endtime="20201030 18:31:48.675"></status>
</kw>
<msg timestamp="20201030 18:31:48.677" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.646" endtime="20201030 18:31:48.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.684" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.680" endtime="20201030 18:31:48.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.686" endtime="20201030 18:31:48.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.639" endtime="20201030 18:31:48.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.633" endtime="20201030 18:31:48.693"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.698" endtime="20201030 18:31:48.704"></status>
</kw>
<msg timestamp="20201030 18:31:48.705" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:31:48.695" endtime="20201030 18:31:48.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.715" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:48.713" endtime="20201030 18:31:48.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.720" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:48.718" endtime="20201030 18:31:48.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.707" endtime="20201030 18:31:48.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.734" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:48.732" endtime="20201030 18:31:48.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.740" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:48.737" endtime="20201030 18:31:48.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.724" endtime="20201030 18:31:48.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.759" endtime="20201030 18:31:49.130"></status>
</kw>
<msg timestamp="20201030 18:31:49.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.12754625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127569208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:48.756" endtime="20201030 18:31:49.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.12754625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127569208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:49.139" endtime="20201030 18:31:49.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.159" endtime="20201030 18:31:49.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.748" endtime="20201030 18:31:49.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.743" endtime="20201030 18:31:49.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:49.176" level="INFO">${RESULT} = [{'diff': 2.2957999999989598e-05}, {'diff': 2.4431000000019187e-05}, {'diff': 2.480500000001662e-05}, {'diff': 2.395899999999007e-05}, {'diff': 2.5444000000013345e-05}, {'diff': 2.4596999999987323e-05...</msg>
<status status="PASS" starttime="20201030 18:31:49.167" endtime="20201030 18:31:49.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:49.186" level="INFO">${OVERHEAD} = {'diff': [2.2957999999989598e-05, 2.4431000000019187e-05, 2.480500000001662e-05, 2.395899999999007e-05, 2.5444000000013345e-05, 2.4596999999987323e-05, 2.5250000000004436e-05, 2.4263999999996066e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:49.178" endtime="20201030 18:31:49.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.197" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 18:31:49.195" endtime="20201030 18:31:49.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.203" level="INFO">VALUE: [2.2957999999989598e-05, 2.4431000000019187e-05, 2.480500000001662e-05, 2.395899999999007e-05, 2.5444000000013345e-05, 2.4596999999987323e-05, 2.5250000000004436e-05, 2.4263999999996066e-05, 2.5277999999989698e-05, 2.5124999999986963e-05, 2.4999999999997247e-05, 2.5292000000010084e-05, 2.4277999999988698e-05, 2.5124999999986963e-05, 2.40970000000007e-05, 2.5596999999988324e-05, 2.549999999998387e-05, 2.494499999999844e-05, 2.5430999999992432e-05, 2.5638999999993972e-05, 2.4263999999996066e-05, 2.562500000000134e-05, 2.50970000000017e-05, 2.445799999997722e-05, 2.495899999999107e-05, 2.4958000000019354e-05, 2.5624999999973586e-05, 2.5444999999985063e-05, 2.565300000001436e-05, 2.515299999999998e-05, 2.3957999999990598e-05, 2.5278000000017453e-05, 2.4790999999996233e-05, 2.4458000000004976e-05, 2.5486000000018993e-05, 2.5277999999989698e-05, 2.4957999999991598e-05, 2.4791999999995706e-05, 2.513900000000735e-05, 2.391599999998495e-05, 2.4764000000010444e-05, 2.5013999999989878e-05, 2.47369999999969e-05, 2.5082999999981315e-05, 2.559700000001608e-05, 2.4777000000003602e-05, 2.4722000000004796e-05, 2.4750000000017813e-05, 2.4777000000003602e-05, 2.5098000000001175e-05]</msg>
<status status="PASS" starttime="20201030 18:31:49.199" endtime="20201030 18:31:49.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.187" endtime="20201030 18:31:49.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:49.217" endtime="20201030 18:31:49.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.212" endtime="20201030 18:31:49.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.208" endtime="20201030 18:31:49.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.629" endtime="20201030 18:31:49.243"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:48.501" endtime="20201030 18:31:49.249" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:49.270" endtime="20201030 18:31:49.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.265" endtime="20201030 18:31:49.295"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.329" endtime="20201030 18:31:49.344"></status>
</kw>
<msg timestamp="20201030 18:31:49.346" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.326" endtime="20201030 18:31:49.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.352" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.348" endtime="20201030 18:31:49.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.358" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:49.354" endtime="20201030 18:31:49.359"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:49.319" endtime="20201030 18:31:49.361"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:49.312" endtime="20201030 18:31:49.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.310" endtime="20201030 18:31:49.363"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:49.371" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:49.370" endtime="20201030 18:31:49.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.365" endtime="20201030 18:31:49.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.308" endtime="20201030 18:31:49.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.306" endtime="20201030 18:31:49.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.374" endtime="20201030 18:31:49.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.302" endtime="20201030 18:31:49.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.297" endtime="20201030 18:31:49.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.262" endtime="20201030 18:31:49.381"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.408" endtime="20201030 18:31:49.490"></status>
</kw>
<msg timestamp="20201030 18:31:49.491" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.403" endtime="20201030 18:31:49.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.498" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.494" endtime="20201030 18:31:49.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.500" endtime="20201030 18:31:49.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.394" endtime="20201030 18:31:49.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.387" endtime="20201030 18:31:49.507"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.512" endtime="20201030 18:31:49.516"></status>
</kw>
<msg timestamp="20201030 18:31:49.517" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:31:49.509" endtime="20201030 18:31:49.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.527" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:49.525" endtime="20201030 18:31:49.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.531" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:49.529" endtime="20201030 18:31:49.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.519" endtime="20201030 18:31:49.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.543" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:49.541" endtime="20201030 18:31:49.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.547" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:49.545" endtime="20201030 18:31:49.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.535" endtime="20201030 18:31:49.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.568" endtime="20201030 18:31:49.917"></status>
</kw>
<msg timestamp="20201030 18:31:49.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131093972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131119083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.565" endtime="20201030 18:31:49.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131093972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131119083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.927" endtime="20201030 18:31:49.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.945" endtime="20201030 18:31:49.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.556" endtime="20201030 18:31:49.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.551" endtime="20201030 18:31:49.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:49.965" level="INFO">${RESULT} = [{'diff': 2.5110999999994332e-05}, {'diff': 3.404199999998414e-05}, {'diff': 3.415300000000898e-05}, {'diff': 3.4124999999995964e-05}, {'diff': 3.411100000000333e-05}, {'diff': 3.4138999999988595e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:49.956" endtime="20201030 18:31:49.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:49.980" level="INFO">${OVERHEAD} = {'diff': [2.5110999999994332e-05, 3.404199999998414e-05, 3.415300000000898e-05, 3.4124999999995964e-05, 3.411100000000333e-05, 3.4138999999988595e-05, 3.41939999999874e-05, 3.4138999999988595e-05, 3.4...</msg>
<status status="PASS" starttime="20201030 18:31:49.967" endtime="20201030 18:31:49.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.993" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 18:31:49.991" endtime="20201030 18:31:49.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.999" level="INFO">VALUE: [2.5110999999994332e-05, 3.404199999998414e-05, 3.415300000000898e-05, 3.4124999999995964e-05, 3.411100000000333e-05, 3.4138999999988595e-05, 3.41939999999874e-05, 3.4138999999988595e-05, 3.4138999999988595e-05, 3.4082999999990315e-05, 3.4152999999981226e-05, 3.413900000001635e-05, 3.4124999999995964e-05, 3.415300000000898e-05, 3.4138999999988595e-05, 3.41939999999874e-05, 3.413799999998912e-05, 3.4124999999995964e-05, 3.416700000000161e-05, 3.4124999999995964e-05, 3.413799999998912e-05, 3.4138999999988595e-05, 3.411100000000333e-05, 3.415300000000898e-05, 3.411100000000333e-05, 3.4124999999995964e-05, 3.4152999999981226e-05, 3.416700000000161e-05, 3.4138999999988595e-05, 3.4124999999995964e-05, 3.415199999998175e-05, 3.4138999999988595e-05, 3.4138999999988595e-05, 3.416600000000214e-05, 3.4096999999982947e-05, 3.4138999999988595e-05, 3.416700000000161e-05, 3.405600000000453e-05, 3.416600000000214e-05, 3.4124999999995964e-05, 3.415300000000898e-05, 3.415200000000951e-05, 3.415200000000951e-05, 3.4124999999995964e-05, 3.415300000000898e-05, 3.4138999999988595e-05, 3.406999999999716e-05, 3.4082999999990315e-05, 3.4124999999995964e-05, 3.411100000000333e-05]</msg>
<status status="PASS" starttime="20201030 18:31:49.996" endtime="20201030 18:31:50.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.982" endtime="20201030 18:31:50.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:50.013" endtime="20201030 18:31:50.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.008" endtime="20201030 18:31:50.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.005" endtime="20201030 18:31:50.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.383" endtime="20201030 18:31:50.038"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:49.255" endtime="20201030 18:31:50.039" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:50.056" endtime="20201030 18:31:50.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.052" endtime="20201030 18:31:50.080"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.113" endtime="20201030 18:31:50.128"></status>
</kw>
<msg timestamp="20201030 18:31:50.130" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.110" endtime="20201030 18:31:50.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.136" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.132" endtime="20201030 18:31:50.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.142" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:50.138" endtime="20201030 18:31:50.143"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:50.103" endtime="20201030 18:31:50.145"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:50.096" endtime="20201030 18:31:50.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.093" endtime="20201030 18:31:50.147"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:50.155" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:50.153" endtime="20201030 18:31:50.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.149" endtime="20201030 18:31:50.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.091" endtime="20201030 18:31:50.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.089" endtime="20201030 18:31:50.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.158" endtime="20201030 18:31:50.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.085" endtime="20201030 18:31:50.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.081" endtime="20201030 18:31:50.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.050" endtime="20201030 18:31:50.165"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.190" endtime="20201030 18:31:50.385"></status>
</kw>
<msg timestamp="20201030 18:31:50.387" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.187" endtime="20201030 18:31:50.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.394" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.389" endtime="20201030 18:31:50.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.397" endtime="20201030 18:31:50.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.180" endtime="20201030 18:31:50.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.172" endtime="20201030 18:31:50.404"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.409" endtime="20201030 18:31:50.415"></status>
</kw>
<msg timestamp="20201030 18:31:50.416" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:31:50.406" endtime="20201030 18:31:50.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.429" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:50.426" endtime="20201030 18:31:50.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.434" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:50.431" endtime="20201030 18:31:50.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.419" endtime="20201030 18:31:50.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.447" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:50.445" endtime="20201030 18:31:50.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.452" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:50.450" endtime="20201030 18:31:50.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.439" endtime="20201030 18:31:50.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.471" endtime="20201030 18:31:50.817"></status>
</kw>
<msg timestamp="20201030 18:31:50.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127751028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127788167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.467" endtime="20201030 18:31:50.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127751028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127788167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.826" endtime="20201030 18:31:50.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.844" endtime="20201030 18:31:50.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.460" endtime="20201030 18:31:50.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.455" endtime="20201030 18:31:50.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:50.861" level="INFO">${RESULT} = [{'diff': 3.713900000001935e-05}, {'diff': 5.518099999998749e-05}, {'diff': 5.515300000000223e-05}, {'diff': 5.5221999999993665e-05}, {'diff': 5.518099999998749e-05}, {'diff': 5.518099999998749e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:50.852" endtime="20201030 18:31:50.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:50.872" level="INFO">${OVERHEAD} = {'diff': [3.713900000001935e-05, 5.518099999998749e-05, 5.515300000000223e-05, 5.5221999999993665e-05, 5.518099999998749e-05, 5.518099999998749e-05, 5.516699999999486e-05, 5.513899999998184e-05, 5.520...</msg>
<status status="PASS" starttime="20201030 18:31:50.863" endtime="20201030 18:31:50.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.884" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 18:31:50.882" endtime="20201030 18:31:50.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.889" level="INFO">VALUE: [3.713900000001935e-05, 5.518099999998749e-05, 5.515300000000223e-05, 5.5221999999993665e-05, 5.518099999998749e-05, 5.518099999998749e-05, 5.516699999999486e-05, 5.513899999998184e-05, 5.520900000000051e-05, 5.5165999999995385e-05, 5.509700000000395e-05, 5.5223000000020894e-05, 5.5181000000015246e-05, 5.515300000000223e-05, 5.516699999999486e-05, 5.5152000000002754e-05, 5.5165999999995385e-05, 5.5208000000001034e-05, 5.5179999999988016e-05, 5.5181000000015246e-05, 5.518000000001577e-05, 5.519500000000788e-05, 5.519399999998065e-05, 5.5179999999988016e-05, 5.519500000000788e-05, 5.5179999999988016e-05, 5.5165999999995385e-05, 5.519500000000788e-05, 5.525000000000668e-05, 5.520900000000051e-05, 5.5125000000016966e-05, 5.5179999999988016e-05, 5.520900000000051e-05, 5.5221999999993665e-05, 5.51390000000096e-05, 5.522200000002142e-05, 5.518000000004353e-05, 5.519400000003616e-05, 5.519500000000788e-05, 5.5179999999988016e-05, 5.5165999999995385e-05, 5.519500000000788e-05, 5.5167000000022615e-05, 5.519400000003616e-05, 5.519399999998065e-05, 5.519500000000788e-05, 5.5180999999959734e-05, 5.5181000000015246e-05, 5.5153000000029984e-05, 5.519399999998065e-05]</msg>
<status status="PASS" starttime="20201030 18:31:50.886" endtime="20201030 18:31:50.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.874" endtime="20201030 18:31:50.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:50.901" endtime="20201030 18:31:50.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.897" endtime="20201030 18:31:50.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.894" endtime="20201030 18:31:50.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.166" endtime="20201030 18:31:50.926"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:50.044" endtime="20201030 18:31:50.928" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:50.945" endtime="20201030 18:31:50.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.941" endtime="20201030 18:31:50.968"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.002" endtime="20201030 18:31:51.019"></status>
</kw>
<msg timestamp="20201030 18:31:51.020" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.998" endtime="20201030 18:31:51.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.026" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.022" endtime="20201030 18:31:51.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.033" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:51.029" endtime="20201030 18:31:51.033"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:50.991" endtime="20201030 18:31:51.035"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:50.984" endtime="20201030 18:31:51.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.982" endtime="20201030 18:31:51.038"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:51.045" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:51.044" endtime="20201030 18:31:51.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.039" endtime="20201030 18:31:51.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.980" endtime="20201030 18:31:51.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.978" endtime="20201030 18:31:51.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.049" endtime="20201030 18:31:51.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.974" endtime="20201030 18:31:51.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.970" endtime="20201030 18:31:51.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.939" endtime="20201030 18:31:51.059"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.088" endtime="20201030 18:31:51.119"></status>
</kw>
<msg timestamp="20201030 18:31:51.122" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.083" endtime="20201030 18:31:51.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.139" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.128" endtime="20201030 18:31:51.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.146" endtime="20201030 18:31:51.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.072" endtime="20201030 18:31:51.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.066" endtime="20201030 18:31:51.157"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.163" endtime="20201030 18:31:51.169"></status>
</kw>
<msg timestamp="20201030 18:31:51.171" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:31:51.160" endtime="20201030 18:31:51.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.183" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:51.180" endtime="20201030 18:31:51.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.189" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:51.186" endtime="20201030 18:31:51.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.173" endtime="20201030 18:31:51.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.204" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:51.201" endtime="20201030 18:31:51.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.211" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:51.208" endtime="20201030 18:31:51.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.194" endtime="20201030 18:31:51.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.235" endtime="20201030 18:31:51.587"></status>
</kw>
<msg timestamp="20201030 18:31:51.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141364139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141389944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.230" endtime="20201030 18:31:51.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141364139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141389944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.596" endtime="20201030 18:31:51.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.615" endtime="20201030 18:31:51.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.221" endtime="20201030 18:31:51.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.215" endtime="20201030 18:31:51.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:51.634" level="INFO">${RESULT} = [{'diff': 2.5804999999989864e-05}, {'diff': 2.488900000000016e-05}, {'diff': 2.576399999998369e-05}, {'diff': 2.5791999999996706e-05}, {'diff': 2.5778000000004075e-05}, {'diff': 2.4903000000020548e-05...</msg>
<status status="PASS" starttime="20201030 18:31:51.625" endtime="20201030 18:31:51.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:51.653" level="INFO">${OVERHEAD} = {'diff': [2.5804999999989864e-05, 2.488900000000016e-05, 2.576399999998369e-05, 2.5791999999996706e-05, 2.5778000000004075e-05, 2.4903000000020548e-05, 2.491700000001318e-05, 2.5764000000011444e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:31:51.636" endtime="20201030 18:31:51.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.665" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 18:31:51.662" endtime="20201030 18:31:51.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.670" level="INFO">VALUE: [2.5804999999989864e-05, 2.488900000000016e-05, 2.576399999998369e-05, 2.5791999999996706e-05, 2.5778000000004075e-05, 2.4903000000020548e-05, 2.491700000001318e-05, 2.5764000000011444e-05, 2.568099999999962e-05, 2.5903000000021548e-05, 2.488900000000016e-05, 2.5764000000011444e-05, 2.5722000000005796e-05, 2.5818999999982495e-05, 2.583300000000288e-05, 2.4930999999978054e-05, 2.5818999999982495e-05, 2.488900000000016e-05, 2.5846999999995512e-05, 2.5846999999995512e-05, 2.5777000000004602e-05, 2.5777000000004602e-05, 2.5777000000004602e-05, 2.488900000000016e-05, 2.4874999999979774e-05, 2.490199999999332e-05, 2.490199999999332e-05, 2.497199999998423e-05, 2.491700000001318e-05, 2.484800000002174e-05, 2.4834000000001355e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.492999999997858e-05, 2.5778000000004075e-05, 2.48610000000149e-05, 2.583300000000288e-05, 2.488900000000016e-05, 2.491700000001318e-05, 2.5764000000011444e-05, 2.488900000000016e-05, 2.4860999999987143e-05, 2.48610000000149e-05, 2.5791999999996706e-05, 2.5791999999996706e-05, 2.588900000000116e-05, 2.5791999999996706e-05, 2.5874999999980774e-05, 2.5778000000004075e-05, 2.48610000000149e-05]</msg>
<status status="PASS" starttime="20201030 18:31:51.667" endtime="20201030 18:31:51.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.655" endtime="20201030 18:31:51.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:51.682" endtime="20201030 18:31:51.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.677" endtime="20201030 18:31:51.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.675" endtime="20201030 18:31:51.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.060" endtime="20201030 18:31:51.707"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:50.932" endtime="20201030 18:31:51.708" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:51.726" endtime="20201030 18:31:51.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.722" endtime="20201030 18:31:51.749"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.784" endtime="20201030 18:31:51.801"></status>
</kw>
<msg timestamp="20201030 18:31:51.803" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.780" endtime="20201030 18:31:51.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.811" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.806" endtime="20201030 18:31:51.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.820" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:51.815" endtime="20201030 18:31:51.821"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:51.773" endtime="20201030 18:31:51.823"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:51.767" endtime="20201030 18:31:51.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.764" endtime="20201030 18:31:51.826"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:51.835" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:51.834" endtime="20201030 18:31:51.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.829" endtime="20201030 18:31:51.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.761" endtime="20201030 18:31:51.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.759" endtime="20201030 18:31:51.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.840" endtime="20201030 18:31:51.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.755" endtime="20201030 18:31:51.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.750" endtime="20201030 18:31:51.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.719" endtime="20201030 18:31:51.847"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.869" endtime="20201030 18:31:51.953"></status>
</kw>
<msg timestamp="20201030 18:31:51.954" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.866" endtime="20201030 18:31:51.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.960" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.956" endtime="20201030 18:31:51.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.962" endtime="20201030 18:31:51.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.859" endtime="20201030 18:31:51.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.853" endtime="20201030 18:31:51.969"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.974" endtime="20201030 18:31:51.978"></status>
</kw>
<msg timestamp="20201030 18:31:51.979" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:31:51.971" endtime="20201030 18:31:51.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.990" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:51.987" endtime="20201030 18:31:51.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.994" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:51.992" endtime="20201030 18:31:51.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.981" endtime="20201030 18:31:51.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.006" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:52.004" endtime="20201030 18:31:52.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.012" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:52.008" endtime="20201030 18:31:52.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.997" endtime="20201030 18:31:52.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.031" endtime="20201030 18:31:52.381"></status>
</kw>
<msg timestamp="20201030 18:31:52.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137106292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137137583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.028" endtime="20201030 18:31:52.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137106292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137137583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.391" endtime="20201030 18:31:52.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.412" endtime="20201030 18:31:52.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.021" endtime="20201030 18:31:52.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.016" endtime="20201030 18:31:52.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:52.430" level="INFO">${RESULT} = [{'diff': 3.129100000001661e-05}, {'diff': 3.131900000000187e-05}, {'diff': 3.1304999999981487e-05}, {'diff': 3.1306000000008716e-05}, {'diff': 3.131900000000187e-05}, {'diff': 3.134700000001489e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:52.421" endtime="20201030 18:31:52.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:52.441" level="INFO">${OVERHEAD} = {'diff': [3.129100000001661e-05, 3.131900000000187e-05, 3.1304999999981487e-05, 3.1306000000008716e-05, 3.131900000000187e-05, 3.134700000001489e-05, 3.136100000000752e-05, 3.134700000001489e-05, 3.13...</msg>
<status status="PASS" starttime="20201030 18:31:52.433" endtime="20201030 18:31:52.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.454" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 18:31:52.451" endtime="20201030 18:31:52.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.461" level="INFO">VALUE: [3.129100000001661e-05, 3.131900000000187e-05, 3.1304999999981487e-05, 3.1306000000008716e-05, 3.131900000000187e-05, 3.134700000001489e-05, 3.136100000000752e-05, 3.134700000001489e-05, 3.1346999999987135e-05, 3.136100000000752e-05, 3.132000000000135e-05, 3.1306000000008716e-05, 3.133300000002226e-05, 3.130500000000924e-05, 3.131900000000187e-05, 3.130599999998096e-05, 3.129199999998833e-05, 3.131900000000187e-05, 3.137500000000015e-05, 3.131899999997412e-05, 3.1332999999994504e-05, 3.137500000000015e-05, 3.134799999998661e-05, 3.130599999998096e-05, 3.1332999999994504e-05, 3.137500000000015e-05, 3.132000000000135e-05, 3.130500000000924e-05, 3.130500000000924e-05, 3.133399999999398e-05, 3.1306000000008716e-05, 3.131900000000187e-05, 3.137500000000015e-05, 3.1348000000014364e-05, 3.130500000000924e-05, 3.130500000000924e-05, 3.131899999997412e-05, 3.1332999999994504e-05, 3.131900000000187e-05, 3.133400000002173e-05, 3.1332999999994504e-05, 3.1292000000016085e-05, 3.126399999997531e-05, 3.132000000000135e-05, 3.1360999999979766e-05, 3.131900000000187e-05, 3.1292000000016085e-05, 3.132000000000135e-05, 3.1306000000008716e-05, 3.131900000000187e-05]</msg>
<status status="PASS" starttime="20201030 18:31:52.457" endtime="20201030 18:31:52.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.443" endtime="20201030 18:31:52.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:52.476" endtime="20201030 18:31:52.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.470" endtime="20201030 18:31:52.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.466" endtime="20201030 18:31:52.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.848" endtime="20201030 18:31:52.502"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:51.713" endtime="20201030 18:31:52.503" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:52.521" endtime="20201030 18:31:52.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.517" endtime="20201030 18:31:52.544"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.577" endtime="20201030 18:31:52.593"></status>
</kw>
<msg timestamp="20201030 18:31:52.594" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.574" endtime="20201030 18:31:52.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.600" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.596" endtime="20201030 18:31:52.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.607" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:52.602" endtime="20201030 18:31:52.607"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:52.566" endtime="20201030 18:31:52.609"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:52.560" endtime="20201030 18:31:52.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.557" endtime="20201030 18:31:52.611"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:52.620" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:52.618" endtime="20201030 18:31:52.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.613" endtime="20201030 18:31:52.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.556" endtime="20201030 18:31:52.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.554" endtime="20201030 18:31:52.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.624" endtime="20201030 18:31:52.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.550" endtime="20201030 18:31:52.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.546" endtime="20201030 18:31:52.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.514" endtime="20201030 18:31:52.631"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.655" endtime="20201030 18:31:52.852"></status>
</kw>
<msg timestamp="20201030 18:31:52.855" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.650" endtime="20201030 18:31:52.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.863" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.858" endtime="20201030 18:31:52.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.866" endtime="20201030 18:31:52.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.642" endtime="20201030 18:31:52.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.637" endtime="20201030 18:31:52.874"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.880" endtime="20201030 18:31:52.886"></status>
</kw>
<msg timestamp="20201030 18:31:52.887" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:31:52.876" endtime="20201030 18:31:52.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.899" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:31:52.897" endtime="20201030 18:31:52.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.904" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:31:52.902" endtime="20201030 18:31:52.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.890" endtime="20201030 18:31:52.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.916" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:31:52.913" endtime="20201030 18:31:52.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.920" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:31:52.918" endtime="20201030 18:31:52.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.907" endtime="20201030 18:31:52.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.939" endtime="20201030 18:31:53.286"></status>
</kw>
<msg timestamp="20201030 18:31:53.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128916306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128957153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.936" endtime="20201030 18:31:53.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128916306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128957153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.296" endtime="20201030 18:31:53.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.314" endtime="20201030 18:31:53.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.929" endtime="20201030 18:31:53.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.924" endtime="20201030 18:31:53.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:53.332" level="INFO">${RESULT} = [{'diff': 4.084699999998276e-05}, {'diff': 3.9847000000009514e-05}, {'diff': 4.0805000000004865e-05}, {'diff': 4.077799999999132e-05}, {'diff': 4.084699999998276e-05}, {'diff': 4.0805000000004865e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:53.323" endtime="20201030 18:31:53.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:31:53.343" level="INFO">${OVERHEAD} = {'diff': [4.084699999998276e-05, 3.9847000000009514e-05, 4.0805000000004865e-05, 4.077799999999132e-05, 4.084699999998276e-05, 4.0805000000004865e-05, 4.083299999999013e-05, 3.984800000000899e-05, 4.0...</msg>
<status status="PASS" starttime="20201030 18:31:53.334" endtime="20201030 18:31:53.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.354" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 18:31:53.352" endtime="20201030 18:31:53.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.360" level="INFO">VALUE: [4.084699999998276e-05, 3.9847000000009514e-05, 4.0805000000004865e-05, 4.077799999999132e-05, 4.084699999998276e-05, 4.0805000000004865e-05, 4.083299999999013e-05, 3.984800000000899e-05, 4.0805000000004865e-05, 3.98339999999886e-05, 4.084800000000999e-05, 4.084800000000999e-05, 4.084699999998276e-05, 4.091600000000195e-05, 4.083299999999013e-05, 3.9818999999996496e-05, 3.984699999998176e-05, 4.0847000000010514e-05, 4.084699999998276e-05, 4.081999999999697e-05, 4.0847000000010514e-05, 4.0834000000017356e-05, 4.083299999999013e-05, 4.083300000001788e-05, 4.083300000001788e-05, 4.083300000001788e-05, 3.9818999999996496e-05, 4.083300000001788e-05, 4.083300000001788e-05, 4.0805000000004865e-05, 4.084800000000999e-05, 4.0847000000010514e-05, 4.0847000000010514e-05, 4.083300000001788e-05, 4.083299999999013e-05, 4.0846999999955e-05, 4.083400000004511e-05, 3.983299999998913e-05, 4.08339999999896e-05, 4.088899999998841e-05, 3.9819999999968214e-05, 4.084799999998223e-05, 4.086199999997486e-05, 4.0847000000010514e-05, 3.984699999998176e-05, 4.083300000001788e-05, 4.083300000001788e-05, 4.084799999998223e-05, 3.983299999998913e-05, 4.0847000000010514e-05]</msg>
<status status="PASS" starttime="20201030 18:31:53.357" endtime="20201030 18:31:53.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.344" endtime="20201030 18:31:53.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:53.373" endtime="20201030 18:31:53.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.368" endtime="20201030 18:31:53.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.365" endtime="20201030 18:31:53.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.632" endtime="20201030 18:31:53.398"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:52.508" endtime="20201030 18:31:53.399" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:53.416" endtime="20201030 18:31:53.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.412" endtime="20201030 18:31:53.439"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.472" endtime="20201030 18:31:53.488"></status>
</kw>
<msg timestamp="20201030 18:31:53.489" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.469" endtime="20201030 18:31:53.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.496" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.491" endtime="20201030 18:31:53.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.503" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:53.498" endtime="20201030 18:31:53.503"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:53.462" endtime="20201030 18:31:53.506"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:53.455" endtime="20201030 18:31:53.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.453" endtime="20201030 18:31:53.511"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:53.520" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:53.518" endtime="20201030 18:31:53.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.513" endtime="20201030 18:31:53.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.451" endtime="20201030 18:31:53.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.449" endtime="20201030 18:31:53.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.525" endtime="20201030 18:31:53.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.445" endtime="20201030 18:31:53.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.441" endtime="20201030 18:31:53.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.410" endtime="20201030 18:31:53.534"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.547" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:31:53.569" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:31:55.639" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:31:53.541" endtime="20201030 18:31:55.641"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.647" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:31:55.643" endtime="20201030 18:31:55.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.536" endtime="20201030 18:31:55.649"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.681" endtime="20201030 18:31:55.693"></status>
</kw>
<msg timestamp="20201030 18:31:55.694" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.677" endtime="20201030 18:31:55.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.703" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.697" endtime="20201030 18:31:55.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.706" endtime="20201030 18:31:55.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.663" endtime="20201030 18:31:55.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.657" endtime="20201030 18:31:55.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.732" endtime="20201030 18:31:56.079"></status>
</kw>
<msg timestamp="20201030 18:31:56.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.810035, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.139692833, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:55.728" endtime="20201030 18:31:56.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.810035, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.139692833, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:56.088" endtime="20201030 18:31:56.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.107" endtime="20201030 18:31:56.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.721" endtime="20201030 18:31:56.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.716" endtime="20201030 18:31:56.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:56.124" level="INFO">${PHILIP_RES} = [{'diff': 0.32965783299999973}, {'diff': 0.006908582999999968}, {'diff': 2.4193999999866378e-05}, {'diff': 2.4027999999898242e-05}, {'diff': 2.404200000016843e-05}, {'diff': 2.4055999999994526e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:56.116" endtime="20201030 18:31:56.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:56.134" level="INFO">${RESULT} = {'diff': [0.32965783299999973, 0.006908582999999968, 2.4193999999866378e-05, 2.4027999999898242e-05, 2.404200000016843e-05, 2.4055999999994526e-05, 2.4041000000085688e-05, 2.4014000000072144e-05, 2.40...</msg>
<status status="PASS" starttime="20201030 18:31:56.126" endtime="20201030 18:31:56.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.146" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:56.143" endtime="20201030 18:31:56.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.151" level="INFO">VALUE: [0.32965783299999973, 0.006908582999999968, 2.4193999999866378e-05, 2.4027999999898242e-05, 2.404200000016843e-05, 2.4055999999994526e-05, 2.4041000000085688e-05, 2.4014000000072144e-05, 2.402800000034233e-05, 2.4014000000072144e-05, 2.40269999998155e-05, 2.4012999999989404e-05, 2.4055000000355875e-05, 2.4055999999994526e-05, 2.398599999997586e-05, 2.4097999999916908e-05, 2.40269999998155e-05, 2.4014000000072144e-05, 2.4069999999820624e-05, 2.402700000025959e-05, 2.4027999999898242e-05, 2.3972000000149762e-05, 2.4110999999660265e-05, 2.3971999999705673e-05, 2.402700000025959e-05, 2.4014000000072144e-05, 2.4027999999898242e-05, 2.3999999999801958e-05, 2.402700000025959e-05, 2.4014000000072144e-05, 2.4000000000246047e-05, 2.4055999999994526e-05, 2.402800000034233e-05, 2.4014000000072144e-05, 2.4055000000355875e-05, 2.404199999972434e-05, 2.4055999999994526e-05, 2.4000000000246047e-05, 2.4027999999898242e-05, 2.402800000034233e-05, 2.4014000000072144e-05, 2.40269999998155e-05, 2.4069000000181973e-05, 2.4027999999898242e-05, 2.4027999999898242e-05, 2.3999999999801958e-05, 2.4027999999898242e-05, 2.4000000000246047e-05, 2.404199999972434e-05, 2.404200000016843e-05, 2.40409999996416e-05, 2.4027999999898242e-05]</msg>
<status status="PASS" starttime="20201030 18:31:56.148" endtime="20201030 18:31:56.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.137" endtime="20201030 18:31:56.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:56.163" endtime="20201030 18:31:56.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.159" endtime="20201030 18:31:56.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.156" endtime="20201030 18:31:56.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.653" endtime="20201030 18:31:56.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.652" endtime="20201030 18:31:56.188"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.209" endtime="20201030 18:31:56.221"></status>
</kw>
<msg timestamp="20201030 18:31:56.222" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.206" endtime="20201030 18:31:56.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.228" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.224" endtime="20201030 18:31:56.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.231" endtime="20201030 18:31:56.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.199" endtime="20201030 18:31:56.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.194" endtime="20201030 18:31:56.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.253" endtime="20201030 18:31:56.595"></status>
</kw>
<msg timestamp="20201030 18:31:56.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036305264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036344319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.250" endtime="20201030 18:31:56.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036305264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036344319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.605" endtime="20201030 18:31:56.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.624" endtime="20201030 18:31:56.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.243" endtime="20201030 18:31:56.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.239" endtime="20201030 18:31:56.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:56.640" level="INFO">${PHILIP_RES} = [{'diff': 3.9055000000003115e-05}, {'diff': 3.801399999999594e-05}, {'diff': 3.7944999999997564e-05}, {'diff': 3.7972999999996704e-05}, {'diff': 3.795799999999766e-05}, {'diff': 3.794399999999809e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:56.632" endtime="20201030 18:31:56.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:56.665" level="INFO">${RESULT} = {'diff': [3.9055000000003115e-05, 3.801399999999594e-05, 3.7944999999997564e-05, 3.7972999999996704e-05, 3.795799999999766e-05, 3.794399999999809e-05, 3.79580000000046e-05, 3.7930999999997994e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 18:31:56.651" endtime="20201030 18:31:56.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.675" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:56.673" endtime="20201030 18:31:56.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.681" level="INFO">VALUE: [3.9055000000003115e-05, 3.801399999999594e-05, 3.7944999999997564e-05, 3.7972999999996704e-05, 3.795799999999766e-05, 3.794399999999809e-05, 3.79580000000046e-05, 3.7930999999997994e-05, 3.795799999999766e-05, 3.794399999999809e-05, 3.7958999999997134e-05, 3.7958999999997134e-05, 3.794399999999809e-05, 3.79580000000046e-05, 3.79450000000045e-05, 3.794400000000503e-05, 3.7944999999997564e-05, 3.794399999999809e-05, 3.795799999999766e-05, 3.7958999999997134e-05, 3.795799999999766e-05, 3.794399999999809e-05, 3.7930999999997994e-05, 3.7958999999997134e-05, 3.797200000000417e-05, 3.788900000000622e-05, 3.797300000000364e-05, 3.799999999999637e-05, 3.794399999999809e-05, 3.7944999999997564e-05, 3.7944999999997564e-05, 3.795799999999766e-05, 3.7888999999999284e-05, 3.7972999999996704e-05, 3.794399999999809e-05, 3.791700000000536e-05, 3.795900000000407e-05, 3.79450000000045e-05, 3.7916999999998424e-05, 3.7944999999997564e-05, 3.795799999999766e-05, 3.8040999999995606e-05, 3.79859999999968e-05, 3.795799999999766e-05, 3.790300000000579e-05, 3.791700000000536e-05, 3.797200000000417e-05, 3.794399999999809e-05, 3.7958999999997134e-05, 3.797199999999723e-05]</msg>
<status status="PASS" starttime="20201030 18:31:56.678" endtime="20201030 18:31:56.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.667" endtime="20201030 18:31:56.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:56.692" endtime="20201030 18:31:56.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.688" endtime="20201030 18:31:56.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.686" endtime="20201030 18:31:56.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.190" endtime="20201030 18:31:56.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.189" endtime="20201030 18:31:56.718"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.739" endtime="20201030 18:31:56.753"></status>
</kw>
<msg timestamp="20201030 18:31:56.754" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.736" endtime="20201030 18:31:56.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.760" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.756" endtime="20201030 18:31:56.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.763" endtime="20201030 18:31:56.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.729" endtime="20201030 18:31:56.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.724" endtime="20201030 18:31:56.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.786" endtime="20201030 18:31:57.127"></status>
</kw>
<msg timestamp="20201030 18:31:57.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036748639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036800778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.783" endtime="20201030 18:31:57.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036748639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036800778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.138" endtime="20201030 18:31:57.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.158" endtime="20201030 18:31:57.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.775" endtime="20201030 18:31:57.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.771" endtime="20201030 18:31:57.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:57.179" level="INFO">${PHILIP_RES} = [{'diff': 5.213899999999966e-05}, {'diff': 5.091699999999755e-05}, {'diff': 5.0915999999998074e-05}, {'diff': 5.0917000000004486e-05}, {'diff': 5.086099999999927e-05}, {'diff': 5.087499999999884e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:57.170" endtime="20201030 18:31:57.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:57.189" level="INFO">${RESULT} = {'diff': [5.213899999999966e-05, 5.091699999999755e-05, 5.0915999999998074e-05, 5.0917000000004486e-05, 5.086099999999927e-05, 5.087499999999884e-05, 5.086099999999927e-05, 5.087499999999884e-05, 5.09...</msg>
<status status="PASS" starttime="20201030 18:31:57.181" endtime="20201030 18:31:57.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.199" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:57.197" endtime="20201030 18:31:57.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.205" level="INFO">VALUE: [5.213899999999966e-05, 5.091699999999755e-05, 5.0915999999998074e-05, 5.0917000000004486e-05, 5.086099999999927e-05, 5.087499999999884e-05, 5.086099999999927e-05, 5.087499999999884e-05, 5.091699999999755e-05, 5.091600000000501e-05, 5.091600000000501e-05, 5.090299999999798e-05, 5.087499999999884e-05, 5.091699999999755e-05, 5.087499999999884e-05, 5.090299999999798e-05, 5.088899999999841e-05, 5.098600000000286e-05, 5.0931000000004056e-05, 5.0903000000004917e-05, 5.0903000000004917e-05, 5.094499999999669e-05, 5.08469999999997e-05, 5.086099999999927e-05, 5.091699999999755e-05, 5.090299999999798e-05, 5.090299999999798e-05, 5.088899999999841e-05, 5.0917000000004486e-05, 5.0903000000004917e-05, 5.0903000000004917e-05, 5.087499999999884e-05, 5.087499999999884e-05, 5.088899999999841e-05, 5.087499999999884e-05, 5.088899999999841e-05, 5.095899999999626e-05, 5.094499999999669e-05, 5.087499999999884e-05, 5.087499999999884e-05, 5.087499999999884e-05, 5.090299999999798e-05, 5.0917000000004486e-05, 5.088900000000535e-05, 5.087500000000578e-05, 5.08469999999997e-05, 5.086199999999874e-05, 5.087500000000578e-05, 5.088900000000535e-05, 5.088900000000535e-05]</msg>
<status status="PASS" starttime="20201030 18:31:57.202" endtime="20201030 18:31:57.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.190" endtime="20201030 18:31:57.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:57.216" endtime="20201030 18:31:57.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.212" endtime="20201030 18:31:57.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.210" endtime="20201030 18:31:57.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.720" endtime="20201030 18:31:57.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.718" endtime="20201030 18:31:57.242"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.263" endtime="20201030 18:31:57.280"></status>
</kw>
<msg timestamp="20201030 18:31:57.282" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.260" endtime="20201030 18:31:57.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.288" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.284" endtime="20201030 18:31:57.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.290" endtime="20201030 18:31:57.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.253" endtime="20201030 18:31:57.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.248" endtime="20201030 18:31:57.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.313" endtime="20201030 18:31:57.654"></status>
</kw>
<msg timestamp="20201030 18:31:57.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038107903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038171847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.310" endtime="20201030 18:31:57.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038107903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038171847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.664" endtime="20201030 18:31:57.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.683" endtime="20201030 18:31:57.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.303" endtime="20201030 18:31:57.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.298" endtime="20201030 18:31:57.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:57.699" level="INFO">${PHILIP_RES} = [{'diff': 6.394400000000328e-05}, {'diff': 6.426400000000138e-05}, {'diff': 6.426400000000138e-05}, {'diff': 6.423600000000224e-05}, {'diff': 6.423699999999477e-05}, {'diff': 6.426400000000138e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:57.691" endtime="20201030 18:31:57.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:57.709" level="INFO">${RESULT} = {'diff': [6.394400000000328e-05, 6.426400000000138e-05, 6.426400000000138e-05, 6.423600000000224e-05, 6.423699999999477e-05, 6.426400000000138e-05, 6.42500000000018e-05, 6.426400000000138e-05, 6.42359...</msg>
<status status="PASS" starttime="20201030 18:31:57.701" endtime="20201030 18:31:57.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.719" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:57.717" endtime="20201030 18:31:57.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.724" level="INFO">VALUE: [6.394400000000328e-05, 6.426400000000138e-05, 6.426400000000138e-05, 6.423600000000224e-05, 6.423699999999477e-05, 6.426400000000138e-05, 6.42500000000018e-05, 6.426400000000138e-05, 6.42359999999953e-05, 6.426400000000138e-05, 6.42500000000018e-05, 6.426400000000138e-05, 6.427800000000095e-05, 6.426400000000138e-05, 6.424999999999487e-05, 6.426400000000138e-05, 6.426400000000138e-05, 6.42500000000018e-05, 6.42500000000018e-05, 6.423700000000171e-05, 6.426400000000138e-05, 6.426399999999444e-05, 6.423600000000224e-05, 6.423600000000224e-05, 6.424999999999487e-05, 6.42500000000018e-05, 6.426400000000138e-05, 6.426399999999444e-05, 6.430500000000061e-05, 6.423600000000224e-05, 6.42500000000018e-05, 6.426400000000138e-05, 6.42500000000018e-05, 6.426400000000138e-05, 6.42229999999952e-05, 6.426400000000138e-05, 6.423600000000224e-05, 6.426399999999444e-05, 6.423600000000224e-05, 6.426400000000138e-05, 6.42630000000019e-05, 6.426400000000138e-05, 6.426400000000138e-05, 6.427700000000147e-05, 6.426400000000138e-05, 6.422199999999573e-05, 6.422199999999573e-05, 6.427800000000095e-05, 6.42500000000018e-05, 6.424999999999487e-05]</msg>
<status status="PASS" starttime="20201030 18:31:57.721" endtime="20201030 18:31:57.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.710" endtime="20201030 18:31:57.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:57.738" endtime="20201030 18:31:57.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.732" endtime="20201030 18:31:57.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.729" endtime="20201030 18:31:57.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.244" endtime="20201030 18:31:57.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.242" endtime="20201030 18:31:57.763"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.784" endtime="20201030 18:31:57.802"></status>
</kw>
<msg timestamp="20201030 18:31:57.803" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.781" endtime="20201030 18:31:57.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.809" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.805" endtime="20201030 18:31:57.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.812" endtime="20201030 18:31:57.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.774" endtime="20201030 18:31:57.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.769" endtime="20201030 18:31:57.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.835" endtime="20201030 18:31:58.177"></status>
</kw>
<msg timestamp="20201030 18:31:58.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036645972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036723778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.832" endtime="20201030 18:31:58.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036645972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036723778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.186" endtime="20201030 18:31:58.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.206" endtime="20201030 18:31:58.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.824" endtime="20201030 18:31:58.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.820" endtime="20201030 18:31:58.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:58.222" level="INFO">${PHILIP_RES} = [{'diff': 7.780599999999971e-05}, {'diff': 7.754199999999989e-05}, {'diff': 7.755599999999946e-05}, {'diff': 7.751400000000075e-05}, {'diff': 7.752800000000032e-05}, {'diff': 7.751400000000075e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:58.214" endtime="20201030 18:31:58.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:58.233" level="INFO">${RESULT} = {'diff': [7.780599999999971e-05, 7.754199999999989e-05, 7.755599999999946e-05, 7.751400000000075e-05, 7.752800000000032e-05, 7.751400000000075e-05, 7.752800000000032e-05, 7.754199999999989e-05, 7.7528...</msg>
<status status="PASS" starttime="20201030 18:31:58.224" endtime="20201030 18:31:58.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.243" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:58.241" endtime="20201030 18:31:58.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.249" level="INFO">VALUE: [7.780599999999971e-05, 7.754199999999989e-05, 7.755599999999946e-05, 7.751400000000075e-05, 7.752800000000032e-05, 7.751400000000075e-05, 7.752800000000032e-05, 7.754199999999989e-05, 7.752800000000032e-05, 7.755599999999946e-05, 7.751399999999381e-05, 7.748600000000161e-05, 7.751400000000075e-05, 7.751300000000128e-05, 7.754100000000042e-05, 7.750000000000118e-05, 7.754100000000042e-05, 7.752700000000085e-05, 7.754100000000042e-05, 7.751400000000075e-05, 7.752800000000032e-05, 7.755599999999946e-05, 7.751400000000075e-05, 7.750000000000118e-05, 7.754199999999989e-05, 7.752800000000032e-05, 7.751400000000075e-05, 7.755599999999946e-05, 7.752800000000032e-05, 7.756999999999903e-05, 7.75839999999986e-05, 7.752800000000032e-05, 7.752800000000032e-05, 7.751400000000075e-05, 7.756899999999955e-05, 7.752800000000032e-05, 7.75560000000064e-05, 7.752800000000032e-05, 7.752800000000032e-05, 7.751400000000075e-05, 7.750000000000118e-05, 7.75269999999939e-05, 7.754199999999989e-05, 7.751400000000075e-05, 7.745800000000247e-05, 7.752800000000032e-05, 7.752800000000032e-05, 7.751400000000075e-05, 7.752800000000032e-05, 7.751400000000075e-05]</msg>
<status status="PASS" starttime="20201030 18:31:58.245" endtime="20201030 18:31:58.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.234" endtime="20201030 18:31:58.251"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:58.261" endtime="20201030 18:31:58.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.256" endtime="20201030 18:31:58.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.254" endtime="20201030 18:31:58.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.765" endtime="20201030 18:31:58.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.764" endtime="20201030 18:31:58.287"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.315" endtime="20201030 18:31:58.335"></status>
</kw>
<msg timestamp="20201030 18:31:58.337" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.310" endtime="20201030 18:31:58.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.344" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.340" endtime="20201030 18:31:58.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.347" endtime="20201030 18:31:58.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.302" endtime="20201030 18:31:58.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.295" endtime="20201030 18:31:58.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.376" endtime="20201030 18:31:58.724"></status>
</kw>
<msg timestamp="20201030 18:31:58.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044613083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044704681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.372" endtime="20201030 18:31:58.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044613083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044704681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.733" endtime="20201030 18:31:58.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.752" endtime="20201030 18:31:58.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.363" endtime="20201030 18:31:58.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.358" endtime="20201030 18:31:58.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:58.768" level="INFO">${PHILIP_RES} = [{'diff': 9.159800000000523e-05}, {'diff': 9.173600000000198e-05}, {'diff': 9.175000000000155e-05}, {'diff': 9.173600000000198e-05}, {'diff': 9.175000000000155e-05}, {'diff': 9.170900000000232e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:58.760" endtime="20201030 18:31:58.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:58.779" level="INFO">${RESULT} = {'diff': [9.159800000000523e-05, 9.173600000000198e-05, 9.175000000000155e-05, 9.173600000000198e-05, 9.175000000000155e-05, 9.170900000000232e-05, 9.173600000000198e-05, 9.172200000000241e-05, 9.1750...</msg>
<status status="PASS" starttime="20201030 18:31:58.770" endtime="20201030 18:31:58.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.789" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:58.787" endtime="20201030 18:31:58.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.795" level="INFO">VALUE: [9.159800000000523e-05, 9.173600000000198e-05, 9.175000000000155e-05, 9.173600000000198e-05, 9.175000000000155e-05, 9.170900000000232e-05, 9.173600000000198e-05, 9.172200000000241e-05, 9.175000000000155e-05, 9.170899999999538e-05, 9.172199999999547e-05, 9.169399999999633e-05, 9.172199999999547e-05, 9.173700000000146e-05, 9.169400000000327e-05, 9.170800000000284e-05, 9.172300000000189e-05, 9.165300000000404e-05, 9.173600000000198e-05, 9.172200000000241e-05, 9.173600000000198e-05, 9.175000000000155e-05, 9.169400000000327e-05, 9.172300000000189e-05, 9.175000000000155e-05, 9.172199999999547e-05, 9.173599999999504e-05, 9.175000000000155e-05, 9.173600000000198e-05, 9.170800000000284e-05, 9.168100000000318e-05, 9.173600000000198e-05, 9.172300000000189e-05, 9.175000000000155e-05, 9.169400000000327e-05, 9.169400000000327e-05, 9.176400000000112e-05, 9.173600000000198e-05, 9.172300000000189e-05, 9.169400000000327e-05, 9.173600000000198e-05, 9.172200000000241e-05, 9.170900000000232e-05, 9.173600000000198e-05, 9.175000000000155e-05, 9.170900000000232e-05, 9.16529999999971e-05, 9.173600000000198e-05, 9.169500000000275e-05, 9.170800000000284e-05]</msg>
<status status="PASS" starttime="20201030 18:31:58.792" endtime="20201030 18:31:58.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.781" endtime="20201030 18:31:58.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:58.807" endtime="20201030 18:31:58.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.802" endtime="20201030 18:31:58.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.800" endtime="20201030 18:31:58.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.290" endtime="20201030 18:31:58.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.289" endtime="20201030 18:31:58.832"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.853" endtime="20201030 18:31:58.875"></status>
</kw>
<msg timestamp="20201030 18:31:58.876" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.850" endtime="20201030 18:31:58.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.882" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.878" endtime="20201030 18:31:58.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.884" endtime="20201030 18:31:58.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.843" endtime="20201030 18:31:58.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.838" endtime="20201030 18:31:58.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.909" endtime="20201030 18:31:59.251"></status>
</kw>
<msg timestamp="20201030 18:31:59.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036521958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036627361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.905" endtime="20201030 18:31:59.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036521958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036627361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.261" endtime="20201030 18:31:59.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.280" endtime="20201030 18:31:59.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.897" endtime="20201030 18:31:59.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.893" endtime="20201030 18:31:59.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:59.296" level="INFO">${PHILIP_RES} = [{'diff': 0.00010540299999999697}, {'diff': 0.00010600000000000193}, {'diff': 0.00010593100000000355}, {'diff': 0.0001060140000000015}, {'diff': 0.00010602800000000107}, {'diff': 0.0001060560000000002...</msg>
<status status="PASS" starttime="20201030 18:31:59.289" endtime="20201030 18:31:59.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:59.306" level="INFO">${RESULT} = {'diff': [0.00010540299999999697, 0.00010600000000000193, 0.00010593100000000355, 0.0001060140000000015, 0.00010602800000000107, 0.0001060560000000002, 0.00010599999999999499, 0.00010600000000000193, ...</msg>
<status status="PASS" starttime="20201030 18:31:59.298" endtime="20201030 18:31:59.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.316" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:59.314" endtime="20201030 18:31:59.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.322" level="INFO">VALUE: [0.00010540299999999697, 0.00010600000000000193, 0.00010593100000000355, 0.0001060140000000015, 0.00010602800000000107, 0.0001060560000000002, 0.00010599999999999499, 0.00010600000000000193, 0.00010598600000000236, 0.00010594399999999671, 0.00010598599999999542, 0.00010600000000000193, 0.00010597200000000279, 0.00010597199999999585, 0.00010600000000000193, 0.00010598600000000236, 0.0001060140000000015, 0.0001060140000000015, 0.00010599999999999499, 0.00010601399999999456, 0.00010598599999999542, 0.00010597200000000279, 0.00010600000000000193, 0.00010601399999999456, 0.00010592999999999714, 0.0001060140000000015, 0.00010598600000000236, 0.00010600000000000193, 0.00010597199999999585, 0.00010594399999999671, 0.00010597300000000226, 0.00010598700000000183, 0.00010600000000000193, 0.00010602800000000107, 0.00010599999999999499, 0.00010592999999999714, 0.00010598600000000236, 0.00010597300000000226, 0.00010600000000000193, 0.00010600000000000193, 0.00010600000000000193, 0.00010598599999999542, 0.00010606999999999978, 0.00010600000000000193, 0.0001060140000000015, 0.0001060140000000015, 0.00010600000000000193, 0.00010594500000000312, 0.00010601299999999508, 0.00010598599999999542]</msg>
<status status="PASS" starttime="20201030 18:31:59.319" endtime="20201030 18:31:59.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.307" endtime="20201030 18:31:59.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:59.333" endtime="20201030 18:31:59.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.329" endtime="20201030 18:31:59.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.326" endtime="20201030 18:31:59.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.834" endtime="20201030 18:31:59.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.833" endtime="20201030 18:31:59.359"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.380" endtime="20201030 18:31:59.404"></status>
</kw>
<msg timestamp="20201030 18:31:59.405" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.377" endtime="20201030 18:31:59.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.411" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.407" endtime="20201030 18:31:59.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.413" endtime="20201030 18:31:59.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.370" endtime="20201030 18:31:59.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.364" endtime="20201030 18:31:59.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.439" endtime="20201030 18:31:59.780"></status>
</kw>
<msg timestamp="20201030 18:31:59.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036852653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036972569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.436" endtime="20201030 18:31:59.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036852653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036972569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.789" endtime="20201030 18:31:59.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.807" endtime="20201030 18:31:59.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.429" endtime="20201030 18:31:59.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.424" endtime="20201030 18:31:59.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:59.823" level="INFO">${PHILIP_RES} = [{'diff': 0.00011991599999999769}, {'diff': 0.0001204029999999981}, {'diff': 0.00012033300000000025}, {'diff': 0.00012038899999999852}, {'diff': 0.00012041599999999819}, {'diff': 0.0001204029999999981...</msg>
<status status="PASS" starttime="20201030 18:31:59.815" endtime="20201030 18:31:59.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:59.832" level="INFO">${RESULT} = {'diff': [0.00011991599999999769, 0.0001204029999999981, 0.00012033300000000025, 0.00012038899999999852, 0.00012041599999999819, 0.0001204029999999981, 0.00012040199999999862, 0.00012040199999999862, ...</msg>
<status status="PASS" starttime="20201030 18:31:59.825" endtime="20201030 18:31:59.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.842" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:59.840" endtime="20201030 18:31:59.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.848" level="INFO">VALUE: [0.00011991599999999769, 0.0001204029999999981, 0.00012033300000000025, 0.00012038899999999852, 0.00012041599999999819, 0.0001204029999999981, 0.00012040199999999862, 0.00012040199999999862, 0.00012034799999999929, 0.00012041600000000513, 0.00012036099999999939, 0.00012041699999999766, 0.00012040300000000503, 0.00012038900000000546, 0.00012040199999999862, 0.00012044500000000374, 0.00012041599999999819, 0.00012041599999999819, 0.0001203050000000011, 0.00012040200000000556, 0.00012038899999999852, 0.00012038899999999852, 0.00012041599999999819, 0.00012038900000000546, 0.00012037499999999896, 0.00012037499999999896, 0.00012038899999999852, 0.0001204029999999981, 0.00012043099999999723, 0.00012043099999999723, 0.0001203750000000059, 0.00012033300000000025, 0.00012036099999999939, 0.00012038799999999905, 0.00012038899999999852, 0.00012044399999999733, 0.00012040200000000556, 0.00012041699999999766, 0.00012037499999999896, 0.00012038900000000546, 0.00012037499999999896, 0.00012044399999999733, 0.00012038900000000546, 0.00012037499999999896, 0.00012038899999999852, 0.00012037499999999896, 0.00012041599999999819, 0.00012034799999999929, 0.00012037499999999896, 0.00012041699999999766]</msg>
<status status="PASS" starttime="20201030 18:31:59.845" endtime="20201030 18:31:59.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.834" endtime="20201030 18:31:59.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:59.861" endtime="20201030 18:31:59.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.855" endtime="20201030 18:31:59.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.853" endtime="20201030 18:31:59.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.361" endtime="20201030 18:31:59.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.359" endtime="20201030 18:31:59.886"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.908" endtime="20201030 18:31:59.934"></status>
</kw>
<msg timestamp="20201030 18:31:59.935" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.905" endtime="20201030 18:31:59.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.942" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.937" endtime="20201030 18:31:59.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.944" endtime="20201030 18:31:59.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.897" endtime="20201030 18:31:59.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.892" endtime="20201030 18:31:59.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.967" endtime="20201030 18:32:00.306"></status>
</kw>
<msg timestamp="20201030 18:32:00.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037051014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037185556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.964" endtime="20201030 18:32:00.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037051014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037185556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.315" endtime="20201030 18:32:00.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.333" endtime="20201030 18:32:00.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.957" endtime="20201030 18:32:00.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.952" endtime="20201030 18:32:00.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:00.349" level="INFO">${PHILIP_RES} = [{'diff': 0.00013454200000000138}, {'diff': 0.00013461099999999976}, {'diff': 0.0001346389999999989}, {'diff': 0.00013463900000000584}, {'diff': 0.0001346530000000054}, {'diff': 0.00013469400000000464...</msg>
<status status="PASS" starttime="20201030 18:32:00.342" endtime="20201030 18:32:00.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:00.360" level="INFO">${RESULT} = {'diff': [0.00013454200000000138, 0.00013461099999999976, 0.0001346389999999989, 0.00013463900000000584, 0.0001346530000000054, 0.00013469400000000464, 0.00013465299999999847, 0.000134651999999999, 0....</msg>
<status status="PASS" starttime="20201030 18:32:00.351" endtime="20201030 18:32:00.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.370" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:00.368" endtime="20201030 18:32:00.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.375" level="INFO">VALUE: [0.00013454200000000138, 0.00013461099999999976, 0.0001346389999999989, 0.00013463900000000584, 0.0001346530000000054, 0.00013469400000000464, 0.00013465299999999847, 0.000134651999999999, 0.00013468000000000507, 0.0001346389999999989, 0.00013461099999999976, 0.0001346389999999989, 0.00013455600000000095, 0.000134651999999999, 0.00013462499999999933, 0.00013461099999999976, 0.00013458300000000062, 0.00013466699999999804, 0.00013462499999999933, 0.00013461099999999976, 0.00013462499999999933, 0.00013463799999999942, 0.0001346110000000067, 0.00013462499999999933, 0.00013462499999999933, 0.00013461099999999976, 0.00013459799999999966, 0.0001346530000000054, 0.0001346389999999989, 0.00013465299999999847, 0.00013465299999999847, 0.00013466700000000498, 0.0001346389999999989, 0.00013461099999999976, 0.000134651999999999, 0.0001346389999999989, 0.0001346389999999989, 0.00013465299999999847, 0.0001346389999999989, 0.00013467999999999813, 0.00013466699999999804, 0.0001346389999999989, 0.00013465299999999847, 0.00013466699999999804, 0.00013466699999999804, 0.00013465299999999847, 0.00013470899999999675, 0.00013466699999999804, 0.0001346389999999989, 0.0001346389999999989]</msg>
<status status="PASS" starttime="20201030 18:32:00.372" endtime="20201030 18:32:00.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.362" endtime="20201030 18:32:00.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:00.387" endtime="20201030 18:32:00.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.383" endtime="20201030 18:32:00.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.380" endtime="20201030 18:32:00.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.888" endtime="20201030 18:32:00.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.887" endtime="20201030 18:32:00.412"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.434" endtime="20201030 18:32:00.463"></status>
</kw>
<msg timestamp="20201030 18:32:00.464" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.431" endtime="20201030 18:32:00.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.470" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.466" endtime="20201030 18:32:00.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.472" endtime="20201030 18:32:00.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.424" endtime="20201030 18:32:00.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.419" endtime="20201030 18:32:00.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.496" endtime="20201030 18:32:00.837"></status>
</kw>
<msg timestamp="20201030 18:32:00.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037802528, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:00.492" endtime="20201030 18:32:00.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037802528, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:00.846" endtime="20201030 18:32:00.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.863" endtime="20201030 18:32:00.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.485" endtime="20201030 18:32:00.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.481" endtime="20201030 18:32:00.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:00.879" level="INFO">${PHILIP_RES} = [{'diff': 0.00014952800000000294}, {'diff': 0.00014977799999999625}, {'diff': 0.00014984700000000156}, {'diff': 0.00014983399999999453}, {'diff': 0.0001498200000000019}, {'diff': 0.0001498329999999950...</msg>
<status status="PASS" starttime="20201030 18:32:00.872" endtime="20201030 18:32:00.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:00.890" level="INFO">${RESULT} = {'diff': [0.00014952800000000294, 0.00014977799999999625, 0.00014984700000000156, 0.00014983399999999453, 0.0001498200000000019, 0.00014983299999999505, 0.00014983400000000147, 0.00014991599999999994,...</msg>
<status status="PASS" starttime="20201030 18:32:00.881" endtime="20201030 18:32:00.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.901" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:00.898" endtime="20201030 18:32:00.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.906" level="INFO">VALUE: [0.00014952800000000294, 0.00014977799999999625, 0.00014984700000000156, 0.00014983399999999453, 0.0001498200000000019, 0.00014983299999999505, 0.00014983400000000147, 0.00014991599999999994, 0.00014984699999999462, 0.00014976399999999668, 0.000149833000000002, 0.00014984700000000156, 0.00014986100000000113, 0.0001498750000000007, 0.0001499299999999995, 0.00014987499999999376, 0.0001498750000000007, 0.0001499169999999994, 0.00014988900000000027, 0.00014986100000000113, 0.0001498750000000007, 0.0001498750000000007, 0.0001498750000000007, 0.0001498479999999941, 0.00014988900000000027, 0.00014986100000000113, 0.00014984700000000156, 0.00014986100000000113, 0.00014979200000000276, 0.0001498750000000007, 0.0001498750000000007, 0.00014988900000000027, 0.0001498200000000019, 0.0001498609999999942, 0.00014986100000000113, 0.0001498620000000006, 0.0001498750000000007, 0.00014986100000000113, 0.00014984700000000156, 0.000149833000000002, 0.00014991599999999994, 0.00014993099999999898, 0.0001498609999999942, 0.00014986100000000113, 0.00014986100000000113, 0.00014990200000000037, 0.00014984700000000156, 0.0001499169999999994, 0.00014990299999999984, 0.00014988900000000027]</msg>
<status status="PASS" starttime="20201030 18:32:00.903" endtime="20201030 18:32:00.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.892" endtime="20201030 18:32:00.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:00.918" endtime="20201030 18:32:00.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.914" endtime="20201030 18:32:00.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.911" endtime="20201030 18:32:00.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.414" endtime="20201030 18:32:00.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.413" endtime="20201030 18:32:00.943"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.965" endtime="20201030 18:32:00.995"></status>
</kw>
<msg timestamp="20201030 18:32:00.996" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.962" endtime="20201030 18:32:00.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.003" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.999" endtime="20201030 18:32:01.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.005" endtime="20201030 18:32:01.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.954" endtime="20201030 18:32:01.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.949" endtime="20201030 18:32:01.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.029" endtime="20201030 18:32:01.368"></status>
</kw>
<msg timestamp="20201030 18:32:01.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037703917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037869736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.025" endtime="20201030 18:32:01.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037703917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037869736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.377" endtime="20201030 18:32:01.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.394" endtime="20201030 18:32:01.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.018" endtime="20201030 18:32:01.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.013" endtime="20201030 18:32:01.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:01.410" level="INFO">${PHILIP_RES} = [{'diff': 0.0001658189999999976}, {'diff': 0.00016515300000000122}, {'diff': 0.00016516700000000079}, {'diff': 0.00016513900000000165}, {'diff': 0.0001651389999999947}, {'diff': 0.00016519499999999993...</msg>
<status status="PASS" starttime="20201030 18:32:01.403" endtime="20201030 18:32:01.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:01.419" level="INFO">${RESULT} = {'diff': [0.0001658189999999976, 0.00016515300000000122, 0.00016516700000000079, 0.00016513900000000165, 0.0001651389999999947, 0.00016519499999999993, 0.00016515299999999428, 0.00016516700000000079, ...</msg>
<status status="PASS" starttime="20201030 18:32:01.412" endtime="20201030 18:32:01.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.430" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:01.428" endtime="20201030 18:32:01.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.437" level="INFO">VALUE: [0.0001658189999999976, 0.00016515300000000122, 0.00016516700000000079, 0.00016513900000000165, 0.0001651389999999947, 0.00016519499999999993, 0.00016515299999999428, 0.00016516700000000079, 0.00016513900000000165, 0.00016518000000000088, 0.00016512500000000208, 0.00016516599999999437, 0.0001651110000000025, 0.00016515200000000174, 0.00016512499999999514, 0.00016512500000000208, 0.00016515300000000122, 0.00016513900000000165, 0.00016515200000000174, 0.00016511099999999557, 0.00016518100000000036, 0.00016519499999999993, 0.0001651389999999947, 0.00016516700000000079, 0.00016516700000000079, 0.00016522200000000653, 0.00016519400000000045, 0.00016520800000000002, 0.00016515299999999428, 0.00016512500000000208, 0.00016518100000000036, 0.00016515300000000122, 0.0001651660000000013, 0.00016513900000000165, 0.00016516700000000079, 0.0001650839999999959, 0.00016513900000000165, 0.00016512500000000208, 0.0001651389999999947, 0.00016513900000000165, 0.00016515299999999428, 0.00016509700000000294, 0.00016516700000000079, 0.00016513800000000217, 0.000165096999999996, 0.00016511099999999557, 0.0001651110000000025, 0.00016508299999999643, 0.00016512499999999514, 0.0001651110000000025]</msg>
<status status="PASS" starttime="20201030 18:32:01.432" endtime="20201030 18:32:01.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.421" endtime="20201030 18:32:01.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:01.451" endtime="20201030 18:32:01.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.447" endtime="20201030 18:32:01.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.444" endtime="20201030 18:32:01.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.945" endtime="20201030 18:32:01.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.944" endtime="20201030 18:32:01.477"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.499" endtime="20201030 18:32:01.531"></status>
</kw>
<msg timestamp="20201030 18:32:01.533" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.496" endtime="20201030 18:32:01.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.540" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.536" endtime="20201030 18:32:01.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.543" endtime="20201030 18:32:01.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.488" endtime="20201030 18:32:01.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.483" endtime="20201030 18:32:01.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.577" endtime="20201030 18:32:01.924"></status>
</kw>
<msg timestamp="20201030 18:32:01.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037828458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038009736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.573" endtime="20201030 18:32:01.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037828458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038009736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.933" endtime="20201030 18:32:01.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.951" endtime="20201030 18:32:01.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.564" endtime="20201030 18:32:01.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.559" endtime="20201030 18:32:01.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:01.967" level="INFO">${PHILIP_RES} = [{'diff': 0.000181278}, {'diff': 0.0001805000000000001}, {'diff': 0.0001805000000000001}, {'diff': 0.00018047300000000044}, {'diff': 0.00018045900000000087}, {'diff': 0.00018048600000000053}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:32:01.959" endtime="20201030 18:32:01.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:01.976" level="INFO">${RESULT} = {'diff': [0.000181278, 0.0001805000000000001, 0.0001805000000000001, 0.00018047300000000044, 0.00018045900000000087, 0.00018048600000000053, 0.00018055599999999838, 0.00018048600000000053, 0.000180471...</msg>
<status status="PASS" starttime="20201030 18:32:01.969" endtime="20201030 18:32:01.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.986" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:01.984" endtime="20201030 18:32:01.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.991" level="INFO">VALUE: [0.000181278, 0.0001805000000000001, 0.0001805000000000001, 0.00018047300000000044, 0.00018045900000000087, 0.00018048600000000053, 0.00018055599999999838, 0.00018048600000000053, 0.00018047199999999403, 0.0001804580000000014, 0.0001805000000000001, 0.00018052799999999924, 0.00018048600000000053, 0.0001805000000000001, 0.00018048600000000053, 0.0001804580000000014, 0.0001805000000000001, 0.00018056900000000542, 0.00018048600000000053, 0.00018047199999999403, 0.00018045900000000087, 0.00018051399999999967, 0.00018044499999999436, 0.00018052799999999924, 0.00018051399999999967, 0.00018044399999999489, 0.00018047200000000096, 0.00018048600000000053, 0.00018051399999999967, 0.0001805000000000001, 0.00018041600000000269, 0.0001804580000000014, 0.0001805000000000001, 0.00018048600000000053, 0.0001804580000000014, 0.0001804450000000013, 0.0001804450000000013, 0.00018051399999999967, 0.00018054199999999881, 0.00018048600000000053, 0.00018051299999999326, 0.0001804309999999948, 0.00018047200000000096, 0.00018051399999999967, 0.00018043000000000226, 0.00018045799999999446, 0.00018048600000000053, 0.00018047300000000044, 0.00018047200000000096, 0.00018055599999999838]</msg>
<status status="PASS" starttime="20201030 18:32:01.988" endtime="20201030 18:32:01.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.977" endtime="20201030 18:32:01.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:02.012" endtime="20201030 18:32:02.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.006" endtime="20201030 18:32:02.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.996" endtime="20201030 18:32:02.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.479" endtime="20201030 18:32:02.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.478" endtime="20201030 18:32:02.037"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.059" endtime="20201030 18:32:02.092"></status>
</kw>
<msg timestamp="20201030 18:32:02.094" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.055" endtime="20201030 18:32:02.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.100" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.096" endtime="20201030 18:32:02.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.102" endtime="20201030 18:32:02.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.048" endtime="20201030 18:32:02.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.043" endtime="20201030 18:32:02.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.126" endtime="20201030 18:32:02.467"></status>
</kw>
<msg timestamp="20201030 18:32:02.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036717056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036912569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.122" endtime="20201030 18:32:02.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036717056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036912569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.476" endtime="20201030 18:32:02.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.493" endtime="20201030 18:32:02.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.115" endtime="20201030 18:32:02.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.110" endtime="20201030 18:32:02.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:02.509" level="INFO">${PHILIP_RES} = [{'diff': 0.00019551300000000132}, {'diff': 0.00019570800000000277}, {'diff': 0.00019574999999999454}, {'diff': 0.00019572299999999487}, {'diff': 0.00019576400000000105}, {'diff': 0.000195764000000001...</msg>
<status status="PASS" starttime="20201030 18:32:02.502" endtime="20201030 18:32:02.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:02.520" level="INFO">${RESULT} = {'diff': [0.00019551300000000132, 0.00019570800000000277, 0.00019574999999999454, 0.00019572299999999487, 0.00019576400000000105, 0.00019576400000000105, 0.0001957219999999954, 0.00019575000000000148,...</msg>
<status status="PASS" starttime="20201030 18:32:02.511" endtime="20201030 18:32:02.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.530" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:02.528" endtime="20201030 18:32:02.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.536" level="INFO">VALUE: [0.00019551300000000132, 0.00019570800000000277, 0.00019574999999999454, 0.00019572299999999487, 0.00019576400000000105, 0.00019576400000000105, 0.0001957219999999954, 0.00019575000000000148, 0.0001957920000000002, 0.00019579099999999378, 0.00019576400000000105, 0.0001957230000000018, 0.0001957920000000002, 0.0001957920000000002, 0.00019577800000000062, 0.00019576400000000105, 0.0001956940000000032, 0.00019574999999999454, 0.0001957920000000002, 0.00019569500000000267, 0.0001956669999999966, 0.0001956940000000032, 0.0001957360000000019, 0.00019573599999999497, 0.00019566599999999712, 0.00019576400000000105, 0.00019580500000000028, 0.00019576400000000105, 0.00019581899999999985, 0.00019576400000000105, 0.00019580599999999976, 0.00019577700000000114, 0.0001957360000000019, 0.00019576400000000105, 0.00019576400000000105, 0.0001957360000000019, 0.00019575000000000148, 0.0001957639999999941, 0.0001957089999999953, 0.00019577700000000114, 0.00019576300000000157, 0.0001957360000000019, 0.00019579100000000071, 0.0001957920000000002, 0.00019570900000000224, 0.00019577800000000062, 0.00019574999999999454, 0.00019577799999999368, 0.00019576299999999464, 0.0001957920000000002]</msg>
<status status="PASS" starttime="20201030 18:32:02.533" endtime="20201030 18:32:02.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.522" endtime="20201030 18:32:02.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:02.548" endtime="20201030 18:32:02.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.544" endtime="20201030 18:32:02.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.541" endtime="20201030 18:32:02.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.039" endtime="20201030 18:32:02.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.038" endtime="20201030 18:32:02.573"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.595" endtime="20201030 18:32:02.631"></status>
</kw>
<msg timestamp="20201030 18:32:02.632" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.592" endtime="20201030 18:32:02.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.638" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.634" endtime="20201030 18:32:02.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.640" endtime="20201030 18:32:02.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.584" endtime="20201030 18:32:02.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.579" endtime="20201030 18:32:02.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.664" endtime="20201030 18:32:03.004"></status>
</kw>
<msg timestamp="20201030 18:32:03.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036608556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036820069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.661" endtime="20201030 18:32:03.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036608556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036820069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.013" endtime="20201030 18:32:03.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.031" endtime="20201030 18:32:03.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.653" endtime="20201030 18:32:03.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.648" endtime="20201030 18:32:03.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:03.046" level="INFO">${PHILIP_RES} = [{'diff': 0.0002115129999999965}, {'diff': 0.00021194399999999863}, {'diff': 0.00021192999999999906}, {'diff': 0.0002119029999999994}, {'diff': 0.0002119029999999994}, {'diff': 0.00021193100000000548}...</msg>
<status status="PASS" starttime="20201030 18:32:03.039" endtime="20201030 18:32:03.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:03.057" level="INFO">${RESULT} = {'diff': [0.0002115129999999965, 0.00021194399999999863, 0.00021192999999999906, 0.0002119029999999994, 0.0002119029999999994, 0.00021193100000000548, 0.00021201399999999648, 0.00021192999999999906, 0...</msg>
<status status="PASS" starttime="20201030 18:32:03.049" endtime="20201030 18:32:03.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.068" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:03.066" endtime="20201030 18:32:03.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.073" level="INFO">VALUE: [0.0002115129999999965, 0.00021194399999999863, 0.00021192999999999906, 0.0002119029999999994, 0.0002119029999999994, 0.00021193100000000548, 0.00021201399999999648, 0.00021192999999999906, 0.00021192999999999906, 0.00021195900000000462, 0.00021197199999999777, 0.0002119029999999994, 0.00021202799999999605, 0.00021200000000000385, 0.00021191699999999897, 0.0002119579999999982, 0.0002119449999999981, 0.00021194500000000505, 0.00021191699999999897, 0.0002119029999999994, 0.0002119579999999982, 0.00021197199999999777, 0.00021192999999999906, 0.0002119170000000059, 0.00021194399999999863, 0.00021197299999999725, 0.00021198600000000428, 0.00021195800000000514, 0.00021188899999999983, 0.00021192999999999906, 0.0002119449999999981, 0.0002119999999999969, 0.00021190199999999992, 0.0002119579999999982, 0.00021197199999999777, 0.00021194399999999863, 0.0002119449999999981, 0.0002119579999999982, 0.00021191699999999897, 0.00021197199999999777, 0.00021192999999999906, 0.00021195800000000514, 0.0002119159999999995, 0.00021190199999999992, 0.0002119449999999981, 0.0002119579999999982, 0.0002119579999999982, 0.00021197300000000419, 0.0002119439999999917, 0.0002119170000000059]</msg>
<status status="PASS" starttime="20201030 18:32:03.070" endtime="20201030 18:32:03.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.059" endtime="20201030 18:32:03.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:03.086" endtime="20201030 18:32:03.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.081" endtime="20201030 18:32:03.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.079" endtime="20201030 18:32:03.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.575" endtime="20201030 18:32:03.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.574" endtime="20201030 18:32:03.111"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.133" endtime="20201030 18:32:03.171"></status>
</kw>
<msg timestamp="20201030 18:32:03.172" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.129" endtime="20201030 18:32:03.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.178" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.174" endtime="20201030 18:32:03.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.180" endtime="20201030 18:32:03.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.122" endtime="20201030 18:32:03.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.117" endtime="20201030 18:32:03.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.203" endtime="20201030 18:32:03.544"></status>
</kw>
<msg timestamp="20201030 18:32:03.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037006917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037235153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.200" endtime="20201030 18:32:03.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037006917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037235153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.553" endtime="20201030 18:32:03.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.571" endtime="20201030 18:32:03.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.193" endtime="20201030 18:32:03.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.188" endtime="20201030 18:32:03.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:03.587" level="INFO">${PHILIP_RES} = [{'diff': 0.00022823599999999972}, {'diff': 0.0002282499999999993}, {'diff': 0.00022823599999999972}, {'diff': 0.000228194000000001}, {'diff': 0.00022823599999999972}, {'diff': 0.00022822200000000015}...</msg>
<status status="PASS" starttime="20201030 18:32:03.579" endtime="20201030 18:32:03.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:03.596" level="INFO">${RESULT} = {'diff': [0.00022823599999999972, 0.0002282499999999993, 0.00022823599999999972, 0.000228194000000001, 0.00022823599999999972, 0.00022822200000000015, 0.00022829099999999852, 0.0002282499999999993, 0....</msg>
<status status="PASS" starttime="20201030 18:32:03.589" endtime="20201030 18:32:03.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.606" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:03.604" endtime="20201030 18:32:03.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.612" level="INFO">VALUE: [0.00022823599999999972, 0.0002282499999999993, 0.00022823599999999972, 0.000228194000000001, 0.00022823599999999972, 0.00022822200000000015, 0.00022829099999999852, 0.0002282499999999993, 0.00022825000000000623, 0.00022822200000000015, 0.00022826399999999886, 0.00022827799999999843, 0.00022827799999999843, 0.000228291999999998, 0.0002283049999999981, 0.0002282499999999993, 0.0002282499999999993, 0.00022826399999999886, 0.00022823599999999972, 0.0002281669999999944, 0.0002283060000000045, 0.0002282640000000058, 0.00022827799999999843, 0.00022826399999999886, 0.00022829200000000494, 0.00022830599999999757, 0.00022823599999999972, 0.00022827799999999843, 0.0002282499999999993, 0.00022823599999999972, 0.00022823599999999972, 0.00022826399999999886, 0.00022820800000000058, 0.00022829099999999852, 0.0002282499999999993, 0.00022831999999999714, 0.0002282499999999993, 0.00022826399999999886, 0.0002282499999999993, 0.00022826399999999886, 0.00022822200000000015, 0.0002282499999999993, 0.0002283049999999981, 0.00022823699999999225, 0.00022816600000000187, 0.00022829200000000494, 0.00022827799999999843, 0.0002282640000000058, 0.00022820799999999364, 0.00022829100000000546]</msg>
<status status="PASS" starttime="20201030 18:32:03.609" endtime="20201030 18:32:03.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.598" endtime="20201030 18:32:03.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:03.624" endtime="20201030 18:32:03.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.620" endtime="20201030 18:32:03.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.617" endtime="20201030 18:32:03.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.113" endtime="20201030 18:32:03.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.112" endtime="20201030 18:32:03.649"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.671" endtime="20201030 18:32:03.711"></status>
</kw>
<msg timestamp="20201030 18:32:03.712" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.668" endtime="20201030 18:32:03.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.719" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.714" endtime="20201030 18:32:03.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.721" endtime="20201030 18:32:03.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.660" endtime="20201030 18:32:03.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.655" endtime="20201030 18:32:03.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.746" endtime="20201030 18:32:04.086"></status>
</kw>
<msg timestamp="20201030 18:32:04.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036785167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037029528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.743" endtime="20201030 18:32:04.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036785167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037029528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.096" endtime="20201030 18:32:04.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.115" endtime="20201030 18:32:04.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.735" endtime="20201030 18:32:04.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.731" endtime="20201030 18:32:04.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:04.133" level="INFO">${PHILIP_RES} = [{'diff': 0.0002443609999999985}, {'diff': 0.0002446249999999983}, {'diff': 0.0002445280000000008}, {'diff': 0.0002446389999999979}, {'diff': 0.00024461099999999875}, {'diff': 0.00024461099999999875},...</msg>
<status status="PASS" starttime="20201030 18:32:04.125" endtime="20201030 18:32:04.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:04.144" level="INFO">${RESULT} = {'diff': [0.0002443609999999985, 0.0002446249999999983, 0.0002445280000000008, 0.0002446389999999979, 0.00024461099999999875, 0.00024461099999999875, 0.00024462500000000525, 0.0002445969999999992, 0.0...</msg>
<status status="PASS" starttime="20201030 18:32:04.136" endtime="20201030 18:32:04.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.155" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:04.152" endtime="20201030 18:32:04.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.160" level="INFO">VALUE: [0.0002443609999999985, 0.0002446249999999983, 0.0002445280000000008, 0.0002446389999999979, 0.00024461099999999875, 0.00024461099999999875, 0.00024462500000000525, 0.0002445969999999992, 0.0002445969999999992, 0.00024455599999999994, 0.00024455599999999994, 0.0002445280000000008, 0.00024456900000000004, 0.00024451400000000123, 0.0002445969999999992, 0.00024461099999999875, 0.0002445980000000056, 0.0002445829999999996, 0.0002446119999999982, 0.0002445969999999992, 0.00024455599999999994, 0.0002445839999999991, 0.0002445829999999996, 0.0002445839999999991, 0.00024461099999999875, 0.00024456900000000004, 0.00024462500000000525, 0.00024461099999999875, 0.00024456900000000004, 0.0002445969999999992, 0.00024455599999999994, 0.0002445969999999992, 0.0002445699999999995, 0.0002445839999999991, 0.0002444999999999947, 0.00024462500000000525, 0.0002446249999999983, 0.00024451400000000123, 0.0002446389999999979, 0.00024465299999999746, 0.00024454200000000037, 0.00024456900000000004, 0.00024458299999999267, 0.000244555999999993, 0.00024472200000000277, 0.0002445969999999992, 0.0002445969999999992, 0.00024456900000000004, 0.00024456900000000004, 0.0002445550000000074]</msg>
<status status="PASS" starttime="20201030 18:32:04.157" endtime="20201030 18:32:04.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.146" endtime="20201030 18:32:04.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:04.174" endtime="20201030 18:32:04.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.168" endtime="20201030 18:32:04.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.166" endtime="20201030 18:32:04.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.651" endtime="20201030 18:32:04.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.650" endtime="20201030 18:32:04.199"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.221" endtime="20201030 18:32:04.263"></status>
</kw>
<msg timestamp="20201030 18:32:04.264" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.218" endtime="20201030 18:32:04.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.270" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.266" endtime="20201030 18:32:04.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.273" endtime="20201030 18:32:04.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.210" endtime="20201030 18:32:04.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.205" endtime="20201030 18:32:04.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.296" endtime="20201030 18:32:04.638"></status>
</kw>
<msg timestamp="20201030 18:32:04.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036791667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037052472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.293" endtime="20201030 18:32:04.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036791667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037052472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.647" endtime="20201030 18:32:04.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.664" endtime="20201030 18:32:04.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.286" endtime="20201030 18:32:04.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.281" endtime="20201030 18:32:04.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:04.680" level="INFO">${PHILIP_RES} = [{'diff': 0.00026080500000000284}, {'diff': 0.0002609719999999982}, {'diff': 0.00026095799999999864}, {'diff': 0.0002609860000000047}, {'diff': 0.0002609299999999995}, {'diff': 0.0002609860000000047},...</msg>
<status status="PASS" starttime="20201030 18:32:04.673" endtime="20201030 18:32:04.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:04.690" level="INFO">${RESULT} = {'diff': [0.00026080500000000284, 0.0002609719999999982, 0.00026095799999999864, 0.0002609860000000047, 0.0002609299999999995, 0.0002609860000000047, 0.0002609589999999981, 0.0002609719999999982, 0.00...</msg>
<status status="PASS" starttime="20201030 18:32:04.682" endtime="20201030 18:32:04.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.701" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:04.699" endtime="20201030 18:32:04.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.706" level="INFO">VALUE: [0.00026080500000000284, 0.0002609719999999982, 0.00026095799999999864, 0.0002609860000000047, 0.0002609299999999995, 0.0002609860000000047, 0.0002609589999999981, 0.0002609719999999982, 0.00026094399999999907, 0.00026095900000000505, 0.0002608750000000007, 0.0002610139999999969, 0.00026095799999999864, 0.00026095900000000505, 0.0002609299999999995, 0.0002609719999999982, 0.0002610280000000034, 0.00026095799999999864, 0.0002609870000000042, 0.0002609719999999982, 0.00026098699999999725, 0.0002610000000000043, 0.0002610279999999965, 0.0002610000000000043, 0.00026095799999999864, 0.0002610000000000043, 0.0002609719999999982, 0.0002610139999999969, 0.0002609450000000055, 0.0002609859999999978, 0.0002610000000000043, 0.0002609719999999982, 0.0002609860000000047, 0.0002608750000000007, 0.0002609159999999999, 0.00026095799999999864, 0.00026094499999999854, 0.00026094499999999854, 0.0002609450000000124, 0.00026093099999999203, 0.0002609169999999994, 0.0002609719999999982, 0.0002609860000000047, 0.00026094499999999854, 0.00026101399999999, 0.00026092999999999256, 0.0002609169999999994, 0.0002609719999999982, 0.00026101400000000385, 0.00026095900000000505]</msg>
<status status="PASS" starttime="20201030 18:32:04.703" endtime="20201030 18:32:04.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.692" endtime="20201030 18:32:04.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:04.720" endtime="20201030 18:32:04.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.715" endtime="20201030 18:32:04.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.712" endtime="20201030 18:32:04.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.201" endtime="20201030 18:32:04.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.200" endtime="20201030 18:32:04.745"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.767" endtime="20201030 18:32:04.811"></status>
</kw>
<msg timestamp="20201030 18:32:04.812" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.764" endtime="20201030 18:32:04.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.819" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.815" endtime="20201030 18:32:04.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.821" endtime="20201030 18:32:04.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.756" endtime="20201030 18:32:04.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.751" endtime="20201030 18:32:04.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.844" endtime="20201030 18:32:05.184"></status>
</kw>
<msg timestamp="20201030 18:32:05.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037371431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037649431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.841" endtime="20201030 18:32:05.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037371431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037649431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.193" endtime="20201030 18:32:05.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.210" endtime="20201030 18:32:05.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.834" endtime="20201030 18:32:05.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.829" endtime="20201030 18:32:05.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:05.226" level="INFO">${PHILIP_RES} = [{'diff': 0.00027800000000000047}, {'diff': 0.0002781249999999971}, {'diff': 0.000278096999999998}, {'diff': 0.00027811199999999703}, {'diff': 0.00027813900000000363}, {'diff': 0.00027819400000000244}...</msg>
<status status="PASS" starttime="20201030 18:32:05.219" endtime="20201030 18:32:05.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:05.237" level="INFO">${RESULT} = {'diff': [0.00027800000000000047, 0.0002781249999999971, 0.000278096999999998, 0.00027811199999999703, 0.00027813900000000363, 0.00027819400000000244, 0.0002781110000000045, 0.0002781249999999971, 0.0...</msg>
<status status="PASS" starttime="20201030 18:32:05.228" endtime="20201030 18:32:05.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.248" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:05.245" endtime="20201030 18:32:05.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.253" level="INFO">VALUE: [0.00027800000000000047, 0.0002781249999999971, 0.000278096999999998, 0.00027811199999999703, 0.00027813900000000363, 0.00027819400000000244, 0.0002781110000000045, 0.0002781249999999971, 0.00027811099999999755, 0.00027816599999999636, 0.0002781670000000028, 0.00027815299999999626, 0.00027816599999999636, 0.00027813900000000363, 0.00027813900000000363, 0.00027815299999999626, 0.0002781660000000033, 0.00027813800000000416, 0.000278096999999998, 0.000278096999999998, 0.0002780279999999996, 0.00027818100000000234, 0.00027812500000000406, 0.00027812500000000406, 0.00027813800000000416, 0.00027816699999999583, 0.0002781249999999971, 0.0002780970000000049, 0.00027812500000000406, 0.00027812500000000406, 0.00027811099999999755, 0.00027816699999999583, 0.00027816599999999636, 0.00027811099999999755, 0.0002781530000000032, 0.00027812500000000406, 0.0002781389999999967, 0.00027811099999999755, 0.00027812500000000406, 0.0002780970000000049, 0.000278208000000002, 0.0002791389999999977, 0.00027818100000000234, 0.00027811099999999755, 0.0002780829999999984, 0.0002780420000000061, 0.00027812500000000406, 0.00027805599999999875, 0.00027815200000000373, 0.0002780699999999914]</msg>
<status status="PASS" starttime="20201030 18:32:05.250" endtime="20201030 18:32:05.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.239" endtime="20201030 18:32:05.256"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:05.266" endtime="20201030 18:32:05.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.261" endtime="20201030 18:32:05.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.259" endtime="20201030 18:32:05.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.747" endtime="20201030 18:32:05.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.746" endtime="20201030 18:32:05.291"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.312" endtime="20201030 18:32:05.359"></status>
</kw>
<msg timestamp="20201030 18:32:05.360" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.309" endtime="20201030 18:32:05.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.366" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.362" endtime="20201030 18:32:05.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.368" endtime="20201030 18:32:05.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.302" endtime="20201030 18:32:05.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.297" endtime="20201030 18:32:05.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.392" endtime="20201030 18:32:05.733"></status>
</kw>
<msg timestamp="20201030 18:32:05.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036848681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037144611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.388" endtime="20201030 18:32:05.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036848681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037144611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.742" endtime="20201030 18:32:05.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.760" endtime="20201030 18:32:05.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.381" endtime="20201030 18:32:05.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.376" endtime="20201030 18:32:05.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:05.777" level="INFO">${PHILIP_RES} = [{'diff': 0.0002959299999999998}, {'diff': 0.00029541599999999973}, {'diff': 0.00029538900000000007}, {'diff': 0.00029536100000000093}, {'diff': 0.0002953059999999952}, {'diff': 0.00029534700000000136...</msg>
<status status="PASS" starttime="20201030 18:32:05.769" endtime="20201030 18:32:05.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:05.786" level="INFO">${RESULT} = {'diff': [0.0002959299999999998, 0.00029541599999999973, 0.00029538900000000007, 0.00029536100000000093, 0.0002953059999999952, 0.00029534700000000136, 0.0002953330000000018, 0.00029536100000000093, 0...</msg>
<status status="PASS" starttime="20201030 18:32:05.779" endtime="20201030 18:32:05.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.796" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:05.794" endtime="20201030 18:32:05.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.802" level="INFO">VALUE: [0.0002959299999999998, 0.00029541599999999973, 0.00029538900000000007, 0.00029536100000000093, 0.0002953059999999952, 0.00029534700000000136, 0.0002953330000000018, 0.00029536100000000093, 0.000295360999999994, 0.00029533299999999485, 0.00029536100000000093, 0.00029540299999999964, 0.00029536100000000093, 0.0002953330000000018, 0.0002953750000000005, 0.00029536100000000093, 0.0002953469999999944, 0.0002952910000000031, 0.0002953190000000022, 0.0002953190000000022, 0.00029536100000000093, 0.00029529200000000255, 0.0002953330000000018, 0.00029533299999999485, 0.00029530500000000265, 0.00029540200000000016, 0.00029529099999999614, 0.00029533400000000126, 0.0002953190000000022, 0.00029529099999999614, 0.00029534700000000136, 0.000295360999999994, 0.0002953190000000022, 0.00029534800000000777, 0.0002953750000000005, 0.00029538899999999313, 0.00029538899999999313, 0.00029540299999999964, 0.00029531899999998834, 0.00029540299999999964, 0.00029534700000000136, 0.00029536199999999346, 0.00029538899999999313, 0.0002953750000000005, 0.0002953750000000005, 0.0002953190000000022, 0.0002952910000000031, 0.00029538899999999313, 0.00029538899999999313, 0.0002954160000000067]</msg>
<status status="PASS" starttime="20201030 18:32:05.799" endtime="20201030 18:32:05.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.788" endtime="20201030 18:32:05.805"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:05.814" endtime="20201030 18:32:05.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.810" endtime="20201030 18:32:05.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.808" endtime="20201030 18:32:05.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.293" endtime="20201030 18:32:05.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.292" endtime="20201030 18:32:05.840"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.861" endtime="20201030 18:32:05.911"></status>
</kw>
<msg timestamp="20201030 18:32:05.912" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.858" endtime="20201030 18:32:05.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.919" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.915" endtime="20201030 18:32:05.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.921" endtime="20201030 18:32:05.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.851" endtime="20201030 18:32:05.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.846" endtime="20201030 18:32:05.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.944" endtime="20201030 18:32:06.283"></status>
</kw>
<msg timestamp="20201030 18:32:06.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038438972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038751903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.941" endtime="20201030 18:32:06.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038438972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038751903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.292" endtime="20201030 18:32:06.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.310" endtime="20201030 18:32:06.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.934" endtime="20201030 18:32:06.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.929" endtime="20201030 18:32:06.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:06.325" level="INFO">${PHILIP_RES} = [{'diff': 0.00031293099999999546}, {'diff': 0.00031275000000000053}, {'diff': 0.0003127640000000001}, {'diff': 0.0003127090000000013}, {'diff': 0.00031275000000000053}, {'diff': 0.000312735999999994},...</msg>
<status status="PASS" starttime="20201030 18:32:06.318" endtime="20201030 18:32:06.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:06.335" level="INFO">${RESULT} = {'diff': [0.00031293099999999546, 0.00031275000000000053, 0.0003127640000000001, 0.0003127090000000013, 0.00031275000000000053, 0.000312735999999994, 0.0003127499999999936, 0.0003127220000000014, 0.00...</msg>
<status status="PASS" starttime="20201030 18:32:06.327" endtime="20201030 18:32:06.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.345" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:06.343" endtime="20201030 18:32:06.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.350" level="INFO">VALUE: [0.00031293099999999546, 0.00031275000000000053, 0.0003127640000000001, 0.0003127090000000013, 0.00031275000000000053, 0.000312735999999994, 0.0003127499999999936, 0.0003127220000000014, 0.00031272199999999445, 0.0003127640000000001, 0.00031275000000000053, 0.00031272199999999445, 0.0003127080000000018, 0.00031273600000000096, 0.0003127220000000014, 0.0003127630000000006, 0.0003127079999999949, 0.00031262499999999693, 0.0003127220000000014, 0.00031275000000000053, 0.00031263799999999703, 0.00031268100000000215, 0.0003126110000000043, 0.00031275000000000053, 0.000312653000000003, 0.00031267999999999574, 0.0003127220000000014, 0.0003126800000000027, 0.0003127220000000014, 0.0003127080000000018, 0.0003127360000000079, 0.0003126810000000091, 0.00031275000000000053, 0.0003127360000000079, 0.00031270900000000823, 0.00031263899999998956, 0.00031275000000000053, 0.000312735999999994, 0.0003127079999999949, 0.00031275000000000053, 0.00031276400000000704, 0.00031275000000000053, 0.0003127220000000014, 0.0003127910000000067, 0.0003126950000000017, 0.0003127079999999949, 0.00031277799999999967, 0.00031277799999999967, 0.0003126809999999952, 0.00031270800000000876]</msg>
<status status="PASS" starttime="20201030 18:32:06.347" endtime="20201030 18:32:06.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.336" endtime="20201030 18:32:06.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:06.364" endtime="20201030 18:32:06.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.358" endtime="20201030 18:32:06.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.356" endtime="20201030 18:32:06.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.842" endtime="20201030 18:32:06.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.841" endtime="20201030 18:32:06.390"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.416" endtime="20201030 18:32:06.468"></status>
</kw>
<msg timestamp="20201030 18:32:06.469" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.412" endtime="20201030 18:32:06.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.475" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.471" endtime="20201030 18:32:06.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.477" endtime="20201030 18:32:06.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.404" endtime="20201030 18:32:06.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.397" endtime="20201030 18:32:06.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.501" endtime="20201030 18:32:06.840"></status>
</kw>
<msg timestamp="20201030 18:32:06.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042914819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043245028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.497" endtime="20201030 18:32:06.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042914819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043245028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.849" endtime="20201030 18:32:06.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.867" endtime="20201030 18:32:06.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.490" endtime="20201030 18:32:06.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.485" endtime="20201030 18:32:06.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:06.883" level="INFO">${PHILIP_RES} = [{'diff': 0.000330208999999998}, {'diff': 0.0003300550000000027}, {'diff': 0.0003300840000000013}, {'diff': 0.00032999999999999696}, {'diff': 0.0003299309999999986}, {'diff': 0.0003299859999999974}, {...</msg>
<status status="PASS" starttime="20201030 18:32:06.875" endtime="20201030 18:32:06.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:06.897" level="INFO">${RESULT} = {'diff': [0.000330208999999998, 0.0003300550000000027, 0.0003300840000000013, 0.00032999999999999696, 0.0003299309999999986, 0.0003299859999999974, 0.0003299589999999977, 0.0003300420000000026, 0.0003...</msg>
<status status="PASS" starttime="20201030 18:32:06.885" endtime="20201030 18:32:06.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.908" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:06.906" endtime="20201030 18:32:06.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.913" level="INFO">VALUE: [0.000330208999999998, 0.0003300550000000027, 0.0003300840000000013, 0.00032999999999999696, 0.0003299309999999986, 0.0003299859999999974, 0.0003299589999999977, 0.0003300420000000026, 0.00033002800000000304, 0.00032999999999999696, 0.00033002800000000304, 0.0003300000000000039, 0.0003300970000000014, 0.0003300840000000013, 0.00033012500000000056, 0.00032997200000000476, 0.00033005499999999577, 0.0003300970000000014, 0.0003300970000000014, 0.0003300690000000023, 0.00032998600000000433, 0.0003300550000000027, 0.00033004199999999567, 0.0003300830000000088, 0.0003300690000000023, 0.0003300970000000014, 0.0003300139999999896, 0.0003300830000000088, 0.00033011099999999405, 0.0003300970000000014, 0.00033001400000000347, 0.00032998699999998993, 0.00033005499999999577, 0.0003300970000000014, 0.00033002699999999663, 0.00033005599999999524, 0.0003300829999999949, 0.00033001400000000347, 0.0003300970000000014, 0.0003300690000000023, 0.00033005599999999524, 0.00033007000000000175, 0.0003300830000000088, 0.0003300839999999944, 0.0003300690000000023, 0.0003300839999999944, 0.00033005499999999577, 0.0003300279999999961, 0.0003300970000000014, 0.00033005599999999524]</msg>
<status status="PASS" starttime="20201030 18:32:06.910" endtime="20201030 18:32:06.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.899" endtime="20201030 18:32:06.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:06.926" endtime="20201030 18:32:06.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.921" endtime="20201030 18:32:06.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.919" endtime="20201030 18:32:06.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.393" endtime="20201030 18:32:06.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.391" endtime="20201030 18:32:06.951"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.972" endtime="20201030 18:32:07.025"></status>
</kw>
<msg timestamp="20201030 18:32:07.026" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.969" endtime="20201030 18:32:07.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.032" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.028" endtime="20201030 18:32:07.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.035" endtime="20201030 18:32:07.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.962" endtime="20201030 18:32:07.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.957" endtime="20201030 18:32:07.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.058" endtime="20201030 18:32:07.398"></status>
</kw>
<msg timestamp="20201030 18:32:07.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036721389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037070056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.055" endtime="20201030 18:32:07.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036721389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037070056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.406" endtime="20201030 18:32:07.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.424" endtime="20201030 18:32:07.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.048" endtime="20201030 18:32:07.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.043" endtime="20201030 18:32:07.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:07.440" level="INFO">${PHILIP_RES} = [{'diff': 0.00034866699999999695}, {'diff': 0.0003482220000000022}, {'diff': 0.00034825000000000134}, {'diff': 0.0003482220000000022}, {'diff': 0.00034826399999999397}, {'diff': 0.00034826399999999397...</msg>
<status status="PASS" starttime="20201030 18:32:07.432" endtime="20201030 18:32:07.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:07.451" level="INFO">${RESULT} = {'diff': [0.00034866699999999695, 0.0003482220000000022, 0.00034825000000000134, 0.0003482220000000022, 0.00034826399999999397, 0.00034826399999999397, 0.0003482780000000005, 0.0003482080000000026, 0....</msg>
<status status="PASS" starttime="20201030 18:32:07.442" endtime="20201030 18:32:07.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.465" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:07.462" endtime="20201030 18:32:07.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.471" level="INFO">VALUE: [0.00034866699999999695, 0.0003482220000000022, 0.00034825000000000134, 0.0003482220000000022, 0.00034826399999999397, 0.00034826399999999397, 0.0003482780000000005, 0.0003482080000000026, 0.0003482499999999944, 0.00034816699999999645, 0.0003482220000000022, 0.0003482220000000022, 0.00034825000000000134, 0.00034823600000000177, 0.00034817999999999655, 0.00034819500000000253, 0.00034822300000000167, 0.0003482220000000022, 0.0003482499999999944, 0.00034825000000000134, 0.00034823600000000177, 0.00034823599999999483, 0.00034819400000000306, 0.0003482079999999957, 0.0003482220000000022, 0.00034833399999999876, 0.0003483329999999993, 0.0003483059999999996, 0.0003483609999999984, 0.0003482500000000083, 0.00034829100000000057, 0.0003482499999999944, 0.0003483189999999997, 0.0003483189999999997, 0.00034829200000000005, 0.00034834699999999885, 0.00034829200000000005, 0.0003483330000000062, 0.00034832000000001306, 0.0003482780000000074, 0.0003483199999999992, 0.00034822199999999526, 0.00034822199999999526, 0.00034829200000000005, 0.0003482499999999944, 0.0003482500000000083, 0.0003482080000000026, 0.0003482499999999944, 0.00034822199999999526, 0.0003482499999999944]</msg>
<status status="PASS" starttime="20201030 18:32:07.467" endtime="20201030 18:32:07.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.453" endtime="20201030 18:32:07.474"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:07.483" endtime="20201030 18:32:07.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.479" endtime="20201030 18:32:07.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.476" endtime="20201030 18:32:07.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.953" endtime="20201030 18:32:07.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.951" endtime="20201030 18:32:07.508"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.530" endtime="20201030 18:32:07.585"></status>
</kw>
<msg timestamp="20201030 18:32:07.586" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.527" endtime="20201030 18:32:07.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.593" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.589" endtime="20201030 18:32:07.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.595" endtime="20201030 18:32:07.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.520" endtime="20201030 18:32:07.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.514" endtime="20201030 18:32:07.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.618" endtime="20201030 18:32:07.960"></status>
</kw>
<msg timestamp="20201030 18:32:07.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037054694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037421167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.615" endtime="20201030 18:32:07.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037054694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037421167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.969" endtime="20201030 18:32:07.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.986" endtime="20201030 18:32:07.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.608" endtime="20201030 18:32:07.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.603" endtime="20201030 18:32:07.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:08.002" level="INFO">${PHILIP_RES} = [{'diff': 0.0003664729999999991}, {'diff': 0.00036649999999999877}, {'diff': 0.00036651399999999834}, {'diff': 0.0003664859999999992}, {'diff': 0.0003664859999999992}, {'diff': 0.0003664170000000008},...</msg>
<status status="PASS" starttime="20201030 18:32:07.995" endtime="20201030 18:32:08.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:08.011" level="INFO">${RESULT} = {'diff': [0.0003664729999999991, 0.00036649999999999877, 0.00036651399999999834, 0.0003664859999999992, 0.0003664859999999992, 0.0003664170000000008, 0.000366540999999998, 0.00036651399999999834, 0.00...</msg>
<status status="PASS" starttime="20201030 18:32:08.004" endtime="20201030 18:32:08.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.022" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:08.020" endtime="20201030 18:32:08.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.027" level="INFO">VALUE: [0.0003664729999999991, 0.00036649999999999877, 0.00036651399999999834, 0.0003664859999999992, 0.0003664859999999992, 0.0003664170000000008, 0.000366540999999998, 0.00036651399999999834, 0.0003664859999999992, 0.0003664440000000005, 0.0003665279999999979, 0.00036661099999999586, 0.00036654100000000495, 0.0003665420000000044, 0.0003665420000000044, 0.0003665279999999979, 0.0003665279999999979, 0.00036647199999999963, 0.000366540999999998, 0.000366540999999998, 0.0003665419999999975, 0.0003665279999999979, 0.0003665970000000032, 0.0003665549999999976, 0.00036662500000000237, 0.0003664859999999992, 0.0003665690000000041, 0.0003665420000000044, 0.0003665000000000057, 0.0003665419999999975, 0.00036656899999999715, 0.0003665410000000119, 0.00036649999999999183, 0.00036649999999999183, 0.00036641700000000776, 0.00036651299999999887, 0.0003665000000000057, 0.0003664859999999992, 0.00036647200000000657, 0.00036649999999999183, 0.0003664450000000069, 0.00036649999999999183, 0.0003664859999999992, 0.00036649999999999183, 0.0003664719999999927, 0.00036649999999999183, 0.00036651300000001275, 0.00036645800000000006, 0.0003664310000000004, 0.00036652799999999097]</msg>
<status status="PASS" starttime="20201030 18:32:08.024" endtime="20201030 18:32:08.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.013" endtime="20201030 18:32:08.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:08.040" endtime="20201030 18:32:08.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.035" endtime="20201030 18:32:08.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.033" endtime="20201030 18:32:08.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.510" endtime="20201030 18:32:08.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.509" endtime="20201030 18:32:08.065"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.087" endtime="20201030 18:32:08.145"></status>
</kw>
<msg timestamp="20201030 18:32:08.147" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.083" endtime="20201030 18:32:08.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.153" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.149" endtime="20201030 18:32:08.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.155" endtime="20201030 18:32:08.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.076" endtime="20201030 18:32:08.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.071" endtime="20201030 18:32:08.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.178" endtime="20201030 18:32:08.518"></status>
</kw>
<msg timestamp="20201030 18:32:08.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038436875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038821611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.175" endtime="20201030 18:32:08.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038436875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038821611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.526" endtime="20201030 18:32:08.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.544" endtime="20201030 18:32:08.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.168" endtime="20201030 18:32:08.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.163" endtime="20201030 18:32:08.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:08.560" level="INFO">${PHILIP_RES} = [{'diff': 0.00038473599999999664}, {'diff': 0.00038486100000000023}, {'diff': 0.0003848330000000011}, {'diff': 0.0003848330000000011}, {'diff': 0.00038484700000000066}, {'diff': 0.00038484700000000066...</msg>
<status status="PASS" starttime="20201030 18:32:08.552" endtime="20201030 18:32:08.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:08.569" level="INFO">${RESULT} = {'diff': [0.00038473599999999664, 0.00038486100000000023, 0.0003848330000000011, 0.0003848330000000011, 0.00038484700000000066, 0.00038484700000000066, 0.0003848060000000014, 0.0003847499999999962, 0....</msg>
<status status="PASS" starttime="20201030 18:32:08.562" endtime="20201030 18:32:08.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.579" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:08.577" endtime="20201030 18:32:08.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.584" level="INFO">VALUE: [0.00038473599999999664, 0.00038486100000000023, 0.0003848330000000011, 0.0003848330000000011, 0.00038484700000000066, 0.00038484700000000066, 0.0003848060000000014, 0.0003847499999999962, 0.0003848330000000011, 0.0003849309999999981, 0.00038484700000000066, 0.00038484700000000066, 0.00038484700000000066, 0.00038488899999999937, 0.00038495799999999775, 0.0003849719999999973, 0.0003848749999999998, 0.00038491599999999904, 0.0003848749999999998, 0.000384916000000006, 0.0003849439999999982, 0.00038490199999999947, 0.0003848749999999998, 0.00038488899999999937, 0.00038491599999999904, 0.00038488899999999937, 0.00038488899999999937, 0.00038487499999999286, 0.000384902999999992, 0.00038491599999999904, 0.00038488899999999937, 0.0003848469999999937, 0.00038491599999999904, 0.0003849169999999985, 0.00038483400000000056, 0.00038487500000000674, 0.00038494499999999765, 0.0003849030000000059, 0.00038488899999999937, 0.0003849169999999985, 0.00038483400000000056, 0.00038482000000000793, 0.0003849030000000059, 0.00038493099999999114, 0.00038486100000000023, 0.0003849030000000059, 0.0003848470000000076, 0.0003848189999999946, 0.0003849020000000064, 0.0003849030000000059]</msg>
<status status="PASS" starttime="20201030 18:32:08.582" endtime="20201030 18:32:08.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.571" endtime="20201030 18:32:08.588"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:08.599" endtime="20201030 18:32:08.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.593" endtime="20201030 18:32:08.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.590" endtime="20201030 18:32:08.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.067" endtime="20201030 18:32:08.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.066" endtime="20201030 18:32:08.624"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.646" endtime="20201030 18:32:08.705"></status>
</kw>
<msg timestamp="20201030 18:32:08.706" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.643" endtime="20201030 18:32:08.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.713" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.709" endtime="20201030 18:32:08.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.715" endtime="20201030 18:32:08.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.635" endtime="20201030 18:32:08.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.630" endtime="20201030 18:32:08.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.738" endtime="20201030 18:32:09.078"></status>
</kw>
<msg timestamp="20201030 18:32:09.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037158319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037562625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.735" endtime="20201030 18:32:09.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037158319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037562625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.087" endtime="20201030 18:32:09.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.113" endtime="20201030 18:32:09.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.728" endtime="20201030 18:32:09.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.723" endtime="20201030 18:32:09.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:09.131" level="INFO">${PHILIP_RES} = [{'diff': 0.0004043060000000001}, {'diff': 0.00040306899999999896}, {'diff': 0.00040311099999999767}, {'diff': 0.0004031670000000029}, {'diff': 0.0004030969999999981}, {'diff': 0.0004031670000000029},...</msg>
<status status="PASS" starttime="20201030 18:32:09.123" endtime="20201030 18:32:09.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:09.143" level="INFO">${RESULT} = {'diff': [0.0004043060000000001, 0.00040306899999999896, 0.00040311099999999767, 0.0004031670000000029, 0.0004030969999999981, 0.0004031670000000029, 0.0004031389999999968, 0.00040316699999999595, 0.0...</msg>
<status status="PASS" starttime="20201030 18:32:09.134" endtime="20201030 18:32:09.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.154" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:09.152" endtime="20201030 18:32:09.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.159" level="INFO">VALUE: [0.0004043060000000001, 0.00040306899999999896, 0.00040311099999999767, 0.0004031670000000029, 0.0004030969999999981, 0.0004031670000000029, 0.0004031389999999968, 0.00040316699999999595, 0.00040315200000000384, 0.0004031670000000029, 0.00040318100000000245, 0.0004031250000000042, 0.00040312499999999724, 0.0004030549999999994, 0.0004031670000000029, 0.0004032499999999939, 0.0004031670000000029, 0.0004031530000000033, 0.00040312499999999724, 0.0004032090000000016, 0.00040318100000000245, 0.00040312499999999724, 0.00040318100000000245, 0.0004031389999999968, 0.0004030969999999981, 0.0004031670000000098, 0.0004031670000000098, 0.000403083999999998, 0.00040311099999999767, 0.00040309700000000503, 0.0004031389999999968, 0.0004031250000000042, 0.00040315299999998944, 0.00040309700000000503, 0.00040311099999999767, 0.0004031530000000033, 0.00040311099999999767, 0.0004031530000000033, 0.00040311099999999767, 0.0004032080000000021, 0.00040327699999999356, 0.0004031949999999951, 0.000403180000000003, 0.00040323600000000126, 0.000403180000000003, 0.0004031939999999956, 0.0004031249999999903, 0.00040315200000000384, 0.0004031389999999968, 0.00040316599999999647]</msg>
<status status="PASS" starttime="20201030 18:32:09.156" endtime="20201030 18:32:09.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.145" endtime="20201030 18:32:09.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:09.172" endtime="20201030 18:32:09.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.167" endtime="20201030 18:32:09.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.165" endtime="20201030 18:32:09.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.626" endtime="20201030 18:32:09.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.625" endtime="20201030 18:32:09.197"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.219" endtime="20201030 18:32:09.280"></status>
</kw>
<msg timestamp="20201030 18:32:09.281" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.215" endtime="20201030 18:32:09.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.288" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.284" endtime="20201030 18:32:09.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.290" endtime="20201030 18:32:09.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.208" endtime="20201030 18:32:09.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.203" endtime="20201030 18:32:09.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.314" endtime="20201030 18:32:09.654"></status>
</kw>
<msg timestamp="20201030 18:32:09.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036926542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037349917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.310" endtime="20201030 18:32:09.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036926542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037349917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.663" endtime="20201030 18:32:09.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.681" endtime="20201030 18:32:09.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.303" endtime="20201030 18:32:09.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.298" endtime="20201030 18:32:09.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:09.697" level="INFO">${PHILIP_RES} = [{'diff': 0.0004233750000000036}, {'diff': 0.0004222629999999991}, {'diff': 0.0004222640000000055}, {'diff': 0.0004223059999999973}, {'diff': 0.0004222089999999998}, {'diff': 0.00042233299999999696}, ...</msg>
<status status="PASS" starttime="20201030 18:32:09.689" endtime="20201030 18:32:09.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:09.708" level="INFO">${RESULT} = {'diff': [0.0004233750000000036, 0.0004222629999999991, 0.0004222640000000055, 0.0004223059999999973, 0.0004222089999999998, 0.00042233299999999696, 0.000422249999999999, 0.0004222640000000055, 0.0004...</msg>
<status status="PASS" starttime="20201030 18:32:09.699" endtime="20201030 18:32:09.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.718" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:09.716" endtime="20201030 18:32:09.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.723" level="INFO">VALUE: [0.0004233750000000036, 0.0004222629999999991, 0.0004222640000000055, 0.0004223059999999973, 0.0004222089999999998, 0.00042233299999999696, 0.000422249999999999, 0.0004222640000000055, 0.0004222369999999989, 0.000422249999999999, 0.0004223049999999978, 0.0004222640000000055, 0.0004223059999999973, 0.00042230500000000476, 0.0004222919999999977, 0.0004222770000000056, 0.0004222780000000051, 0.00042230600000000423, 0.0004223189999999974, 0.0004222640000000055, 0.000422249999999999, 0.0004222639999999986, 0.00042230500000000476, 0.0004222639999999986, 0.0004224169999999944, 0.00042229200000000466, 0.00042226399999999165, 0.00042233299999999696, 0.00042231899999999045, 0.00042229200000000466, 0.0004224169999999944, 0.00042241700000000826, 0.00042234800000000294, 0.00042233299999999696, 0.0004224169999999944, 0.00042238899999999524, 0.00042240300000000175, 0.0004223890000000091, 0.00042238899999999524, 0.00042238800000000964, 0.00042245800000000056, 0.00042240300000000175, 0.00042240300000000175, 0.00042240300000000175, 0.0004224300000000014, 0.0004223750000000026, 0.00042238800000000964, 0.00042233299999999696, 0.0004223750000000026, 0.00042240300000000175]</msg>
<status status="PASS" starttime="20201030 18:32:09.721" endtime="20201030 18:32:09.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.710" endtime="20201030 18:32:09.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:09.736" endtime="20201030 18:32:09.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.732" endtime="20201030 18:32:09.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.729" endtime="20201030 18:32:09.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.199" endtime="20201030 18:32:09.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.198" endtime="20201030 18:32:09.761"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.783" endtime="20201030 18:32:09.846"></status>
</kw>
<msg timestamp="20201030 18:32:09.847" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.780" endtime="20201030 18:32:09.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.854" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.850" endtime="20201030 18:32:09.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.856" endtime="20201030 18:32:09.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.772" endtime="20201030 18:32:09.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.767" endtime="20201030 18:32:09.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.880" endtime="20201030 18:32:10.223"></status>
</kw>
<msg timestamp="20201030 18:32:10.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036770819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037212222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.876" endtime="20201030 18:32:10.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036770819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037212222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.232" endtime="20201030 18:32:10.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.250" endtime="20201030 18:32:10.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.869" endtime="20201030 18:32:10.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.864" endtime="20201030 18:32:10.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:10.265" level="INFO">${PHILIP_RES} = [{'diff': 0.00044140299999999993}, {'diff': 0.00044173599999999813}, {'diff': 0.0004418060000000029}, {'diff': 0.0004417770000000043}, {'diff': 0.00044176399999999727}, {'diff': 0.00044173599999999813...</msg>
<status status="PASS" starttime="20201030 18:32:10.258" endtime="20201030 18:32:10.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:10.274" level="INFO">${RESULT} = {'diff': [0.00044140299999999993, 0.00044173599999999813, 0.0004418060000000029, 0.0004417770000000043, 0.00044176399999999727, 0.00044173599999999813, 0.00044172199999999856, 0.0004416390000000006, 0...</msg>
<status status="PASS" starttime="20201030 18:32:10.267" endtime="20201030 18:32:10.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.285" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:10.283" endtime="20201030 18:32:10.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.290" level="INFO">VALUE: [0.00044140299999999993, 0.00044173599999999813, 0.0004418060000000029, 0.0004417770000000043, 0.00044176399999999727, 0.00044173599999999813, 0.00044172199999999856, 0.0004416390000000006, 0.0004416939999999994, 0.0004416110000000015, 0.0004416949999999989, 0.0004417090000000054, 0.0004416530000000002, 0.00044162500000000104, 0.00044166699999999975, 0.0004416530000000002, 0.00044169500000000583, 0.00044176399999999727, 0.0004417499999999977, 0.0004416949999999989, 0.00044172199999999856, 0.00044173599999999813, 0.00044166699999999975, 0.0004416110000000084, 0.0004416530000000002, 0.00044162499999998717, 0.0004415980000000014, 0.0004415970000000019, 0.00044151400000000396, 0.00044157000000000224, 0.0004415980000000014, 0.0004416379999999942, 0.00044167999999999985, 0.0004416660000000072, 0.0004416670000000067, 0.00044169500000000583, 0.0004415980000000014, 0.0004415829999999954, 0.000441707999999999, 0.00044162500000000104, 0.00044166599999999334, 0.0004417219999999916, 0.00044163900000000755, 0.0004415970000000019, 0.0004416530000000002, 0.0004415829999999954, 0.0004416520000000007, 0.00044167999999999985, 0.0004415970000000019, 0.00044161099999999454]</msg>
<status status="PASS" starttime="20201030 18:32:10.287" endtime="20201030 18:32:10.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.276" endtime="20201030 18:32:10.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:10.303" endtime="20201030 18:32:10.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.299" endtime="20201030 18:32:10.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.296" endtime="20201030 18:32:10.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.763" endtime="20201030 18:32:10.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.762" endtime="20201030 18:32:10.328"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.350" endtime="20201030 18:32:10.418"></status>
</kw>
<msg timestamp="20201030 18:32:10.419" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.347" endtime="20201030 18:32:10.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.425" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.421" endtime="20201030 18:32:10.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.427" endtime="20201030 18:32:10.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.340" endtime="20201030 18:32:10.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.334" endtime="20201030 18:32:10.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.451" endtime="20201030 18:32:10.803"></status>
</kw>
<msg timestamp="20201030 18:32:10.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038623389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039084111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.447" endtime="20201030 18:32:10.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038623389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039084111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.812" endtime="20201030 18:32:10.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.830" endtime="20201030 18:32:10.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.440" endtime="20201030 18:32:10.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.435" endtime="20201030 18:32:10.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:10.846" level="INFO">${PHILIP_RES} = [{'diff': 0.00046072199999999675}, {'diff': 0.000461083000000001}, {'diff': 0.00046111100000000016}, {'diff': 0.00046109800000000006}, {'diff': 0.00046101400000000264}, {'diff': 0.0004610420000000018}...</msg>
<status status="PASS" starttime="20201030 18:32:10.838" endtime="20201030 18:32:10.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:10.855" level="INFO">${RESULT} = {'diff': [0.00046072199999999675, 0.000461083000000001, 0.00046111100000000016, 0.00046109800000000006, 0.00046101400000000264, 0.0004610420000000018, 0.0004610420000000018, 0.0004610829999999941, 0.0...</msg>
<status status="PASS" starttime="20201030 18:32:10.848" endtime="20201030 18:32:10.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.865" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:10.863" endtime="20201030 18:32:10.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.871" level="INFO">VALUE: [0.00046072199999999675, 0.000461083000000001, 0.00046111100000000016, 0.00046109800000000006, 0.00046101400000000264, 0.0004610420000000018, 0.0004610420000000018, 0.0004610829999999941, 0.00046111100000000016, 0.0004610410000000023, 0.00046105600000000135, 0.0004610829999999941, 0.0004610279999999953, 0.00046101400000000264, 0.0004609860000000035, 0.00046111100000000016, 0.00046106900000000145, 0.0004610280000000022, 0.0004610840000000005, 0.0004610279999999953, 0.0004609730000000034, 0.00046090199999999915, 0.00046097199999999006, 0.00046093099999999776, 0.0004609440000000048, 0.0004609579999999974, 0.00046093099999999776, 0.00046091700000000513, 0.0004609579999999974, 0.0004609589999999969, 0.00046098599999999657, 0.00046094500000000427, 0.0004609439999999909, 0.00046101299999999623, 0.0004610139999999957, 0.0004610280000000022, 0.0004609870000000099, 0.00046098599999999657, 0.00046091700000000513, 0.00046093099999999776, 0.00046097200000000393, 0.00046093100000001164, 0.0004610140000000096, 0.0004609579999999974, 0.0004610689999999945, 0.0004610000000000031, 0.0004610280000000022, 0.00046097200000000393, 0.0004609440000000048, 0.00046098599999999657]</msg>
<status status="PASS" starttime="20201030 18:32:10.868" endtime="20201030 18:32:10.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.857" endtime="20201030 18:32:10.874"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:10.885" endtime="20201030 18:32:10.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.880" endtime="20201030 18:32:10.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.877" endtime="20201030 18:32:10.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.330" endtime="20201030 18:32:10.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.329" endtime="20201030 18:32:10.911"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.935" endtime="20201030 18:32:11.004"></status>
</kw>
<msg timestamp="20201030 18:32:11.005" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.931" endtime="20201030 18:32:11.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.012" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.007" endtime="20201030 18:32:11.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.014" endtime="20201030 18:32:11.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.923" endtime="20201030 18:32:11.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.918" endtime="20201030 18:32:11.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.038" endtime="20201030 18:32:11.399"></status>
</kw>
<msg timestamp="20201030 18:32:11.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039462028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039941986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.034" endtime="20201030 18:32:11.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039462028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039941986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.408" endtime="20201030 18:32:11.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.425" endtime="20201030 18:32:11.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.027" endtime="20201030 18:32:11.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.022" endtime="20201030 18:32:11.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:11.441" level="INFO">${PHILIP_RES} = [{'diff': 0.0004799579999999956}, {'diff': 0.00048027800000000065}, {'diff': 0.0004802640000000011}, {'diff': 0.0004802500000000015}, {'diff': 0.00048026399999999414}, {'diff': 0.0004802920000000002},...</msg>
<status status="PASS" starttime="20201030 18:32:11.434" endtime="20201030 18:32:11.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:11.452" level="INFO">${RESULT} = {'diff': [0.0004799579999999956, 0.00048027800000000065, 0.0004802640000000011, 0.0004802500000000015, 0.00048026399999999414, 0.0004802920000000002, 0.0004803059999999998, 0.0004803750000000051, 0.00...</msg>
<status status="PASS" starttime="20201030 18:32:11.443" endtime="20201030 18:32:11.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.463" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:11.460" endtime="20201030 18:32:11.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.468" level="INFO">VALUE: [0.0004799579999999956, 0.00048027800000000065, 0.0004802640000000011, 0.0004802500000000015, 0.00048026399999999414, 0.0004802920000000002, 0.0004803059999999998, 0.0004803750000000051, 0.0004802920000000002, 0.00048033299999999945, 0.00048033299999999945, 0.00048026399999999414, 0.00048027800000000065, 0.000480235999999995, 0.0004802369999999945, 0.00048023600000000194, 0.000480346999999999, 0.00048033399999999893, 0.0004803189999999999, 0.00048031899999999295, 0.00048034700000000596, 0.00048026399999999414, 0.0004802910000000077, 0.0004803190000000068, 0.0004803059999999998, 0.0004803050000000003, 0.00048027800000000065, 0.0004803199999999924, 0.00048034800000000544, 0.00048026399999999414, 0.0004803199999999924, 0.0004803199999999924, 0.00048033399999999893, 0.0004803749999999912, 0.00048026399999999414, 0.00048034700000000596, 0.00048033299999999945, 0.0004804309999999895, 0.0004803050000000003, 0.0004803749999999912, 0.00048033299999999945, 0.00048038899999999773, 0.0004804159999999974, 0.0004804590000000025, 0.00048031899999999295, 0.0004803199999999924, 0.00048033299999999945, 0.00048031899999999295, 0.00048027800000000065, 0.0004803469999999921]</msg>
<status status="PASS" starttime="20201030 18:32:11.465" endtime="20201030 18:32:11.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.454" endtime="20201030 18:32:11.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:11.481" endtime="20201030 18:32:11.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.476" endtime="20201030 18:32:11.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.474" endtime="20201030 18:32:11.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.913" endtime="20201030 18:32:11.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.912" endtime="20201030 18:32:11.506"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.528" endtime="20201030 18:32:11.600"></status>
</kw>
<msg timestamp="20201030 18:32:11.601" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.525" endtime="20201030 18:32:11.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.607" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.603" endtime="20201030 18:32:11.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.610" endtime="20201030 18:32:11.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.518" endtime="20201030 18:32:11.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.512" endtime="20201030 18:32:11.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.633" endtime="20201030 18:32:11.988"></status>
</kw>
<msg timestamp="20201030 18:32:11.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037860125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038360222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.630" endtime="20201030 18:32:11.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037860125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038360222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.997" endtime="20201030 18:32:12.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.015" endtime="20201030 18:32:12.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.622" endtime="20201030 18:32:12.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.618" endtime="20201030 18:32:12.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:12.031" level="INFO">${PHILIP_RES} = [{'diff': 0.000500096999999998}, {'diff': 0.0005005979999999979}, {'diff': 0.000500610999999998}, {'diff': 0.0005006810000000028}, {'diff': 0.0005006810000000028}, {'diff': 0.000500819999999999}, {'di...</msg>
<status status="PASS" starttime="20201030 18:32:12.023" endtime="20201030 18:32:12.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:12.042" level="INFO">${RESULT} = {'diff': [0.000500096999999998, 0.0005005979999999979, 0.000500610999999998, 0.0005006810000000028, 0.0005006810000000028, 0.000500819999999999, 0.0005008339999999986, 0.0005007499999999943, 0.0005007...</msg>
<status status="PASS" starttime="20201030 18:32:12.033" endtime="20201030 18:32:12.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.053" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:12.050" endtime="20201030 18:32:12.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.058" level="INFO">VALUE: [0.000500096999999998, 0.0005005979999999979, 0.000500610999999998, 0.0005006810000000028, 0.0005006810000000028, 0.000500819999999999, 0.0005008339999999986, 0.0005007499999999943, 0.0005007360000000016, 0.0005006530000000037, 0.0005007500000000012, 0.0005006390000000041, 0.0005005970000000054, 0.0005006809999999959, 0.000500611000000005, 0.0005006529999999967, 0.0005006669999999963, 0.000500610999999998, 0.0005006530000000037, 0.0005006659999999968, 0.0005006800000000033, 0.0005006119999999975, 0.0005006659999999968, 0.0005007219999999951, 0.0005006659999999968, 0.000500610999999998, 0.0005005829999999989, 0.0005006530000000037, 0.0005005419999999927, 0.0005005000000000009, 0.0005005549999999998, 0.0005005270000000006, 0.0005005140000000075, 0.0005004720000000018, 0.0005004860000000083, 0.0005005139999999936, 0.0005005139999999936, 0.0005005139999999936, 0.0005005129999999941, 0.0005005140000000075, 0.0005005690000000063, 0.0005005420000000066, 0.0005005270000000006, 0.0005005409999999932, 0.0005005270000000006, 0.0005005549999999998, 0.0005005829999999989, 0.0005005139999999936, 0.0005006530000000037, 0.0005005409999999932]</msg>
<status status="PASS" starttime="20201030 18:32:12.055" endtime="20201030 18:32:12.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.044" endtime="20201030 18:32:12.061"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:12.071" endtime="20201030 18:32:12.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.066" endtime="20201030 18:32:12.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.064" endtime="20201030 18:32:12.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.508" endtime="20201030 18:32:12.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.507" endtime="20201030 18:32:12.096"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.118" endtime="20201030 18:32:12.191"></status>
</kw>
<msg timestamp="20201030 18:32:12.193" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.115" endtime="20201030 18:32:12.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.199" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.195" endtime="20201030 18:32:12.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.201" endtime="20201030 18:32:12.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.107" endtime="20201030 18:32:12.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.102" endtime="20201030 18:32:12.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.225" endtime="20201030 18:32:12.594"></status>
</kw>
<msg timestamp="20201030 18:32:12.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037530444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038050639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.221" endtime="20201030 18:32:12.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037530444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038050639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.603" endtime="20201030 18:32:12.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.620" endtime="20201030 18:32:12.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.214" endtime="20201030 18:32:12.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.209" endtime="20201030 18:32:12.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:12.637" level="INFO">${PHILIP_RES} = [{'diff': 0.0005201949999999941}, {'diff': 0.0005209019999999967}, {'diff': 0.0005209160000000032}, {'diff': 0.0005208469999999979}, {'diff': 0.0005207500000000004}, {'diff': 0.0005207220000000012}, {...</msg>
<status status="PASS" starttime="20201030 18:32:12.629" endtime="20201030 18:32:12.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:12.646" level="INFO">${RESULT} = {'diff': [0.0005201949999999941, 0.0005209019999999967, 0.0005209160000000032, 0.0005208469999999979, 0.0005207500000000004, 0.0005207220000000012, 0.0005208329999999983, 0.0005208889999999966, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:32:12.639" endtime="20201030 18:32:12.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.656" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:12.654" endtime="20201030 18:32:12.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.662" level="INFO">VALUE: [0.0005201949999999941, 0.0005209019999999967, 0.0005209160000000032, 0.0005208469999999979, 0.0005207500000000004, 0.0005207220000000012, 0.0005208329999999983, 0.0005208889999999966, 0.0005208469999999979, 0.0005207500000000004, 0.000520764, 0.0005208059999999987, 0.0005208199999999982, 0.0005207779999999995, 0.0005208049999999992, 0.0005207779999999995, 0.0005207220000000012, 0.0005207779999999995, 0.0005207500000000004, 0.0005207080000000086, 0.0005207909999999927, 0.0005207629999999935, 0.0005207089999999942, 0.0005207779999999995, 0.000520666000000003, 0.0005207500000000004, 0.000520763999999993, 0.0005206809999999951, 0.0005206940000000021, 0.0005207089999999942, 0.0005206529999999959, 0.0005206940000000021, 0.0005206940000000021, 0.0005207090000000081, 0.0005207359999999939, 0.0005208189999999918, 0.0005207360000000077, 0.0005207360000000077, 0.0005206529999999959, 0.0005206379999999899, 0.000520763999999993, 0.0005207220000000012, 0.0005207359999999939, 0.0005208059999999987, 0.0005207779999999995, 0.0005206250000000107, 0.0005206940000000021, 0.0005206669999999886, 0.000520763999999993, 0.0005207220000000012]</msg>
<status status="PASS" starttime="20201030 18:32:12.659" endtime="20201030 18:32:12.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.648" endtime="20201030 18:32:12.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:12.681" endtime="20201030 18:32:12.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.676" endtime="20201030 18:32:12.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.674" endtime="20201030 18:32:12.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.098" endtime="20201030 18:32:12.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.097" endtime="20201030 18:32:12.706"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.728" endtime="20201030 18:32:12.805"></status>
</kw>
<msg timestamp="20201030 18:32:12.806" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.724" endtime="20201030 18:32:12.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.812" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.808" endtime="20201030 18:32:12.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.815" endtime="20201030 18:32:12.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.717" endtime="20201030 18:32:12.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.712" endtime="20201030 18:32:12.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.838" endtime="20201030 18:32:13.190"></status>
</kw>
<msg timestamp="20201030 18:32:13.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038819792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039361667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.835" endtime="20201030 18:32:13.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038819792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039361667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.199" endtime="20201030 18:32:13.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.216" endtime="20201030 18:32:13.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.828" endtime="20201030 18:32:13.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.823" endtime="20201030 18:32:13.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:13.233" level="INFO">${PHILIP_RES} = [{'diff': 0.0005418750000000042}, {'diff': 0.0005411659999999957}, {'diff': 0.0005411249999999965}, {'diff': 0.0005411110000000038}, {'diff': 0.0005411250000000034}, {'diff': 0.0005411109999999969}, {...</msg>
<status status="PASS" starttime="20201030 18:32:13.225" endtime="20201030 18:32:13.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:13.242" level="INFO">${RESULT} = {'diff': [0.0005418750000000042, 0.0005411659999999957, 0.0005411249999999965, 0.0005411110000000038, 0.0005411250000000034, 0.0005411109999999969, 0.0005410419999999985, 0.0005411520000000031, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:32:13.235" endtime="20201030 18:32:13.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.253" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:13.250" endtime="20201030 18:32:13.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.258" level="INFO">VALUE: [0.0005418750000000042, 0.0005411659999999957, 0.0005411249999999965, 0.0005411110000000038, 0.0005411250000000034, 0.0005411109999999969, 0.0005410419999999985, 0.0005411520000000031, 0.0005411530000000025, 0.0005410420000000055, 0.000541040999999999, 0.0005410829999999978, 0.0005411669999999952, 0.0005410970000000043, 0.000541138999999996, 0.0005410699999999977, 0.0005411800000000022, 0.0005411530000000025, 0.0005411670000000091, 0.000541138999999996, 0.0005411810000000017, 0.000541138999999996, 0.000541221999999994, 0.0005411660000000096, 0.0005411669999999952, 0.0005410700000000046, 0.0005412229999999935, 0.0005412220000000079, 0.0005410409999999921, 0.0005410970000000043, 0.0005410839999999972, 0.0005410970000000043, 0.0005411660000000096, 0.0005411799999999883, 0.0005411249999999895, 0.0005410700000000046, 0.0005411530000000025, 0.0005410839999999972, 0.0005411390000000099, 0.0005410980000000037, 0.0005411390000000099, 0.0005411249999999895, 0.0005412360000000005, 0.0005412779999999923, 0.000541250000000007, 0.0005412090000000008, 0.0005412499999999931, 0.0005411670000000091, 0.0005411519999999892, 0.0005411530000000025]</msg>
<status status="PASS" starttime="20201030 18:32:13.255" endtime="20201030 18:32:13.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.244" endtime="20201030 18:32:13.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:13.272" endtime="20201030 18:32:13.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.266" endtime="20201030 18:32:13.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.264" endtime="20201030 18:32:13.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.708" endtime="20201030 18:32:13.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.707" endtime="20201030 18:32:13.297"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.320" endtime="20201030 18:32:13.398"></status>
</kw>
<msg timestamp="20201030 18:32:13.399" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.316" endtime="20201030 18:32:13.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.405" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.401" endtime="20201030 18:32:13.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.407" endtime="20201030 18:32:13.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.309" endtime="20201030 18:32:13.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.304" endtime="20201030 18:32:13.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.431" endtime="20201030 18:32:13.784"></status>
</kw>
<msg timestamp="20201030 18:32:13.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037516431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038077792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.428" endtime="20201030 18:32:13.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037516431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038077792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.793" endtime="20201030 18:32:13.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.815" endtime="20201030 18:32:13.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.420" endtime="20201030 18:32:13.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.416" endtime="20201030 18:32:13.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:13.833" level="INFO">${PHILIP_RES} = [{'diff': 0.0005613609999999963}, {'diff': 0.0005615420000000051}, {'diff': 0.0005614720000000004}, {'diff': 0.0005615139999999991}, {'diff': 0.0005615270000000061}, {'diff': 0.000561514000000006}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:13.824" endtime="20201030 18:32:13.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:13.843" level="INFO">${RESULT} = {'diff': [0.0005613609999999963, 0.0005615420000000051, 0.0005614720000000004, 0.0005615139999999991, 0.0005615270000000061, 0.000561514000000006, 0.0005615139999999991, 0.0005614999999999995, 0.00056...</msg>
<status status="PASS" starttime="20201030 18:32:13.835" endtime="20201030 18:32:13.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.854" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:13.852" endtime="20201030 18:32:13.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.860" level="INFO">VALUE: [0.0005613609999999963, 0.0005615420000000051, 0.0005614720000000004, 0.0005615139999999991, 0.0005615270000000061, 0.000561514000000006, 0.0005615139999999991, 0.0005614999999999995, 0.0005615419999999982, 0.0005615699999999973, 0.0005614859999999999, 0.0005614300000000016, 0.0005615279999999986, 0.0005615559999999978, 0.0005615830000000044, 0.0005615830000000044, 0.0005615559999999978, 0.0005615129999999996, 0.0005615839999999969, 0.0005615840000000039, 0.0005615419999999982, 0.0005615699999999973, 0.0005616110000000035, 0.0005615139999999991, 0.0005615840000000039, 0.0005616249999999962, 0.0005614580000000008, 0.0005616249999999962, 0.0005614859999999999, 0.0005614310000000011, 0.0005614719999999934, 0.0005614300000000016, 0.0005615129999999996, 0.0005613480000000032, 0.0005614019999999886, 0.0005614300000000016, 0.0005613609999999963, 0.0005614720000000073, 0.0005615139999999991, 0.0005614869999999994, 0.0005614170000000085, 0.0005614590000000003, 0.0005614719999999934, 0.0005614730000000068, 0.0005613750000000028, 0.0005614580000000008, 0.0005614859999999999, 0.0005615000000000064, 0.0005614440000000082, 0.0005614580000000008]</msg>
<status status="PASS" starttime="20201030 18:32:13.857" endtime="20201030 18:32:13.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.846" endtime="20201030 18:32:13.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:13.873" endtime="20201030 18:32:13.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.869" endtime="20201030 18:32:13.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.866" endtime="20201030 18:32:13.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.300" endtime="20201030 18:32:13.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.299" endtime="20201030 18:32:13.899"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.921" endtime="20201030 18:32:14.003"></status>
</kw>
<msg timestamp="20201030 18:32:14.004" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.918" endtime="20201030 18:32:14.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.011" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:14.007" endtime="20201030 18:32:14.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.013" endtime="20201030 18:32:14.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.911" endtime="20201030 18:32:14.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.905" endtime="20201030 18:32:14.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.038" endtime="20201030 18:32:14.381"></status>
</kw>
<msg timestamp="20201030 18:32:14.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038093569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038676903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:14.035" endtime="20201030 18:32:14.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038093569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038676903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:14.390" endtime="20201030 18:32:14.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.407" endtime="20201030 18:32:14.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.027" endtime="20201030 18:32:14.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.022" endtime="20201030 18:32:14.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:14.423" level="INFO">${PHILIP_RES} = [{'diff': 0.0005833339999999979}, {'diff': 0.0005827230000000003}, {'diff': 0.0005827639999999995}, {'diff': 0.0005827499999999999}, {'diff': 0.0005827220000000008}, {'diff': 0.0005827220000000008}, {...</msg>
<status status="PASS" starttime="20201030 18:32:14.416" endtime="20201030 18:32:14.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:14.434" level="INFO">${RESULT} = {'diff': [0.0005833339999999979, 0.0005827230000000003, 0.0005827639999999995, 0.0005827499999999999, 0.0005827220000000008, 0.0005827220000000008, 0.0005827909999999992, 0.0005827779999999991, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:32:14.425" endtime="20201030 18:32:14.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.445" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:14.442" endtime="20201030 18:32:14.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.450" level="INFO">VALUE: [0.0005833339999999979, 0.0005827230000000003, 0.0005827639999999995, 0.0005827499999999999, 0.0005827220000000008, 0.0005827220000000008, 0.0005827909999999992, 0.0005827779999999991, 0.0005826949999999942, 0.0005827640000000064, 0.0005827639999999995, 0.0005827360000000004, 0.0005827919999999986, 0.0005828049999999987, 0.0005827639999999995, 0.0005826800000000021, 0.0005826809999999946, 0.0005826249999999963, 0.0005826109999999968, 0.0005827219999999939, 0.000582666999999995, 0.0005828059999999913, 0.0005827639999999995, 0.0005825970000000041, 0.0005827219999999939, 0.0005827220000000077, 0.0005826800000000021, 0.0005826249999999894, 0.000582666999999995, 0.0005826939999999947, 0.0005826659999999956, 0.0005825979999999897, 0.0005825969999999903, 0.000582666999999995, 0.0005826389999999959, 0.000582584000000011, 0.0005826670000000089, 0.0005826939999999947, 0.0005826109999999968, 0.0005826659999999956, 0.0005827090000000007, 0.0005826530000000024, 0.0005826250000000033, 0.0005826950000000081, 0.0005827080000000012, 0.0005827369999999998, 0.0005826800000000021, 0.0005826800000000021, 0.0005826939999999947, 0.0005826670000000089]</msg>
<status status="PASS" starttime="20201030 18:32:14.447" endtime="20201030 18:32:14.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.436" endtime="20201030 18:32:14.453"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:14.463" endtime="20201030 18:32:14.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.458" endtime="20201030 18:32:14.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.456" endtime="20201030 18:32:14.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.901" endtime="20201030 18:32:14.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.900" endtime="20201030 18:32:14.488"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.510" endtime="20201030 18:32:14.592"></status>
</kw>
<msg timestamp="20201030 18:32:14.593" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:14.507" endtime="20201030 18:32:14.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.599" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:14.595" endtime="20201030 18:32:14.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.602" endtime="20201030 18:32:14.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.499" endtime="20201030 18:32:14.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.494" endtime="20201030 18:32:14.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.625" endtime="20201030 18:32:14.970"></status>
</kw>
<msg timestamp="20201030 18:32:14.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037648986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038254083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:14.622" endtime="20201030 18:32:14.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037648986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038254083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:14.979" endtime="20201030 18:32:14.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.996" endtime="20201030 18:32:15.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.615" endtime="20201030 18:32:15.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.610" endtime="20201030 18:32:15.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:15.012" level="INFO">${PHILIP_RES} = [{'diff': 0.0006050969999999989}, {'diff': 0.0006039170000000024}, {'diff': 0.0006040279999999995}, {'diff': 0.0006039860000000008}, {'diff': 0.0006039020000000034}, {'diff': 0.0006040279999999995}, {...</msg>
<status status="PASS" starttime="20201030 18:32:15.005" endtime="20201030 18:32:15.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:15.021" level="INFO">${RESULT} = {'diff': [0.0006050969999999989, 0.0006039170000000024, 0.0006040279999999995, 0.0006039860000000008, 0.0006039020000000034, 0.0006040279999999995, 0.0006039720000000012, 0.0006039720000000012, 0.0006...</msg>
<status status="PASS" starttime="20201030 18:32:15.014" endtime="20201030 18:32:15.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.032" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:15.030" endtime="20201030 18:32:15.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.037" level="INFO">VALUE: [0.0006050969999999989, 0.0006039170000000024, 0.0006040279999999995, 0.0006039860000000008, 0.0006039020000000034, 0.0006040279999999995, 0.0006039720000000012, 0.0006039720000000012, 0.0006040279999999995, 0.0006039860000000008, 0.0006039720000000012, 0.0006041109999999975, 0.0006040139999999999, 0.0006039870000000003, 0.0006040000000000004, 0.0006040689999999987, 0.0006039720000000012, 0.0006040139999999999, 0.0006039719999999943, 0.0006039030000000029, 0.000603915999999996, 0.0006040129999999866, 0.0006040139999999999, 0.0006039580000000017, 0.000603944000000009, 0.0006040560000000056, 0.0006040000000000073, 0.0006040139999999999, 0.0006040550000000061, 0.0006040130000000005, 0.0006039860000000008, 0.0006039300000000025, 0.0006039860000000008, 0.0006039860000000008, 0.0006039439999999952, 0.0006038609999999972, 0.0006040000000000073, 0.0006040829999999914, 0.0006039999999999934, 0.0006039590000000011, 0.0006040139999999999, 0.0006039860000000008, 0.0006040829999999914, 0.0006039719999999943, 0.0006039719999999943, 0.0006040280000000064, 0.0006040139999999999, 0.0006039719999999943, 0.0006039439999999952, 0.0006040000000000073]</msg>
<status status="PASS" starttime="20201030 18:32:15.034" endtime="20201030 18:32:15.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.023" endtime="20201030 18:32:15.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:15.051" endtime="20201030 18:32:15.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.046" endtime="20201030 18:32:15.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.044" endtime="20201030 18:32:15.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.490" endtime="20201030 18:32:15.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.489" endtime="20201030 18:32:15.076"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.098" endtime="20201030 18:32:15.184"></status>
</kw>
<msg timestamp="20201030 18:32:15.185" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.095" endtime="20201030 18:32:15.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.191" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.187" endtime="20201030 18:32:15.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.193" endtime="20201030 18:32:15.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.087" endtime="20201030 18:32:15.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.082" endtime="20201030 18:32:15.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.217" endtime="20201030 18:32:15.561"></status>
</kw>
<msg timestamp="20201030 18:32:15.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038794014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039420056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:15.214" endtime="20201030 18:32:15.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038794014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039420056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:15.570" endtime="20201030 18:32:15.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.587" endtime="20201030 18:32:15.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.206" endtime="20201030 18:32:15.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.202" endtime="20201030 18:32:15.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:15.603" level="INFO">${PHILIP_RES} = [{'diff': 0.0006260420000000003}, {'diff': 0.000625388999999997}, {'diff': 0.0006253059999999991}, {'diff': 0.0006253199999999987}, {'diff': 0.000625291}, {'diff': 0.000625291}, {'diff': 0.00062526400...</msg>
<status status="PASS" starttime="20201030 18:32:15.596" endtime="20201030 18:32:15.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:15.613" level="INFO">${RESULT} = {'diff': [0.0006260420000000003, 0.000625388999999997, 0.0006253059999999991, 0.0006253199999999987, 0.000625291, 0.000625291, 0.0006252640000000004, 0.000625291, 0.0006253339999999982, 0.000625291999...</msg>
<status status="PASS" starttime="20201030 18:32:15.605" endtime="20201030 18:32:15.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.623" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:15.621" endtime="20201030 18:32:15.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.628" level="INFO">VALUE: [0.0006260420000000003, 0.000625388999999997, 0.0006253059999999991, 0.0006253199999999987, 0.000625291, 0.000625291, 0.0006252640000000004, 0.000625291, 0.0006253339999999982, 0.0006252919999999995, 0.0006252079999999952, 0.0006252360000000012, 0.000625291, 0.0006254019999999971, 0.0006254029999999966, 0.000625180000000003, 0.0006252360000000012, 0.0006253610000000048, 0.0006252499999999939, 0.0006252220000000086, 0.000625277999999993, 0.0006253339999999913, 0.0006252919999999995, 0.0006253330000000057, 0.0006252919999999995, 0.0006252780000000069, 0.0006252919999999995, 0.0006252499999999939, 0.0006253469999999983, 0.0006253050000000066, 0.0006253610000000048, 0.000625306000000006, 0.0006252499999999939, 0.0006252780000000069, 0.0006252640000000004, 0.0006253470000000122, 0.0006252780000000069, 0.0006253749999999975, 0.0006252780000000069, 0.0006253059999999921, 0.0006252499999999939, 0.000625277999999993, 0.0006253329999999918, 0.000625291, 0.0006252080000000021, 0.0006252220000000086, 0.0006253610000000048, 0.0006253199999999987, 0.0006252360000000012, 0.0006253189999999992]</msg>
<status status="PASS" starttime="20201030 18:32:15.625" endtime="20201030 18:32:15.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.614" endtime="20201030 18:32:15.632"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:15.642" endtime="20201030 18:32:15.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.636" endtime="20201030 18:32:15.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.634" endtime="20201030 18:32:15.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.078" endtime="20201030 18:32:15.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.077" endtime="20201030 18:32:15.667"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.689" endtime="20201030 18:32:15.776"></status>
</kw>
<msg timestamp="20201030 18:32:15.777" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.686" endtime="20201030 18:32:15.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.783" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.779" endtime="20201030 18:32:15.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.785" endtime="20201030 18:32:15.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.679" endtime="20201030 18:32:15.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.673" endtime="20201030 18:32:15.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.809" endtime="20201030 18:32:16.152"></status>
</kw>
<msg timestamp="20201030 18:32:16.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037071014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037718708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:15.806" endtime="20201030 18:32:16.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037071014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037718708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:16.161" endtime="20201030 18:32:16.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.178" endtime="20201030 18:32:16.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.798" endtime="20201030 18:32:16.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.794" endtime="20201030 18:32:16.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:16.194" level="INFO">${PHILIP_RES} = [{'diff': 0.0006476939999999973}, {'diff': 0.0006466109999999983}, {'diff': 0.0006465410000000005}, {'diff': 0.0006465559999999995}, {'diff': 0.000646652999999997}, {'diff': 0.0006466390000000044}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:16.186" endtime="20201030 18:32:16.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:16.204" level="INFO">${RESULT} = {'diff': [0.0006476939999999973, 0.0006466109999999983, 0.0006465410000000005, 0.0006465559999999995, 0.000646652999999997, 0.0006466390000000044, 0.0006465000000000012, 0.000646555, 0.000646555999999...</msg>
<status status="PASS" starttime="20201030 18:32:16.196" endtime="20201030 18:32:16.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.215" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:16.213" endtime="20201030 18:32:16.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.220" level="INFO">VALUE: [0.0006476939999999973, 0.0006466109999999983, 0.0006465410000000005, 0.0006465559999999995, 0.000646652999999997, 0.0006466390000000044, 0.0006465000000000012, 0.000646555, 0.0006465559999999995, 0.0006465699999999991, 0.0006465140000000008, 0.0006465280000000004, 0.0006465410000000005, 0.0006464720000000021, 0.0006465969999999988, 0.0006465829999999992, 0.0006465839999999987, 0.0006465689999999996, 0.0006465140000000008, 0.0006465969999999988, 0.0006466530000000109, 0.000646542, 0.000646542, 0.000646542, 0.0006465280000000073, 0.0006464859999999878, 0.0006464860000000017, 0.0006464719999999952, 0.0006465689999999996, 0.0006465559999999926, 0.0006465830000000061, 0.0006464580000000025, 0.0006465689999999996, 0.0006465140000000008, 0.0006463749999999907, 0.0006464030000000037, 0.000646472000000009, 0.0006464580000000025, 0.0006464030000000037, 0.0006464730000000085, 0.0006464170000000102, 0.0006464449999999955, 0.0006464579999999887, 0.0006464729999999946, 0.0006464579999999887, 0.000646542, 0.0006465549999999931, 0.0006464580000000025, 0.0006464299999999895, 0.0006464719999999952]</msg>
<status status="PASS" starttime="20201030 18:32:16.217" endtime="20201030 18:32:16.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.206" endtime="20201030 18:32:16.223"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:16.233" endtime="20201030 18:32:16.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.228" endtime="20201030 18:32:16.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.226" endtime="20201030 18:32:16.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.669" endtime="20201030 18:32:16.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.668" endtime="20201030 18:32:16.268"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.300" endtime="20201030 18:32:16.391"></status>
</kw>
<msg timestamp="20201030 18:32:16.393" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:16.294" endtime="20201030 18:32:16.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.400" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:16.395" endtime="20201030 18:32:16.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.403" endtime="20201030 18:32:16.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.286" endtime="20201030 18:32:16.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.277" endtime="20201030 18:32:16.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.434" endtime="20201030 18:32:16.784"></status>
</kw>
<msg timestamp="20201030 18:32:16.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.059249194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.059917583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:16.429" endtime="20201030 18:32:16.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.059249194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.059917583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:16.793" endtime="20201030 18:32:16.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.810" endtime="20201030 18:32:16.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.420" endtime="20201030 18:32:16.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.415" endtime="20201030 18:32:16.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:16.826" level="INFO">${PHILIP_RES} = [{'diff': 0.0006683890000000053}, {'diff': 0.0006690279999999951}, {'diff': 0.0006690969999999935}, {'diff': 0.0006690139999999956}, {'diff': 0.0006689719999999899}, {'diff': 0.0006690140000000094}, {...</msg>
<status status="PASS" starttime="20201030 18:32:16.819" endtime="20201030 18:32:16.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:16.837" level="INFO">${RESULT} = {'diff': [0.0006683890000000053, 0.0006690279999999951, 0.0006690969999999935, 0.0006690139999999956, 0.0006689719999999899, 0.0006690140000000094, 0.0006690140000000094, 0.000668917000000005, 0.00066...</msg>
<status status="PASS" starttime="20201030 18:32:16.828" endtime="20201030 18:32:16.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.848" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:16.845" endtime="20201030 18:32:16.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.853" level="INFO">VALUE: [0.0006683890000000053, 0.0006690279999999951, 0.0006690969999999935, 0.0006690139999999956, 0.0006689719999999899, 0.0006690140000000094, 0.0006690140000000094, 0.000668917000000005, 0.0006690139999999956, 0.000668888999999992, 0.000668888999999992, 0.0006688200000000005, 0.0006688470000000002, 0.0006688610000000067, 0.0006686939999999975, 0.0006687219999999966, 0.0006686800000000048, 0.000668805999999994, 0.0006687630000000028, 0.0006686530000000052, 0.0006687910000000019, 0.0006687219999999966, 0.0006687499999999957, 0.0006687219999999966, 0.0006687220000000105, 0.0006686949999999969, 0.0006686810000000043, 0.0006687219999999966, 0.0006686800000000048, 0.000668708000000004, 0.0006687219999999966, 0.0006686800000000048, 0.0006687910000000019, 0.0006686810000000043, 0.0006687090000000034, 0.0006686529999999913, 0.0006687219999999966, 0.0006687919999999875, 0.000668790999999988, 0.0006688330000000076, 0.0006687229999999961, 0.0006687360000000031, 0.0006687229999999822, 0.0006688190000000149, 0.0006688200000000144, 0.0006687079999999901, 0.0006687360000000031, 0.0006687500000000235, 0.0006688470000000002, 0.0006687370000000026]</msg>
<status status="PASS" starttime="20201030 18:32:16.850" endtime="20201030 18:32:16.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.839" endtime="20201030 18:32:16.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:16.866" endtime="20201030 18:32:16.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.862" endtime="20201030 18:32:16.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.859" endtime="20201030 18:32:16.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.272" endtime="20201030 18:32:16.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.270" endtime="20201030 18:32:16.891"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.913" endtime="20201030 18:32:17.004"></status>
</kw>
<msg timestamp="20201030 18:32:17.005" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:16.909" endtime="20201030 18:32:17.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.012" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.007" endtime="20201030 18:32:17.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.014" endtime="20201030 18:32:17.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.902" endtime="20201030 18:32:17.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.897" endtime="20201030 18:32:17.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.038" endtime="20201030 18:32:17.394"></status>
</kw>
<msg timestamp="20201030 18:32:17.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037082681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037773208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:17.034" endtime="20201030 18:32:17.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037082681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037773208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:17.403" endtime="20201030 18:32:17.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.421" endtime="20201030 18:32:17.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.027" endtime="20201030 18:32:17.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.022" endtime="20201030 18:32:17.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:17.437" level="INFO">${PHILIP_RES} = [{'diff': 0.0006905270000000033}, {'diff': 0.0006909729999999975}, {'diff': 0.0006909169999999992}, {'diff': 0.0006910269999999968}, {'diff': 0.0006909999999999972}, {'diff': 0.0006909859999999976}, {...</msg>
<status status="PASS" starttime="20201030 18:32:17.429" endtime="20201030 18:32:17.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:17.446" level="INFO">${RESULT} = {'diff': [0.0006905270000000033, 0.0006909729999999975, 0.0006909169999999992, 0.0006910269999999968, 0.0006909999999999972, 0.0006909859999999976, 0.0006910000000000041, 0.0006909859999999976, 0.0006...</msg>
<status status="PASS" starttime="20201030 18:32:17.439" endtime="20201030 18:32:17.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.456" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:17.454" endtime="20201030 18:32:17.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.462" level="INFO">VALUE: [0.0006905270000000033, 0.0006909729999999975, 0.0006909169999999992, 0.0006910269999999968, 0.0006909999999999972, 0.0006909859999999976, 0.0006910000000000041, 0.0006909859999999976, 0.0006908750000000005, 0.0006909999999999972, 0.0006909439999999989, 0.0006908890000000001, 0.0006909169999999992, 0.0006909309999999988, 0.0006910560000000024, 0.0006911110000000081, 0.0006910280000000102, 0.0006910139999999898, 0.0006909999999999972, 0.0006910560000000093, 0.0006910410000000033, 0.0006910139999999898, 0.0006909030000000066, 0.000690958999999991, 0.0006909590000000049, 0.0006909859999999907, 0.000690958999999991, 0.000690971999999998, 0.0006909159999999998, 0.0006909019999999932, 0.000690861000000001, 0.0006910420000000028, 0.0006910839999999946, 0.0006910420000000028, 0.0006909869999999901, 0.0006910690000000025, 0.0006911389999999934, 0.0006910279999999963, 0.0006910550000000099, 0.0006911949999999917, 0.0006911390000000073, 0.0006911250000000008, 0.0006910980000000011, 0.0006910560000000093, 0.0006910699999999881, 0.0006910969999999877, 0.0006910690000000025, 0.000691054999999996, 0.0006910420000000028, 0.000691070000000002]</msg>
<status status="PASS" starttime="20201030 18:32:17.459" endtime="20201030 18:32:17.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.448" endtime="20201030 18:32:17.465"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:17.474" endtime="20201030 18:32:17.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.470" endtime="20201030 18:32:17.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.467" endtime="20201030 18:32:17.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.893" endtime="20201030 18:32:17.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.892" endtime="20201030 18:32:17.500"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.522" endtime="20201030 18:32:17.617"></status>
</kw>
<msg timestamp="20201030 18:32:17.618" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.518" endtime="20201030 18:32:17.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.624" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.620" endtime="20201030 18:32:17.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.627" endtime="20201030 18:32:17.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.511" endtime="20201030 18:32:17.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.506" endtime="20201030 18:32:17.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.650" endtime="20201030 18:32:18.005"></status>
</kw>
<msg timestamp="20201030 18:32:18.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038881694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039594764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:17.647" endtime="20201030 18:32:18.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038881694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039594764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:18.014" endtime="20201030 18:32:18.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.031" endtime="20201030 18:32:18.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.640" endtime="20201030 18:32:18.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.635" endtime="20201030 18:32:18.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:18.047" level="INFO">${PHILIP_RES} = [{'diff': 0.0007130699999999962}, {'diff': 0.000713639000000002}, {'diff': 0.0007136250000000025}, {'diff': 0.000713512999999999}, {'diff': 0.000713541000000005}, {'diff': 0.0007136519999999952}, {'di...</msg>
<status status="PASS" starttime="20201030 18:32:18.040" endtime="20201030 18:32:18.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:18.056" level="INFO">${RESULT} = {'diff': [0.0007130699999999962, 0.000713639000000002, 0.0007136250000000025, 0.000713512999999999, 0.000713541000000005, 0.0007136519999999952, 0.0007136250000000025, 0.0007135830000000037, 0.0007136...</msg>
<status status="PASS" starttime="20201030 18:32:18.049" endtime="20201030 18:32:18.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.067" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:18.065" endtime="20201030 18:32:18.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.072" level="INFO">VALUE: [0.0007130699999999962, 0.000713639000000002, 0.0007136250000000025, 0.000713512999999999, 0.000713541000000005, 0.0007136519999999952, 0.0007136250000000025, 0.0007135830000000037, 0.0007136110000000029, 0.0007135420000000045, 0.0007135840000000032, 0.0007136530000000016, 0.0007136249999999955, 0.0007135140000000054, 0.0007135270000000055, 0.0007135279999999911, 0.0007135139999999984, 0.0007133609999999957, 0.0007134159999999945, 0.000713430000000001, 0.0007134439999999936, 0.0007135140000000123, 0.0007135689999999972, 0.0007134580000000001, 0.0007134859999999993, 0.0007134310000000005, 0.0007135419999999976, 0.0007134859999999993, 0.0007135270000000055, 0.0007136110000000029, 0.0007135830000000037, 0.0007136950000000003, 0.0007135420000000114, 0.0007135550000000046, 0.0007135419999999976, 0.0007135139999999984, 0.0007135140000000123, 0.0007134309999999866, 0.0007135830000000037, 0.0007136530000000085, 0.0007135550000000046, 0.0007135139999999984, 0.000713430000000001, 0.0007134859999999993, 0.0007135139999999984, 0.0007134859999999993, 0.0007134160000000084, 0.0007134720000000067, 0.0007135830000000037, 0.0007136110000000029]</msg>
<status status="PASS" starttime="20201030 18:32:18.069" endtime="20201030 18:32:18.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.058" endtime="20201030 18:32:18.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:18.097" endtime="20201030 18:32:18.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.087" endtime="20201030 18:32:18.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.084" endtime="20201030 18:32:18.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.502" endtime="20201030 18:32:18.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.501" endtime="20201030 18:32:18.122"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.145" endtime="20201030 18:32:18.242"></status>
</kw>
<msg timestamp="20201030 18:32:18.243" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.141" endtime="20201030 18:32:18.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.249" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.245" endtime="20201030 18:32:18.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.251" endtime="20201030 18:32:18.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.134" endtime="20201030 18:32:18.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.128" endtime="20201030 18:32:18.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.275" endtime="20201030 18:32:18.623"></status>
</kw>
<msg timestamp="20201030 18:32:18.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0383225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039058042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:18.272" endtime="20201030 18:32:18.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0383225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039058042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:18.632" endtime="20201030 18:32:18.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.650" endtime="20201030 18:32:18.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.265" endtime="20201030 18:32:18.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.260" endtime="20201030 18:32:18.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:18.666" level="INFO">${PHILIP_RES} = [{'diff': 0.0007355419999999988}, {'diff': 0.0007356660000000029}, {'diff': 0.0007358199999999981}, {'diff': 0.0007357080000000016}, {'diff': 0.0007356109999999971}, {'diff': 0.0007356939999999951}, {...</msg>
<status status="PASS" starttime="20201030 18:32:18.658" endtime="20201030 18:32:18.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:18.676" level="INFO">${RESULT} = {'diff': [0.0007355419999999988, 0.0007356660000000029, 0.0007358199999999981, 0.0007357080000000016, 0.0007356109999999971, 0.0007356939999999951, 0.0007357230000000006, 0.0007357779999999994, 0.0007...</msg>
<status status="PASS" starttime="20201030 18:32:18.668" endtime="20201030 18:32:18.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.687" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:18.684" endtime="20201030 18:32:18.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.692" level="INFO">VALUE: [0.0007355419999999988, 0.0007356660000000029, 0.0007358199999999981, 0.0007357080000000016, 0.0007356109999999971, 0.0007356939999999951, 0.0007357230000000006, 0.0007357779999999994, 0.0007357080000000016, 0.0007358890000000035, 0.0007358470000000047, 0.0007358200000000051, 0.000735986000000001, 0.000735791999999999, 0.0007358470000000117, 0.0007358469999999978, 0.0007359720000000014, 0.0007359450000000017, 0.000735874999999997, 0.0007358329999999913, 0.000735776999999993, 0.0007357780000000064, 0.0007356669999999954, 0.0007357360000000007, 0.0007359019999999966, 0.0007357360000000007, 0.0007357779999999925, 0.0007357360000000007, 0.0007357500000000072, 0.000735791999999999, 0.0007357500000000072, 0.0007357779999999925, 0.0007358060000000055, 0.000735791999999999, 0.0007359449999999879, 0.0007360000000000005, 0.0007358469999999978, 0.0007358190000000125, 0.0007359580000000088, 0.0007358610000000043, 0.0007358329999999913, 0.0007359590000000082, 0.0007358879999999901, 0.0007358329999999913, 0.0007358890000000035, 0.0007360829999999985, 0.000736014000000007, 0.0007358469999999978, 0.0007357500000000072, 0.0007357779999999925]</msg>
<status status="PASS" starttime="20201030 18:32:18.689" endtime="20201030 18:32:18.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.678" endtime="20201030 18:32:18.695"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:18.705" endtime="20201030 18:32:18.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.700" endtime="20201030 18:32:18.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.698" endtime="20201030 18:32:18.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.124" endtime="20201030 18:32:18.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.123" endtime="20201030 18:32:18.730"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.751" endtime="20201030 18:32:18.849"></status>
</kw>
<msg timestamp="20201030 18:32:18.851" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.748" endtime="20201030 18:32:18.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.857" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.853" endtime="20201030 18:32:18.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.859" endtime="20201030 18:32:18.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.741" endtime="20201030 18:32:18.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.735" endtime="20201030 18:32:18.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.883" endtime="20201030 18:32:19.226"></status>
</kw>
<msg timestamp="20201030 18:32:19.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036689042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037447569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:18.879" endtime="20201030 18:32:19.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036689042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037447569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:19.235" endtime="20201030 18:32:19.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.252" endtime="20201030 18:32:19.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.872" endtime="20201030 18:32:19.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.867" endtime="20201030 18:32:19.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:19.268" level="INFO">${PHILIP_RES} = [{'diff': 0.0007585270000000019}, {'diff': 0.0007588890000000056}, {'diff': 0.0007590700000000006}, {'diff': 0.000758958000000004}, {'diff': 0.0007590419999999945}, {'diff': 0.0007589729999999961}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:19.261" endtime="20201030 18:32:19.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:19.279" level="INFO">${RESULT} = {'diff': [0.0007585270000000019, 0.0007588890000000056, 0.0007590700000000006, 0.000758958000000004, 0.0007590419999999945, 0.0007589729999999961, 0.0007590419999999945, 0.0007589579999999971, 0.00075...</msg>
<status status="PASS" starttime="20201030 18:32:19.270" endtime="20201030 18:32:19.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.290" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:19.287" endtime="20201030 18:32:19.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.295" level="INFO">VALUE: [0.0007585270000000019, 0.0007588890000000056, 0.0007590700000000006, 0.000758958000000004, 0.0007590419999999945, 0.0007589729999999961, 0.0007590419999999945, 0.0007589579999999971, 0.0007589590000000035, 0.0007589860000000032, 0.0007589579999999971, 0.0007589159999999984, 0.0007590689999999942, 0.0007589719999999966, 0.000759056000000008, 0.0007590140000000023, 0.0007589019999999919, 0.0007590000000000097, 0.000758958000000004, 0.0007589030000000052, 0.000758944999999997, 0.0007590700000000006, 0.0007590690000000011, 0.0007590139999999884, 0.0007589030000000052, 0.0007588750000000061, 0.0007588479999999925, 0.0007589590000000035, 0.0007590279999999949, 0.0007589999999999958, 0.000758958000000004, 0.0007590140000000023, 0.0007589439999999975, 0.0007590140000000023, 0.0007589999999999958, 0.0007588470000000069, 0.0007588189999999939, 0.0007588750000000061, 0.0007588890000000126, 0.0007589720000000105, 0.0007589860000000032, 0.0007589719999999966, 0.0007589309999999905, 0.0007588330000000004, 0.0007587909999999948, 0.0007589590000000035, 0.0007589310000000044, 0.0007588609999999996, 0.000758958000000004, 0.0007589440000000114]</msg>
<status status="PASS" starttime="20201030 18:32:19.292" endtime="20201030 18:32:19.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.281" endtime="20201030 18:32:19.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:19.308" endtime="20201030 18:32:19.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.303" endtime="20201030 18:32:19.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.301" endtime="20201030 18:32:19.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.732" endtime="20201030 18:32:19.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.730" endtime="20201030 18:32:19.333"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.354" endtime="20201030 18:32:19.455"></status>
</kw>
<msg timestamp="20201030 18:32:19.456" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:19.351" endtime="20201030 18:32:19.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.463" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:19.459" endtime="20201030 18:32:19.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.465" endtime="20201030 18:32:19.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.344" endtime="20201030 18:32:19.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.339" endtime="20201030 18:32:19.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.488" endtime="20201030 18:32:19.830"></status>
</kw>
<msg timestamp="20201030 18:32:19.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036746375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037529583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:19.485" endtime="20201030 18:32:19.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036746375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037529583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:19.839" endtime="20201030 18:32:19.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.856" endtime="20201030 18:32:19.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.478" endtime="20201030 18:32:19.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.473" endtime="20201030 18:32:19.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:19.871" level="INFO">${PHILIP_RES} = [{'diff': 0.0007832080000000005}, {'diff': 0.0007821800000000004}, {'diff': 0.0007822359999999987}, {'diff': 0.0007821530000000007}, {'diff': 0.000782222000000006}, {'diff': 0.0007821250000000016}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:19.864" endtime="20201030 18:32:19.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:19.880" level="INFO">${RESULT} = {'diff': [0.0007832080000000005, 0.0007821800000000004, 0.0007822359999999987, 0.0007821530000000007, 0.000782222000000006, 0.0007821250000000016, 0.0007820970000000024, 0.0007822499999999982, 0.00078...</msg>
<status status="PASS" starttime="20201030 18:32:19.873" endtime="20201030 18:32:19.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.891" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:19.888" endtime="20201030 18:32:19.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.896" level="INFO">VALUE: [0.0007832080000000005, 0.0007821800000000004, 0.0007822359999999987, 0.0007821530000000007, 0.000782222000000006, 0.0007821250000000016, 0.0007820970000000024, 0.0007822499999999982, 0.0007821670000000003, 0.0007822640000000047, 0.0007821250000000016, 0.0007822219999999991, 0.0007821530000000007, 0.0007822500000000052, 0.0007822080000000065, 0.0007822360000000056, 0.0007823329999999962, 0.0007821949999999994, 0.0007822219999999991, 0.0007823190000000035, 0.0007822779999999974, 0.0007821799999999934, 0.000782208999999992, 0.0007822080000000065, 0.0007822499999999982, 0.0007822079999999926, 0.0007822769999999979, 0.0007822360000000056, 0.0007821949999999994, 0.0007822360000000056, 0.000782111000000002, 0.0007821809999999929, 0.0007822499999999982, 0.0007822080000000065, 0.0007821939999999999, 0.0007822910000000044, 0.0007821939999999999, 0.0007820830000000029, 0.0007820409999999972, 0.0007822219999999991, 0.0007822090000000059, 0.0007821390000000011, 0.0007822499999999982, 0.0007822779999999974, 0.0007822499999999982, 0.0007820970000000094, 0.0007820690000000102, 0.0007820000000000049, 0.0007820139999999975, 0.0007820559999999754]</msg>
<status status="PASS" starttime="20201030 18:32:19.893" endtime="20201030 18:32:19.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.882" endtime="20201030 18:32:19.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:19.908" endtime="20201030 18:32:19.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.904" endtime="20201030 18:32:19.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.902" endtime="20201030 18:32:19.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.335" endtime="20201030 18:32:19.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.334" endtime="20201030 18:32:19.933"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.955" endtime="20201030 18:32:20.059"></status>
</kw>
<msg timestamp="20201030 18:32:20.060" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:19.951" endtime="20201030 18:32:20.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.066" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.063" endtime="20201030 18:32:20.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.069" endtime="20201030 18:32:20.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.944" endtime="20201030 18:32:20.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.939" endtime="20201030 18:32:20.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.092" endtime="20201030 18:32:20.432"></status>
</kw>
<msg timestamp="20201030 18:32:20.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037825222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038631069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:20.088" endtime="20201030 18:32:20.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037825222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038631069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:20.440" endtime="20201030 18:32:20.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.458" endtime="20201030 18:32:20.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.081" endtime="20201030 18:32:20.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.077" endtime="20201030 18:32:20.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:20.474" level="INFO">${PHILIP_RES} = [{'diff': 0.0008058469999999984}, {'diff': 0.000805778}, {'diff': 0.000805860999999998}, {'diff': 0.0008057919999999996}, {'diff': 0.0008057919999999996}, {'diff': 0.0008058469999999984}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 18:32:20.466" endtime="20201030 18:32:20.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:20.482" level="INFO">${RESULT} = {'diff': [0.0008058469999999984, 0.000805778, 0.000805860999999998, 0.0008057919999999996, 0.0008057919999999996, 0.0008058469999999984, 0.0008057500000000009, 0.0008057360000000013, 0.000805750000000...</msg>
<status status="PASS" starttime="20201030 18:32:20.476" endtime="20201030 18:32:20.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.493" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:20.491" endtime="20201030 18:32:20.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.498" level="INFO">VALUE: [0.0008058469999999984, 0.000805778, 0.000805860999999998, 0.0008057919999999996, 0.0008057919999999996, 0.0008058469999999984, 0.0008057500000000009, 0.0008057360000000013, 0.0008057500000000009, 0.0008056950000000021, 0.0008055829999999986, 0.0008056249999999973, 0.0008056389999999969, 0.0008057360000000013, 0.0008056389999999969, 0.0008056390000000108, 0.0008057220000000087, 0.0008056389999999969, 0.0008056810000000025, 0.0008056939999999957, 0.0008058479999999979, 0.0008057360000000013, 0.0008057080000000022, 0.0008056810000000025, 0.0008056250000000043, 0.000805749999999994, 0.0008056250000000043, 0.0008057919999999996, 0.0008055970000000051, 0.0008057360000000013, 0.0008057360000000013, 0.0008056379999999974, 0.0008056390000000108, 0.0008055829999999986, 0.0008055969999999912, 0.0008056529999999895, 0.000805749999999994, 0.0008057090000000017, 0.0008057640000000005, 0.0008056109999999977, 0.0008056810000000025, 0.0008056800000000031, 0.0008056670000000099, 0.0008056389999999969, 0.0008057080000000022, 0.0008057080000000022, 0.0008056529999999895, 0.0008055279999999998, 0.0008055969999999912, 0.0008056530000000173]</msg>
<status status="PASS" starttime="20201030 18:32:20.495" endtime="20201030 18:32:20.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.484" endtime="20201030 18:32:20.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:20.512" endtime="20201030 18:32:20.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.506" endtime="20201030 18:32:20.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.504" endtime="20201030 18:32:20.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.935" endtime="20201030 18:32:20.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.934" endtime="20201030 18:32:20.537"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.558" endtime="20201030 18:32:20.664"></status>
</kw>
<msg timestamp="20201030 18:32:20.665" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.555" endtime="20201030 18:32:20.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.671" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.667" endtime="20201030 18:32:20.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.673" endtime="20201030 18:32:20.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.548" endtime="20201030 18:32:20.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.543" endtime="20201030 18:32:20.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.696" endtime="20201030 18:32:21.053"></status>
</kw>
<msg timestamp="20201030 18:32:21.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03623825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037066778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:20.693" endtime="20201030 18:32:21.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03623825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037066778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:21.062" endtime="20201030 18:32:21.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.079" endtime="20201030 18:32:21.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.686" endtime="20201030 18:32:21.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.681" endtime="20201030 18:32:21.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:21.096" level="INFO">${PHILIP_RES} = [{'diff': 0.000828528000000002}, {'diff': 0.0008290970000000009}, {'diff': 0.0008291809999999983}, {'diff': 0.0008291659999999992}, {'diff': 0.0008292499999999967}, {'diff': 0.0008291110000000004}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:21.088" endtime="20201030 18:32:21.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:21.107" level="INFO">${RESULT} = {'diff': [0.000828528000000002, 0.0008290970000000009, 0.0008291809999999983, 0.0008291659999999992, 0.0008292499999999967, 0.0008291110000000004, 0.0008291110000000004, 0.0008290689999999948, 0.00082...</msg>
<status status="PASS" starttime="20201030 18:32:21.099" endtime="20201030 18:32:21.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.118" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:21.115" endtime="20201030 18:32:21.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.123" level="INFO">VALUE: [0.000828528000000002, 0.0008290970000000009, 0.0008291809999999983, 0.0008291659999999992, 0.0008292499999999967, 0.0008291110000000004, 0.0008291110000000004, 0.0008290689999999948, 0.0008291529999999991, 0.0008290690000000017, 0.0008290140000000029, 0.000829027000000003, 0.0008291950000000048, 0.0008290280000000025, 0.0008289169999999985, 0.0008290420000000021, 0.0008290130000000034, 0.0008291529999999991, 0.0008292220000000045, 0.0008290970000000009, 0.0008289860000000038, 0.0008289439999999981, 0.0008290420000000021, 0.0008290550000000091, 0.0008290420000000021, 0.000828902999999992, 0.0008291529999999991, 0.0008289030000000058, 0.0008289999999999964, 0.0008290269999999961, 0.0008290140000000029, 0.0008291109999999935, 0.0008290269999999961, 0.0008289580000000046, 0.0008289999999999964, 0.0008290830000000082, 0.0008290269999999961, 0.0008289030000000058, 0.0008288889999999993, 0.0008289859999999899, 0.0008291109999999935, 0.0008291390000000065, 0.0008290970000000009, 0.0008289860000000038, 0.0008289719999999973, 0.0008290419999999882, 0.0008290829999999805, 0.0008290970000000009, 0.0008290410000000026, 0.0008290420000000021]</msg>
<status status="PASS" starttime="20201030 18:32:21.120" endtime="20201030 18:32:21.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.109" endtime="20201030 18:32:21.126"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:21.136" endtime="20201030 18:32:21.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.131" endtime="20201030 18:32:21.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.129" endtime="20201030 18:32:21.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.539" endtime="20201030 18:32:21.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.538" endtime="20201030 18:32:21.161"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.183" endtime="20201030 18:32:21.293"></status>
</kw>
<msg timestamp="20201030 18:32:21.294" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.180" endtime="20201030 18:32:21.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.301" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.296" endtime="20201030 18:32:21.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.303" endtime="20201030 18:32:21.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.172" endtime="20201030 18:32:21.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.167" endtime="20201030 18:32:21.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.327" endtime="20201030 18:32:21.680"></status>
</kw>
<msg timestamp="20201030 18:32:21.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037544236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038398194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:21.323" endtime="20201030 18:32:21.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037544236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038398194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:21.689" endtime="20201030 18:32:21.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.709" endtime="20201030 18:32:21.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.316" endtime="20201030 18:32:21.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.311" endtime="20201030 18:32:21.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:21.726" level="INFO">${PHILIP_RES} = [{'diff': 0.0008539579999999949}, {'diff': 0.0008531520000000029}, {'diff': 0.0008533059999999981}, {'diff': 0.000853277999999999}, {'diff': 0.000853277999999999}, {'diff': 0.0008534019999999962}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:21.718" endtime="20201030 18:32:21.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:21.737" level="INFO">${RESULT} = {'diff': [0.0008539579999999949, 0.0008531520000000029, 0.0008533059999999981, 0.000853277999999999, 0.000853277999999999, 0.0008534019999999962, 0.0008533609999999969, 0.0008532230000000002, 0.000853...</msg>
<status status="PASS" starttime="20201030 18:32:21.728" endtime="20201030 18:32:21.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.747" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:21.745" endtime="20201030 18:32:21.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.753" level="INFO">VALUE: [0.0008539579999999949, 0.0008531520000000029, 0.0008533059999999981, 0.000853277999999999, 0.000853277999999999, 0.0008534019999999962, 0.0008533609999999969, 0.0008532230000000002, 0.0008532909999999991, 0.0008534580000000014, 0.0008534030000000026, 0.0008532640000000064, 0.0008532499999999998, 0.0008533610000000108, 0.0008532499999999998, 0.0008533750000000034, 0.0008533609999999969, 0.0008534169999999952, 0.0008534720000000079, 0.0008531809999999945, 0.000853195000000001, 0.0008532079999999942, 0.0008532079999999942, 0.0008532500000000137, 0.0008532079999999942, 0.0008530969999999971, 0.0008531109999999897, 0.0008532499999999998, 0.0008532080000000081, 0.0008531390000000028, 0.000853068999999998, 0.0008550829999999926, 0.000853195000000001, 0.0008532639999999925, 0.0008531390000000028, 0.0008530550000000053, 0.0008531110000000036, 0.0008531809999999945, 0.000853277999999999, 0.0008532499999999998, 0.0008530699999999974, 0.0008532089999999937, 0.0008531110000000036, 0.0008531390000000028, 0.0008531250000000101, 0.0008530269999999784, 0.0008530280000000057, 0.0008530419999999983, 0.0008530689999999841, 0.0008530969999999971]</msg>
<status status="PASS" starttime="20201030 18:32:21.750" endtime="20201030 18:32:21.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.739" endtime="20201030 18:32:21.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:21.765" endtime="20201030 18:32:21.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.761" endtime="20201030 18:32:21.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.759" endtime="20201030 18:32:21.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.163" endtime="20201030 18:32:21.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.162" endtime="20201030 18:32:21.791"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.813" endtime="20201030 18:32:21.924"></status>
</kw>
<msg timestamp="20201030 18:32:21.925" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.809" endtime="20201030 18:32:21.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.931" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.927" endtime="20201030 18:32:21.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.934" endtime="20201030 18:32:21.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.802" endtime="20201030 18:32:21.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.797" endtime="20201030 18:32:21.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.957" endtime="20201030 18:32:22.317"></status>
</kw>
<msg timestamp="20201030 18:32:22.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037297375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038174264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:21.954" endtime="20201030 18:32:22.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037297375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038174264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.326" endtime="20201030 18:32:22.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.344" endtime="20201030 18:32:22.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.947" endtime="20201030 18:32:22.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.942" endtime="20201030 18:32:22.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:22.360" level="INFO">${PHILIP_RES} = [{'diff': 0.0008768889999999988}, {'diff': 0.0008775840000000007}, {'diff': 0.0008775279999999955}, {'diff': 0.0008775980000000003}, {'diff': 0.0008776389999999995}, {'diff': 0.0008775000000000033}, {...</msg>
<status status="PASS" starttime="20201030 18:32:22.352" endtime="20201030 18:32:22.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:22.369" level="INFO">${RESULT} = {'diff': [0.0008768889999999988, 0.0008775840000000007, 0.0008775279999999955, 0.0008775980000000003, 0.0008776389999999995, 0.0008775000000000033, 0.0008774450000000045, 0.0008775560000000016, 0.0008...</msg>
<status status="PASS" starttime="20201030 18:32:22.362" endtime="20201030 18:32:22.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.380" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:22.377" endtime="20201030 18:32:22.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.385" level="INFO">VALUE: [0.0008768889999999988, 0.0008775840000000007, 0.0008775279999999955, 0.0008775980000000003, 0.0008776389999999995, 0.0008775000000000033, 0.0008774450000000045, 0.0008775560000000016, 0.000877526999999996, 0.0008775410000000025, 0.0008776389999999995, 0.000877735999999997, 0.0008777499999999966, 0.0008776390000000134, 0.000877736000000004, 0.0008777220000000113, 0.0008776949999999978, 0.0008777639999999892, 0.0008776529999999921, 0.0008777499999999966, 0.0008777080000000048, 0.0008777220000000113, 0.000877818999999988, 0.0008777910000000028, 0.0008778060000000087, 0.0008775969999999939, 0.0008775970000000077, 0.0008775550000000021, 0.0008775700000000081, 0.0008774579999999976, 0.0008775830000000012, 0.0008775270000000029, 0.0008774720000000041, 0.0008775140000000098, 0.0008776110000000004, 0.0008775140000000098, 0.0008774719999999903, 0.0008775139999999959, 0.0008776669999999986, 0.0008774029999999988, 0.000877541999999995, 0.000877541999999995, 0.0008774019999999993, 0.0008774169999999915, 0.0008773470000000005, 0.0008774019999999993, 0.0008772780000000091, 0.0008775000000000033, 0.0008773470000000005, 0.0008775690000000225]</msg>
<status status="PASS" starttime="20201030 18:32:22.382" endtime="20201030 18:32:22.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.371" endtime="20201030 18:32:22.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:22.398" endtime="20201030 18:32:22.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.393" endtime="20201030 18:32:22.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.391" endtime="20201030 18:32:22.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.793" endtime="20201030 18:32:22.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.792" endtime="20201030 18:32:22.423"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.445" endtime="20201030 18:32:22.561"></status>
</kw>
<msg timestamp="20201030 18:32:22.562" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.442" endtime="20201030 18:32:22.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.568" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.564" endtime="20201030 18:32:22.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.571" endtime="20201030 18:32:22.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.435" endtime="20201030 18:32:22.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.429" endtime="20201030 18:32:22.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.594" endtime="20201030 18:32:22.949"></status>
</kw>
<msg timestamp="20201030 18:32:22.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039105944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040007847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.591" endtime="20201030 18:32:22.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039105944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040007847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.958" endtime="20201030 18:32:22.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.976" endtime="20201030 18:32:22.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.584" endtime="20201030 18:32:22.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.579" endtime="20201030 18:32:22.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:22.992" level="INFO">${PHILIP_RES} = [{'diff': 0.0009019030000000025}, {'diff': 0.0009018880000000035}, {'diff': 0.0009020279999999992}, {'diff': 0.0009020690000000053}, {'diff': 0.0009019450000000012}, {'diff': 0.000901888999999996}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:22.984" endtime="20201030 18:32:22.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:23.001" level="INFO">${RESULT} = {'diff': [0.0009019030000000025, 0.0009018880000000035, 0.0009020279999999992, 0.0009020690000000053, 0.0009019450000000012, 0.000901888999999996, 0.0009018610000000038, 0.0009019440000000017, 0.00090...</msg>
<status status="PASS" starttime="20201030 18:32:22.994" endtime="20201030 18:32:23.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.012" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:23.010" endtime="20201030 18:32:23.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.017" level="INFO">VALUE: [0.0009019030000000025, 0.0009018880000000035, 0.0009020279999999992, 0.0009020690000000053, 0.0009019450000000012, 0.000901888999999996, 0.0009018610000000038, 0.0009019440000000017, 0.0009018330000000047, 0.000901806000000005, 0.0009018189999999981, 0.0009019589999999938, 0.0009020269999999997, 0.000902, 0.0009020419999999918, 0.0009019310000000086, 0.0009018469999999973, 0.0009018890000000029, 0.0009018890000000029, 0.0009020140000000065, 0.0009019579999999944, 0.0009017500000000067, 0.0009018609999999899, 0.0009019580000000083, 0.0009019439999999879, 0.0009018199999999976, 0.0009018339999999903, 0.0009018469999999973, 0.0009018889999999891, 0.0009019720000000009, 0.0009020420000000057, 0.0009020279999999992, 0.0009021389999999962, 0.000902, 0.0009018330000000047, 0.0009018750000000103, 0.0009019579999999944, 0.0009018890000000029, 0.0009019309999999947, 0.0009019029999999956, 0.000902, 0.0009019310000000225, 0.0009019579999999805, 0.0009018189999999981, 0.0009018749999999964, 0.000901806000000005, 0.0009019720000000009, 0.0009020269999999997, 0.0009019309999999947, 0.0009020409999999923]</msg>
<status status="PASS" starttime="20201030 18:32:23.014" endtime="20201030 18:32:23.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.003" endtime="20201030 18:32:23.020"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:23.031" endtime="20201030 18:32:23.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.025" endtime="20201030 18:32:23.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.023" endtime="20201030 18:32:23.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.425" endtime="20201030 18:32:23.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.424" endtime="20201030 18:32:23.057"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.079" endtime="20201030 18:32:23.195"></status>
</kw>
<msg timestamp="20201030 18:32:23.196" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:23.075" endtime="20201030 18:32:23.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.202" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:23.198" endtime="20201030 18:32:23.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.205" endtime="20201030 18:32:23.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.068" endtime="20201030 18:32:23.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.063" endtime="20201030 18:32:23.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.228" endtime="20201030 18:32:23.580"></status>
</kw>
<msg timestamp="20201030 18:32:23.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03745025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038376292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:23.225" endtime="20201030 18:32:23.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03745025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038376292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:23.589" endtime="20201030 18:32:23.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.606" endtime="20201030 18:32:23.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.218" endtime="20201030 18:32:23.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.213" endtime="20201030 18:32:23.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:23.622" level="INFO">${PHILIP_RES} = [{'diff': 0.0009260420000000019}, {'diff': 0.0009261389999999994}, {'diff': 0.0009263339999999939}, {'diff': 0.000926264000000003}, {'diff': 0.0009261669999999986}, {'diff': 0.0009260559999999946}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:23.615" endtime="20201030 18:32:23.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:23.632" level="INFO">${RESULT} = {'diff': [0.0009260420000000019, 0.0009261389999999994, 0.0009263339999999939, 0.000926264000000003, 0.0009261669999999986, 0.0009260559999999946, 0.0009261659999999991, 0.0009261670000000055, 0.00092...</msg>
<status status="PASS" starttime="20201030 18:32:23.624" endtime="20201030 18:32:23.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.643" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:23.640" endtime="20201030 18:32:23.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.648" level="INFO">VALUE: [0.0009260420000000019, 0.0009261389999999994, 0.0009263339999999939, 0.000926264000000003, 0.0009261669999999986, 0.0009260559999999946, 0.0009261659999999991, 0.0009261670000000055, 0.0009263610000000005, 0.0009263060000000017, 0.0009263190000000018, 0.0009262360000000039, 0.0009261939999999913, 0.0009262910000000096, 0.0009262639999999961, 0.0009263340000000009, 0.0009262639999999961, 0.0009265410000000029, 0.0009264030000000062, 0.0009262500000000035, 0.0009262920000000091, 0.0009264300000000059, 0.0009262780000000026, 0.0009261940000000052, 0.0009262079999999978, 0.0009262220000000043, 0.0009261670000000055, 0.0009262770000000031, 0.0009263470000000079, 0.0009262499999999896, 0.0009261669999999916, 0.0009263340000000009, 0.0009261670000000055, 0.0009261249999999999, 0.0009261519999999995, 0.0009261249999999999, 0.000926137999999993, 0.0009262220000000043, 0.0009262080000000117, 0.0009260560000000084, 0.0009259999999999963, 0.0009260700000000011, 0.0009260420000000158, 0.0009260969999999868, 0.0009261939999999913, 0.0009261109999999795, 0.000926041999999988, 0.0009262079999999839, 0.0009262909999999958, 0.0009263059999999879]</msg>
<status status="PASS" starttime="20201030 18:32:23.645" endtime="20201030 18:32:23.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.634" endtime="20201030 18:32:23.656"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:23.665" endtime="20201030 18:32:23.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.661" endtime="20201030 18:32:23.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.658" endtime="20201030 18:32:23.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.059" endtime="20201030 18:32:23.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.058" endtime="20201030 18:32:23.690"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.712" endtime="20201030 18:32:23.829"></status>
</kw>
<msg timestamp="20201030 18:32:23.831" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:23.708" endtime="20201030 18:32:23.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.837" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:23.833" endtime="20201030 18:32:23.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.839" endtime="20201030 18:32:23.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.701" endtime="20201030 18:32:23.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.696" endtime="20201030 18:32:23.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.862" endtime="20201030 18:32:24.201"></status>
</kw>
<msg timestamp="20201030 18:32:24.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036390972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037342472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:23.859" endtime="20201030 18:32:24.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036390972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037342472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:24.209" endtime="20201030 18:32:24.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.226" endtime="20201030 18:32:24.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.851" endtime="20201030 18:32:24.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.847" endtime="20201030 18:32:24.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:32:24.242" level="INFO">${PHILIP_RES} = [{'diff': 0.000951500000000001}, {'diff': 0.0009513199999999986}, {'diff': 0.0009514030000000034}, {'diff': 0.0009513749999999974}, {'diff': 0.0009515280000000001}, {'diff': 0.0009514730000000013}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:24.235" endtime="20201030 18:32:24.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:24.257" level="INFO">${RESULT} = {'diff': [0.000951500000000001, 0.0009513199999999986, 0.0009514030000000034, 0.0009513749999999974, 0.0009515280000000001, 0.0009514730000000013, 0.0009514590000000017, 0.0009515840000000053, 0.00095...</msg>
<status status="PASS" starttime="20201030 18:32:24.244" endtime="20201030 18:32:24.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.267" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 18:32:24.265" endtime="20201030 18:32:24.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.273" level="INFO">VALUE: [0.000951500000000001, 0.0009513199999999986, 0.0009514030000000034, 0.0009513749999999974, 0.0009515280000000001, 0.0009514730000000013, 0.0009514590000000017, 0.0009515840000000053, 0.0009516390000000041, 0.0009515559999999992, 0.0009516379999999977, 0.0009516249999999976, 0.0009517780000000003, 0.0009514719999999949, 0.0009515419999999997, 0.0009514590000000017, 0.0009514580000000022, 0.0009515419999999997, 0.0009515140000000005, 0.0009515549999999928, 0.0009514580000000022, 0.0009515410000000002, 0.0009516529999999968, 0.0009514590000000017, 0.0009514440000000096, 0.0009514719999999949, 0.0009513890000000108, 0.0009514309999999887, 0.0009513889999999969, 0.0009514449999999952, 0.0009514439999999957, 0.0009515559999999923, 0.0009515000000000079, 0.0009515550000000067, 0.0009514030000000034, 0.0009513470000000052, 0.0009515140000000005, 0.0009514160000000105, 0.0009514159999999966, 0.0009514440000000096, 0.0009513199999999916, 0.000951499999999994, 0.000951499999999994, 0.0009513889999999969, 0.0009514310000000026, 0.0009514029999999896, 0.0009512779999999998, 0.0009512640000000072, 0.0009512919999999925, 0.0009512080000000089]</msg>
<status status="PASS" starttime="20201030 18:32:24.270" endtime="20201030 18:32:24.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.259" endtime="20201030 18:32:24.276"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:24.285" endtime="20201030 18:32:24.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.281" endtime="20201030 18:32:24.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.278" endtime="20201030 18:32:24.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.692" endtime="20201030 18:32:24.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.691" endtime="20201030 18:32:24.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.650" endtime="20201030 18:32:24.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:24.320" endtime="20201030 18:32:24.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.316" endtime="20201030 18:32:24.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.313" endtime="20201030 18:32:24.344"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:53.404" endtime="20201030 18:32:24.345" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:31:22.600" endtime="20201030 18:32:24.368"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.544" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:32:24.560" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:32:26.547" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:32:24.541" endtime="20201030 18:32:26.549"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.554" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:32:26.551" endtime="20201030 18:32:26.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.538" endtime="20201030 18:32:26.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:26.561" endtime="20201030 18:32:26.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.558" endtime="20201030 18:32:26.893"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.922" endtime="20201030 18:32:26.938"></status>
</kw>
<msg timestamp="20201030 18:32:26.939" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.919" endtime="20201030 18:32:26.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.945" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.941" endtime="20201030 18:32:26.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.952" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:26.948" endtime="20201030 18:32:26.953"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:26.913" endtime="20201030 18:32:26.954"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:26.907" endtime="20201030 18:32:26.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.905" endtime="20201030 18:32:26.957"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:26.964" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:26.963" endtime="20201030 18:32:26.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.959" endtime="20201030 18:32:26.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.903" endtime="20201030 18:32:26.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.901" endtime="20201030 18:32:26.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.968" endtime="20201030 18:32:26.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.898" endtime="20201030 18:32:26.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.975" endtime="20201030 18:32:26.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.895" endtime="20201030 18:32:26.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.535" endtime="20201030 18:32:26.981"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:26.997" endtime="20201030 18:32:27.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.994" endtime="20201030 18:32:27.021"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.054" endtime="20201030 18:32:27.069"></status>
</kw>
<msg timestamp="20201030 18:32:27.070" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.050" endtime="20201030 18:32:27.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.076" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.072" endtime="20201030 18:32:27.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.083" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:27.079" endtime="20201030 18:32:27.083"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:27.043" endtime="20201030 18:32:27.085"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:27.037" endtime="20201030 18:32:27.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.034" endtime="20201030 18:32:27.087"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:27.095" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:27.094" endtime="20201030 18:32:27.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.089" endtime="20201030 18:32:27.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.032" endtime="20201030 18:32:27.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.031" endtime="20201030 18:32:27.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.099" endtime="20201030 18:32:27.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.027" endtime="20201030 18:32:27.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.022" endtime="20201030 18:32:27.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.989" endtime="20201030 18:32:27.106"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.130" endtime="20201030 18:32:27.149"></status>
</kw>
<msg timestamp="20201030 18:32:27.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.127" endtime="20201030 18:32:27.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.152" endtime="20201030 18:32:27.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.159" endtime="20201030 18:32:27.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.120" endtime="20201030 18:32:27.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.114" endtime="20201030 18:32:27.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.189" endtime="20201030 18:32:27.565"></status>
</kw>
<msg timestamp="20201030 18:32:27.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126164111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126203833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.185" endtime="20201030 18:32:27.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126164111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126203833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.575" endtime="20201030 18:32:27.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.594" endtime="20201030 18:32:27.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.176" endtime="20201030 18:32:27.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.170" endtime="20201030 18:32:27.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:27.612" level="INFO">${RESULT} = [{'diff': 3.972199999999204e-05}, {'diff': 4.054200000000452e-05}, {'diff': 4.062499999998859e-05}, {'diff': 4.048600000000624e-05}, {'diff': 4.036099999998877e-05}, {'diff': 3.9917000000000424e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:27.603" endtime="20201030 18:32:27.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:27.621" level="INFO">${ACCURACY} = {'diff': [3.972199999999204e-05, 4.054200000000452e-05, 4.062499999998859e-05, 4.048600000000624e-05, 4.036099999998877e-05, 3.9917000000000424e-05, 4.052699999998466e-05, 3.983299999998913e-05, 4.015...</msg>
<status status="PASS" starttime="20201030 18:32:27.614" endtime="20201030 18:32:27.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.632" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 18:32:27.630" endtime="20201030 18:32:27.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.638" level="INFO">VALUE: [3.972199999999204e-05, 4.054200000000452e-05, 4.062499999998859e-05, 4.048600000000624e-05, 4.036099999998877e-05, 3.9917000000000424e-05, 4.052699999998466e-05, 3.983299999998913e-05, 4.015299999998723e-05, 4.0181000000000244e-05, 3.9680999999985866e-05, 4.022200000000642e-05, 3.962500000001534e-05, 3.9972999999998704e-05, 3.8722999999990515e-05, 4.047200000001361e-05, 4.0138999999994596e-05, 3.980600000000334e-05, 3.873600000001143e-05, 4.0597000000003325e-05, 4.02780000000047e-05, 4.051400000001926e-05, 4.022299999997814e-05, 4.016600000000814e-05, 3.967999999998639e-05, 3.9597000000002325e-05, 4.0208999999985506e-05, 4.044400000000059e-05, 4.018000000000077e-05, 3.905599999998177e-05, 3.9861000000002145e-05, 4.047199999998585e-05, 3.975000000000506e-05, 4.0082999999996316e-05, 3.980599999997558e-05, 4.0541000000005045e-05, 4.048600000000624e-05, 4.031899999998312e-05, 3.888899999998641e-05, 4.008399999999579e-05, 3.962499999998759e-05, 3.9653000000000604e-05, 4.041600000001533e-05, 4.036100000001652e-05, 4.03749999999814e-05, 4.001400000000488e-05, 3.968100000001362e-05, 3.980600000000334e-05, 4.047200000001361e-05, 4.002799999999751e-05]</msg>
<status status="PASS" starttime="20201030 18:32:27.635" endtime="20201030 18:32:27.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.623" endtime="20201030 18:32:27.640"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:27.651" endtime="20201030 18:32:27.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.645" endtime="20201030 18:32:27.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.643" endtime="20201030 18:32:27.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.110" endtime="20201030 18:32:27.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.108" endtime="20201030 18:32:27.677"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.701" endtime="20201030 18:32:27.720"></status>
</kw>
<msg timestamp="20201030 18:32:27.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.698" endtime="20201030 18:32:27.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.723" endtime="20201030 18:32:27.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.730" endtime="20201030 18:32:27.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.689" endtime="20201030 18:32:27.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.683" endtime="20201030 18:32:27.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.754" endtime="20201030 18:32:28.112"></status>
</kw>
<msg timestamp="20201030 18:32:28.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041183528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041223681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.751" endtime="20201030 18:32:28.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041183528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041223681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.121" endtime="20201030 18:32:28.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.141" endtime="20201030 18:32:28.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.744" endtime="20201030 18:32:28.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.739" endtime="20201030 18:32:28.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:28.158" level="INFO">${RESULT} = [{'diff': 4.0153000000001104e-05}, {'diff': 3.9790999999997356e-05}, {'diff': 3.9875000000001715e-05}, {'diff': 4.0083000000003255e-05}, {'diff': 4.0417000000000924e-05}, {'diff': 3.9917000000000424e-...</msg>
<status status="PASS" starttime="20201030 18:32:28.149" endtime="20201030 18:32:28.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:28.169" level="INFO">${ACCURACY} = {'diff': [4.0153000000001104e-05, 3.9790999999997356e-05, 3.9875000000001715e-05, 4.0083000000003255e-05, 4.0417000000000924e-05, 3.9917000000000424e-05, 4.0110999999995456e-05, 4.0445000000000064e-05...</msg>
<status status="PASS" starttime="20201030 18:32:28.161" endtime="20201030 18:32:28.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.180" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 18:32:28.178" endtime="20201030 18:32:28.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.186" level="INFO">VALUE: [4.0153000000001104e-05, 3.9790999999997356e-05, 3.9875000000001715e-05, 4.0083000000003255e-05, 4.0417000000000924e-05, 3.9917000000000424e-05, 4.0110999999995456e-05, 4.0445000000000064e-05, 3.9722999999998454e-05, 4.011199999999493e-05, 4.022199999999948e-05, 4.0222999999998954e-05, 3.9847000000002575e-05, 3.872199999999798e-05, 3.979199999999683e-05, 4.0360999999995706e-05, 4.002799999999751e-05, 3.9818999999996496e-05, 4.002800000000445e-05, 3.9819000000003435e-05, 3.9903000000000854e-05, 4.052799999999801e-05, 3.972199999999898e-05, 3.993000000000052e-05, 4.001399999999794e-05, 3.907000000000216e-05, 3.8694999999998314e-05, 4.0097000000002825e-05, 3.965200000000113e-05, 4.015200000000163e-05, 3.9889000000001285e-05, 4.0318999999996996e-05, 4.0111000000002395e-05, 3.9930999999999994e-05, 4.026400000000513e-05, 4.0375000000002215e-05, 4.04859999999993e-05, 4.004199999999708e-05, 4.015200000000163e-05, 4.049999999999887e-05, 4.0361000000002645e-05, 3.9667000000000174e-05, 3.976399999999769e-05, 4.008399999999579e-05, 4.0458999999999634e-05, 3.970799999999941e-05, 3.96660000000007e-05, 4.04859999999993e-05, 3.957000000000266e-05, 4.058399999999629e-05]</msg>
<status status="PASS" starttime="20201030 18:32:28.183" endtime="20201030 18:32:28.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.171" endtime="20201030 18:32:28.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:28.198" endtime="20201030 18:32:28.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.194" endtime="20201030 18:32:28.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.191" endtime="20201030 18:32:28.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.679" endtime="20201030 18:32:28.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.678" endtime="20201030 18:32:28.223"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.249" endtime="20201030 18:32:28.270"></status>
</kw>
<msg timestamp="20201030 18:32:28.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.245" endtime="20201030 18:32:28.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.275" endtime="20201030 18:32:28.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.285" endtime="20201030 18:32:28.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.236" endtime="20201030 18:32:28.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.230" endtime="20201030 18:32:28.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.342" endtime="20201030 18:32:28.697"></status>
</kw>
<msg timestamp="20201030 18:32:28.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043235306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043275597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.336" endtime="20201030 18:32:28.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043235306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043275597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.707" endtime="20201030 18:32:28.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.725" endtime="20201030 18:32:28.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.326" endtime="20201030 18:32:28.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.306" endtime="20201030 18:32:28.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:28.742" level="INFO">${RESULT} = [{'diff': 4.0290999999997856e-05}, {'diff': 4.020900000000632e-05}, {'diff': 4.045800000000016e-05}, {'diff': 3.904199999999608e-05}, {'diff': 3.9653000000000604e-05}, {'diff': 4.0417000000000924e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:28.733" endtime="20201030 18:32:28.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:28.753" level="INFO">${ACCURACY} = {'diff': [4.0290999999997856e-05, 4.020900000000632e-05, 4.045800000000016e-05, 3.904199999999608e-05, 3.9653000000000604e-05, 4.0417000000000924e-05, 4.0402999999994416e-05, 4.051399999999844e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:32:28.744" endtime="20201030 18:32:28.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.769" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 18:32:28.762" endtime="20201030 18:32:28.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.782" level="INFO">VALUE: [4.0290999999997856e-05, 4.020900000000632e-05, 4.045800000000016e-05, 3.904199999999608e-05, 3.9653000000000604e-05, 4.0417000000000924e-05, 4.0402999999994416e-05, 4.051399999999844e-05, 4.034800000000255e-05, 4.0181000000000244e-05, 3.99859999999988e-05, 4.054200000000452e-05, 3.8875000000000715e-05, 4.023599999999905e-05, 3.9861000000002145e-05, 4.044400000000059e-05, 3.8861000000001145e-05, 4.015199999999469e-05, 3.9555000000003615e-05, 3.998700000000521e-05, 3.982000000000291e-05, 4.032000000000341e-05, 4.029199999999733e-05, 3.977799999999726e-05, 3.906999999999522e-05, 4.047199999999973e-05, 4.006999999999622e-05, 4.0596999999996386e-05, 3.8861000000001145e-05, 3.9652999999993666e-05, 3.999999999999837e-05, 3.9680999999999744e-05, 3.9889000000001285e-05, 3.997199999999923e-05, 4.0153000000001104e-05, 4.0389000000001785e-05, 3.977799999999726e-05, 4.0083000000003255e-05, 3.949999999999787e-05, 4.0375000000002215e-05, 3.976399999999769e-05, 4.049999999999887e-05, 4.0262999999998716e-05, 3.867999999999927e-05, 3.9068999999995746e-05, 3.9917000000000424e-05, 4.0346999999996136e-05, 3.976400000000463e-05, 4.019400000000034e-05, 4.045800000000016e-05]</msg>
<status status="PASS" starttime="20201030 18:32:28.774" endtime="20201030 18:32:28.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.755" endtime="20201030 18:32:28.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:28.801" endtime="20201030 18:32:28.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.796" endtime="20201030 18:32:28.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.793" endtime="20201030 18:32:28.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.225" endtime="20201030 18:32:28.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.224" endtime="20201030 18:32:28.828"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.858" endtime="20201030 18:32:28.877"></status>
</kw>
<msg timestamp="20201030 18:32:28.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.855" endtime="20201030 18:32:28.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.880" endtime="20201030 18:32:28.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.886" endtime="20201030 18:32:28.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.848" endtime="20201030 18:32:28.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.834" endtime="20201030 18:32:28.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.909" endtime="20201030 18:32:29.258"></status>
</kw>
<msg timestamp="20201030 18:32:29.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047048319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047088333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.906" endtime="20201030 18:32:29.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047048319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047088333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.267" endtime="20201030 18:32:29.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.286" endtime="20201030 18:32:29.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.899" endtime="20201030 18:32:29.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.894" endtime="20201030 18:32:29.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:29.303" level="INFO">${RESULT} = [{'diff': 4.001400000000488e-05}, {'diff': 4.024999999999862e-05}, {'diff': 3.979200000000377e-05}, {'diff': 3.9208999999998384e-05}, {'diff': 4.044400000000059e-05}, {'diff': 4.0319000000003935e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:29.294" endtime="20201030 18:32:29.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:29.312" level="INFO">${ACCURACY} = {'diff': [4.001400000000488e-05, 4.024999999999862e-05, 3.979200000000377e-05, 3.9208999999998384e-05, 4.044400000000059e-05, 4.0319000000003935e-05, 4.0597000000003325e-05, 3.9041000000003545e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:32:29.305" endtime="20201030 18:32:29.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.323" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 18:32:29.321" endtime="20201030 18:32:29.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.330" level="INFO">VALUE: [4.001400000000488e-05, 4.024999999999862e-05, 3.979200000000377e-05, 3.9208999999998384e-05, 4.044400000000059e-05, 4.0319000000003935e-05, 4.0597000000003325e-05, 3.9041000000003545e-05, 4.0082999999996316e-05, 3.9832999999996066e-05, 4.018000000000077e-05, 3.955600000000309e-05, 3.902800000000345e-05, 3.9639000000001035e-05, 4.045800000000016e-05, 4.0139000000001535e-05, 4.026399999999819e-05, 4.056999999999672e-05, 4.0167000000000674e-05, 4.047199999999973e-05, 4.0096999999995886e-05, 4.04859999999993e-05, 4.024999999999862e-05, 3.96660000000007e-05, 3.9610999999994956e-05, 3.922199999999848e-05, 3.965200000000113e-05, 4.0083000000003255e-05, 4.0583000000003755e-05, 4.0097000000002825e-05, 4.026400000000513e-05, 4.034799999999561e-05, 4.0361000000002645e-05, 4.0153000000001104e-05, 4.0153000000001104e-05, 4.004199999999708e-05, 4.0097000000002825e-05, 3.9597000000002325e-05, 3.999999999999837e-05, 4.045800000000016e-05, 3.995799999999966e-05, 3.976399999999769e-05, 4.026399999999819e-05, 4.022199999999948e-05, 4.0389000000001785e-05, 4.023599999999905e-05, 4.0347000000003075e-05, 4.0417000000000924e-05, 3.9861000000002145e-05, 3.994400000000009e-05]</msg>
<status status="PASS" starttime="20201030 18:32:29.325" endtime="20201030 18:32:29.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.314" endtime="20201030 18:32:29.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:29.346" endtime="20201030 18:32:29.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.341" endtime="20201030 18:32:29.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.337" endtime="20201030 18:32:29.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.830" endtime="20201030 18:32:29.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.829" endtime="20201030 18:32:29.376"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.398" endtime="20201030 18:32:29.417"></status>
</kw>
<msg timestamp="20201030 18:32:29.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.395" endtime="20201030 18:32:29.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.420" endtime="20201030 18:32:29.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.426" endtime="20201030 18:32:29.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.388" endtime="20201030 18:32:29.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.382" endtime="20201030 18:32:29.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.451" endtime="20201030 18:32:29.800"></status>
</kw>
<msg timestamp="20201030 18:32:29.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042609597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042649528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.448" endtime="20201030 18:32:29.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042609597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042649528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.809" endtime="20201030 18:32:29.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.828" endtime="20201030 18:32:29.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.440" endtime="20201030 18:32:29.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.436" endtime="20201030 18:32:29.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:29.845" level="INFO">${RESULT} = [{'diff': 3.9930999999999994e-05}, {'diff': 3.949999999999787e-05}, {'diff': 4.045800000000016e-05}, {'diff': 4.023599999999905e-05}, {'diff': 4.0347000000003075e-05}, {'diff': 4.0583000000003755e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:29.836" endtime="20201030 18:32:29.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:29.854" level="INFO">${ACCURACY} = {'diff': [3.9930999999999994e-05, 3.949999999999787e-05, 4.045800000000016e-05, 4.023599999999905e-05, 4.0347000000003075e-05, 4.0583000000003755e-05, 4.044400000000059e-05, 4.0153000000001104e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:32:29.847" endtime="20201030 18:32:29.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.865" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 18:32:29.862" endtime="20201030 18:32:29.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.870" level="INFO">VALUE: [3.9930999999999994e-05, 3.949999999999787e-05, 4.045800000000016e-05, 4.023599999999905e-05, 4.0347000000003075e-05, 4.0583000000003755e-05, 4.044400000000059e-05, 4.0153000000001104e-05, 4.0111000000002395e-05, 4.0361000000002645e-05, 3.968000000000027e-05, 4.0526999999998536e-05, 4.0125000000001965e-05, 3.9625000000001465e-05, 3.984800000000205e-05, 3.9972999999998704e-05, 4.03059999999969e-05, 3.9639000000001035e-05, 4.005599999999665e-05, 4.0082999999996316e-05, 4.008400000000273e-05, 4.004200000000402e-05, 3.982000000000291e-05, 3.998600000000574e-05, 4.054200000000452e-05, 3.9818999999996496e-05, 4.0347000000003075e-05, 3.905600000000259e-05, 4.02780000000047e-05, 4.033400000000298e-05, 3.9833000000003005e-05, 3.997199999999923e-05, 4.022199999999948e-05, 3.9625000000001465e-05, 4.0526999999998536e-05, 3.999999999999837e-05, 4.022199999999948e-05, 4.03059999999969e-05, 3.947199999999873e-05, 3.976399999999769e-05, 4.0153000000001104e-05, 3.998600000000574e-05, 4.044400000000059e-05, 3.997199999999923e-05, 4.0082999999996316e-05, 3.9832999999996066e-05, 4.0332999999996566e-05, 3.973599999999855e-05, 4.0125000000001965e-05, 3.872199999999798e-05]</msg>
<status status="PASS" starttime="20201030 18:32:29.867" endtime="20201030 18:32:29.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.856" endtime="20201030 18:32:29.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:29.884" endtime="20201030 18:32:29.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.878" endtime="20201030 18:32:29.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.875" endtime="20201030 18:32:29.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.378" endtime="20201030 18:32:29.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.377" endtime="20201030 18:32:29.909"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.931" endtime="20201030 18:32:29.949"></status>
</kw>
<msg timestamp="20201030 18:32:29.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.928" endtime="20201030 18:32:29.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.953" endtime="20201030 18:32:29.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.959" endtime="20201030 18:32:29.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.921" endtime="20201030 18:32:29.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.915" endtime="20201030 18:32:29.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.982" endtime="20201030 18:32:30.347"></status>
</kw>
<msg timestamp="20201030 18:32:30.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039266, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039306167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:29.979" endtime="20201030 18:32:30.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039266, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039306167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:30.356" endtime="20201030 18:32:30.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.375" endtime="20201030 18:32:30.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.972" endtime="20201030 18:32:30.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.967" endtime="20201030 18:32:30.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:30.393" level="INFO">${RESULT} = [{'diff': 4.0167000000000674e-05}, {'diff': 4.051399999999844e-05}, {'diff': 4.0375000000002215e-05}, {'diff': 3.976399999999769e-05}, {'diff': 4.0472999999999204e-05}, {'diff': 3.9596999999995386e-05...</msg>
<status status="PASS" starttime="20201030 18:32:30.384" endtime="20201030 18:32:30.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:30.404" level="INFO">${ACCURACY} = {'diff': [4.0167000000000674e-05, 4.051399999999844e-05, 4.0375000000002215e-05, 3.976399999999769e-05, 4.0472999999999204e-05, 3.9596999999995386e-05, 4.024999999999862e-05, 3.997300000000564e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:32:30.395" endtime="20201030 18:32:30.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.415" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 18:32:30.413" endtime="20201030 18:32:30.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.421" level="INFO">VALUE: [4.0167000000000674e-05, 4.051399999999844e-05, 4.0375000000002215e-05, 3.976399999999769e-05, 4.0472999999999204e-05, 3.9596999999995386e-05, 4.024999999999862e-05, 3.997300000000564e-05, 4.033400000000298e-05, 3.9055000000003115e-05, 4.0361000000002645e-05, 3.9861000000002145e-05, 4.027799999999776e-05, 3.997199999999923e-05, 4.0040999999997606e-05, 3.979200000000377e-05, 4.051399999999844e-05, 4.051399999999844e-05, 3.973599999999855e-05, 4.0388999999994846e-05, 4.0416999999993986e-05, 3.999999999999837e-05, 4.055599999999715e-05, 4.0596999999996386e-05, 4.0153000000001104e-05, 4.047199999999973e-05, 4.044400000000059e-05, 4.0111000000002395e-05, 4.0583000000003755e-05, 4.0054999999997176e-05, 3.872199999999798e-05, 4.0375000000002215e-05, 3.873599999999755e-05, 4.0389000000001785e-05, 3.9611000000001895e-05, 3.976399999999769e-05, 3.9639000000001035e-05, 4.0582999999996816e-05, 3.997199999999923e-05, 4.041600000000145e-05, 3.9790999999997356e-05, 4.0040999999997606e-05, 4.022199999999948e-05, 3.901399999999694e-05, 3.998600000000574e-05, 3.9527000000004475e-05, 4.0082999999996316e-05, 3.968100000000668e-05, 3.9653000000000604e-05, 3.872199999999798e-05]</msg>
<status status="PASS" starttime="20201030 18:32:30.417" endtime="20201030 18:32:30.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.406" endtime="20201030 18:32:30.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:30.433" endtime="20201030 18:32:30.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.429" endtime="20201030 18:32:30.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.426" endtime="20201030 18:32:30.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.911" endtime="20201030 18:32:30.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.910" endtime="20201030 18:32:30.459"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.482" endtime="20201030 18:32:30.501"></status>
</kw>
<msg timestamp="20201030 18:32:30.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.478" endtime="20201030 18:32:30.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.504" endtime="20201030 18:32:30.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.510" endtime="20201030 18:32:30.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.471" endtime="20201030 18:32:30.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.465" endtime="20201030 18:32:30.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.535" endtime="20201030 18:32:30.889"></status>
</kw>
<msg timestamp="20201030 18:32:30.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040213292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040253028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.531" endtime="20201030 18:32:30.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040213292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040253028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.898" endtime="20201030 18:32:30.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.917" endtime="20201030 18:32:30.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.524" endtime="20201030 18:32:30.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.519" endtime="20201030 18:32:30.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:30.935" level="INFO">${RESULT} = [{'diff': 3.973600000000549e-05}, {'diff': 3.907000000000216e-05}, {'diff': 4.04859999999993e-05}, {'diff': 4.031999999999647e-05}, {'diff': 3.9930999999999994e-05}, {'diff': 4.001400000000488e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:30.926" endtime="20201030 18:32:30.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:30.949" level="INFO">${ACCURACY} = {'diff': [3.973600000000549e-05, 3.907000000000216e-05, 4.04859999999993e-05, 4.031999999999647e-05, 3.9930999999999994e-05, 4.001400000000488e-05, 3.980600000000334e-05, 4.0012999999998466e-05, 4.002...</msg>
<status status="PASS" starttime="20201030 18:32:30.937" endtime="20201030 18:32:30.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.960" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 18:32:30.958" endtime="20201030 18:32:30.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.966" level="INFO">VALUE: [3.973600000000549e-05, 3.907000000000216e-05, 4.04859999999993e-05, 4.031999999999647e-05, 3.9930999999999994e-05, 4.001400000000488e-05, 3.980600000000334e-05, 4.0012999999998466e-05, 4.002799999999751e-05, 3.9860999999995206e-05, 4.033399999999604e-05, 4.001400000000488e-05, 3.9944999999999564e-05, 3.982000000000291e-05, 3.9055000000003115e-05, 3.9875000000001715e-05, 3.965200000000113e-05, 3.873600000000449e-05, 3.9611000000001895e-05, 3.9667000000000174e-05, 4.0152999999994166e-05, 3.9667000000000174e-05, 3.9639000000001035e-05, 4.00980000000023e-05, 3.982000000000291e-05, 4.036200000000212e-05, 4.0611000000002895e-05, 4.015200000000163e-05, 3.999999999999837e-05, 4.0304999999997426e-05, 4.0125000000001965e-05, 4.018000000000077e-05, 3.9568999999996246e-05, 3.99859999999988e-05, 4.0277000000005225e-05, 3.993000000000052e-05, 3.9805000000003865e-05, 3.96660000000007e-05, 4.0569000000004185e-05, 3.994400000000009e-05, 4.008400000000273e-05, 4.005600000000359e-05, 3.907000000000216e-05, 4.027799999999776e-05, 3.9832999999996066e-05, 4.005600000000359e-05, 4.0332999999996566e-05, 4.0347000000003075e-05, 4.0082999999996316e-05, 4.049999999999887e-05]</msg>
<status status="PASS" starttime="20201030 18:32:30.963" endtime="20201030 18:32:30.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.951" endtime="20201030 18:32:30.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:30.979" endtime="20201030 18:32:31.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.974" endtime="20201030 18:32:31.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.971" endtime="20201030 18:32:31.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.461" endtime="20201030 18:32:31.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.460" endtime="20201030 18:32:31.004"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.027" endtime="20201030 18:32:31.046"></status>
</kw>
<msg timestamp="20201030 18:32:31.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.024" endtime="20201030 18:32:31.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.049" endtime="20201030 18:32:31.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.056" endtime="20201030 18:32:31.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.016" endtime="20201030 18:32:31.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.011" endtime="20201030 18:32:31.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.079" endtime="20201030 18:32:31.430"></status>
</kw>
<msg timestamp="20201030 18:32:31.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040192819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040233139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.076" endtime="20201030 18:32:31.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040192819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040233139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.440" endtime="20201030 18:32:31.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.460" endtime="20201030 18:32:31.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.069" endtime="20201030 18:32:31.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.064" endtime="20201030 18:32:31.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:31.477" level="INFO">${RESULT} = [{'diff': 4.032000000000341e-05}, {'diff': 3.980600000000334e-05}, {'diff': 4.0125000000001965e-05}, {'diff': 4.0041000000004545e-05}, {'diff': 3.8875000000000715e-05}, {'diff': 3.97780000000042e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:31.468" endtime="20201030 18:32:31.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:31.486" level="INFO">${ACCURACY} = {'diff': [4.032000000000341e-05, 3.980600000000334e-05, 4.0125000000001965e-05, 4.0041000000004545e-05, 3.8875000000000715e-05, 3.97780000000042e-05, 3.995799999999966e-05, 4.049999999999887e-05, 4.02...</msg>
<status status="PASS" starttime="20201030 18:32:31.479" endtime="20201030 18:32:31.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.497" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 18:32:31.495" endtime="20201030 18:32:31.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.503" level="INFO">VALUE: [4.032000000000341e-05, 3.980600000000334e-05, 4.0125000000001965e-05, 4.0041000000004545e-05, 3.8875000000000715e-05, 3.97780000000042e-05, 3.995799999999966e-05, 4.049999999999887e-05, 4.026399999999819e-05, 3.997199999999923e-05, 4.0139000000001535e-05, 3.9832999999996066e-05, 4.022199999999948e-05, 4.0167000000000674e-05, 4.004199999999708e-05, 3.958399999999529e-05, 4.0445000000000064e-05, 4.008400000000273e-05, 3.9667000000000174e-05, 4.030600000000384e-05, 4.045900000000657e-05, 4.0597000000003325e-05, 4.000000000000531e-05, 4.0569000000004185e-05, 3.9805000000003865e-05, 4.000000000000531e-05, 3.9639000000001035e-05, 4.0194999999999814e-05, 3.999999999999837e-05, 4.031999999999647e-05, 4.0611000000002895e-05, 3.977799999999726e-05, 4.045800000000016e-05, 4.020800000000685e-05, 4.0389000000001785e-05, 3.977799999999726e-05, 3.879200000000277e-05, 4.045800000000016e-05, 4.04859999999993e-05, 4.054199999999758e-05, 4.0167000000000674e-05, 3.976400000000463e-05, 3.9861000000002145e-05, 3.9819000000003435e-05, 4.03059999999969e-05, 4.0319000000003935e-05, 3.9625000000001465e-05, 4.029199999999733e-05, 3.9818999999996496e-05, 4.0431000000000494e-05]</msg>
<status status="PASS" starttime="20201030 18:32:31.500" endtime="20201030 18:32:31.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.488" endtime="20201030 18:32:31.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:31.516" endtime="20201030 18:32:31.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.512" endtime="20201030 18:32:31.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.509" endtime="20201030 18:32:31.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.006" endtime="20201030 18:32:31.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.005" endtime="20201030 18:32:31.542"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.568" endtime="20201030 18:32:31.587"></status>
</kw>
<msg timestamp="20201030 18:32:31.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.565" endtime="20201030 18:32:31.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.591" endtime="20201030 18:32:31.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.597" endtime="20201030 18:32:31.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.557" endtime="20201030 18:32:31.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.551" endtime="20201030 18:32:31.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.623" endtime="20201030 18:32:31.977"></status>
</kw>
<msg timestamp="20201030 18:32:31.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044160014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044199597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.619" endtime="20201030 18:32:31.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044160014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044199597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.987" endtime="20201030 18:32:32.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.006" endtime="20201030 18:32:32.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.612" endtime="20201030 18:32:32.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.607" endtime="20201030 18:32:32.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:32.024" level="INFO">${RESULT} = [{'diff': 3.9583000000002755e-05}, {'diff': 3.923599999999805e-05}, {'diff': 3.908400000000173e-05}, {'diff': 3.9597000000002325e-05}, {'diff': 3.980600000000334e-05}, {'diff': 3.9944999999999564e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:32.015" endtime="20201030 18:32:32.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:32.034" level="INFO">${ACCURACY} = {'diff': [3.9583000000002755e-05, 3.923599999999805e-05, 3.908400000000173e-05, 3.9597000000002325e-05, 3.980600000000334e-05, 3.9944999999999564e-05, 4.047199999999973e-05, 3.9986999999998274e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:32:32.026" endtime="20201030 18:32:32.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.044" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 18:32:32.042" endtime="20201030 18:32:32.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.050" level="INFO">VALUE: [3.9583000000002755e-05, 3.923599999999805e-05, 3.908400000000173e-05, 3.9597000000002325e-05, 3.980600000000334e-05, 3.9944999999999564e-05, 4.047199999999973e-05, 3.9986999999998274e-05, 4.047199999999973e-05, 4.002800000000445e-05, 4.045800000000016e-05, 3.99859999999988e-05, 4.029199999999733e-05, 4.020800000000685e-05, 3.870799999999841e-05, 4.02780000000047e-05, 3.9611000000001895e-05, 4.0611000000002895e-05, 4.019400000000034e-05, 4.0360999999995706e-05, 4.004200000000402e-05, 4.0347000000003075e-05, 4.049999999999887e-05, 4.031999999999647e-05, 3.8861000000001145e-05, 3.9680999999999744e-05, 3.9625000000001465e-05, 4.031999999999647e-05, 4.0319000000003935e-05, 3.9653000000000604e-05, 4.0610999999995956e-05, 4.0167000000000674e-05, 3.907000000000216e-05, 4.006999999999622e-05, 4.0304999999997426e-05, 4.044400000000059e-05, 3.9624999999994526e-05, 3.873599999999755e-05, 3.9667000000000174e-05, 3.977799999999726e-05, 3.9847000000002575e-05, 3.905600000000259e-05, 3.890200000000038e-05, 3.9805000000003865e-05, 4.041600000000145e-05, 4.0153000000001104e-05, 4.0347000000003075e-05, 4.0360999999995706e-05, 4.0180999999993305e-05, 4.03059999999969e-05]</msg>
<status status="PASS" starttime="20201030 18:32:32.047" endtime="20201030 18:32:32.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.035" endtime="20201030 18:32:32.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:32.064" endtime="20201030 18:32:32.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.058" endtime="20201030 18:32:32.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.056" endtime="20201030 18:32:32.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.545" endtime="20201030 18:32:32.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.544" endtime="20201030 18:32:32.090"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.113" endtime="20201030 18:32:32.132"></status>
</kw>
<msg timestamp="20201030 18:32:32.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.109" endtime="20201030 18:32:32.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.135" endtime="20201030 18:32:32.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.142" endtime="20201030 18:32:32.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.102" endtime="20201030 18:32:32.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.096" endtime="20201030 18:32:32.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.165" endtime="20201030 18:32:32.515"></status>
</kw>
<msg timestamp="20201030 18:32:32.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040139389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040179042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:32.162" endtime="20201030 18:32:32.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040139389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040179042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:32.525" endtime="20201030 18:32:32.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.544" endtime="20201030 18:32:32.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.155" endtime="20201030 18:32:32.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.150" endtime="20201030 18:32:32.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:32.562" level="INFO">${RESULT} = [{'diff': 3.9653000000000604e-05}, {'diff': 4.031999999999647e-05}, {'diff': 4.0596999999996386e-05}, {'diff': 4.001399999999794e-05}, {'diff': 4.0361000000002645e-05}, {'diff': 3.955599999999615e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:32.553" endtime="20201030 18:32:32.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:32.572" level="INFO">${ACCURACY} = {'diff': [3.9653000000000604e-05, 4.031999999999647e-05, 4.0596999999996386e-05, 4.001399999999794e-05, 4.0361000000002645e-05, 3.955599999999615e-05, 3.997199999999923e-05, 4.03059999999969e-05, 4.01...</msg>
<status status="PASS" starttime="20201030 18:32:32.564" endtime="20201030 18:32:32.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.586" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 18:32:32.582" endtime="20201030 18:32:32.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.593" level="INFO">VALUE: [3.9653000000000604e-05, 4.031999999999647e-05, 4.0596999999996386e-05, 4.001399999999794e-05, 4.0361000000002645e-05, 3.955599999999615e-05, 3.997199999999923e-05, 4.03059999999969e-05, 4.0152999999994166e-05, 3.9958999999999134e-05, 3.904200000000302e-05, 3.9653000000000604e-05, 3.9861000000002145e-05, 3.9540999999997106e-05, 4.01660000000012e-05, 4.0319000000003935e-05, 4.023599999999905e-05, 3.976400000000463e-05, 3.969399999999984e-05, 4.001399999999794e-05, 3.872200000000492e-05, 3.979199999999683e-05, 3.984800000000205e-05, 4.0181000000000244e-05, 3.952800000000395e-05, 4.0347000000003075e-05, 4.0305000000004365e-05, 3.8639000000000034e-05, 4.005599999999665e-05, 3.99859999999988e-05, 4.0568999999997246e-05, 4.047199999999973e-05, 4.055599999999715e-05, 3.994400000000009e-05, 3.997199999999923e-05, 4.0472999999999204e-05, 4.0417000000000924e-05, 3.997199999999923e-05, 4.032000000000341e-05, 4.023600000000599e-05, 4.0124999999995026e-05, 4.025000000000556e-05, 4.02780000000047e-05, 4.026399999999819e-05, 4.0139000000001535e-05, 3.8875000000000715e-05, 4.0096999999995886e-05, 3.9388999999993846e-05, 3.995799999999966e-05, 3.9903000000000854e-05]</msg>
<status status="PASS" starttime="20201030 18:32:32.589" endtime="20201030 18:32:32.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.574" endtime="20201030 18:32:32.596"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:32.606" endtime="20201030 18:32:32.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.602" endtime="20201030 18:32:32.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.599" endtime="20201030 18:32:32.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.092" endtime="20201030 18:32:32.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.091" endtime="20201030 18:32:32.632"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.655" endtime="20201030 18:32:32.674"></status>
</kw>
<msg timestamp="20201030 18:32:32.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.652" endtime="20201030 18:32:32.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.678" endtime="20201030 18:32:32.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.684" endtime="20201030 18:32:32.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.644" endtime="20201030 18:32:32.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.639" endtime="20201030 18:32:32.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.708" endtime="20201030 18:32:33.061"></status>
</kw>
<msg timestamp="20201030 18:32:33.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040430861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040470569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:32.704" endtime="20201030 18:32:33.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040430861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040470569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:33.071" endtime="20201030 18:32:33.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.090" endtime="20201030 18:32:33.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.697" endtime="20201030 18:32:33.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.692" endtime="20201030 18:32:33.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:33.107" level="INFO">${RESULT} = [{'diff': 3.970799999999941e-05}, {'diff': 4.097200000000023e-05}, {'diff': 4.144400000000159e-05}, {'diff': 4.102799999999851e-05}, {'diff': 4.123600000000005e-05}, {'diff': 3.9875000000001715e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:33.098" endtime="20201030 18:32:33.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:33.119" level="INFO">${ACCURACY} = {'diff': [3.970799999999941e-05, 4.097200000000023e-05, 4.144400000000159e-05, 4.102799999999851e-05, 4.123600000000005e-05, 3.9875000000001715e-05, 4.0040999999997606e-05, 4.0790999999998356e-05, 4.0...</msg>
<status status="PASS" starttime="20201030 18:32:33.110" endtime="20201030 18:32:33.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.130" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 18:32:33.127" endtime="20201030 18:32:33.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.135" level="INFO">VALUE: [3.970799999999941e-05, 4.097200000000023e-05, 4.144400000000159e-05, 4.102799999999851e-05, 4.123600000000005e-05, 3.9875000000001715e-05, 4.0040999999997606e-05, 4.0790999999998356e-05, 4.082000000000391e-05, 4.147200000000073e-05, 4.119400000000134e-05, 4.0917000000001424e-05, 4.1374999999996276e-05, 4.1152999999995166e-05, 4.0916999999994486e-05, 4.1459000000000634e-05, 4.13059999999979e-05, 4.069400000000084e-05, 4.1290999999998856e-05, 4.131999999999747e-05, 4.0959000000000134e-05, 4.124999999999962e-05, 4.1139000000002535e-05, 4.1139000000002535e-05, 4.151399999999944e-05, 4.074999999999912e-05, 3.9874999999994776e-05, 4.152799999999901e-05, 4.008399999999579e-05, 4.0860999999996206e-05, 3.984799999999511e-05, 4.072199999999998e-05, 4.141600000000245e-05, 4.115200000000263e-05, 4.119400000000134e-05, 3.972199999999898e-05, 4.126399999999919e-05, 4.1417000000001924e-05, 4.102799999999851e-05, 4.0389000000001785e-05, 4.1596999999997386e-05, 4.1209000000000384e-05, 4.0375000000002215e-05, 4.094400000000109e-05, 4.1540999999999106e-05, 4.123600000000005e-05, 4.1403000000002355e-05, 4.132000000000441e-05, 4.082000000000391e-05, 4.024999999999862e-05]</msg>
<status status="PASS" starttime="20201030 18:32:33.132" endtime="20201030 18:32:33.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.121" endtime="20201030 18:32:33.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:33.148" endtime="20201030 18:32:33.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.144" endtime="20201030 18:32:33.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.141" endtime="20201030 18:32:33.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.634" endtime="20201030 18:32:33.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.633" endtime="20201030 18:32:33.173"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.197" endtime="20201030 18:32:33.216"></status>
</kw>
<msg timestamp="20201030 18:32:33.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:33.193" endtime="20201030 18:32:33.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:33.219" endtime="20201030 18:32:33.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.226" endtime="20201030 18:32:33.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.186" endtime="20201030 18:32:33.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.180" endtime="20201030 18:32:33.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.249" endtime="20201030 18:32:33.601"></status>
</kw>
<msg timestamp="20201030 18:32:33.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040407708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040449514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:33.246" endtime="20201030 18:32:33.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040407708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040449514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:33.611" endtime="20201030 18:32:33.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.630" endtime="20201030 18:32:33.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.239" endtime="20201030 18:32:33.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.234" endtime="20201030 18:32:33.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:33.649" level="INFO">${RESULT} = [{'diff': 4.18059999999984e-05}, {'diff': 4.225000000000062e-05}, {'diff': 4.209799999999736e-05}, {'diff': 4.16660000000027e-05}, {'diff': 4.194400000000209e-05}, {'diff': 4.226400000000019e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:33.639" endtime="20201030 18:32:33.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:33.658" level="INFO">${ACCURACY} = {'diff': [4.18059999999984e-05, 4.225000000000062e-05, 4.209799999999736e-05, 4.16660000000027e-05, 4.194400000000209e-05, 4.226400000000019e-05, 4.202799999999951e-05, 4.2083000000005255e-05, 4.23749...</msg>
<status status="PASS" starttime="20201030 18:32:33.651" endtime="20201030 18:32:33.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.670" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 18:32:33.667" endtime="20201030 18:32:33.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.675" level="INFO">VALUE: [4.18059999999984e-05, 4.225000000000062e-05, 4.209799999999736e-05, 4.16660000000027e-05, 4.194400000000209e-05, 4.226400000000019e-05, 4.202799999999951e-05, 4.2083000000005255e-05, 4.2374999999997276e-05, 4.1638999999996096e-05, 4.106999999999722e-05, 4.197200000000123e-05, 4.252800000000001e-05, 4.2237000000000524e-05, 4.250000000000087e-05, 4.2223000000000954e-05, 4.2333000000005505e-05, 4.2388999999996846e-05, 4.16660000000027e-05, 4.1554999999998676e-05, 4.168000000000227e-05, 4.2430999999995556e-05, 4.2124999999997026e-05, 4.226400000000019e-05, 4.2374999999997276e-05, 4.251400000000044e-05, 4.169400000000184e-05, 4.2346999999998136e-05, 4.177799999999926e-05, 4.122200000000048e-05, 4.2153000000003105e-05, 4.179199999999883e-05, 4.2554999999999676e-05, 4.1374999999996276e-05, 4.244400000000259e-05, 4.19860000000008e-05, 4.2181000000002244e-05, 4.207000000000516e-05, 4.1930999999995056e-05, 4.167999999999533e-05, 4.21660000000032e-05, 4.1791000000006295e-05, 4.1082999999997316e-05, 4.251400000000044e-05, 4.208399999999779e-05, 4.131999999999747e-05, 4.2110999999997456e-05, 4.2110999999997456e-05, 4.2152999999996166e-05, 4.2360999999997706e-05]</msg>
<status status="PASS" starttime="20201030 18:32:33.672" endtime="20201030 18:32:33.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.660" endtime="20201030 18:32:33.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:33.688" endtime="20201030 18:32:33.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.683" endtime="20201030 18:32:33.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.681" endtime="20201030 18:32:33.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.175" endtime="20201030 18:32:33.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.174" endtime="20201030 18:32:33.713"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.736" endtime="20201030 18:32:33.756"></status>
</kw>
<msg timestamp="20201030 18:32:33.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:33.733" endtime="20201030 18:32:33.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:33.759" endtime="20201030 18:32:33.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.766" endtime="20201030 18:32:33.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.726" endtime="20201030 18:32:33.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.720" endtime="20201030 18:32:33.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.789" endtime="20201030 18:32:34.128"></status>
</kw>
<msg timestamp="20201030 18:32:34.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040225028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040268514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:33.786" endtime="20201030 18:32:34.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040225028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040268514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:34.138" endtime="20201030 18:32:34.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.157" endtime="20201030 18:32:34.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.779" endtime="20201030 18:32:34.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.774" endtime="20201030 18:32:34.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:34.174" level="INFO">${RESULT} = [{'diff': 4.348599999999536e-05}, {'diff': 4.254199999999958e-05}, {'diff': 4.3181000000003245e-05}, {'diff': 4.3347000000006075e-05}, {'diff': 4.3180999999996306e-05}, {'diff': 4.34860000000023e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:34.165" endtime="20201030 18:32:34.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:34.183" level="INFO">${ACCURACY} = {'diff': [4.348599999999536e-05, 4.254199999999958e-05, 4.3181000000003245e-05, 4.3347000000006075e-05, 4.3180999999996306e-05, 4.34860000000023e-05, 4.2944999999995626e-05, 4.254199999999958e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 18:32:34.176" endtime="20201030 18:32:34.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.194" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 18:32:34.192" endtime="20201030 18:32:34.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.201" level="INFO">VALUE: [4.348599999999536e-05, 4.254199999999958e-05, 4.3181000000003245e-05, 4.3347000000006075e-05, 4.3180999999996306e-05, 4.34860000000023e-05, 4.2944999999995626e-05, 4.254199999999958e-05, 4.3388999999997846e-05, 4.273600000000155e-05, 4.286199999999768e-05, 4.3111000000005395e-05, 4.299999999999443e-05, 4.2652999999996666e-05, 4.327800000000076e-05, 4.2625000000004465e-05, 4.308399999999879e-05, 4.352799999999407e-05, 4.3110999999998456e-05, 4.263799999999762e-05, 4.3346999999999136e-05, 4.2054999999999176e-05, 4.3097000000005825e-05, 4.2832999999999066e-05, 4.222200000000148e-05, 4.3068999999999746e-05, 4.2903000000003855e-05, 4.322199999999554e-05, 4.3096999999998886e-05, 4.3374999999998276e-05, 4.3096999999998886e-05, 4.341600000000445e-05, 4.3305000000000426e-05, 4.3582999999999816e-05, 4.345800000000316e-05, 4.3361000000005645e-05, 4.222200000000148e-05, 4.2681000000002745e-05, 4.2945000000002564e-05, 4.2694999999995376e-05, 4.3596999999999386e-05, 4.1902999999995916e-05, 4.2681000000002745e-05, 4.331999999999947e-05, 4.304200000000008e-05, 4.34860000000023e-05, 4.341600000000445e-05, 4.291599999999701e-05, 4.268000000000327e-05, 4.279199999999983e-05]</msg>
<status status="PASS" starttime="20201030 18:32:34.197" endtime="20201030 18:32:34.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.185" endtime="20201030 18:32:34.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:34.219" endtime="20201030 18:32:34.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.211" endtime="20201030 18:32:34.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.208" endtime="20201030 18:32:34.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.715" endtime="20201030 18:32:34.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.714" endtime="20201030 18:32:34.250"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.276" endtime="20201030 18:32:34.295"></status>
</kw>
<msg timestamp="20201030 18:32:34.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:34.272" endtime="20201030 18:32:34.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:34.298" endtime="20201030 18:32:34.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.305" endtime="20201030 18:32:34.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.265" endtime="20201030 18:32:34.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.258" endtime="20201030 18:32:34.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.329" endtime="20201030 18:32:34.712"></status>
</kw>
<msg timestamp="20201030 18:32:34.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048653583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048697264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:34.325" endtime="20201030 18:32:34.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048653583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048697264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:34.722" endtime="20201030 18:32:34.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.741" endtime="20201030 18:32:34.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.318" endtime="20201030 18:32:34.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.313" endtime="20201030 18:32:34.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:34.758" level="INFO">${RESULT} = [{'diff': 4.3680999999996806e-05}, {'diff': 4.3666999999997236e-05}, {'diff': 4.3624999999998526e-05}, {'diff': 4.273600000000155e-05}, {'diff': 4.354099999999417e-05}, {'diff': 4.422200000000348e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:34.749" endtime="20201030 18:32:34.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:34.769" level="INFO">${ACCURACY} = {'diff': [4.3680999999996806e-05, 4.3666999999997236e-05, 4.3624999999998526e-05, 4.273600000000155e-05, 4.354099999999417e-05, 4.422200000000348e-05, 4.427800000000176e-05, 4.376400000000169e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 18:32:34.760" endtime="20201030 18:32:34.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.780" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 18:32:34.778" endtime="20201030 18:32:34.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.786" level="INFO">VALUE: [4.3680999999996806e-05, 4.3666999999997236e-05, 4.3624999999998526e-05, 4.273600000000155e-05, 4.354099999999417e-05, 4.422200000000348e-05, 4.427800000000176e-05, 4.376400000000169e-05, 4.425000000000262e-05, 4.449999999999593e-05, 4.455600000000115e-05, 4.447199999999679e-05, 4.408399999999979e-05, 4.445799999999722e-05, 4.3846999999999636e-05, 4.400000000000237e-05, 4.399999999999543e-05, 4.39860000000028e-05, 4.436199999999918e-05, 4.419400000000434e-05, 4.3819000000000496e-05, 4.3860999999999206e-05, 4.422199999999654e-05, 4.4473000000003204e-05, 4.429100000000186e-05, 4.375000000000212e-05, 4.419400000000434e-05, 4.441599999999851e-05, 4.275000000000112e-05, 4.418000000000477e-05, 4.3610999999998956e-05, 4.427800000000176e-05, 4.432000000000047e-05, 4.3638999999998096e-05, 4.2737000000001024e-05, 4.4013999999995e-05, 4.3819000000000496e-05, 4.3638999999998096e-05, 4.4417000000004925e-05, 4.457000000000072e-05, 4.4459000000003635e-05, 4.422199999999654e-05, 4.419400000000434e-05, 4.3652999999997666e-05, 4.377799999999432e-05, 4.4181000000004245e-05, 4.424999999999568e-05, 4.458400000000029e-05, 4.3237000000001524e-05, 4.381999999999997e-05]</msg>
<status status="PASS" starttime="20201030 18:32:34.783" endtime="20201030 18:32:34.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.771" endtime="20201030 18:32:34.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:34.799" endtime="20201030 18:32:34.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.794" endtime="20201030 18:32:34.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.792" endtime="20201030 18:32:34.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.253" endtime="20201030 18:32:34.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.251" endtime="20201030 18:32:34.824"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.847" endtime="20201030 18:32:34.866"></status>
</kw>
<msg timestamp="20201030 18:32:34.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:34.844" endtime="20201030 18:32:34.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:34.870" endtime="20201030 18:32:34.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.876" endtime="20201030 18:32:34.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.836" endtime="20201030 18:32:34.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.831" endtime="20201030 18:32:34.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.900" endtime="20201030 18:32:35.249"></status>
</kw>
<msg timestamp="20201030 18:32:35.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040193583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040238528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:34.897" endtime="20201030 18:32:35.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040193583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040238528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:35.258" endtime="20201030 18:32:35.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.277" endtime="20201030 18:32:35.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.889" endtime="20201030 18:32:35.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.885" endtime="20201030 18:32:35.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:35.295" level="INFO">${RESULT} = [{'diff': 4.4945000000004565e-05}, {'diff': 4.5416999999998986e-05}, {'diff': 4.556899999999531e-05}, {'diff': 4.4666999999998236e-05}, {'diff': 4.451400000000244e-05}, {'diff': 4.523599999999711e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:35.286" endtime="20201030 18:32:35.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:35.307" level="INFO">${ACCURACY} = {'diff': [4.4945000000004565e-05, 4.5416999999998986e-05, 4.556899999999531e-05, 4.4666999999998236e-05, 4.451400000000244e-05, 4.523599999999711e-05, 4.49860000000038e-05, 4.5180999999998306e-05, 4.5...</msg>
<status status="PASS" starttime="20201030 18:32:35.297" endtime="20201030 18:32:35.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.318" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 18:32:35.316" endtime="20201030 18:32:35.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.323" level="INFO">VALUE: [4.4945000000004565e-05, 4.5416999999998986e-05, 4.556899999999531e-05, 4.4666999999998236e-05, 4.451400000000244e-05, 4.523599999999711e-05, 4.49860000000038e-05, 4.5180999999998306e-05, 4.5166999999998736e-05, 4.500000000000337e-05, 4.527800000000276e-05, 4.4597000000000386e-05, 4.470800000000441e-05, 4.5083000000001316e-05, 4.4681000000004745e-05, 4.547200000000473e-05, 4.517999999999883e-05, 4.3875000000005715e-05, 4.492999999999858e-05, 4.4610999999999956e-05, 4.550000000000387e-05, 4.5583000000001817e-05, 4.467999999999833e-05, 4.405499999999424e-05, 4.466599999999876e-05, 4.3902999999997916e-05, 4.4096999999999886e-05, 4.470799999999747e-05, 4.454100000000211e-05, 4.515199999999969e-05, 4.5111000000000456e-05, 4.505500000000218e-05, 4.477800000000226e-05, 4.5333000000001566e-05, 4.476399999999575e-05, 4.5166999999998736e-05, 4.5111000000000456e-05, 4.550000000000387e-05, 4.3902999999997916e-05, 4.4874999999999776e-05, 4.5333000000001566e-05, 4.467999999999833e-05, 4.5388999999999846e-05, 4.372200000000298e-05, 4.4847000000000636e-05, 4.4653000000005605e-05, 4.547199999999779e-05, 4.504100000000261e-05, 4.5361000000000706e-05, 4.559699999999445e-05]</msg>
<status status="PASS" starttime="20201030 18:32:35.320" endtime="20201030 18:32:35.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.309" endtime="20201030 18:32:35.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:35.336" endtime="20201030 18:32:35.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.332" endtime="20201030 18:32:35.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.329" endtime="20201030 18:32:35.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.826" endtime="20201030 18:32:35.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.825" endtime="20201030 18:32:35.362"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.385" endtime="20201030 18:32:35.404"></status>
</kw>
<msg timestamp="20201030 18:32:35.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.381" endtime="20201030 18:32:35.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.407" endtime="20201030 18:32:35.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.414" endtime="20201030 18:32:35.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.374" endtime="20201030 18:32:35.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.368" endtime="20201030 18:32:35.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.437" endtime="20201030 18:32:35.791"></status>
</kw>
<msg timestamp="20201030 18:32:35.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040224333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040270403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:35.434" endtime="20201030 18:32:35.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040224333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040270403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:35.801" endtime="20201030 18:32:35.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.822" endtime="20201030 18:32:35.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.427" endtime="20201030 18:32:35.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.422" endtime="20201030 18:32:35.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:35.844" level="INFO">${RESULT} = [{'diff': 4.607000000000222e-05}, {'diff': 4.583400000000154e-05}, {'diff': 4.6153000000000166e-05}, {'diff': 4.6180999999999306e-05}, {'diff': 4.65139999999975e-05}, {'diff': 4.6486999999997836e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:35.834" endtime="20201030 18:32:35.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:35.856" level="INFO">${ACCURACY} = {'diff': [4.607000000000222e-05, 4.583400000000154e-05, 4.6153000000000166e-05, 4.6180999999999306e-05, 4.65139999999975e-05, 4.6486999999997836e-05, 4.617999999999983e-05, 4.617999999999983e-05, 4.64...</msg>
<status status="PASS" starttime="20201030 18:32:35.847" endtime="20201030 18:32:35.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.868" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 18:32:35.866" endtime="20201030 18:32:35.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.873" level="INFO">VALUE: [4.607000000000222e-05, 4.583400000000154e-05, 4.6153000000000166e-05, 4.6180999999999306e-05, 4.65139999999975e-05, 4.6486999999997836e-05, 4.617999999999983e-05, 4.617999999999983e-05, 4.647199999999879e-05, 4.641600000000051e-05, 4.5569000000002247e-05, 4.605599999999571e-05, 4.5430999999998556e-05, 4.659800000000186e-05, 4.617999999999983e-05, 4.630499999999649e-05, 4.6139000000000596e-05, 4.5625000000000526e-05, 4.623599999999811e-05, 4.594400000000609e-05, 4.58060000000024e-05, 4.645799999999922e-05, 4.645799999999922e-05, 4.6166999999999736e-05, 4.626400000000419e-05, 4.5972999999997766e-05, 4.655499999999674e-05, 4.647199999999879e-05, 4.655499999999674e-05, 4.65139999999975e-05, 4.624999999999768e-05, 4.5694999999998376e-05, 4.655500000000368e-05, 4.6403000000000416e-05, 4.647200000000573e-05, 4.599999999999743e-05, 4.599999999999743e-05, 4.654199999999664e-05, 4.5902999999999916e-05, 4.602800000000351e-05, 4.490199999999944e-05, 4.595799999999872e-05, 4.640200000000094e-05, 4.597200000000523e-05, 4.6416999999999986e-05, 4.627699999999735e-05, 4.490199999999944e-05, 4.6611000000001956e-05, 4.608400000000179e-05, 4.599999999999743e-05]</msg>
<status status="PASS" starttime="20201030 18:32:35.870" endtime="20201030 18:32:35.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.858" endtime="20201030 18:32:35.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:35.886" endtime="20201030 18:32:35.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.882" endtime="20201030 18:32:35.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.879" endtime="20201030 18:32:35.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.364" endtime="20201030 18:32:35.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.363" endtime="20201030 18:32:35.911"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.935" endtime="20201030 18:32:35.960"></status>
</kw>
<msg timestamp="20201030 18:32:35.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.931" endtime="20201030 18:32:35.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.963" endtime="20201030 18:32:35.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.970" endtime="20201030 18:32:35.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.924" endtime="20201030 18:32:35.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.918" endtime="20201030 18:32:35.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.994" endtime="20201030 18:32:36.342"></status>
</kw>
<msg timestamp="20201030 18:32:36.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046159306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046206097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:35.990" endtime="20201030 18:32:36.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046159306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046206097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:36.352" endtime="20201030 18:32:36.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.371" endtime="20201030 18:32:36.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.983" endtime="20201030 18:32:36.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.978" endtime="20201030 18:32:36.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:36.389" level="INFO">${RESULT} = [{'diff': 4.679100000000436e-05}, {'diff': 4.7403000000001416e-05}, {'diff': 4.7347000000003137e-05}, {'diff': 4.702700000000504e-05}, {'diff': 4.720799999999997e-05}, {'diff': 4.6639000000001096e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:36.380" endtime="20201030 18:32:36.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:36.398" level="INFO">${ACCURACY} = {'diff': [4.679100000000436e-05, 4.7403000000001416e-05, 4.7347000000003137e-05, 4.702700000000504e-05, 4.720799999999997e-05, 4.6639000000001096e-05, 4.7153000000001166e-05, 4.7153000000001166e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:32:36.391" endtime="20201030 18:32:36.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.409" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 18:32:36.407" endtime="20201030 18:32:36.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.415" level="INFO">VALUE: [4.679100000000436e-05, 4.7403000000001416e-05, 4.7347000000003137e-05, 4.702700000000504e-05, 4.720799999999997e-05, 4.6639000000001096e-05, 4.7153000000001166e-05, 4.7153000000001166e-05, 4.699999999999843e-05, 4.6665999999993824e-05, 4.759699999999645e-05, 4.706900000000375e-05, 4.7458999999999696e-05, 4.7639000000002096e-05, 4.573600000000455e-05, 4.6722999999998516e-05, 4.752799999999807e-05, 4.7319000000004e-05, 4.729200000000433e-05, 4.6958999999999196e-05, 4.720799999999997e-05, 4.5959000000005135e-05, 4.7347000000003137e-05, 4.707000000000322e-05, 4.672199999999904e-05, 4.748599999999936e-05, 4.709699999999595e-05, 4.729199999999739e-05, 4.7361000000002706e-05, 4.700000000000537e-05, 4.6667000000000236e-05, 4.723599999999911e-05, 4.687499999999484e-05, 4.733299999999663e-05, 4.69860000000058e-05, 4.726400000000519e-05, 4.676400000000469e-05, 4.723599999999911e-05, 4.6875000000001776e-05, 4.668000000000033e-05, 4.709699999999595e-05, 4.691699999999355e-05, 4.747199999999979e-05, 4.677800000000426e-05, 4.759800000000286e-05, 4.7139000000001596e-05, 4.7389000000001846e-05, 4.7389000000001846e-05, 4.694400000000015e-05, 4.724999999999868e-05]</msg>
<status status="PASS" starttime="20201030 18:32:36.411" endtime="20201030 18:32:36.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.400" endtime="20201030 18:32:36.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:36.429" endtime="20201030 18:32:36.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.423" endtime="20201030 18:32:36.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.420" endtime="20201030 18:32:36.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.914" endtime="20201030 18:32:36.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.912" endtime="20201030 18:32:36.454"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.477" endtime="20201030 18:32:36.497"></status>
</kw>
<msg timestamp="20201030 18:32:36.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:36.474" endtime="20201030 18:32:36.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:36.500" endtime="20201030 18:32:36.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.507" endtime="20201030 18:32:36.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.466" endtime="20201030 18:32:36.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.461" endtime="20201030 18:32:36.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.530" endtime="20201030 18:32:36.880"></status>
</kw>
<msg timestamp="20201030 18:32:36.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040226597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040275097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:36.527" endtime="20201030 18:32:36.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040226597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040275097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:36.889" endtime="20201030 18:32:36.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.908" endtime="20201030 18:32:36.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.520" endtime="20201030 18:32:36.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.515" endtime="20201030 18:32:36.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:36.926" level="INFO">${RESULT} = [{'diff': 4.849999999999993e-05}, {'diff': 4.786099999999627e-05}, {'diff': 4.8111000000003457e-05}, {'diff': 4.8125000000003026e-05}, {'diff': 4.836099999999677e-05}, {'diff': 4.855499999999874e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:36.917" endtime="20201030 18:32:36.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:36.937" level="INFO">${ACCURACY} = {'diff': [4.849999999999993e-05, 4.786099999999627e-05, 4.8111000000003457e-05, 4.8125000000003026e-05, 4.836099999999677e-05, 4.855499999999874e-05, 4.802799999999857e-05, 4.829199999999839e-05, 4.80...</msg>
<status status="PASS" starttime="20201030 18:32:36.928" endtime="20201030 18:32:36.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.948" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 18:32:36.945" endtime="20201030 18:32:36.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.953" level="INFO">VALUE: [4.849999999999993e-05, 4.786099999999627e-05, 4.8111000000003457e-05, 4.8125000000003026e-05, 4.836099999999677e-05, 4.855499999999874e-05, 4.802799999999857e-05, 4.829199999999839e-05, 4.809699999999695e-05, 4.838800000000337e-05, 4.844400000000165e-05, 4.786099999999627e-05, 4.707000000000322e-05, 4.827799999999882e-05, 4.674999999999818e-05, 4.7651999999995254e-05, 4.784700000000364e-05, 4.813899999999566e-05, 4.815299999999523e-05, 4.849999999999993e-05, 4.805600000000465e-05, 4.708299999999638e-05, 4.802799999999857e-05, 4.8181000000001306e-05, 4.7597000000003387e-05, 4.795800000000072e-05, 4.78190000000045e-05, 4.795800000000072e-05, 4.78060000000044e-05, 4.8111000000003457e-05, 4.8139000000002596e-05, 4.783300000000407e-05, 4.830499999999849e-05, 4.8139000000002596e-05, 4.776399999999875e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.854200000000558e-05, 4.8013999999999e-05, 4.7651999999995254e-05, 4.7929999999994644e-05, 4.826299999999978e-05, 4.852799999999907e-05, 4.794400000000115e-05, 4.800000000000637e-05, 4.81940000000014e-05, 4.7959000000000196e-05, 4.8209000000000446e-05, 4.830500000000543e-05, 4.847199999999385e-05]</msg>
<status status="PASS" starttime="20201030 18:32:36.950" endtime="20201030 18:32:36.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.938" endtime="20201030 18:32:36.956"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:36.966" endtime="20201030 18:32:36.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.961" endtime="20201030 18:32:36.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.959" endtime="20201030 18:32:36.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.456" endtime="20201030 18:32:36.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.455" endtime="20201030 18:32:36.991"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.014" endtime="20201030 18:32:37.034"></status>
</kw>
<msg timestamp="20201030 18:32:37.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.011" endtime="20201030 18:32:37.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.037" endtime="20201030 18:32:37.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.044" endtime="20201030 18:32:37.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.004" endtime="20201030 18:32:37.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.998" endtime="20201030 18:32:37.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.067" endtime="20201030 18:32:37.415"></status>
</kw>
<msg timestamp="20201030 18:32:37.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040302681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040351611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.064" endtime="20201030 18:32:37.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040302681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040351611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.425" endtime="20201030 18:32:37.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.444" endtime="20201030 18:32:37.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.057" endtime="20201030 18:32:37.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.052" endtime="20201030 18:32:37.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:37.462" level="INFO">${RESULT} = [{'diff': 4.893000000000258e-05}, {'diff': 4.929199999999939e-05}, {'diff': 4.905499999999924e-05}, {'diff': 4.806899999999781e-05}, {'diff': 4.904199999999914e-05}, {'diff': 4.915200000000369e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:37.453" endtime="20201030 18:32:37.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:37.473" level="INFO">${ACCURACY} = {'diff': [4.893000000000258e-05, 4.929199999999939e-05, 4.905499999999924e-05, 4.806899999999781e-05, 4.904199999999914e-05, 4.915200000000369e-05, 4.91940000000024e-05, 4.8917000000002486e-05, 4.8723...</msg>
<status status="PASS" starttime="20201030 18:32:37.464" endtime="20201030 18:32:37.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.484" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 18:32:37.482" endtime="20201030 18:32:37.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.490" level="INFO">VALUE: [4.893000000000258e-05, 4.929199999999939e-05, 4.905499999999924e-05, 4.806899999999781e-05, 4.904199999999914e-05, 4.915200000000369e-05, 4.91940000000024e-05, 4.8917000000002486e-05, 4.8723000000000516e-05, 4.908299999999838e-05, 4.9237000000000586e-05, 4.827799999999882e-05, 4.909799999999742e-05, 4.93469999999982e-05, 4.920800000000197e-05, 4.868099999999487e-05, 4.929199999999939e-05, 4.872200000000104e-05, 4.881899999999856e-05, 4.916600000000326e-05, 4.805499999999824e-05, 4.915299999999623e-05, 4.923600000000111e-05, 4.936099999999777e-05, 4.940299999999648e-05, 4.9014e-05, 4.9459000000001696e-05, 4.904100000000661e-05, 4.902799999999957e-05, 4.913899999999666e-05, 4.902799999999957e-05, 4.926400000000025e-05, 4.912499999999709e-05, 4.806999999999728e-05, 4.9139000000003596e-05, 4.930499999999949e-05, 4.911099999999752e-05, 4.887499999999684e-05, 4.906899999999881e-05, 4.955599999999921e-05, 4.9014e-05, 4.9139000000003596e-05, 4.9014e-05, 4.884700000000464e-05, 4.9195000000001876e-05, 4.923600000000111e-05, 4.8681000000001806e-05, 4.9137999999997184e-05, 4.809699999999695e-05, 4.76940000000009e-05]</msg>
<status status="PASS" starttime="20201030 18:32:37.487" endtime="20201030 18:32:37.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.475" endtime="20201030 18:32:37.493"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:37.503" endtime="20201030 18:32:37.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.498" endtime="20201030 18:32:37.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.496" endtime="20201030 18:32:37.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.993" endtime="20201030 18:32:37.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.992" endtime="20201030 18:32:37.528"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.551" endtime="20201030 18:32:37.571"></status>
</kw>
<msg timestamp="20201030 18:32:37.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.547" endtime="20201030 18:32:37.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.574" endtime="20201030 18:32:37.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.582" endtime="20201030 18:32:37.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.540" endtime="20201030 18:32:37.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.534" endtime="20201030 18:32:37.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.607" endtime="20201030 18:32:37.969"></status>
</kw>
<msg timestamp="20201030 18:32:37.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040199389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040249542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.603" endtime="20201030 18:32:37.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040199389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040249542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.979" endtime="20201030 18:32:37.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.998" endtime="20201030 18:32:38.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.596" endtime="20201030 18:32:38.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.591" endtime="20201030 18:32:38.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:38.016" level="INFO">${RESULT} = [{'diff': 5.015299999999723e-05}, {'diff': 5.0473000000002266e-05}, {'diff': 4.974999999999424e-05}, {'diff': 5.005500000000024e-05}, {'diff': 4.906899999999881e-05}, {'diff': 4.963899999999716e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:38.007" endtime="20201030 18:32:38.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:38.025" level="INFO">${ACCURACY} = {'diff': [5.015299999999723e-05, 5.0473000000002266e-05, 4.974999999999424e-05, 5.005500000000024e-05, 4.906899999999881e-05, 4.963899999999716e-05, 5.056999999999978e-05, 5.026399999999431e-05, 4.988...</msg>
<status status="PASS" starttime="20201030 18:32:38.018" endtime="20201030 18:32:38.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.036" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 18:32:38.034" endtime="20201030 18:32:38.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.042" level="INFO">VALUE: [5.015299999999723e-05, 5.0473000000002266e-05, 4.974999999999424e-05, 5.005500000000024e-05, 4.906899999999881e-05, 4.963899999999716e-05, 5.056999999999978e-05, 5.026399999999431e-05, 4.9887999999997934e-05, 5.008299999999938e-05, 5.015200000000469e-05, 5.058299999999988e-05, 5.040200000000494e-05, 5.031900000000006e-05, 5.048600000000236e-05, 4.873599999999367e-05, 5.015299999999723e-05, 5.0195000000002876e-05, 4.9695000000002376e-05, 5.024999999999474e-05, 5.023600000000211e-05, 5.015299999999723e-05, 5.033299999999963e-05, 5.0459000000002696e-05, 5.0181000000003306e-05, 4.980499999999999e-05, 4.876399999999975e-05, 4.98469999999987e-05, 4.986099999999827e-05, 4.998600000000186e-05, 5.059699999999945e-05, 4.980599999999946e-05, 5.0153000000004166e-05, 5.033299999999963e-05, 4.872200000000104e-05, 4.972200000000204e-05, 5.01669999999968e-05, 4.993099999999612e-05, 4.969499999999544e-05, 4.972200000000204e-05, 5.055500000000074e-05, 5.009699999999895e-05, 5.030599999999996e-05, 5.005500000000024e-05, 5.002800000000057e-05, 5.027800000000082e-05, 4.873600000000061e-05, 5.05270000000016e-05, 4.980599999999946e-05, 5.049999999999499e-05]</msg>
<status status="PASS" starttime="20201030 18:32:38.039" endtime="20201030 18:32:38.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.027" endtime="20201030 18:32:38.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:38.055" endtime="20201030 18:32:38.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.050" endtime="20201030 18:32:38.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.048" endtime="20201030 18:32:38.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.530" endtime="20201030 18:32:38.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.529" endtime="20201030 18:32:38.080"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.103" endtime="20201030 18:32:38.124"></status>
</kw>
<msg timestamp="20201030 18:32:38.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.100" endtime="20201030 18:32:38.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.128" endtime="20201030 18:32:38.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.134" endtime="20201030 18:32:38.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.092" endtime="20201030 18:32:38.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.086" endtime="20201030 18:32:38.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.158" endtime="20201030 18:32:38.506"></status>
</kw>
<msg timestamp="20201030 18:32:38.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041760889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041811014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:38.155" endtime="20201030 18:32:38.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041760889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041811014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:38.516" endtime="20201030 18:32:38.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.535" endtime="20201030 18:32:38.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.147" endtime="20201030 18:32:38.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.142" endtime="20201030 18:32:38.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:38.552" level="INFO">${RESULT} = [{'diff': 5.012499999999809e-05}, {'diff': 5.088899999999841e-05}, {'diff': 5.1249999999995743e-05}, {'diff': 5.0667000000004236e-05}, {'diff': 5.1485999999996424e-05}, {'diff': 5.109699999999995e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:38.543" endtime="20201030 18:32:38.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:38.562" level="INFO">${ACCURACY} = {'diff': [5.012499999999809e-05, 5.088899999999841e-05, 5.1249999999995743e-05, 5.0667000000004236e-05, 5.1485999999996424e-05, 5.109699999999995e-05, 5.090299999999798e-05, 5.063899999999816e-05, 5.1...</msg>
<status status="PASS" starttime="20201030 18:32:38.554" endtime="20201030 18:32:38.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.573" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 18:32:38.571" endtime="20201030 18:32:38.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.578" level="INFO">VALUE: [5.012499999999809e-05, 5.088899999999841e-05, 5.1249999999995743e-05, 5.0667000000004236e-05, 5.1485999999996424e-05, 5.109699999999995e-05, 5.090299999999798e-05, 5.063899999999816e-05, 5.106899999999387e-05, 5.123600000000311e-05, 5.059700000000639e-05, 4.9929999999996644e-05, 5.113899999999866e-05, 5.13470000000002e-05, 5.133300000000063e-05, 5.122200000000354e-05, 5.077799999999438e-05, 5.101399999999506e-05, 5.088899999999841e-05, 5.084799999999917e-05, 5.0679999999997394e-05, 5.105600000000071e-05, 5.102800000000157e-05, 5.1165999999998324e-05, 5.1485999999996424e-05, 5.1014000000002e-05, 5.1457999999997284e-05, 5.1209000000003446e-05, 5.163899999999916e-05, 5.152800000000207e-05, 5.1429999999998144e-05, 5.113899999999866e-05, 4.9903000000003916e-05, 4.975000000000118e-05, 5.140299999999848e-05, 5.1165999999998324e-05, 5.086099999999927e-05, 5.06669999999973e-05, 5.120800000000397e-05, 5.0903000000004917e-05, 5.145899999999676e-05, 5.005500000000024e-05, 5.129199999999445e-05, 5.084799999999917e-05, 5.152799999999513e-05, 5.144499999999719e-05, 5.138900000000585e-05, 5.125000000000268e-05, 5.111099999999952e-05, 5.070800000000347e-05]</msg>
<status status="PASS" starttime="20201030 18:32:38.575" endtime="20201030 18:32:38.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.564" endtime="20201030 18:32:38.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:38.593" endtime="20201030 18:32:38.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.587" endtime="20201030 18:32:38.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.584" endtime="20201030 18:32:38.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.082" endtime="20201030 18:32:38.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.081" endtime="20201030 18:32:38.618"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.641" endtime="20201030 18:32:38.661"></status>
</kw>
<msg timestamp="20201030 18:32:38.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.638" endtime="20201030 18:32:38.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.664" endtime="20201030 18:32:38.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.671" endtime="20201030 18:32:38.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.630" endtime="20201030 18:32:38.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.625" endtime="20201030 18:32:38.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.694" endtime="20201030 18:32:39.044"></status>
</kw>
<msg timestamp="20201030 18:32:39.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040220917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040273014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:38.691" endtime="20201030 18:32:39.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040220917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040273014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.054" endtime="20201030 18:32:39.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.073" endtime="20201030 18:32:39.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.684" endtime="20201030 18:32:39.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.679" endtime="20201030 18:32:39.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:39.091" level="INFO">${RESULT} = [{'diff': 5.209700000000095e-05}, {'diff': 5.165299999999873e-05}, {'diff': 5.16940000000049e-05}, {'diff': 5.2207999999998034e-05}, {'diff': 5.169499999999744e-05}, {'diff': 5.212500000000009e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:39.082" endtime="20201030 18:32:39.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:39.102" level="INFO">${ACCURACY} = {'diff': [5.209700000000095e-05, 5.165299999999873e-05, 5.16940000000049e-05, 5.2207999999998034e-05, 5.169499999999744e-05, 5.212500000000009e-05, 5.163899999999916e-05, 5.186100000000027e-05, 5.2111...</msg>
<status status="PASS" starttime="20201030 18:32:39.093" endtime="20201030 18:32:39.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.113" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 18:32:39.110" endtime="20201030 18:32:39.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.118" level="INFO">VALUE: [5.209700000000095e-05, 5.165299999999873e-05, 5.16940000000049e-05, 5.2207999999998034e-05, 5.169499999999744e-05, 5.212500000000009e-05, 5.163899999999916e-05, 5.186100000000027e-05, 5.211199999999999e-05, 5.2151999999999754e-05, 5.2179999999998894e-05, 5.2471999999997854e-05, 5.159799999999992e-05, 5.15549999999948e-05, 5.202800000000257e-05, 5.205599999999477e-05, 5.154200000000164e-05, 5.20419999999952e-05, 5.232000000000153e-05, 5.188899999999941e-05, 5.162499999999959e-05, 5.1737000000003086e-05, 5.1415999999998574e-05, 5.218099999999837e-05, 5.170899999999701e-05, 5.16940000000049e-05, 5.2193999999998464e-05, 5.172299999999658e-05, 5.1235999999996173e-05, 5.250000000000393e-05, 5.241699999999905e-05, 5.218099999999837e-05, 5.1429999999998144e-05, 5.179200000000189e-05, 5.23340000000011e-05, 5.184800000000017e-05, 5.090299999999798e-05, 5.087499999999884e-05, 5.247299999999733e-05, 5.237500000000034e-05, 5.212500000000009e-05, 5.205500000000224e-05, 5.0915999999998074e-05, 5.211100000000052e-05, 5.23340000000011e-05, 5.254099999999623e-05, 5.21669999999988e-05, 5.231900000000206e-05, 5.162499999999959e-05, 5.250000000000393e-05]</msg>
<status status="PASS" starttime="20201030 18:32:39.115" endtime="20201030 18:32:39.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.103" endtime="20201030 18:32:39.127"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:39.137" endtime="20201030 18:32:39.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.132" endtime="20201030 18:32:39.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.130" endtime="20201030 18:32:39.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.620" endtime="20201030 18:32:39.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.619" endtime="20201030 18:32:39.162"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.185" endtime="20201030 18:32:39.205"></status>
</kw>
<msg timestamp="20201030 18:32:39.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.182" endtime="20201030 18:32:39.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.208" endtime="20201030 18:32:39.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.215" endtime="20201030 18:32:39.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.174" endtime="20201030 18:32:39.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.169" endtime="20201030 18:32:39.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.239" endtime="20201030 18:32:39.590"></status>
</kw>
<msg timestamp="20201030 18:32:39.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040364236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0404175, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:39.235" endtime="20201030 18:32:39.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040364236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0404175, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:39.599" endtime="20201030 18:32:39.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.618" endtime="20201030 18:32:39.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.228" endtime="20201030 18:32:39.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.223" endtime="20201030 18:32:39.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:39.636" level="INFO">${RESULT} = [{'diff': 5.326400000000425e-05}, {'diff': 5.332000000000253e-05}, {'diff': 5.3402000000001004e-05}, {'diff': 5.3471999999998854e-05}, {'diff': 5.277800000000332e-05}, {'diff': 5.326400000000425e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:39.627" endtime="20201030 18:32:39.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:39.647" level="INFO">${ACCURACY} = {'diff': [5.326400000000425e-05, 5.332000000000253e-05, 5.3402000000001004e-05, 5.3471999999998854e-05, 5.277800000000332e-05, 5.326400000000425e-05, 5.288900000000041e-05, 5.190299999999898e-05, 5.28...</msg>
<status status="PASS" starttime="20201030 18:32:39.638" endtime="20201030 18:32:39.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.658" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 18:32:39.656" endtime="20201030 18:32:39.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.664" level="INFO">VALUE: [5.326400000000425e-05, 5.332000000000253e-05, 5.3402000000001004e-05, 5.3471999999998854e-05, 5.277800000000332e-05, 5.326400000000425e-05, 5.288900000000041e-05, 5.190299999999898e-05, 5.286100000000127e-05, 5.297200000000529e-05, 5.318099999999937e-05, 5.313900000000066e-05, 5.302800000000357e-05, 5.338900000000091e-05, 5.3179999999999894e-05, 5.337500000000134e-05, 5.33340000000021e-05, 5.3166000000000324e-05, 5.319499999999894e-05, 5.3415999999993635e-05, 5.33619999999943e-05, 5.3263999999997313e-05, 5.361100000000202e-05, 5.3013999999997063e-05, 5.227700000000335e-05, 5.305500000000324e-05, 5.294499999999869e-05, 5.33470000000022e-05, 5.2888000000000934e-05, 5.3166000000000324e-05, 5.2679999999999394e-05, 5.241699999999905e-05, 5.301299999999759e-05, 5.336100000000177e-05, 5.209800000000042e-05, 5.2735999999997674e-05, 5.3235999999998174e-05, 5.3166000000000324e-05, 5.356900000000331e-05, 5.347299999999833e-05, 5.312499999999415e-05, 5.259700000000145e-05, 5.329099999999698e-05, 5.209699999999401e-05, 5.343099999999962e-05, 5.2971999999998354e-05, 5.3457999999999284e-05, 5.354200000000364e-05, 5.341700000000005e-05, 5.2943999999999214e-05]</msg>
<status status="PASS" starttime="20201030 18:32:39.660" endtime="20201030 18:32:39.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.649" endtime="20201030 18:32:39.667"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:39.676" endtime="20201030 18:32:39.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.672" endtime="20201030 18:32:39.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.669" endtime="20201030 18:32:39.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.164" endtime="20201030 18:32:39.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.163" endtime="20201030 18:32:39.702"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.725" endtime="20201030 18:32:39.744"></status>
</kw>
<msg timestamp="20201030 18:32:39.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.721" endtime="20201030 18:32:39.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.748" endtime="20201030 18:32:39.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.754" endtime="20201030 18:32:39.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.714" endtime="20201030 18:32:39.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.708" endtime="20201030 18:32:39.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.778" endtime="20201030 18:32:40.137"></status>
</kw>
<msg timestamp="20201030 18:32:40.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040211042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040264125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.775" endtime="20201030 18:32:40.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040211042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040264125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:40.146" endtime="20201030 18:32:40.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.165" endtime="20201030 18:32:40.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.767" endtime="20201030 18:32:40.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.762" endtime="20201030 18:32:40.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:40.183" level="INFO">${RESULT} = [{'diff': 5.308299999999544e-05}, {'diff': 5.415300000000123e-05}, {'diff': 5.419499999999994e-05}, {'diff': 5.433299999999669e-05}, {'diff': 5.437500000000234e-05}, {'diff': 5.4291999999997453e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:40.174" endtime="20201030 18:32:40.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:40.193" level="INFO">${ACCURACY} = {'diff': [5.308299999999544e-05, 5.415300000000123e-05, 5.419499999999994e-05, 5.433299999999669e-05, 5.437500000000234e-05, 5.4291999999997453e-05, 5.4444000000000714e-05, 5.311100000000152e-05, 5.41...</msg>
<status status="PASS" starttime="20201030 18:32:40.185" endtime="20201030 18:32:40.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.204" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 18:32:40.201" endtime="20201030 18:32:40.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.209" level="INFO">VALUE: [5.308299999999544e-05, 5.415300000000123e-05, 5.419499999999994e-05, 5.433299999999669e-05, 5.437500000000234e-05, 5.4291999999997453e-05, 5.4444000000000714e-05, 5.311100000000152e-05, 5.411100000000252e-05, 5.430599999999702e-05, 5.363900000000116e-05, 5.311099999999458e-05, 5.454100000000517e-05, 5.365300000000073e-05, 5.440300000000148e-05, 5.4194000000000464e-05, 5.4541999999997703e-05, 5.462500000000259e-05, 5.363900000000116e-05, 5.2763999999996813e-05, 5.450000000000593e-05, 5.4471999999999854e-05, 5.426400000000525e-05, 5.407000000000328e-05, 5.45549999999978e-05, 5.390300000000098e-05, 5.4235999999999174e-05, 5.370800000000647e-05, 5.363900000000116e-05, 5.437500000000234e-05, 5.3263999999997313e-05, 5.4263999999998314e-05, 5.455600000000421e-05, 5.4471999999999854e-05, 5.379199999999695e-05, 5.426400000000525e-05, 5.409699999999601e-05, 5.4165999999994385e-05, 5.455500000000474e-05, 5.365300000000073e-05, 5.3707999999999534e-05, 5.434699999999626e-05, 5.390300000000098e-05, 5.358400000000235e-05, 5.4263999999998314e-05, 5.4541999999997703e-05, 5.4235999999999174e-05, 5.306900000000281e-05, 5.430500000000449e-05, 5.386100000000227e-05]</msg>
<status status="PASS" starttime="20201030 18:32:40.206" endtime="20201030 18:32:40.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.194" endtime="20201030 18:32:40.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:40.222" endtime="20201030 18:32:40.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.217" endtime="20201030 18:32:40.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.215" endtime="20201030 18:32:40.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.704" endtime="20201030 18:32:40.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.702" endtime="20201030 18:32:40.247"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.270" endtime="20201030 18:32:40.292"></status>
</kw>
<msg timestamp="20201030 18:32:40.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.267" endtime="20201030 18:32:40.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.295" endtime="20201030 18:32:40.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.301" endtime="20201030 18:32:40.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.260" endtime="20201030 18:32:40.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.254" endtime="20201030 18:32:40.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.325" endtime="20201030 18:32:40.676"></status>
</kw>
<msg timestamp="20201030 18:32:40.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041867569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041922194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:40.322" endtime="20201030 18:32:40.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041867569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041922194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:40.686" endtime="20201030 18:32:40.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.705" endtime="20201030 18:32:40.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.314" endtime="20201030 18:32:40.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.310" endtime="20201030 18:32:40.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:40.722" level="INFO">${RESULT} = [{'diff': 5.462500000000259e-05}, {'diff': 5.4985999999999924e-05}, {'diff': 5.536099999999683e-05}, {'diff': 5.4637999999995746e-05}, {'diff': 5.515299999999529e-05}, {'diff': 5.5458000000001284e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:40.713" endtime="20201030 18:32:40.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:40.732" level="INFO">${ACCURACY} = {'diff': [5.462500000000259e-05, 5.4985999999999924e-05, 5.536099999999683e-05, 5.4637999999995746e-05, 5.515299999999529e-05, 5.5458000000001284e-05, 5.506999999999734e-05, 5.5208000000001034e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:32:40.724" endtime="20201030 18:32:40.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.743" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 18:32:40.741" endtime="20201030 18:32:40.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.748" level="INFO">VALUE: [5.462500000000259e-05, 5.4985999999999924e-05, 5.536099999999683e-05, 5.4637999999995746e-05, 5.515299999999529e-05, 5.5458000000001284e-05, 5.506999999999734e-05, 5.5208000000001034e-05, 5.512499999999615e-05, 5.506999999999734e-05, 5.5263999999999314e-05, 5.409699999999601e-05, 5.5263999999999314e-05, 5.5305999999998023e-05, 5.4888000000002934e-05, 5.511099999999658e-05, 5.4985999999999924e-05, 5.486100000000327e-05, 5.534699999999726e-05, 5.5458000000001284e-05, 5.506999999999734e-05, 5.38749999999949e-05, 5.5541999999998704e-05, 5.559799999999698e-05, 5.509699999999701e-05, 5.515300000000223e-05, 5.518100000000137e-05, 5.544499999999425e-05, 5.5208000000001034e-05, 5.48749999999959e-05, 5.390299999999404e-05, 5.469500000000044e-05, 5.511100000000352e-05, 5.519500000000094e-05, 5.5472000000000854e-05, 5.4749999999999244e-05, 5.4027999999997633e-05, 5.5387999999996496e-05, 5.506899999999787e-05, 5.561199999999655e-05, 5.4791999999997953e-05, 5.5444000000001714e-05, 5.5221999999993665e-05, 5.486100000000327e-05, 5.536100000000377e-05, 5.4944000000001214e-05, 5.3777999999997383e-05, 5.388900000000141e-05, 5.5277999999998884e-05, 5.4999999999999494e-05]</msg>
<status status="PASS" starttime="20201030 18:32:40.745" endtime="20201030 18:32:40.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.734" endtime="20201030 18:32:40.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:40.763" endtime="20201030 18:32:40.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.757" endtime="20201030 18:32:40.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.754" endtime="20201030 18:32:40.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.249" endtime="20201030 18:32:40.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.248" endtime="20201030 18:32:40.788"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.811" endtime="20201030 18:32:40.831"></status>
</kw>
<msg timestamp="20201030 18:32:40.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.808" endtime="20201030 18:32:40.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.834" endtime="20201030 18:32:40.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.841" endtime="20201030 18:32:40.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.800" endtime="20201030 18:32:40.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.795" endtime="20201030 18:32:40.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.866" endtime="20201030 18:32:41.215"></status>
</kw>
<msg timestamp="20201030 18:32:41.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040126389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040181806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:40.862" endtime="20201030 18:32:41.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040126389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040181806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:41.225" endtime="20201030 18:32:41.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.244" endtime="20201030 18:32:41.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.854" endtime="20201030 18:32:41.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.849" endtime="20201030 18:32:41.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:41.261" level="INFO">${RESULT} = [{'diff': 5.541700000000205e-05}, {'diff': 5.6264000000000314e-05}, {'diff': 5.491700000000155e-05}, {'diff': 5.612500000000409e-05}, {'diff': 5.5999999999993555e-05}, {'diff': 5.6152000000003754e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:41.252" endtime="20201030 18:32:41.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:41.276" level="INFO">${ACCURACY} = {'diff': [5.541700000000205e-05, 5.6264000000000314e-05, 5.491700000000155e-05, 5.612500000000409e-05, 5.5999999999993555e-05, 5.6152000000003754e-05, 5.6151999999996816e-05, 5.6264000000000314e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:32:41.263" endtime="20201030 18:32:41.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.287" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 18:32:41.285" endtime="20201030 18:32:41.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.293" level="INFO">VALUE: [5.541700000000205e-05, 5.6264000000000314e-05, 5.491700000000155e-05, 5.612500000000409e-05, 5.5999999999993555e-05, 5.6152000000003754e-05, 5.6151999999996816e-05, 5.6264000000000314e-05, 5.6041999999999204e-05, 5.6500000000000994e-05, 5.588900000000341e-05, 5.5986000000000924e-05, 5.586100000000427e-05, 5.647299999999439e-05, 5.6207999999995095e-05, 5.6499999999994055e-05, 5.652700000000066e-05, 5.4749999999999244e-05, 5.60549999999993e-05, 5.6000000000000494e-05, 5.511100000000352e-05, 5.6514000000000564e-05, 5.5735999999993735e-05, 5.630499999999955e-05, 5.568099999999493e-05, 5.491700000000155e-05, 5.6277999999999884e-05, 5.636200000000424e-05, 5.611200000000399e-05, 5.606899999999887e-05, 5.5971999999994415e-05, 5.581900000000556e-05, 5.604099999999973e-05, 5.6514000000000564e-05, 5.629099999999998e-05, 5.630499999999955e-05, 5.563900000000316e-05, 5.6471999999994915e-05, 5.509699999999701e-05, 5.508299999999744e-05, 5.606999999999834e-05, 5.6014000000000064e-05, 5.490300000000198e-05, 5.5666000000002824e-05, 5.6027999999999634e-05, 5.56949999999945e-05, 5.512499999999615e-05, 5.6387999999997496e-05, 5.558299999999794e-05, 5.5805999999998523e-05]</msg>
<status status="PASS" starttime="20201030 18:32:41.290" endtime="20201030 18:32:41.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.278" endtime="20201030 18:32:41.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:41.306" endtime="20201030 18:32:41.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.301" endtime="20201030 18:32:41.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.299" endtime="20201030 18:32:41.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.790" endtime="20201030 18:32:41.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.789" endtime="20201030 18:32:41.331"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.354" endtime="20201030 18:32:41.374"></status>
</kw>
<msg timestamp="20201030 18:32:41.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.351" endtime="20201030 18:32:41.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.377" endtime="20201030 18:32:41.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.384" endtime="20201030 18:32:41.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.343" endtime="20201030 18:32:41.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.337" endtime="20201030 18:32:41.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.407" endtime="20201030 18:32:41.758"></status>
</kw>
<msg timestamp="20201030 18:32:41.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039928542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:41.404" endtime="20201030 18:32:41.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039928542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:41.768" endtime="20201030 18:32:41.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.787" endtime="20201030 18:32:41.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.397" endtime="20201030 18:32:41.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.392" endtime="20201030 18:32:41.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:41.804" level="INFO">${RESULT} = [{'diff': 5.7458000000003284e-05}, {'diff': 5.708299999999944e-05}, {'diff': 5.713900000000466e-05}, {'diff': 5.7542000000000704e-05}, {'diff': 5.663899999999722e-05}, {'diff': 5.606899999999887e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:41.795" endtime="20201030 18:32:41.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:41.815" level="INFO">${ACCURACY} = {'diff': [5.7458000000003284e-05, 5.708299999999944e-05, 5.713900000000466e-05, 5.7542000000000704e-05, 5.663899999999722e-05, 5.606899999999887e-05, 5.704100000000073e-05, 5.6972000000002354e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 18:32:41.806" endtime="20201030 18:32:41.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.827" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 18:32:41.824" endtime="20201030 18:32:41.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.832" level="INFO">VALUE: [5.7458000000003284e-05, 5.708299999999944e-05, 5.713900000000466e-05, 5.7542000000000704e-05, 5.663899999999722e-05, 5.606899999999887e-05, 5.704100000000073e-05, 5.6972000000002354e-05, 5.754100000000123e-05, 5.7542000000000704e-05, 5.7250000000001744e-05, 5.688899999999747e-05, 5.6929999999996705e-05, 5.690299999999704e-05, 5.719500000000294e-05, 5.7472000000002854e-05, 5.734699999999926e-05, 5.730500000000055e-05, 5.686099999999833e-05, 5.659699999999851e-05, 5.6722000000002104e-05, 5.740300000000448e-05, 5.7166000000004324e-05, 5.66949999999955e-05, 5.7472000000002854e-05, 5.7014000000001064e-05, 5.5972000000001354e-05, 5.706899999999987e-05, 5.740299999999754e-05, 5.733299999999969e-05, 5.7556000000000274e-05, 5.7166000000004324e-05, 5.7542000000000704e-05, 5.73470000000062e-05, 5.7306000000000024e-05, 5.6901999999997566e-05, 5.683399999999866e-05, 5.669500000000244e-05, 5.681899999999962e-05, 5.7292000000000454e-05, 5.7415999999997636e-05, 5.6986000000001924e-05, 5.7486000000002424e-05, 5.73749999999984e-05, 5.7306000000000024e-05, 5.673699999999421e-05, 5.6958000000002784e-05, 5.7292000000000454e-05, 5.738900000000491e-05, 5.736099999999883e-05]</msg>
<status status="PASS" starttime="20201030 18:32:41.829" endtime="20201030 18:32:41.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.817" endtime="20201030 18:32:41.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:41.845" endtime="20201030 18:32:41.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.840" endtime="20201030 18:32:41.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.838" endtime="20201030 18:32:41.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.333" endtime="20201030 18:32:41.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.332" endtime="20201030 18:32:41.870"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.894" endtime="20201030 18:32:41.915"></status>
</kw>
<msg timestamp="20201030 18:32:41.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.891" endtime="20201030 18:32:41.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.918" endtime="20201030 18:32:41.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.924" endtime="20201030 18:32:41.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.883" endtime="20201030 18:32:41.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.877" endtime="20201030 18:32:41.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.948" endtime="20201030 18:32:42.300"></status>
</kw>
<msg timestamp="20201030 18:32:42.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041367097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041425486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:41.945" endtime="20201030 18:32:42.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041367097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041425486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:42.310" endtime="20201030 18:32:42.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.329" endtime="20201030 18:32:42.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.937" endtime="20201030 18:32:42.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.933" endtime="20201030 18:32:42.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:42.346" level="INFO">${RESULT} = [{'diff': 5.838899999999897e-05}, {'diff': 5.6764000000000814e-05}, {'diff': 5.8179999999997956e-05}, {'diff': 5.784699999999976e-05}, {'diff': 5.8194999999997e-05}, {'diff': 5.780500000000105e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:42.337" endtime="20201030 18:32:42.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:42.356" level="INFO">${ACCURACY} = {'diff': [5.838899999999897e-05, 5.6764000000000814e-05, 5.8179999999997956e-05, 5.784699999999976e-05, 5.8194999999997e-05, 5.780500000000105e-05, 5.811099999999958e-05, 5.795900000000326e-05, 5.8193...</msg>
<status status="PASS" starttime="20201030 18:32:42.349" endtime="20201030 18:32:42.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.367" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 18:32:42.365" endtime="20201030 18:32:42.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.373" level="INFO">VALUE: [5.838899999999897e-05, 5.6764000000000814e-05, 5.8179999999997956e-05, 5.784699999999976e-05, 5.8194999999997e-05, 5.780500000000105e-05, 5.811099999999958e-05, 5.795900000000326e-05, 5.8193999999997525e-05, 5.806900000000087e-05, 5.8513999999995625e-05, 5.831900000000112e-05, 5.845900000000376e-05, 5.8457999999997345e-05, 5.7972000000003354e-05, 5.8556000000001274e-05, 5.813899999999872e-05, 5.804100000000173e-05, 5.788899999999847e-05, 5.845900000000376e-05, 5.762499999999865e-05, 5.780500000000105e-05, 5.783300000000019e-05, 5.7958000000003784e-05, 5.6777999999993445e-05, 5.76670000000043e-05, 5.8179999999997956e-05, 5.8000000000002494e-05, 5.838900000000591e-05, 5.6915999999997136e-05, 5.761099999999908e-05, 5.830500000000155e-05, 5.8457999999997345e-05, 5.811099999999958e-05, 5.7749999999995305e-05, 5.8514000000002564e-05, 5.8528000000002134e-05, 5.801300000000259e-05, 5.806900000000087e-05, 5.766699999999736e-05, 5.7764000000001814e-05, 5.8165999999998386e-05, 5.761099999999908e-05, 5.6930000000003644e-05, 5.6778000000000384e-05, 5.8597999999999983e-05, 5.761099999999908e-05, 5.7820000000000094e-05, 5.790299999999804e-05, 5.8457999999997345e-05]</msg>
<status status="PASS" starttime="20201030 18:32:42.370" endtime="20201030 18:32:42.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.358" endtime="20201030 18:32:42.376"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:42.385" endtime="20201030 18:32:42.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.381" endtime="20201030 18:32:42.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.378" endtime="20201030 18:32:42.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.872" endtime="20201030 18:32:42.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.871" endtime="20201030 18:32:42.411"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.434" endtime="20201030 18:32:42.456"></status>
</kw>
<msg timestamp="20201030 18:32:42.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:42.431" endtime="20201030 18:32:42.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:42.459" endtime="20201030 18:32:42.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.465" endtime="20201030 18:32:42.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.423" endtime="20201030 18:32:42.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.417" endtime="20201030 18:32:42.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.489" endtime="20201030 18:32:42.848"></status>
</kw>
<msg timestamp="20201030 18:32:42.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041919486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041977847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:42.486" endtime="20201030 18:32:42.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041919486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041977847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:42.857" endtime="20201030 18:32:42.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.876" endtime="20201030 18:32:42.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.478" endtime="20201030 18:32:42.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.474" endtime="20201030 18:32:42.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:42.894" level="INFO">${RESULT} = [{'diff': 5.836099999999983e-05}, {'diff': 5.93750000000004e-05}, {'diff': 5.8778000000002384e-05}, {'diff': 5.8777999999995445e-05}, {'diff': 5.895900000000426e-05}, {'diff': 5.940299999999954e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:42.885" endtime="20201030 18:32:42.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:42.903" level="INFO">${ACCURACY} = {'diff': [5.836099999999983e-05, 5.93750000000004e-05, 5.8778000000002384e-05, 5.8777999999995445e-05, 5.895900000000426e-05, 5.940299999999954e-05, 5.920899999999757e-05, 5.933300000000169e-05, 5.934...</msg>
<status status="PASS" starttime="20201030 18:32:42.896" endtime="20201030 18:32:42.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.915" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 18:32:42.912" endtime="20201030 18:32:42.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.921" level="INFO">VALUE: [5.836099999999983e-05, 5.93750000000004e-05, 5.8778000000002384e-05, 5.8777999999995445e-05, 5.895900000000426e-05, 5.940299999999954e-05, 5.920899999999757e-05, 5.933300000000169e-05, 5.9348000000000734e-05, 5.9415999999999636e-05, 5.859700000000051e-05, 5.920899999999757e-05, 5.909700000000101e-05, 5.9291999999995515e-05, 5.884700000000076e-05, 5.9112000000000053e-05, 5.9277999999995945e-05, 5.829100000000198e-05, 5.906899999999493e-05, 5.9457999999998346e-05, 5.9457999999998346e-05, 5.941699999999911e-05, 5.8999999999996555e-05, 5.9208000000005034e-05, 5.933300000000169e-05, 5.8584000000000414e-05, 5.8750000000003244e-05, 5.8957999999997845e-05, 5.915299999999929e-05, 5.859700000000051e-05, 5.955499999999586e-05, 5.9165999999999386e-05, 5.9291999999995515e-05, 5.934700000000126e-05, 5.881900000000162e-05, 5.8820000000001094e-05, 5.9207999999998095e-05, 5.9194999999998e-05, 5.9236000000004174e-05, 5.890299999999904e-05, 5.884700000000076e-05, 5.865299999999879e-05, 5.8721999999997165e-05, 5.936100000000083e-05, 5.791699999999761e-05, 5.88749999999999e-05, 5.931900000000212e-05, 5.8820000000001094e-05, 5.9555999999995335e-05, 5.880500000000205e-05]</msg>
<status status="PASS" starttime="20201030 18:32:42.917" endtime="20201030 18:32:42.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.905" endtime="20201030 18:32:42.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:42.936" endtime="20201030 18:32:42.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.930" endtime="20201030 18:32:42.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.927" endtime="20201030 18:32:42.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.413" endtime="20201030 18:32:42.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.412" endtime="20201030 18:32:42.961"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.985" endtime="20201030 18:32:43.005"></status>
</kw>
<msg timestamp="20201030 18:32:43.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:42.981" endtime="20201030 18:32:43.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:43.008" endtime="20201030 18:32:43.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.015" endtime="20201030 18:32:43.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.974" endtime="20201030 18:32:43.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.968" endtime="20201030 18:32:43.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.038" endtime="20201030 18:32:43.386"></status>
</kw>
<msg timestamp="20201030 18:32:43.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040614181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040674639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:43.035" endtime="20201030 18:32:43.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040614181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040674639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:43.395" endtime="20201030 18:32:43.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.414" endtime="20201030 18:32:43.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.028" endtime="20201030 18:32:43.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.023" endtime="20201030 18:32:43.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:43.432" level="INFO">${RESULT} = [{'diff': 6.0457999999999346e-05}, {'diff': 6.052700000000466e-05}, {'diff': 6.0555999999996335e-05}, {'diff': 6.0250000000004744e-05}, {'diff': 6.0292000000003454e-05}, {'diff': 6.0013999999997125e-0...</msg>
<status status="PASS" starttime="20201030 18:32:43.423" endtime="20201030 18:32:43.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:43.443" level="INFO">${ACCURACY} = {'diff': [6.0457999999999346e-05, 6.052700000000466e-05, 6.0555999999996335e-05, 6.0250000000004744e-05, 6.0292000000003454e-05, 6.0013999999997125e-05, 5.9679999999999456e-05, 5.893099999999818e-05, ...</msg>
<status status="PASS" starttime="20201030 18:32:43.434" endtime="20201030 18:32:43.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.454" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 18:32:43.452" endtime="20201030 18:32:43.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.459" level="INFO">VALUE: [6.0457999999999346e-05, 6.052700000000466e-05, 6.0555999999996335e-05, 6.0250000000004744e-05, 6.0292000000003454e-05, 6.0013999999997125e-05, 5.9679999999999456e-05, 5.893099999999818e-05, 5.9735999999997735e-05, 5.9806000000002524e-05, 5.988900000000047e-05, 6.054100000000423e-05, 5.979099999999654e-05, 5.98750000000009e-05, 6.013900000000072e-05, 6.00829999999955e-05, 6.061099999999514e-05, 5.877700000000291e-05, 6.0319999999995655e-05, 6.031900000000312e-05, 5.988900000000047e-05, 6.0277999999996945e-05, 5.893100000000512e-05, 6.031899999999618e-05, 5.890300000000598e-05, 6.011100000000158e-05, 6.0013999999997125e-05, 6.0235999999998235e-05, 5.980499999999611e-05, 6.0193999999999526e-05, 5.977699999999697e-05, 6.0555999999996335e-05, 6.011100000000158e-05, 6.036099999999489e-05, 6.0402000000001066e-05, 5.9735999999997735e-05, 6.030500000000355e-05, 6.018099999999943e-05, 6.012500000000115e-05, 6.013900000000072e-05, 5.9902000000000566e-05, 5.8929999999998706e-05, 6.020899999999857e-05, 5.909700000000101e-05, 5.8971999999997415e-05, 6.0152000000000816e-05, 5.8778000000002384e-05, 5.990300000000004e-05, 6.0235999999998235e-05, 6.040300000000054e-05]</msg>
<status status="PASS" starttime="20201030 18:32:43.456" endtime="20201030 18:32:43.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.445" endtime="20201030 18:32:43.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:43.472" endtime="20201030 18:32:43.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.468" endtime="20201030 18:32:43.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.465" endtime="20201030 18:32:43.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.964" endtime="20201030 18:32:43.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.962" endtime="20201030 18:32:43.497"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.521" endtime="20201030 18:32:43.541"></status>
</kw>
<msg timestamp="20201030 18:32:43.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:43.517" endtime="20201030 18:32:43.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:43.544" endtime="20201030 18:32:43.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.550" endtime="20201030 18:32:43.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.510" endtime="20201030 18:32:43.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.504" endtime="20201030 18:32:43.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.574" endtime="20201030 18:32:43.924"></status>
</kw>
<msg timestamp="20201030 18:32:43.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040210653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040270417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:43.571" endtime="20201030 18:32:43.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040210653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040270417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:43.933" endtime="20201030 18:32:43.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:43.953" endtime="20201030 18:32:43.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.563" endtime="20201030 18:32:43.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.559" endtime="20201030 18:32:43.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:43.971" level="INFO">${RESULT} = [{'diff': 5.9764000000003814e-05}, {'diff': 6.0999999999998555e-05}, {'diff': 6.077699999999797e-05}, {'diff': 6.104199999999727e-05}, {'diff': 6.118100000000043e-05}, {'diff': 6.118100000000043e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:43.962" endtime="20201030 18:32:43.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:43.983" level="INFO">${ACCURACY} = {'diff': [5.9764000000003814e-05, 6.0999999999998555e-05, 6.077699999999797e-05, 6.104199999999727e-05, 6.118100000000043e-05, 6.118100000000043e-05, 6.148599999999949e-05, 6.122199999999967e-05, 6.10...</msg>
<status status="PASS" starttime="20201030 18:32:43.974" endtime="20201030 18:32:43.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:43.994" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 18:32:43.992" endtime="20201030 18:32:43.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.000" level="INFO">VALUE: [5.9764000000003814e-05, 6.0999999999998555e-05, 6.077699999999797e-05, 6.104199999999727e-05, 6.118100000000043e-05, 6.118100000000043e-05, 6.148599999999949e-05, 6.122199999999967e-05, 6.108300000000344e-05, 6.130500000000455e-05, 6.062500000000165e-05, 6.0735999999998735e-05, 6.086100000000233e-05, 6.138900000000197e-05, 6.106900000000387e-05, 6.163900000000222e-05, 6.0707999999999596e-05, 6.0721999999999166e-05, 6.13620000000023e-05, 6.1028000000004634e-05, 6.162500000000265e-05, 6.130499999999761e-05, 6.126399999999838e-05, 6.093100000000018e-05, 6.0985999999998985e-05, 6.140200000000207e-05, 6.12499999999988e-05, 6.070899999999907e-05, 6.140300000000154e-05, 6.063900000000122e-05, 6.14029999999946e-05, 6.1027999999997695e-05, 6.113900000000172e-05, 6.13750000000024e-05, 6.0443999999999776e-05, 6.133300000000369e-05, 6.151399999999863e-05, 6.149999999999906e-05, 6.136099999999589e-05, 6.012500000000115e-05, 6.1195e-05, 6.063899999999428e-05, 6.090300000000104e-05, 6.148599999999949e-05, 6.087499999999496e-05, 6.0985999999998985e-05, 5.9778000000003384e-05, 6.161100000000308e-05, 6.151399999999863e-05, 6.065300000000079e-05]</msg>
<status status="PASS" starttime="20201030 18:32:43.997" endtime="20201030 18:32:44.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.985" endtime="20201030 18:32:44.003"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:44.013" endtime="20201030 18:32:44.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.008" endtime="20201030 18:32:44.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.006" endtime="20201030 18:32:44.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.500" endtime="20201030 18:32:44.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:43.498" endtime="20201030 18:32:44.038"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.061" endtime="20201030 18:32:44.082"></status>
</kw>
<msg timestamp="20201030 18:32:44.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.058" endtime="20201030 18:32:44.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.085" endtime="20201030 18:32:44.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.091" endtime="20201030 18:32:44.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.051" endtime="20201030 18:32:44.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.045" endtime="20201030 18:32:44.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.115" endtime="20201030 18:32:44.467"></status>
</kw>
<msg timestamp="20201030 18:32:44.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040349028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040410556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:44.112" endtime="20201030 18:32:44.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040349028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040410556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:44.477" endtime="20201030 18:32:44.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.496" endtime="20201030 18:32:44.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.104" endtime="20201030 18:32:44.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.100" endtime="20201030 18:32:44.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:44.513" level="INFO">${RESULT} = [{'diff': 6.15279999999982e-05}, {'diff': 6.18750000000029e-05}, {'diff': 6.230499999999861e-05}, {'diff': 6.251399999999963e-05}, {'diff': 6.233299999999775e-05}, {'diff': 6.236099999999689e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:44.504" endtime="20201030 18:32:44.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:44.523" level="INFO">${ACCURACY} = {'diff': [6.15279999999982e-05, 6.18750000000029e-05, 6.230499999999861e-05, 6.251399999999963e-05, 6.233299999999775e-05, 6.236099999999689e-05, 6.093100000000018e-05, 6.251399999999963e-05, 6.248600...</msg>
<status status="PASS" starttime="20201030 18:32:44.515" endtime="20201030 18:32:44.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.534" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 18:32:44.532" endtime="20201030 18:32:44.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.540" level="INFO">VALUE: [6.15279999999982e-05, 6.18750000000029e-05, 6.230499999999861e-05, 6.251399999999963e-05, 6.233299999999775e-05, 6.236099999999689e-05, 6.093100000000018e-05, 6.251399999999963e-05, 6.248600000000049e-05, 6.19029999999951e-05, 6.088899999999453e-05, 6.20420000000052e-05, 6.258300000000494e-05, 6.188900000000247e-05, 6.250000000000006e-05, 6.231899999999818e-05, 6.212499999999621e-05, 6.126399999999838e-05, 6.208400000000391e-05, 6.204099999999879e-05, 6.22499999999998e-05, 6.254099999999929e-05, 6.118000000000096e-05, 6.258400000000441e-05, 6.201399999999913e-05, 6.255599999999834e-05, 6.254199999999877e-05, 6.255499999999886e-05, 6.07629999999984e-05, 6.19029999999951e-05, 6.216699999999492e-05, 6.165200000000232e-05, 6.159700000000351e-05, 6.212500000000315e-05, 6.22080000000011e-05, 6.23200000000046e-05, 6.216700000000186e-05, 6.255600000000527e-05, 6.186100000000333e-05, 6.227799999999895e-05, 6.141600000000164e-05, 6.254199999999877e-05, 6.2195000000001e-05, 6.229099999999904e-05, 6.16950000000005e-05, 6.25550000000058e-05, 6.241699999999517e-05, 6.183400000000366e-05, 6.233300000000469e-05, 6.236100000000383e-05]</msg>
<status status="PASS" starttime="20201030 18:32:44.536" endtime="20201030 18:32:44.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.525" endtime="20201030 18:32:44.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:44.552" endtime="20201030 18:32:44.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.548" endtime="20201030 18:32:44.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.545" endtime="20201030 18:32:44.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.040" endtime="20201030 18:32:44.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.039" endtime="20201030 18:32:44.578"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.601" endtime="20201030 18:32:44.622"></status>
</kw>
<msg timestamp="20201030 18:32:44.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.597" endtime="20201030 18:32:44.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:44.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:44.626" endtime="20201030 18:32:44.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.632" endtime="20201030 18:32:44.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.590" endtime="20201030 18:32:44.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.584" endtime="20201030 18:32:44.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:44.656" endtime="20201030 18:32:45.005"></status>
</kw>
<msg timestamp="20201030 18:32:45.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041721236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041784278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:44.652" endtime="20201030 18:32:45.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041721236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041784278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:45.015" endtime="20201030 18:32:45.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.034" endtime="20201030 18:32:45.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.645" endtime="20201030 18:32:45.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.640" endtime="20201030 18:32:45.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:45.052" level="INFO">${RESULT} = [{'diff': 6.304199999999927e-05}, {'diff': 6.330499999999961e-05}, {'diff': 6.363900000000422e-05}, {'diff': 6.323600000000124e-05}, {'diff': 6.272200000000117e-05}, {'diff': 6.312499999999721e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:45.043" endtime="20201030 18:32:45.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:45.062" level="INFO">${ACCURACY} = {'diff': [6.304199999999927e-05, 6.330499999999961e-05, 6.363900000000422e-05, 6.323600000000124e-05, 6.272200000000117e-05, 6.312499999999721e-05, 6.291699999999567e-05, 6.294499999999481e-05, 6.3568...</msg>
<status status="PASS" starttime="20201030 18:32:45.054" endtime="20201030 18:32:45.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.073" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 18:32:45.071" endtime="20201030 18:32:45.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.078" level="INFO">VALUE: [6.304199999999927e-05, 6.330499999999961e-05, 6.363900000000422e-05, 6.323600000000124e-05, 6.272200000000117e-05, 6.312499999999721e-05, 6.291699999999567e-05, 6.294499999999481e-05, 6.356899999999943e-05, 6.345800000000235e-05, 6.354199999999977e-05, 6.347200000000192e-05, 6.294400000000228e-05, 6.316599999999645e-05, 6.333300000000569e-05, 6.293100000000218e-05, 6.281900000000562e-05, 6.270900000000107e-05, 6.305499999999936e-05, 6.323600000000124e-05, 6.318100000000243e-05, 6.341600000000364e-05, 6.32500000000008e-05, 6.331999999999866e-05, 6.348599999999455e-05, 6.35699999999989e-05, 6.340300000000354e-05, 6.340300000000354e-05, 6.223600000000024e-05, 6.32630000000009e-05, 6.276399999999988e-05, 6.288899999999653e-05, 6.301400000000013e-05, 6.319400000000253e-05, 6.333299999999875e-05, 6.269400000000203e-05, 6.297199999999448e-05, 6.358399999999848e-05, 6.338899999999703e-05, 6.306899999999893e-05, 6.287499999999696e-05, 6.212500000000315e-05, 6.259699999999757e-05, 6.345800000000235e-05, 6.319400000000253e-05, 6.306900000000587e-05, 6.336099999999789e-05, 6.341699999999617e-05, 6.27080000000016e-05, 6.35280000000002e-05]</msg>
<status status="PASS" starttime="20201030 18:32:45.075" endtime="20201030 18:32:45.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.064" endtime="20201030 18:32:45.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:45.093" endtime="20201030 18:32:45.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.087" endtime="20201030 18:32:45.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.084" endtime="20201030 18:32:45.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.580" endtime="20201030 18:32:45.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:44.579" endtime="20201030 18:32:45.118"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.141" endtime="20201030 18:32:45.161"></status>
</kw>
<msg timestamp="20201030 18:32:45.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:45.137" endtime="20201030 18:32:45.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:45.165" endtime="20201030 18:32:45.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.171" endtime="20201030 18:32:45.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.130" endtime="20201030 18:32:45.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.124" endtime="20201030 18:32:45.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.194" endtime="20201030 18:32:45.542"></status>
</kw>
<msg timestamp="20201030 18:32:45.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040059708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040123528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:45.191" endtime="20201030 18:32:45.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040059708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040123528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:45.552" endtime="20201030 18:32:45.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.571" endtime="20201030 18:32:45.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.184" endtime="20201030 18:32:45.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.179" endtime="20201030 18:32:45.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:45.589" level="INFO">${RESULT} = [{'diff': 6.381999999999916e-05}, {'diff': 6.42500000000018e-05}, {'diff': 6.368000000000346e-05}, {'diff': 6.402700000000122e-05}, {'diff': 6.380500000000011e-05}, {'diff': 6.419400000000353e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:45.580" endtime="20201030 18:32:45.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:45.600" level="INFO">${ACCURACY} = {'diff': [6.381999999999916e-05, 6.42500000000018e-05, 6.368000000000346e-05, 6.402700000000122e-05, 6.380500000000011e-05, 6.419400000000353e-05, 6.424999999999487e-05, 6.401400000000113e-05, 6.37220...</msg>
<status status="PASS" starttime="20201030 18:32:45.591" endtime="20201030 18:32:45.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.611" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 18:32:45.609" endtime="20201030 18:32:45.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.616" level="INFO">VALUE: [6.381999999999916e-05, 6.42500000000018e-05, 6.368000000000346e-05, 6.402700000000122e-05, 6.380500000000011e-05, 6.419400000000353e-05, 6.424999999999487e-05, 6.401400000000113e-05, 6.372200000000217e-05, 6.416599999999745e-05, 6.423700000000171e-05, 6.412499999999821e-05, 6.445900000000282e-05, 6.44159999999977e-05, 6.401400000000113e-05, 6.45280000000012e-05, 6.308399999999798e-05, 6.405500000000036e-05, 6.365299999999685e-05, 6.419400000000353e-05, 6.326400000000038e-05, 6.424999999999487e-05, 6.397200000000242e-05, 6.387499999999796e-05, 6.423600000000224e-05, 6.294400000000228e-05, 6.423600000000224e-05, 6.4583e-05, 6.369499999999556e-05, 6.411099999999864e-05, 6.45280000000012e-05, 6.309700000000501e-05, 6.409699999999907e-05, 6.42500000000018e-05, 6.401399999999419e-05, 6.370799999999566e-05, 6.397300000000189e-05, 6.355499999999986e-05, 6.45699999999999e-05, 6.416599999999745e-05, 6.386099999999839e-05, 6.431999999999966e-05, 6.434699999999932e-05, 6.437499999999846e-05, 6.39159999999972e-05, 6.436099999999889e-05, 6.397199999999548e-05, 6.422200000000267e-05, 6.42080000000031e-05, 6.4277999999994e-05]</msg>
<status status="PASS" starttime="20201030 18:32:45.613" endtime="20201030 18:32:45.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.602" endtime="20201030 18:32:45.620"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:45.629" endtime="20201030 18:32:45.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.625" endtime="20201030 18:32:45.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.622" endtime="20201030 18:32:45.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.120" endtime="20201030 18:32:45.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.119" endtime="20201030 18:32:45.655"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.678" endtime="20201030 18:32:45.698"></status>
</kw>
<msg timestamp="20201030 18:32:45.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:45.674" endtime="20201030 18:32:45.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:45.702" endtime="20201030 18:32:45.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.708" endtime="20201030 18:32:45.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.667" endtime="20201030 18:32:45.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.661" endtime="20201030 18:32:45.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.732" endtime="20201030 18:32:46.095"></status>
</kw>
<msg timestamp="20201030 18:32:46.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040758319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040823319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:45.729" endtime="20201030 18:32:46.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040758319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040823319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:46.104" endtime="20201030 18:32:46.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.123" endtime="20201030 18:32:46.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.721" endtime="20201030 18:32:46.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.716" endtime="20201030 18:32:46.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:46.141" level="INFO">${RESULT} = [{'diff': 6.499999999999562e-05}, {'diff': 6.47359999999958e-05}, {'diff': 6.377800000000045e-05}, {'diff': 6.520899999999663e-05}, {'diff': 6.512499999999921e-05}, {'diff': 6.533400000000023e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:46.132" endtime="20201030 18:32:46.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:46.152" level="INFO">${ACCURACY} = {'diff': [6.499999999999562e-05, 6.47359999999958e-05, 6.377800000000045e-05, 6.520899999999663e-05, 6.512499999999921e-05, 6.533400000000023e-05, 6.487499999999896e-05, 6.551400000000263e-05, 6.53330...</msg>
<status status="PASS" starttime="20201030 18:32:46.143" endtime="20201030 18:32:46.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.163" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 18:32:46.161" endtime="20201030 18:32:46.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.169" level="INFO">VALUE: [6.499999999999562e-05, 6.47359999999958e-05, 6.377800000000045e-05, 6.520899999999663e-05, 6.512499999999921e-05, 6.533400000000023e-05, 6.487499999999896e-05, 6.551400000000263e-05, 6.533300000000075e-05, 6.511199999999912e-05, 6.487499999999896e-05, 6.486099999999939e-05, 6.466600000000489e-05, 6.552799999999526e-05, 6.544500000000425e-05, 6.515299999999835e-05, 6.49029999999981e-05, 6.512499999999921e-05, 6.536099999999989e-05, 6.522200000000367e-05, 6.526400000000238e-05, 6.411099999999864e-05, 6.501400000000213e-05, 6.563899999999928e-05, 6.538899999999903e-05, 6.555600000000134e-05, 6.466699999999742e-05, 6.49159999999982e-05, 6.541700000000511e-05, 6.511099999999964e-05, 6.488899999999853e-05, 6.483300000000025e-05, 6.50559999999939e-05, 6.461099999999914e-05, 6.5583000000001e-05, 6.554100000000229e-05, 6.530499999999467e-05, 6.479200000000102e-05, 6.42500000000018e-05, 6.481900000000068e-05, 6.519400000000453e-05, 6.558400000000048e-05, 6.513899999999878e-05, 6.47500000000023e-05, 6.504100000000179e-05, 6.470900000000307e-05, 6.472199999999623e-05, 6.554200000000177e-05, 6.52500000000028e-05, 6.548599999999655e-05]</msg>
<status status="PASS" starttime="20201030 18:32:46.166" endtime="20201030 18:32:46.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.154" endtime="20201030 18:32:46.172"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:46.182" endtime="20201030 18:32:46.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.177" endtime="20201030 18:32:46.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.175" endtime="20201030 18:32:46.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.657" endtime="20201030 18:32:46.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.656" endtime="20201030 18:32:46.207"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.230" endtime="20201030 18:32:46.251"></status>
</kw>
<msg timestamp="20201030 18:32:46.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:46.227" endtime="20201030 18:32:46.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:46.254" endtime="20201030 18:32:46.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.261" endtime="20201030 18:32:46.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.220" endtime="20201030 18:32:46.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.214" endtime="20201030 18:32:46.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.284" endtime="20201030 18:32:46.640"></status>
</kw>
<msg timestamp="20201030 18:32:46.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040526222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040592083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:46.281" endtime="20201030 18:32:46.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040526222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040592083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:46.649" endtime="20201030 18:32:46.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.669" endtime="20201030 18:32:46.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.274" endtime="20201030 18:32:46.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.269" endtime="20201030 18:32:46.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:46.686" level="INFO">${RESULT} = [{'diff': 6.586100000000039e-05}, {'diff': 6.658400000000148e-05}, {'diff': 6.5583000000001e-05}, {'diff': 6.568100000000493e-05}, {'diff': 6.613900000000672e-05}, {'diff': 6.632000000000166e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:46.677" endtime="20201030 18:32:46.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:46.696" level="INFO">${ACCURACY} = {'diff': [6.586100000000039e-05, 6.658400000000148e-05, 6.5583000000001e-05, 6.568100000000493e-05, 6.613900000000672e-05, 6.632000000000166e-05, 6.57359999999968e-05, 6.613899999999978e-05, 6.6235999...</msg>
<status status="PASS" starttime="20201030 18:32:46.688" endtime="20201030 18:32:46.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.707" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 18:32:46.705" endtime="20201030 18:32:46.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.713" level="INFO">VALUE: [6.586100000000039e-05, 6.658400000000148e-05, 6.5583000000001e-05, 6.568100000000493e-05, 6.613900000000672e-05, 6.632000000000166e-05, 6.57359999999968e-05, 6.613899999999978e-05, 6.62359999999973e-05, 6.613899999999978e-05, 6.476400000000188e-05, 6.581899999999474e-05, 6.569399999999809e-05, 6.588899999999953e-05, 6.565299999999885e-05, 6.60280000000027e-05, 6.591700000000561e-05, 6.613899999999978e-05, 6.616699999999892e-05, 6.601399999999619e-05, 6.60280000000027e-05, 6.586100000000039e-05, 6.604200000000227e-05, 6.665299999999985e-05, 6.602699999999628e-05, 6.59029999999991e-05, 6.476299999999546e-05, 6.569399999999809e-05, 6.562499999999971e-05, 6.626400000000338e-05, 6.583399999999379e-05, 6.604100000000279e-05, 6.605500000000236e-05, 6.622199999999773e-05, 6.605500000000236e-05, 6.545800000000435e-05, 6.47779999999945e-05, 6.57359999999968e-05, 6.586199999999987e-05, 6.647199999999798e-05, 6.624999999999687e-05, 6.631900000000218e-05, 6.580600000000159e-05, 6.631900000000218e-05, 6.599999999999662e-05, 6.661100000000114e-05, 6.584700000000082e-05, 6.649999999999712e-05, 6.59159999999992e-05, 6.586100000000039e-05]</msg>
<status status="PASS" starttime="20201030 18:32:46.710" endtime="20201030 18:32:46.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.698" endtime="20201030 18:32:46.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:46.726" endtime="20201030 18:32:46.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.721" endtime="20201030 18:32:46.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.719" endtime="20201030 18:32:46.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.209" endtime="20201030 18:32:46.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.208" endtime="20201030 18:32:46.751"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.774" endtime="20201030 18:32:46.796"></status>
</kw>
<msg timestamp="20201030 18:32:46.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:46.771" endtime="20201030 18:32:46.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:46.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:46.800" endtime="20201030 18:32:46.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.806" endtime="20201030 18:32:46.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.763" endtime="20201030 18:32:46.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.757" endtime="20201030 18:32:46.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.830" endtime="20201030 18:32:47.179"></status>
</kw>
<msg timestamp="20201030 18:32:47.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041776125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041843264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:46.826" endtime="20201030 18:32:47.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041776125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041843264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:47.189" endtime="20201030 18:32:47.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.208" endtime="20201030 18:32:47.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.819" endtime="20201030 18:32:47.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.814" endtime="20201030 18:32:47.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:47.226" level="INFO">${RESULT} = [{'diff': 6.713900000000078e-05}, {'diff': 6.722199999999873e-05}, {'diff': 6.704199999999633e-05}, {'diff': 6.669399999999909e-05}, {'diff': 6.670899999999813e-05}, {'diff': 6.744499999999931e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:47.217" endtime="20201030 18:32:47.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:47.235" level="INFO">${ACCURACY} = {'diff': [6.713900000000078e-05, 6.722199999999873e-05, 6.704199999999633e-05, 6.669399999999909e-05, 6.670899999999813e-05, 6.744499999999931e-05, 6.643099999999874e-05, 6.705500000000336e-05, 6.7542...</msg>
<status status="PASS" starttime="20201030 18:32:47.228" endtime="20201030 18:32:47.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.246" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 18:32:47.244" endtime="20201030 18:32:47.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.252" level="INFO">VALUE: [6.713900000000078e-05, 6.722199999999873e-05, 6.704199999999633e-05, 6.669399999999909e-05, 6.670899999999813e-05, 6.744499999999931e-05, 6.643099999999874e-05, 6.705500000000336e-05, 6.754200000000377e-05, 6.754099999999735e-05, 6.755600000000334e-05, 6.75280000000042e-05, 6.594499999999781e-05, 6.70830000000025e-05, 6.57909999999956e-05, 6.749999999999812e-05, 6.666699999999942e-05, 6.57630000000034e-05, 6.611100000000064e-05, 6.672200000000517e-05, 6.711100000000164e-05, 6.745899999999888e-05, 6.718000000000002e-05, 6.716699999999992e-05, 6.688900000000053e-05, 6.70280000000037e-05, 6.681899999999574e-05, 6.70700000000024e-05, 6.692999999999977e-05, 6.691699999999967e-05, 6.661100000000114e-05, 6.733299999999581e-05, 6.687500000000096e-05, 6.702699999999728e-05, 6.747199999999898e-05, 6.729200000000352e-05, 6.719399999999959e-05, 6.663900000000028e-05, 6.715300000000035e-05, 6.751400000000463e-05, 6.729200000000352e-05, 6.719399999999959e-05, 6.699999999999762e-05, 6.747199999999898e-05, 6.708299999999556e-05, 6.702799999999676e-05, 6.705600000000284e-05, 6.667999999999952e-05, 6.732000000000266e-05, 6.704200000000327e-05]</msg>
<status status="PASS" starttime="20201030 18:32:47.249" endtime="20201030 18:32:47.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.237" endtime="20201030 18:32:47.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:47.266" endtime="20201030 18:32:47.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.260" endtime="20201030 18:32:47.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.258" endtime="20201030 18:32:47.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.753" endtime="20201030 18:32:47.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.752" endtime="20201030 18:32:47.292"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.315" endtime="20201030 18:32:47.335"></status>
</kw>
<msg timestamp="20201030 18:32:47.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:47.312" endtime="20201030 18:32:47.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:47.339" endtime="20201030 18:32:47.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.345" endtime="20201030 18:32:47.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.304" endtime="20201030 18:32:47.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.298" endtime="20201030 18:32:47.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.369" endtime="20201030 18:32:47.717"></status>
</kw>
<msg timestamp="20201030 18:32:47.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040233986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040301556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:47.366" endtime="20201030 18:32:47.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040233986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040301556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:47.726" endtime="20201030 18:32:47.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.745" endtime="20201030 18:32:47.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.358" endtime="20201030 18:32:47.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.353" endtime="20201030 18:32:47.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:47.763" level="INFO">${RESULT} = [{'diff': 6.75700000000029e-05}, {'diff': 6.77500000000053e-05}, {'diff': 6.761100000000214e-05}, {'diff': 6.806899999999699e-05}, {'diff': 6.838899999999509e-05}, {'diff': 6.844400000000084e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:47.754" endtime="20201030 18:32:47.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:47.774" level="INFO">${ACCURACY} = {'diff': [6.75700000000029e-05, 6.77500000000053e-05, 6.761100000000214e-05, 6.806899999999699e-05, 6.838899999999509e-05, 6.844400000000084e-05, 6.851299999999921e-05, 6.820800000000016e-05, 6.838900...</msg>
<status status="PASS" starttime="20201030 18:32:47.765" endtime="20201030 18:32:47.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.785" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 18:32:47.782" endtime="20201030 18:32:47.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.790" level="INFO">VALUE: [6.75700000000029e-05, 6.77500000000053e-05, 6.761100000000214e-05, 6.806899999999699e-05, 6.838899999999509e-05, 6.844400000000084e-05, 6.851299999999921e-05, 6.820800000000016e-05, 6.838900000000203e-05, 6.805499999999742e-05, 6.841599999999476e-05, 6.766700000000042e-05, 6.793000000000077e-05, 6.851399999999869e-05, 6.769400000000009e-05, 6.727800000000395e-05, 6.711100000000164e-05, 6.755499999999692e-05, 6.780599999999665e-05, 6.838899999999509e-05, 6.791700000000067e-05, 6.795899999999938e-05, 6.813899999999484e-05, 6.847299999999945e-05, 6.829200000000452e-05, 6.830500000000461e-05, 6.830500000000461e-05, 6.837500000000246e-05, 6.773699999999827e-05, 6.845800000000041e-05, 6.841700000000117e-05, 6.69160000000002e-05, 6.854200000000477e-05, 6.862500000000271e-05, 6.769499999999956e-05, 6.781999999999622e-05, 6.865300000000185e-05, 6.833300000000375e-05, 6.836100000000289e-05, 6.80830000000035e-05, 6.851399999999869e-05, 6.71109999999947e-05, 6.815300000000135e-05, 6.863900000000228e-05, 6.815300000000135e-05, 6.827800000000495e-05, 6.843000000000127e-05, 6.865300000000185e-05, 6.856899999999749e-05, 6.70830000000025e-05]</msg>
<status status="PASS" starttime="20201030 18:32:47.787" endtime="20201030 18:32:47.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.776" endtime="20201030 18:32:47.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:47.803" endtime="20201030 18:32:47.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.799" endtime="20201030 18:32:47.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.796" endtime="20201030 18:32:47.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.294" endtime="20201030 18:32:47.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.293" endtime="20201030 18:32:47.828"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.851" endtime="20201030 18:32:47.872"></status>
</kw>
<msg timestamp="20201030 18:32:47.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:47.848" endtime="20201030 18:32:47.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:47.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:47.875" endtime="20201030 18:32:47.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.882" endtime="20201030 18:32:47.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.841" endtime="20201030 18:32:47.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.835" endtime="20201030 18:32:47.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:47.905" endtime="20201030 18:32:48.254"></status>
</kw>
<msg timestamp="20201030 18:32:48.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040115486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040184986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:47.902" endtime="20201030 18:32:48.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040115486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040184986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:48.264" endtime="20201030 18:32:48.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.283" endtime="20201030 18:32:48.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.895" endtime="20201030 18:32:48.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.890" endtime="20201030 18:32:48.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:48.301" level="INFO">${RESULT} = [{'diff': 6.950000000000012e-05}, {'diff': 6.938899999999609e-05}, {'diff': 6.927699999999953e-05}, {'diff': 6.938899999999609e-05}, {'diff': 6.936099999999695e-05}, {'diff': 6.893100000000124e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:48.292" endtime="20201030 18:32:48.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:48.312" level="INFO">${ACCURACY} = {'diff': [6.950000000000012e-05, 6.938899999999609e-05, 6.927699999999953e-05, 6.938899999999609e-05, 6.936099999999695e-05, 6.893100000000124e-05, 6.809699999999613e-05, 6.956899999999849e-05, 6.7764...</msg>
<status status="PASS" starttime="20201030 18:32:48.303" endtime="20201030 18:32:48.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.323" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 18:32:48.321" endtime="20201030 18:32:48.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.329" level="INFO">VALUE: [6.950000000000012e-05, 6.938899999999609e-05, 6.927699999999953e-05, 6.938899999999609e-05, 6.936099999999695e-05, 6.893100000000124e-05, 6.809699999999613e-05, 6.956899999999849e-05, 6.776400000000488e-05, 6.90700000000044e-05, 6.866700000000142e-05, 6.943000000000227e-05, 6.920800000000116e-05, 6.913800000000331e-05, 6.793000000000077e-05, 6.931899999999824e-05, 6.911100000000364e-05, 6.920800000000116e-05, 6.773699999999827e-05, 6.879199999999808e-05, 6.919499999999412e-05, 6.95559999999984e-05, 6.919400000000159e-05, 6.948600000000055e-05, 6.933299999999781e-05, 6.948700000000002e-05, 6.934699999999738e-05, 6.904199999999833e-05, 6.943100000000174e-05, 6.901399999999919e-05, 6.930599999999815e-05, 6.780600000000359e-05, 6.941700000000217e-05, 6.934700000000432e-05, 6.901399999999919e-05, 6.934699999999738e-05, 6.958299999999806e-05, 6.926399999999944e-05, 6.933300000000475e-05, 6.963900000000328e-05, 6.955499999999892e-05, 6.884699999999688e-05, 6.952799999999926e-05, 6.902799999999876e-05, 6.897200000000048e-05, 6.913900000000278e-05, 6.866700000000142e-05, 6.916700000000192e-05, 6.899999999999962e-05, 6.862500000000271e-05]</msg>
<status status="PASS" starttime="20201030 18:32:48.326" endtime="20201030 18:32:48.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.314" endtime="20201030 18:32:48.332"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:48.342" endtime="20201030 18:32:48.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.337" endtime="20201030 18:32:48.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.335" endtime="20201030 18:32:48.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.830" endtime="20201030 18:32:48.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:47.829" endtime="20201030 18:32:48.367"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.390" endtime="20201030 18:32:48.411"></status>
</kw>
<msg timestamp="20201030 18:32:48.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:48.387" endtime="20201030 18:32:48.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:48.414" endtime="20201030 18:32:48.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.421" endtime="20201030 18:32:48.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.380" endtime="20201030 18:32:48.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.374" endtime="20201030 18:32:48.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.444" endtime="20201030 18:32:48.810"></status>
</kw>
<msg timestamp="20201030 18:32:48.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040432153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040502222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:48.441" endtime="20201030 18:32:48.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040432153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040502222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:48.820" endtime="20201030 18:32:48.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.839" endtime="20201030 18:32:48.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.434" endtime="20201030 18:32:48.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.429" endtime="20201030 18:32:48.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:48.857" level="INFO">${RESULT} = [{'diff': 7.006899999999899e-05}, {'diff': 6.982000000000516e-05}, {'diff': 7.051400000000069e-05}, {'diff': 6.97360000000008e-05}, {'diff': 7.056999999999897e-05}, {'diff': 6.909699999999713e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:48.848" endtime="20201030 18:32:48.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:48.866" level="INFO">${ACCURACY} = {'diff': [7.006899999999899e-05, 6.982000000000516e-05, 7.051400000000069e-05, 6.97360000000008e-05, 7.056999999999897e-05, 6.909699999999713e-05, 6.975000000000037e-05, 7.031899999999924e-05, 7.03199...</msg>
<status status="PASS" starttime="20201030 18:32:48.859" endtime="20201030 18:32:48.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.877" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 18:32:48.875" endtime="20201030 18:32:48.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.883" level="INFO">VALUE: [7.006899999999899e-05, 6.982000000000516e-05, 7.051400000000069e-05, 6.97360000000008e-05, 7.056999999999897e-05, 6.909699999999713e-05, 6.975000000000037e-05, 7.031899999999924e-05, 7.031999999999872e-05, 7.006999999999847e-05, 7.051400000000069e-05, 6.97909999999996e-05, 7.022199999999479e-05, 6.897200000000048e-05, 6.87500000000063e-05, 6.988900000000353e-05, 7.058299999999906e-05, 7.062499999999777e-05, 6.969399999999515e-05, 7.051400000000069e-05, 7.026400000000044e-05, 6.912500000000321e-05, 7.052800000000026e-05, 7.04030000000036e-05, 7.025000000000087e-05, 7.054199999999983e-05, 7.01109999999977e-05, 7.05700000000059e-05, 6.969400000000209e-05, 7.05979999999981e-05, 6.958299999999806e-05, 6.998600000000105e-05, 7.011199999999718e-05, 6.919400000000159e-05, 7.012499999999727e-05, 7.045800000000241e-05, 6.997300000000095e-05, 6.983299999999831e-05, 6.986099999999745e-05, 7.022299999999426e-05, 7.005600000000584e-05, 6.993100000000224e-05, 7.016600000000345e-05, 6.879199999999808e-05, 6.913900000000278e-05, 6.986099999999745e-05, 6.880599999999765e-05, 7.005600000000584e-05, 7.058299999999906e-05, 7.013900000000378e-05]</msg>
<status status="PASS" starttime="20201030 18:32:48.880" endtime="20201030 18:32:48.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.868" endtime="20201030 18:32:48.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:48.896" endtime="20201030 18:32:48.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.891" endtime="20201030 18:32:48.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.889" endtime="20201030 18:32:48.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.369" endtime="20201030 18:32:48.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.368" endtime="20201030 18:32:48.921"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.945" endtime="20201030 18:32:48.968"></status>
</kw>
<msg timestamp="20201030 18:32:48.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:48.941" endtime="20201030 18:32:48.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:48.971" endtime="20201030 18:32:48.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.978" endtime="20201030 18:32:48.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.934" endtime="20201030 18:32:48.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.928" endtime="20201030 18:32:48.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.002" endtime="20201030 18:32:49.365"></status>
</kw>
<msg timestamp="20201030 18:32:49.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042193, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042264431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:48.998" endtime="20201030 18:32:49.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042193, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042264431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:49.375" endtime="20201030 18:32:49.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.394" endtime="20201030 18:32:49.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.991" endtime="20201030 18:32:49.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.986" endtime="20201030 18:32:49.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:49.411" level="INFO">${RESULT} = [{'diff': 7.14309999999968e-05}, {'diff': 7.10559999999999e-05}, {'diff': 7.116700000000392e-05}, {'diff': 7.081899999999974e-05}, {'diff': 6.979199999999908e-05}, {'diff': 7.16109999999992e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:32:49.402" endtime="20201030 18:32:49.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:49.421" level="INFO">${ACCURACY} = {'diff': [7.14309999999968e-05, 7.10559999999999e-05, 7.116700000000392e-05, 7.081899999999974e-05, 6.979199999999908e-05, 7.16109999999992e-05, 7.138900000000503e-05, 7.059800000000505e-05, 7.1374999...</msg>
<status status="PASS" starttime="20201030 18:32:49.413" endtime="20201030 18:32:49.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.432" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 18:32:49.430" endtime="20201030 18:32:49.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.437" level="INFO">VALUE: [7.14309999999968e-05, 7.10559999999999e-05, 7.116700000000392e-05, 7.081899999999974e-05, 6.979199999999908e-05, 7.16109999999992e-05, 7.138900000000503e-05, 7.059800000000505e-05, 7.137499999999852e-05, 7.116700000000392e-05, 7.14309999999968e-05, 7.150000000000212e-05, 7.026400000000044e-05, 7.13480000000058e-05, 7.080599999999965e-05, 7.080599999999965e-05, 7.118100000000349e-05, 7.15690000000005e-05, 7.088899999999759e-05, 7.152800000000126e-05, 7.084699999999888e-05, 7.131900000000024e-05, 7.066699999999648e-05, 7.12360000000023e-05, 7.115299999999741e-05, 7.090299999999716e-05, 7.062499999999777e-05, 6.994400000000234e-05, 7.026400000000044e-05, 7.009700000000507e-05, 7.16109999999992e-05, 7.101300000000171e-05, 7.144400000000384e-05, 6.980599999999865e-05, 7.129199999999364e-05, 7.129099999999416e-05, 7.100000000000162e-05, 7.137499999999852e-05, 7.10559999999999e-05, 7.10559999999999e-05, 7.119400000000359e-05, 7.099999999999468e-05, 7.127800000000101e-05, 7.093000000000377e-05, 7.083299999999931e-05, 7.098599999999511e-05, 7.1069e-05, 7.106999999999947e-05, 7.027800000000001e-05, 7.009699999999813e-05]</msg>
<status status="PASS" starttime="20201030 18:32:49.434" endtime="20201030 18:32:49.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.423" endtime="20201030 18:32:49.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:49.452" endtime="20201030 18:32:49.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.446" endtime="20201030 18:32:49.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.443" endtime="20201030 18:32:49.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.924" endtime="20201030 18:32:49.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.922" endtime="20201030 18:32:49.477"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.500" endtime="20201030 18:32:49.521"></status>
</kw>
<msg timestamp="20201030 18:32:49.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:49.497" endtime="20201030 18:32:49.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:49.524" endtime="20201030 18:32:49.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.531" endtime="20201030 18:32:49.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.490" endtime="20201030 18:32:49.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.484" endtime="20201030 18:32:49.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.554" endtime="20201030 18:32:49.910"></status>
</kw>
<msg timestamp="20201030 18:32:49.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040431069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040503306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:49.551" endtime="20201030 18:32:49.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040431069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040503306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:49.920" endtime="20201030 18:32:49.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.940" endtime="20201030 18:32:49.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.544" endtime="20201030 18:32:49.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.539" endtime="20201030 18:32:49.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:49.957" level="INFO">${RESULT} = [{'diff': 7.223700000000277e-05}, {'diff': 7.216699999999798e-05}, {'diff': 7.243100000000474e-05}, {'diff': 7.212500000000621e-05}, {'diff': 7.127799999999407e-05}, {'diff': 7.211199999999918e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:49.949" endtime="20201030 18:32:49.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:49.969" level="INFO">${ACCURACY} = {'diff': [7.223700000000277e-05, 7.216699999999798e-05, 7.243100000000474e-05, 7.212500000000621e-05, 7.127799999999407e-05, 7.211199999999918e-05, 7.236099999999995e-05, 7.251400000000269e-05, 7.2138...</msg>
<status status="PASS" starttime="20201030 18:32:49.959" endtime="20201030 18:32:49.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.981" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 18:32:49.978" endtime="20201030 18:32:49.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.986" level="INFO">VALUE: [7.223700000000277e-05, 7.216699999999798e-05, 7.243100000000474e-05, 7.212500000000621e-05, 7.127799999999407e-05, 7.211199999999918e-05, 7.236099999999995e-05, 7.251400000000269e-05, 7.213899999999884e-05, 7.204099999999491e-05, 7.236099999999995e-05, 7.179200000000108e-05, 7.144500000000331e-05, 7.077800000000051e-05, 7.213899999999884e-05, 7.241700000000517e-05, 7.241699999999823e-05, 7.255500000000192e-05, 7.212499999999927e-05, 7.172199999999629e-05, 7.254200000000183e-05, 7.188899999999859e-05, 7.215299999999841e-05, 7.233300000000081e-05, 7.227800000000201e-05, 7.259700000000063e-05, 7.201400000000219e-05, 7.094500000000281e-05, 7.181900000000074e-05, 7.233300000000081e-05, 7.076400000000094e-05, 7.212499999999927e-05, 7.20560000000009e-05, 7.255500000000192e-05, 7.237499999999952e-05, 7.22639999999955e-05, 7.26110000000002e-05, 7.084699999999888e-05, 7.21109999999997e-05, 7.22639999999955e-05, 7.141699999999723e-05, 7.188899999999859e-05, 7.180600000000065e-05, 7.126300000000196e-05, 7.188899999999859e-05, 7.188899999999859e-05, 7.257000000000097e-05, 7.180500000000117e-05, 7.259800000000011e-05, 7.225000000000287e-05]</msg>
<status status="PASS" starttime="20201030 18:32:49.983" endtime="20201030 18:32:49.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.971" endtime="20201030 18:32:49.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:49.999" endtime="20201030 18:32:50.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.994" endtime="20201030 18:32:50.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.992" endtime="20201030 18:32:50.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.479" endtime="20201030 18:32:50.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.478" endtime="20201030 18:32:50.024"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.047" endtime="20201030 18:32:50.066"></status>
</kw>
<msg timestamp="20201030 18:32:50.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:50.044" endtime="20201030 18:32:50.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:50.069" endtime="20201030 18:32:50.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.076" endtime="20201030 18:32:50.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.036" endtime="20201030 18:32:50.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.031" endtime="20201030 18:32:50.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.099" endtime="20201030 18:32:50.441"></status>
</kw>
<msg timestamp="20201030 18:32:50.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039837111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039910319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:50.096" endtime="20201030 18:32:50.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039837111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039910319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:50.451" endtime="20201030 18:32:50.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.469" endtime="20201030 18:32:50.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.089" endtime="20201030 18:32:50.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.084" endtime="20201030 18:32:50.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:50.487" level="INFO">${RESULT} = [{'diff': 7.320799999999822e-05}, {'diff': 7.270799999999772e-05}, {'diff': 7.269399999999815e-05}, {'diff': 7.283400000000079e-05}, {'diff': 7.284700000000088e-05}, {'diff': 7.351399999999675e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:50.478" endtime="20201030 18:32:50.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:50.498" level="INFO">${ACCURACY} = {'diff': [7.320799999999822e-05, 7.270799999999772e-05, 7.269399999999815e-05, 7.283400000000079e-05, 7.284700000000088e-05, 7.351399999999675e-05, 7.177800000000151e-05, 7.334699999999444e-05, 7.2638...</msg>
<status status="PASS" starttime="20201030 18:32:50.489" endtime="20201030 18:32:50.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.509" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 18:32:50.507" endtime="20201030 18:32:50.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.514" level="INFO">VALUE: [7.320799999999822e-05, 7.270799999999772e-05, 7.269399999999815e-05, 7.283400000000079e-05, 7.284700000000088e-05, 7.351399999999675e-05, 7.177800000000151e-05, 7.334699999999444e-05, 7.263899999999934e-05, 7.309700000000113e-05, 7.299999999999668e-05, 7.309700000000113e-05, 7.336100000000095e-05, 7.333400000000129e-05, 7.288899999999959e-05, 7.269399999999815e-05, 7.334700000000138e-05, 7.324999999999693e-05, 7.349999999999718e-05, 7.313899999999984e-05, 7.275000000000337e-05, 7.269399999999815e-05, 7.332000000000172e-05, 7.35969999999947e-05, 7.341699999999923e-05, 7.272200000000423e-05, 7.24309999999978e-05, 7.333300000000181e-05, 7.349999999999718e-05, 7.320800000000516e-05, 7.302800000000276e-05, 7.324999999999693e-05, 7.31110000000007e-05, 7.330499999999573e-05, 7.283400000000079e-05, 7.263899999999934e-05, 7.304200000000233e-05, 7.326400000000344e-05, 7.323699999999683e-05, 7.266699999999848e-05, 7.284700000000088e-05, 7.301399999999625e-05, 7.32360000000043e-05, 7.269399999999815e-05, 7.30560000000019e-05, 7.268099999999805e-05, 7.298599999999711e-05, 7.327800000000301e-05, 7.329099999999616e-05, 7.298599999999711e-05]</msg>
<status status="PASS" starttime="20201030 18:32:50.511" endtime="20201030 18:32:50.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.500" endtime="20201030 18:32:50.517"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:50.527" endtime="20201030 18:32:50.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.523" endtime="20201030 18:32:50.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.520" endtime="20201030 18:32:50.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.026" endtime="20201030 18:32:50.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.025" endtime="20201030 18:32:50.552"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.576" endtime="20201030 18:32:50.595"></status>
</kw>
<msg timestamp="20201030 18:32:50.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:50.573" endtime="20201030 18:32:50.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:50.599" endtime="20201030 18:32:50.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.605" endtime="20201030 18:32:50.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.565" endtime="20201030 18:32:50.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.559" endtime="20201030 18:32:50.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.629" endtime="20201030 18:32:50.972"></status>
</kw>
<msg timestamp="20201030 18:32:50.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040954222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041028319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:50.625" endtime="20201030 18:32:50.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:50.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040954222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041028319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:50.981" endtime="20201030 18:32:50.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:50.999" endtime="20201030 18:32:51.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.618" endtime="20201030 18:32:51.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.613" endtime="20201030 18:32:51.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:51.016" level="INFO">${RESULT} = [{'diff': 7.409700000000213e-05}, {'diff': 7.466700000000048e-05}, {'diff': 7.415300000000041e-05}, {'diff': 7.451299999999828e-05}, {'diff': 7.383300000000231e-05}, {'diff': 7.431900000000324e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:51.008" endtime="20201030 18:32:51.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:51.026" level="INFO">${ACCURACY} = {'diff': [7.409700000000213e-05, 7.466700000000048e-05, 7.415300000000041e-05, 7.451299999999828e-05, 7.383300000000231e-05, 7.431900000000324e-05, 7.369399999999915e-05, 7.434699999999544e-05, 7.3736...</msg>
<status status="PASS" starttime="20201030 18:32:51.019" endtime="20201030 18:32:51.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.036" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 18:32:51.034" endtime="20201030 18:32:51.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.042" level="INFO">VALUE: [7.409700000000213e-05, 7.466700000000048e-05, 7.415300000000041e-05, 7.451299999999828e-05, 7.383300000000231e-05, 7.431900000000324e-05, 7.369399999999915e-05, 7.434699999999544e-05, 7.37360000000048e-05, 7.42639999999975e-05, 7.433300000000281e-05, 7.455599999999646e-05, 7.42230000000052e-05, 7.372199999999829e-05, 7.398699999999758e-05, 7.458300000000306e-05, 7.459700000000263e-05, 7.372199999999829e-05, 7.420799999999922e-05, 7.454099999999741e-05, 7.457000000000297e-05, 7.384700000000188e-05, 7.465200000000144e-05, 7.406999999999553e-05, 7.45969999999957e-05, 7.429200000000358e-05, 7.281900000000174e-05, 7.39309999999993e-05, 7.4069000000003e-05, 7.409800000000161e-05, 7.280600000000165e-05, 7.395799999999897e-05, 7.466700000000048e-05, 7.434799999999492e-05, 7.390300000000016e-05, 7.366699999999948e-05, 7.46389999999944e-05, 7.295899999999744e-05, 7.327800000000301e-05, 7.441700000000023e-05, 7.40560000000029e-05, 7.373599999999786e-05, 7.430599999999621e-05, 7.432000000000272e-05, 7.441600000000076e-05, 7.451399999999775e-05, 7.42360000000053e-05, 7.399999999999768e-05, 7.46110000000022e-05, 7.46110000000022e-05]</msg>
<status status="PASS" starttime="20201030 18:32:51.039" endtime="20201030 18:32:51.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.027" endtime="20201030 18:32:51.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:51.054" endtime="20201030 18:32:51.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.050" endtime="20201030 18:32:51.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.047" endtime="20201030 18:32:51.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.554" endtime="20201030 18:32:51.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:50.553" endtime="20201030 18:32:51.079"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.102" endtime="20201030 18:32:51.123"></status>
</kw>
<msg timestamp="20201030 18:32:51.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:51.098" endtime="20201030 18:32:51.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:51.127" endtime="20201030 18:32:51.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.133" endtime="20201030 18:32:51.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.091" endtime="20201030 18:32:51.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.086" endtime="20201030 18:32:51.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.156" endtime="20201030 18:32:51.505"></status>
</kw>
<msg timestamp="20201030 18:32:51.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040787889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040863069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:51.152" endtime="20201030 18:32:51.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040787889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040863069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:51.515" endtime="20201030 18:32:51.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.534" endtime="20201030 18:32:51.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.145" endtime="20201030 18:32:51.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.141" endtime="20201030 18:32:51.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:51.551" level="INFO">${RESULT} = [{'diff': 7.518000000000108e-05}, {'diff': 7.530599999999721e-05}, {'diff': 7.51389999999949e-05}, {'diff': 7.463900000000134e-05}, {'diff': 7.566600000000201e-05}, {'diff': 7.533299999999687e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:51.542" endtime="20201030 18:32:51.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:51.560" level="INFO">${ACCURACY} = {'diff': [7.518000000000108e-05, 7.530599999999721e-05, 7.51389999999949e-05, 7.463900000000134e-05, 7.566600000000201e-05, 7.533299999999687e-05, 7.508300000000356e-05, 7.46110000000022e-05, 7.484699...</msg>
<status status="PASS" starttime="20201030 18:32:51.553" endtime="20201030 18:32:51.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.571" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 18:32:51.568" endtime="20201030 18:32:51.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.576" level="INFO">VALUE: [7.518000000000108e-05, 7.530599999999721e-05, 7.51389999999949e-05, 7.463900000000134e-05, 7.566600000000201e-05, 7.533299999999687e-05, 7.508300000000356e-05, 7.46110000000022e-05, 7.484699999999594e-05, 7.518100000000055e-05, 7.529200000000458e-05, 7.411200000000118e-05, 7.497199999999954e-05, 7.462499999999483e-05, 7.41110000000017e-05, 7.4763999999998e-05, 7.516700000000098e-05, 7.483299999999637e-05, 7.488900000000159e-05, 7.54440000000009e-05, 7.381900000000274e-05, 7.49440000000004e-05, 7.541700000000123e-05, 7.52360000000063e-05, 7.486100000000245e-05, 7.508299999999662e-05, 7.490300000000116e-05, 7.520899999999969e-05, 7.552799999999832e-05, 7.561099999999626e-05, 7.559700000000363e-05, 7.540200000000219e-05, 7.468000000000058e-05, 7.462500000000177e-05, 7.501399999999825e-05, 7.465300000000091e-05, 7.55969999999967e-05, 7.515299999999447e-05, 7.475000000000537e-05, 7.512500000000227e-05, 7.51110000000027e-05, 7.473599999999886e-05, 7.512499999999533e-05, 7.458300000000306e-05, 7.557000000000397e-05, 7.545800000000047e-05, 7.469499999999962e-05, 7.548599999999961e-05, 7.538899999999515e-05, 7.533400000000329e-05]</msg>
<status status="PASS" starttime="20201030 18:32:51.573" endtime="20201030 18:32:51.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.562" endtime="20201030 18:32:51.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:51.594" endtime="20201030 18:32:51.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.584" endtime="20201030 18:32:51.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.582" endtime="20201030 18:32:51.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.081" endtime="20201030 18:32:51.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.080" endtime="20201030 18:32:51.620"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.642" endtime="20201030 18:32:51.662"></status>
</kw>
<msg timestamp="20201030 18:32:51.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:51.639" endtime="20201030 18:32:51.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:51.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:51.665" endtime="20201030 18:32:51.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.672" endtime="20201030 18:32:51.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.632" endtime="20201030 18:32:51.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.626" endtime="20201030 18:32:51.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:51.695" endtime="20201030 18:32:52.041"></status>
</kw>
<msg timestamp="20201030 18:32:52.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039208681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039284542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:51.691" endtime="20201030 18:32:52.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039208681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039284542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:52.051" endtime="20201030 18:32:52.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.069" endtime="20201030 18:32:52.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.684" endtime="20201030 18:32:52.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.680" endtime="20201030 18:32:52.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:52.086" level="INFO">${RESULT} = [{'diff': 7.586099999999651e-05}, {'diff': 7.63189999999983e-05}, {'diff': 7.599999999999968e-05}, {'diff': 7.637500000000352e-05}, {'diff': 7.530499999999773e-05}, {'diff': 7.648600000000061e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:52.078" endtime="20201030 18:32:52.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:52.097" level="INFO">${ACCURACY} = {'diff': [7.586099999999651e-05, 7.63189999999983e-05, 7.599999999999968e-05, 7.637500000000352e-05, 7.530499999999773e-05, 7.648600000000061e-05, 7.617999999999514e-05, 7.66389999999964e-05, 7.591700...</msg>
<status status="PASS" starttime="20201030 18:32:52.088" endtime="20201030 18:32:52.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.108" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 18:32:52.106" endtime="20201030 18:32:52.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.113" level="INFO">VALUE: [7.586099999999651e-05, 7.63189999999983e-05, 7.599999999999968e-05, 7.637500000000352e-05, 7.530499999999773e-05, 7.648600000000061e-05, 7.617999999999514e-05, 7.66389999999964e-05, 7.591700000000173e-05, 7.63890000000031e-05, 7.620900000000069e-05, 7.601399999999925e-05, 7.575000000000637e-05, 7.591599999999532e-05, 7.650000000000018e-05, 7.527799999999807e-05, 7.586100000000345e-05, 7.629199999999864e-05, 7.545800000000047e-05, 7.584700000000388e-05, 7.647300000000051e-05, 7.601399999999925e-05, 7.495799999999997e-05, 7.640300000000266e-05, 7.658300000000506e-05, 7.63189999999983e-05, 7.623600000000036e-05, 7.640300000000266e-05, 7.652799999999932e-05, 7.60969999999972e-05, 7.598600000000011e-05, 7.661099999999726e-05, 7.573599999999986e-05, 7.570900000000019e-05, 7.479199999999714e-05, 7.58189999999978e-05, 7.608299999999762e-05, 7.66110000000042e-05, 7.665300000000291e-05, 7.59440000000014e-05, 7.60839999999971e-05, 7.675000000000043e-05, 7.495799999999997e-05, 7.622200000000079e-05, 7.515300000000141e-05, 7.524999999999893e-05, 7.620800000000122e-05, 7.591599999999532e-05, 7.602799999999882e-05, 7.495799999999997e-05]</msg>
<status status="PASS" starttime="20201030 18:32:52.110" endtime="20201030 18:32:52.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.099" endtime="20201030 18:32:52.116"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:52.125" endtime="20201030 18:32:52.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.121" endtime="20201030 18:32:52.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.119" endtime="20201030 18:32:52.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.622" endtime="20201030 18:32:52.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:51.620" endtime="20201030 18:32:52.151"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.173" endtime="20201030 18:32:52.193"></status>
</kw>
<msg timestamp="20201030 18:32:52.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:52.170" endtime="20201030 18:32:52.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:52.196" endtime="20201030 18:32:52.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.203" endtime="20201030 18:32:52.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.163" endtime="20201030 18:32:52.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.157" endtime="20201030 18:32:52.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.227" endtime="20201030 18:32:52.574"></status>
</kw>
<msg timestamp="20201030 18:32:52.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039331417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039408264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:52.224" endtime="20201030 18:32:52.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039331417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039408264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:52.584" endtime="20201030 18:32:52.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.602" endtime="20201030 18:32:52.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.216" endtime="20201030 18:32:52.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.211" endtime="20201030 18:32:52.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:52.619" level="INFO">${RESULT} = [{'diff': 7.684699999999794e-05}, {'diff': 7.73890000000041e-05}, {'diff': 7.734800000000486e-05}, {'diff': 7.762499999999783e-05}, {'diff': 7.669500000000162e-05}, {'diff': 7.72640000000005e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:52.610" endtime="20201030 18:32:52.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:52.631" level="INFO">${ACCURACY} = {'diff': [7.684699999999794e-05, 7.73890000000041e-05, 7.734800000000486e-05, 7.762499999999783e-05, 7.669500000000162e-05, 7.72640000000005e-05, 7.6764e-05, 7.630600000000515e-05, 7.731900000000624e-...</msg>
<status status="PASS" starttime="20201030 18:32:52.621" endtime="20201030 18:32:52.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.643" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 18:32:52.641" endtime="20201030 18:32:52.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.648" level="INFO">VALUE: [7.684699999999794e-05, 7.73890000000041e-05, 7.734800000000486e-05, 7.762499999999783e-05, 7.669500000000162e-05, 7.72640000000005e-05, 7.6764e-05, 7.630600000000515e-05, 7.731900000000624e-05, 7.64310000000018e-05, 7.720800000000222e-05, 7.707000000000547e-05, 7.693000000000283e-05, 7.61110000000037e-05, 7.705499999999949e-05, 7.748600000000161e-05, 7.668100000000205e-05, 7.700000000000068e-05, 7.733299999999887e-05, 7.57769999999991e-05, 7.730499999999974e-05, 7.722199999999485e-05, 7.749999999999424e-05, 7.718000000000308e-05, 7.758299999999912e-05, 7.697200000000154e-05, 7.752800000000032e-05, 7.733299999999887e-05, 7.612499999999633e-05, 7.759799999999817e-05, 7.723600000000136e-05, 7.70839999999981e-05, 7.7458999999995e-05, 7.708299999999862e-05, 7.679199999999914e-05, 7.65839999999976e-05, 7.745800000000247e-05, 7.673600000000086e-05, 7.734800000000486e-05, 7.71110000000047e-05, 7.74310000000028e-05, 7.683400000000479e-05, 7.733299999999887e-05, 7.690300000000316e-05, 7.712499999999733e-05, 7.723600000000136e-05, 7.681999999999828e-05, 7.736099999999801e-05, 7.591599999999532e-05, 7.5763999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:32:52.645" endtime="20201030 18:32:52.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.633" endtime="20201030 18:32:52.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:52.661" endtime="20201030 18:32:52.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.656" endtime="20201030 18:32:52.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.654" endtime="20201030 18:32:52.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.153" endtime="20201030 18:32:52.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.151" endtime="20201030 18:32:52.686"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.708" endtime="20201030 18:32:52.729"></status>
</kw>
<msg timestamp="20201030 18:32:52.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:52.705" endtime="20201030 18:32:52.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:52.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:52.732" endtime="20201030 18:32:52.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.738" endtime="20201030 18:32:52.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.698" endtime="20201030 18:32:52.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.692" endtime="20201030 18:32:52.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:52.761" endtime="20201030 18:32:53.111"></status>
</kw>
<msg timestamp="20201030 18:32:53.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039426514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039504569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:52.758" endtime="20201030 18:32:53.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039426514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039504569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:53.120" endtime="20201030 18:32:53.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.139" endtime="20201030 18:32:53.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.751" endtime="20201030 18:32:53.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.746" endtime="20201030 18:32:53.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:53.156" level="INFO">${RESULT} = [{'diff': 7.805500000000049e-05}, {'diff': 7.845799999999653e-05}, {'diff': 7.834799999999892e-05}, {'diff': 7.823600000000236e-05}, {'diff': 7.848600000000261e-05}, {'diff': 7.837499999999858e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:53.147" endtime="20201030 18:32:53.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:53.165" level="INFO">${ACCURACY} = {'diff': [7.805500000000049e-05, 7.845799999999653e-05, 7.834799999999892e-05, 7.823600000000236e-05, 7.848600000000261e-05, 7.837499999999858e-05, 7.781999999999928e-05, 7.833299999999987e-05, 7.8388...</msg>
<status status="PASS" starttime="20201030 18:32:53.158" endtime="20201030 18:32:53.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.176" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 18:32:53.174" endtime="20201030 18:32:53.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.182" level="INFO">VALUE: [7.805500000000049e-05, 7.845799999999653e-05, 7.834799999999892e-05, 7.823600000000236e-05, 7.848600000000261e-05, 7.837499999999858e-05, 7.781999999999928e-05, 7.833299999999987e-05, 7.838899999999815e-05, 7.865300000000491e-05, 7.791700000000373e-05, 7.816699999999704e-05, 7.845800000000347e-05, 7.762499999999783e-05, 7.788899999999765e-05, 7.783399999999885e-05, 7.790300000000416e-05, 7.837499999999858e-05, 7.809800000000561e-05, 7.802800000000082e-05, 7.762499999999783e-05, 7.830600000000021e-05, 7.772200000000229e-05, 7.793099999999636e-05, 7.680600000000565e-05, 7.851399999999481e-05, 7.827699999999466e-05, 7.852799999999438e-05, 7.815299999999747e-05, 7.79169999999968e-05, 7.812499999999833e-05, 7.786099999999851e-05, 7.827800000000107e-05, 7.80969999999992e-05, 7.826299999999509e-05, 7.836099999999901e-05, 7.769399999999621e-05, 7.827800000000107e-05, 7.811099999999876e-05, 7.800000000000168e-05, 7.691600000000326e-05, 7.786199999999799e-05, 7.76110000000052e-05, 7.787499999999808e-05, 7.783299999999937e-05, 7.866599999999807e-05, 7.822300000000226e-05, 7.84310000000038e-05, 7.67770000000001e-05, 7.840199999999825e-05]</msg>
<status status="PASS" starttime="20201030 18:32:53.178" endtime="20201030 18:32:53.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.167" endtime="20201030 18:32:53.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:53.194" endtime="20201030 18:32:53.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.190" endtime="20201030 18:32:53.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.187" endtime="20201030 18:32:53.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.688" endtime="20201030 18:32:53.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:52.687" endtime="20201030 18:32:53.219"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.242" endtime="20201030 18:32:53.264"></status>
</kw>
<msg timestamp="20201030 18:32:53.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:53.239" endtime="20201030 18:32:53.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:53.268" endtime="20201030 18:32:53.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.274" endtime="20201030 18:32:53.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.231" endtime="20201030 18:32:53.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.225" endtime="20201030 18:32:53.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.297" endtime="20201030 18:32:53.647"></status>
</kw>
<msg timestamp="20201030 18:32:53.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041685694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041764847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:53.294" endtime="20201030 18:32:53.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041685694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041764847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:53.657" endtime="20201030 18:32:53.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.676" endtime="20201030 18:32:53.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.287" endtime="20201030 18:32:53.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.282" endtime="20201030 18:32:53.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:53.693" level="INFO">${RESULT} = [{'diff': 7.915299999999847e-05}, {'diff': 7.952800000000232e-05}, {'diff': 7.904200000000139e-05}, {'diff': 7.92640000000025e-05}, {'diff': 7.925000000000293e-05}, {'diff': 7.933300000000088e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:53.684" endtime="20201030 18:32:53.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:53.702" level="INFO">${ACCURACY} = {'diff': [7.915299999999847e-05, 7.952800000000232e-05, 7.904200000000139e-05, 7.92640000000025e-05, 7.925000000000293e-05, 7.933300000000088e-05, 7.780500000000024e-05, 7.919500000000412e-05, 7.89999...</msg>
<status status="PASS" starttime="20201030 18:32:53.695" endtime="20201030 18:32:53.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.713" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 18:32:53.711" endtime="20201030 18:32:53.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.718" level="INFO">VALUE: [7.915299999999847e-05, 7.952800000000232e-05, 7.904200000000139e-05, 7.92640000000025e-05, 7.925000000000293e-05, 7.933300000000088e-05, 7.780500000000024e-05, 7.919500000000412e-05, 7.899999999999574e-05, 7.894399999999746e-05, 7.884699999999994e-05, 7.783299999999937e-05, 7.927800000000207e-05, 7.812500000000527e-05, 7.891599999999832e-05, 7.869399999999721e-05, 7.954100000000242e-05, 7.913900000000584e-05, 7.919399999999771e-05, 7.919399999999771e-05, 7.8151999999998e-05, 7.884799999999942e-05, 7.952800000000232e-05, 7.952800000000232e-05, 7.969399999999821e-05, 7.82770000000016e-05, 7.961099999999333e-05, 7.812499999999833e-05, 7.929200000000164e-05, 7.869400000000415e-05, 7.95970000000007e-05, 7.81389999999979e-05, 7.861099999999926e-05, 7.942999999999839e-05, 7.95269999999959e-05, 7.932000000000078e-05, 7.908300000000063e-05, 7.870899999999625e-05, 7.938899999999915e-05, 7.8764000000002e-05, 7.830500000000074e-05, 7.865300000000491e-05, 7.898599999999617e-05, 7.927699999999566e-05, 7.92640000000025e-05, 7.96389999999994e-05, 7.886099999999951e-05, 7.962499999999983e-05, 7.916700000000498e-05, 7.940199999999925e-05]</msg>
<status status="PASS" starttime="20201030 18:32:53.715" endtime="20201030 18:32:53.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.704" endtime="20201030 18:32:53.722"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:53.732" endtime="20201030 18:32:53.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.727" endtime="20201030 18:32:53.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.724" endtime="20201030 18:32:53.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.221" endtime="20201030 18:32:53.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.220" endtime="20201030 18:32:53.758"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.780" endtime="20201030 18:32:53.801"></status>
</kw>
<msg timestamp="20201030 18:32:53.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:53.777" endtime="20201030 18:32:53.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:53.804" endtime="20201030 18:32:53.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.810" endtime="20201030 18:32:53.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.770" endtime="20201030 18:32:53.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.764" endtime="20201030 18:32:53.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.833" endtime="20201030 18:32:54.177"></status>
</kw>
<msg timestamp="20201030 18:32:54.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039565181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039645042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:53.830" endtime="20201030 18:32:54.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039565181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039645042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:54.186" endtime="20201030 18:32:54.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.205" endtime="20201030 18:32:54.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.823" endtime="20201030 18:32:54.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.818" endtime="20201030 18:32:54.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:54.222" level="INFO">${RESULT} = [{'diff': 7.986100000000051e-05}, {'diff': 7.972200000000429e-05}, {'diff': 8.002799999999588e-05}, {'diff': 8.055599999999552e-05}, {'diff': 7.930500000000174e-05}, {'diff': 8.051399999999681e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:54.213" endtime="20201030 18:32:54.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:54.233" level="INFO">${ACCURACY} = {'diff': [7.986100000000051e-05, 7.972200000000429e-05, 8.002799999999588e-05, 8.055599999999552e-05, 7.930500000000174e-05, 8.051399999999681e-05, 8.005599999999502e-05, 8.040200000000025e-05, 7.9749...</msg>
<status status="PASS" starttime="20201030 18:32:54.224" endtime="20201030 18:32:54.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.244" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 18:32:54.241" endtime="20201030 18:32:54.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.249" level="INFO">VALUE: [7.986100000000051e-05, 7.972200000000429e-05, 8.002799999999588e-05, 8.055599999999552e-05, 7.930500000000174e-05, 8.051399999999681e-05, 8.005599999999502e-05, 8.040200000000025e-05, 7.974999999999649e-05, 7.973700000000333e-05, 7.898600000000311e-05, 8.052800000000332e-05, 8.031899999999537e-05, 8.008300000000163e-05, 8.029200000000264e-05, 7.879100000000167e-05, 8.045900000000494e-05, 7.983300000000138e-05, 8.022200000000479e-05, 8.005600000000196e-05, 8.005600000000196e-05, 8.061100000000126e-05, 7.965299999999897e-05, 7.911099999999976e-05, 8.03190000000023e-05, 8.005600000000196e-05, 7.886199999999899e-05, 8.04169999999993e-05, 7.982000000000128e-05, 7.969399999999821e-05, 8.04719999999981e-05, 8.04310000000058e-05, 8.034700000000145e-05, 7.990300000000616e-05, 7.997299999999707e-05, 8.018099999999861e-05, 8.03190000000023e-05, 8.02369999999969e-05, 7.961100000000026e-05, 8.018099999999861e-05, 7.972200000000429e-05, 8.02919999999957e-05, 7.997299999999707e-05, 8.018099999999861e-05, 8.019399999999871e-05, 8.069399999999921e-05, 8.056900000000256e-05, 8.012500000000033e-05, 7.894399999999746e-05, 8.027800000000307e-05]</msg>
<status status="PASS" starttime="20201030 18:32:54.246" endtime="20201030 18:32:54.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.235" endtime="20201030 18:32:54.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:54.261" endtime="20201030 18:32:54.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.257" endtime="20201030 18:32:54.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.255" endtime="20201030 18:32:54.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.760" endtime="20201030 18:32:54.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.759" endtime="20201030 18:32:54.287"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.310" endtime="20201030 18:32:54.331"></status>
</kw>
<msg timestamp="20201030 18:32:54.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:54.307" endtime="20201030 18:32:54.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:54.335" endtime="20201030 18:32:54.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.341" endtime="20201030 18:32:54.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.300" endtime="20201030 18:32:54.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.294" endtime="20201030 18:32:54.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.364" endtime="20201030 18:32:54.735"></status>
</kw>
<msg timestamp="20201030 18:32:54.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040518431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040599625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:54.361" endtime="20201030 18:32:54.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040518431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040599625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:54.744" endtime="20201030 18:32:54.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.763" endtime="20201030 18:32:54.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.354" endtime="20201030 18:32:54.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.349" endtime="20201030 18:32:54.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:54.781" level="INFO">${RESULT} = [{'diff': 8.119399999999971e-05}, {'diff': 8.148599999999867e-05}, {'diff': 8.073600000000486e-05}, {'diff': 8.044399999999896e-05}, {'diff': 8.098599999999817e-05}, {'diff': 8.112500000000133e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:54.772" endtime="20201030 18:32:54.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:54.792" level="INFO">${ACCURACY} = {'diff': [8.119399999999971e-05, 8.148599999999867e-05, 8.073600000000486e-05, 8.044399999999896e-05, 8.098599999999817e-05, 8.112500000000133e-05, 8.157000000000303e-05, 8.126399999999756e-05, 8.1374...</msg>
<status status="PASS" starttime="20201030 18:32:54.783" endtime="20201030 18:32:54.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.804" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 18:32:54.801" endtime="20201030 18:32:54.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.809" level="INFO">VALUE: [8.119399999999971e-05, 8.148599999999867e-05, 8.073600000000486e-05, 8.044399999999896e-05, 8.098599999999817e-05, 8.112500000000133e-05, 8.157000000000303e-05, 8.126399999999756e-05, 8.137499999999465e-05, 8.105500000000349e-05, 8.118000000000014e-05, 8.151399999999781e-05, 7.99589999999975e-05, 8.136100000000202e-05, 8.137500000000158e-05, 8.087499999999415e-05, 8.083400000000185e-05, 8.133299999999594e-05, 8.10840000000021e-05, 8.109699999999526e-05, 8.118000000000014e-05, 8.159800000000217e-05, 8.088900000000065e-05, 8.165299999999404e-05, 8.156900000000356e-05, 7.976399999999606e-05, 8.108300000000263e-05, 8.112500000000133e-05, 8.165300000000097e-05, 7.991599999999932e-05, 8.126399999999756e-05, 8.087499999999415e-05, 8.14719999999991e-05, 8.108300000000263e-05, 7.976399999999606e-05, 8.09719999999986e-05, 8.122199999999885e-05, 8.133299999999594e-05, 7.994499999999793e-05, 7.997200000000454e-05, 8.113800000000143e-05, 8.132000000000278e-05, 8.1152000000001e-05, 8.133399999999541e-05, 8.138900000000115e-05, 8.136200000000149e-05, 8.012500000000033e-05, 8.131899999999637e-05, 8.145799999999953e-05, 8.134700000000245e-05]</msg>
<status status="PASS" starttime="20201030 18:32:54.806" endtime="20201030 18:32:54.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.794" endtime="20201030 18:32:54.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:54.826" endtime="20201030 18:32:54.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.822" endtime="20201030 18:32:54.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.819" endtime="20201030 18:32:54.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.289" endtime="20201030 18:32:54.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.288" endtime="20201030 18:32:54.852"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.874" endtime="20201030 18:32:54.895"></status>
</kw>
<msg timestamp="20201030 18:32:54.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:54.871" endtime="20201030 18:32:54.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:54.899" endtime="20201030 18:32:54.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.905" endtime="20201030 18:32:54.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.864" endtime="20201030 18:32:54.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.858" endtime="20201030 18:32:54.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.929" endtime="20201030 18:32:55.280"></status>
</kw>
<msg timestamp="20201030 18:32:55.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040020278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040102083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:54.925" endtime="20201030 18:32:55.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040020278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040102083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:55.289" endtime="20201030 18:32:55.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.309" endtime="20201030 18:32:55.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.918" endtime="20201030 18:32:55.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.913" endtime="20201030 18:32:55.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:55.328" level="INFO">${RESULT} = [{'diff': 8.18049999999973e-05}, {'diff': 8.234700000000345e-05}, {'diff': 8.132000000000278e-05}, {'diff': 8.169499999999968e-05}, {'diff': 8.166700000000054e-05}, {'diff': 8.095799999999903e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:55.318" endtime="20201030 18:32:55.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:55.338" level="INFO">${ACCURACY} = {'diff': [8.18049999999973e-05, 8.234700000000345e-05, 8.132000000000278e-05, 8.169499999999968e-05, 8.166700000000054e-05, 8.095799999999903e-05, 8.256999999999709e-05, 8.248599999999967e-05, 8.19019...</msg>
<status status="PASS" starttime="20201030 18:32:55.330" endtime="20201030 18:32:55.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.349" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 18:32:55.347" endtime="20201030 18:32:55.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.354" level="INFO">VALUE: [8.18049999999973e-05, 8.234700000000345e-05, 8.132000000000278e-05, 8.169499999999968e-05, 8.166700000000054e-05, 8.095799999999903e-05, 8.256999999999709e-05, 8.248599999999967e-05, 8.190199999999481e-05, 8.11390000000009e-05, 8.23469999999965e-05, 8.238900000000215e-05, 8.186200000000199e-05, 8.211099999999583e-05, 8.21249999999954e-05, 8.227800000000507e-05, 8.205599999999702e-05, 8.201400000000525e-05, 8.266599999999513e-05, 8.195800000000003e-05, 8.225000000000593e-05, 8.079200000000314e-05, 8.204100000000492e-05, 8.255499999999805e-05, 8.119399999999971e-05, 8.11249999999944e-05, 8.17770000000051e-05, 8.14719999999991e-05, 8.258299999999719e-05, 8.19719999999996e-05, 8.124999999999799e-05, 8.26669999999946e-05, 8.211100000000277e-05, 8.254099999999848e-05, 8.090300000000022e-05, 8.208299999999669e-05, 8.186099999999558e-05, 8.218100000000061e-05, 8.245800000000053e-05, 8.222200000000679e-05, 8.258399999999666e-05, 8.201400000000525e-05, 8.208300000000363e-05, 8.263899999999547e-05, 8.205500000000449e-05, 8.223599999999942e-05, 8.21390000000019e-05, 8.183300000000338e-05, 8.21249999999954e-05, 8.257000000000403e-05]</msg>
<status status="PASS" starttime="20201030 18:32:55.351" endtime="20201030 18:32:55.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.340" endtime="20201030 18:32:55.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:55.367" endtime="20201030 18:32:55.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.363" endtime="20201030 18:32:55.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.360" endtime="20201030 18:32:55.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.854" endtime="20201030 18:32:55.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.852" endtime="20201030 18:32:55.393"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.416" endtime="20201030 18:32:55.439"></status>
</kw>
<msg timestamp="20201030 18:32:55.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:55.412" endtime="20201030 18:32:55.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:55.442" endtime="20201030 18:32:55.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.448" endtime="20201030 18:32:55.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.405" endtime="20201030 18:32:55.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.399" endtime="20201030 18:32:55.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.472" endtime="20201030 18:32:55.821"></status>
</kw>
<msg timestamp="20201030 18:32:55.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041865556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041949181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:55.469" endtime="20201030 18:32:55.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041865556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041949181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:55.831" endtime="20201030 18:32:55.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.850" endtime="20201030 18:32:55.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.462" endtime="20201030 18:32:55.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.457" endtime="20201030 18:32:55.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:55.868" level="INFO">${RESULT} = [{'diff': 8.362500000000384e-05}, {'diff': 8.352799999999938e-05}, {'diff': 8.31669999999951e-05}, {'diff': 8.357000000000503e-05}, {'diff': 8.312500000000334e-05}, {'diff': 8.19719999999996e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:55.859" endtime="20201030 18:32:55.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:55.878" level="INFO">${ACCURACY} = {'diff': [8.362500000000384e-05, 8.352799999999938e-05, 8.31669999999951e-05, 8.357000000000503e-05, 8.312500000000334e-05, 8.19719999999996e-05, 8.329099999999923e-05, 8.337500000000359e-05, 8.336099...</msg>
<status status="PASS" starttime="20201030 18:32:55.870" endtime="20201030 18:32:55.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.889" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 18:32:55.887" endtime="20201030 18:32:55.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.895" level="INFO">VALUE: [8.362500000000384e-05, 8.352799999999938e-05, 8.31669999999951e-05, 8.357000000000503e-05, 8.312500000000334e-05, 8.19719999999996e-05, 8.329099999999923e-05, 8.337500000000359e-05, 8.336099999999708e-05, 8.341600000000282e-05, 8.363899999999647e-05, 8.272200000000035e-05, 8.249999999999924e-05, 8.306999999999759e-05, 8.354199999999895e-05, 8.230599999999727e-05, 8.276399999999906e-05, 8.324999999999999e-05, 8.336099999999708e-05, 8.272200000000035e-05, 8.302799999999888e-05, 8.36249999999969e-05, 8.36249999999969e-05, 8.269500000000068e-05, 8.359699999999776e-05, 8.361100000000427e-05, 8.304099999999898e-05, 8.266599999999513e-05, 8.19589999999995e-05, 8.258299999999719e-05, 8.324999999999999e-05, 8.297300000000007e-05, 8.32919999999987e-05, 8.272200000000035e-05, 8.231899999999737e-05, 8.311099999999683e-05, 8.351399999999981e-05, 8.308300000000463e-05, 8.322200000000085e-05, 8.23469999999965e-05, 8.354099999999948e-05, 8.35840000000046e-05, 8.357000000000503e-05, 8.316700000000204e-05, 8.180600000000371e-05, 8.308299999999769e-05, 8.18190000000038e-05, 8.195800000000003e-05, 8.33049999999988e-05, 8.311100000000377e-05]</msg>
<status status="PASS" starttime="20201030 18:32:55.892" endtime="20201030 18:32:55.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.880" endtime="20201030 18:32:55.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:55.909" endtime="20201030 18:32:55.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.903" endtime="20201030 18:32:55.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.900" endtime="20201030 18:32:55.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.395" endtime="20201030 18:32:55.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.394" endtime="20201030 18:32:55.934"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.957" endtime="20201030 18:32:55.978"></status>
</kw>
<msg timestamp="20201030 18:32:55.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:55.954" endtime="20201030 18:32:55.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:55.982" endtime="20201030 18:32:55.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.988" endtime="20201030 18:32:55.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.947" endtime="20201030 18:32:55.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.941" endtime="20201030 18:32:55.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.012" endtime="20201030 18:32:56.363"></status>
</kw>
<msg timestamp="20201030 18:32:56.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040138306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040222472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:56.009" endtime="20201030 18:32:56.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040138306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040222472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:56.372" endtime="20201030 18:32:56.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.392" endtime="20201030 18:32:56.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.002" endtime="20201030 18:32:56.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.997" endtime="20201030 18:32:56.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:56.409" level="INFO">${RESULT} = [{'diff': 8.416600000000357e-05}, {'diff': 8.451400000000081e-05}, {'diff': 8.423600000000142e-05}, {'diff': 8.370800000000178e-05}, {'diff': 8.41249999999974e-05}, {'diff': 8.422300000000132e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:56.400" endtime="20201030 18:32:56.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:56.420" level="INFO">${ACCURACY} = {'diff': [8.416600000000357e-05, 8.451400000000081e-05, 8.423600000000142e-05, 8.370800000000178e-05, 8.41249999999974e-05, 8.422300000000132e-05, 8.454199999999995e-05, 8.46520000000045e-05, 8.429100...</msg>
<status status="PASS" starttime="20201030 18:32:56.411" endtime="20201030 18:32:56.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.431" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 18:32:56.429" endtime="20201030 18:32:56.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.437" level="INFO">VALUE: [8.416600000000357e-05, 8.451400000000081e-05, 8.423600000000142e-05, 8.370800000000178e-05, 8.41249999999974e-05, 8.422300000000132e-05, 8.454199999999995e-05, 8.46520000000045e-05, 8.429100000000023e-05, 8.443100000000286e-05, 8.405599999999902e-05, 8.409699999999826e-05, 8.42919999999997e-05, 8.411100000000477e-05, 8.440300000000373e-05, 8.4459000000002e-05, 8.433399999999841e-05, 8.425000000000099e-05, 8.423600000000142e-05, 8.438900000000416e-05, 8.387499999999715e-05, 8.392999999999595e-05, 8.31799999999952e-05, 8.392999999999595e-05, 8.395800000000203e-05, 8.404199999999945e-05, 8.42919999999997e-05, 8.393099999999543e-05, 8.40840000000051e-05, 8.43469999999985e-05, 8.463899999999747e-05, 8.413899999999697e-05, 8.390300000000323e-05, 8.44170000000033e-05, 8.440300000000373e-05, 8.388899999999672e-05, 8.416599999999663e-05, 8.372300000000082e-05, 8.461099999999833e-05, 8.426400000000056e-05, 8.347299999999364e-05, 8.366700000000254e-05, 8.41390000000039e-05, 8.298600000000017e-05, 8.420899999999482e-05, 8.433399999999841e-05, 8.279200000000514e-05, 8.366600000000307e-05, 8.376400000000006e-05, 8.375000000000049e-05]</msg>
<status status="PASS" starttime="20201030 18:32:56.434" endtime="20201030 18:32:56.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.422" endtime="20201030 18:32:56.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:56.449" endtime="20201030 18:32:56.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.445" endtime="20201030 18:32:56.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.442" endtime="20201030 18:32:56.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.936" endtime="20201030 18:32:56.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.935" endtime="20201030 18:32:56.475"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.498" endtime="20201030 18:32:56.519"></status>
</kw>
<msg timestamp="20201030 18:32:56.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:56.494" endtime="20201030 18:32:56.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:56.523" endtime="20201030 18:32:56.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.529" endtime="20201030 18:32:56.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.487" endtime="20201030 18:32:56.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.481" endtime="20201030 18:32:56.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.553" endtime="20201030 18:32:56.903"></status>
</kw>
<msg timestamp="20201030 18:32:56.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040457625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040542875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:56.550" endtime="20201030 18:32:56.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040457625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040542875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:56.913" endtime="20201030 18:32:56.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:56.932" endtime="20201030 18:32:56.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.542" endtime="20201030 18:32:56.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.537" endtime="20201030 18:32:56.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:56.950" level="INFO">${RESULT} = [{'diff': 8.525000000000199e-05}, {'diff': 8.504200000000045e-05}, {'diff': 8.377799999999963e-05}, {'diff': 8.38049999999993e-05}, {'diff': 8.54449999999965e-05}, {'diff': 8.54449999999965e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:32:56.941" endtime="20201030 18:32:56.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:56.965" level="INFO">${ACCURACY} = {'diff': [8.525000000000199e-05, 8.504200000000045e-05, 8.377799999999963e-05, 8.38049999999993e-05, 8.54449999999965e-05, 8.54449999999965e-05, 8.398600000000117e-05, 8.525000000000199e-05, 8.5388999...</msg>
<status status="PASS" starttime="20201030 18:32:56.952" endtime="20201030 18:32:56.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.976" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 18:32:56.974" endtime="20201030 18:32:56.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:56.982" level="INFO">VALUE: [8.525000000000199e-05, 8.504200000000045e-05, 8.377799999999963e-05, 8.38049999999993e-05, 8.54449999999965e-05, 8.54449999999965e-05, 8.398600000000117e-05, 8.525000000000199e-05, 8.538899999999822e-05, 8.537499999999865e-05, 8.480599999999977e-05, 8.555600000000052e-05, 8.545799999999659e-05, 8.537499999999865e-05, 8.53469999999995e-05, 8.502800000000088e-05, 8.566599999999813e-05, 8.483299999999944e-05, 8.462500000000484e-05, 8.39720000000016e-05, 8.508299999999969e-05, 8.548600000000267e-05, 8.472300000000182e-05, 8.545799999999659e-05, 8.55129999999954e-05, 8.431999999999884e-05, 8.487499999999815e-05, 8.533299999999994e-05, 8.519400000000371e-05, 8.526400000000156e-05, 8.530600000000027e-05, 8.519400000000371e-05, 8.537499999999865e-05, 8.520799999999634e-05, 8.531999999999984e-05, 8.508299999999969e-05, 8.491699999999686e-05, 8.477800000000063e-05, 8.554100000000148e-05, 8.54720000000031e-05, 8.483399999999891e-05, 8.543000000000439e-05, 8.506999999999959e-05, 8.552800000000138e-05, 8.565300000000498e-05, 8.506900000000012e-05, 8.397300000000107e-05, 8.506900000000012e-05, 8.556900000000062e-05, 8.526299999999515e-05]</msg>
<status status="PASS" starttime="20201030 18:32:56.978" endtime="20201030 18:32:56.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.967" endtime="20201030 18:32:56.985"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:56.994" endtime="20201030 18:32:57.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.990" endtime="20201030 18:32:57.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.987" endtime="20201030 18:32:57.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.477" endtime="20201030 18:32:57.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:56.476" endtime="20201030 18:32:57.020"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.043" endtime="20201030 18:32:57.065"></status>
</kw>
<msg timestamp="20201030 18:32:57.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:57.040" endtime="20201030 18:32:57.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:57.069" endtime="20201030 18:32:57.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.075" endtime="20201030 18:32:57.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.032" endtime="20201030 18:32:57.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.026" endtime="20201030 18:32:57.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.099" endtime="20201030 18:32:57.461"></status>
</kw>
<msg timestamp="20201030 18:32:57.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040490597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040576569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:57.096" endtime="20201030 18:32:57.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040490597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040576569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:57.470" endtime="20201030 18:32:57.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.489" endtime="20201030 18:32:57.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.088" endtime="20201030 18:32:57.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.083" endtime="20201030 18:32:57.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:57.507" level="INFO">${RESULT} = [{'diff': 8.597199999999666e-05}, {'diff': 8.601399999999537e-05}, {'diff': 8.605600000000102e-05}, {'diff': 8.586099999999958e-05}, {'diff': 8.595800000000403e-05}, {'diff': 8.4846999999999e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:57.498" endtime="20201030 18:32:57.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:57.516" level="INFO">${ACCURACY} = {'diff': [8.597199999999666e-05, 8.601399999999537e-05, 8.605600000000102e-05, 8.586099999999958e-05, 8.595800000000403e-05, 8.4846999999999e-05, 8.622300000000332e-05, 8.588899999999872e-05, 8.638899...</msg>
<status status="PASS" starttime="20201030 18:32:57.509" endtime="20201030 18:32:57.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.527" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 18:32:57.525" endtime="20201030 18:32:57.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.533" level="INFO">VALUE: [8.597199999999666e-05, 8.601399999999537e-05, 8.605600000000102e-05, 8.586099999999958e-05, 8.595800000000403e-05, 8.4846999999999e-05, 8.622300000000332e-05, 8.588899999999872e-05, 8.638899999999922e-05, 8.632000000000084e-05, 8.501400000000131e-05, 8.494500000000293e-05, 8.648700000000314e-05, 8.595800000000403e-05, 8.622300000000332e-05, 8.576400000000206e-05, 8.537499999999865e-05, 8.654199999999501e-05, 8.611099999999983e-05, 8.63050000000018e-05, 8.583399999999991e-05, 8.620799999999734e-05, 8.630600000000127e-05, 8.572199999999641e-05, 8.63470000000005e-05, 8.645799999999759e-05, 8.536100000000602e-05, 8.5847e-05, 8.630600000000127e-05, 8.630599999999433e-05, 8.645799999999759e-05, 8.644399999999802e-05, 8.482000000000628e-05, 8.513899999999797e-05, 8.654200000000195e-05, 8.630600000000127e-05, 8.591699999999786e-05, 8.606900000000112e-05, 8.579100000000173e-05, 8.644400000000496e-05, 8.593000000000489e-05, 8.623599999999648e-05, 8.636100000000008e-05, 8.607000000000059e-05, 8.657000000000109e-05, 8.601400000000231e-05, 8.654100000000248e-05, 8.637499999999965e-05, 8.64449999999975e-05, 8.637499999999965e-05]</msg>
<status status="PASS" starttime="20201030 18:32:57.529" endtime="20201030 18:32:57.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.518" endtime="20201030 18:32:57.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:57.545" endtime="20201030 18:32:57.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.541" endtime="20201030 18:32:57.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.538" endtime="20201030 18:32:57.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.022" endtime="20201030 18:32:57.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.021" endtime="20201030 18:32:57.571"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.594" endtime="20201030 18:32:57.617"></status>
</kw>
<msg timestamp="20201030 18:32:57.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:57.591" endtime="20201030 18:32:57.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:57.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:57.620" endtime="20201030 18:32:57.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.627" endtime="20201030 18:32:57.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.583" endtime="20201030 18:32:57.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.577" endtime="20201030 18:32:57.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:57.650" endtime="20201030 18:32:58.000"></status>
</kw>
<msg timestamp="20201030 18:32:58.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042004111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042090931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:57.647" endtime="20201030 18:32:58.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042004111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042090931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:58.010" endtime="20201030 18:32:58.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.028" endtime="20201030 18:32:58.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.640" endtime="20201030 18:32:58.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.635" endtime="20201030 18:32:58.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:58.046" level="INFO">${RESULT} = [{'diff': 8.682000000000134e-05}, {'diff': 8.73050000000028e-05}, {'diff': 8.750000000000424e-05}, {'diff': 8.676399999999612e-05}, {'diff': 8.755499999999611e-05}, {'diff': 8.701399999999637e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:58.037" endtime="20201030 18:32:58.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:58.055" level="INFO">${ACCURACY} = {'diff': [8.682000000000134e-05, 8.73050000000028e-05, 8.750000000000424e-05, 8.676399999999612e-05, 8.755499999999611e-05, 8.701399999999637e-05, 8.694399999999852e-05, 8.618099999999768e-05, 8.72780...</msg>
<status status="PASS" starttime="20201030 18:32:58.048" endtime="20201030 18:32:58.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.066" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 18:32:58.064" endtime="20201030 18:32:58.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.072" level="INFO">VALUE: [8.682000000000134e-05, 8.73050000000028e-05, 8.750000000000424e-05, 8.676399999999612e-05, 8.755499999999611e-05, 8.701399999999637e-05, 8.694399999999852e-05, 8.618099999999768e-05, 8.727800000000313e-05, 8.686100000000058e-05, 8.688899999999972e-05, 8.679099999999579e-05, 8.73050000000028e-05, 8.76250000000009e-05, 8.679099999999579e-05, 8.774999999999755e-05, 8.68050000000023e-05, 8.666599999999913e-05, 8.761099999999439e-05, 8.716599999999963e-05, 8.727800000000313e-05, 8.733300000000194e-05, 8.580499999999436e-05, 8.595799999999709e-05, 8.747199999999816e-05, 8.708300000000169e-05, 8.745799999999859e-05, 8.736100000000108e-05, 8.759700000000176e-05, 8.763900000000047e-05, 8.727799999999619e-05, 8.66669999999986e-05, 8.748600000000467e-05, 8.738900000000022e-05, 8.672199999999741e-05, 8.61249999999994e-05, 8.688899999999972e-05, 8.737500000000065e-05, 8.730499999999586e-05, 8.741599999999988e-05, 8.759700000000176e-05, 8.711099999999389e-05, 8.679099999999579e-05, 8.670799999999784e-05, 8.754200000000295e-05, 8.672199999999741e-05, 8.712499999999346e-05, 8.745799999999859e-05, 8.742999999999945e-05, 8.736100000000108e-05]</msg>
<status status="PASS" starttime="20201030 18:32:58.069" endtime="20201030 18:32:58.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.057" endtime="20201030 18:32:58.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:58.086" endtime="20201030 18:32:58.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.080" endtime="20201030 18:32:58.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.078" endtime="20201030 18:32:58.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.573" endtime="20201030 18:32:58.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:57.572" endtime="20201030 18:32:58.111"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.134" endtime="20201030 18:32:58.156"></status>
</kw>
<msg timestamp="20201030 18:32:58.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:58.131" endtime="20201030 18:32:58.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:58.159" endtime="20201030 18:32:58.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.166" endtime="20201030 18:32:58.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.124" endtime="20201030 18:32:58.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.118" endtime="20201030 18:32:58.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.189" endtime="20201030 18:32:58.539"></status>
</kw>
<msg timestamp="20201030 18:32:58.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039981292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040069236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:58.186" endtime="20201030 18:32:58.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039981292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040069236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:58.549" endtime="20201030 18:32:58.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.568" endtime="20201030 18:32:58.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.179" endtime="20201030 18:32:58.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.174" endtime="20201030 18:32:58.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:58.586" level="INFO">${RESULT} = [{'diff': 8.794399999999952e-05}, {'diff': 8.865200000000156e-05}, {'diff': 8.787500000000115e-05}, {'diff': 8.801400000000431e-05}, {'diff': 8.729199999999576e-05}, {'diff': 8.774999999999755e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:58.577" endtime="20201030 18:32:58.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:58.597" level="INFO">${ACCURACY} = {'diff': [8.794399999999952e-05, 8.865200000000156e-05, 8.787500000000115e-05, 8.801400000000431e-05, 8.729199999999576e-05, 8.774999999999755e-05, 8.823600000000542e-05, 8.823599999999848e-05, 8.7679...</msg>
<status status="PASS" starttime="20201030 18:32:58.588" endtime="20201030 18:32:58.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.608" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 18:32:58.606" endtime="20201030 18:32:58.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.613" level="INFO">VALUE: [8.794399999999952e-05, 8.865200000000156e-05, 8.787500000000115e-05, 8.801400000000431e-05, 8.729199999999576e-05, 8.774999999999755e-05, 8.823600000000542e-05, 8.823599999999848e-05, 8.76799999999997e-05, 8.76799999999997e-05, 8.6847000000001e-05, 8.82920000000037e-05, 8.770899999999832e-05, 8.811100000000183e-05, 8.827800000000413e-05, 8.774999999999755e-05, 8.852800000000438e-05, 8.834699999999557e-05, 8.774999999999755e-05, 8.76799999999997e-05, 8.813900000000097e-05, 8.833400000000241e-05, 8.787500000000115e-05, 8.859700000000276e-05, 8.830499999999686e-05, 8.838900000000122e-05, 8.852699999999797e-05, 8.790200000000081e-05, 8.793099999999943e-05, 8.798599999999823e-05, 8.786099999999464e-05, 8.822199999999891e-05, 8.697199999999766e-05, 8.823599999999848e-05, 8.837500000000165e-05, 8.79170000000068e-05, 8.840300000000079e-05, 8.837499999999471e-05, 8.826400000000456e-05, 8.775000000000449e-05, 8.792999999999995e-05, 8.715200000000006e-05, 8.820799999999934e-05, 8.770799999999884e-05, 8.731900000000237e-05, 8.802699999999747e-05, 8.788900000000072e-05, 8.819399999999977e-05, 8.820899999999882e-05, 8.825000000000499e-05]</msg>
<status status="PASS" starttime="20201030 18:32:58.610" endtime="20201030 18:32:58.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.599" endtime="20201030 18:32:58.616"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:58.626" endtime="20201030 18:32:58.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.622" endtime="20201030 18:32:58.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.619" endtime="20201030 18:32:58.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.114" endtime="20201030 18:32:58.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.112" endtime="20201030 18:32:58.653"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.677" endtime="20201030 18:32:58.698"></status>
</kw>
<msg timestamp="20201030 18:32:58.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:58.674" endtime="20201030 18:32:58.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:58.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:58.702" endtime="20201030 18:32:58.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.708" endtime="20201030 18:32:58.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.666" endtime="20201030 18:32:58.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.660" endtime="20201030 18:32:58.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:58.732" endtime="20201030 18:32:59.082"></status>
</kw>
<msg timestamp="20201030 18:32:59.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042765819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042854917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:58.729" endtime="20201030 18:32:59.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042765819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042854917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:59.092" endtime="20201030 18:32:59.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.111" endtime="20201030 18:32:59.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.721" endtime="20201030 18:32:59.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.716" endtime="20201030 18:32:59.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:59.128" level="INFO">${RESULT} = [{'diff': 8.909800000000273e-05}, {'diff': 8.922199999999991e-05}, {'diff': 8.941700000000136e-05}, {'diff': 8.956899999999768e-05}, {'diff': 8.901399999999837e-05}, {'diff': 8.920899999999982e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:59.119" endtime="20201030 18:32:59.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:59.140" level="INFO">${ACCURACY} = {'diff': [8.909800000000273e-05, 8.922199999999991e-05, 8.941700000000136e-05, 8.956899999999768e-05, 8.901399999999837e-05, 8.920899999999982e-05, 8.941700000000136e-05, 8.891600000000138e-05, 8.9388...</msg>
<status status="PASS" starttime="20201030 18:32:59.130" endtime="20201030 18:32:59.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.151" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 18:32:59.148" endtime="20201030 18:32:59.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.156" level="INFO">VALUE: [8.909800000000273e-05, 8.922199999999991e-05, 8.941700000000136e-05, 8.956899999999768e-05, 8.901399999999837e-05, 8.920899999999982e-05, 8.941700000000136e-05, 8.891600000000138e-05, 8.938899999999528e-05, 8.876399999999812e-05, 8.875000000000549e-05, 8.91800000000012e-05, 8.94999999999993e-05, 8.927699999999872e-05, 8.919500000000025e-05, 8.861100000000233e-05, 8.922199999999991e-05, 8.895899999999957e-05, 8.962499999999596e-05, 8.945900000000007e-05, 8.929199999999776e-05, 8.96659999999952e-05, 8.780499999999636e-05, 8.909699999999632e-05, 8.956900000000462e-05, 8.894400000000052e-05, 8.923599999999948e-05, 8.958299999999725e-05, 8.890300000000129e-05, 8.894400000000052e-05, 8.934699999999657e-05, 8.944399999999408e-05, 8.923599999999948e-05, 8.930599999999733e-05, 8.813900000000097e-05, 8.938900000000222e-05, 8.8945e-05, 8.965300000000204e-05, 8.813900000000097e-05, 8.902699999999847e-05, 8.913900000000197e-05, 8.938900000000222e-05, 8.869499999999975e-05, 8.923599999999948e-05, 8.944400000000102e-05, 8.943000000000145e-05, 8.969500000000075e-05, 8.911100000000283e-05, 8.96670000000016e-05, 8.884700000000301e-05]</msg>
<status status="PASS" starttime="20201030 18:32:59.153" endtime="20201030 18:32:59.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.141" endtime="20201030 18:32:59.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:59.169" endtime="20201030 18:32:59.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.165" endtime="20201030 18:32:59.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.162" endtime="20201030 18:32:59.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.656" endtime="20201030 18:32:59.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:58.654" endtime="20201030 18:32:59.195"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.218" endtime="20201030 18:32:59.239"></status>
</kw>
<msg timestamp="20201030 18:32:59.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:59.214" endtime="20201030 18:32:59.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:59.243" endtime="20201030 18:32:59.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.249" endtime="20201030 18:32:59.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.207" endtime="20201030 18:32:59.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.201" endtime="20201030 18:32:59.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.273" endtime="20201030 18:32:59.625"></status>
</kw>
<msg timestamp="20201030 18:32:59.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040244986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040334694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:59.269" endtime="20201030 18:32:59.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040244986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040334694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:59.635" endtime="20201030 18:32:59.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.654" endtime="20201030 18:32:59.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.262" endtime="20201030 18:32:59.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.257" endtime="20201030 18:32:59.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:59.672" level="INFO">${RESULT} = [{'diff': 8.97079999999939e-05}, {'diff': 9.004099999999904e-05}, {'diff': 9.051399999999987e-05}, {'diff': 8.883399999999597e-05}, {'diff': 9.019500000000125e-05}, {'diff': 9.01670000000021e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:59.663" endtime="20201030 18:32:59.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:59.681" level="INFO">${ACCURACY} = {'diff': [8.97079999999939e-05, 9.004099999999904e-05, 9.051399999999987e-05, 8.883399999999597e-05, 9.019500000000125e-05, 9.01670000000021e-05, 8.89999999999988e-05, 9.051399999999987e-05, 9.0375000...</msg>
<status status="PASS" starttime="20201030 18:32:59.674" endtime="20201030 18:32:59.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.692" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 18:32:59.690" endtime="20201030 18:32:59.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.698" level="INFO">VALUE: [8.97079999999939e-05, 9.004099999999904e-05, 9.051399999999987e-05, 8.883399999999597e-05, 9.019500000000125e-05, 9.01670000000021e-05, 8.89999999999988e-05, 9.051399999999987e-05, 9.037500000000365e-05, 9.063899999999653e-05, 9.065300000000304e-05, 9.043100000000193e-05, 8.89999999999988e-05, 8.979100000000573e-05, 9.011099999999689e-05, 8.992999999999501e-05, 9.051399999999987e-05, 9.022300000000039e-05, 8.995800000000109e-05, 9.027799999999919e-05, 8.966600000000213e-05, 9.034699999999757e-05, 8.904100000000498e-05, 8.982000000000434e-05, 9.013899999999603e-05, 8.987499999999621e-05, 9.006900000000512e-05, 9.011100000000383e-05, 9.048600000000073e-05, 9.063899999999653e-05, 9.004199999999851e-05, 9.017999999999526e-05, 9.006900000000512e-05, 9.002699999999947e-05, 9.02079999999944e-05, 9.05000000000003e-05, 9.01800000000022e-05, 9.022300000000039e-05, 8.988899999999578e-05, 9.037500000000365e-05, 9.025000000000005e-05, 9.029099999999929e-05, 9.044400000000202e-05, 9.036100000000408e-05, 9.012499999999646e-05, 9.043100000000193e-05, 8.974999999999955e-05, 9.058300000000519e-05, 8.965300000000204e-05, 8.976400000000606e-05]</msg>
<status status="PASS" starttime="20201030 18:32:59.695" endtime="20201030 18:32:59.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.683" endtime="20201030 18:32:59.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:59.711" endtime="20201030 18:32:59.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.706" endtime="20201030 18:32:59.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.704" endtime="20201030 18:32:59.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.197" endtime="20201030 18:32:59.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.195" endtime="20201030 18:32:59.736"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.759" endtime="20201030 18:32:59.782"></status>
</kw>
<msg timestamp="20201030 18:32:59.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:59.756" endtime="20201030 18:32:59.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:59.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:59.786" endtime="20201030 18:32:59.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.792" endtime="20201030 18:32:59.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.748" endtime="20201030 18:32:59.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.743" endtime="20201030 18:32:59.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:59.816" endtime="20201030 18:33:00.183"></status>
</kw>
<msg timestamp="20201030 18:33:00.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041883361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041974056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:59.813" endtime="20201030 18:33:00.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041883361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041974056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:00.193" endtime="20201030 18:33:00.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.214" endtime="20201030 18:33:00.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.805" endtime="20201030 18:33:00.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.800" endtime="20201030 18:33:00.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:00.236" level="INFO">${RESULT} = [{'diff': 9.069500000000175e-05}, {'diff': 9.065300000000304e-05}, {'diff': 9.151400000000087e-05}, {'diff': 9.138899999999728e-05}, {'diff': 9.175000000000155e-05}, {'diff': 9.084699999999807e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:00.225" endtime="20201030 18:33:00.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:00.247" level="INFO">${ACCURACY} = {'diff': [9.069500000000175e-05, 9.065300000000304e-05, 9.151400000000087e-05, 9.138899999999728e-05, 9.175000000000155e-05, 9.084699999999807e-05, 9.155599999999958e-05, 9.070800000000184e-05, 9.0125...</msg>
<status status="PASS" starttime="20201030 18:33:00.238" endtime="20201030 18:33:00.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.260" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 18:33:00.257" endtime="20201030 18:33:00.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.267" level="INFO">VALUE: [9.069500000000175e-05, 9.065300000000304e-05, 9.151400000000087e-05, 9.138899999999728e-05, 9.175000000000155e-05, 9.084699999999807e-05, 9.155599999999958e-05, 9.070800000000184e-05, 9.01250000000034e-05, 9.084700000000501e-05, 9.148600000000173e-05, 9.11670000000031e-05, 9.147200000000216e-05, 9.091699999999592e-05, 9.111099999999789e-05, 9.102799999999994e-05, 9.141699999999642e-05, 9.123600000000148e-05, 9.108299999999875e-05, 9.126400000000062e-05, 9.072300000000089e-05, 9.145800000000259e-05, 9.01250000000034e-05, 9.020800000000134e-05, 9.086100000000458e-05, 9.090300000000329e-05, 9.105499999999961e-05, 9.076400000000012e-05, 9.073600000000098e-05, 9.076400000000012e-05, 9.01250000000034e-05, 9.104100000000004e-05, 9.155599999999958e-05, 9.068100000000218e-05, 9.115300000000354e-05, 9.126400000000062e-05, 9.081899999999893e-05, 9.073600000000098e-05, 8.997200000000066e-05, 9.10000000000008e-05, 9.123600000000148e-05, 9.073600000000098e-05, 9.090299999999635e-05, 9.111099999999789e-05, 9.152800000000044e-05, 9.134699999999857e-05, 9.116699999999617e-05, 9.147200000000216e-05, 9.158299999999925e-05, 9.109699999999832e-05]</msg>
<status status="PASS" starttime="20201030 18:33:00.263" endtime="20201030 18:33:00.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.249" endtime="20201030 18:33:00.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:00.285" endtime="20201030 18:33:00.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.278" endtime="20201030 18:33:00.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.275" endtime="20201030 18:33:00.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.738" endtime="20201030 18:33:00.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:59.737" endtime="20201030 18:33:00.312"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.341" endtime="20201030 18:33:00.362"></status>
</kw>
<msg timestamp="20201030 18:33:00.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:00.336" endtime="20201030 18:33:00.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:00.366" endtime="20201030 18:33:00.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.373" endtime="20201030 18:33:00.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.328" endtime="20201030 18:33:00.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.321" endtime="20201030 18:33:00.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.396" endtime="20201030 18:33:00.731"></status>
</kw>
<msg timestamp="20201030 18:33:00.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047017847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047110264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:00.392" endtime="20201030 18:33:00.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047017847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047110264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:00.740" endtime="20201030 18:33:00.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.759" endtime="20201030 18:33:00.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.385" endtime="20201030 18:33:00.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.381" endtime="20201030 18:33:00.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:00.776" level="INFO">${RESULT} = [{'diff': 9.241699999999742e-05}, {'diff': 9.247199999999622e-05}, {'diff': 9.186099999999864e-05}, {'diff': 9.11670000000031e-05}, {'diff': 9.234700000000651e-05}, {'diff': 9.186100000000558e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:00.767" endtime="20201030 18:33:00.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:00.786" level="INFO">${ACCURACY} = {'diff': [9.241699999999742e-05, 9.247199999999622e-05, 9.186099999999864e-05, 9.11670000000031e-05, 9.234700000000651e-05, 9.186100000000558e-05, 9.243099999999699e-05, 9.18199999999994e-05, 9.188900...</msg>
<status status="PASS" starttime="20201030 18:33:00.778" endtime="20201030 18:33:00.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.797" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 18:33:00.795" endtime="20201030 18:33:00.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.802" level="INFO">VALUE: [9.241699999999742e-05, 9.247199999999622e-05, 9.186099999999864e-05, 9.11670000000031e-05, 9.234700000000651e-05, 9.186100000000558e-05, 9.243099999999699e-05, 9.18199999999994e-05, 9.188900000000472e-05, 9.09870000000007e-05, 9.241599999999794e-05, 9.240299999999785e-05, 9.219399999999683e-05, 9.173600000000198e-05, 9.102799999999994e-05, 9.269499999999681e-05, 9.258300000000025e-05, 9.177800000000069e-05, 9.238899999999828e-05, 9.241599999999794e-05, 9.212499999999846e-05, 9.197300000000214e-05, 9.270800000000384e-05, 9.181899999999993e-05, 9.11670000000031e-05, 9.248600000000273e-05, 9.101400000000037e-05, 9.079199999999926e-05, 9.225000000000205e-05, 9.252800000000144e-05, 9.204200000000051e-05, 9.18199999999994e-05, 9.237499999999871e-05, 9.258399999999972e-05, 9.261099999999939e-05, 9.177800000000069e-05, 9.229200000000076e-05, 9.191599999999744e-05, 9.176300000000165e-05, 9.222200000000291e-05, 9.19870000000017e-05, 9.116600000000363e-05, 9.195800000000309e-05, 9.202800000000094e-05, 9.191699999999692e-05, 9.186100000000558e-05, 9.223600000000248e-05, 9.229200000000076e-05, 9.211099999999889e-05, 9.213899999999803e-05]</msg>
<status status="PASS" starttime="20201030 18:33:00.799" endtime="20201030 18:33:00.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.788" endtime="20201030 18:33:00.806"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:00.815" endtime="20201030 18:33:00.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.811" endtime="20201030 18:33:00.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.808" endtime="20201030 18:33:00.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.315" endtime="20201030 18:33:00.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.313" endtime="20201030 18:33:00.840"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.862" endtime="20201030 18:33:00.882"></status>
</kw>
<msg timestamp="20201030 18:33:00.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:00.859" endtime="20201030 18:33:00.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:00.885" endtime="20201030 18:33:00.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.891" endtime="20201030 18:33:00.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.852" endtime="20201030 18:33:00.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.846" endtime="20201030 18:33:00.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.914" endtime="20201030 18:33:01.249"></status>
</kw>
<msg timestamp="20201030 18:33:01.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039036597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039130014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:00.911" endtime="20201030 18:33:01.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039036597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039130014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:01.259" endtime="20201030 18:33:01.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.277" endtime="20201030 18:33:01.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.904" endtime="20201030 18:33:01.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.899" endtime="20201030 18:33:01.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:01.294" level="INFO">${RESULT} = [{'diff': 9.341699999999842e-05}, {'diff': 9.291699999999792e-05}, {'diff': 9.288899999999878e-05}, {'diff': 9.32079999999974e-05}, {'diff': 9.286199999999911e-05}, {'diff': 9.215200000000506e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:01.285" endtime="20201030 18:33:01.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:01.305" level="INFO">${ACCURACY} = {'diff': [9.341699999999842e-05, 9.291699999999792e-05, 9.288899999999878e-05, 9.32079999999974e-05, 9.286199999999911e-05, 9.215200000000506e-05, 9.333299999999406e-05, 9.179100000000079e-05, 9.19719...</msg>
<status status="PASS" starttime="20201030 18:33:01.296" endtime="20201030 18:33:01.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.316" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 18:33:01.314" endtime="20201030 18:33:01.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.321" level="INFO">VALUE: [9.341699999999842e-05, 9.291699999999792e-05, 9.288899999999878e-05, 9.32079999999974e-05, 9.286199999999911e-05, 9.215200000000506e-05, 9.333299999999406e-05, 9.179100000000079e-05, 9.197199999999572e-05, 9.308300000000075e-05, 9.312499999999946e-05, 9.234799999999904e-05, 9.184799999999854e-05, 9.311099999999989e-05, 9.359700000000082e-05, 9.2333e-05, 9.274999999999561e-05, 9.199999999999486e-05, 9.322199999999697e-05, 9.331900000000143e-05, 9.295800000000409e-05, 9.26659999999982e-05, 9.327700000000272e-05, 9.277800000000169e-05, 9.311099999999989e-05, 9.308300000000075e-05, 9.338899999999928e-05, 9.322200000000391e-05, 9.325000000000305e-05, 9.286100000000658e-05, 9.21529999999976e-05, 9.297199999999672e-05, 9.340199999999937e-05, 9.273600000000298e-05, 9.184699999999907e-05, 9.308400000000022e-05, 9.352800000000244e-05, 9.326399999999568e-05, 9.297199999999672e-05, 9.295899999999663e-05, 9.323599999999654e-05, 9.297200000000366e-05, 9.306900000000118e-05, 9.313900000000597e-05, 9.308300000000075e-05, 9.363899999999953e-05, 9.290300000000529e-05, 9.33059999999944e-05, 9.319500000000425e-05, 9.213899999999803e-05]</msg>
<status status="PASS" starttime="20201030 18:33:01.318" endtime="20201030 18:33:01.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.307" endtime="20201030 18:33:01.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:01.334" endtime="20201030 18:33:01.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.329" endtime="20201030 18:33:01.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.327" endtime="20201030 18:33:01.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.842" endtime="20201030 18:33:01.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.841" endtime="20201030 18:33:01.359"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.381" endtime="20201030 18:33:01.401"></status>
</kw>
<msg timestamp="20201030 18:33:01.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:01.378" endtime="20201030 18:33:01.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:01.404" endtime="20201030 18:33:01.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.410" endtime="20201030 18:33:01.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.371" endtime="20201030 18:33:01.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.365" endtime="20201030 18:33:01.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.433" endtime="20201030 18:33:01.793"></status>
</kw>
<msg timestamp="20201030 18:33:01.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039093778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039188056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:01.430" endtime="20201030 18:33:01.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039093778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039188056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:01.803" endtime="20201030 18:33:01.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.822" endtime="20201030 18:33:01.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.423" endtime="20201030 18:33:01.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.418" endtime="20201030 18:33:01.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:01.840" level="INFO">${RESULT} = [{'diff': 9.427799999999625e-05}, {'diff': 9.42079999999984e-05}, {'diff': 9.419500000000525e-05}, {'diff': 9.425000000000405e-05}, {'diff': 9.449999999999736e-05}, {'diff': 9.393099999999849e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:01.831" endtime="20201030 18:33:01.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:01.849" level="INFO">${ACCURACY} = {'diff': [9.427799999999625e-05, 9.42079999999984e-05, 9.419500000000525e-05, 9.425000000000405e-05, 9.449999999999736e-05, 9.393099999999849e-05, 9.404100000000304e-05, 9.388899999999978e-05, 9.46110...</msg>
<status status="PASS" starttime="20201030 18:33:01.842" endtime="20201030 18:33:01.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.861" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 18:33:01.858" endtime="20201030 18:33:01.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.866" level="INFO">VALUE: [9.427799999999625e-05, 9.42079999999984e-05, 9.419500000000525e-05, 9.425000000000405e-05, 9.449999999999736e-05, 9.393099999999849e-05, 9.404100000000304e-05, 9.388899999999978e-05, 9.461100000000139e-05, 9.440299999999985e-05, 9.413900000000003e-05, 9.429200000000276e-05, 9.405600000000208e-05, 9.420899999999788e-05, 9.422299999999745e-05, 9.455600000000258e-05, 9.423599999999754e-05, 9.369399999999833e-05, 9.44859999999978e-05, 9.46530000000001e-05, 9.284700000000007e-05, 9.394499999999806e-05, 9.423599999999754e-05, 9.444399999999908e-05, 9.463900000000053e-05, 9.411199999999342e-05, 9.441599999999994e-05, 9.440299999999985e-05, 9.44859999999978e-05, 9.394499999999806e-05, 9.386100000000064e-05, 9.430600000000233e-05, 9.452800000000344e-05, 9.458400000000172e-05, 9.40000000000038e-05, 9.424999999999711e-05, 9.313799999999955e-05, 9.442999999999951e-05, 9.393099999999849e-05, 9.418099999999874e-05, 9.301400000000237e-05, 9.44870000000042e-05, 9.287499999999921e-05, 9.434699999999463e-05, 9.4333000000002e-05, 9.470800000000584e-05, 9.338899999999928e-05, 9.445799999999865e-05, 9.370899999999738e-05, 9.424999999999711e-05]</msg>
<status status="PASS" starttime="20201030 18:33:01.863" endtime="20201030 18:33:01.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.851" endtime="20201030 18:33:01.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:01.879" endtime="20201030 18:33:01.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.874" endtime="20201030 18:33:01.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.872" endtime="20201030 18:33:01.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.361" endtime="20201030 18:33:01.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.359" endtime="20201030 18:33:01.904"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.928" endtime="20201030 18:33:01.955"></status>
</kw>
<msg timestamp="20201030 18:33:01.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:01.924" endtime="20201030 18:33:01.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:01.959" endtime="20201030 18:33:01.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.965" endtime="20201030 18:33:01.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.917" endtime="20201030 18:33:01.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.911" endtime="20201030 18:33:01.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.989" endtime="20201030 18:33:02.339"></status>
</kw>
<msg timestamp="20201030 18:33:02.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046157153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04625275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:01.986" endtime="20201030 18:33:02.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046157153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04625275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:02.348" endtime="20201030 18:33:02.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.367" endtime="20201030 18:33:02.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.978" endtime="20201030 18:33:02.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.974" endtime="20201030 18:33:02.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:02.385" level="INFO">${RESULT} = [{'diff': 9.559700000000282e-05}, {'diff': 9.522200000000591e-05}, {'diff': 9.479199999999632e-05}, {'diff': 9.48200000000024e-05}, {'diff': 9.490200000000087e-05}, {'diff': 9.536100000000214e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:02.376" endtime="20201030 18:33:02.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:02.394" level="INFO">${ACCURACY} = {'diff': [9.559700000000282e-05, 9.522200000000591e-05, 9.479199999999632e-05, 9.48200000000024e-05, 9.490200000000087e-05, 9.536100000000214e-05, 9.487500000000121e-05, 9.565200000000162e-05, 9.54170...</msg>
<status status="PASS" starttime="20201030 18:33:02.387" endtime="20201030 18:33:02.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.405" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 18:33:02.403" endtime="20201030 18:33:02.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.411" level="INFO">VALUE: [9.559700000000282e-05, 9.522200000000591e-05, 9.479199999999632e-05, 9.48200000000024e-05, 9.490200000000087e-05, 9.536100000000214e-05, 9.487500000000121e-05, 9.565200000000162e-05, 9.541700000000042e-05, 9.47079999999989e-05, 9.380600000000183e-05, 9.537500000000171e-05, 9.53059999999964e-05, 9.490300000000035e-05, 9.512500000000146e-05, 9.558299999999631e-05, 9.46660000000002e-05, 9.506900000000318e-05, 9.523699999999802e-05, 9.529200000000376e-05, 9.523599999999854e-05, 9.540200000000137e-05, 9.558300000000325e-05, 9.515200000000112e-05, 9.508399999999528e-05, 9.555599999999664e-05, 9.486100000000164e-05, 9.50000000000048e-05, 9.556899999999674e-05, 9.544499999999956e-05, 9.543000000000051e-05, 9.4027999999996e-05, 9.461100000000139e-05, 9.516700000000017e-05, 9.558400000000272e-05, 9.531999999999596e-05, 9.416699999999917e-05, 9.541600000000094e-05, 9.529199999999682e-05, 9.544499999999956e-05, 9.547199999999922e-05, 9.493099999999949e-05, 9.552800000000444e-05, 9.488900000000078e-05, 9.529199999999682e-05, 9.416700000000611e-05, 9.488899999999384e-05, 9.512500000000146e-05, 9.497199999999872e-05, 9.506899999999624e-05]</msg>
<status status="PASS" starttime="20201030 18:33:02.408" endtime="20201030 18:33:02.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.396" endtime="20201030 18:33:02.414"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:02.425" endtime="20201030 18:33:02.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.419" endtime="20201030 18:33:02.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.417" endtime="20201030 18:33:02.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.907" endtime="20201030 18:33:02.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.905" endtime="20201030 18:33:02.451"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.474" endtime="20201030 18:33:02.495"></status>
</kw>
<msg timestamp="20201030 18:33:02.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:02.470" endtime="20201030 18:33:02.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:02.499" endtime="20201030 18:33:02.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.505" endtime="20201030 18:33:02.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.463" endtime="20201030 18:33:02.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.457" endtime="20201030 18:33:02.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.529" endtime="20201030 18:33:02.877"></status>
</kw>
<msg timestamp="20201030 18:33:02.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040141375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040237472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:02.525" endtime="20201030 18:33:02.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040141375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040237472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:02.887" endtime="20201030 18:33:02.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:02.906" endtime="20201030 18:33:02.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.518" endtime="20201030 18:33:02.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.513" endtime="20201030 18:33:02.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:02.924" level="INFO">${RESULT} = [{'diff': 9.609700000000332e-05}, {'diff': 9.613900000000203e-05}, {'diff': 9.644400000000108e-05}, {'diff': 9.481900000000293e-05}, {'diff': 9.494400000000652e-05}, {'diff': 9.622199999999997e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:02.915" endtime="20201030 18:33:02.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:02.934" level="INFO">${ACCURACY} = {'diff': [9.609700000000332e-05, 9.613900000000203e-05, 9.644400000000108e-05, 9.481900000000293e-05, 9.494400000000652e-05, 9.622199999999997e-05, 9.626399999999868e-05, 9.516700000000017e-05, 9.6653...</msg>
<status status="PASS" starttime="20201030 18:33:02.926" endtime="20201030 18:33:02.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.946" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 18:33:02.943" endtime="20201030 18:33:02.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:02.951" level="INFO">VALUE: [9.609700000000332e-05, 9.613900000000203e-05, 9.644400000000108e-05, 9.481900000000293e-05, 9.494400000000652e-05, 9.622199999999997e-05, 9.626399999999868e-05, 9.516700000000017e-05, 9.66530000000021e-05, 9.573599999999904e-05, 9.51530000000006e-05, 9.587499999999527e-05, 9.56530000000011e-05, 9.627800000000519e-05, 9.593000000000101e-05, 9.573599999999904e-05, 9.599999999999886e-05, 9.630500000000486e-05, 9.668000000000176e-05, 9.616599999999476e-05, 9.645800000000065e-05, 9.573599999999904e-05, 9.574999999999861e-05, 9.674999999999961e-05, 9.644400000000108e-05, 9.572199999999947e-05, 9.640299999999491e-05, 9.619400000000083e-05, 9.584699999999613e-05, 9.622199999999997e-05, 9.593000000000101e-05, 9.569400000000033e-05, 9.647200000000022e-05, 9.587499999999527e-05, 9.516700000000017e-05, 9.594399999999365e-05, 9.615200000000212e-05, 9.652699999999903e-05, 9.659700000000382e-05, 9.593000000000101e-05, 9.636100000000314e-05, 9.579200000000426e-05, 9.637500000000271e-05, 9.568100000000024e-05, 9.608300000000375e-05, 9.651399999999893e-05, 9.594400000000058e-05, 9.630499999999792e-05, 9.647200000000022e-05, 9.586100000000264e-05]</msg>
<status status="PASS" starttime="20201030 18:33:02.948" endtime="20201030 18:33:02.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.936" endtime="20201030 18:33:02.954"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:02.964" endtime="20201030 18:33:02.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.959" endtime="20201030 18:33:02.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.957" endtime="20201030 18:33:02.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.453" endtime="20201030 18:33:02.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.451" endtime="20201030 18:33:02.989"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:03.012" endtime="20201030 18:33:03.034"></status>
</kw>
<msg timestamp="20201030 18:33:03.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:03.009" endtime="20201030 18:33:03.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:03.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:03.038" endtime="20201030 18:33:03.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:03.044" endtime="20201030 18:33:03.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.001" endtime="20201030 18:33:03.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.995" endtime="20201030 18:33:03.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:03.068" endtime="20201030 18:33:03.417"></status>
</kw>
<msg timestamp="20201030 18:33:03.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040430056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040526861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:03.064" endtime="20201030 18:33:03.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:03.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040430056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040526861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:03.427" endtime="20201030 18:33:03.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:03.446" endtime="20201030 18:33:03.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.057" endtime="20201030 18:33:03.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.052" endtime="20201030 18:33:03.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:03.464" level="INFO">${RESULT} = [{'diff': 9.680499999999842e-05}, {'diff': 9.75279999999995e-05}, {'diff': 9.730500000000586e-05}, {'diff': 9.747200000000122e-05}, {'diff': 9.694400000000158e-05}, {'diff': 9.674999999999961e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:03.455" endtime="20201030 18:33:03.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:03.475" level="INFO">${ACCURACY} = {'diff': [9.680499999999842e-05, 9.75279999999995e-05, 9.730500000000586e-05, 9.747200000000122e-05, 9.694400000000158e-05, 9.674999999999961e-05, 9.752700000000003e-05, 9.722199999999404e-05, 9.76390...</msg>
<status status="PASS" starttime="20201030 18:33:03.466" endtime="20201030 18:33:03.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:03.486" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 18:33:03.484" endtime="20201030 18:33:03.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:03.492" level="INFO">VALUE: [9.680499999999842e-05, 9.75279999999995e-05, 9.730500000000586e-05, 9.747200000000122e-05, 9.694400000000158e-05, 9.674999999999961e-05, 9.752700000000003e-05, 9.722199999999404e-05, 9.763900000000353e-05, 9.677799999999875e-05, 9.731899999999849e-05, 9.66530000000021e-05, 9.762499999999702e-05, 9.691700000000192e-05, 9.727799999999925e-05, 9.75279999999995e-05, 9.736100000000414e-05, 9.715199999999619e-05, 9.740300000000285e-05, 9.751399999999993e-05, 9.751300000000046e-05, 9.763800000000405e-05, 9.666599999999526e-05, 9.748599999999386e-05, 9.674999999999961e-05, 9.66939999999944e-05, 9.754200000000601e-05, 9.706899999999824e-05, 9.744500000000156e-05, 9.67080000000009e-05, 9.704199999999857e-05, 9.695800000000115e-05, 9.720900000000088e-05, 9.768000000000276e-05, 9.727799999999925e-05, 9.648699999999927e-05, 9.755599999999864e-05, 9.71530000000026e-05, 9.729099999999935e-05, 9.729199999999882e-05, 9.756999999999821e-05, 9.737499999999677e-05, 9.727799999999925e-05, 9.668100000000124e-05, 9.740299999999591e-05, 9.75279999999995e-05, 9.683299999999756e-05, 9.713900000000303e-05, 9.71939999999949e-05, 9.684700000000407e-05]</msg>
<status status="PASS" starttime="20201030 18:33:03.489" endtime="20201030 18:33:03.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.477" endtime="20201030 18:33:03.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:03.505" endtime="20201030 18:33:03.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.500" endtime="20201030 18:33:03.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.498" endtime="20201030 18:33:03.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.991" endtime="20201030 18:33:03.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:02.990" endtime="20201030 18:33:03.530"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:03.553" endtime="20201030 18:33:03.575"></status>
</kw>
<msg timestamp="20201030 18:33:03.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:03.550" endtime="20201030 18:33:03.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:03.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:03.579" endtime="20201030 18:33:03.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:03.585" endtime="20201030 18:33:03.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.542" endtime="20201030 18:33:03.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.536" endtime="20201030 18:33:03.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:03.610" endtime="20201030 18:33:03.961"></status>
</kw>
<msg timestamp="20201030 18:33:03.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040144694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040242986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:03.606" endtime="20201030 18:33:03.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:03.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040144694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040242986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:03.971" endtime="20201030 18:33:03.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:03.990" endtime="20201030 18:33:03.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.599" endtime="20201030 18:33:03.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.594" endtime="20201030 18:33:03.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:04.008" level="INFO">${RESULT} = [{'diff': 9.829199999999982e-05}, {'diff': 9.701399999999943e-05}, {'diff': 9.792999999999608e-05}, {'diff': 9.79159999999965e-05}, {'diff': 9.826400000000068e-05}, {'diff': 9.808299999999881e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:03.999" endtime="20201030 18:33:04.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:04.017" level="INFO">${ACCURACY} = {'diff': [9.829199999999982e-05, 9.701399999999943e-05, 9.792999999999608e-05, 9.79159999999965e-05, 9.826400000000068e-05, 9.808299999999881e-05, 9.844400000000308e-05, 9.851400000000093e-05, 9.82919...</msg>
<status status="PASS" starttime="20201030 18:33:04.010" endtime="20201030 18:33:04.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:04.028" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 18:33:04.026" endtime="20201030 18:33:04.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:04.034" level="INFO">VALUE: [9.829199999999982e-05, 9.701399999999943e-05, 9.792999999999608e-05, 9.79159999999965e-05, 9.826400000000068e-05, 9.808299999999881e-05, 9.844400000000308e-05, 9.851400000000093e-05, 9.829199999999982e-05, 9.867999999999683e-05, 9.763899999999659e-05, 9.833399999999853e-05, 9.865299999999716e-05, 9.859699999999888e-05, 9.827800000000025e-05, 9.791700000000292e-05, 9.773600000000104e-05, 9.791699999999598e-05, 9.851400000000093e-05, 9.856899999999974e-05, 9.699999999999986e-05, 9.837500000000471e-05, 9.773600000000104e-05, 9.812499999999752e-05, 9.766599999999626e-05, 9.769500000000181e-05, 9.78059999999989e-05, 9.776400000000018e-05, 9.808299999999881e-05, 9.694399999999465e-05, 9.826400000000068e-05, 9.844399999999615e-05, 9.851400000000093e-05, 9.848599999999486e-05, 9.812499999999752e-05, 9.77359999999941e-05, 9.847199999999529e-05, 9.863899999999759e-05, 9.861099999999845e-05, 9.793099999999555e-05, 9.858299999999931e-05, 9.824999999999418e-05, 9.855500000000017e-05, 9.812500000000446e-05, 9.841700000000342e-05, 9.858400000000572e-05, 9.69860000000003e-05, 9.795900000000163e-05, 9.70409999999991e-05, 9.793099999999555e-05]</msg>
<status status="PASS" starttime="20201030 18:33:04.031" endtime="20201030 18:33:04.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.019" endtime="20201030 18:33:04.037"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:04.047" endtime="20201030 18:33:04.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.042" endtime="20201030 18:33:04.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.040" endtime="20201030 18:33:04.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.532" endtime="20201030 18:33:04.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:03.531" endtime="20201030 18:33:04.072"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.095" endtime="20201030 18:33:04.119"></status>
</kw>
<msg timestamp="20201030 18:33:04.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:04.092" endtime="20201030 18:33:04.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:04.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:04.122" endtime="20201030 18:33:04.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.129" endtime="20201030 18:33:04.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.084" endtime="20201030 18:33:04.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.079" endtime="20201030 18:33:04.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.152" endtime="20201030 18:33:04.503"></status>
</kw>
<msg timestamp="20201030 18:33:04.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041804569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041904222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:04.149" endtime="20201030 18:33:04.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:04.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041804569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041904222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:04.513" endtime="20201030 18:33:04.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.532" endtime="20201030 18:33:04.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.142" endtime="20201030 18:33:04.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.137" endtime="20201030 18:33:04.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:04.549" level="INFO">${RESULT} = [{'diff': 9.965299999999816e-05}, {'diff': 9.91939999999969e-05}, {'diff': 9.81530000000036e-05}, {'diff': 9.926399999999475e-05}, {'diff': 9.890300000000435e-05}, {'diff': 9.95559999999937e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:33:04.540" endtime="20201030 18:33:04.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:04.559" level="INFO">${ACCURACY} = {'diff': [9.965299999999816e-05, 9.91939999999969e-05, 9.81530000000036e-05, 9.926399999999475e-05, 9.890300000000435e-05, 9.95559999999937e-05, 9.801400000000043e-05, 9.895900000000263e-05, 9.9319999...</msg>
<status status="PASS" starttime="20201030 18:33:04.551" endtime="20201030 18:33:04.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:04.570" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 18:33:04.567" endtime="20201030 18:33:04.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:04.575" level="INFO">VALUE: [9.965299999999816e-05, 9.91939999999969e-05, 9.81530000000036e-05, 9.926399999999475e-05, 9.890300000000435e-05, 9.95559999999937e-05, 9.801400000000043e-05, 9.895900000000263e-05, 9.931999999999996e-05, 9.874999999999468e-05, 9.787500000000421e-05, 9.96660000000052e-05, 9.89860000000023e-05, 9.951400000000193e-05, 9.963900000000553e-05, 9.904200000000057e-05, 9.955600000000064e-05, 9.906999999999971e-05, 9.927800000000125e-05, 9.926400000000168e-05, 9.961099999999945e-05, 9.927800000000125e-05, 9.877700000000128e-05, 9.93060000000004e-05, 9.798599999999436e-05, 9.949999999999543e-05, 9.943099999999705e-05, 9.945799999999672e-05, 9.872199999999554e-05, 9.950000000000236e-05, 9.905600000000014e-05, 9.970799999999697e-05, 9.872200000000247e-05, 9.890199999999794e-05, 9.9415999999998e-05, 9.915299999999766e-05, 9.784699999999813e-05, 9.963899999999859e-05, 9.93609999999992e-05, 9.784700000000507e-05, 9.868000000000376e-05, 9.933300000000006e-05, 9.966699999999773e-05, 9.817999999999633e-05, 9.925000000000211e-05, 9.943000000000451e-05, 9.955600000000064e-05, 9.945900000000313e-05, 9.96939999999974e-05, 9.901400000000143e-05]</msg>
<status status="PASS" starttime="20201030 18:33:04.572" endtime="20201030 18:33:04.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.561" endtime="20201030 18:33:04.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:04.590" endtime="20201030 18:33:04.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.584" endtime="20201030 18:33:04.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.581" endtime="20201030 18:33:04.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.074" endtime="20201030 18:33:04.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.073" endtime="20201030 18:33:04.616"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.639" endtime="20201030 18:33:04.662"></status>
</kw>
<msg timestamp="20201030 18:33:04.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:04.636" endtime="20201030 18:33:04.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:04.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:04.665" endtime="20201030 18:33:04.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.673" endtime="20201030 18:33:04.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.629" endtime="20201030 18:33:04.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.623" endtime="20201030 18:33:04.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.698" endtime="20201030 18:33:05.047"></status>
</kw>
<msg timestamp="20201030 18:33:05.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041438597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041538333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:04.694" endtime="20201030 18:33:05.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:05.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041438597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041538333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:05.056" endtime="20201030 18:33:05.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:05.075" endtime="20201030 18:33:05.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.687" endtime="20201030 18:33:05.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.682" endtime="20201030 18:33:05.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:05.092" level="INFO">${RESULT} = [{'diff': 9.97359999999961e-05}, {'diff': 0.00010013899999999909}, {'diff': 0.00010011099999999995}, {'diff': 9.994399999999765e-05}, {'diff': 0.00010027799999999532}, {'diff': 0.00010016599999999876}...</msg>
<status status="PASS" starttime="20201030 18:33:05.083" endtime="20201030 18:33:05.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:05.103" level="INFO">${ACCURACY} = {'diff': [9.97359999999961e-05, 0.00010013899999999909, 0.00010011099999999995, 9.994399999999765e-05, 0.00010027799999999532, 0.00010016599999999876, 0.00010062500000000002, 9.911099999999895e-05, 0....</msg>
<status status="PASS" starttime="20201030 18:33:05.094" endtime="20201030 18:33:05.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:05.114" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 18:33:05.112" endtime="20201030 18:33:05.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:05.120" level="INFO">VALUE: [9.97359999999961e-05, 0.00010013899999999909, 0.00010011099999999995, 9.994399999999765e-05, 0.00010027799999999532, 0.00010016599999999876, 0.00010062500000000002, 9.911099999999895e-05, 0.00010005500000000167, 9.997200000000372e-05, 9.975000000000261e-05, 0.00010009799999999985, 0.00010044499999999762, 0.00010022199999999704, 0.00010009700000000038, 9.897200000000272e-05, 9.966699999999773e-05, 0.00010031900000000149, 9.884699999999913e-05, 0.00010044499999999762, 9.934699999999963e-05, 0.0001003610000000002, 0.00010009700000000038, 0.00010052799999999557, 0.00010034700000000063, 0.00010063899999999959, 9.975000000000261e-05, 0.00010008300000000081, 0.00010044499999999762, 0.0001003060000000014, 0.00010045799999999772, 0.00010030500000000192, 0.00010012499999999952, 0.00010025000000000311, 0.00010049999999999643, 9.997199999999679e-05, 0.00010069499999999787, 0.00010047200000000422, 0.00010004099999999516, 0.00010057000000000121, 9.979200000000132e-05, 0.00010027800000000225, 0.00010044399999999815, 9.988799999999937e-05, 9.968100000000424e-05, 0.00010024999999999618, 9.988799999999937e-05, 0.00010002699999999559, 9.879100000000085e-05, 0.00010009799999999985]</msg>
<status status="PASS" starttime="20201030 18:33:05.117" endtime="20201030 18:33:05.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.105" endtime="20201030 18:33:05.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:05.133" endtime="20201030 18:33:05.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.128" endtime="20201030 18:33:05.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.126" endtime="20201030 18:33:05.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.618" endtime="20201030 18:33:05.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.617" endtime="20201030 18:33:05.158"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:05.181" endtime="20201030 18:33:05.203"></status>
</kw>
<msg timestamp="20201030 18:33:05.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:05.178" endtime="20201030 18:33:05.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:05.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:05.207" endtime="20201030 18:33:05.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:05.213" endtime="20201030 18:33:05.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.171" endtime="20201030 18:33:05.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.165" endtime="20201030 18:33:05.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:05.237" endtime="20201030 18:33:05.586"></status>
</kw>
<msg timestamp="20201030 18:33:05.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040349444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040449986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:05.234" endtime="20201030 18:33:05.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:05.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040349444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040449986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:05.595" endtime="20201030 18:33:05.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:05.614" endtime="20201030 18:33:05.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.226" endtime="20201030 18:33:05.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.221" endtime="20201030 18:33:05.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:05.632" level="INFO">${RESULT} = [{'diff': 0.00010054200000000207}, {'diff': 0.00010020899999999694}, {'diff': 0.00010109700000000138}, {'diff': 0.00010075000000000361}, {'diff': 0.0001008610000000007}, {'diff': 0.0001012500000000041...</msg>
<status status="PASS" starttime="20201030 18:33:05.622" endtime="20201030 18:33:05.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:05.643" level="INFO">${ACCURACY} = {'diff': [0.00010054200000000207, 0.00010020899999999694, 0.00010109700000000138, 0.00010075000000000361, 0.0001008610000000007, 0.00010125000000000411, 0.00010159700000000188, 0.00010157000000000221,...</msg>
<status status="PASS" starttime="20201030 18:33:05.634" endtime="20201030 18:33:05.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:05.655" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 18:33:05.652" endtime="20201030 18:33:05.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:05.661" level="INFO">VALUE: [0.00010054200000000207, 0.00010020899999999694, 0.00010109700000000138, 0.00010075000000000361, 0.0001008610000000007, 0.00010125000000000411, 0.00010159700000000188, 0.00010157000000000221, 0.00010109800000000085, 0.00010170799999999897, 0.00010076399999999625, 0.00010004199999999464, 0.00010004200000000157, 0.0001001939999999979, 0.00010086099999999376, 9.987500000000621e-05, 0.00010130499999999598, 0.00010119499999999837, 0.00010111200000000042, 0.00010156900000000274, 0.0001002080000000044, 0.00010098700000000377, 0.00010152799999999657, 0.0001011809999999988, 0.00010094399999999865, 0.00010101400000000343, 0.00010055500000000217, 0.00010038799999999987, 0.00010087500000000027, 0.0001013480000000011, 0.00010156900000000274, 0.0001016809999999993, 0.00010158399999999485, 0.00010127799999999632, 0.00010138900000000034, 0.0001006809999999983, 0.00010158400000000178, 0.00010167999999999983, 0.00010141700000000642, 0.00010124999999999718, 0.00010122199999999804, 0.00010140299999999991, 0.00010104200000000257, 0.00010155499999999623, 0.00010070799999999797, 0.0001013610000000012, 0.0001007359999999971, 0.0001016809999999993, 0.00010079100000000285, 0.00010166699999999973]</msg>
<status status="PASS" starttime="20201030 18:33:05.657" endtime="20201030 18:33:05.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.645" endtime="20201030 18:33:05.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:05.680" endtime="20201030 18:33:05.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.675" endtime="20201030 18:33:05.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.673" endtime="20201030 18:33:05.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.160" endtime="20201030 18:33:05.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.159" endtime="20201030 18:33:05.705"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:05.729" endtime="20201030 18:33:05.751"></status>
</kw>
<msg timestamp="20201030 18:33:05.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:05.725" endtime="20201030 18:33:05.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:05.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:05.754" endtime="20201030 18:33:05.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:05.761" endtime="20201030 18:33:05.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.718" endtime="20201030 18:33:05.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.712" endtime="20201030 18:33:05.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:05.785" endtime="20201030 18:33:06.136"></status>
</kw>
<msg timestamp="20201030 18:33:06.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040610472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040712722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:05.781" endtime="20201030 18:33:06.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:06.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040610472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040712722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:06.145" endtime="20201030 18:33:06.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:06.164" endtime="20201030 18:33:06.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.774" endtime="20201030 18:33:06.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.769" endtime="20201030 18:33:06.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:06.181" level="INFO">${RESULT} = [{'diff': 0.00010224999999999818}, {'diff': 0.00010244400000000015}, {'diff': 0.0001020410000000041}, {'diff': 0.00010176400000000418}, {'diff': 0.00010211100000000195}, {'diff': 0.0001018470000000021...</msg>
<status status="PASS" starttime="20201030 18:33:06.172" endtime="20201030 18:33:06.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:06.190" level="INFO">${ACCURACY} = {'diff': [0.00010224999999999818, 0.00010244400000000015, 0.0001020410000000041, 0.00010176400000000418, 0.00010211100000000195, 0.00010184700000000213, 0.0001018480000000016, 0.00010199999999999793, ...</msg>
<status status="PASS" starttime="20201030 18:33:06.183" endtime="20201030 18:33:06.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:06.201" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 18:33:06.199" endtime="20201030 18:33:06.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:06.207" level="INFO">VALUE: [0.00010224999999999818, 0.00010244400000000015, 0.0001020410000000041, 0.00010176400000000418, 0.00010211100000000195, 0.00010184700000000213, 0.0001018480000000016, 0.00010199999999999793, 0.00010179199999999639, 0.00010174999999999768, 0.00010234700000000263, 0.00010206900000000324, 0.0001019730000000052, 0.00010220799999999947, 0.00010084700000000113, 0.00010255500000000417, 0.00010175000000000461, 0.00010213899999999415, 0.00010247199999999929, 0.00010247199999999929, 0.00010090300000000635, 0.00010232000000000296, 0.00010184700000000213, 0.00010245799999999972, 0.00010231999999999603, 0.00010193000000000008, 0.0001018610000000017, 0.00010197199999999879, 0.00010194499999999912, 0.00010244499999999962, 0.0001019160000000005, 0.00010090299999999941, 0.00010266600000000126, 0.000102416000000001, 0.0001017359999999981, 0.00010240300000000091, 0.00010237500000000177, 0.00010231900000000349, 0.00010234799999999517, 0.00010259700000000288, 0.00010183299999999562, 0.00010204200000000357, 0.00010200000000000486, 0.0001023610000000022, 0.00010204199999999664, 0.00010241700000000048, 0.00010083300000000156, 0.00010243000000000058, 0.0001018480000000016, 0.00010188900000000084]</msg>
<status status="PASS" starttime="20201030 18:33:06.204" endtime="20201030 18:33:06.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.192" endtime="20201030 18:33:06.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:06.219" endtime="20201030 18:33:06.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.215" endtime="20201030 18:33:06.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.212" endtime="20201030 18:33:06.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.708" endtime="20201030 18:33:06.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:05.706" endtime="20201030 18:33:06.245"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:06.268" endtime="20201030 18:33:06.292"></status>
</kw>
<msg timestamp="20201030 18:33:06.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:06.265" endtime="20201030 18:33:06.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:06.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:06.295" endtime="20201030 18:33:06.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:06.302" endtime="20201030 18:33:06.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.257" endtime="20201030 18:33:06.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.251" endtime="20201030 18:33:06.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:06.325" endtime="20201030 18:33:06.674"></status>
</kw>
<msg timestamp="20201030 18:33:06.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042025514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042128333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:06.322" endtime="20201030 18:33:06.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:06.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042025514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042128333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:06.684" endtime="20201030 18:33:06.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:06.703" endtime="20201030 18:33:06.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.315" endtime="20201030 18:33:06.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.310" endtime="20201030 18:33:06.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:06.721" level="INFO">${RESULT} = [{'diff': 0.00010281899999999705}, {'diff': 0.00010333400000000353}, {'diff': 0.0001034019999999955}, {'diff': 0.00010320899999999994}, {'diff': 0.00010354199999999814}, {'diff': 0.0001037220000000005...</msg>
<status status="PASS" starttime="20201030 18:33:06.713" endtime="20201030 18:33:06.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:06.731" level="INFO">${ACCURACY} = {'diff': [0.00010281899999999705, 0.00010333400000000353, 0.0001034019999999955, 0.00010320899999999994, 0.00010354199999999814, 0.00010372200000000054, 0.00010370800000000097, 0.00010329200000000482,...</msg>
<status status="PASS" starttime="20201030 18:33:06.724" endtime="20201030 18:33:06.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:06.742" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 18:33:06.739" endtime="20201030 18:33:06.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:06.747" level="INFO">VALUE: [0.00010281899999999705, 0.00010333400000000353, 0.0001034019999999955, 0.00010320899999999994, 0.00010354199999999814, 0.00010372200000000054, 0.00010370800000000097, 0.00010329200000000482, 0.00010204199999999664, 0.00010329199999999789, 0.00010316600000000176, 0.00010311099999999601, 0.00010299999999999893, 0.00010326399999999875, 0.0001030139999999985, 0.00010315300000000166, 0.00010299999999999893, 0.00010368000000000183, 0.00010330500000000492, 0.00010316700000000123, 0.00010369500000000087, 0.00010315300000000166, 0.00010194499999999912, 0.00010341700000000148, 0.00010249999999999843, 0.00010299999999999893, 0.00010290300000000141, 0.0001032359999999996, 0.00010272199999999954, 0.00010280599999999696, 0.00010327799999999832, 0.00010343100000000105, 0.00010352799999999857, 0.00010359699999999694, 0.00010337500000000277, 0.00010298599999999936, 0.0001033610000000032, 0.0001036810000000013, 0.00010368099999999436, 0.00010343100000000105, 0.00010183299999999562, 0.00010329200000000482, 0.00010330599999999746, 0.00010334699999999669, 0.00010352699999999909, 0.00010199999999999793, 0.00010276399999999825, 0.00010358399999999685, 0.00010313900000000209, 0.00010311100000000295]</msg>
<status status="PASS" starttime="20201030 18:33:06.744" endtime="20201030 18:33:06.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.732" endtime="20201030 18:33:06.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:06.761" endtime="20201030 18:33:06.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.755" endtime="20201030 18:33:06.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.753" endtime="20201030 18:33:06.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.247" endtime="20201030 18:33:06.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.246" endtime="20201030 18:33:06.787"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:06.822" endtime="20201030 18:33:06.846"></status>
</kw>
<msg timestamp="20201030 18:33:06.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:06.818" endtime="20201030 18:33:06.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:06.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:06.854" endtime="20201030 18:33:06.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:06.861" endtime="20201030 18:33:06.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.800" endtime="20201030 18:33:06.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.793" endtime="20201030 18:33:06.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:06.885" endtime="20201030 18:33:07.235"></status>
</kw>
<msg timestamp="20201030 18:33:07.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053213361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053317083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:06.882" endtime="20201030 18:33:07.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053213361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053317083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:07.244" endtime="20201030 18:33:07.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:07.263" endtime="20201030 18:33:07.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.875" endtime="20201030 18:33:07.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.870" endtime="20201030 18:33:07.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:07.280" level="INFO">${RESULT} = [{'diff': 0.00010372200000000054}, {'diff': 0.00010418000000000233}, {'diff': 0.00010445800000000172}, {'diff': 0.00010395800000000122}, {'diff': 0.00010399999999999993}, {'diff': 0.000104152999999995...</msg>
<status status="PASS" starttime="20201030 18:33:07.271" endtime="20201030 18:33:07.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:07.295" level="INFO">${ACCURACY} = {'diff': [0.00010372200000000054, 0.00010418000000000233, 0.00010445800000000172, 0.00010395800000000122, 0.00010399999999999993, 0.00010415299999999572, 0.00010334700000000363, 0.0001038060000000049,...</msg>
<status status="PASS" starttime="20201030 18:33:07.282" endtime="20201030 18:33:07.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.306" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 18:33:07.304" endtime="20201030 18:33:07.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.312" level="INFO">VALUE: [0.00010372200000000054, 0.00010418000000000233, 0.00010445800000000172, 0.00010395800000000122, 0.00010399999999999993, 0.00010415299999999572, 0.00010334700000000363, 0.0001038060000000049, 0.00010394500000000112, 0.00010442999999999564, 0.00010304199999999764, 0.00010354200000000507, 0.00010458299999999837, 0.00010468099999999536, 0.00010281999999999653, 0.00010395800000000122, 0.00010447200000000129, 0.00010455600000000564, 0.00010401300000000002, 0.0001041810000000018, 0.00010444400000000215, 0.00010444399999999521, 0.0001041810000000018, 0.00010380500000000542, 0.00010443100000000205, 0.00010413899999999615, 0.00010463899999999665, 0.00010376399999999925, 0.0001041810000000018, 0.00010450000000000043, 0.00010379099999999891, 0.00010470800000000197, 0.00010458400000000478, 0.00010397200000000079, 0.0001046810000000023, 0.00010459699999999794, 0.0001037360000000001, 0.00010413800000000362, 0.00010415299999999572, 0.00010429199999999889, 0.00010443000000000258, 0.0001043060000000054, 0.00010447200000000129, 0.00010391699999999504, 0.00010384799999999667, 0.00010441599999999607, 0.00010368000000000183, 0.00010426399999999975, 0.00010397200000000079, 0.00010455600000000564]</msg>
<status status="PASS" starttime="20201030 18:33:07.309" endtime="20201030 18:33:07.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.297" endtime="20201030 18:33:07.315"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:07.324" endtime="20201030 18:33:07.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.320" endtime="20201030 18:33:07.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.317" endtime="20201030 18:33:07.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.789" endtime="20201030 18:33:07.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:06.788" endtime="20201030 18:33:07.350"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:07.373" endtime="20201030 18:33:07.395"></status>
</kw>
<msg timestamp="20201030 18:33:07.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:07.369" endtime="20201030 18:33:07.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:07.398" endtime="20201030 18:33:07.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:07.405" endtime="20201030 18:33:07.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.362" endtime="20201030 18:33:07.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.356" endtime="20201030 18:33:07.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:07.429" endtime="20201030 18:33:07.783"></status>
</kw>
<msg timestamp="20201030 18:33:07.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040238903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0403445, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:33:07.425" endtime="20201030 18:33:07.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040238903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0403445, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:33:07.792" endtime="20201030 18:33:07.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:07.811" endtime="20201030 18:33:07.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.418" endtime="20201030 18:33:07.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.413" endtime="20201030 18:33:07.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:07.828" level="INFO">${RESULT} = [{'diff': 0.00010559699999999894}, {'diff': 0.00010566699999999679}, {'diff': 0.00010541700000000348}, {'diff': 0.00010569500000000287}, {'diff': 0.00010575000000000168}, {'diff': 0.000104959000000001...</msg>
<status status="PASS" starttime="20201030 18:33:07.819" endtime="20201030 18:33:07.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:07.839" level="INFO">${ACCURACY} = {'diff': [0.00010559699999999894, 0.00010566699999999679, 0.00010541700000000348, 0.00010569500000000287, 0.00010575000000000168, 0.00010495900000000169, 0.00010506999999999878, 0.00010515300000000366...</msg>
<status status="PASS" starttime="20201030 18:33:07.830" endtime="20201030 18:33:07.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.850" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 18:33:07.848" endtime="20201030 18:33:07.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.856" level="INFO">VALUE: [0.00010559699999999894, 0.00010566699999999679, 0.00010541700000000348, 0.00010569500000000287, 0.00010575000000000168, 0.00010495900000000169, 0.00010506999999999878, 0.00010515300000000366, 0.00010552800000000057, 0.00010494400000000265, 0.00010530599999999946, 0.00010558299999999937, 0.00010534700000000563, 0.00010520800000000247, 0.00010531999999999903, 0.00010402699999999959, 0.00010420800000000147, 0.0001040559999999982, 0.00010513900000000409, 0.00010543100000000305, 0.00010527800000000032, 0.00010537499999999783, 0.0001055689999999998, 0.0001052360000000016, 0.00010544500000000262, 0.00010516699999999629, 0.00010566699999999679, 0.00010550000000000143, 0.0001040139999999995, 0.00010512499999999758, 0.00010548700000000133, 0.00010562500000000502, 0.0001047360000000011, 0.00010552800000000057, 0.00010380499999999848, 0.00010541700000000348, 0.0001050559999999992, 0.00010529199999999989, 0.00010522300000000151, 0.00010550000000000143, 0.00010545800000000272, 0.0001040139999999995, 0.00010552800000000057, 0.00010570900000000244, 0.00010468099999999536, 0.00010544400000000315, 0.00010436200000000367, 0.0001053339999999986, 0.000104514, 0.00010417999999999539]</msg>
<status status="PASS" starttime="20201030 18:33:07.853" endtime="20201030 18:33:07.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.841" endtime="20201030 18:33:07.859"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:07.869" endtime="20201030 18:33:07.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.864" endtime="20201030 18:33:07.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.862" endtime="20201030 18:33:07.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.352" endtime="20201030 18:33:07.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.350" endtime="20201030 18:33:07.894"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:07.917" endtime="20201030 18:33:07.940"></status>
</kw>
<msg timestamp="20201030 18:33:07.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:07.914" endtime="20201030 18:33:07.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:07.943" endtime="20201030 18:33:07.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:07.950" endtime="20201030 18:33:07.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.907" endtime="20201030 18:33:07.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.901" endtime="20201030 18:33:07.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:07.973" endtime="20201030 18:33:08.324"></status>
</kw>
<msg timestamp="20201030 18:33:08.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040310833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040416597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:07.970" endtime="20201030 18:33:08.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040310833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040416597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:08.333" endtime="20201030 18:33:08.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.352" endtime="20201030 18:33:08.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.962" endtime="20201030 18:33:08.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.958" endtime="20201030 18:33:08.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:08.370" level="INFO">${RESULT} = [{'diff': 0.00010576400000000125}, {'diff': 0.0001067089999999965}, {'diff': 0.00010602699999999465}, {'diff': 0.00010597199999999585}, {'diff': 0.00010598599999999542}, {'diff': 0.0001067219999999966...</msg>
<status status="PASS" starttime="20201030 18:33:08.361" endtime="20201030 18:33:08.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:08.379" level="INFO">${ACCURACY} = {'diff': [0.00010576400000000125, 0.0001067089999999965, 0.00010602699999999465, 0.00010597199999999585, 0.00010598599999999542, 0.0001067219999999966, 0.0001061940000000039, 0.000104901999999997, 0.0...</msg>
<status status="PASS" starttime="20201030 18:33:08.372" endtime="20201030 18:33:08.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.390" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 18:33:08.387" endtime="20201030 18:33:08.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.395" level="INFO">VALUE: [0.00010576400000000125, 0.0001067089999999965, 0.00010602699999999465, 0.00010597199999999585, 0.00010598599999999542, 0.0001067219999999966, 0.0001061940000000039, 0.000104901999999997, 0.00010598600000000236, 0.00010662499999999908, 0.00010581999999999953, 0.00010498600000000136, 0.0001060690000000003, 0.000105901999999998, 0.00010599999999999499, 0.00010580599999999996, 0.00010487500000000427, 0.00010641699999999754, 0.00010625000000000218, 0.0001066810000000043, 0.00010609699999999944, 0.00010593099999999661, 0.00010662499999999908, 0.00010640299999999797, 0.00010650000000000243, 0.00010634799999999917, 0.00010650000000000243, 0.00010662499999999908, 0.00010634699999999969, 0.00010663899999999865, 0.00010630500000000098, 0.00010598600000000236, 0.00010620800000000347, 0.0001056810000000033, 0.00010672299999999607, 0.00010587499999999833, 0.00010590299999999747, 0.00010602800000000107, 0.0001061940000000039, 0.00010580500000000048, 0.00010644400000000415, 0.00010495800000000222, 0.00010616699999999729, 0.00010666699999999779, 0.00010631900000000055, 0.00010517999999999639, 0.0001062360000000026, 0.00010611099999999901, 0.00010663899999999865, 0.00010595800000000322]</msg>
<status status="PASS" starttime="20201030 18:33:08.392" endtime="20201030 18:33:08.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.380" endtime="20201030 18:33:08.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:08.408" endtime="20201030 18:33:08.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.403" endtime="20201030 18:33:08.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.401" endtime="20201030 18:33:08.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.896" endtime="20201030 18:33:08.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.895" endtime="20201030 18:33:08.433"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.456" endtime="20201030 18:33:08.480"></status>
</kw>
<msg timestamp="20201030 18:33:08.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:08.453" endtime="20201030 18:33:08.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:08.484" endtime="20201030 18:33:08.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.490" endtime="20201030 18:33:08.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.445" endtime="20201030 18:33:08.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.440" endtime="20201030 18:33:08.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.514" endtime="20201030 18:33:08.862"></status>
</kw>
<msg timestamp="20201030 18:33:08.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041793514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041900569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:08.510" endtime="20201030 18:33:08.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041793514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041900569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:08.872" endtime="20201030 18:33:08.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.890" endtime="20201030 18:33:08.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.503" endtime="20201030 18:33:08.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.498" endtime="20201030 18:33:08.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:08.908" level="INFO">${RESULT} = [{'diff': 0.00010705500000000173}, {'diff': 0.00010725000000000318}, {'diff': 0.0001076940000000054}, {'diff': 0.00010668000000000483}, {'diff': 0.00010758300000000137}, {'diff': 0.0001071800000000053...</msg>
<status status="PASS" starttime="20201030 18:33:08.899" endtime="20201030 18:33:08.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:08.917" level="INFO">${ACCURACY} = {'diff': [0.00010705500000000173, 0.00010725000000000318, 0.0001076940000000054, 0.00010668000000000483, 0.00010758300000000137, 0.00010718000000000533, 0.00010752799999999563, 0.0001067360000000031, ...</msg>
<status status="PASS" starttime="20201030 18:33:08.910" endtime="20201030 18:33:08.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.928" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 18:33:08.926" endtime="20201030 18:33:08.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.934" level="INFO">VALUE: [0.00010705500000000173, 0.00010725000000000318, 0.0001076940000000054, 0.00010668000000000483, 0.00010758300000000137, 0.00010718000000000533, 0.00010752799999999563, 0.0001067360000000031, 0.00010677799999999488, 0.0001075419999999952, 0.00010743099999999811, 0.00010676300000000277, 0.00010677800000000182, 0.00010604200000000064, 0.00010740299999999897, 0.00010747200000000429, 0.00010758300000000137, 0.0001068889999999989, 0.00010698599999999642, 0.00010719499999999743, 0.00010741699999999854, 0.0001070140000000025, 0.00010584699999999919, 0.00010754200000000214, 0.00010711100000000001, 0.00010727799999999538, 0.00010726400000000275, 0.00010752800000000257, 0.00010704200000000164, 0.00010718099999999786, 0.0001058339999999991, 0.00010697199999999685, 0.00010679100000000191, 0.0001070140000000025, 0.00010583299999999962, 0.00010711100000000001, 0.00010745799999999778, 0.00010734700000000069, 0.00010726400000000275, 0.00010732000000000103, 0.00010717999999999839, 0.00010586099999999876, 0.00010763899999999965, 0.00010708400000000035, 0.00010693099999999761, 0.00010776400000000325, 0.00010679099999999497, 0.00010774999999999674, 0.00010690299999999847, 0.00010704200000000164]</msg>
<status status="PASS" starttime="20201030 18:33:08.931" endtime="20201030 18:33:08.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.919" endtime="20201030 18:33:08.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:08.948" endtime="20201030 18:33:08.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.942" endtime="20201030 18:33:08.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.939" endtime="20201030 18:33:08.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.435" endtime="20201030 18:33:08.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.434" endtime="20201030 18:33:08.973"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.996" endtime="20201030 18:33:09.019"></status>
</kw>
<msg timestamp="20201030 18:33:09.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:08.993" endtime="20201030 18:33:09.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:09.022" endtime="20201030 18:33:09.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.029" endtime="20201030 18:33:09.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.986" endtime="20201030 18:33:09.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.980" endtime="20201030 18:33:09.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.052" endtime="20201030 18:33:09.402"></status>
</kw>
<msg timestamp="20201030 18:33:09.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040294778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040402639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:09.049" endtime="20201030 18:33:09.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040294778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040402639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:09.411" endtime="20201030 18:33:09.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.430" endtime="20201030 18:33:09.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.042" endtime="20201030 18:33:09.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.037" endtime="20201030 18:33:09.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:09.447" level="INFO">${RESULT} = [{'diff': 0.00010786099999999382}, {'diff': 0.00010837499999999389}, {'diff': 0.00010812500000000058}, {'diff': 0.0001087219999999986}, {'diff': 0.00010820799999999853}, {'diff': 0.0001081250000000005...</msg>
<status status="PASS" starttime="20201030 18:33:09.438" endtime="20201030 18:33:09.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:09.458" level="INFO">${ACCURACY} = {'diff': [0.00010786099999999382, 0.00010837499999999389, 0.00010812500000000058, 0.0001087219999999986, 0.00010820799999999853, 0.00010812500000000058, 0.00010783300000000162, 0.00010812500000000058,...</msg>
<status status="PASS" starttime="20201030 18:33:09.449" endtime="20201030 18:33:09.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.469" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 18:33:09.467" endtime="20201030 18:33:09.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.474" level="INFO">VALUE: [0.00010786099999999382, 0.00010837499999999389, 0.00010812500000000058, 0.0001087219999999986, 0.00010820799999999853, 0.00010812500000000058, 0.00010783300000000162, 0.00010812500000000058, 0.0001082219999999981, 0.00010880600000000296, 0.00010800000000000393, 0.00010787500000000033, 0.00010811099999999407, 0.00010816599999999982, 0.00010816699999999929, 0.0001083890000000004, 0.00010815200000000025, 0.0001085690000000028, 0.00010841699999999954, 0.00010858400000000185, 0.00010855500000000323, 0.00010804099999999622, 0.00010770800000000497, 0.00010808300000000187, 0.00010812500000000058, 0.00010849999999999749, 0.00010861100000000151, 0.00010840299999999997, 0.00010851399999999706, 0.00010827799999999638, 0.00010816699999999929, 0.00010825000000000418, 0.00010777800000000282, 0.00010791699999999904, 0.00010858299999999543, 0.00010826399999999681, 0.00010880499999999654, 0.00010799999999999699, 0.00010783300000000162, 0.00010709799999999992, 0.00010824999999999724, 0.00010847199999999835, 0.00010858300000000237, 0.00010791599999999957, 0.00010805500000000273, 0.00010790299999999947, 0.00010845799999999878, 0.0001083890000000004, 0.00010719499999999743, 0.0001080140000000035]</msg>
<status status="PASS" starttime="20201030 18:33:09.471" endtime="20201030 18:33:09.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.460" endtime="20201030 18:33:09.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:09.487" endtime="20201030 18:33:09.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.483" endtime="20201030 18:33:09.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.480" endtime="20201030 18:33:09.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.975" endtime="20201030 18:33:09.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.974" endtime="20201030 18:33:09.512"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.536" endtime="20201030 18:33:09.558"></status>
</kw>
<msg timestamp="20201030 18:33:09.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:09.532" endtime="20201030 18:33:09.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:09.562" endtime="20201030 18:33:09.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.568" endtime="20201030 18:33:09.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.525" endtime="20201030 18:33:09.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.519" endtime="20201030 18:33:09.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.592" endtime="20201030 18:33:09.942"></status>
</kw>
<msg timestamp="20201030 18:33:09.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040447681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040556639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:09.589" endtime="20201030 18:33:09.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:09.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040447681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040556639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:09.952" endtime="20201030 18:33:09.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:09.970" endtime="20201030 18:33:09.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.581" endtime="20201030 18:33:09.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.576" endtime="20201030 18:33:09.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:09.988" level="INFO">${RESULT} = [{'diff': 0.00010895799999999928}, {'diff': 0.00010961100000000251}, {'diff': 0.0001082219999999981}, {'diff': 0.00010895899999999875}, {'diff': 0.00010974999999999874}, {'diff': 0.0001096249999999951...</msg>
<status status="PASS" starttime="20201030 18:33:09.979" endtime="20201030 18:33:09.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:09.999" level="INFO">${ACCURACY} = {'diff': [0.00010895799999999928, 0.00010961100000000251, 0.0001082219999999981, 0.00010895899999999875, 0.00010974999999999874, 0.00010962499999999514, 0.00010951399999999806, 0.00010965300000000122,...</msg>
<status status="PASS" starttime="20201030 18:33:09.990" endtime="20201030 18:33:09.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:10.010" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 18:33:10.008" endtime="20201030 18:33:10.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:10.015" level="INFO">VALUE: [0.00010895799999999928, 0.00010961100000000251, 0.0001082219999999981, 0.00010895899999999875, 0.00010974999999999874, 0.00010962499999999514, 0.00010951399999999806, 0.00010965300000000122, 0.000109514000000005, 0.00010913899999999421, 0.00010918099999999986, 0.00010881900000000305, 0.00010955500000000423, 0.00010895799999999928, 0.00010933299999999618, 0.00010938800000000193, 0.00010967999999999395, 0.00010944400000000021, 0.00010886099999999482, 0.00010870799999999903, 0.00010887500000000133, 0.00010894399999999971, 0.00010893099999999961, 0.00010926400000000475, 0.00010915299999999378, 0.00010972299999999907, 0.000109514000000005, 0.0001078340000000011, 0.00010915300000000072, 0.00010918000000000039, 0.00010950000000000543, 0.00010876399999999731, 0.0001094020000000015, 0.00010897199999999885, 0.00010877800000000382, 0.00010949999999999849, 0.00010898599999999842, 0.00010973599999999917, 0.0001090969999999955, 0.00010924999999999824, 0.00010902800000000407, 0.00010804200000000264, 0.00010886100000000176, 0.0001095549999999973, 0.00010968000000000089, 0.00010929199999999695, 0.00010913900000000115, 0.00010945799999999978, 0.00010908299999999593, 0.00010951299999999858]</msg>
<status status="PASS" starttime="20201030 18:33:10.012" endtime="20201030 18:33:10.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.001" endtime="20201030 18:33:10.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:10.028" endtime="20201030 18:33:10.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.024" endtime="20201030 18:33:10.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.021" endtime="20201030 18:33:10.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.514" endtime="20201030 18:33:10.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:09.513" endtime="20201030 18:33:10.053"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:10.076" endtime="20201030 18:33:10.099"></status>
</kw>
<msg timestamp="20201030 18:33:10.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:10.073" endtime="20201030 18:33:10.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:10.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:10.103" endtime="20201030 18:33:10.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:10.109" endtime="20201030 18:33:10.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.066" endtime="20201030 18:33:10.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.060" endtime="20201030 18:33:10.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:10.133" endtime="20201030 18:33:10.483"></status>
</kw>
<msg timestamp="20201030 18:33:10.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040267847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040377208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:10.129" endtime="20201030 18:33:10.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:10.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040267847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040377208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:10.492" endtime="20201030 18:33:10.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:10.511" endtime="20201030 18:33:10.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.122" endtime="20201030 18:33:10.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.117" endtime="20201030 18:33:10.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:10.528" level="INFO">${RESULT} = [{'diff': 0.00010936099999999532}, {'diff': 0.00011018100000000086}, {'diff': 0.00011026400000000575}, {'diff': 0.00011008399999999641}, {'diff': 0.0001095549999999973}, {'diff': 0.0001104440000000012...</msg>
<status status="PASS" starttime="20201030 18:33:10.519" endtime="20201030 18:33:10.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:10.537" level="INFO">${ACCURACY} = {'diff': [0.00010936099999999532, 0.00011018100000000086, 0.00011026400000000575, 0.00011008399999999641, 0.0001095549999999973, 0.00011044400000000121, 0.00010974999999999874, 0.00010976399999999831,...</msg>
<status status="PASS" starttime="20201030 18:33:10.530" endtime="20201030 18:33:10.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:10.548" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 18:33:10.546" endtime="20201030 18:33:10.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:10.554" level="INFO">VALUE: [0.00010936099999999532, 0.00011018100000000086, 0.00011026400000000575, 0.00011008399999999641, 0.0001095549999999973, 0.00011044400000000121, 0.00010974999999999874, 0.00010976399999999831, 0.0001102220000000001, 0.00010884699999999525, 0.00011026299999999933, 0.00011008299999999693, 0.00011013900000000215, 0.00011026399999999881, 0.00011018000000000139, 0.00011034699999999675, 0.00011019500000000043, 0.00011048599999999992, 0.00011036100000000326, 0.00011002800000000507, 0.000110209, 0.00011009700000000344, 0.00011052799999999863, 0.00010976399999999831, 0.00010934799999999523, 0.00011043000000000164, 0.0001097219999999996, 0.00010970800000000003, 0.00011024999999999924, 0.00011040299999999503, 0.00010995899999999975, 0.0001100969999999965, 0.00011023699999999914, 0.00011045900000000025, 0.00010980500000000448, 0.0001097769999999984, 0.0001105549999999983, 0.00011015300000000172, 0.00011034699999999675, 0.00011024999999999924, 0.00010936099999999532, 0.00011026399999999881, 0.00011059700000000394, 0.00011031999999999709, 0.00010994400000000071, 0.00010976399999999831, 0.00011065299999999528, 0.00010993100000000061, 0.00011031899999999761, 0.000109902000000002]</msg>
<status status="PASS" starttime="20201030 18:33:10.551" endtime="20201030 18:33:10.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.539" endtime="20201030 18:33:10.557"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:10.567" endtime="20201030 18:33:10.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.562" endtime="20201030 18:33:10.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.560" endtime="20201030 18:33:10.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.056" endtime="20201030 18:33:10.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.054" endtime="20201030 18:33:10.592"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:10.615" endtime="20201030 18:33:10.639"></status>
</kw>
<msg timestamp="20201030 18:33:10.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:10.612" endtime="20201030 18:33:10.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:10.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:10.643" endtime="20201030 18:33:10.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:10.649" endtime="20201030 18:33:10.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.604" endtime="20201030 18:33:10.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.599" endtime="20201030 18:33:10.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:10.674" endtime="20201030 18:33:11.024"></status>
</kw>
<msg timestamp="20201030 18:33:11.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041756264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041867361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:10.670" endtime="20201030 18:33:11.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041756264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041867361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:11.033" endtime="20201030 18:33:11.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.052" endtime="20201030 18:33:11.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.663" endtime="20201030 18:33:11.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.658" endtime="20201030 18:33:11.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:11.069" level="INFO">${RESULT} = [{'diff': 0.0001110969999999975}, {'diff': 0.00011131900000000555}, {'diff': 0.0001113890000000034}, {'diff': 0.00011106899999999836}, {'diff': 0.0001112220000000011}, {'diff': 0.00011122199999999416}...</msg>
<status status="PASS" starttime="20201030 18:33:11.060" endtime="20201030 18:33:11.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:11.078" level="INFO">${ACCURACY} = {'diff': [0.0001110969999999975, 0.00011131900000000555, 0.0001113890000000034, 0.00011106899999999836, 0.0001112220000000011, 0.00011122199999999416, 0.00011136099999999732, 0.00011163900000000365, 0...</msg>
<status status="PASS" starttime="20201030 18:33:11.071" endtime="20201030 18:33:11.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.089" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 18:33:11.087" endtime="20201030 18:33:11.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.095" level="INFO">VALUE: [0.0001110969999999975, 0.00011131900000000555, 0.0001113890000000034, 0.00011106899999999836, 0.0001112220000000011, 0.00011122199999999416, 0.00011136099999999732, 0.00011163900000000365, 0.00011150000000000049, 0.0001109169999999951, 0.00011009700000000344, 0.00011170800000000203, 0.00011070800000000103, 0.00011127799999999938, 0.0001115419999999992, 0.00011155599999999877, 0.00011167999999999595, 0.00011127799999999938, 0.00011074999999999974, 0.00011019400000000096, 0.00011082000000000453, 0.00011080599999999802, 0.00011127800000000632, 0.00010980499999999754, 0.00011094399999999477, 0.00011119400000000196, 0.00011148599999999398, 0.00011143100000000211, 0.00011126399999999981, 0.00011165299999999628, 0.00011141600000000307, 0.00011101399999999956, 0.000111209000000001, 0.00011004099999999822, 0.00011116699999999535, 0.00011097200000000085, 0.00011095899999999381, 0.00011161100000000451, 0.00011080500000000548, 0.00011081999999999759, 0.0001107769999999994, 0.00011148600000000092, 0.00011140299999999603, 0.00011126399999999981, 0.00011080499999999854, 0.00011129199999999895, 0.00011115300000000272, 0.00011137499999999689, 0.00011166600000000332, 0.00011094500000000118]</msg>
<status status="PASS" starttime="20201030 18:33:11.092" endtime="20201030 18:33:11.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.080" endtime="20201030 18:33:11.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:11.109" endtime="20201030 18:33:11.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.103" endtime="20201030 18:33:11.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.100" endtime="20201030 18:33:11.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.594" endtime="20201030 18:33:11.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:10.593" endtime="20201030 18:33:11.134"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.157" endtime="20201030 18:33:11.180"></status>
</kw>
<msg timestamp="20201030 18:33:11.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:11.154" endtime="20201030 18:33:11.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:11.184" endtime="20201030 18:33:11.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.190" endtime="20201030 18:33:11.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.147" endtime="20201030 18:33:11.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.141" endtime="20201030 18:33:11.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.214" endtime="20201030 18:33:11.562"></status>
</kw>
<msg timestamp="20201030 18:33:11.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040246556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04035825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:11.210" endtime="20201030 18:33:11.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040246556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04035825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:11.572" endtime="20201030 18:33:11.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.590" endtime="20201030 18:33:11.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.203" endtime="20201030 18:33:11.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.198" endtime="20201030 18:33:11.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:11.607" level="INFO">${RESULT} = [{'diff': 0.00011169399999999552}, {'diff': 0.00011270799999999609}, {'diff': 0.00011243099999999617}, {'diff': 0.00011216700000000329}, {'diff': 0.00011081900000000505}, {'diff': 0.000112582999999999...</msg>
<status status="PASS" starttime="20201030 18:33:11.599" endtime="20201030 18:33:11.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:11.618" level="INFO">${ACCURACY} = {'diff': [0.00011169399999999552, 0.00011270799999999609, 0.00011243099999999617, 0.00011216700000000329, 0.00011081900000000505, 0.00011258299999999943, 0.0001120419999999997, 0.00011240299999999703,...</msg>
<status status="PASS" starttime="20201030 18:33:11.609" endtime="20201030 18:33:11.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.629" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 18:33:11.627" endtime="20201030 18:33:11.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.635" level="INFO">VALUE: [0.00011169399999999552, 0.00011270799999999609, 0.00011243099999999617, 0.00011216700000000329, 0.00011081900000000505, 0.00011258299999999943, 0.0001120419999999997, 0.00011240299999999703, 0.0001125420000000002, 0.00011213900000000415, 0.00011220800000000253, 0.00011206999999999884, 0.00011177800000000682, 0.00011229099999999353, 0.00011187500000000433, 0.00011086099999999682, 0.00011195800000000228, 0.00011241600000000407, 0.00011211099999999807, 0.00011226400000000081, 0.00011102799999999913, 0.00011208299999999893, 0.00011213899999999721, 0.00011115299999999578, 0.000112596999999999, 0.00011277799999999394, 0.00011248599999999498, 0.00011244500000000268, 0.00011252700000000115, 0.0001110419999999987, 0.00011249999999999455, 0.00011140300000000297, 0.00011261099999999857, 0.00011227800000000038, 0.00011240299999999703, 0.00011202800000000013, 0.00011233399999999866, 0.00011118099999999492, 0.00011229099999999353, 0.00011212499999999764, 0.00011227800000000038, 0.000112596999999999, 0.00011219399999999602, 0.00011208299999999893, 0.000112596999999999, 0.00011247200000000235, 0.0001120419999999997, 0.00011084699999999725, 0.00011104200000000564, 0.00011198600000000142]</msg>
<status status="PASS" starttime="20201030 18:33:11.632" endtime="20201030 18:33:11.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.620" endtime="20201030 18:33:11.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:11.647" endtime="20201030 18:33:11.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.643" endtime="20201030 18:33:11.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.640" endtime="20201030 18:33:11.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.137" endtime="20201030 18:33:11.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.135" endtime="20201030 18:33:11.673"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.696" endtime="20201030 18:33:11.719"></status>
</kw>
<msg timestamp="20201030 18:33:11.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:11.693" endtime="20201030 18:33:11.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:11.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:11.722" endtime="20201030 18:33:11.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.729" endtime="20201030 18:33:11.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.685" endtime="20201030 18:33:11.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.680" endtime="20201030 18:33:11.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:11.752" endtime="20201030 18:33:12.103"></status>
</kw>
<msg timestamp="20201030 18:33:12.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040488736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040601889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:11.749" endtime="20201030 18:33:12.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:12.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040488736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040601889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:12.112" endtime="20201030 18:33:12.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.130" endtime="20201030 18:33:12.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.742" endtime="20201030 18:33:12.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.737" endtime="20201030 18:33:12.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:12.147" level="INFO">${RESULT} = [{'diff': 0.00011315300000000472}, {'diff': 0.00011319499999999649}, {'diff': 0.00011288899999999796}, {'diff': 0.00011316700000000429}, {'diff': 0.00011369399999999752}, {'diff': 0.000113374999999998...</msg>
<status status="PASS" starttime="20201030 18:33:12.139" endtime="20201030 18:33:12.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:12.159" level="INFO">${ACCURACY} = {'diff': [0.00011315300000000472, 0.00011319499999999649, 0.00011288899999999796, 0.00011316700000000429, 0.00011369399999999752, 0.0001133749999999989, 0.00011370800000000403, 0.00011347200000000335,...</msg>
<status status="PASS" starttime="20201030 18:33:12.150" endtime="20201030 18:33:12.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:12.170" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 18:33:12.167" endtime="20201030 18:33:12.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:12.175" level="INFO">VALUE: [0.00011315300000000472, 0.00011319499999999649, 0.00011288899999999796, 0.00011316700000000429, 0.00011369399999999752, 0.0001133749999999989, 0.00011370800000000403, 0.00011347200000000335, 0.00011330500000000104, 0.0001132499999999953, 0.00011329100000000147, 0.00011294500000000318, 0.00011358300000000043, 0.00011336099999999932, 0.00011343000000000464, 0.00011345900000000325, 0.00011315299999999778, 0.00011362499999999914, 0.00011286099999999882, 0.00011288899999999796, 0.00011311199999999855, 0.00011336099999999932, 0.00011301299999999515, 0.00011223600000000167, 0.00011376400000000231, 0.00011293099999999667, 0.00011333300000000018, 0.00011330600000000052, 0.00011326399999999487, 0.00011345900000000325, 0.00011348599999999598, 0.000113597, 0.00011304100000000122, 0.00011206999999999884, 0.00011337500000000583, 0.00011302800000000113, 0.00011331900000000061, 0.00011206999999999884, 0.00011326400000000181, 0.0001122220000000021, 0.00011313899999999821, 0.00011313900000000515, 0.00011293099999999667, 0.00011323599999999573, 0.00011352799999999469, 0.00011362499999999914, 0.00011375000000000274, 0.00011338799999999899, 0.00011343100000000411, 0.00011188899999999696]</msg>
<status status="PASS" starttime="20201030 18:33:12.172" endtime="20201030 18:33:12.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.160" endtime="20201030 18:33:12.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:12.188" endtime="20201030 18:33:12.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.183" endtime="20201030 18:33:12.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.181" endtime="20201030 18:33:12.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.675" endtime="20201030 18:33:12.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:11.674" endtime="20201030 18:33:12.213"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.236" endtime="20201030 18:33:12.259"></status>
</kw>
<msg timestamp="20201030 18:33:12.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:12.233" endtime="20201030 18:33:12.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:12.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:12.263" endtime="20201030 18:33:12.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.269" endtime="20201030 18:33:12.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.226" endtime="20201030 18:33:12.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.220" endtime="20201030 18:33:12.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.293" endtime="20201030 18:33:12.647"></status>
</kw>
<msg timestamp="20201030 18:33:12.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040431208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040545208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:12.289" endtime="20201030 18:33:12.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:12.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040431208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040545208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:12.656" endtime="20201030 18:33:12.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.675" endtime="20201030 18:33:12.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.282" endtime="20201030 18:33:12.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.277" endtime="20201030 18:33:12.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:12.692" level="INFO">${RESULT} = [{'diff': 0.00011399999999999605}, {'diff': 0.00011377800000000188}, {'diff': 0.00011443099999999817}, {'diff': 0.00011319400000000396}, {'diff': 0.00011408300000000093}, {'diff': 0.000114306000000001...</msg>
<status status="PASS" starttime="20201030 18:33:12.683" endtime="20201030 18:33:12.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:12.701" level="INFO">${ACCURACY} = {'diff': [0.00011399999999999605, 0.00011377800000000188, 0.00011443099999999817, 0.00011319400000000396, 0.00011408300000000093, 0.00011430600000000152, 0.00011412499999999964, 0.00011450000000000349...</msg>
<status status="PASS" starttime="20201030 18:33:12.694" endtime="20201030 18:33:12.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:12.712" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 18:33:12.710" endtime="20201030 18:33:12.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:12.718" level="INFO">VALUE: [0.00011399999999999605, 0.00011377800000000188, 0.00011443099999999817, 0.00011319400000000396, 0.00011408300000000093, 0.00011430600000000152, 0.00011412499999999964, 0.00011450000000000349, 0.00011416600000000582, 0.00011465299999999928, 0.00011319399999999702, 0.00011458300000000143, 0.00011466699999999885, 0.00011408300000000093, 0.00011370899999999656, 0.00011420899999999706, 0.00011398600000000342, 0.00011417999999999845, 0.00011419399999999802, 0.0001140420000000017, 0.00011413799999999974, 0.00011370800000000403, 0.00011379100000000197, 0.00011418000000000539, 0.00011372199999999666, 0.00011368000000000489, 0.00011455599999999483, 0.00011287500000000533, 0.0001133749999999989, 0.0001138749999999994, 0.00011391599999999863, 0.0001128749999999984, 0.0001140970000000005, 0.00011468099999999842, 0.00011468100000000536, 0.00011445799999999784, 0.00011456900000000186, 0.00011454100000000272, 0.0001140550000000018, 0.00011394400000000471, 0.00011395800000000428, 0.00011466599999999938, 0.0001138749999999994, 0.00011372299999999613, 0.00011418099999999792, 0.0001133619999999988, 0.00011411199999999955, 0.00011302700000000165, 0.00011404100000000222, 0.00011466599999999938]</msg>
<status status="PASS" starttime="20201030 18:33:12.715" endtime="20201030 18:33:12.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.703" endtime="20201030 18:33:12.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:12.730" endtime="20201030 18:33:12.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.726" endtime="20201030 18:33:12.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.724" endtime="20201030 18:33:12.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.215" endtime="20201030 18:33:12.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.214" endtime="20201030 18:33:12.756"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.779" endtime="20201030 18:33:12.803"></status>
</kw>
<msg timestamp="20201030 18:33:12.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:12.776" endtime="20201030 18:33:12.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:12.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:12.807" endtime="20201030 18:33:12.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.813" endtime="20201030 18:33:12.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.768" endtime="20201030 18:33:12.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.762" endtime="20201030 18:33:12.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.837" endtime="20201030 18:33:13.186"></status>
</kw>
<msg timestamp="20201030 18:33:13.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041860028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041975569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:12.833" endtime="20201030 18:33:13.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:13.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041860028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041975569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:13.196" endtime="20201030 18:33:13.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:13.214" endtime="20201030 18:33:13.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.826" endtime="20201030 18:33:13.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.821" endtime="20201030 18:33:13.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:13.231" level="INFO">${RESULT} = [{'diff': 0.00011554099999999679}, {'diff': 0.00011512500000000064}, {'diff': 0.00011536100000000132}, {'diff': 0.00011504199999999576}, {'diff': 0.00011562500000000114}, {'diff': 0.000115152999999999...</msg>
<status status="PASS" starttime="20201030 18:33:13.223" endtime="20201030 18:33:13.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:13.241" level="INFO">${ACCURACY} = {'diff': [0.00011554099999999679, 0.00011512500000000064, 0.00011536100000000132, 0.00011504199999999576, 0.00011562500000000114, 0.00011515299999999978, 0.0001150970000000015, 0.0001152499999999973, ...</msg>
<status status="PASS" starttime="20201030 18:33:13.233" endtime="20201030 18:33:13.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:13.252" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 18:33:13.249" endtime="20201030 18:33:13.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:13.257" level="INFO">VALUE: [0.00011554099999999679, 0.00011512500000000064, 0.00011536100000000132, 0.00011504199999999576, 0.00011562500000000114, 0.00011515299999999978, 0.0001150970000000015, 0.0001152499999999973, 0.00011479200000000245, 0.00011552799999999669, 0.00011501299999999715, 0.00011499999999999705, 0.00011569499999999899, 0.00011479199999999551, 0.00011515299999999978, 0.00011570899999999856, 0.00011522299999999763, 0.0001155550000000033, 0.00011557000000000234, 0.00011486100000000082, 0.00011527799999999644, 0.00011475000000000374, 0.00011495799999999834, 0.00011386099999999982, 0.00011508300000000193, 0.00011509800000000098, 0.00011555499999999636, 0.00011545899999999831, 0.00011530600000000252, 0.00011494500000000518, 0.0001149169999999991, 0.00011512500000000064, 0.00011490299999999953, 0.000115082999999995, 0.00011486100000000082, 0.00011401399999999562, 0.0001150970000000015, 0.00011563900000000071, 0.00011469499999999799, 0.00011469399999999852, 0.00011465299999999928, 0.00011515299999999978, 0.00011480600000000202, 0.00011547199999999841, 0.00011563900000000071, 0.00011400000000000299, 0.00011512500000000064, 0.00011534700000000175, 0.000115082999999995, 0.00011522199999999816]</msg>
<status status="PASS" starttime="20201030 18:33:13.254" endtime="20201030 18:33:13.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.242" endtime="20201030 18:33:13.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:13.271" endtime="20201030 18:33:13.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.265" endtime="20201030 18:33:13.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.263" endtime="20201030 18:33:13.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.758" endtime="20201030 18:33:13.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.757" endtime="20201030 18:33:13.297"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:13.320" endtime="20201030 18:33:13.343"></status>
</kw>
<msg timestamp="20201030 18:33:13.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:13.316" endtime="20201030 18:33:13.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:13.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:13.346" endtime="20201030 18:33:13.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:13.352" endtime="20201030 18:33:13.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.309" endtime="20201030 18:33:13.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.303" endtime="20201030 18:33:13.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:13.376" endtime="20201030 18:33:13.727"></status>
</kw>
<msg timestamp="20201030 18:33:13.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040318153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040434889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:13.373" endtime="20201030 18:33:13.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:13.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040318153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040434889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:13.737" endtime="20201030 18:33:13.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:13.755" endtime="20201030 18:33:13.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.365" endtime="20201030 18:33:13.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.361" endtime="20201030 18:33:13.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:13.775" level="INFO">${RESULT} = [{'diff': 0.00011673599999999923}, {'diff': 0.00011583300000000268}, {'diff': 0.00011519399999999902}, {'diff': 0.0001162499999999983}, {'diff': 0.00011651399999999812}, {'diff': 0.0001157369999999977...</msg>
<status status="PASS" starttime="20201030 18:33:13.765" endtime="20201030 18:33:13.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:13.786" level="INFO">${ACCURACY} = {'diff': [0.00011673599999999923, 0.00011583300000000268, 0.00011519399999999902, 0.0001162499999999983, 0.00011651399999999812, 0.0001157369999999977, 0.00011667999999999401, 0.00011662500000000214, ...</msg>
<status status="PASS" starttime="20201030 18:33:13.777" endtime="20201030 18:33:13.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:13.797" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 18:33:13.794" endtime="20201030 18:33:13.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:13.802" level="INFO">VALUE: [0.00011673599999999923, 0.00011583300000000268, 0.00011519399999999902, 0.0001162499999999983, 0.00011651399999999812, 0.0001157369999999977, 0.00011667999999999401, 0.00011662500000000214, 0.00011643100000000017, 0.00011594399999999977, 0.00011583299999999574, 0.00011629200000000395, 0.00011665299999999434, 0.00011659800000000248, 0.00011640200000000156, 0.00011580500000000354, 0.00011649999999999855, 0.00011579200000000345, 0.0001167499999999988, 0.00011636099999999538, 0.00011622199999999916, 0.00011582000000000259, 0.0001159300000000002, 0.00011619499999999949, 0.00011595899999999881, 0.00011563900000000071, 0.00011656900000000386, 0.00011627799999999744, 0.00011577799999999694, 0.0001150420000000027, 0.00011670799999999315, 0.00011618099999999992, 0.00011613900000000121, 0.00011615200000000131, 0.00011656899999999693, 0.0001164170000000006, 0.00011570799999999909, 0.00011658300000000343, 0.0001162220000000061, 0.00011590300000000053, 0.00011661100000000257, 0.00011633400000000266, 0.00011626399999999787, 0.00011594399999999977, 0.00011622199999999916, 0.00011620799999999959, 0.00011623599999999873, 0.00011672299999999913, 0.00011622199999999916, 0.00011538900000000046]</msg>
<status status="PASS" starttime="20201030 18:33:13.799" endtime="20201030 18:33:13.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.787" endtime="20201030 18:33:13.805"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:13.815" endtime="20201030 18:33:13.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.810" endtime="20201030 18:33:13.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.808" endtime="20201030 18:33:13.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.299" endtime="20201030 18:33:13.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.297" endtime="20201030 18:33:13.840"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:13.863" endtime="20201030 18:33:13.884"></status>
</kw>
<msg timestamp="20201030 18:33:13.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:13.859" endtime="20201030 18:33:13.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:13.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:13.888" endtime="20201030 18:33:13.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:13.894" endtime="20201030 18:33:13.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.852" endtime="20201030 18:33:13.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.846" endtime="20201030 18:33:13.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:13.919" endtime="20201030 18:33:14.262"></status>
</kw>
<msg timestamp="20201030 18:33:14.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039613569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039730944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:13.915" endtime="20201030 18:33:14.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039613569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039730944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:14.271" endtime="20201030 18:33:14.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.289" endtime="20201030 18:33:14.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.908" endtime="20201030 18:33:14.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.903" endtime="20201030 18:33:14.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:14.306" level="INFO">${RESULT} = [{'diff': 0.00011737499999999595}, {'diff': 0.00011694500000000024}, {'diff': 0.00011727799999999844}, {'diff': 0.00011584700000000225}, {'diff': 0.0001175829999999975}, {'diff': 0.0001167780000000048...</msg>
<status status="PASS" starttime="20201030 18:33:14.298" endtime="20201030 18:33:14.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:14.317" level="INFO">${ACCURACY} = {'diff': [0.00011737499999999595, 0.00011694500000000024, 0.00011727799999999844, 0.00011584700000000225, 0.0001175829999999975, 0.00011677800000000488, 0.0001173750000000029, 0.00011770800000000109, ...</msg>
<status status="PASS" starttime="20201030 18:33:14.308" endtime="20201030 18:33:14.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.327" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 18:33:14.325" endtime="20201030 18:33:14.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.333" level="INFO">VALUE: [0.00011737499999999595, 0.00011694500000000024, 0.00011727799999999844, 0.00011584700000000225, 0.0001175829999999975, 0.00011677800000000488, 0.0001173750000000029, 0.00011770800000000109, 0.00011707000000000384, 0.00011688899999999502, 0.00011669499999999999, 0.00011751400000000606, 0.00011726399999999887, 0.0001169170000000011, 0.00011731900000000461, 0.00011723599999999973, 0.00011731900000000461, 0.0001158750000000014, 0.00011670800000000009, 0.00011748599999999998, 0.00011699999999999905, 0.00011712500000000264, 0.00011694500000000024, 0.00011726400000000581, 0.00011772200000000066, 0.00011727799999999844, 0.00011762500000000314, 0.00011729099999999854, 0.00011740200000000256, 0.00011748599999999998, 0.0001168750000000024, 0.00011616700000000035, 0.00011699999999999905, 0.00011602800000000413, 0.00011708399999999647, 0.00011756899999999793, 0.00011729200000000495, 0.00011680599999999708, 0.00011723599999999973, 0.00011765300000000228, 0.00011702800000000513, 0.00011725000000000624, 0.00011745800000000084, 0.00011723600000000667, 0.00011698599999999948, 0.00011691600000000163, 0.00011677799999999794, 0.00011759699999999706, 0.00011755599999999783, 0.00011763900000000271]</msg>
<status status="PASS" starttime="20201030 18:33:14.330" endtime="20201030 18:33:14.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.319" endtime="20201030 18:33:14.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:14.345" endtime="20201030 18:33:14.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.341" endtime="20201030 18:33:14.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.338" endtime="20201030 18:33:14.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.842" endtime="20201030 18:33:14.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:13.841" endtime="20201030 18:33:14.370"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.393" endtime="20201030 18:33:14.415"></status>
</kw>
<msg timestamp="20201030 18:33:14.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:14.389" endtime="20201030 18:33:14.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:14.419" endtime="20201030 18:33:14.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.425" endtime="20201030 18:33:14.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.382" endtime="20201030 18:33:14.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.377" endtime="20201030 18:33:14.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.449" endtime="20201030 18:33:14.789"></status>
</kw>
<msg timestamp="20201030 18:33:14.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039259167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039376944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:14.445" endtime="20201030 18:33:14.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039259167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039376944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:14.798" endtime="20201030 18:33:14.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.818" endtime="20201030 18:33:14.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.438" endtime="20201030 18:33:14.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.434" endtime="20201030 18:33:14.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:14.843" level="INFO">${RESULT} = [{'diff': 0.00011777699999999947}, {'diff': 0.00011787499999999645}, {'diff': 0.00011845800000000184}, {'diff': 0.00011847199999999447}, {'diff': 0.00011802699999999972}, {'diff': 0.000118430999999995...</msg>
<status status="PASS" starttime="20201030 18:33:14.833" endtime="20201030 18:33:14.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:14.854" level="INFO">${ACCURACY} = {'diff': [0.00011777699999999947, 0.00011787499999999645, 0.00011845800000000184, 0.00011847199999999447, 0.00011802699999999972, 0.00011843099999999523, 0.00011833399999999772, 0.00011817999999999551...</msg>
<status status="PASS" starttime="20201030 18:33:14.845" endtime="20201030 18:33:14.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.866" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 18:33:14.863" endtime="20201030 18:33:14.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.872" level="INFO">VALUE: [0.00011777699999999947, 0.00011787499999999645, 0.00011845800000000184, 0.00011847199999999447, 0.00011802699999999972, 0.00011843099999999523, 0.00011833399999999772, 0.00011817999999999551, 0.00011802799999999919, 0.00011688900000000196, 0.0001177499999999998, 0.00011783299999999775, 0.00011834799999999729, 0.00011833300000000518, 0.0001181379999999968, 0.00011838899999999652, 0.00011801399999999962, 0.00011865199999999687, 0.00011826399999999987, 0.00011868100000000242, 0.00011870899999999462, 0.00011704199999999776, 0.00011802800000000613, 0.00011868100000000242, 0.0001182500000000003, 0.00011816600000000288, 0.0001184579999999949, 0.00011833300000000518, 0.00011786099999999688, 0.00011852799999999969, 0.00011802799999999919, 0.00011840300000000303, 0.00011818000000000245, 0.00011863899999999677, 0.00011833299999999825, 0.00011813899999999627, 0.00011784699999999732, 0.0001184449999999948, 0.0001178049999999986, 0.00011865200000000381, 0.00011815299999999584, 0.0001178750000000034, 0.00011801399999999962, 0.00011787499999999645, 0.00011688900000000196, 0.00011876400000000037, 0.00011838899999999652, 0.00011834699999999782, 0.00011836100000000432, 0.00011859799999999754]</msg>
<status status="PASS" starttime="20201030 18:33:14.869" endtime="20201030 18:33:14.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.856" endtime="20201030 18:33:14.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:14.884" endtime="20201030 18:33:14.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.880" endtime="20201030 18:33:14.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.877" endtime="20201030 18:33:14.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.372" endtime="20201030 18:33:14.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.371" endtime="20201030 18:33:14.910"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.933" endtime="20201030 18:33:14.956"></status>
</kw>
<msg timestamp="20201030 18:33:14.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:14.929" endtime="20201030 18:33:14.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:14.959" endtime="20201030 18:33:14.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.966" endtime="20201030 18:33:14.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.922" endtime="20201030 18:33:14.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.916" endtime="20201030 18:33:14.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.989" endtime="20201030 18:33:15.323"></status>
</kw>
<msg timestamp="20201030 18:33:15.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042069694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042188583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:14.986" endtime="20201030 18:33:15.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042069694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042188583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:15.332" endtime="20201030 18:33:15.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:15.351" endtime="20201030 18:33:15.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.978" endtime="20201030 18:33:15.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.974" endtime="20201030 18:33:15.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:15.368" level="INFO">${RESULT} = [{'diff': 0.00011888900000000396}, {'diff': 0.00011804199999999876}, {'diff': 0.00011901400000000062}, {'diff': 0.0001191249999999977}, {'diff': 0.00011970799999999615}, {'diff': 0.0001179160000000026...</msg>
<status status="PASS" starttime="20201030 18:33:15.359" endtime="20201030 18:33:15.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:15.377" level="INFO">${ACCURACY} = {'diff': [0.00011888900000000396, 0.00011804199999999876, 0.00011901400000000062, 0.0001191249999999977, 0.00011970799999999615, 0.00011791600000000263, 0.00011915299999999684, 0.00011905599999999933,...</msg>
<status status="PASS" starttime="20201030 18:33:15.370" endtime="20201030 18:33:15.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.388" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 18:33:15.385" endtime="20201030 18:33:15.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.393" level="INFO">VALUE: [0.00011888900000000396, 0.00011804199999999876, 0.00011901400000000062, 0.0001191249999999977, 0.00011970799999999615, 0.00011791600000000263, 0.00011915299999999684, 0.00011905599999999933, 0.0001194029999999971, 0.00011879199999999951, 0.0001194300000000037, 0.0001191249999999977, 0.00011901400000000062, 0.00011941699999999666, 0.0001189579999999954, 0.00011970900000000256, 0.0001179029999999956, 0.00011926400000000087, 0.00011950000000000155, 0.00011948599999999504, 0.00011870800000000209, 0.00011961099999999864, 0.00011959699999999907, 0.0001194029999999971, 0.00011893100000000267, 0.00011922200000000216, 0.00011943099999999623, 0.00011883399999999822, 0.00011884699999999832, 0.00011920799999999565, 0.0001193750000000049, 0.00011924999999999436, 0.0001195829999999995, 0.0001184029999999961, 0.00011788899999999602, 0.00011945800000000284, 0.00011931899999999968, 0.00011959699999999907, 0.00011941699999999666, 0.00011954199999999332, 0.00011786099999999688, 0.00011886100000000482, 0.00011902800000000019, 0.00011915199999999737, 0.0001188049999999996, 0.00011918099999999598, 0.00011927800000000044, 0.00011922200000000216, 0.00011891699999999616, 0.00011934699999999882]</msg>
<status status="PASS" starttime="20201030 18:33:15.390" endtime="20201030 18:33:15.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.379" endtime="20201030 18:33:15.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:15.407" endtime="20201030 18:33:15.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.401" endtime="20201030 18:33:15.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.399" endtime="20201030 18:33:15.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.912" endtime="20201030 18:33:15.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.910" endtime="20201030 18:33:15.432"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:15.454" endtime="20201030 18:33:15.475"></status>
</kw>
<msg timestamp="20201030 18:33:15.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:15.451" endtime="20201030 18:33:15.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:15.479" endtime="20201030 18:33:15.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:15.485" endtime="20201030 18:33:15.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.444" endtime="20201030 18:33:15.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.438" endtime="20201030 18:33:15.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:15.508" endtime="20201030 18:33:15.844"></status>
</kw>
<msg timestamp="20201030 18:33:15.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039309847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039429847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:15.505" endtime="20201030 18:33:15.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039309847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039429847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:15.853" endtime="20201030 18:33:15.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:15.871" endtime="20201030 18:33:15.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.498" endtime="20201030 18:33:15.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.493" endtime="20201030 18:33:15.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:15.888" level="INFO">${RESULT} = [{'diff': 0.00011999999999999511}, {'diff': 0.00012034800000000623}, {'diff': 0.00012068099999999748}, {'diff': 0.00012043099999999723}, {'diff': 0.00012061100000000657}, {'diff': 0.000119959000000002...</msg>
<status status="PASS" starttime="20201030 18:33:15.879" endtime="20201030 18:33:15.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:15.898" level="INFO">${ACCURACY} = {'diff': [0.00011999999999999511, 0.00012034800000000623, 0.00012068099999999748, 0.00012043099999999723, 0.00012061100000000657, 0.00011995900000000281, 0.00012002800000000119, 0.00012055500000000136...</msg>
<status status="PASS" starttime="20201030 18:33:15.890" endtime="20201030 18:33:15.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.909" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 18:33:15.906" endtime="20201030 18:33:15.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.914" level="INFO">VALUE: [0.00011999999999999511, 0.00012034800000000623, 0.00012068099999999748, 0.00012043099999999723, 0.00012061100000000657, 0.00011995900000000281, 0.00012002800000000119, 0.00012055500000000136, 0.00012001400000000162, 0.00012058399999999997, 0.0001189170000000031, 0.00012000000000000205, 0.00012077800000000194, 0.00011922200000000216, 0.0001197500000000018, 0.00011979200000000051, 0.00011904199999999976, 0.00012070800000000409, 0.00011983399999999922, 0.00012013899999999827, 0.00011990300000000453, 0.00012009799999999904, 0.000120083, 0.0001204029999999981, 0.00012056900000000093, 0.00012036099999999939, 0.00012041600000000513, 0.0001205830000000005, 0.00012065299999999834, 0.00012023599999999579, 0.00012008399999999947, 0.00012041699999999766, 0.00012005500000000086, 0.00012023699999999526, 0.00012036099999999939, 0.00012034799999999929, 0.00012041699999999766, 0.00012004200000000076, 0.00012027800000000144, 0.00012002800000000119, 0.0001190699999999989, 0.00012079100000000204, 0.00012000000000000205, 0.00012077800000000194, 0.00012034699999999982, 0.0001205830000000005, 0.00011904100000000029, 0.00012038899999999852, 0.0001204300000000047, 0.00012037499999999896]</msg>
<status status="PASS" starttime="20201030 18:33:15.911" endtime="20201030 18:33:15.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.900" endtime="20201030 18:33:15.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:15.926" endtime="20201030 18:33:15.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.922" endtime="20201030 18:33:15.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.919" endtime="20201030 18:33:15.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.434" endtime="20201030 18:33:15.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.433" endtime="20201030 18:33:15.951"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:15.975" endtime="20201030 18:33:15.996"></status>
</kw>
<msg timestamp="20201030 18:33:15.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:15.971" endtime="20201030 18:33:15.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:16.000" endtime="20201030 18:33:16.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.006" endtime="20201030 18:33:16.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.964" endtime="20201030 18:33:16.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.958" endtime="20201030 18:33:16.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.029" endtime="20201030 18:33:16.364"></status>
</kw>
<msg timestamp="20201030 18:33:16.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040934153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041055333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:16.026" endtime="20201030 18:33:16.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040934153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041055333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:16.373" endtime="20201030 18:33:16.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.391" endtime="20201030 18:33:16.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.019" endtime="20201030 18:33:16.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.014" endtime="20201030 18:33:16.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:16.408" level="INFO">${RESULT} = [{'diff': 0.00012117999999999851}, {'diff': 0.00012168099999999848}, {'diff': 0.00012124999999999636}, {'diff': 0.00011986099999999889}, {'diff': 0.00012151399999999618}, {'diff': 0.000121277999999995...</msg>
<status status="PASS" starttime="20201030 18:33:16.399" endtime="20201030 18:33:16.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:16.419" level="INFO">${ACCURACY} = {'diff': [0.00012117999999999851, 0.00012168099999999848, 0.00012124999999999636, 0.00011986099999999889, 0.00012151399999999618, 0.0001212779999999955, 0.00012152699999999628, 0.00011986099999999889,...</msg>
<status status="PASS" starttime="20201030 18:33:16.410" endtime="20201030 18:33:16.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.429" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 18:33:16.427" endtime="20201030 18:33:16.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.435" level="INFO">VALUE: [0.00012117999999999851, 0.00012168099999999848, 0.00012124999999999636, 0.00011986099999999889, 0.00012151399999999618, 0.0001212779999999955, 0.00012152699999999628, 0.00011986099999999889, 0.00012080599999999414, 0.00012122199999999722, 0.00012105600000000133, 0.00012134700000000082, 0.00012119399999999808, 0.00012159800000000054, 0.00012116599999999894, 0.00012136100000000039, 0.00012109700000000057, 0.00012155599999999489, 0.00012147299999999694, 0.00012117999999999851, 0.00012081900000000118, 0.00012166699999999891, 0.0001207229999999962, 0.00012156899999999499, 0.00011988900000000496, 0.00012129200000000201, 0.0001207630000000029, 0.00012083300000000075, 0.00012147200000000441, 0.00012101400000000262, 0.00011993099999999673, 0.00012097299999999644, 0.00012154099999999585, 0.00012098599999999654, 0.00012037499999999896, 0.00012116599999999894, 0.00012123600000000373, 0.00012106900000000143, 0.00012172200000000466, 0.00012104200000000176, 0.00012163899999999978, 0.00012073600000000323, 0.00012127800000000244, 0.00012082000000000065, 0.00012113899999999928, 0.00012148599999999704, 0.00012131900000000168, 0.00012122199999999722, 0.00012163899999999978, 0.00012138899999999953]</msg>
<status status="PASS" starttime="20201030 18:33:16.432" endtime="20201030 18:33:16.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.420" endtime="20201030 18:33:16.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:16.453" endtime="20201030 18:33:16.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.448" endtime="20201030 18:33:16.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.445" endtime="20201030 18:33:16.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.953" endtime="20201030 18:33:16.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.952" endtime="20201030 18:33:16.478"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.501" endtime="20201030 18:33:16.525"></status>
</kw>
<msg timestamp="20201030 18:33:16.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:16.498" endtime="20201030 18:33:16.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:16.528" endtime="20201030 18:33:16.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.534" endtime="20201030 18:33:16.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.491" endtime="20201030 18:33:16.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.485" endtime="20201030 18:33:16.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.558" endtime="20201030 18:33:16.912"></status>
</kw>
<msg timestamp="20201030 18:33:16.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040446139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040568764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:16.555" endtime="20201030 18:33:16.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040446139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040568764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:16.922" endtime="20201030 18:33:16.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.940" endtime="20201030 18:33:16.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.547" endtime="20201030 18:33:16.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.543" endtime="20201030 18:33:16.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:16.958" level="INFO">${RESULT} = [{'diff': 0.0001226250000000012}, {'diff': 0.0001219449999999983}, {'diff': 0.00012184700000000132}, {'diff': 0.000122292000000003}, {'diff': 0.00012216699999999941}, {'diff': 0.0001221250000000007}, ...</msg>
<status status="PASS" starttime="20201030 18:33:16.949" endtime="20201030 18:33:16.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:16.967" level="INFO">${ACCURACY} = {'diff': [0.0001226250000000012, 0.0001219449999999983, 0.00012184700000000132, 0.000122292000000003, 0.00012216699999999941, 0.0001221250000000007, 0.00012279100000000404, 0.00012136199999999986, 0.0...</msg>
<status status="PASS" starttime="20201030 18:33:16.960" endtime="20201030 18:33:16.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.978" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 18:33:16.976" endtime="20201030 18:33:16.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.984" level="INFO">VALUE: [0.0001226250000000012, 0.0001219449999999983, 0.00012184700000000132, 0.000122292000000003, 0.00012216699999999941, 0.0001221250000000007, 0.00012279100000000404, 0.00012136199999999986, 0.00012263899999999384, 0.00012245899999999837, 0.00012088799999999955, 0.00012102700000000272, 0.00012104200000000176, 0.00012254099999999685, 0.00012215299999999985, 0.00012230599999999564, 0.00012120799999999765, 0.0001223050000000031, 0.00012258400000000197, 0.00012263900000000078, 0.00012227800000000344, 0.00012184700000000132, 0.00012088900000000596, 0.00012240299999999316, 0.00012247199999999847, 0.00012229100000000354, 0.00012169399999999858, 0.00012202799999999625, 0.0001226250000000012, 0.00012220799999999865, 0.00012181899999999524, 0.00012202799999999625, 0.0001221250000000007, 0.0001221950000000055, 0.00012115199999999937, 0.00012186100000000089, 0.00012191599999999969, 0.00012230600000000258, 0.00012233300000000225, 0.00012233300000000225, 0.00012247199999999847, 0.0001222779999999965, 0.00012247199999999847, 0.0001222229999999977, 0.00012233400000000172, 0.00012242999999999976, 0.00012105600000000133, 0.00012219400000000602, 0.0001225700000000024, 0.00012173600000000423]</msg>
<status status="PASS" starttime="20201030 18:33:16.981" endtime="20201030 18:33:16.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.969" endtime="20201030 18:33:16.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:16.997" endtime="20201030 18:33:17.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.993" endtime="20201030 18:33:17.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.990" endtime="20201030 18:33:17.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.480" endtime="20201030 18:33:17.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.479" endtime="20201030 18:33:17.023"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:17.047" endtime="20201030 18:33:17.072"></status>
</kw>
<msg timestamp="20201030 18:33:17.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:17.043" endtime="20201030 18:33:17.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:17.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:17.075" endtime="20201030 18:33:17.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:17.082" endtime="20201030 18:33:17.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.036" endtime="20201030 18:33:17.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.030" endtime="20201030 18:33:17.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:17.105" endtime="20201030 18:33:17.457"></status>
</kw>
<msg timestamp="20201030 18:33:17.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042558792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042681667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:17.102" endtime="20201030 18:33:17.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:17.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042558792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042681667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:17.466" endtime="20201030 18:33:17.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:17.484" endtime="20201030 18:33:17.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.095" endtime="20201030 18:33:17.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.090" endtime="20201030 18:33:17.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:17.502" level="INFO">${RESULT} = [{'diff': 0.00012287500000000146}, {'diff': 0.00012311100000000214}, {'diff': 0.00012352799999999775}, {'diff': 0.0001231250000000017}, {'diff': 0.00012345899999999937}, {'diff': 0.000123680000000001}...</msg>
<status status="PASS" starttime="20201030 18:33:17.493" endtime="20201030 18:33:17.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:17.511" level="INFO">${ACCURACY} = {'diff': [0.00012287500000000146, 0.00012311100000000214, 0.00012352799999999775, 0.0001231250000000017, 0.00012345899999999937, 0.000123680000000001, 0.00012277800000000394, 0.00012363899999999484, 0...</msg>
<status status="PASS" starttime="20201030 18:33:17.504" endtime="20201030 18:33:17.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:17.522" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 18:33:17.520" endtime="20201030 18:33:17.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:17.528" level="INFO">VALUE: [0.00012287500000000146, 0.00012311100000000214, 0.00012352799999999775, 0.0001231250000000017, 0.00012345899999999937, 0.000123680000000001, 0.00012277800000000394, 0.00012363899999999484, 0.0001228329999999958, 0.00012288900000000103, 0.0001236250000000022, 0.00012327800000000444, 0.00012369400000000058, 0.00012199999999999711, 0.00012351399999999818, 0.00012297199999999897, 0.00012187500000000046, 0.00012206899999999549, 0.00012324999999999836, 0.00012332000000000315, 0.0001228050000000036, 0.00012211100000000114, 0.00012340199999999468, 0.00012355499999999742, 0.00012322199999999922, 0.00012352699999999828, 0.000123680000000001, 0.00012294399999999983, 0.00012187499999999352, 0.00012372199999999972, 0.0001232779999999975, 0.00012206900000000243, 0.00012361100000000264, 0.0001231250000000017, 0.0001228199999999957, 0.0001236250000000022, 0.00012341700000000067, 0.00012333300000000325, 0.00012337499999999502, 0.00012313900000000128, 0.0001230559999999964, 0.00012366600000000144, 0.00012376400000000537, 0.00012320799999999965, 0.00012280599999999614, 0.00012326399999999793, 0.0001229579999999994, 0.0001233199999999962, 0.00012286100000000189, 0.00012320799999999965]</msg>
<status status="PASS" starttime="20201030 18:33:17.525" endtime="20201030 18:33:17.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.513" endtime="20201030 18:33:17.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:17.546" endtime="20201030 18:33:17.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.536" endtime="20201030 18:33:17.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.534" endtime="20201030 18:33:17.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.026" endtime="20201030 18:33:17.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.024" endtime="20201030 18:33:17.572"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:17.595" endtime="20201030 18:33:17.618"></status>
</kw>
<msg timestamp="20201030 18:33:17.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:17.592" endtime="20201030 18:33:17.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:17.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:17.622" endtime="20201030 18:33:17.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:17.628" endtime="20201030 18:33:17.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.584" endtime="20201030 18:33:17.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.579" endtime="20201030 18:33:17.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:17.652" endtime="20201030 18:33:18.001"></status>
</kw>
<msg timestamp="20201030 18:33:18.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040389097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040512833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:17.648" endtime="20201030 18:33:18.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:18.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040389097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040512833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:18.011" endtime="20201030 18:33:18.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:18.030" endtime="20201030 18:33:18.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.641" endtime="20201030 18:33:18.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.636" endtime="20201030 18:33:18.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:18.048" level="INFO">${RESULT} = [{'diff': 0.0001237359999999993}, {'diff': 0.0001238199999999967}, {'diff': 0.00012434699999999688}, {'diff': 0.00012438900000000253}, {'diff': 0.00012462499999999627}, {'diff': 0.00012466700000000192...</msg>
<status status="PASS" starttime="20201030 18:33:18.039" endtime="20201030 18:33:18.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:18.059" level="INFO">${ACCURACY} = {'diff': [0.0001237359999999993, 0.0001238199999999967, 0.00012434699999999688, 0.00012438900000000253, 0.00012462499999999627, 0.00012466700000000192, 0.00012431900000000468, 0.00012376399999999843, ...</msg>
<status status="PASS" starttime="20201030 18:33:18.050" endtime="20201030 18:33:18.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:18.070" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 18:33:18.068" endtime="20201030 18:33:18.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:18.075" level="INFO">VALUE: [0.0001237359999999993, 0.0001238199999999967, 0.00012434699999999688, 0.00012438900000000253, 0.00012462499999999627, 0.00012466700000000192, 0.00012431900000000468, 0.00012376399999999843, 0.0001244030000000021, 0.00012455499999999842, 0.00012441700000000167, 0.0001241529999999949, 0.00012437499999999602, 0.00012469500000000105, 0.00012416600000000194, 0.00012380600000000408, 0.00012377800000000494, 0.00012447200000000047, 0.0001244030000000021, 0.00012379199999999757, 0.0001232779999999975, 0.0001242359999999998, 0.00012376399999999843, 0.0001244160000000022, 0.00012441699999999473, 0.00012416700000000142, 0.00012466699999999498, 0.00012402799999999825, 0.00012304200000000376, 0.000124292000000005, 0.00012426399999999893, 0.00012466700000000192, 0.00012409700000000357, 0.00012433399999999678, 0.0001239580000000004, 0.00012454200000000526, 0.0001240129999999992, 0.0001242779999999985, 0.0001242909999999986, 0.0001245830000000045, 0.00012405600000000433, 0.00012369400000000058, 0.00012429199999999807, 0.00012438900000000253, 0.00012424999999999936, 0.00012286100000000189, 0.00012468100000000149, 0.00012384699999999638, 0.0001244030000000021, 0.00012412499999999577]</msg>
<status status="PASS" starttime="20201030 18:33:18.072" endtime="20201030 18:33:18.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.061" endtime="20201030 18:33:18.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:18.088" endtime="20201030 18:33:18.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.084" endtime="20201030 18:33:18.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.081" endtime="20201030 18:33:18.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.574" endtime="20201030 18:33:18.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:17.573" endtime="20201030 18:33:18.113"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:18.137" endtime="20201030 18:33:18.160"></status>
</kw>
<msg timestamp="20201030 18:33:18.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:18.133" endtime="20201030 18:33:18.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:18.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:18.163" endtime="20201030 18:33:18.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:18.170" endtime="20201030 18:33:18.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.126" endtime="20201030 18:33:18.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.120" endtime="20201030 18:33:18.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:18.194" endtime="20201030 18:33:18.542"></status>
</kw>
<msg timestamp="20201030 18:33:18.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040422028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040547542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:18.190" endtime="20201030 18:33:18.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:18.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040422028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040547542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:18.552" endtime="20201030 18:33:18.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:18.570" endtime="20201030 18:33:18.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.183" endtime="20201030 18:33:18.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.178" endtime="20201030 18:33:18.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:18.588" level="INFO">${RESULT} = [{'diff': 0.00012551400000000018}, {'diff': 0.00012511100000000414}, {'diff': 0.00012547300000000094}, {'diff': 0.00012538900000000353}, {'diff': 0.00012537499999999702}, {'diff': 0.000125583999999998...</msg>
<status status="PASS" starttime="20201030 18:33:18.579" endtime="20201030 18:33:18.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:18.599" level="INFO">${ACCURACY} = {'diff': [0.00012551400000000018, 0.00012511100000000414, 0.00012547300000000094, 0.00012538900000000353, 0.00012537499999999702, 0.00012558399999999803, 0.0001252360000000008, 0.00012563899999999684,...</msg>
<status status="PASS" starttime="20201030 18:33:18.590" endtime="20201030 18:33:18.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:18.610" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 18:33:18.608" endtime="20201030 18:33:18.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:18.615" level="INFO">VALUE: [0.00012551400000000018, 0.00012511100000000414, 0.00012547300000000094, 0.00012538900000000353, 0.00012537499999999702, 0.00012558399999999803, 0.0001252360000000008, 0.00012563899999999684, 0.00012398599999999954, 0.00012559699999999813, 0.0001252779999999995, 0.0001255830000000055, 0.0001249030000000026, 0.00012455499999999842, 0.00012476399999999943, 0.00012562499999999727, 0.0001254160000000032, 0.00012531899999999874, 0.0001255000000000006, 0.0001242359999999998, 0.0001239160000000017, 0.0001240700000000039, 0.0001254030000000031, 0.00012543000000000276, 0.0001255000000000006, 0.00012513899999999634, 0.00012513900000000328, 0.00012543000000000276, 0.00012494400000000183, 0.00012579199999999957, 0.00012555600000000583, 0.0001249580000000014, 0.0001249580000000014, 0.00012551400000000018, 0.0001248329999999978, 0.00012522200000000122, 0.0001250700000000049, 0.00012487499999999652, 0.00012533300000000525, 0.0001252360000000008, 0.00012502799999999925, 0.00012538900000000353, 0.0001251800000000025, 0.00012530599999999864, 0.00012563799999999736, 0.0001254439999999954, 0.00012569500000000206, 0.0001253329999999983, 0.00012522200000000122, 0.0001242630000000064]</msg>
<status status="PASS" starttime="20201030 18:33:18.613" endtime="20201030 18:33:18.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.601" endtime="20201030 18:33:18.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:18.628" endtime="20201030 18:33:18.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.624" endtime="20201030 18:33:18.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.621" endtime="20201030 18:33:18.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.115" endtime="20201030 18:33:18.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.114" endtime="20201030 18:33:18.654"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:18.677" endtime="20201030 18:33:18.700"></status>
</kw>
<msg timestamp="20201030 18:33:18.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:18.673" endtime="20201030 18:33:18.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:18.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:18.703" endtime="20201030 18:33:18.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:18.710" endtime="20201030 18:33:18.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.666" endtime="20201030 18:33:18.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.660" endtime="20201030 18:33:18.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:18.733" endtime="20201030 18:33:19.085"></status>
</kw>
<msg timestamp="20201030 18:33:19.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04021075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0403365, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:33:18.730" endtime="20201030 18:33:19.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:19.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04021075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0403365, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:33:19.095" endtime="20201030 18:33:19.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:19.113" endtime="20201030 18:33:19.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.723" endtime="20201030 18:33:19.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.718" endtime="20201030 18:33:19.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:19.131" level="INFO">${RESULT} = [{'diff': 0.00012574999999999392}, {'diff': 0.0001265000000000016}, {'diff': 0.00012493100000000174}, {'diff': 0.0001258199999999987}, {'diff': 0.00012554199999999932}, {'diff': 0.0001258889999999971}...</msg>
<status status="PASS" starttime="20201030 18:33:19.122" endtime="20201030 18:33:19.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:19.140" level="INFO">${ACCURACY} = {'diff': [0.00012574999999999392, 0.0001265000000000016, 0.00012493100000000174, 0.0001258199999999987, 0.00012554199999999932, 0.0001258889999999971, 0.00012640299999999716, 0.00012633399999999878, 0...</msg>
<status status="PASS" starttime="20201030 18:33:19.133" endtime="20201030 18:33:19.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:19.151" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 18:33:19.149" endtime="20201030 18:33:19.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:19.157" level="INFO">VALUE: [0.00012574999999999392, 0.0001265000000000016, 0.00012493100000000174, 0.0001258199999999987, 0.00012554199999999932, 0.0001258889999999971, 0.00012640299999999716, 0.00012633399999999878, 0.00012626400000000093, 0.00012619500000000256, 0.0001258889999999971, 0.0001259450000000023, 0.00012651400000000118, 0.00012541700000000267, 0.00012675000000000186, 0.00012637499999999802, 0.00012656999999999946, 0.00012629200000000007, 0.00012647199999999553, 0.00012594400000000283, 0.00012658299999999956, 0.00012636099999999845, 0.0001264859999999951, 0.0001260000000000011, 0.00012645799999999596, 0.0001263199999999992, 0.00012654200000000032, 0.0001266120000000051, 0.00012669500000000306, 0.00012647200000000247, 0.00012624999999999442, 0.00012597200000000197, 0.0001262910000000006, 0.0001265559999999999, 0.00012602800000000025, 0.0001262780000000005, 0.0001259580000000024, 0.00012616699999999648, 0.00012584699999999838, 0.00012622199999999528, 0.00012504200000000576, 0.00012576400000000043, 0.00012593000000000326, 0.00012490299999999566, 0.00012619399999999614, 0.00012633400000000572, 0.00012641700000000367, 0.00012677700000000153, 0.00012493000000000226, 0.00012631899999999974]</msg>
<status status="PASS" starttime="20201030 18:33:19.154" endtime="20201030 18:33:19.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.142" endtime="20201030 18:33:19.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:19.170" endtime="20201030 18:33:19.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.165" endtime="20201030 18:33:19.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.163" endtime="20201030 18:33:19.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.656" endtime="20201030 18:33:19.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:18.655" endtime="20201030 18:33:19.195"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:19.218" endtime="20201030 18:33:19.243"></status>
</kw>
<msg timestamp="20201030 18:33:19.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:19.215" endtime="20201030 18:33:19.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:19.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:19.247" endtime="20201030 18:33:19.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:19.253" endtime="20201030 18:33:19.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.207" endtime="20201030 18:33:19.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.202" endtime="20201030 18:33:19.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:19.277" endtime="20201030 18:33:19.628"></status>
</kw>
<msg timestamp="20201030 18:33:19.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041768167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041895639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:19.273" endtime="20201030 18:33:19.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:19.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041768167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041895639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:19.638" endtime="20201030 18:33:19.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:19.656" endtime="20201030 18:33:19.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.266" endtime="20201030 18:33:19.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.261" endtime="20201030 18:33:19.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:19.673" level="INFO">${RESULT} = [{'diff': 0.00012747199999999653}, {'diff': 0.0001267910000000011}, {'diff': 0.00012763900000000578}, {'diff': 0.00012736099999999945}, {'diff': 0.00012766699999999798}, {'diff': 0.0001271800000000045...</msg>
<status status="PASS" starttime="20201030 18:33:19.665" endtime="20201030 18:33:19.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:19.683" level="INFO">${ACCURACY} = {'diff': [0.00012747199999999653, 0.0001267910000000011, 0.00012763900000000578, 0.00012736099999999945, 0.00012766699999999798, 0.0001271800000000045, 0.00012695799999999646, 0.0001260559999999994, 0...</msg>
<status status="PASS" starttime="20201030 18:33:19.676" endtime="20201030 18:33:19.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:19.694" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 18:33:19.691" endtime="20201030 18:33:19.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:19.699" level="INFO">VALUE: [0.00012747199999999653, 0.0001267910000000011, 0.00012763900000000578, 0.00012736099999999945, 0.00012766699999999798, 0.0001271800000000045, 0.00012695799999999646, 0.0001260559999999994, 0.0001269309999999968, 0.00012688900000000503, 0.0001271109999999992, 0.00012687499999999852, 0.00012725000000000236, 0.0001270000000000021, 0.00012717999999999757, 0.00012729199999999413, 0.000126778000000001, 0.00012602700000000078, 0.00012731900000000074, 0.0001270000000000021, 0.0001274309999999973, 0.00012675000000000186, 0.00012758400000000003, 0.000127569000000001, 0.0001269580000000034, 0.00012680600000000014, 0.0001275560000000009, 0.00012716700000000442, 0.00012618100000000299, 0.00012751399999999524, 0.00012758299999999362, 0.00012684699999999938, 0.00012713899999999834, 0.00012725000000000236, 0.00012716699999999748, 0.000127263999999995, 0.00012704200000000082, 0.00012698700000000201, 0.00012740199999999868, 0.00012726400000000193, 0.00012719399999999714, 0.0001272079999999967, 0.0001272780000000015, 0.00012618100000000299, 0.0001272910000000016, 0.00012752700000000228, 0.00012718099999999705, 0.00012674999999999492, 0.00012737499999999902, 0.00012725000000000236]</msg>
<status status="PASS" starttime="20201030 18:33:19.696" endtime="20201030 18:33:19.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.684" endtime="20201030 18:33:19.702"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:19.713" endtime="20201030 18:33:19.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.707" endtime="20201030 18:33:19.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.705" endtime="20201030 18:33:19.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.197" endtime="20201030 18:33:19.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.196" endtime="20201030 18:33:19.739"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:19.762" endtime="20201030 18:33:19.786"></status>
</kw>
<msg timestamp="20201030 18:33:19.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:19.759" endtime="20201030 18:33:19.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:19.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:19.789" endtime="20201030 18:33:19.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:19.796" endtime="20201030 18:33:19.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.752" endtime="20201030 18:33:19.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.746" endtime="20201030 18:33:19.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:19.820" endtime="20201030 18:33:20.169"></status>
</kw>
<msg timestamp="20201030 18:33:20.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040741847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040870347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:19.816" endtime="20201030 18:33:20.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:20.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040741847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040870347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:20.179" endtime="20201030 18:33:20.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.197" endtime="20201030 18:33:20.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.809" endtime="20201030 18:33:20.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.804" endtime="20201030 18:33:20.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:20.215" level="INFO">${RESULT} = [{'diff': 0.0001285000000000036}, {'diff': 0.00012801400000000268}, {'diff': 0.00012841699999999873}, {'diff': 0.0001282910000000026}, {'diff': 0.0001281110000000002}, {'diff': 0.00012852800000000275}...</msg>
<status status="PASS" starttime="20201030 18:33:20.206" endtime="20201030 18:33:20.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:20.225" level="INFO">${ACCURACY} = {'diff': [0.0001285000000000036, 0.00012801400000000268, 0.00012841699999999873, 0.0001282910000000026, 0.0001281110000000002, 0.00012852800000000275, 0.00012872200000000472, 0.00012847199999999753, 0...</msg>
<status status="PASS" starttime="20201030 18:33:20.217" endtime="20201030 18:33:20.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:20.237" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 18:33:20.234" endtime="20201030 18:33:20.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:20.242" level="INFO">VALUE: [0.0001285000000000036, 0.00012801400000000268, 0.00012841699999999873, 0.0001282910000000026, 0.0001281110000000002, 0.00012852800000000275, 0.00012872200000000472, 0.00012847199999999753, 0.00012857000000000146, 0.00012840299999999916, 0.00012813899999999934, 0.0001283330000000013, 0.00012819499999999762, 0.0001286110000000007, 0.00012834700000000088, 0.0001278200000000007, 0.0001284309999999983, 0.00012774999999999592, 0.00012829099999999566, 0.00012819499999999762, 0.00012854200000000232, 0.0001283189999999948, 0.00012791700000000517, 0.00012818100000000499, 0.000128263999999996, 0.00012868099999999855, 0.00012799999999999617, 0.00012869399999999864, 0.00012852800000000275, 0.00012805500000000192, 0.00012806899999999455, 0.00012841699999999873, 0.0001282360000000038, 0.00012822200000000422, 0.00012866700000000592, 0.00012791699999999823, 0.00012822200000000422, 0.0001284309999999983, 0.00012794499999999737, 0.00012759700000000013, 0.00012791699999999823, 0.0001283059999999947, 0.0001284030000000061, 0.0001279439999999979, 0.00012873599999999735, 0.0001280409999999954, 0.00012869399999999864, 0.00012866699999999898, 0.00012834700000000088, 0.0001272360000000028]</msg>
<status status="PASS" starttime="20201030 18:33:20.239" endtime="20201030 18:33:20.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.227" endtime="20201030 18:33:20.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:20.255" endtime="20201030 18:33:20.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.250" endtime="20201030 18:33:20.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.248" endtime="20201030 18:33:20.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.741" endtime="20201030 18:33:20.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:19.740" endtime="20201030 18:33:20.280"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.303" endtime="20201030 18:33:20.327"></status>
</kw>
<msg timestamp="20201030 18:33:20.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:20.300" endtime="20201030 18:33:20.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:20.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:20.330" endtime="20201030 18:33:20.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.337" endtime="20201030 18:33:20.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.293" endtime="20201030 18:33:20.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.287" endtime="20201030 18:33:20.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.361" endtime="20201030 18:33:20.708"></status>
</kw>
<msg timestamp="20201030 18:33:20.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040237486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040367181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:20.357" endtime="20201030 18:33:20.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:20.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040237486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040367181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:20.717" endtime="20201030 18:33:20.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.736" endtime="20201030 18:33:20.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.350" endtime="20201030 18:33:20.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.345" endtime="20201030 18:33:20.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:20.753" level="INFO">${RESULT} = [{'diff': 0.00012969499999999912}, {'diff': 0.00012968000000000007}, {'diff': 0.0001292360000000048}, {'diff': 0.00012962500000000127}, {'diff': 0.00012923700000000427}, {'diff': 0.0001296809999999995...</msg>
<status status="PASS" starttime="20201030 18:33:20.745" endtime="20201030 18:33:20.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:20.764" level="INFO">${ACCURACY} = {'diff': [0.00012969499999999912, 0.00012968000000000007, 0.0001292360000000048, 0.00012962500000000127, 0.00012923700000000427, 0.00012968099999999955, 0.00012947199999999853, 0.00012974999999999792,...</msg>
<status status="PASS" starttime="20201030 18:33:20.755" endtime="20201030 18:33:20.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:20.776" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 18:33:20.773" endtime="20201030 18:33:20.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:20.781" level="INFO">VALUE: [0.00012969499999999912, 0.00012968000000000007, 0.0001292360000000048, 0.00012962500000000127, 0.00012923700000000427, 0.00012968099999999955, 0.00012947199999999853, 0.00012974999999999792, 0.00012952700000000428, 0.00012954199999999638, 0.0001279580000000044, 0.00012962500000000127, 0.00012905499999999598, 0.00012891599999999975, 0.00012934700000000188, 0.00012958300000000256, 0.0001287639999999965, 0.00012934699999999494, 0.00012955599999999595, 0.0001293479999999944, 0.000128860999999994, 0.00012956999999999552, 0.00012905599999999545, 0.00012905499999999598, 0.00012895799999999846, 0.0001287230000000042, 0.00012913799999999392, 0.00012881900000000224, 0.00012959700000000213, 0.0001293890000000006, 0.00012933299999999537, 0.00012830500000000217, 0.00012874999999999692, 0.00012959700000000213, 0.0001292360000000048, 0.0001293189999999958, 0.00012880499999999573, 0.000129263999999997, 0.0001295279999999968, 0.0001288189999999953, 0.00012820800000000465, 0.000128778000000003, 0.00012908300000000206, 0.00012908400000000153, 0.0001294859999999981, 0.0001292780000000035, 0.0001295409999999969, 0.0001292079999999987, 0.00012954199999999638, 0.00012879099999999616]</msg>
<status status="PASS" starttime="20201030 18:33:20.778" endtime="20201030 18:33:20.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.766" endtime="20201030 18:33:20.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:20.794" endtime="20201030 18:33:20.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.789" endtime="20201030 18:33:20.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.787" endtime="20201030 18:33:20.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.282" endtime="20201030 18:33:20.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.281" endtime="20201030 18:33:20.819"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.842" endtime="20201030 18:33:20.866"></status>
</kw>
<msg timestamp="20201030 18:33:20.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:20.839" endtime="20201030 18:33:20.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:20.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:20.869" endtime="20201030 18:33:20.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.875" endtime="20201030 18:33:20.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.831" endtime="20201030 18:33:20.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.825" endtime="20201030 18:33:20.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.899" endtime="20201030 18:33:21.252"></status>
</kw>
<msg timestamp="20201030 18:33:21.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040255236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040385278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:20.896" endtime="20201030 18:33:21.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:21.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040255236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040385278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:21.262" endtime="20201030 18:33:21.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:21.281" endtime="20201030 18:33:21.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.889" endtime="20201030 18:33:21.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.884" endtime="20201030 18:33:21.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:21.298" level="INFO">${RESULT} = [{'diff': 0.00013004199999999688}, {'diff': 0.0001303189999999968}, {'diff': 0.0001303890000000016}, {'diff': 0.0001288880000000006}, {'diff': 0.00013030600000000364}, {'diff': 0.0001298330000000028},...</msg>
<status status="PASS" starttime="20201030 18:33:21.289" endtime="20201030 18:33:21.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:21.307" level="INFO">${ACCURACY} = {'diff': [0.00013004199999999688, 0.0001303189999999968, 0.0001303890000000016, 0.0001288880000000006, 0.00013030600000000364, 0.0001298330000000028, 0.0001306389999999949, 0.00013061099999999576, 0.0...</msg>
<status status="PASS" starttime="20201030 18:33:21.300" endtime="20201030 18:33:21.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:21.318" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 18:33:21.316" endtime="20201030 18:33:21.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:21.324" level="INFO">VALUE: [0.00013004199999999688, 0.0001303189999999968, 0.0001303890000000016, 0.0001288880000000006, 0.00013030600000000364, 0.0001298330000000028, 0.0001306389999999949, 0.00013061099999999576, 0.000130166000000001, 0.00012972299999999826, 0.0001304440000000004, 0.00013045899999999944, 0.00013068100000000055, 0.00013033299999999637, 0.00013034699999999594, 0.00013045799999999996, 0.00013066700000000098, 0.00013026299999999852, 0.00012904200000000282, 0.0001301110000000022, 0.00013033299999999637, 0.00012995899999999894, 0.00013029099999999766, 0.00012999999999999817, 0.00013054200000000432, 0.00012887500000000052, 0.00013036100000000245, 0.0001301110000000022, 0.00013023700000000527, 0.00013026299999999852, 0.00013012500000000177, 0.00013013900000000134, 0.0001288880000000006, 0.00013026400000000493, 0.00012905599999999545, 0.0001302079999999997, 0.00013049999999999867, 0.00013016699999999354, 0.00012922199999999828, 0.00012979200000000357, 0.00012980499999999673, 0.00013076400000000543, 0.00013018100000000005, 0.00013037500000000202, 0.00013055599999999695, 0.00013044499999999987, 0.00013030600000000364, 0.00012998600000000554, 0.00012977799999999706, 0.00012919499999999862]</msg>
<status status="PASS" starttime="20201030 18:33:21.321" endtime="20201030 18:33:21.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.309" endtime="20201030 18:33:21.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:21.336" endtime="20201030 18:33:21.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.332" endtime="20201030 18:33:21.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.329" endtime="20201030 18:33:21.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.821" endtime="20201030 18:33:21.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.820" endtime="20201030 18:33:21.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.107" endtime="20201030 18:33:21.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:21.372" endtime="20201030 18:33:21.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.367" endtime="20201030 18:33:21.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.365" endtime="20201030 18:33:21.396"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:26.982" endtime="20201030 18:33:21.397" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:21.414" endtime="20201030 18:33:21.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.410" endtime="20201030 18:33:21.438"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:21.473" endtime="20201030 18:33:21.492"></status>
</kw>
<msg timestamp="20201030 18:33:21.493" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:21.470" endtime="20201030 18:33:21.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:21.499" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:21.495" endtime="20201030 18:33:21.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:33:21.506" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:33:21.502" endtime="20201030 18:33:21.507"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:21.462" endtime="20201030 18:33:21.509"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:21.456" endtime="20201030 18:33:21.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.453" endtime="20201030 18:33:21.511"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:33:21.519" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:33:21.518" endtime="20201030 18:33:21.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.513" endtime="20201030 18:33:21.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.451" endtime="20201030 18:33:21.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.450" endtime="20201030 18:33:21.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:21.523" endtime="20201030 18:33:21.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.444" endtime="20201030 18:33:21.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.439" endtime="20201030 18:33:21.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.407" endtime="20201030 18:33:21.530"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:21.555" endtime="20201030 18:33:21.580"></status>
</kw>
<msg timestamp="20201030 18:33:21.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:21.551" endtime="20201030 18:33:21.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:21.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:21.584" endtime="20201030 18:33:21.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:21.590" endtime="20201030 18:33:21.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.544" endtime="20201030 18:33:21.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.538" endtime="20201030 18:33:21.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:21.616" endtime="20201030 18:33:21.976"></status>
</kw>
<msg timestamp="20201030 18:33:21.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138397389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138473653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:21.610" endtime="20201030 18:33:21.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138397389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138473653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:21.986" endtime="20201030 18:33:22.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.005" endtime="20201030 18:33:22.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.603" endtime="20201030 18:33:22.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.598" endtime="20201030 18:33:22.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:22.023" level="INFO">${RESULT} = [{'diff': 7.626399999999256e-05}, {'diff': 7.577799999999857e-05}, {'diff': 7.611099999998983e-05}, {'diff': 7.67770000000001e-05}, {'diff': 7.627800000001295e-05}, {'diff': 7.612500000001021e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:22.014" endtime="20201030 18:33:22.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:22.033" level="INFO">${ACCURACY} = {'diff': [7.626399999999256e-05, 7.577799999999857e-05, 7.611099999998983e-05, 7.67770000000001e-05, 7.627800000001295e-05, 7.612500000001021e-05, 7.644400000000884e-05, 7.533400000001023e-05, 7.64590...</msg>
<status status="PASS" starttime="20201030 18:33:22.025" endtime="20201030 18:33:22.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.043" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 18:33:22.041" endtime="20201030 18:33:22.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.049" level="INFO">VALUE: [7.626399999999256e-05, 7.577799999999857e-05, 7.611099999998983e-05, 7.67770000000001e-05, 7.627800000001295e-05, 7.612500000001021e-05, 7.644400000000884e-05, 7.533400000001023e-05, 7.645900000000094e-05, 7.64169999999953e-05, 7.629099999997835e-05, 7.644399999998108e-05, 7.582000000000422e-05, 7.597300000000695e-05, 7.66110000000042e-05, 7.676399999997918e-05, 7.591699999998092e-05, 7.645800000000147e-05, 7.54169999999943e-05, 7.513900000000184e-05, 7.659800000001105e-05, 7.66110000000042e-05, 7.606900000001193e-05, 7.644400000000884e-05, 7.559699999998282e-05, 7.588899999999565e-05, 7.544399999998008e-05, 7.645900000000094e-05, 7.61669999999881e-05, 7.654100000001329e-05, 7.67770000000001e-05, 7.511099999998883e-05, 7.629200000000558e-05, 7.611100000001758e-05, 7.61119999999893e-05, 7.579200000001896e-05, 7.627800000001295e-05, 7.608300000000456e-05, 7.611100000001758e-05, 7.662499999999683e-05, 7.591699999998092e-05, 7.545800000000047e-05, 7.624999999999993e-05, 7.574999999998555e-05, 7.594399999999446e-05, 7.659699999998382e-05, 7.626399999999256e-05, 7.613900000000284e-05, 7.559699999998282e-05, 7.594399999999446e-05]</msg>
<status status="PASS" starttime="20201030 18:33:22.046" endtime="20201030 18:33:22.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.034" endtime="20201030 18:33:22.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:22.061" endtime="20201030 18:33:22.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.057" endtime="20201030 18:33:22.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.054" endtime="20201030 18:33:22.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.534" endtime="20201030 18:33:22.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.533" endtime="20201030 18:33:22.086"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.112" endtime="20201030 18:33:22.132"></status>
</kw>
<msg timestamp="20201030 18:33:22.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:22.108" endtime="20201030 18:33:22.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:22.135" endtime="20201030 18:33:22.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.141" endtime="20201030 18:33:22.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.100" endtime="20201030 18:33:22.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.093" endtime="20201030 18:33:22.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.166" endtime="20201030 18:33:22.516"></status>
</kw>
<msg timestamp="20201030 18:33:22.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042736833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042813097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:22.163" endtime="20201030 18:33:22.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042736833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042813097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:22.526" endtime="20201030 18:33:22.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.545" endtime="20201030 18:33:22.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.155" endtime="20201030 18:33:22.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.150" endtime="20201030 18:33:22.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:22.563" level="INFO">${RESULT} = [{'diff': 7.62639999999995e-05}, {'diff': 7.627799999999907e-05}, {'diff': 7.59440000000014e-05}, {'diff': 7.597200000000054e-05}, {'diff': 7.62639999999995e-05}, {'diff': 7.59440000000014e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:33:22.554" endtime="20201030 18:33:22.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:22.572" level="INFO">${ACCURACY} = {'diff': [7.62639999999995e-05, 7.627799999999907e-05, 7.59440000000014e-05, 7.597200000000054e-05, 7.62639999999995e-05, 7.59440000000014e-05, 7.613799999999643e-05, 7.59440000000014e-05, 7.579200000...</msg>
<status status="PASS" starttime="20201030 18:33:22.565" endtime="20201030 18:33:22.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.583" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 18:33:22.581" endtime="20201030 18:33:22.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.589" level="INFO">VALUE: [7.62639999999995e-05, 7.627799999999907e-05, 7.59440000000014e-05, 7.597200000000054e-05, 7.62639999999995e-05, 7.59440000000014e-05, 7.613799999999643e-05, 7.59440000000014e-05, 7.579200000000508e-05, 7.59440000000014e-05, 7.612500000000327e-05, 7.59310000000013e-05, 7.654199999999889e-05, 7.508299999999662e-05, 7.563900000000234e-05, 7.661099999999726e-05, 7.595800000000097e-05, 7.59440000000014e-05, 7.630499999999873e-05, 7.656899999999855e-05, 7.595799999999403e-05, 7.579199999999814e-05, 7.647300000000051e-05, 7.663900000000334e-05, 7.64440000000019e-05, 7.632000000000472e-05, 7.630599999999821e-05, 7.636100000000395e-05, 7.61389999999959e-05, 7.669499999999468e-05, 7.516700000000098e-05, 7.613900000000284e-05, 7.615299999999547e-05, 7.580600000000465e-05, 7.64440000000019e-05, 7.549999999999918e-05, 7.633400000000429e-05, 7.647200000000104e-05, 7.66389999999964e-05, 7.545800000000047e-05, 7.613900000000284e-05, 7.615300000000241e-05, 7.591600000000226e-05, 7.526400000000544e-05, 7.613799999999643e-05, 7.662500000000377e-05, 7.598600000000011e-05, 7.583300000000431e-05, 7.672200000000129e-05, 7.63189999999983e-05]</msg>
<status status="PASS" starttime="20201030 18:33:22.585" endtime="20201030 18:33:22.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.574" endtime="20201030 18:33:22.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:22.606" endtime="20201030 18:33:22.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.602" endtime="20201030 18:33:22.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.594" endtime="20201030 18:33:22.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.089" endtime="20201030 18:33:22.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.087" endtime="20201030 18:33:22.632"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.656" endtime="20201030 18:33:22.675"></status>
</kw>
<msg timestamp="20201030 18:33:22.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:22.652" endtime="20201030 18:33:22.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:22.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:22.679" endtime="20201030 18:33:22.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.685" endtime="20201030 18:33:22.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.645" endtime="20201030 18:33:22.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.639" endtime="20201030 18:33:22.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:22.709" endtime="20201030 18:33:23.059"></status>
</kw>
<msg timestamp="20201030 18:33:23.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040965417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041042167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:22.706" endtime="20201030 18:33:23.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:23.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040965417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041042167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:23.068" endtime="20201030 18:33:23.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:23.087" endtime="20201030 18:33:23.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.698" endtime="20201030 18:33:23.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.693" endtime="20201030 18:33:23.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:23.105" level="INFO">${RESULT} = [{'diff': 7.675000000000043e-05}, {'diff': 7.591700000000173e-05}, {'diff': 7.662499999999683e-05}, {'diff': 7.60969999999972e-05}, {'diff': 7.61389999999959e-05}, {'diff': 7.595900000000044e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:33:23.096" endtime="20201030 18:33:23.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:23.116" level="INFO">${ACCURACY} = {'diff': [7.675000000000043e-05, 7.591700000000173e-05, 7.662499999999683e-05, 7.60969999999972e-05, 7.61389999999959e-05, 7.595900000000044e-05, 7.523599999999936e-05, 7.573599999999986e-05, 7.593000...</msg>
<status status="PASS" starttime="20201030 18:33:23.107" endtime="20201030 18:33:23.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:23.127" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 18:33:23.125" endtime="20201030 18:33:23.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:23.133" level="INFO">VALUE: [7.675000000000043e-05, 7.591700000000173e-05, 7.662499999999683e-05, 7.60969999999972e-05, 7.61389999999959e-05, 7.595900000000044e-05, 7.523599999999936e-05, 7.573599999999986e-05, 7.593000000000183e-05, 7.61110000000037e-05, 7.662499999999683e-05, 7.609700000000413e-05, 7.609700000000413e-05, 7.629099999999917e-05, 7.611099999999676e-05, 7.565300000000191e-05, 7.62639999999995e-05, 7.532000000000372e-05, 7.623600000000036e-05, 7.594499999999393e-05, 7.611099999999676e-05, 7.577799999999857e-05, 7.577799999999857e-05, 7.620800000000122e-05, 7.527800000000501e-05, 7.644500000000137e-05, 7.51389999999949e-05, 7.627799999999907e-05, 7.612500000000327e-05, 7.49310000000003e-05, 7.56110000000032e-05, 7.641700000000223e-05, 7.607000000000447e-05, 7.613900000000284e-05, 7.661099999999726e-05, 7.630499999999873e-05, 7.612499999999633e-05, 7.612500000000327e-05, 7.630599999999821e-05, 7.595799999999403e-05, 7.574999999999943e-05, 7.65839999999976e-05, 7.619400000000165e-05, 7.56110000000032e-05, 7.595800000000097e-05, 7.561099999999626e-05, 7.612500000000327e-05, 7.576299999999953e-05, 7.6764e-05, 7.680600000000565e-05]</msg>
<status status="PASS" starttime="20201030 18:33:23.130" endtime="20201030 18:33:23.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.118" endtime="20201030 18:33:23.136"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:23.145" endtime="20201030 18:33:23.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.141" endtime="20201030 18:33:23.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.138" endtime="20201030 18:33:23.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.635" endtime="20201030 18:33:23.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:22.633" endtime="20201030 18:33:23.171"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:23.195" endtime="20201030 18:33:23.215"></status>
</kw>
<msg timestamp="20201030 18:33:23.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:23.191" endtime="20201030 18:33:23.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:23.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:23.218" endtime="20201030 18:33:23.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:23.225" endtime="20201030 18:33:23.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.184" endtime="20201030 18:33:23.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.177" endtime="20201030 18:33:23.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:23.249" endtime="20201030 18:33:23.599"></status>
</kw>
<msg timestamp="20201030 18:33:23.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041718958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041795097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:23.245" endtime="20201030 18:33:23.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:23.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041718958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041795097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:23.608" endtime="20201030 18:33:23.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:23.627" endtime="20201030 18:33:23.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.238" endtime="20201030 18:33:23.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.233" endtime="20201030 18:33:23.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:23.645" level="INFO">${RESULT} = [{'diff': 7.613900000000284e-05}, {'diff': 7.612500000000327e-05}, {'diff': 7.576400000000594e-05}, {'diff': 7.598600000000011e-05}, {'diff': 7.616699999999504e-05}, {'diff': 7.594499999999393e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:23.636" endtime="20201030 18:33:23.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:23.656" level="INFO">${ACCURACY} = {'diff': [7.613900000000284e-05, 7.612500000000327e-05, 7.576400000000594e-05, 7.598600000000011e-05, 7.616699999999504e-05, 7.594499999999393e-05, 7.663900000000334e-05, 7.645900000000094e-05, 7.5958...</msg>
<status status="PASS" starttime="20201030 18:33:23.647" endtime="20201030 18:33:23.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:23.667" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 18:33:23.665" endtime="20201030 18:33:23.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:23.673" level="INFO">VALUE: [7.613900000000284e-05, 7.612500000000327e-05, 7.576400000000594e-05, 7.598600000000011e-05, 7.616699999999504e-05, 7.594499999999393e-05, 7.663900000000334e-05, 7.645900000000094e-05, 7.595800000000097e-05, 7.613900000000284e-05, 7.630499999999873e-05, 7.630600000000515e-05, 7.629199999999864e-05, 7.588899999999565e-05, 7.599999999999968e-05, 7.645800000000147e-05, 7.645800000000147e-05, 7.59719999999936e-05, 7.64719999999941e-05, 7.597200000000054e-05, 7.648600000000061e-05, 7.593099999999436e-05, 7.665300000000291e-05, 7.598600000000011e-05, 7.630499999999873e-05, 7.661200000000368e-05, 7.66389999999964e-05, 7.647200000000104e-05, 7.662500000000377e-05, 7.66110000000042e-05, 7.665300000000291e-05, 7.523599999999936e-05, 7.59440000000014e-05, 7.53890000000021e-05, 7.66110000000042e-05, 7.594500000000087e-05, 7.5763999999999e-05, 7.680599999999871e-05, 7.545800000000047e-05, 7.644500000000137e-05, 7.648700000000008e-05, 7.620800000000122e-05, 7.611099999999676e-05, 7.669400000000215e-05, 7.683299999999837e-05, 7.663900000000334e-05, 7.611199999999624e-05, 7.630600000000515e-05, 7.49310000000003e-05, 7.630499999999873e-05]</msg>
<status status="PASS" starttime="20201030 18:33:23.670" endtime="20201030 18:33:23.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.658" endtime="20201030 18:33:23.676"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:23.685" endtime="20201030 18:33:23.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.681" endtime="20201030 18:33:23.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.679" endtime="20201030 18:33:23.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.173" endtime="20201030 18:33:23.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.172" endtime="20201030 18:33:23.711"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:23.734" endtime="20201030 18:33:23.753"></status>
</kw>
<msg timestamp="20201030 18:33:23.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:23.731" endtime="20201030 18:33:23.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:23.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:23.757" endtime="20201030 18:33:23.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:23.763" endtime="20201030 18:33:23.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.723" endtime="20201030 18:33:23.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.717" endtime="20201030 18:33:23.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:23.787" endtime="20201030 18:33:24.138"></status>
</kw>
<msg timestamp="20201030 18:33:24.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040347583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040423972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:23.784" endtime="20201030 18:33:24.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:24.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040347583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040423972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:24.148" endtime="20201030 18:33:24.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.167" endtime="20201030 18:33:24.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.776" endtime="20201030 18:33:24.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.771" endtime="20201030 18:33:24.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:24.185" level="INFO">${RESULT} = [{'diff': 7.63890000000031e-05}, {'diff': 7.593000000000183e-05}, {'diff': 7.62769999999996e-05}, {'diff': 7.658299999999812e-05}, {'diff': 7.590299999999522e-05}, {'diff': 7.62639999999995e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:33:24.176" endtime="20201030 18:33:24.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:24.194" level="INFO">${ACCURACY} = {'diff': [7.63890000000031e-05, 7.593000000000183e-05, 7.62769999999996e-05, 7.658299999999812e-05, 7.590299999999522e-05, 7.62639999999995e-05, 7.661099999999726e-05, 7.60969999999972e-05, 7.49310000...</msg>
<status status="PASS" starttime="20201030 18:33:24.187" endtime="20201030 18:33:24.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:24.205" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 18:33:24.203" endtime="20201030 18:33:24.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:24.211" level="INFO">VALUE: [7.63890000000031e-05, 7.593000000000183e-05, 7.62769999999996e-05, 7.658299999999812e-05, 7.590299999999522e-05, 7.62639999999995e-05, 7.661099999999726e-05, 7.60969999999972e-05, 7.49310000000003e-05, 7.627799999999907e-05, 7.494499999999987e-05, 7.5763999999999e-05, 7.612500000000327e-05, 7.593099999999436e-05, 7.55560000000044e-05, 7.602699999999935e-05, 7.594500000000087e-05, 7.612500000000327e-05, 7.661099999999726e-05, 7.5763999999999e-05, 7.64310000000018e-05, 7.5763999999999e-05, 7.645900000000094e-05, 7.611200000000318e-05, 7.611099999999676e-05, 7.61389999999959e-05, 7.577700000000603e-05, 7.595800000000097e-05, 7.573599999999986e-05, 7.655499999999898e-05, 7.626400000000644e-05, 7.630499999999873e-05, 7.641700000000223e-05, 7.584700000000388e-05, 7.62639999999995e-05, 7.64310000000018e-05, 7.579200000000508e-05, 7.59440000000014e-05, 7.662499999999683e-05, 7.593000000000183e-05, 7.658300000000506e-05, 7.6764e-05, 7.64440000000019e-05, 7.659799999999717e-05, 7.49310000000003e-05, 7.611099999999676e-05, 7.612500000000327e-05, 7.677799999999957e-05, 7.62639999999995e-05, 7.64310000000018e-05]</msg>
<status status="PASS" starttime="20201030 18:33:24.207" endtime="20201030 18:33:24.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.196" endtime="20201030 18:33:24.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:24.225" endtime="20201030 18:33:24.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.220" endtime="20201030 18:33:24.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.217" endtime="20201030 18:33:24.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.713" endtime="20201030 18:33:24.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:23.712" endtime="20201030 18:33:24.250"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.274" endtime="20201030 18:33:24.293"></status>
</kw>
<msg timestamp="20201030 18:33:24.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:24.270" endtime="20201030 18:33:24.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:24.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:24.297" endtime="20201030 18:33:24.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.303" endtime="20201030 18:33:24.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.263" endtime="20201030 18:33:24.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.257" endtime="20201030 18:33:24.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.328" endtime="20201030 18:33:24.685"></status>
</kw>
<msg timestamp="20201030 18:33:24.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040745472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040821903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:24.325" endtime="20201030 18:33:24.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:24.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040745472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040821903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:24.694" endtime="20201030 18:33:24.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.713" endtime="20201030 18:33:24.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.318" endtime="20201030 18:33:24.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.313" endtime="20201030 18:33:24.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:24.733" level="INFO">${RESULT} = [{'diff': 7.64310000000018e-05}, {'diff': 7.647200000000104e-05}, {'diff': 7.591700000000173e-05}, {'diff': 7.612500000000327e-05}, {'diff': 7.60969999999972e-05}, {'diff': 7.662500000000377e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:33:24.723" endtime="20201030 18:33:24.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:24.743" level="INFO">${ACCURACY} = {'diff': [7.64310000000018e-05, 7.647200000000104e-05, 7.591700000000173e-05, 7.612500000000327e-05, 7.60969999999972e-05, 7.662500000000377e-05, 7.58890000000026e-05, 7.595800000000097e-05, 7.5791999...</msg>
<status status="PASS" starttime="20201030 18:33:24.735" endtime="20201030 18:33:24.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:24.756" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 18:33:24.754" endtime="20201030 18:33:24.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:24.763" level="INFO">VALUE: [7.64310000000018e-05, 7.647200000000104e-05, 7.591700000000173e-05, 7.612500000000327e-05, 7.60969999999972e-05, 7.662500000000377e-05, 7.58890000000026e-05, 7.595800000000097e-05, 7.579199999999814e-05, 7.584699999999694e-05, 7.665300000000291e-05, 7.65969999999977e-05, 7.661099999999726e-05, 7.615299999999547e-05, 7.49440000000004e-05, 7.645799999999453e-05, 7.57769999999991e-05, 7.652799999999932e-05, 7.644500000000137e-05, 7.661099999999726e-05, 7.630499999999873e-05, 7.49310000000003e-05, 7.59310000000013e-05, 7.65969999999977e-05, 7.65839999999976e-05, 7.581900000000474e-05, 7.609800000000361e-05, 7.675000000000043e-05, 7.627799999999907e-05, 7.49440000000004e-05, 7.64440000000019e-05, 7.579200000000508e-05, 7.636200000000343e-05, 7.54440000000009e-05, 7.629099999999917e-05, 7.608299999999762e-05, 7.627799999999907e-05, 7.594399999999446e-05, 7.512499999999533e-05, 7.606899999999805e-05, 7.679099999999967e-05, 7.613900000000284e-05, 7.54440000000009e-05, 7.574999999999943e-05, 7.680499999999923e-05, 7.49310000000003e-05, 7.597300000000001e-05, 7.59589999999935e-05, 7.597200000000054e-05, 7.595900000000044e-05]</msg>
<status status="PASS" starttime="20201030 18:33:24.760" endtime="20201030 18:33:24.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.746" endtime="20201030 18:33:24.766"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:24.777" endtime="20201030 18:33:24.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.771" endtime="20201030 18:33:24.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.769" endtime="20201030 18:33:24.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.253" endtime="20201030 18:33:24.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.251" endtime="20201030 18:33:24.802"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.825" endtime="20201030 18:33:24.842"></status>
</kw>
<msg timestamp="20201030 18:33:24.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:24.821" endtime="20201030 18:33:24.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:24.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:24.846" endtime="20201030 18:33:24.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.852" endtime="20201030 18:33:24.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.814" endtime="20201030 18:33:24.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.808" endtime="20201030 18:33:24.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.875" endtime="20201030 18:33:25.212"></status>
</kw>
<msg timestamp="20201030 18:33:25.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039491, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039566792, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:33:24.872" endtime="20201030 18:33:25.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:25.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039491, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039566792, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:33:25.222" endtime="20201030 18:33:25.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:25.240" endtime="20201030 18:33:25.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.865" endtime="20201030 18:33:25.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.860" endtime="20201030 18:33:25.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:25.258" level="INFO">${RESULT} = [{'diff': 7.579200000000508e-05}, {'diff': 7.663799999999693e-05}, {'diff': 7.665300000000291e-05}, {'diff': 7.573599999999986e-05}, {'diff': 7.62639999999995e-05}, {'diff': 7.54310000000008e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:33:25.249" endtime="20201030 18:33:25.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:25.269" level="INFO">${ACCURACY} = {'diff': [7.579200000000508e-05, 7.663799999999693e-05, 7.665300000000291e-05, 7.573599999999986e-05, 7.62639999999995e-05, 7.54310000000008e-05, 7.51110000000027e-05, 7.611099999999676e-05, 7.6222000...</msg>
<status status="PASS" starttime="20201030 18:33:25.260" endtime="20201030 18:33:25.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:25.281" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 18:33:25.278" endtime="20201030 18:33:25.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:25.286" level="INFO">VALUE: [7.579200000000508e-05, 7.663799999999693e-05, 7.665300000000291e-05, 7.573599999999986e-05, 7.62639999999995e-05, 7.54310000000008e-05, 7.51110000000027e-05, 7.611099999999676e-05, 7.622200000000079e-05, 7.627800000000601e-05, 7.61110000000037e-05, 7.630499999999873e-05, 7.594399999999446e-05, 7.509700000000313e-05, 7.644499999999443e-05, 7.598600000000011e-05, 7.49310000000003e-05, 7.648600000000061e-05, 7.580600000000465e-05, 7.643000000000233e-05, 7.579099999999866e-05, 7.60969999999972e-05, 7.62769999999996e-05, 7.547200000000004e-05, 7.627800000000601e-05, 7.57769999999991e-05, 7.645900000000094e-05, 7.65969999999977e-05, 7.613900000000284e-05, 7.62769999999996e-05, 7.65969999999977e-05, 7.593099999999436e-05, 7.593000000000183e-05, 7.630499999999873e-05, 7.611099999999676e-05, 7.579099999999866e-05, 7.647200000000104e-05, 7.647300000000051e-05, 7.513900000000184e-05, 7.669499999999468e-05, 7.54440000000009e-05, 7.633299999999787e-05, 7.63189999999983e-05, 7.613900000000284e-05, 7.663900000000334e-05, 7.647300000000051e-05, 7.659700000000463e-05, 7.584700000000388e-05, 7.613900000000284e-05, 7.609700000000413e-05]</msg>
<status status="PASS" starttime="20201030 18:33:25.283" endtime="20201030 18:33:25.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.271" endtime="20201030 18:33:25.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:25.298" endtime="20201030 18:33:25.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.294" endtime="20201030 18:33:25.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.291" endtime="20201030 18:33:25.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.804" endtime="20201030 18:33:25.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.803" endtime="20201030 18:33:25.323"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:25.346" endtime="20201030 18:33:25.364"></status>
</kw>
<msg timestamp="20201030 18:33:25.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:25.342" endtime="20201030 18:33:25.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:25.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:25.367" endtime="20201030 18:33:25.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:25.373" endtime="20201030 18:33:25.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.335" endtime="20201030 18:33:25.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.330" endtime="20201030 18:33:25.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:25.396" endtime="20201030 18:33:25.734"></status>
</kw>
<msg timestamp="20201030 18:33:25.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039607472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039684264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:25.393" endtime="20201030 18:33:25.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:25.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039607472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039684264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:25.745" endtime="20201030 18:33:25.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:25.764" endtime="20201030 18:33:25.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.386" endtime="20201030 18:33:25.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.381" endtime="20201030 18:33:25.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:25.782" level="INFO">${RESULT} = [{'diff': 7.679199999999914e-05}, {'diff': 7.577799999999857e-05}, {'diff': 7.529199999999764e-05}, {'diff': 7.577799999999857e-05}, {'diff': 7.627799999999907e-05}, {'diff': 7.658400000000454e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:25.773" endtime="20201030 18:33:25.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:25.793" level="INFO">${ACCURACY} = {'diff': [7.679199999999914e-05, 7.577799999999857e-05, 7.529199999999764e-05, 7.577799999999857e-05, 7.627799999999907e-05, 7.658400000000454e-05, 7.579099999999866e-05, 7.516599999999457e-05, 7.6291...</msg>
<status status="PASS" starttime="20201030 18:33:25.784" endtime="20201030 18:33:25.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:25.804" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 18:33:25.801" endtime="20201030 18:33:25.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:25.809" level="INFO">VALUE: [7.679199999999914e-05, 7.577799999999857e-05, 7.529199999999764e-05, 7.577799999999857e-05, 7.627799999999907e-05, 7.658400000000454e-05, 7.579099999999866e-05, 7.516599999999457e-05, 7.629199999999864e-05, 7.59440000000014e-05, 7.579200000000508e-05, 7.680599999999871e-05, 7.617999999999514e-05, 7.64440000000019e-05, 7.629199999999864e-05, 7.629199999999864e-05, 7.52639999999985e-05, 7.518000000000108e-05, 7.595800000000097e-05, 7.597200000000054e-05, 7.66110000000042e-05, 7.659700000000463e-05, 7.629199999999864e-05, 7.659700000000463e-05, 7.662500000000377e-05, 7.595900000000044e-05, 7.611099999999676e-05, 7.624999999999993e-05, 7.662499999999683e-05, 7.661099999999726e-05, 7.629199999999864e-05, 7.579199999999814e-05, 7.627799999999907e-05, 7.6764e-05, 7.59310000000013e-05, 7.629099999999917e-05, 7.577799999999857e-05, 7.613900000000284e-05, 7.641600000000276e-05, 7.60969999999972e-05, 7.651399999999975e-05, 7.611099999999676e-05, 7.661099999999726e-05, 7.64169999999953e-05, 7.523599999999936e-05, 7.59440000000014e-05, 7.644399999999496e-05, 7.599999999999968e-05, 7.57769999999991e-05, 7.64310000000018e-05]</msg>
<status status="PASS" starttime="20201030 18:33:25.806" endtime="20201030 18:33:25.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.795" endtime="20201030 18:33:25.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:25.821" endtime="20201030 18:33:25.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.817" endtime="20201030 18:33:25.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.815" endtime="20201030 18:33:25.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.325" endtime="20201030 18:33:25.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.324" endtime="20201030 18:33:25.846"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:25.869" endtime="20201030 18:33:25.886"></status>
</kw>
<msg timestamp="20201030 18:33:25.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:25.866" endtime="20201030 18:33:25.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:25.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:25.890" endtime="20201030 18:33:25.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:25.896" endtime="20201030 18:33:25.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.858" endtime="20201030 18:33:25.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.853" endtime="20201030 18:33:25.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:25.919" endtime="20201030 18:33:26.263"></status>
</kw>
<msg timestamp="20201030 18:33:26.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039318292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039394083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:25.916" endtime="20201030 18:33:26.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:26.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039318292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039394083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:26.273" endtime="20201030 18:33:26.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:26.294" endtime="20201030 18:33:26.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.909" endtime="20201030 18:33:26.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.904" endtime="20201030 18:33:26.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:26.316" level="INFO">${RESULT} = [{'diff': 7.57910000000056e-05}, {'diff': 7.579199999999814e-05}, {'diff': 7.679199999999914e-05}, {'diff': 7.662499999999683e-05}, {'diff': 7.645800000000147e-05}, {'diff': 7.66110000000042e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:33:26.305" endtime="20201030 18:33:26.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:26.327" level="INFO">${ACCURACY} = {'diff': [7.57910000000056e-05, 7.579199999999814e-05, 7.679199999999914e-05, 7.662499999999683e-05, 7.645800000000147e-05, 7.66110000000042e-05, 7.641700000000223e-05, 7.62639999999995e-05, 7.6472000...</msg>
<status status="PASS" starttime="20201030 18:33:26.318" endtime="20201030 18:33:26.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:26.340" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 18:33:26.337" endtime="20201030 18:33:26.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:26.347" level="INFO">VALUE: [7.57910000000056e-05, 7.579199999999814e-05, 7.679199999999914e-05, 7.662499999999683e-05, 7.645800000000147e-05, 7.66110000000042e-05, 7.641700000000223e-05, 7.62639999999995e-05, 7.647200000000104e-05, 7.580499999999823e-05, 7.57910000000056e-05, 7.661099999999726e-05, 7.574999999999943e-05, 7.594399999999446e-05, 7.663900000000334e-05, 7.630499999999873e-05, 7.662500000000377e-05, 7.613900000000284e-05, 7.629199999999864e-05, 7.66519999999965e-05, 7.612500000000327e-05, 7.662499999999683e-05, 7.647200000000104e-05, 7.591599999999532e-05, 7.652799999999932e-05, 7.661099999999726e-05, 7.595900000000044e-05, 7.577799999999857e-05, 7.655599999999846e-05, 7.655599999999846e-05, 7.627799999999907e-05, 7.648700000000008e-05, 7.595800000000097e-05, 7.613799999999643e-05, 7.666700000000248e-05, 7.580599999999771e-05, 7.629199999999864e-05, 7.565300000000191e-05, 7.629199999999864e-05, 7.579199999999814e-05, 7.612499999999633e-05, 7.647200000000104e-05, 7.51110000000027e-05, 7.640299999999572e-05, 7.599999999999968e-05, 7.61110000000037e-05, 7.59310000000013e-05, 7.62639999999995e-05, 7.61389999999959e-05, 7.576299999999953e-05]</msg>
<status status="PASS" starttime="20201030 18:33:26.343" endtime="20201030 18:33:26.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.329" endtime="20201030 18:33:26.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:26.364" endtime="20201030 18:33:26.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.358" endtime="20201030 18:33:26.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.355" endtime="20201030 18:33:26.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.848" endtime="20201030 18:33:26.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:25.847" endtime="20201030 18:33:26.389"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:26.412" endtime="20201030 18:33:26.430"></status>
</kw>
<msg timestamp="20201030 18:33:26.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:26.408" endtime="20201030 18:33:26.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:26.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:26.433" endtime="20201030 18:33:26.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:26.439" endtime="20201030 18:33:26.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.401" endtime="20201030 18:33:26.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.395" endtime="20201030 18:33:26.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:26.464" endtime="20201030 18:33:26.802"></status>
</kw>
<msg timestamp="20201030 18:33:26.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039633375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039709667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:26.461" endtime="20201030 18:33:26.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:26.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039633375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039709667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:26.811" endtime="20201030 18:33:26.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:26.830" endtime="20201030 18:33:26.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.454" endtime="20201030 18:33:26.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.449" endtime="20201030 18:33:26.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:26.847" level="INFO">${RESULT} = [{'diff': 7.629199999999864e-05}, {'diff': 7.51389999999949e-05}, {'diff': 7.613900000000284e-05}, {'diff': 7.57769999999991e-05}, {'diff': 7.665299999999597e-05}, {'diff': 7.562500000000277e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:33:26.838" endtime="20201030 18:33:26.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:26.856" level="INFO">${ACCURACY} = {'diff': [7.629199999999864e-05, 7.51389999999949e-05, 7.613900000000284e-05, 7.57769999999991e-05, 7.665299999999597e-05, 7.562500000000277e-05, 7.580600000000465e-05, 7.586099999999651e-05, 7.576399...</msg>
<status status="PASS" starttime="20201030 18:33:26.849" endtime="20201030 18:33:26.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:26.867" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 18:33:26.864" endtime="20201030 18:33:26.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:26.872" level="INFO">VALUE: [7.629199999999864e-05, 7.51389999999949e-05, 7.613900000000284e-05, 7.57769999999991e-05, 7.665299999999597e-05, 7.562500000000277e-05, 7.580600000000465e-05, 7.586099999999651e-05, 7.5763999999999e-05, 7.5763999999999e-05, 7.66110000000042e-05, 7.522199999999979e-05, 7.645800000000147e-05, 7.61110000000037e-05, 7.579199999999814e-05, 7.632000000000472e-05, 7.58189999999978e-05, 7.595800000000097e-05, 7.591599999999532e-05, 7.644399999999496e-05, 7.611099999999676e-05, 7.663799999999693e-05, 7.626400000000644e-05, 7.630499999999873e-05, 7.56389999999954e-05, 7.59310000000013e-05, 7.629200000000558e-05, 7.608400000000404e-05, 7.652799999999932e-05, 7.61389999999959e-05, 7.545800000000047e-05, 7.594499999999393e-05, 7.579199999999814e-05, 7.577799999999857e-05, 7.613900000000284e-05, 7.612500000000327e-05, 7.612500000000327e-05, 7.677799999999957e-05, 7.613900000000284e-05, 7.529199999999764e-05, 7.656899999999855e-05, 7.662500000000377e-05, 7.613800000000337e-05, 7.529200000000458e-05, 7.57910000000056e-05, 7.661200000000368e-05, 7.641599999999582e-05, 7.615299999999547e-05, 7.49440000000004e-05, 7.579199999999814e-05]</msg>
<status status="PASS" starttime="20201030 18:33:26.869" endtime="20201030 18:33:26.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.858" endtime="20201030 18:33:26.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:26.890" endtime="20201030 18:33:26.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.885" endtime="20201030 18:33:26.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.882" endtime="20201030 18:33:26.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.391" endtime="20201030 18:33:26.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.390" endtime="20201030 18:33:26.915"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:26.938" endtime="20201030 18:33:26.956"></status>
</kw>
<msg timestamp="20201030 18:33:26.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:26.935" endtime="20201030 18:33:26.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:26.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:26.959" endtime="20201030 18:33:26.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:26.965" endtime="20201030 18:33:26.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.927" endtime="20201030 18:33:26.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.922" endtime="20201030 18:33:26.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:26.988" endtime="20201030 18:33:27.328"></status>
</kw>
<msg timestamp="20201030 18:33:27.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039330764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039407056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:26.985" endtime="20201030 18:33:27.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:27.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039330764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039407056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:27.338" endtime="20201030 18:33:27.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:27.357" endtime="20201030 18:33:27.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.978" endtime="20201030 18:33:27.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.973" endtime="20201030 18:33:27.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:27.374" level="INFO">${RESULT} = [{'diff': 7.629200000000558e-05}, {'diff': 7.647300000000051e-05}, {'diff': 7.629199999999864e-05}, {'diff': 7.595800000000097e-05}, {'diff': 7.66389999999964e-05}, {'diff': 7.595800000000097e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:27.365" endtime="20201030 18:33:27.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:27.384" level="INFO">${ACCURACY} = {'diff': [7.629200000000558e-05, 7.647300000000051e-05, 7.629199999999864e-05, 7.595800000000097e-05, 7.66389999999964e-05, 7.595800000000097e-05, 7.59440000000014e-05, 7.597200000000054e-05, 7.598600...</msg>
<status status="PASS" starttime="20201030 18:33:27.376" endtime="20201030 18:33:27.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:27.395" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 18:33:27.393" endtime="20201030 18:33:27.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:27.400" level="INFO">VALUE: [7.629200000000558e-05, 7.647300000000051e-05, 7.629199999999864e-05, 7.595800000000097e-05, 7.66389999999964e-05, 7.595800000000097e-05, 7.59440000000014e-05, 7.597200000000054e-05, 7.598600000000011e-05, 7.645800000000147e-05, 7.680499999999923e-05, 7.644499999999443e-05, 7.62910000000061e-05, 7.630500000000567e-05, 7.630599999999821e-05, 7.597200000000054e-05, 7.612500000000327e-05, 7.598600000000011e-05, 7.54440000000009e-05, 7.57769999999991e-05, 7.636100000000395e-05, 7.66110000000042e-05, 7.59440000000014e-05, 7.615299999999547e-05, 7.598699999999958e-05, 7.597200000000054e-05, 7.61389999999959e-05, 7.659700000000463e-05, 7.630599999999821e-05, 7.56110000000032e-05, 7.612499999999633e-05, 7.662500000000377e-05, 7.630499999999873e-05, 7.631900000000524e-05, 7.663900000000334e-05, 7.647200000000104e-05, 7.66389999999964e-05, 7.581999999999728e-05, 7.577799999999857e-05, 7.597200000000054e-05, 7.597200000000054e-05, 7.629199999999864e-05, 7.647200000000104e-05, 7.612500000000327e-05, 7.512500000000227e-05, 7.595800000000097e-05, 7.516700000000098e-05, 7.65969999999977e-05, 7.513900000000184e-05, 7.64440000000019e-05]</msg>
<status status="PASS" starttime="20201030 18:33:27.397" endtime="20201030 18:33:27.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.386" endtime="20201030 18:33:27.404"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:27.413" endtime="20201030 18:33:27.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.409" endtime="20201030 18:33:27.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.406" endtime="20201030 18:33:27.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.918" endtime="20201030 18:33:27.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:26.916" endtime="20201030 18:33:27.438"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:27.461" endtime="20201030 18:33:27.480"></status>
</kw>
<msg timestamp="20201030 18:33:27.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:27.457" endtime="20201030 18:33:27.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:27.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:27.483" endtime="20201030 18:33:27.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:27.490" endtime="20201030 18:33:27.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.450" endtime="20201030 18:33:27.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.444" endtime="20201030 18:33:27.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:27.512" endtime="20201030 18:33:27.869"></status>
</kw>
<msg timestamp="20201030 18:33:27.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039816194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039891972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:27.509" endtime="20201030 18:33:27.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:27.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039816194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039891972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:27.878" endtime="20201030 18:33:27.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:27.898" endtime="20201030 18:33:27.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.502" endtime="20201030 18:33:27.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.497" endtime="20201030 18:33:27.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:27.916" level="INFO">${RESULT} = [{'diff': 7.577799999999857e-05}, {'diff': 7.59440000000014e-05}, {'diff': 7.61110000000037e-05}, {'diff': 7.656899999999855e-05}, {'diff': 7.61110000000037e-05}, {'diff': 7.579199999999814e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:33:27.907" endtime="20201030 18:33:27.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:27.931" level="INFO">${ACCURACY} = {'diff': [7.577799999999857e-05, 7.59440000000014e-05, 7.61110000000037e-05, 7.656899999999855e-05, 7.61110000000037e-05, 7.579199999999814e-05, 7.662499999999683e-05, 7.599999999999968e-05, 7.6290999...</msg>
<status status="PASS" starttime="20201030 18:33:27.918" endtime="20201030 18:33:27.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:27.941" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 18:33:27.939" endtime="20201030 18:33:27.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:27.947" level="INFO">VALUE: [7.577799999999857e-05, 7.59440000000014e-05, 7.61110000000037e-05, 7.656899999999855e-05, 7.61110000000037e-05, 7.579199999999814e-05, 7.662499999999683e-05, 7.599999999999968e-05, 7.629099999999917e-05, 7.624999999999993e-05, 7.597200000000054e-05, 7.677799999999957e-05, 7.647200000000104e-05, 7.645800000000147e-05, 7.629200000000558e-05, 7.662500000000377e-05, 7.612500000000327e-05, 7.661099999999726e-05, 7.530600000000415e-05, 7.661199999999674e-05, 7.648600000000061e-05, 7.629199999999864e-05, 7.618000000000208e-05, 7.624999999999993e-05, 7.630599999999821e-05, 7.613799999999643e-05, 7.619500000000112e-05, 7.655499999999898e-05, 7.615300000000241e-05, 7.58189999999978e-05, 7.645900000000094e-05, 7.59440000000014e-05, 7.498600000000605e-05, 7.662500000000377e-05, 7.580500000000517e-05, 7.579099999999866e-05, 7.612499999999633e-05, 7.662500000000377e-05, 7.650000000000018e-05, 7.66110000000042e-05, 7.511099999999576e-05, 7.633300000000481e-05, 7.647200000000104e-05, 7.629099999999917e-05, 7.547200000000004e-05, 7.498699999999858e-05, 7.647300000000051e-05, 7.6764e-05, 7.577799999999857e-05, 7.536099999999601e-05]</msg>
<status status="PASS" starttime="20201030 18:33:27.944" endtime="20201030 18:33:27.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.932" endtime="20201030 18:33:27.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:27.959" endtime="20201030 18:33:27.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.955" endtime="20201030 18:33:27.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.952" endtime="20201030 18:33:27.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.440" endtime="20201030 18:33:27.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.439" endtime="20201030 18:33:27.984"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.007" endtime="20201030 18:33:28.026"></status>
</kw>
<msg timestamp="20201030 18:33:28.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:28.003" endtime="20201030 18:33:28.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:28.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:28.029" endtime="20201030 18:33:28.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.036" endtime="20201030 18:33:28.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.996" endtime="20201030 18:33:28.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.991" endtime="20201030 18:33:28.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.066" endtime="20201030 18:33:28.432"></status>
</kw>
<msg timestamp="20201030 18:33:28.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039693653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039770083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:28.062" endtime="20201030 18:33:28.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:28.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039693653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039770083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:28.442" endtime="20201030 18:33:28.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.461" endtime="20201030 18:33:28.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.052" endtime="20201030 18:33:28.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.047" endtime="20201030 18:33:28.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:28.479" level="INFO">${RESULT} = [{'diff': 7.642999999999539e-05}, {'diff': 7.608299999999762e-05}, {'diff': 7.615300000000241e-05}, {'diff': 7.627799999999907e-05}, {'diff': 7.512499999999533e-05}, {'diff': 7.64440000000019e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:28.470" endtime="20201030 18:33:28.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:28.488" level="INFO">${ACCURACY} = {'diff': [7.642999999999539e-05, 7.608299999999762e-05, 7.615300000000241e-05, 7.627799999999907e-05, 7.512499999999533e-05, 7.64440000000019e-05, 7.622200000000079e-05, 7.577799999999857e-05, 7.64720...</msg>
<status status="PASS" starttime="20201030 18:33:28.481" endtime="20201030 18:33:28.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:28.499" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 18:33:28.497" endtime="20201030 18:33:28.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:28.505" level="INFO">VALUE: [7.642999999999539e-05, 7.608299999999762e-05, 7.615300000000241e-05, 7.627799999999907e-05, 7.512499999999533e-05, 7.64440000000019e-05, 7.622200000000079e-05, 7.577799999999857e-05, 7.647200000000104e-05, 7.633399999999735e-05, 7.580599999999771e-05, 7.549999999999918e-05, 7.662499999999683e-05, 7.611099999999676e-05, 7.511099999999576e-05, 7.62639999999995e-05, 7.52769999999986e-05, 7.512499999999533e-05, 7.495899999999944e-05, 7.572200000000029e-05, 7.656899999999855e-05, 7.579099999999866e-05, 7.58189999999978e-05, 7.57769999999991e-05, 7.627799999999907e-05, 7.595800000000097e-05, 7.609800000000361e-05, 7.612500000000327e-05, 7.613800000000337e-05, 7.579200000000508e-05, 7.68189999999988e-05, 7.666699999999554e-05, 7.647200000000104e-05, 7.661099999999726e-05, 7.612500000000327e-05, 7.611099999999676e-05, 7.680500000000617e-05, 7.49440000000004e-05, 7.513900000000184e-05, 7.498599999999911e-05, 7.608300000000456e-05, 7.613799999999643e-05, 7.66389999999964e-05, 7.516700000000098e-05, 7.580499999999823e-05, 7.647300000000051e-05, 7.5763999999999e-05, 7.597200000000054e-05, 7.66389999999964e-05, 7.645800000000147e-05]</msg>
<status status="PASS" starttime="20201030 18:33:28.502" endtime="20201030 18:33:28.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.490" endtime="20201030 18:33:28.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:28.518" endtime="20201030 18:33:28.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.513" endtime="20201030 18:33:28.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.511" endtime="20201030 18:33:28.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.986" endtime="20201030 18:33:28.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:27.985" endtime="20201030 18:33:28.543"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.566" endtime="20201030 18:33:28.588"></status>
</kw>
<msg timestamp="20201030 18:33:28.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:28.563" endtime="20201030 18:33:28.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:28.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:28.592" endtime="20201030 18:33:28.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.598" endtime="20201030 18:33:28.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.555" endtime="20201030 18:33:28.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.550" endtime="20201030 18:33:28.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.622" endtime="20201030 18:33:28.974"></status>
</kw>
<msg timestamp="20201030 18:33:28.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042335222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042413, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:33:28.618" endtime="20201030 18:33:28.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042335222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042413, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:33:28.984" endtime="20201030 18:33:29.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.011" endtime="20201030 18:33:29.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.611" endtime="20201030 18:33:29.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.606" endtime="20201030 18:33:29.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:29.033" level="INFO">${RESULT} = [{'diff': 7.777800000000057e-05}, {'diff': 7.802800000000082e-05}, {'diff': 7.69310000000023e-05}, {'diff': 7.943099999999786e-05}, {'diff': 7.630599999999821e-05}, {'diff': 7.933299999999394e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:29.022" endtime="20201030 18:33:29.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:29.045" level="INFO">${ACCURACY} = {'diff': [7.777800000000057e-05, 7.802800000000082e-05, 7.69310000000023e-05, 7.943099999999786e-05, 7.630599999999821e-05, 7.933299999999394e-05, 7.745800000000247e-05, 7.94310000000048e-05, 7.720800...</msg>
<status status="PASS" starttime="20201030 18:33:29.036" endtime="20201030 18:33:29.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.056" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 18:33:29.054" endtime="20201030 18:33:29.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.061" level="INFO">VALUE: [7.777800000000057e-05, 7.802800000000082e-05, 7.69310000000023e-05, 7.943099999999786e-05, 7.630599999999821e-05, 7.933299999999394e-05, 7.745800000000247e-05, 7.94310000000048e-05, 7.720800000000222e-05, 7.937499999999958e-05, 7.713799999999743e-05, 7.662500000000377e-05, 7.927799999999513e-05, 7.712499999999733e-05, 7.954200000000189e-05, 7.780599999999971e-05, 7.962499999999983e-05, 7.630499999999873e-05, 7.727800000000007e-05, 7.912499999999933e-05, 7.71389999999969e-05, 7.961100000000026e-05, 7.751400000000075e-05, 7.943099999999786e-05, 7.662499999999683e-05, 7.87770000000021e-05, 7.704099999999992e-05, 7.926399999999556e-05, 7.7764000000001e-05, 7.85839999999996e-05, 7.775000000000143e-05, 7.954099999999548e-05, 7.609800000000361e-05, 7.966700000000548e-05, 7.686099999999751e-05, 7.955599999999452e-05, 7.744500000000237e-05, 7.679099999999967e-05, 7.81389999999979e-05, 7.773600000000186e-05, 7.942999999999839e-05, 7.736099999999801e-05, 7.688899999999665e-05, 7.912499999999933e-05, 7.627800000000601e-05, 7.969399999999821e-05, 7.706899999999905e-05, 7.877800000000157e-05, 7.712500000000427e-05, 7.59440000000014e-05]</msg>
<status status="PASS" starttime="20201030 18:33:29.058" endtime="20201030 18:33:29.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.047" endtime="20201030 18:33:29.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:29.075" endtime="20201030 18:33:29.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.070" endtime="20201030 18:33:29.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.067" endtime="20201030 18:33:29.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.545" endtime="20201030 18:33:29.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.544" endtime="20201030 18:33:29.101"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.123" endtime="20201030 18:33:29.141"></status>
</kw>
<msg timestamp="20201030 18:33:29.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:29.120" endtime="20201030 18:33:29.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:29.144" endtime="20201030 18:33:29.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.151" endtime="20201030 18:33:29.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.113" endtime="20201030 18:33:29.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.107" endtime="20201030 18:33:29.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.175" endtime="20201030 18:33:29.514"></status>
</kw>
<msg timestamp="20201030 18:33:29.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039511764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039592097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:29.171" endtime="20201030 18:33:29.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039511764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039592097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:29.523" endtime="20201030 18:33:29.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.541" endtime="20201030 18:33:29.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.164" endtime="20201030 18:33:29.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.159" endtime="20201030 18:33:29.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:29.558" level="INFO">${RESULT} = [{'diff': 8.033300000000188e-05}, {'diff': 8.066699999999954e-05}, {'diff': 8.000000000000368e-05}, {'diff': 8.03190000000023e-05}, {'diff': 7.91389999999989e-05}, {'diff': 8.065299999999997e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:33:29.550" endtime="20201030 18:33:29.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:29.570" level="INFO">${ACCURACY} = {'diff': [8.033300000000188e-05, 8.066699999999954e-05, 8.000000000000368e-05, 8.03190000000023e-05, 7.91389999999989e-05, 8.065299999999997e-05, 8.034700000000145e-05, 8.031899999999537e-05, 8.013899...</msg>
<status status="PASS" starttime="20201030 18:33:29.560" endtime="20201030 18:33:29.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.581" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 18:33:29.579" endtime="20201030 18:33:29.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.587" level="INFO">VALUE: [8.033300000000188e-05, 8.066699999999954e-05, 8.000000000000368e-05, 8.03190000000023e-05, 7.91389999999989e-05, 8.065299999999997e-05, 8.034700000000145e-05, 8.031899999999537e-05, 8.01389999999999e-05, 8.050000000000418e-05, 8.038800000000068e-05, 8.016699999999904e-05, 8.052700000000385e-05, 8.033399999999441e-05, 8.012500000000033e-05, 8.033299999999494e-05, 8.06520000000005e-05, 8.032000000000178e-05, 7.986100000000051e-05, 7.98190000000018e-05, 7.984700000000094e-05, 8.016699999999904e-05, 8.049999999999724e-05, 8.012500000000033e-05, 7.984700000000094e-05, 8.048599999999767e-05, 8.048599999999767e-05, 8.019400000000565e-05, 8.015299999999947e-05, 8.051400000000375e-05, 8.051400000000375e-05, 8.011100000000076e-05, 8.050000000000418e-05, 8.019399999999871e-05, 8.006899999999512e-05, 8.000000000000368e-05, 8.052800000000332e-05, 8.051400000000375e-05, 7.981999999999434e-05, 8.031899999999537e-05, 8.052799999999638e-05, 7.904200000000139e-05, 7.983300000000138e-05, 7.983400000000085e-05, 8.016699999999904e-05, 8.012500000000033e-05, 8.017999999999914e-05, 8.069499999999868e-05, 8.016699999999904e-05, 8.016699999999904e-05]</msg>
<status status="PASS" starttime="20201030 18:33:29.583" endtime="20201030 18:33:29.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.572" endtime="20201030 18:33:29.590"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:29.599" endtime="20201030 18:33:29.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.594" endtime="20201030 18:33:29.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.592" endtime="20201030 18:33:29.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.103" endtime="20201030 18:33:29.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.101" endtime="20201030 18:33:29.624"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.646" endtime="20201030 18:33:29.664"></status>
</kw>
<msg timestamp="20201030 18:33:29.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:29.643" endtime="20201030 18:33:29.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:29.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:29.668" endtime="20201030 18:33:29.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.674" endtime="20201030 18:33:29.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.636" endtime="20201030 18:33:29.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.630" endtime="20201030 18:33:29.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:29.698" endtime="20201030 18:33:30.046"></status>
</kw>
<msg timestamp="20201030 18:33:30.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039384389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039464875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:29.694" endtime="20201030 18:33:30.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:30.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039384389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039464875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:30.056" endtime="20201030 18:33:30.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:30.074" endtime="20201030 18:33:30.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.687" endtime="20201030 18:33:30.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.682" endtime="20201030 18:33:30.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:30.091" level="INFO">${RESULT} = [{'diff': 8.048600000000461e-05}, {'diff': 7.93190000000013e-05}, {'diff': 8.083399999999491e-05}, {'diff': 7.983300000000138e-05}, {'diff': 8.036100000000101e-05}, {'diff': 8.034799999999398e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:30.083" endtime="20201030 18:33:30.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:30.102" level="INFO">${ACCURACY} = {'diff': [8.048600000000461e-05, 7.93190000000013e-05, 8.083399999999491e-05, 7.983300000000138e-05, 8.036100000000101e-05, 8.034799999999398e-05, 8.017999999999914e-05, 7.966699999999854e-05, 7.97779...</msg>
<status status="PASS" starttime="20201030 18:33:30.093" endtime="20201030 18:33:30.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:30.113" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 18:33:30.111" endtime="20201030 18:33:30.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:30.119" level="INFO">VALUE: [8.048600000000461e-05, 7.93190000000013e-05, 8.083399999999491e-05, 7.983300000000138e-05, 8.036100000000101e-05, 8.034799999999398e-05, 8.017999999999914e-05, 7.966699999999854e-05, 7.977799999999563e-05, 8.018000000000608e-05, 7.990199999999975e-05, 7.982000000000128e-05, 8.016599999999957e-05, 8.084700000000195e-05, 7.929200000000164e-05, 8.002800000000282e-05, 8.08190000000028e-05, 8.015299999999947e-05, 8.004100000000292e-05, 8.034799999999398e-05, 7.983400000000085e-05, 7.983300000000138e-05, 8.018099999999861e-05, 8.068099999999911e-05, 7.945799999999753e-05, 8.034700000000145e-05, 8.066699999999954e-05, 8.017999999999914e-05, 7.98190000000018e-05, 8.066600000000007e-05, 8.06249999999939e-05, 8.027800000000307e-05, 8.066600000000007e-05, 8.066699999999954e-05, 8.066600000000007e-05, 8.048699999999714e-05, 7.918099999999761e-05, 8.047200000000504e-05, 7.917999999999814e-05, 8.031999999999484e-05, 8.034799999999398e-05, 8.034700000000145e-05, 8.030599999999527e-05, 8.049999999999724e-05, 7.998600000000411e-05, 7.987500000000008e-05, 8.066600000000007e-05, 8.001299999999684e-05, 8.036100000000101e-05, 8.03190000000023e-05]</msg>
<status status="PASS" starttime="20201030 18:33:30.115" endtime="20201030 18:33:30.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.104" endtime="20201030 18:33:30.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:30.137" endtime="20201030 18:33:30.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.130" endtime="20201030 18:33:30.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.127" endtime="20201030 18:33:30.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.626" endtime="20201030 18:33:30.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:29.625" endtime="20201030 18:33:30.166"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:30.191" endtime="20201030 18:33:30.210"></status>
</kw>
<msg timestamp="20201030 18:33:30.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:30.188" endtime="20201030 18:33:30.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:30.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:30.213" endtime="20201030 18:33:30.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:30.219" endtime="20201030 18:33:30.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.180" endtime="20201030 18:33:30.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.174" endtime="20201030 18:33:30.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:30.243" endtime="20201030 18:33:30.591"></status>
</kw>
<msg timestamp="20201030 18:33:30.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045908542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045995583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:30.239" endtime="20201030 18:33:30.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:30.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045908542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045995583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:30.600" endtime="20201030 18:33:30.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:30.619" endtime="20201030 18:33:30.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.232" endtime="20201030 18:33:30.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.227" endtime="20201030 18:33:30.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:30.636" level="INFO">${RESULT} = [{'diff': 8.704100000000298e-05}, {'diff': 8.723599999999748e-05}, {'diff': 8.647199999999716e-05}, {'diff': 8.59999999999958e-05}, {'diff': 8.719399999999877e-05}, {'diff': 8.741599999999988e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:30.627" endtime="20201030 18:33:30.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:30.645" level="INFO">${ACCURACY} = {'diff': [8.704100000000298e-05, 8.723599999999748e-05, 8.647199999999716e-05, 8.59999999999958e-05, 8.719399999999877e-05, 8.741599999999988e-05, 8.745799999999859e-05, 8.752800000000338e-05, 8.75970...</msg>
<status status="PASS" starttime="20201030 18:33:30.638" endtime="20201030 18:33:30.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:30.656" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 18:33:30.654" endtime="20201030 18:33:30.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:30.661" level="INFO">VALUE: [8.704100000000298e-05, 8.723599999999748e-05, 8.647199999999716e-05, 8.59999999999958e-05, 8.719399999999877e-05, 8.741599999999988e-05, 8.745799999999859e-05, 8.752800000000338e-05, 8.759700000000176e-05, 8.738900000000022e-05, 8.736100000000108e-05, 8.708400000000116e-05, 8.708300000000169e-05, 8.693099999999843e-05, 8.708299999999475e-05, 8.770799999999884e-05, 8.67920000000022e-05, 8.745799999999859e-05, 8.769399999999927e-05, 8.74999999999973e-05, 8.704199999999551e-05, 8.627800000000213e-05, 8.61249999999994e-05, 8.690299999999929e-05, 8.687500000000015e-05, 8.707000000000159e-05, 8.730599999999533e-05, 8.783300000000244e-05, 8.698600000000417e-05, 8.715299999999954e-05, 8.769399999999927e-05, 8.723599999999748e-05, 8.71799999999992e-05, 8.6944999999998e-05, 8.750000000000424e-05, 8.61799999999982e-05, 8.773599999999798e-05, 8.76799999999997e-05, 8.738800000000074e-05, 8.725000000000399e-05, 8.719400000000571e-05, 8.768099999999918e-05, 8.71250000000004e-05, 8.701300000000384e-05, 8.774999999999755e-05, 8.706900000000212e-05, 8.74449999999985e-05, 8.725000000000399e-05, 8.708400000000116e-05, 8.741699999999936e-05]</msg>
<status status="PASS" starttime="20201030 18:33:30.658" endtime="20201030 18:33:30.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.647" endtime="20201030 18:33:30.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:30.674" endtime="20201030 18:33:30.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.669" endtime="20201030 18:33:30.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.667" endtime="20201030 18:33:30.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.168" endtime="20201030 18:33:30.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.167" endtime="20201030 18:33:30.699"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:30.721" endtime="20201030 18:33:30.741"></status>
</kw>
<msg timestamp="20201030 18:33:30.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:30.718" endtime="20201030 18:33:30.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:30.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:30.745" endtime="20201030 18:33:30.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:30.751" endtime="20201030 18:33:30.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.711" endtime="20201030 18:33:30.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.705" endtime="20201030 18:33:30.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:30.774" endtime="20201030 18:33:31.110"></status>
</kw>
<msg timestamp="20201030 18:33:31.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041006681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041095972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:30.771" endtime="20201030 18:33:31.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:31.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041006681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041095972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:31.120" endtime="20201030 18:33:31.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:31.139" endtime="20201030 18:33:31.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.763" endtime="20201030 18:33:31.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.759" endtime="20201030 18:33:31.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:31.156" level="INFO">${RESULT} = [{'diff': 8.929099999999829e-05}, {'diff': 8.943100000000093e-05}, {'diff': 8.826399999999762e-05}, {'diff': 8.969500000000075e-05}, {'diff': 8.826300000000509e-05}, {'diff': 8.879199999999726e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:31.147" endtime="20201030 18:33:31.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:31.165" level="INFO">${ACCURACY} = {'diff': [8.929099999999829e-05, 8.943100000000093e-05, 8.826399999999762e-05, 8.969500000000075e-05, 8.826300000000509e-05, 8.879199999999726e-05, 8.89999999999988e-05, 8.822199999999891e-05, 8.92779...</msg>
<status status="PASS" starttime="20201030 18:33:31.158" endtime="20201030 18:33:31.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:31.175" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 18:33:31.173" endtime="20201030 18:33:31.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:31.181" level="INFO">VALUE: [8.929099999999829e-05, 8.943100000000093e-05, 8.826399999999762e-05, 8.969500000000075e-05, 8.826300000000509e-05, 8.879199999999726e-05, 8.89999999999988e-05, 8.822199999999891e-05, 8.927799999999819e-05, 8.919400000000077e-05, 8.854099999999754e-05, 8.877800000000463e-05, 8.75129999999974e-05, 8.848599999999873e-05, 8.952799999999844e-05, 8.880599999999683e-05, 8.898599999999923e-05, 8.913900000000197e-05, 8.963899999999553e-05, 8.920899999999982e-05, 8.961099999999639e-05, 8.874999999999855e-05, 8.924999999999905e-05, 8.929199999999776e-05, 8.91800000000012e-05, 8.688899999999972e-05, 8.88329999999965e-05, 8.86670000000006e-05, 8.902800000000488e-05, 8.873599999999898e-05, 8.893100000000043e-05, 8.848600000000567e-05, 8.930599999999733e-05, 8.93050000000048e-05, 8.765300000000004e-05, 8.75129999999974e-05, 8.700000000000374e-05, 8.748599999999773e-05, 8.79999999999978e-05, 8.902799999999794e-05, 8.71799999999992e-05, 8.933399999999647e-05, 8.91250000000024e-05, 8.855600000000352e-05, 8.734800000000098e-05, 8.868100000000018e-05, 8.751399999999687e-05, 8.90129999999989e-05, 8.880499999999736e-05, 8.8945e-05]</msg>
<status status="PASS" starttime="20201030 18:33:31.178" endtime="20201030 18:33:31.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.167" endtime="20201030 18:33:31.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:31.195" endtime="20201030 18:33:31.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.189" endtime="20201030 18:33:31.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.186" endtime="20201030 18:33:31.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.701" endtime="20201030 18:33:31.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:30.700" endtime="20201030 18:33:31.220"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:31.242" endtime="20201030 18:33:31.261"></status>
</kw>
<msg timestamp="20201030 18:33:31.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:31.239" endtime="20201030 18:33:31.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:31.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:31.264" endtime="20201030 18:33:31.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:31.270" endtime="20201030 18:33:31.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.232" endtime="20201030 18:33:31.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.226" endtime="20201030 18:33:31.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:31.293" endtime="20201030 18:33:31.637"></status>
</kw>
<msg timestamp="20201030 18:33:31.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039296861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039386736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:31.290" endtime="20201030 18:33:31.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:31.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039296861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039386736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:31.647" endtime="20201030 18:33:31.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:31.666" endtime="20201030 18:33:31.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.283" endtime="20201030 18:33:31.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.278" endtime="20201030 18:33:31.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:31.683" level="INFO">${RESULT} = [{'diff': 8.987499999999621e-05}, {'diff': 9.06529999999961e-05}, {'diff': 8.990200000000281e-05}, {'diff': 8.979199999999826e-05}, {'diff': 9.087499999999721e-05}, {'diff': 9.077799999999969e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:31.674" endtime="20201030 18:33:31.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:31.694" level="INFO">${ACCURACY} = {'diff': [8.987499999999621e-05, 9.06529999999961e-05, 8.990200000000281e-05, 8.979199999999826e-05, 9.087499999999721e-05, 9.077799999999969e-05, 9.045900000000107e-05, 8.943000000000145e-05, 9.03060...</msg>
<status status="PASS" starttime="20201030 18:33:31.685" endtime="20201030 18:33:31.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:31.704" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 18:33:31.702" endtime="20201030 18:33:31.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:31.710" level="INFO">VALUE: [8.987499999999621e-05, 9.06529999999961e-05, 8.990200000000281e-05, 8.979199999999826e-05, 9.087499999999721e-05, 9.077799999999969e-05, 9.045900000000107e-05, 8.943000000000145e-05, 9.030600000000527e-05, 8.993000000000195e-05, 8.918100000000068e-05, 9.080599999999883e-05, 8.977799999999869e-05, 9.08329999999985e-05, 9.048600000000073e-05, 9.055599999999858e-05, 9.044400000000202e-05, 9.088900000000372e-05, 8.951399999999887e-05, 8.930600000000427e-05, 9.02920000000057e-05, 9.004199999999851e-05, 9.070800000000184e-05, 8.981899999999793e-05, 8.995900000000057e-05, 8.981900000000487e-05, 9.027799999999919e-05, 8.933399999999647e-05, 9.013899999999603e-05, 9.025000000000005e-05, 9.036199999999661e-05, 8.980499999999836e-05, 9.020800000000134e-05, 8.984799999999654e-05, 9.006999999999765e-05, 8.974999999999955e-05, 9.020900000000082e-05, 9.058299999999825e-05, 9.066699999999567e-05, 9.075000000000055e-05, 9.016699999999517e-05, 9.084800000000448e-05, 9.031899999999843e-05, 9.047199999999422e-05, 9.061100000000433e-05, 9.06800000000027e-05, 9.062499999999696e-05, 9.013900000000297e-05, 8.994400000000152e-05, 9.068100000000218e-05]</msg>
<status status="PASS" starttime="20201030 18:33:31.707" endtime="20201030 18:33:31.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.695" endtime="20201030 18:33:31.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:31.722" endtime="20201030 18:33:31.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.718" endtime="20201030 18:33:31.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.716" endtime="20201030 18:33:31.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.222" endtime="20201030 18:33:31.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.221" endtime="20201030 18:33:31.747"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:31.775" endtime="20201030 18:33:31.794"></status>
</kw>
<msg timestamp="20201030 18:33:31.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:31.771" endtime="20201030 18:33:31.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:31.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:31.797" endtime="20201030 18:33:31.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:31.803" endtime="20201030 18:33:31.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.762" endtime="20201030 18:33:31.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.754" endtime="20201030 18:33:31.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:31.827" endtime="20201030 18:33:32.165"></status>
</kw>
<msg timestamp="20201030 18:33:32.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044351694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044443111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:31.823" endtime="20201030 18:33:32.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:32.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044351694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044443111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:32.175" endtime="20201030 18:33:32.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.193" endtime="20201030 18:33:32.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.816" endtime="20201030 18:33:32.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.811" endtime="20201030 18:33:32.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:32.210" level="INFO">${RESULT} = [{'diff': 9.141700000000336e-05}, {'diff': 9.106999999999865e-05}, {'diff': 9.133300000000594e-05}, {'diff': 9.120900000000182e-05}, {'diff': 9.137499999999771e-05}, {'diff': 9.119400000000277e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:32.202" endtime="20201030 18:33:32.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:32.221" level="INFO">${ACCURACY} = {'diff': [9.141700000000336e-05, 9.106999999999865e-05, 9.133300000000594e-05, 9.120900000000182e-05, 9.137499999999771e-05, 9.119400000000277e-05, 9.13199999999989e-05, 9.126400000000062e-05, 9.12769...</msg>
<status status="PASS" starttime="20201030 18:33:32.212" endtime="20201030 18:33:32.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:32.232" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 18:33:32.230" endtime="20201030 18:33:32.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:32.238" level="INFO">VALUE: [9.141700000000336e-05, 9.106999999999865e-05, 9.133300000000594e-05, 9.120900000000182e-05, 9.137499999999771e-05, 9.119400000000277e-05, 9.13199999999989e-05, 9.126400000000062e-05, 9.127699999999378e-05, 9.11670000000031e-05, 9.112499999999746e-05, 9.059699999999782e-05, 9.143100000000293e-05, 9.112499999999746e-05, 9.155599999999958e-05, 9.155600000000652e-05, 9.113900000000397e-05, 9.037499999999671e-05, 9.009700000000426e-05, 9.149999999999436e-05, 9.137500000000465e-05, 9.125000000000105e-05, 9.154200000000001e-05, 9.158399999999872e-05, 9.029199999999876e-05, 9.155599999999958e-05, 9.091600000000338e-05, 9.122199999999497e-05, 9.168100000000318e-05, 9.147200000000216e-05, 9.088900000000372e-05, 9.111100000000483e-05, 9.163899999999753e-05, 9.1332999999999e-05, 9.076400000000012e-05, 9.151399999999393e-05, 9.011100000000383e-05, 9.140299999999685e-05, 9.084700000000501e-05, 9.169500000000275e-05, 9.09859999999943e-05, 9.16250000000049e-05, 9.111099999999789e-05, 9.102799999999994e-05, 9.119399999999583e-05, 9.120899999999488e-05, 9.134699999999857e-05, 9.161099999999839e-05, 9.127800000000019e-05, 9.011100000000383e-05]</msg>
<status status="PASS" starttime="20201030 18:33:32.235" endtime="20201030 18:33:32.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.223" endtime="20201030 18:33:32.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:32.255" endtime="20201030 18:33:32.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.251" endtime="20201030 18:33:32.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.248" endtime="20201030 18:33:32.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.750" endtime="20201030 18:33:32.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:31.748" endtime="20201030 18:33:32.280"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.303" endtime="20201030 18:33:32.324"></status>
</kw>
<msg timestamp="20201030 18:33:32.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:32.300" endtime="20201030 18:33:32.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:32.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:32.328" endtime="20201030 18:33:32.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.334" endtime="20201030 18:33:32.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.293" endtime="20201030 18:33:32.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.287" endtime="20201030 18:33:32.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.358" endtime="20201030 18:33:32.711"></status>
</kw>
<msg timestamp="20201030 18:33:32.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040302361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040393417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:32.354" endtime="20201030 18:33:32.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:32.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040302361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040393417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:32.720" endtime="20201030 18:33:32.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.739" endtime="20201030 18:33:32.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.347" endtime="20201030 18:33:32.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.342" endtime="20201030 18:33:32.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:32.757" level="INFO">${RESULT} = [{'diff': 9.105599999999908e-05}, {'diff': 9.191599999999744e-05}, {'diff': 9.237499999999871e-05}, {'diff': 9.26659999999982e-05}, {'diff': 9.125000000000105e-05}, {'diff': 9.199999999999486e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:33:32.748" endtime="20201030 18:33:32.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:32.766" level="INFO">${ACCURACY} = {'diff': [9.105599999999908e-05, 9.191599999999744e-05, 9.237499999999871e-05, 9.26659999999982e-05, 9.125000000000105e-05, 9.199999999999486e-05, 9.205600000000008e-05, 9.244399999999708e-05, 9.18889...</msg>
<status status="PASS" starttime="20201030 18:33:32.759" endtime="20201030 18:33:32.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:32.777" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 18:33:32.775" endtime="20201030 18:33:32.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:32.783" level="INFO">VALUE: [9.105599999999908e-05, 9.191599999999744e-05, 9.237499999999871e-05, 9.26659999999982e-05, 9.125000000000105e-05, 9.199999999999486e-05, 9.205600000000008e-05, 9.244399999999708e-05, 9.188899999999778e-05, 9.257000000000015e-05, 9.195800000000309e-05, 9.219399999999683e-05, 9.222299999999545e-05, 9.263899999999853e-05, 9.202800000000094e-05, 9.268100000000418e-05, 9.21659999999977e-05, 9.279100000000179e-05, 9.195900000000257e-05, 9.215199999999812e-05, 9.181899999999993e-05, 9.19859999999953e-05, 9.212499999999846e-05, 9.234699999999957e-05, 9.243100000000393e-05, 9.256900000000068e-05, 9.220800000000334e-05, 9.156899999999968e-05, 9.26529999999981e-05, 9.192999999999701e-05, 9.087499999999721e-05, 9.179100000000079e-05, 9.175000000000155e-05, 9.230600000000033e-05, 9.237499999999871e-05, 9.213799999999855e-05, 9.21529999999976e-05, 9.255500000000111e-05, 9.198699999999477e-05, 9.263899999999853e-05, 9.262499999999896e-05, 9.177800000000069e-05, 9.238899999999828e-05, 9.141700000000336e-05, 9.205600000000008e-05, 9.209699999999932e-05, 9.22079999999964e-05, 9.276399999999518e-05, 9.186199999999811e-05, 9.21529999999976e-05]</msg>
<status status="PASS" starttime="20201030 18:33:32.780" endtime="20201030 18:33:32.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.768" endtime="20201030 18:33:32.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:32.796" endtime="20201030 18:33:32.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.791" endtime="20201030 18:33:32.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.789" endtime="20201030 18:33:32.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.283" endtime="20201030 18:33:32.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.281" endtime="20201030 18:33:32.821"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.844" endtime="20201030 18:33:32.872"></status>
</kw>
<msg timestamp="20201030 18:33:32.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:32.841" endtime="20201030 18:33:32.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:32.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:32.875" endtime="20201030 18:33:32.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.882" endtime="20201030 18:33:32.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.834" endtime="20201030 18:33:32.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.827" endtime="20201030 18:33:32.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.906" endtime="20201030 18:33:33.273"></status>
</kw>
<msg timestamp="20201030 18:33:33.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046477083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046570347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:32.902" endtime="20201030 18:33:33.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:33.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046477083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046570347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:33.282" endtime="20201030 18:33:33.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:33.300" endtime="20201030 18:33:33.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.895" endtime="20201030 18:33:33.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.890" endtime="20201030 18:33:33.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:33.317" level="INFO">${RESULT} = [{'diff': 9.326399999999568e-05}, {'diff': 9.340299999999885e-05}, {'diff': 9.251400000000187e-05}, {'diff': 9.252800000000144e-05}, {'diff': 9.288899999999878e-05}, {'diff': 9.331999999999396e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:33.309" endtime="20201030 18:33:33.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:33.327" level="INFO">${ACCURACY} = {'diff': [9.326399999999568e-05, 9.340299999999885e-05, 9.251400000000187e-05, 9.252800000000144e-05, 9.288899999999878e-05, 9.331999999999396e-05, 9.383299999999456e-05, 9.362499999999996e-05, 9.3361...</msg>
<status status="PASS" starttime="20201030 18:33:33.319" endtime="20201030 18:33:33.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:33.337" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 18:33:33.335" endtime="20201030 18:33:33.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:33.343" level="INFO">VALUE: [9.326399999999568e-05, 9.340299999999885e-05, 9.251400000000187e-05, 9.252800000000144e-05, 9.288899999999878e-05, 9.331999999999396e-05, 9.383299999999456e-05, 9.362499999999996e-05, 9.336100000000014e-05, 9.354200000000201e-05, 9.36529999999991e-05, 9.356899999999474e-05, 9.308300000000075e-05, 9.341699999999842e-05, 9.359700000000082e-05, 9.281900000000093e-05, 9.35130000000034e-05, 9.369499999999781e-05, 9.320800000000434e-05, 9.36800000000057e-05, 9.327799999999525e-05, 9.316699999999817e-05, 9.344400000000502e-05, 9.349999999999636e-05, 9.293099999999749e-05, 9.306900000000118e-05, 9.302699999999553e-05, 9.35279999999955e-05, 9.238899999999828e-05, 9.366600000000613e-05, 9.33200000000009e-05, 9.28330000000005e-05, 9.277700000000222e-05, 9.284700000000007e-05, 9.223600000000248e-05, 9.333400000000047e-05, 9.29859999999963e-05, 9.319399999999783e-05, 9.273599999999604e-05, 9.34859999999968e-05, 9.352800000000244e-05, 9.301399999999543e-05, 9.354199999999507e-05, 9.355500000000211e-05, 9.31529999999986e-05, 9.361100000000039e-05, 9.330600000000133e-05, 9.272199999999647e-05, 9.384700000000107e-05, 9.326399999999568e-05]</msg>
<status status="PASS" starttime="20201030 18:33:33.340" endtime="20201030 18:33:33.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.328" endtime="20201030 18:33:33.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:33.357" endtime="20201030 18:33:33.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.351" endtime="20201030 18:33:33.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.348" endtime="20201030 18:33:33.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.823" endtime="20201030 18:33:33.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.822" endtime="20201030 18:33:33.382"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:33.404" endtime="20201030 18:33:33.423"></status>
</kw>
<msg timestamp="20201030 18:33:33.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:33.401" endtime="20201030 18:33:33.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:33.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:33.426" endtime="20201030 18:33:33.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:33.432" endtime="20201030 18:33:33.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.394" endtime="20201030 18:33:33.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.388" endtime="20201030 18:33:33.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:33.456" endtime="20201030 18:33:33.795"></status>
</kw>
<msg timestamp="20201030 18:33:33.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039304333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039398389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:33.452" endtime="20201030 18:33:33.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:33.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039304333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039398389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:33.804" endtime="20201030 18:33:33.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:33.823" endtime="20201030 18:33:33.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.445" endtime="20201030 18:33:33.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.441" endtime="20201030 18:33:33.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:33.841" level="INFO">${RESULT} = [{'diff': 9.405600000000208e-05}, {'diff': 9.456900000000268e-05}, {'diff': 9.459800000000129e-05}, {'diff': 9.448600000000473e-05}, {'diff': 9.456899999999574e-05}, {'diff': 9.318100000000468e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:33.832" endtime="20201030 18:33:33.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:33.852" level="INFO">${ACCURACY} = {'diff': [9.405600000000208e-05, 9.456900000000268e-05, 9.459800000000129e-05, 9.448600000000473e-05, 9.456899999999574e-05, 9.318100000000468e-05, 9.447199999999822e-05, 9.445799999999865e-05, 9.4222...</msg>
<status status="PASS" starttime="20201030 18:33:33.843" endtime="20201030 18:33:33.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:33.863" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 18:33:33.861" endtime="20201030 18:33:33.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:33.868" level="INFO">VALUE: [9.405600000000208e-05, 9.456900000000268e-05, 9.459800000000129e-05, 9.448600000000473e-05, 9.456899999999574e-05, 9.318100000000468e-05, 9.447199999999822e-05, 9.445799999999865e-05, 9.422299999999745e-05, 9.392999999999901e-05, 9.412500000000046e-05, 9.384800000000054e-05, 9.440299999999985e-05, 9.4333000000002e-05, 9.413900000000003e-05, 9.430500000000286e-05, 9.411100000000089e-05, 9.41529999999996e-05, 9.43059999999954e-05, 9.44450000000055e-05, 9.423599999999754e-05, 9.469399999999933e-05, 9.334800000000004e-05, 9.423600000000448e-05, 9.429099999999635e-05, 9.423599999999754e-05, 9.419399999999883e-05, 9.419499999999831e-05, 9.419399999999883e-05, 9.393099999999849e-05, 9.398699999999677e-05, 9.463900000000053e-05, 9.401299999999696e-05, 9.455600000000258e-05, 9.367999999999876e-05, 9.44859999999978e-05, 9.41529999999996e-05, 9.438900000000028e-05, 9.433400000000147e-05, 9.413900000000003e-05, 9.315300000000554e-05, 9.409700000000132e-05, 9.441699999999942e-05, 9.370800000000484e-05, 9.441699999999942e-05, 9.430499999999592e-05, 9.461100000000139e-05, 9.301400000000237e-05, 9.427700000000372e-05, 9.487500000000121e-05]</msg>
<status status="PASS" starttime="20201030 18:33:33.865" endtime="20201030 18:33:33.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.854" endtime="20201030 18:33:33.872"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:33.881" endtime="20201030 18:33:33.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.877" endtime="20201030 18:33:33.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.874" endtime="20201030 18:33:33.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.384" endtime="20201030 18:33:33.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.382" endtime="20201030 18:33:33.907"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:33.930" endtime="20201030 18:33:33.952"></status>
</kw>
<msg timestamp="20201030 18:33:33.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:33.926" endtime="20201030 18:33:33.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:33.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:33.955" endtime="20201030 18:33:33.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:33.962" endtime="20201030 18:33:33.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.919" endtime="20201030 18:33:33.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.913" endtime="20201030 18:33:33.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:33.986" endtime="20201030 18:33:34.344"></status>
</kw>
<msg timestamp="20201030 18:33:34.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040505486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040601639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:33.983" endtime="20201030 18:33:34.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:34.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040505486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040601639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:34.353" endtime="20201030 18:33:34.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:34.372" endtime="20201030 18:33:34.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.975" endtime="20201030 18:33:34.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.970" endtime="20201030 18:33:34.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:34.389" level="INFO">${RESULT} = [{'diff': 9.61530000000016e-05}, {'diff': 9.659699999999688e-05}, {'diff': 9.590200000000187e-05}, {'diff': 9.59859999999993e-05}, {'diff': 9.655499999999817e-05}, {'diff': 9.654199999999807e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:33:34.380" endtime="20201030 18:33:34.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:34.400" level="INFO">${ACCURACY} = {'diff': [9.61530000000016e-05, 9.659699999999688e-05, 9.590200000000187e-05, 9.59859999999993e-05, 9.655499999999817e-05, 9.654199999999807e-05, 9.662499999999602e-05, 9.623599999999954e-05, 9.613900...</msg>
<status status="PASS" starttime="20201030 18:33:34.391" endtime="20201030 18:33:34.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:34.411" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 18:33:34.408" endtime="20201030 18:33:34.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:34.416" level="INFO">VALUE: [9.61530000000016e-05, 9.659699999999688e-05, 9.590200000000187e-05, 9.59859999999993e-05, 9.655499999999817e-05, 9.654199999999807e-05, 9.662499999999602e-05, 9.623599999999954e-05, 9.613900000000203e-05, 9.649999999999936e-05, 9.61809999999938e-05, 9.636100000000314e-05, 9.593100000000049e-05, 9.505599999999614e-05, 9.620899999999988e-05, 9.595800000000015e-05, 9.622199999999997e-05, 9.60409999999981e-05, 9.581899999999699e-05, 9.626399999999868e-05, 9.579100000000479e-05, 9.638900000000228e-05, 9.652800000000544e-05, 9.645900000000013e-05, 9.640300000000185e-05, 9.638900000000228e-05, 9.6333000000004e-05, 9.619400000000083e-05, 9.577800000000469e-05, 9.640300000000185e-05, 9.631899999999749e-05, 9.587499999999527e-05, 9.605499999999767e-05, 9.649999999999936e-05, 9.668100000000124e-05, 9.597199999999972e-05, 9.658300000000425e-05, 9.637500000000271e-05, 9.612500000000246e-05, 9.630499999999792e-05, 9.618100000000074e-05, 9.634700000000357e-05, 9.509699999999538e-05, 9.609700000000332e-05, 9.58609999999957e-05, 9.541700000000042e-05, 9.651399999999893e-05, 9.63059999999974e-05, 9.607000000000365e-05, 9.647200000000022e-05]</msg>
<status status="PASS" starttime="20201030 18:33:34.413" endtime="20201030 18:33:34.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.402" endtime="20201030 18:33:34.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:34.428" endtime="20201030 18:33:34.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.424" endtime="20201030 18:33:34.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.422" endtime="20201030 18:33:34.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.909" endtime="20201030 18:33:34.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:33.908" endtime="20201030 18:33:34.454"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:34.480" endtime="20201030 18:33:34.500"></status>
</kw>
<msg timestamp="20201030 18:33:34.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:34.476" endtime="20201030 18:33:34.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:34.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:34.503" endtime="20201030 18:33:34.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:34.510" endtime="20201030 18:33:34.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.469" endtime="20201030 18:33:34.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.462" endtime="20201030 18:33:34.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:34.532" endtime="20201030 18:33:34.872"></status>
</kw>
<msg timestamp="20201030 18:33:34.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043380514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043477875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:34.529" endtime="20201030 18:33:34.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:34.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043380514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043477875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:34.881" endtime="20201030 18:33:34.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:34.900" endtime="20201030 18:33:34.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.522" endtime="20201030 18:33:34.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.517" endtime="20201030 18:33:34.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:34.917" level="INFO">${RESULT} = [{'diff': 9.73609999999972e-05}, {'diff': 9.712499999999652e-05}, {'diff': 9.725000000000011e-05}, {'diff': 9.69860000000003e-05}, {'diff': 9.716699999999523e-05}, {'diff': 9.73880000000038e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:33:34.908" endtime="20201030 18:33:34.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:34.926" level="INFO">${ACCURACY} = {'diff': [9.73609999999972e-05, 9.712499999999652e-05, 9.725000000000011e-05, 9.69860000000003e-05, 9.716699999999523e-05, 9.73880000000038e-05, 9.630499999999792e-05, 9.766700000000267e-05, 9.7444000...</msg>
<status status="PASS" starttime="20201030 18:33:34.919" endtime="20201030 18:33:34.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:34.937" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 18:33:34.934" endtime="20201030 18:33:34.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:34.942" level="INFO">VALUE: [9.73609999999972e-05, 9.712499999999652e-05, 9.725000000000011e-05, 9.69860000000003e-05, 9.716699999999523e-05, 9.73880000000038e-05, 9.630499999999792e-05, 9.766700000000267e-05, 9.744400000000208e-05, 9.71809999999948e-05, 9.77080000000019e-05, 9.693100000000149e-05, 9.690199999999594e-05, 9.769400000000233e-05, 9.697200000000072e-05, 9.59859999999993e-05, 9.752700000000003e-05, 9.772200000000147e-05, 9.725000000000011e-05, 9.679199999999832e-05, 9.747200000000122e-05, 9.718000000000226e-05, 9.776400000000018e-05, 9.691700000000192e-05, 9.633400000000347e-05, 9.729099999999935e-05, 9.74730000000007e-05, 9.743099999999505e-05, 9.741700000000242e-05, 9.709699999999738e-05, 9.7333000000005e-05, 9.78059999999989e-05, 9.781899999999899e-05, 9.594400000000058e-05, 9.681999999999746e-05, 9.738900000000328e-05, 9.68609999999967e-05, 9.761099999999745e-05, 9.69730000000002e-05, 9.763899999999659e-05, 9.712500000000346e-05, 9.725000000000011e-05, 9.775000000000061e-05, 9.779199999999932e-05, 9.693100000000149e-05, 9.681899999999799e-05, 9.759699999999788e-05, 9.687500000000321e-05, 9.705500000000561e-05, 9.71809999999948e-05]</msg>
<status status="PASS" starttime="20201030 18:33:34.939" endtime="20201030 18:33:34.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.928" endtime="20201030 18:33:34.945"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:34.954" endtime="20201030 18:33:34.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.950" endtime="20201030 18:33:34.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.948" endtime="20201030 18:33:34.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.457" endtime="20201030 18:33:34.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.455" endtime="20201030 18:33:34.987"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:35.023" endtime="20201030 18:33:35.046"></status>
</kw>
<msg timestamp="20201030 18:33:35.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:35.018" endtime="20201030 18:33:35.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:35.049" endtime="20201030 18:33:35.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:35.055" endtime="20201030 18:33:35.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.010" endtime="20201030 18:33:35.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.998" endtime="20201030 18:33:35.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:35.079" endtime="20201030 18:33:35.470"></status>
</kw>
<msg timestamp="20201030 18:33:35.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064039472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064137486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:35.076" endtime="20201030 18:33:35.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064039472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064137486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:35.479" endtime="20201030 18:33:35.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:35.498" endtime="20201030 18:33:35.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.068" endtime="20201030 18:33:35.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.064" endtime="20201030 18:33:35.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:35.515" level="INFO">${RESULT} = [{'diff': 9.80139999999935e-05}, {'diff': 9.858299999999931e-05}, {'diff': 9.857000000000615e-05}, {'diff': 9.87080000000029e-05}, {'diff': 9.7027999999999e-05}, {'diff': 9.820900000000188e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:33:35.506" endtime="20201030 18:33:35.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:35.525" level="INFO">${ACCURACY} = {'diff': [9.80139999999935e-05, 9.858299999999931e-05, 9.857000000000615e-05, 9.87080000000029e-05, 9.7027999999999e-05, 9.820900000000188e-05, 9.831899999999949e-05, 9.806999999999177e-05, 9.82360000...</msg>
<status status="PASS" starttime="20201030 18:33:35.517" endtime="20201030 18:33:35.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.535" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 18:33:35.533" endtime="20201030 18:33:35.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.541" level="INFO">VALUE: [9.80139999999935e-05, 9.858299999999931e-05, 9.857000000000615e-05, 9.87080000000029e-05, 9.7027999999999e-05, 9.820900000000188e-05, 9.831899999999949e-05, 9.806999999999177e-05, 9.823600000000154e-05, 9.826300000000121e-05, 9.801400000000737e-05, 9.85280000000005e-05, 9.805499999999967e-05, 9.787499999999727e-05, 9.838900000000428e-05, 9.837499999999777e-05, 9.879200000000032e-05, 9.782000000001234e-05, 9.816700000001011e-05, 9.863899999999759e-05, 9.808299999999881e-05, 9.827800000000719e-05, 9.848599999999486e-05, 9.842999999999658e-05, 9.708299999999781e-05, 9.845899999999519e-05, 9.775000000000755e-05, 9.854199999999314e-05, 9.800000000000086e-05, 9.755599999999864e-05, 9.859700000000582e-05, 9.798699999999383e-05, 9.823600000000154e-05, 9.8333000000006e-05, 9.848599999999486e-05, 9.827800000000719e-05, 9.813900000001097e-05, 9.787499999999727e-05, 9.848600000000873e-05, 9.857000000000615e-05, 9.844400000000308e-05, 9.866699999999673e-05, 9.841599999999007e-05, 9.808299999999881e-05, 9.845899999999519e-05, 9.842999999999658e-05, 9.757000000000515e-05, 9.81530000000036e-05, 9.815200000000412e-05, 9.759800000000429e-05]</msg>
<status status="PASS" starttime="20201030 18:33:35.538" endtime="20201030 18:33:35.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.526" endtime="20201030 18:33:35.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:35.555" endtime="20201030 18:33:35.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.549" endtime="20201030 18:33:35.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.547" endtime="20201030 18:33:35.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.990" endtime="20201030 18:33:35.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:34.989" endtime="20201030 18:33:35.590"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:35.614" endtime="20201030 18:33:35.635"></status>
</kw>
<msg timestamp="20201030 18:33:35.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:35.610" endtime="20201030 18:33:35.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:35.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:35.638" endtime="20201030 18:33:35.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:35.645" endtime="20201030 18:33:35.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.603" endtime="20201030 18:33:35.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.597" endtime="20201030 18:33:35.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:35.668" endtime="20201030 18:33:36.021"></status>
</kw>
<msg timestamp="20201030 18:33:36.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051328458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051427236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:35.665" endtime="20201030 18:33:36.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051328458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051427236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:36.030" endtime="20201030 18:33:36.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.049" endtime="20201030 18:33:36.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.658" endtime="20201030 18:33:36.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.653" endtime="20201030 18:33:36.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:36.066" level="INFO">${RESULT} = [{'diff': 9.877800000000075e-05}, {'diff': 9.926400000000168e-05}, {'diff': 9.899999999999493e-05}, {'diff': 9.927800000000125e-05}, {'diff': 9.966599999999826e-05}, {'diff': 9.941699999999748e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:36.057" endtime="20201030 18:33:36.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:36.077" level="INFO">${ACCURACY} = {'diff': [9.877800000000075e-05, 9.926400000000168e-05, 9.899999999999493e-05, 9.927800000000125e-05, 9.966599999999826e-05, 9.941699999999748e-05, 9.9028000000001e-05, 9.794400000000258e-05, 9.961099...</msg>
<status status="PASS" starttime="20201030 18:33:36.068" endtime="20201030 18:33:36.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.088" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 18:33:36.085" endtime="20201030 18:33:36.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.093" level="INFO">VALUE: [9.877800000000075e-05, 9.926400000000168e-05, 9.899999999999493e-05, 9.927800000000125e-05, 9.966599999999826e-05, 9.941699999999748e-05, 9.9028000000001e-05, 9.794400000000258e-05, 9.961099999999945e-05, 9.933300000000006e-05, 9.911099999999895e-05, 9.792999999999608e-05, 9.979200000000132e-05, 9.944399999999715e-05, 9.940199999999844e-05, 9.9028000000001e-05, 9.929100000000135e-05, 9.884699999999913e-05, 9.829100000000035e-05, 9.963900000000553e-05, 9.965299999999816e-05, 9.951400000000193e-05, 9.974999999999568e-05, 9.945800000000365e-05, 9.940300000000485e-05, 9.919400000000383e-05, 9.913899999999809e-05, 9.972200000000347e-05, 9.970799999999697e-05, 9.892999999999708e-05, 9.96939999999974e-05, 9.958299999999337e-05, 9.951400000000193e-05, 9.959699999999988e-05, 9.872200000000247e-05, 9.825000000000111e-05, 9.881999999999946e-05, 9.931900000000049e-05, 9.940299999999791e-05, 9.954200000000107e-05, 9.922200000000297e-05, 9.890300000000435e-05, 9.875000000000161e-05, 9.977800000000175e-05, 9.941699999999748e-05, 9.937499999999877e-05, 9.966700000000467e-05, 9.937500000000571e-05, 9.967999999999783e-05, 9.844400000000308e-05]</msg>
<status status="PASS" starttime="20201030 18:33:36.090" endtime="20201030 18:33:36.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.079" endtime="20201030 18:33:36.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:36.106" endtime="20201030 18:33:36.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.101" endtime="20201030 18:33:36.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.099" endtime="20201030 18:33:36.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.592" endtime="20201030 18:33:36.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:35.591" endtime="20201030 18:33:36.131"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.154" endtime="20201030 18:33:36.174"></status>
</kw>
<msg timestamp="20201030 18:33:36.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:36.150" endtime="20201030 18:33:36.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:36.178" endtime="20201030 18:33:36.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.184" endtime="20201030 18:33:36.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.143" endtime="20201030 18:33:36.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.137" endtime="20201030 18:33:36.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.207" endtime="20201030 18:33:36.560"></status>
</kw>
<msg timestamp="20201030 18:33:36.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040054431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040154319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:36.204" endtime="20201030 18:33:36.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040054431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040154319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:36.569" endtime="20201030 18:33:36.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.587" endtime="20201030 18:33:36.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.197" endtime="20201030 18:33:36.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.192" endtime="20201030 18:33:36.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:36.605" level="INFO">${RESULT} = [{'diff': 9.988799999999937e-05}, {'diff': 9.994399999999765e-05}, {'diff': 9.984700000000013e-05}, {'diff': 9.987499999999927e-05}, {'diff': 0.00010056900000000174}, {'diff': 9.98609999999997e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:33:36.596" endtime="20201030 18:33:36.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:36.616" level="INFO">${ACCURACY} = {'diff': [9.988799999999937e-05, 9.994399999999765e-05, 9.984700000000013e-05, 9.987499999999927e-05, 0.00010056900000000174, 9.98609999999997e-05, 0.00010011099999999995, 0.00010040299999999891, 0.00...</msg>
<status status="PASS" starttime="20201030 18:33:36.607" endtime="20201030 18:33:36.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.627" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 18:33:36.625" endtime="20201030 18:33:36.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.633" level="INFO">VALUE: [9.988799999999937e-05, 9.994399999999765e-05, 9.984700000000013e-05, 9.987499999999927e-05, 0.00010056900000000174, 9.98609999999997e-05, 0.00010011099999999995, 0.00010040299999999891, 0.00010031900000000149, 0.0001003060000000014, 0.00010026400000000268, 9.900000000000186e-05, 0.00010004200000000157, 0.00010062500000000002, 0.00010056900000000174, 0.00010041700000000542, 0.00010002700000000253, 0.00010054200000000207, 0.000100513999999996, 9.962499999999902e-05, 9.977800000000175e-05, 0.00010033300000000106, 0.00010050000000000336, 9.966599999999826e-05, 0.00010062500000000002, 9.983300000000056e-05, 0.00010023600000000354, 0.00010065299999999916, 0.0001003610000000002, 9.900000000000186e-05, 0.00010001300000000296, 9.984700000000013e-05, 0.00010051400000000293, 0.00010016699999999823, 9.944399999999715e-05, 9.931999999999996e-05, 0.00010045799999999772, 0.00010066699999999873, 0.000100028000000002, 0.00010016599999999876, 0.0001006939999999984, 0.00010008400000000028, 9.986100000000664e-05, 0.0001007359999999971, 0.00010043099999999805, 9.963899999999859e-05, 9.991699999999798e-05, 0.00010016599999999876, 0.00010027799999999532, 0.00010081899999999505]</msg>
<status status="PASS" starttime="20201030 18:33:36.630" endtime="20201030 18:33:36.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.617" endtime="20201030 18:33:36.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:36.646" endtime="20201030 18:33:36.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.642" endtime="20201030 18:33:36.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.639" endtime="20201030 18:33:36.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.133" endtime="20201030 18:33:36.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.132" endtime="20201030 18:33:36.672"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.695" endtime="20201030 18:33:36.714"></status>
</kw>
<msg timestamp="20201030 18:33:36.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:36.691" endtime="20201030 18:33:36.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:36.717" endtime="20201030 18:33:36.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.724" endtime="20201030 18:33:36.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.684" endtime="20201030 18:33:36.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.678" endtime="20201030 18:33:36.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.747" endtime="20201030 18:33:37.088"></status>
</kw>
<msg timestamp="20201030 18:33:37.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040313042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040414792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:36.744" endtime="20201030 18:33:37.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:37.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040313042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040414792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:37.097" endtime="20201030 18:33:37.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:37.116" endtime="20201030 18:33:37.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.736" endtime="20201030 18:33:37.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.732" endtime="20201030 18:33:37.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:37.133" level="INFO">${RESULT} = [{'diff': 0.00010174999999999768}, {'diff': 0.00010108300000000181}, {'diff': 0.000100028000000002}, {'diff': 0.00010019400000000483}, {'diff': 0.00010105500000000267}, {'diff': 0.00010097200000000472...</msg>
<status status="PASS" starttime="20201030 18:33:37.124" endtime="20201030 18:33:37.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:37.142" level="INFO">${ACCURACY} = {'diff': [0.00010174999999999768, 0.00010108300000000181, 0.000100028000000002, 0.00010019400000000483, 0.00010105500000000267, 0.00010097200000000472, 0.0001016939999999994, 9.98609999999997e-05, 0.0...</msg>
<status status="PASS" starttime="20201030 18:33:37.135" endtime="20201030 18:33:37.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:37.153" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 18:33:37.151" endtime="20201030 18:33:37.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:37.158" level="INFO">VALUE: [0.00010174999999999768, 0.00010108300000000181, 0.000100028000000002, 0.00010019400000000483, 0.00010105500000000267, 0.00010097200000000472, 0.0001016939999999994, 9.98609999999997e-05, 0.00010187499999999433, 0.0001013060000000024, 0.00010145799999999872, 0.00010137500000000077, 0.00010109800000000085, 0.00010105600000000214, 0.00010075000000000361, 0.0001010559999999952, 0.00010127799999999632, 0.000100028000000002, 0.00010131900000000249, 0.0001013060000000024, 0.00010126399999999675, 0.0001013060000000024, 0.00010106900000000224, 0.00010112500000000052, 0.00010138900000000034, 0.00010163900000000059, 0.00010109800000000085, 0.00010158299999999537, 0.00010084700000000113, 0.000101028000000003, 0.0001013060000000024, 0.000101028000000003, 0.00010161100000000145, 0.0001009159999999995, 0.00010141699999999948, 0.00010147200000000522, 0.00010099999999999693, 0.00010176400000000418, 0.00010163900000000059, 0.00010101400000000343, 0.00010190200000000094, 0.00010093100000000549, 0.00010170799999999897, 0.00010158400000000178, 0.00010183299999999562, 0.0001013060000000024, 0.00010109700000000138, 0.00010077799999999582, 0.00010093099999999855, 0.00010086099999999376]</msg>
<status status="PASS" starttime="20201030 18:33:37.155" endtime="20201030 18:33:37.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.144" endtime="20201030 18:33:37.161"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:37.171" endtime="20201030 18:33:37.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.166" endtime="20201030 18:33:37.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.164" endtime="20201030 18:33:37.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.674" endtime="20201030 18:33:37.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.673" endtime="20201030 18:33:37.196"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:37.219" endtime="20201030 18:33:37.240"></status>
</kw>
<msg timestamp="20201030 18:33:37.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:37.215" endtime="20201030 18:33:37.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:37.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:37.243" endtime="20201030 18:33:37.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:37.249" endtime="20201030 18:33:37.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.208" endtime="20201030 18:33:37.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.202" endtime="20201030 18:33:37.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:37.285" endtime="20201030 18:33:37.636"></status>
</kw>
<msg timestamp="20201030 18:33:37.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041424139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041526667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:37.280" endtime="20201030 18:33:37.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:37.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041424139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041526667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:37.645" endtime="20201030 18:33:37.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:37.673" endtime="20201030 18:33:37.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.269" endtime="20201030 18:33:37.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.262" endtime="20201030 18:33:37.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:37.691" level="INFO">${RESULT} = [{'diff': 0.0001025280000000045}, {'diff': 0.00010209800000000185}, {'diff': 0.0001016939999999994}, {'diff': 0.0001018610000000017}, {'diff': 0.00010187500000000127}, {'diff': 0.0001027359999999991},...</msg>
<status status="PASS" starttime="20201030 18:33:37.682" endtime="20201030 18:33:37.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:37.701" level="INFO">${ACCURACY} = {'diff': [0.0001025280000000045, 0.00010209800000000185, 0.0001016939999999994, 0.0001018610000000017, 0.00010187500000000127, 0.0001027359999999991, 0.00010233300000000306, 0.00010234700000000263, 0....</msg>
<status status="PASS" starttime="20201030 18:33:37.693" endtime="20201030 18:33:37.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:37.712" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 18:33:37.709" endtime="20201030 18:33:37.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:37.717" level="INFO">VALUE: [0.0001025280000000045, 0.00010209800000000185, 0.0001016939999999994, 0.0001018610000000017, 0.00010187500000000127, 0.0001027359999999991, 0.00010233300000000306, 0.00010234700000000263, 0.00010270899999999944, 0.00010233299999999612, 0.00010263899999999465, 0.00010199999999999793, 0.00010205600000000314, 0.00010258299999999637, 0.00010198599999999836, 0.00010263900000000159, 0.0001022359999999986, 0.00010229199999999689, 0.00010244400000000015, 0.0001023610000000022, 0.00010220799999999947, 0.00010204099999999716, 0.00010238900000000134, 0.00010230599999999646, 0.00010213900000000109, 0.00010248599999999886, 0.00010205500000000367, 0.00010263900000000159, 0.00010212500000000152, 0.00010179099999999691, 0.00010247200000000622, 0.00010222199999999904, 0.0001015689999999958, 0.0001025559999999967, 0.0001023610000000022, 0.00010200000000000486, 0.00010208300000000281, 0.00010199999999999793, 0.00010237500000000177, 0.00010273699999999858, 0.00010158299999999537, 0.00010223700000000502, 0.00010229099999999741, 0.00010216700000000023, 0.00010193099999999955, 0.00010158299999999537, 0.00010177799999999682, 0.0001018610000000017, 0.00010247199999999929, 0.00010180500000000342]</msg>
<status status="PASS" starttime="20201030 18:33:37.714" endtime="20201030 18:33:37.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.702" endtime="20201030 18:33:37.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:37.736" endtime="20201030 18:33:37.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.730" endtime="20201030 18:33:37.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.728" endtime="20201030 18:33:37.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.198" endtime="20201030 18:33:37.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.197" endtime="20201030 18:33:37.761"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:37.786" endtime="20201030 18:33:37.808"></status>
</kw>
<msg timestamp="20201030 18:33:37.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:37.782" endtime="20201030 18:33:37.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:37.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:37.812" endtime="20201030 18:33:37.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:37.818" endtime="20201030 18:33:37.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.774" endtime="20201030 18:33:37.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.768" endtime="20201030 18:33:37.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:37.842" endtime="20201030 18:33:38.191"></status>
</kw>
<msg timestamp="20201030 18:33:38.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042817278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042920319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:37.838" endtime="20201030 18:33:38.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:38.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042817278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042920319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:38.200" endtime="20201030 18:33:38.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:38.218" endtime="20201030 18:33:38.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.831" endtime="20201030 18:33:38.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.826" endtime="20201030 18:33:38.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:38.236" level="INFO">${RESULT} = [{'diff': 0.00010304099999999816}, {'diff': 0.000103416000000002}, {'diff': 0.00010293100000000055}, {'diff': 0.00010299999999999893}, {'diff': 0.0001035559999999977}, {'diff': 0.00010281999999999653}...</msg>
<status status="PASS" starttime="20201030 18:33:38.227" endtime="20201030 18:33:38.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:38.251" level="INFO">${ACCURACY} = {'diff': [0.00010304099999999816, 0.000103416000000002, 0.00010293100000000055, 0.00010299999999999893, 0.0001035559999999977, 0.00010281999999999653, 0.00010340300000000191, 0.00010347200000000029, 0...</msg>
<status status="PASS" starttime="20201030 18:33:38.238" endtime="20201030 18:33:38.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:38.262" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 18:33:38.260" endtime="20201030 18:33:38.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:38.267" level="INFO">VALUE: [0.00010304099999999816, 0.000103416000000002, 0.00010293100000000055, 0.00010299999999999893, 0.0001035559999999977, 0.00010281999999999653, 0.00010340300000000191, 0.00010347200000000029, 0.00010337499999999583, 0.00010318000000000133, 0.00010357000000000421, 0.00010262500000000202, 0.00010333300000000406, 0.00010290300000000141, 0.00010297199999999979, 0.0001037360000000001, 0.00010290299999999447, 0.00010327800000000525, 0.00010319500000000037, 0.00010354199999999814, 0.00010308300000000381, 0.00010290200000000194, 0.00010212500000000152, 0.00010284700000000313, 0.00010312499999999558, 0.0001030139999999985, 0.00010304200000000457, 0.00010333299999999712, 0.0001032359999999996, 0.00010305500000000467, 0.00010213899999999415, 0.00010351299999999952, 0.00010359699999999694, 0.00010384699999999719, 0.00010309700000000338, 0.00010313900000000209, 0.00010290299999999447, 0.00010262500000000202, 0.00010341700000000148, 0.00010361099999999651, 0.00010362500000000302, 0.00010331999999999703, 0.00010342999999999464, 0.00010290300000000141, 0.00010279200000000432, 0.00010331899999999755, 0.00010245799999999972, 0.00010344400000000115, 0.00010343100000000105, 0.00010322200000000004]</msg>
<status status="PASS" starttime="20201030 18:33:38.264" endtime="20201030 18:33:38.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.253" endtime="20201030 18:33:38.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:38.280" endtime="20201030 18:33:38.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.276" endtime="20201030 18:33:38.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.273" endtime="20201030 18:33:38.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.764" endtime="20201030 18:33:38.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:37.762" endtime="20201030 18:33:38.305"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:38.328" endtime="20201030 18:33:38.350"></status>
</kw>
<msg timestamp="20201030 18:33:38.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:38.325" endtime="20201030 18:33:38.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:38.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:38.353" endtime="20201030 18:33:38.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:38.359" endtime="20201030 18:33:38.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.318" endtime="20201030 18:33:38.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.312" endtime="20201030 18:33:38.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:38.383" endtime="20201030 18:33:38.735"></status>
</kw>
<msg timestamp="20201030 18:33:38.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040346264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040450847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:38.380" endtime="20201030 18:33:38.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:38.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040346264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040450847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:38.744" endtime="20201030 18:33:38.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:38.763" endtime="20201030 18:33:38.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.372" endtime="20201030 18:33:38.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.368" endtime="20201030 18:33:38.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:38.780" level="INFO">${RESULT} = [{'diff': 0.00010458299999999837}, {'diff': 0.0001041810000000018}, {'diff': 0.00010404099999999916}, {'diff': 0.00010330500000000492}, {'diff': 0.0001040689999999983}, {'diff': 0.0001039160000000025}...</msg>
<status status="PASS" starttime="20201030 18:33:38.771" endtime="20201030 18:33:38.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:38.866" level="INFO">${ACCURACY} = {'diff': [0.00010458299999999837, 0.0001041810000000018, 0.00010404099999999916, 0.00010330500000000492, 0.0001040689999999983, 0.0001039160000000025, 0.00010467999999999589, 0.00010429199999999889, 0...</msg>
<status status="PASS" starttime="20201030 18:33:38.782" endtime="20201030 18:33:38.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:38.877" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 18:33:38.875" endtime="20201030 18:33:38.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:38.883" level="INFO">VALUE: [0.00010458299999999837, 0.0001041810000000018, 0.00010404099999999916, 0.00010330500000000492, 0.0001040689999999983, 0.0001039160000000025, 0.00010467999999999589, 0.00010429199999999889, 0.00010450000000000043, 0.0001041810000000018, 0.00010445800000000172, 0.00010426399999999975, 0.00010448700000000033, 0.00010425000000000018, 0.00010365200000000269, 0.00010466700000000273, 0.00010426399999999975, 0.00010447300000000076, 0.00010465300000000316, 0.00010455499999999923, 0.0001041810000000018, 0.00010411099999999701, 0.0001040559999999982, 0.00010475000000000068, 0.0001040689999999983, 0.00010294500000000012, 0.00010444400000000215, 0.00010294400000000065, 0.00010445900000000119, 0.00010292999999999414, 0.00010395900000000069, 0.00010438900000000334, 0.0001040559999999982, 0.00010417999999999539, 0.00010402799999999907, 0.00010426399999999975, 0.000104514, 0.00010437500000000377, 0.00010443100000000205, 0.00010454099999999966, 0.00010329199999999789, 0.0001045559999999987, 0.00010450000000000043, 0.00010416700000000223, 0.00010358300000000431, 0.00010480599999999896, 0.00010386099999999676, 0.00010462500000000402, 0.00010454199999999914, 0.0001040139999999995]</msg>
<status status="PASS" starttime="20201030 18:33:38.880" endtime="20201030 18:33:38.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.868" endtime="20201030 18:33:38.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:38.895" endtime="20201030 18:33:38.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.891" endtime="20201030 18:33:38.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.888" endtime="20201030 18:33:38.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.307" endtime="20201030 18:33:38.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.306" endtime="20201030 18:33:38.921"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:38.945" endtime="20201030 18:33:38.967"></status>
</kw>
<msg timestamp="20201030 18:33:38.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:38.940" endtime="20201030 18:33:38.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:38.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:38.971" endtime="20201030 18:33:38.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:38.977" endtime="20201030 18:33:38.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.933" endtime="20201030 18:33:38.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.927" endtime="20201030 18:33:38.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:39.001" endtime="20201030 18:33:39.360"></status>
</kw>
<msg timestamp="20201030 18:33:39.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041529722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041635514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:38.997" endtime="20201030 18:33:39.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:39.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041529722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041635514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:39.369" endtime="20201030 18:33:39.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:39.388" endtime="20201030 18:33:39.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.990" endtime="20201030 18:33:39.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.985" endtime="20201030 18:33:39.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:39.405" level="INFO">${RESULT} = [{'diff': 0.00010579200000000039}, {'diff': 0.00010531899999999955}, {'diff': 0.00010515299999999672}, {'diff': 0.00010573599999999517}, {'diff': 0.0001058610000000057}, {'diff': 0.0001048889999999969...</msg>
<status status="PASS" starttime="20201030 18:33:39.396" endtime="20201030 18:33:39.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:39.414" level="INFO">${ACCURACY} = {'diff': [0.00010579200000000039, 0.00010531899999999955, 0.00010515299999999672, 0.00010573599999999517, 0.0001058610000000057, 0.0001048889999999969, 0.00010534700000000563, 0.00010576300000000177, ...</msg>
<status status="PASS" starttime="20201030 18:33:39.407" endtime="20201030 18:33:39.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:39.425" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 18:33:39.423" endtime="20201030 18:33:39.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:39.432" level="INFO">VALUE: [0.00010579200000000039, 0.00010531899999999955, 0.00010515299999999672, 0.00010573599999999517, 0.0001058610000000057, 0.0001048889999999969, 0.00010534700000000563, 0.00010576300000000177, 0.00010509699999999844, 0.00010520900000000194, 0.00010487499999999733, 0.0001055689999999998, 0.00010559699999999894, 0.0001050559999999992, 0.00010413900000000309, 0.00010498600000000136, 0.000105514000000001, 0.00010526400000000075, 0.00010562499999999808, 0.00010529199999999989, 0.00010495900000000169, 0.00010518099999999586, 0.00010577800000000082, 0.00010542999999999664, 0.00010393000000000208, 0.00010540299999999697, 0.00010516700000000323, 0.00010525000000000118, 0.00010431900000000549, 0.00010550000000000143, 0.00010541699999999654, 0.00010544399999999621, 0.00010536099999999826, 0.00010552800000000057, 0.00010534699999999869, 0.00010519500000000237, 0.00010497300000000126, 0.00010575000000000168, 0.00010511099999999801, 0.00010544499999999568, 0.00010500000000000093, 0.0001052360000000016, 0.00010541700000000348, 0.00010547199999999535, 0.0001040139999999995, 0.00010418000000000233, 0.00010504199999999964, 0.00010494499999999518, 0.00010493000000000308, 0.00010426399999999975]</msg>
<status status="PASS" starttime="20201030 18:33:39.427" endtime="20201030 18:33:39.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.416" endtime="20201030 18:33:39.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:39.445" endtime="20201030 18:33:39.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.440" endtime="20201030 18:33:39.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.438" endtime="20201030 18:33:39.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.923" endtime="20201030 18:33:39.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:38.922" endtime="20201030 18:33:39.470"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:39.493" endtime="20201030 18:33:39.516"></status>
</kw>
<msg timestamp="20201030 18:33:39.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:39.490" endtime="20201030 18:33:39.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:39.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:39.519" endtime="20201030 18:33:39.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:39.525" endtime="20201030 18:33:39.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.482" endtime="20201030 18:33:39.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.476" endtime="20201030 18:33:39.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:39.549" endtime="20201030 18:33:39.905"></status>
</kw>
<msg timestamp="20201030 18:33:39.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040532611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040638597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:39.546" endtime="20201030 18:33:39.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:39.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040532611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040638597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:39.915" endtime="20201030 18:33:39.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:39.933" endtime="20201030 18:33:39.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.538" endtime="20201030 18:33:39.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.533" endtime="20201030 18:33:39.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:39.950" level="INFO">${RESULT} = [{'diff': 0.00010598599999999542}, {'diff': 0.00010687499999999933}, {'diff': 0.00010641700000000448}, {'diff': 0.000106514000000002}, {'diff': 0.00010619499999999643}, {'diff': 0.00010647199999999635...</msg>
<status status="PASS" starttime="20201030 18:33:39.942" endtime="20201030 18:33:39.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:39.961" level="INFO">${ACCURACY} = {'diff': [0.00010598599999999542, 0.00010687499999999933, 0.00010641700000000448, 0.000106514000000002, 0.00010619499999999643, 0.00010647199999999635, 0.00010615299999999772, 0.00010552800000000057, ...</msg>
<status status="PASS" starttime="20201030 18:33:39.953" endtime="20201030 18:33:39.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:39.975" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 18:33:39.972" endtime="20201030 18:33:39.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:39.983" level="INFO">VALUE: [0.00010598599999999542, 0.00010687499999999933, 0.00010641700000000448, 0.000106514000000002, 0.00010619499999999643, 0.00010647199999999635, 0.00010615299999999772, 0.00010552800000000057, 0.00010682000000000053, 0.0001060690000000003, 0.00010634699999999969, 0.00010618099999999686, 0.00010632000000000003, 0.00010641700000000448, 0.00010626400000000175, 0.00010633300000000012, 0.00010644399999999721, 0.00010526399999999381, 0.00010552800000000057, 0.0001062219999999961, 0.00010654099999999472, 0.00010640200000000544, 0.00010638799999999893, 0.00010636099999999926, 0.00010626400000000175, 0.0001060140000000015, 0.00010594399999999671, 0.00010654200000000114, 0.00010620799999999653, 0.00010622200000000304, 0.00010684700000000019, 0.00010598600000000236, 0.00010645799999999678, 0.00010683300000000062, 0.00010633300000000012, 0.0001062360000000026, 0.00010636199999999874, 0.00010600000000000193, 0.00010605500000000073, 0.00010652800000000157, 0.00010642999999999764, 0.00010680600000000096, 0.00010605500000000073, 0.00010631900000000055, 0.00010652799999999463, 0.00010643100000000405, 0.00010634699999999969, 0.00010536099999999826, 0.00010608399999999935, 0.00010677800000000182]</msg>
<status status="PASS" starttime="20201030 18:33:39.978" endtime="20201030 18:33:39.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.963" endtime="20201030 18:33:39.988"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:40.002" endtime="20201030 18:33:40.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.994" endtime="20201030 18:33:40.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.991" endtime="20201030 18:33:40.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.472" endtime="20201030 18:33:40.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:39.471" endtime="20201030 18:33:40.030"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.053" endtime="20201030 18:33:40.075"></status>
</kw>
<msg timestamp="20201030 18:33:40.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:40.050" endtime="20201030 18:33:40.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:40.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:40.078" endtime="20201030 18:33:40.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.084" endtime="20201030 18:33:40.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.043" endtime="20201030 18:33:40.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.037" endtime="20201030 18:33:40.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.108" endtime="20201030 18:33:40.458"></status>
</kw>
<msg timestamp="20201030 18:33:40.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042369806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042477611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:40.105" endtime="20201030 18:33:40.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:40.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042369806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042477611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:40.467" endtime="20201030 18:33:40.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.486" endtime="20201030 18:33:40.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.097" endtime="20201030 18:33:40.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.093" endtime="20201030 18:33:40.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:40.503" level="INFO">${RESULT} = [{'diff': 0.00010780499999999554}, {'diff': 0.00010636199999999874}, {'diff': 0.00010652800000000157}, {'diff': 0.00010741599999999907}, {'diff': 0.00010724999999999624}, {'diff': 0.000107819000000002...</msg>
<status status="PASS" starttime="20201030 18:33:40.494" endtime="20201030 18:33:40.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:40.514" level="INFO">${ACCURACY} = {'diff': [0.00010780499999999554, 0.00010636199999999874, 0.00010652800000000157, 0.00010741599999999907, 0.00010724999999999624, 0.00010781900000000205, 0.00010773599999999717, 0.0001068889999999989,...</msg>
<status status="PASS" starttime="20201030 18:33:40.505" endtime="20201030 18:33:40.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:40.525" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 18:33:40.523" endtime="20201030 18:33:40.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:40.530" level="INFO">VALUE: [0.00010780499999999554, 0.00010636199999999874, 0.00010652800000000157, 0.00010741599999999907, 0.00010724999999999624, 0.00010781900000000205, 0.00010773599999999717, 0.0001068889999999989, 0.00010749999999999649, 0.00010682000000000053, 0.00010705499999999479, 0.00010777700000000334, 0.00010748599999999692, 0.00010692999999999814, 0.00010762500000000008, 0.00010709700000000044, 0.00010743099999999811, 0.00010687499999999933, 0.00010737499999999983, 0.00010757000000000128, 0.00010737499999999983, 0.00010733300000000112, 0.0001066810000000043, 0.00010770799999999803, 0.00010617999999999739, 0.00010745800000000472, 0.00010786100000000076, 0.00010711100000000001, 0.00010733300000000112, 0.00010730500000000198, 0.00010709799999999992, 0.00010752699999999615, 0.00010705499999999479, 0.00010765299999999922, 0.0001073889999999994, 0.0001073889999999994, 0.00010770799999999803, 0.00010720800000000447, 0.00010597300000000226, 0.00010634699999999969, 0.00010762500000000008, 0.00010704100000000216, 0.0001070560000000012, 0.00010709700000000044, 0.00010720900000000394, 0.000107596999999994, 0.00010695799999999728, 0.00010727800000000232, 0.00010724999999999624, 0.00010723599999999667]</msg>
<status status="PASS" starttime="20201030 18:33:40.527" endtime="20201030 18:33:40.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.516" endtime="20201030 18:33:40.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:40.543" endtime="20201030 18:33:40.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.539" endtime="20201030 18:33:40.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.536" endtime="20201030 18:33:40.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.032" endtime="20201030 18:33:40.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.031" endtime="20201030 18:33:40.568"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.591" endtime="20201030 18:33:40.613"></status>
</kw>
<msg timestamp="20201030 18:33:40.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:40.588" endtime="20201030 18:33:40.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:40.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:40.616" endtime="20201030 18:33:40.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.623" endtime="20201030 18:33:40.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.581" endtime="20201030 18:33:40.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.575" endtime="20201030 18:33:40.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.648" endtime="20201030 18:33:41.000"></status>
</kw>
<msg timestamp="20201030 18:33:41.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040426944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040535653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:40.643" endtime="20201030 18:33:41.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:41.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040426944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040535653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:41.010" endtime="20201030 18:33:41.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:41.029" endtime="20201030 18:33:41.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.636" endtime="20201030 18:33:41.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.631" endtime="20201030 18:33:41.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:41.046" level="INFO">${RESULT} = [{'diff': 0.0001087089999999985}, {'diff': 0.0001078340000000011}, {'diff': 0.00010704200000000164}, {'diff': 0.00010863900000000065}, {'diff': 0.00010791699999999904}, {'diff': 0.00010812499999999364...</msg>
<status status="PASS" starttime="20201030 18:33:41.037" endtime="20201030 18:33:41.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:41.055" level="INFO">${ACCURACY} = {'diff': [0.0001087089999999985, 0.0001078340000000011, 0.00010704200000000164, 0.00010863900000000065, 0.00010791699999999904, 0.00010812499999999364, 0.0001083890000000004, 0.00010783300000000162, 0...</msg>
<status status="PASS" starttime="20201030 18:33:41.048" endtime="20201030 18:33:41.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:41.066" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 18:33:41.064" endtime="20201030 18:33:41.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:41.071" level="INFO">VALUE: [0.0001087089999999985, 0.0001078340000000011, 0.00010704200000000164, 0.00010863900000000065, 0.00010791699999999904, 0.00010812499999999364, 0.0001083890000000004, 0.00010783300000000162, 0.00010709799999999992, 0.00010873699999999764, 0.00010709799999999992, 0.00010830500000000298, 0.00010813900000000015, 0.00010797199999999785, 0.00010820799999999853, 0.0001088890000000009, 0.00010831999999999509, 0.00010822200000000504, 0.0001083890000000004, 0.00010830500000000298, 0.00010891700000000004, 0.00010883300000000262, 0.00010852800000000357, 0.00010811100000000101, 0.00010826400000000375, 0.000108596999999995, 0.00010820800000000547, 0.00010809700000000144, 0.00010859700000000194, 0.00010843099999999911, 0.00010815299999999972, 0.00010826400000000375, 0.00010805500000000273, 0.00010823599999999767, 0.00010794499999999818, 0.00010813899999999321, 0.00010787500000000033, 0.00010852800000000357, 0.0001085690000000028, 0.00010691700000000498, 0.0001082219999999981, 0.00010841600000000007, 0.00010849999999999749, 0.00010844499999999868, 0.00010757000000000128, 0.0001072219999999971, 0.00010837500000000083, 0.00010858300000000237, 0.00010816699999999929, 0.00010866600000000032]</msg>
<status status="PASS" starttime="20201030 18:33:41.068" endtime="20201030 18:33:41.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.057" endtime="20201030 18:33:41.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:41.084" endtime="20201030 18:33:41.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.080" endtime="20201030 18:33:41.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.077" endtime="20201030 18:33:41.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.570" endtime="20201030 18:33:41.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.569" endtime="20201030 18:33:41.110"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:41.134" endtime="20201030 18:33:41.156"></status>
</kw>
<msg timestamp="20201030 18:33:41.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:41.129" endtime="20201030 18:33:41.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:41.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:41.159" endtime="20201030 18:33:41.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:41.166" endtime="20201030 18:33:41.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.122" endtime="20201030 18:33:41.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.116" endtime="20201030 18:33:41.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:41.189" endtime="20201030 18:33:41.539"></status>
</kw>
<msg timestamp="20201030 18:33:41.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041995681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042105153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:41.186" endtime="20201030 18:33:41.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:41.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041995681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042105153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:41.548" endtime="20201030 18:33:41.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:41.567" endtime="20201030 18:33:41.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.179" endtime="20201030 18:33:41.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.174" endtime="20201030 18:33:41.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:41.584" level="INFO">${RESULT} = [{'diff': 0.00010947199999999935}, {'diff': 0.00010977799999999788}, {'diff': 0.00010961100000000251}, {'diff': 0.00010898600000000536}, {'diff': 0.00010886099999999482}, {'diff': 0.000109166000000000...</msg>
<status status="PASS" starttime="20201030 18:33:41.575" endtime="20201030 18:33:41.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:41.593" level="INFO">${ACCURACY} = {'diff': [0.00010947199999999935, 0.00010977799999999788, 0.00010961100000000251, 0.00010898600000000536, 0.00010886099999999482, 0.00010916600000000082, 0.00010808299999999493, 0.00010926399999999781...</msg>
<status status="PASS" starttime="20201030 18:33:41.586" endtime="20201030 18:33:41.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:41.604" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 18:33:41.602" endtime="20201030 18:33:41.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:41.610" level="INFO">VALUE: [0.00010947199999999935, 0.00010977799999999788, 0.00010961100000000251, 0.00010898600000000536, 0.00010886099999999482, 0.00010916600000000082, 0.00010808299999999493, 0.00010926399999999781, 0.00010915300000000072, 0.00010969400000000046, 0.00010887500000000133, 0.00010929199999999695, 0.0001090140000000045, 0.0001088890000000009, 0.00010912500000000158, 0.0001090419999999967, 0.00010887500000000133, 0.00010933300000000312, 0.00010886100000000176, 0.00010913900000000115, 0.00010906899999999636, 0.00010912500000000158, 0.00010941700000000054, 0.00010961099999999557, 0.00010858300000000237, 0.00010936099999999532, 0.00010904200000000364, 0.00010859700000000194, 0.00010873599999999817, 0.00010902800000000407, 0.00010891700000000004, 0.00010886100000000176, 0.00010852800000000357, 0.00010945799999999978, 0.0001090549999999968, 0.00010930599999999652, 0.00010954099999999772, 0.00010930500000000398, 0.00010924999999999824, 0.00010915300000000072, 0.00010916600000000082, 0.00010897299999999832, 0.00010930599999999652, 0.00010883300000000262, 0.00010916600000000082, 0.00010880500000000348, 0.00010944400000000021, 0.00010804200000000264, 0.00010970800000000003, 0.0001090560000000032]</msg>
<status status="PASS" starttime="20201030 18:33:41.607" endtime="20201030 18:33:41.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.595" endtime="20201030 18:33:41.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:41.624" endtime="20201030 18:33:41.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.618" endtime="20201030 18:33:41.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.615" endtime="20201030 18:33:41.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.112" endtime="20201030 18:33:41.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.111" endtime="20201030 18:33:41.649"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:41.672" endtime="20201030 18:33:41.694"></status>
</kw>
<msg timestamp="20201030 18:33:41.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:41.669" endtime="20201030 18:33:41.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:41.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:41.697" endtime="20201030 18:33:41.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:41.704" endtime="20201030 18:33:41.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.662" endtime="20201030 18:33:41.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.656" endtime="20201030 18:33:41.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:41.727" endtime="20201030 18:33:42.078"></status>
</kw>
<msg timestamp="20201030 18:33:42.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040531125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040641444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:41.724" endtime="20201030 18:33:42.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040531125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040641444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:42.087" endtime="20201030 18:33:42.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.106" endtime="20201030 18:33:42.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.717" endtime="20201030 18:33:42.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.712" endtime="20201030 18:33:42.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:42.123" level="INFO">${RESULT} = [{'diff': 0.00011031899999999761}, {'diff': 0.00011023599999999967}, {'diff': 0.00011019400000000096}, {'diff': 0.00010998600000000636}, {'diff': 0.00011054200000000514}, {'diff': 0.000110153000000001...</msg>
<status status="PASS" starttime="20201030 18:33:42.115" endtime="20201030 18:33:42.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:42.134" level="INFO">${ACCURACY} = {'diff': [0.00011031899999999761, 0.00011023599999999967, 0.00011019400000000096, 0.00010998600000000636, 0.00011054200000000514, 0.00011015300000000172, 0.0001103619999999958, 0.00011004200000000464,...</msg>
<status status="PASS" starttime="20201030 18:33:42.126" endtime="20201030 18:33:42.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.145" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 18:33:42.143" endtime="20201030 18:33:42.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.151" level="INFO">VALUE: [0.00011031899999999761, 0.00011023599999999967, 0.00011019400000000096, 0.00010998600000000636, 0.00011054200000000514, 0.00011015300000000172, 0.0001103619999999958, 0.00011004200000000464, 0.00011066599999999538, 0.00011076299999999983, 0.00011029100000000541, 0.00011058299999999743, 0.00010887500000000133, 0.00010987499999999539, 0.00010991600000000157, 0.00011019400000000096, 0.00011061099999999657, 0.00011032000000000403, 0.00011016600000000182, 0.00011034800000000317, 0.00011049999999999949, 0.00011076400000000625, 0.00010913900000000115, 0.00011024999999999924, 0.0001107220000000006, 0.00010891600000000057, 0.00011037500000000283, 0.00010979199999999745, 0.00011001399999999856, 0.00011033299999999718, 0.00011044499999999374, 0.00010937499999999489, 0.00010908299999999593, 0.00011026399999999881, 0.00011037500000000283, 0.0001097219999999996, 0.0001100419999999977, 0.00010994500000000018, 0.00011002799999999813, 0.00011041600000000207, 0.00010893000000000014, 0.00011001399999999856, 0.00011030499999999804, 0.00011066700000000179, 0.00010993000000000114, 0.00010920900000000594, 0.00011047200000000035, 0.00011036099999999632, 0.00011019400000000096, 0.00010962500000000208]</msg>
<status status="PASS" starttime="20201030 18:33:42.148" endtime="20201030 18:33:42.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.136" endtime="20201030 18:33:42.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:42.163" endtime="20201030 18:33:42.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.159" endtime="20201030 18:33:42.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.156" endtime="20201030 18:33:42.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.652" endtime="20201030 18:33:42.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:41.650" endtime="20201030 18:33:42.189"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.212" endtime="20201030 18:33:42.233"></status>
</kw>
<msg timestamp="20201030 18:33:42.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:42.208" endtime="20201030 18:33:42.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:42.237" endtime="20201030 18:33:42.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.243" endtime="20201030 18:33:42.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.201" endtime="20201030 18:33:42.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.195" endtime="20201030 18:33:42.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.267" endtime="20201030 18:33:42.616"></status>
</kw>
<msg timestamp="20201030 18:33:42.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040309153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040420833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:42.263" endtime="20201030 18:33:42.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040309153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040420833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:42.626" endtime="20201030 18:33:42.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.644" endtime="20201030 18:33:42.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.256" endtime="20201030 18:33:42.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.251" endtime="20201030 18:33:42.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:42.662" level="INFO">${RESULT} = [{'diff': 0.00011168000000000289}, {'diff': 0.00011099999999999999}, {'diff': 0.00011111100000000401}, {'diff': 0.00011094400000000171}, {'diff': 0.00011061099999999657}, {'diff': 0.000111167000000002...</msg>
<status status="PASS" starttime="20201030 18:33:42.653" endtime="20201030 18:33:42.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:42.673" level="INFO">${ACCURACY} = {'diff': [0.00011168000000000289, 0.00011099999999999999, 0.00011111100000000401, 0.00011094400000000171, 0.00011061099999999657, 0.00011116700000000229, 0.0001117220000000016, 0.00011158299999999843,...</msg>
<status status="PASS" starttime="20201030 18:33:42.664" endtime="20201030 18:33:42.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.684" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 18:33:42.682" endtime="20201030 18:33:42.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.690" level="INFO">VALUE: [0.00011168000000000289, 0.00011099999999999999, 0.00011111100000000401, 0.00011094400000000171, 0.00011061099999999657, 0.00011116700000000229, 0.0001117220000000016, 0.00011158299999999843, 0.00010994500000000018, 0.00011094400000000171, 0.00011130600000000546, 0.0001117220000000016, 0.00011170799999999509, 0.00011081999999999759, 0.00011075000000000668, 0.00011152700000000015, 0.00011150000000000049, 0.00011172199999999466, 0.00011044400000000121, 0.00010991600000000157, 0.00011133299999999818, 0.00011144500000000168, 0.00011116599999999588, 0.00011108299999999793, 0.00011087500000000333, 0.0001117220000000016, 0.0001110560000000052, 0.00011177799999999988, 0.00011166699999999585, 0.00011179099999999997, 0.00011140300000000297, 0.00011147200000000135, 0.00011145900000000125, 0.00011154100000000666, 0.00011147200000000135, 0.00011169400000000246, 0.00011161099999999757, 0.00011154099999999972, 0.0001100969999999965, 0.00011091700000000204, 0.00011147199999999441, 0.0001117220000000016, 0.00011077799999999888, 0.00011116600000000282, 0.00011126399999999981, 0.00011170800000000203, 0.00011088899999999596, 0.00011152799999999963, 0.00011137499999999689, 0.00011180499999999954]</msg>
<status status="PASS" starttime="20201030 18:33:42.687" endtime="20201030 18:33:42.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.675" endtime="20201030 18:33:42.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:42.703" endtime="20201030 18:33:42.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.698" endtime="20201030 18:33:42.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.695" endtime="20201030 18:33:42.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.191" endtime="20201030 18:33:42.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.190" endtime="20201030 18:33:42.728"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.751" endtime="20201030 18:33:42.773"></status>
</kw>
<msg timestamp="20201030 18:33:42.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:42.747" endtime="20201030 18:33:42.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:42.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:42.776" endtime="20201030 18:33:42.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.782" endtime="20201030 18:33:42.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.740" endtime="20201030 18:33:42.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.734" endtime="20201030 18:33:42.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:42.806" endtime="20201030 18:33:43.159"></status>
</kw>
<msg timestamp="20201030 18:33:43.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04034625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040457208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:42.803" endtime="20201030 18:33:43.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:43.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04034625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040457208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:43.169" endtime="20201030 18:33:43.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:43.187" endtime="20201030 18:33:43.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.795" endtime="20201030 18:33:43.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.790" endtime="20201030 18:33:43.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:43.205" level="INFO">${RESULT} = [{'diff': 0.00011095800000000128}, {'diff': 0.00011266700000000379}, {'diff': 0.00011252800000000063}, {'diff': 0.00011202800000000013}, {'diff': 0.00011193100000000261}, {'diff': 0.000112291999999999...</msg>
<status status="PASS" starttime="20201030 18:33:43.196" endtime="20201030 18:33:43.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:43.214" level="INFO">${ACCURACY} = {'diff': [0.00011095800000000128, 0.00011266700000000379, 0.00011252800000000063, 0.00011202800000000013, 0.00011193100000000261, 0.00011229199999999995, 0.00011197200000000185, 0.00011244400000000321...</msg>
<status status="PASS" starttime="20201030 18:33:43.207" endtime="20201030 18:33:43.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:43.225" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 18:33:43.223" endtime="20201030 18:33:43.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:43.232" level="INFO">VALUE: [0.00011095800000000128, 0.00011266700000000379, 0.00011252800000000063, 0.00011202800000000013, 0.00011193100000000261, 0.00011229199999999995, 0.00011197200000000185, 0.00011244400000000321, 0.00011094500000000118, 0.00011220799999999559, 0.00011272300000000207, 0.00011173600000000117, 0.00011226400000000081, 0.00011180499999999954, 0.00011208399999999841, 0.00011201400000000056, 0.00011208400000000535, 0.00011238899999999746, 0.00011254100000000072, 0.00011251300000000158, 0.00011112499999999664, 0.00011184699999999825, 0.00011248600000000192, 0.00011231899999999961, 0.00011118099999999492, 0.00011269400000000346, 0.00011250000000000149, 0.00011169400000000246, 0.00011240300000000397, 0.00011201400000000056, 0.00011140300000000297, 0.00011184699999999825, 0.00011251400000000106, 0.00011252800000000063, 0.00011234699999999875, 0.00011137499999999689, 0.00011200000000000099, 0.00011180499999999954, 0.00011234699999999875, 0.00011152799999999963, 0.00011113799999999674, 0.0001120419999999997, 0.00011195799999999534, 0.00011206999999999884, 0.00011218000000000339, 0.00011275000000000174, 0.0001114169999999956, 0.00011223600000000167, 0.00011226400000000081, 0.00011220800000000253]</msg>
<status status="PASS" starttime="20201030 18:33:43.227" endtime="20201030 18:33:43.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.216" endtime="20201030 18:33:43.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:43.255" endtime="20201030 18:33:43.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.250" endtime="20201030 18:33:43.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.246" endtime="20201030 18:33:43.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.730" endtime="20201030 18:33:43.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:42.729" endtime="20201030 18:33:43.284"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:43.309" endtime="20201030 18:33:43.331"></status>
</kw>
<msg timestamp="20201030 18:33:43.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:43.304" endtime="20201030 18:33:43.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:43.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:43.335" endtime="20201030 18:33:43.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:43.341" endtime="20201030 18:33:43.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.297" endtime="20201030 18:33:43.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.291" endtime="20201030 18:33:43.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:43.365" endtime="20201030 18:33:43.713"></status>
</kw>
<msg timestamp="20201030 18:33:43.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043891792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044005153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:43.361" endtime="20201030 18:33:43.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:43.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043891792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044005153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:43.723" endtime="20201030 18:33:43.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:43.741" endtime="20201030 18:33:43.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.354" endtime="20201030 18:33:43.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.349" endtime="20201030 18:33:43.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:43.759" level="INFO">${RESULT} = [{'diff': 0.00011336099999999932}, {'diff': 0.00011379200000000145}, {'diff': 0.00011355600000000077}, {'diff': 0.00011329200000000095}, {'diff': 0.00011208299999999893}, {'diff': 0.000112777000000001...</msg>
<status status="PASS" starttime="20201030 18:33:43.750" endtime="20201030 18:33:43.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:43.768" level="INFO">${ACCURACY} = {'diff': [0.00011336099999999932, 0.00011379200000000145, 0.00011355600000000077, 0.00011329200000000095, 0.00011208299999999893, 0.0001127770000000014, 0.00011230500000000004, 0.00011272199999999566,...</msg>
<status status="PASS" starttime="20201030 18:33:43.761" endtime="20201030 18:33:43.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:43.779" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 18:33:43.777" endtime="20201030 18:33:43.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:43.784" level="INFO">VALUE: [0.00011336099999999932, 0.00011379200000000145, 0.00011355600000000077, 0.00011329200000000095, 0.00011208299999999893, 0.0001127770000000014, 0.00011230500000000004, 0.00011272199999999566, 0.00011318099999999692, 0.00011297300000000232, 0.00011377699999999547, 0.00011333300000000018, 0.00011290300000000447, 0.00011367999999999795, 0.00011290199999999806, 0.00011344500000000368, 0.0001130969999999995, 0.0001134169999999976, 0.00011345799999999684, 0.00011315200000000525, 0.000112596999999999, 0.00011315300000000472, 0.00011308299999999993, 0.00011223600000000167, 0.00011356900000000086, 0.00011297199999999591, 0.0001133340000000066, 0.00011345799999999684, 0.00011329200000000095, 0.00011320800000000353, 0.00011330600000000052, 0.00011277800000000088, 0.00011362499999999914, 0.00011351300000000258, 0.00011372199999999666, 0.00011338799999999899, 0.00011344399999999727, 0.00011369400000000446, 0.00011319400000000396, 0.00011344399999999727, 0.00011366599999999838, 0.00011318099999999692, 0.00011241700000000354, 0.00011323600000000267, 0.00011304100000000122, 0.00011323600000000267, 0.00011347199999999641, 0.0001134299999999977, 0.0001133749999999989, 0.00011369499999999699]</msg>
<status status="PASS" starttime="20201030 18:33:43.781" endtime="20201030 18:33:43.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.770" endtime="20201030 18:33:43.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:43.802" endtime="20201030 18:33:43.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.793" endtime="20201030 18:33:43.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.790" endtime="20201030 18:33:43.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.286" endtime="20201030 18:33:43.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.285" endtime="20201030 18:33:43.829"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:43.852" endtime="20201030 18:33:43.874"></status>
</kw>
<msg timestamp="20201030 18:33:43.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:43.848" endtime="20201030 18:33:43.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:43.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:43.878" endtime="20201030 18:33:43.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:43.884" endtime="20201030 18:33:43.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.841" endtime="20201030 18:33:43.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.835" endtime="20201030 18:33:43.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:43.908" endtime="20201030 18:33:44.257"></status>
</kw>
<msg timestamp="20201030 18:33:44.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041452819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041567306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:43.905" endtime="20201030 18:33:44.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:44.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041452819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041567306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:44.267" endtime="20201030 18:33:44.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.285" endtime="20201030 18:33:44.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.898" endtime="20201030 18:33:44.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.893" endtime="20201030 18:33:44.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:44.303" level="INFO">${RESULT} = [{'diff': 0.00011448699999999645}, {'diff': 0.00011470799999999809}, {'diff': 0.00011397199999999691}, {'diff': 0.00011383300000000068}, {'diff': 0.0001147499999999968}, {'diff': 0.0001143329999999942...</msg>
<status status="PASS" starttime="20201030 18:33:44.294" endtime="20201030 18:33:44.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:44.313" level="INFO">${ACCURACY} = {'diff': [0.00011448699999999645, 0.00011470799999999809, 0.00011397199999999691, 0.00011383300000000068, 0.0001147499999999968, 0.00011433299999999424, 0.00011429100000000247, 0.0001147220000000046, ...</msg>
<status status="PASS" starttime="20201030 18:33:44.305" endtime="20201030 18:33:44.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:44.324" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 18:33:44.322" endtime="20201030 18:33:44.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:44.330" level="INFO">VALUE: [0.00011448699999999645, 0.00011470799999999809, 0.00011397199999999691, 0.00011383300000000068, 0.0001147499999999968, 0.00011433299999999424, 0.00011429100000000247, 0.0001147220000000046, 0.00011400000000000299, 0.00011480500000000254, 0.00011455600000000177, 0.00011427799999999544, 0.00011327800000000138, 0.000113597, 0.0001144299999999987, 0.00011413899999999921, 0.00011465299999999928, 0.00011444499999999774, 0.00011416699999999835, 0.00011483300000000168, 0.00011344500000000368, 0.0001142369999999962, 0.00011451399999999612, 0.00011411100000000007, 0.00011329200000000095, 0.00011459800000000048, 0.00011344399999999727, 0.0001144169999999986, 0.00011434800000000023, 0.00011436100000000032, 0.00011386099999999982, 0.00011384700000000025, 0.00011390299999999853, 0.00011313899999999821, 0.00011405600000000127, 0.00011388899999999896, 0.00011427800000000238, 0.00011386099999999982, 0.00011438899999999946, 0.00011473599999999723, 0.00011395899999999681, 0.00011466699999999885, 0.00011479200000000245, 0.00011444399999999827, 0.00011388799999999949, 0.00011457000000000134, 0.0001144299999999987, 0.00011398600000000342, 0.00011455599999999483, 0.00011398600000000342]</msg>
<status status="PASS" starttime="20201030 18:33:44.327" endtime="20201030 18:33:44.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.315" endtime="20201030 18:33:44.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:44.343" endtime="20201030 18:33:44.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.338" endtime="20201030 18:33:44.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.335" endtime="20201030 18:33:44.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.831" endtime="20201030 18:33:44.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:43.829" endtime="20201030 18:33:44.368"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.391" endtime="20201030 18:33:44.413"></status>
</kw>
<msg timestamp="20201030 18:33:44.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:44.388" endtime="20201030 18:33:44.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:44.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:44.416" endtime="20201030 18:33:44.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.423" endtime="20201030 18:33:44.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.380" endtime="20201030 18:33:44.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.374" endtime="20201030 18:33:44.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.446" endtime="20201030 18:33:44.795"></status>
</kw>
<msg timestamp="20201030 18:33:44.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040398931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040514333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:44.443" endtime="20201030 18:33:44.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:44.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040398931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040514333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:44.805" endtime="20201030 18:33:44.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.823" endtime="20201030 18:33:44.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.436" endtime="20201030 18:33:44.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.431" endtime="20201030 18:33:44.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:44.841" level="INFO">${RESULT} = [{'diff': 0.00011540200000000056}, {'diff': 0.00011427799999999544}, {'diff': 0.0001157369999999977}, {'diff': 0.00011509699999999456}, {'diff': 0.0001153750000000009}, {'diff': 0.0001148750000000004}...</msg>
<status status="PASS" starttime="20201030 18:33:44.832" endtime="20201030 18:33:44.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:44.852" level="INFO">${ACCURACY} = {'diff': [0.00011540200000000056, 0.00011427799999999544, 0.0001157369999999977, 0.00011509699999999456, 0.0001153750000000009, 0.0001148750000000004, 0.00011531900000000261, 0.00011518099999999892, 0...</msg>
<status status="PASS" starttime="20201030 18:33:44.843" endtime="20201030 18:33:44.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:44.863" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 18:33:44.861" endtime="20201030 18:33:44.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:44.868" level="INFO">VALUE: [0.00011540200000000056, 0.00011427799999999544, 0.0001157369999999977, 0.00011509699999999456, 0.0001153750000000009, 0.0001148750000000004, 0.00011531900000000261, 0.00011518099999999892, 0.00011536099999999438, 0.00011569399999999952, 0.00011526399999999687, 0.00011526399999999687, 0.0001152499999999973, 0.00011490299999999953, 0.00011543099999999917, 0.00011486100000000082, 0.00011511100000000107, 0.00011497200000000485, 0.00011451400000000306, 0.00011562500000000114, 0.00011479199999999551, 0.00011523600000000467, 0.0001156249999999942, 0.00011433400000000066, 0.00011526399999999687, 0.00011494399999999877, 0.0001150970000000015, 0.00011556900000000286, 0.0001149299999999992, 0.00011413899999999921, 0.00011466699999999885, 0.0001155420000000032, 0.00011495800000000528, 0.00011494500000000518, 0.00011502800000000313, 0.00011520899999999806, 0.000115209000000005, 0.0001148750000000004, 0.00011515300000000672, 0.00011570800000000603, 0.00011573599999999823, 0.00011561100000000157, 0.0001142369999999962, 0.00011540200000000056, 0.00011544399999999927, 0.0001157499999999978, 0.00011483300000000168, 0.00011552800000000363, 0.00011538900000000046, 0.0001150420000000027]</msg>
<status status="PASS" starttime="20201030 18:33:44.865" endtime="20201030 18:33:44.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.854" endtime="20201030 18:33:44.872"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:44.881" endtime="20201030 18:33:44.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.876" endtime="20201030 18:33:44.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.874" endtime="20201030 18:33:44.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.370" endtime="20201030 18:33:44.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.369" endtime="20201030 18:33:44.907"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.931" endtime="20201030 18:33:44.953"></status>
</kw>
<msg timestamp="20201030 18:33:44.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:44.927" endtime="20201030 18:33:44.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:44.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:44.956" endtime="20201030 18:33:44.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.963" endtime="20201030 18:33:44.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.920" endtime="20201030 18:33:44.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.914" endtime="20201030 18:33:44.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.987" endtime="20201030 18:33:45.340"></status>
</kw>
<msg timestamp="20201030 18:33:45.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041617028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041733306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:44.983" endtime="20201030 18:33:45.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:45.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041617028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041733306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:45.350" endtime="20201030 18:33:45.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:45.369" endtime="20201030 18:33:45.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.976" endtime="20201030 18:33:45.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.971" endtime="20201030 18:33:45.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:45.386" level="INFO">${RESULT} = [{'diff': 0.00011627799999999744}, {'diff': 0.00011530600000000252}, {'diff': 0.00011618099999999992}, {'diff': 0.00011648599999999898}, {'diff': 0.00011590300000000053}, {'diff': 0.000116471999999999...</msg>
<status status="PASS" starttime="20201030 18:33:45.377" endtime="20201030 18:33:45.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:45.395" level="INFO">${ACCURACY} = {'diff': [0.00011627799999999744, 0.00011530600000000252, 0.00011618099999999992, 0.00011648599999999898, 0.00011590300000000053, 0.00011647199999999941, 0.00011634800000000223, 0.00011652800000000463...</msg>
<status status="PASS" starttime="20201030 18:33:45.388" endtime="20201030 18:33:45.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:45.406" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 18:33:45.404" endtime="20201030 18:33:45.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:45.412" level="INFO">VALUE: [0.00011627799999999744, 0.00011530600000000252, 0.00011618099999999992, 0.00011648599999999898, 0.00011590300000000053, 0.00011647199999999941, 0.00011634800000000223, 0.00011652800000000463, 0.00011658400000000291, 0.00011597299999999838, 0.00011637499999999495, 0.00011672299999999913, 0.00011638899999999452, 0.00011679199999999751, 0.00011630600000000352, 0.00011593099999999967, 0.00011626400000000481, 0.00011675000000000574, 0.00011534699999999481, 0.0001163750000000019, 0.00011600000000000499, 0.00011509699999999456, 0.00011676399999999837, 0.00011601300000000508, 0.00011612500000000164, 0.00011638900000000146, 0.0001164300000000007, 0.00011616600000000088, 0.00011665200000000181, 0.00011593099999999967, 0.00011649999999999855, 0.00011629199999999701, 0.00011620799999999959, 0.00011649999999999855, 0.00011656899999999693, 0.00011529200000000295, 0.00011611100000000207, 0.00011641699999999366, 0.00011672199999999966, 0.00011601399999999762, 0.00011583300000000268, 0.00011588900000000096, 0.00011618099999999992, 0.00011508300000000193, 0.00011623599999999873, 0.00011600000000000499, 0.00011656900000000386, 0.00011588900000000096, 0.0001158750000000014, 0.00011659799999999554]</msg>
<status status="PASS" starttime="20201030 18:33:45.409" endtime="20201030 18:33:45.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.397" endtime="20201030 18:33:45.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:45.424" endtime="20201030 18:33:45.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.420" endtime="20201030 18:33:45.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.417" endtime="20201030 18:33:45.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.909" endtime="20201030 18:33:45.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.908" endtime="20201030 18:33:45.450"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:45.473" endtime="20201030 18:33:45.496"></status>
</kw>
<msg timestamp="20201030 18:33:45.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:45.469" endtime="20201030 18:33:45.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:45.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:45.500" endtime="20201030 18:33:45.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:45.506" endtime="20201030 18:33:45.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.462" endtime="20201030 18:33:45.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.456" endtime="20201030 18:33:45.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:45.530" endtime="20201030 18:33:45.880"></status>
</kw>
<msg timestamp="20201030 18:33:45.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041976625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042094083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:45.526" endtime="20201030 18:33:45.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:45.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041976625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042094083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:45.891" endtime="20201030 18:33:45.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:45.910" endtime="20201030 18:33:45.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.519" endtime="20201030 18:33:45.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.514" endtime="20201030 18:33:45.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:45.928" level="INFO">${RESULT} = [{'diff': 0.00011745800000000084}, {'diff': 0.00011733300000000418}, {'diff': 0.00011730500000000504}, {'diff': 0.00011733400000000366}, {'diff': 0.00011759799999999654}, {'diff': 0.000117749999999999...</msg>
<status status="PASS" starttime="20201030 18:33:45.919" endtime="20201030 18:33:45.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:45.938" level="INFO">${ACCURACY} = {'diff': [0.00011745800000000084, 0.00011733300000000418, 0.00011730500000000504, 0.00011733400000000366, 0.00011759799999999654, 0.0001177499999999998, 0.00011633299999999624, 0.00011745800000000084,...</msg>
<status status="PASS" starttime="20201030 18:33:45.930" endtime="20201030 18:33:45.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:45.949" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 18:33:45.947" endtime="20201030 18:33:45.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:45.955" level="INFO">VALUE: [0.00011745800000000084, 0.00011733300000000418, 0.00011730500000000504, 0.00011733400000000366, 0.00011759799999999654, 0.0001177499999999998, 0.00011633299999999624, 0.00011745800000000084, 0.00011741599999999519, 0.00011761099999999663, 0.00011679200000000445, 0.00011770799999999415, 0.00011755499999999836, 0.00011633300000000318, 0.00011741600000000213, 0.0001178049999999986, 0.00011698599999999948, 0.00011669499999999999, 0.00011733299999999725, 0.00011636100000000232, 0.00011715200000000231, 0.0001177629999999999, 0.00011726399999999887, 0.00011705599999999733, 0.00011722200000000016, 0.00011697300000000632, 0.00011768000000000195, 0.00011755600000000477, 0.00011729199999999801, 0.0001177499999999998, 0.00011777799999999894, 0.00011763900000000271, 0.00011597199999999891, 0.00011620799999999959, 0.00011701399999999862, 0.0001172499999999993, 0.0001172499999999993, 0.00011711100000000307, 0.00011706899999999743, 0.00011688900000000196, 0.00011641600000000113, 0.00011718100000000092, 0.0001170550000000048, 0.00011733299999999725, 0.0001177499999999998, 0.00011762500000000314, 0.00011718099999999398, 0.00011747299999999988, 0.00011708400000000341, 0.00011743100000000117]</msg>
<status status="PASS" starttime="20201030 18:33:45.952" endtime="20201030 18:33:45.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.940" endtime="20201030 18:33:45.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:45.969" endtime="20201030 18:33:45.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.963" endtime="20201030 18:33:45.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.960" endtime="20201030 18:33:45.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.452" endtime="20201030 18:33:45.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.451" endtime="20201030 18:33:45.994"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:46.017" endtime="20201030 18:33:46.040"></status>
</kw>
<msg timestamp="20201030 18:33:46.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:46.014" endtime="20201030 18:33:46.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:46.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:46.043" endtime="20201030 18:33:46.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:46.049" endtime="20201030 18:33:46.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.007" endtime="20201030 18:33:46.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.001" endtime="20201030 18:33:46.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:46.073" endtime="20201030 18:33:46.426"></status>
</kw>
<msg timestamp="20201030 18:33:46.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040724611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040842639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:46.070" endtime="20201030 18:33:46.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:46.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040724611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040842639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:46.435" endtime="20201030 18:33:46.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:46.454" endtime="20201030 18:33:46.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.063" endtime="20201030 18:33:46.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.058" endtime="20201030 18:33:46.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:46.471" level="INFO">${RESULT} = [{'diff': 0.00011802799999999919}, {'diff': 0.00011847200000000141}, {'diff': 0.0001182500000000003}, {'diff': 0.00011815199999999637}, {'diff': 0.00011838899999999652}, {'diff': 0.0001175969999999970...</msg>
<status status="PASS" starttime="20201030 18:33:46.463" endtime="20201030 18:33:46.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:46.482" level="INFO">${ACCURACY} = {'diff': [0.00011802799999999919, 0.00011847200000000141, 0.0001182500000000003, 0.00011815199999999637, 0.00011838899999999652, 0.00011759699999999706, 0.00011880600000000602, 0.00011870800000000209,...</msg>
<status status="PASS" starttime="20201030 18:33:46.474" endtime="20201030 18:33:46.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:46.494" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 18:33:46.492" endtime="20201030 18:33:46.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:46.500" level="INFO">VALUE: [0.00011802799999999919, 0.00011847200000000141, 0.0001182500000000003, 0.00011815199999999637, 0.00011838899999999652, 0.00011759699999999706, 0.00011880600000000602, 0.00011870800000000209, 0.00011861100000000457, 0.00011848600000000098, 0.00011813900000000321, 0.00011858399999999797, 0.00011822200000000116, 0.00011876400000000037, 0.00011737499999999595, 0.000118597000000005, 0.00011791599999999569, 0.0001179029999999956, 0.00011827799999999944, 0.0001183049999999991, 0.00011863899999999677, 0.00011879100000000004, 0.0001189029999999966, 0.00011877799999999994, 0.00011822300000000063, 0.00011859800000000448, 0.00011758300000000443, 0.00011844400000000227, 0.00011798599999999354, 0.00011850000000000055, 0.00011845800000000184, 0.00011748699999999945, 0.00011859699999999807, 0.0001189029999999966, 0.00011855499999999936, 0.00011820800000000159, 0.00011850000000000055, 0.00011841600000000313, 0.00011791600000000263, 0.00011730500000000504, 0.00011866700000000285, 0.00011848600000000098, 0.00011798600000000048, 0.00011844400000000227, 0.00011834699999999782, 0.00011868100000000242, 0.00011837499999999695, 0.00011804199999999876, 0.00011733300000000418, 0.00011815300000000278]</msg>
<status status="PASS" starttime="20201030 18:33:46.497" endtime="20201030 18:33:46.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.485" endtime="20201030 18:33:46.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:46.513" endtime="20201030 18:33:46.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.508" endtime="20201030 18:33:46.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.505" endtime="20201030 18:33:46.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.996" endtime="20201030 18:33:46.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:45.995" endtime="20201030 18:33:46.538"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:46.561" endtime="20201030 18:33:46.583"></status>
</kw>
<msg timestamp="20201030 18:33:46.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:46.557" endtime="20201030 18:33:46.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:46.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:46.586" endtime="20201030 18:33:46.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:46.593" endtime="20201030 18:33:46.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.550" endtime="20201030 18:33:46.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.544" endtime="20201030 18:33:46.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:46.616" endtime="20201030 18:33:46.970"></status>
</kw>
<msg timestamp="20201030 18:33:46.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040354153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040473597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:46.613" endtime="20201030 18:33:46.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:46.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040354153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040473597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:46.980" endtime="20201030 18:33:46.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:46.998" endtime="20201030 18:33:47.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.606" endtime="20201030 18:33:47.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.601" endtime="20201030 18:33:47.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:47.016" level="INFO">${RESULT} = [{'diff': 0.00011944400000000327}, {'diff': 0.00011933299999999925}, {'diff': 0.00011900000000000105}, {'diff': 0.00011927700000000097}, {'diff': 0.00011900000000000105}, {'diff': 0.000119193999999996...</msg>
<status status="PASS" starttime="20201030 18:33:47.007" endtime="20201030 18:33:47.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:47.027" level="INFO">${ACCURACY} = {'diff': [0.00011944400000000327, 0.00011933299999999925, 0.00011900000000000105, 0.00011927700000000097, 0.00011900000000000105, 0.00011919399999999608, 0.00011886100000000482, 0.00011979200000000051...</msg>
<status status="PASS" starttime="20201030 18:33:47.018" endtime="20201030 18:33:47.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:47.038" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 18:33:47.036" endtime="20201030 18:33:47.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:47.044" level="INFO">VALUE: [0.00011944400000000327, 0.00011933299999999925, 0.00011900000000000105, 0.00011927700000000097, 0.00011900000000000105, 0.00011919399999999608, 0.00011886100000000482, 0.00011979200000000051, 0.0001193050000000001, 0.0001192229999999947, 0.00011922200000000216, 0.00011956899999999993, 0.00011976400000000137, 0.0001191249999999977, 0.00011931899999999968, 0.00011941600000000413, 0.00011852799999999969, 0.00011933299999999925, 0.0001192500000000013, 0.00011947200000000241, 0.0001196249999999982, 0.00011894400000000277, 0.00011937499999999795, 0.00011838899999999652, 0.00011913899999999727, 0.00011908399999999847, 0.0001189170000000031, 0.00011938899999999752, 0.000118082999999998, 0.00011851400000000012, 0.00011851300000000065, 0.00011851400000000012, 0.00011906899999999943, 0.0001191249999999977, 0.00011888900000000396, 0.0001191249999999977, 0.00011963899999999777, 0.00011922200000000216, 0.00011969499999999605, 0.00011980600000000008, 0.00011943099999999623, 0.0001191950000000025, 0.00011897199999999497, 0.00011938900000000446, 0.00011963899999999777, 0.00011972200000000266, 0.00011902699999999378, 0.00011958300000000643, 0.00011801399999999962, 0.00011923600000000173]</msg>
<status status="PASS" starttime="20201030 18:33:47.041" endtime="20201030 18:33:47.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.029" endtime="20201030 18:33:47.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:47.057" endtime="20201030 18:33:47.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.052" endtime="20201030 18:33:47.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.050" endtime="20201030 18:33:47.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.540" endtime="20201030 18:33:47.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:46.539" endtime="20201030 18:33:47.082"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:47.106" endtime="20201030 18:33:47.131"></status>
</kw>
<msg timestamp="20201030 18:33:47.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:47.103" endtime="20201030 18:33:47.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:47.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:47.137" endtime="20201030 18:33:47.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:47.146" endtime="20201030 18:33:47.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.096" endtime="20201030 18:33:47.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.090" endtime="20201030 18:33:47.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:47.179" endtime="20201030 18:33:47.534"></status>
</kw>
<msg timestamp="20201030 18:33:47.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041592528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041712806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:47.175" endtime="20201030 18:33:47.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:47.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041592528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041712806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:47.543" endtime="20201030 18:33:47.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:47.561" endtime="20201030 18:33:47.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.166" endtime="20201030 18:33:47.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.159" endtime="20201030 18:33:47.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:47.578" level="INFO">${RESULT} = [{'diff': 0.00012027800000000144}, {'diff': 0.00012043099999999723}, {'diff': 0.00012036099999999939}, {'diff': 0.00012069400000000452}, {'diff': 0.00012019399999999708}, {'diff': 0.000120249999999995...</msg>
<status status="PASS" starttime="20201030 18:33:47.569" endtime="20201030 18:33:47.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:47.587" level="INFO">${ACCURACY} = {'diff': [0.00012027800000000144, 0.00012043099999999723, 0.00012036099999999939, 0.00012069400000000452, 0.00012019399999999708, 0.00012024999999999536, 0.0001201249999999987, 0.00012004100000000129,...</msg>
<status status="PASS" starttime="20201030 18:33:47.580" endtime="20201030 18:33:47.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:47.598" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 18:33:47.595" endtime="20201030 18:33:47.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:47.603" level="INFO">VALUE: [0.00012027800000000144, 0.00012043099999999723, 0.00012036099999999939, 0.00012069400000000452, 0.00012019399999999708, 0.00012024999999999536, 0.0001201249999999987, 0.00012004100000000129, 0.00012068099999999748, 0.00011972200000000266, 0.00012026400000000187, 0.00012023599999999579, 0.00012038899999999852, 0.000120083, 0.00012018099999999698, 0.00012054200000000126, 0.00011997200000000291, 0.00012051399999999518, 0.00012004200000000076, 0.00012065300000000528, 0.00012048600000000298, 0.00012055500000000136, 0.00012079100000000204, 0.00011998600000000248, 0.00012083300000000075, 0.00011959799999999854, 0.00012066599999999844, 0.00012029200000000101, 0.00011987499999999846, 0.00012019499999999655, 0.00011994500000000324, 0.00012054100000000179, 0.00012023600000000273, 0.00012077699999999553, 0.00012012500000000564, 0.00012049999999999561, 0.00012029200000000101, 0.00012008399999999947, 0.00012011099999999914, 0.00011998599999999554, 0.00012072199999999672, 0.00012080600000000108, 0.00012050000000000255, 0.00012023600000000273, 0.00012013899999999827, 0.00012054200000000126, 0.0001204029999999981, 0.00012027700000000197, 0.00011938899999999752, 0.00012011099999999914]</msg>
<status status="PASS" starttime="20201030 18:33:47.600" endtime="20201030 18:33:47.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.589" endtime="20201030 18:33:47.606"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:47.615" endtime="20201030 18:33:47.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.611" endtime="20201030 18:33:47.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.609" endtime="20201030 18:33:47.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.085" endtime="20201030 18:33:47.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.084" endtime="20201030 18:33:47.640"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:47.663" endtime="20201030 18:33:47.686"></status>
</kw>
<msg timestamp="20201030 18:33:47.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:47.659" endtime="20201030 18:33:47.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:47.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:47.689" endtime="20201030 18:33:47.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:47.695" endtime="20201030 18:33:47.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.652" endtime="20201030 18:33:47.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.647" endtime="20201030 18:33:47.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:47.718" endtime="20201030 18:33:48.064"></status>
</kw>
<msg timestamp="20201030 18:33:48.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040831653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040952569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:47.715" endtime="20201030 18:33:48.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:48.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040831653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040952569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:48.073" endtime="20201030 18:33:48.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.092" endtime="20201030 18:33:48.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.708" endtime="20201030 18:33:48.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.703" endtime="20201030 18:33:48.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:48.109" level="INFO">${RESULT} = [{'diff': 0.00012091599999999869}, {'diff': 0.00012131900000000168}, {'diff': 0.00012100000000000305}, {'diff': 0.00012109700000000057}, {'diff': 0.00012152799999999575}, {'diff': 0.000120680999999997...</msg>
<status status="PASS" starttime="20201030 18:33:48.100" endtime="20201030 18:33:48.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:48.118" level="INFO">${ACCURACY} = {'diff': [0.00012091599999999869, 0.00012131900000000168, 0.00012100000000000305, 0.00012109700000000057, 0.00012152799999999575, 0.00012068099999999748, 0.00012170799999999815, 0.00012147199999999747...</msg>
<status status="PASS" starttime="20201030 18:33:48.111" endtime="20201030 18:33:48.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:48.129" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 18:33:48.126" endtime="20201030 18:33:48.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:48.134" level="INFO">VALUE: [0.00012091599999999869, 0.00012131900000000168, 0.00012100000000000305, 0.00012109700000000057, 0.00012152799999999575, 0.00012068099999999748, 0.00012170799999999815, 0.00012147199999999747, 0.00012144399999999833, 0.00012113899999999928, 0.00012087499999999946, 0.00012111100000000014, 0.00012152800000000269, 0.00012052800000000169, 0.0001209579999999974, 0.00012183400000000122, 0.0001212779999999955, 0.00012173600000000423, 0.00012148600000000398, 0.00012083300000000075, 0.00012120800000000459, 0.00012054200000000126, 0.00012154100000000279, 0.00012051399999999518, 0.00012140199999999962, 0.00012104099999999535, 0.00012173699999999676, 0.00012151399999999618, 0.00012148599999999704, 0.00012129200000000201, 0.00012116699999999841, 0.00012094400000000477, 0.00012166699999999891, 0.00012126399999999593, 0.00012161100000000064, 0.00012177800000000294, 0.00012140199999999962, 0.00012172199999999772, 0.00012187500000000046, 0.0001215830000000015, 0.0001212779999999955, 0.0001208750000000064, 0.0001214029999999991, 0.00012134800000000029, 0.00011998599999999554, 0.00012127800000000244, 0.00012151400000000312, 0.00012118000000000545, 0.00012161100000000064, 0.00012138899999999953]</msg>
<status status="PASS" starttime="20201030 18:33:48.131" endtime="20201030 18:33:48.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.120" endtime="20201030 18:33:48.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:48.148" endtime="20201030 18:33:48.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.142" endtime="20201030 18:33:48.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.140" endtime="20201030 18:33:48.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.642" endtime="20201030 18:33:48.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:47.641" endtime="20201030 18:33:48.173"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.196" endtime="20201030 18:33:48.216"></status>
</kw>
<msg timestamp="20201030 18:33:48.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:48.192" endtime="20201030 18:33:48.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:48.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:48.219" endtime="20201030 18:33:48.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.226" endtime="20201030 18:33:48.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.185" endtime="20201030 18:33:48.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.180" endtime="20201030 18:33:48.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.249" endtime="20201030 18:33:48.588"></status>
</kw>
<msg timestamp="20201030 18:33:48.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0397505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039873264, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:33:48.246" endtime="20201030 18:33:48.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:48.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0397505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039873264, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:33:48.597" endtime="20201030 18:33:48.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.615" endtime="20201030 18:33:48.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.239" endtime="20201030 18:33:48.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.234" endtime="20201030 18:33:48.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:48.632" level="INFO">${RESULT} = [{'diff': 0.00012276399999999743}, {'diff': 0.00012274999999999786}, {'diff': 0.00012281899999999624}, {'diff': 0.00012194400000000577}, {'diff': 0.00012209800000000104}, {'diff': 0.000122291000000003...</msg>
<status status="PASS" starttime="20201030 18:33:48.624" endtime="20201030 18:33:48.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:48.643" level="INFO">${ACCURACY} = {'diff': [0.00012276399999999743, 0.00012274999999999786, 0.00012281899999999624, 0.00012194400000000577, 0.00012209800000000104, 0.00012229100000000354, 0.00012251399999999718, 0.00012283300000000275...</msg>
<status status="PASS" starttime="20201030 18:33:48.634" endtime="20201030 18:33:48.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:48.654" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 18:33:48.651" endtime="20201030 18:33:48.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:48.659" level="INFO">VALUE: [0.00012276399999999743, 0.00012274999999999786, 0.00012281899999999624, 0.00012194400000000577, 0.00012209800000000104, 0.00012229100000000354, 0.00012251399999999718, 0.00012283300000000275, 0.0001224579999999989, 0.00012198599999999754, 0.00012230600000000258, 0.00012193099999999873, 0.00012272199999999872, 0.00012191599999999969, 0.00012281900000000318, 0.00012254199999999632, 0.00012208299999999506, 0.00012172300000000413, 0.000122292000000003, 0.00012188900000000003, 0.00012174999999999686, 0.00012188900000000003, 0.00012205500000000286, 0.00012283400000000222, 0.00012255500000000336, 0.00012286100000000189, 0.00012287500000000146, 0.00012265300000000035, 0.00012276399999999743, 0.00012283399999999528, 0.00012138800000000005, 0.000122083000000002, 0.000122292000000003, 0.0001219579999999984, 0.00012261100000000164, 0.00012251399999999718, 0.00012247299999999794, 0.00012200000000000405, 0.0001224720000000054, 0.00012283300000000275, 0.00012220799999999865, 0.00012233300000000225, 0.00012261100000000164, 0.00012170799999999815, 0.00012137499999999996, 0.00012206899999999549, 0.0001224030000000001, 0.0001228480000000018, 0.00012266699999999991, 0.00012209800000000104]</msg>
<status status="PASS" starttime="20201030 18:33:48.656" endtime="20201030 18:33:48.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.644" endtime="20201030 18:33:48.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:48.671" endtime="20201030 18:33:48.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.667" endtime="20201030 18:33:48.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.665" endtime="20201030 18:33:48.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.175" endtime="20201030 18:33:48.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.174" endtime="20201030 18:33:48.697"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.719" endtime="20201030 18:33:48.741"></status>
</kw>
<msg timestamp="20201030 18:33:48.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:48.716" endtime="20201030 18:33:48.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:48.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:48.745" endtime="20201030 18:33:48.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.751" endtime="20201030 18:33:48.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.709" endtime="20201030 18:33:48.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.703" endtime="20201030 18:33:48.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.774" endtime="20201030 18:33:49.125"></status>
</kw>
<msg timestamp="20201030 18:33:49.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039844278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039966528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:48.771" endtime="20201030 18:33:49.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:49.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039844278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039966528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:49.135" endtime="20201030 18:33:49.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:49.153" endtime="20201030 18:33:49.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.764" endtime="20201030 18:33:49.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.759" endtime="20201030 18:33:49.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:49.170" level="INFO">${RESULT} = [{'diff': 0.0001222500000000043}, {'diff': 0.00012355500000000436}, {'diff': 0.00012288900000000103}, {'diff': 0.000123083000000003}, {'diff': 0.0001232779999999975}, {'diff': 0.00012383300000000375},...</msg>
<status status="PASS" starttime="20201030 18:33:49.162" endtime="20201030 18:33:49.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:49.185" level="INFO">${ACCURACY} = {'diff': [0.0001222500000000043, 0.00012355500000000436, 0.00012288900000000103, 0.000123083000000003, 0.0001232779999999975, 0.00012383300000000375, 0.00012358399999999603, 0.0001237359999999993, 0.0...</msg>
<status status="PASS" starttime="20201030 18:33:49.172" endtime="20201030 18:33:49.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:49.196" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 18:33:49.194" endtime="20201030 18:33:49.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:49.201" level="INFO">VALUE: [0.0001222500000000043, 0.00012355500000000436, 0.00012288900000000103, 0.000123083000000003, 0.0001232779999999975, 0.00012383300000000375, 0.00012358399999999603, 0.0001237359999999993, 0.0001229999999999981, 0.0001234999999999986, 0.00012338800000000205, 0.00012334700000000282, 0.00012348599999999904, 0.00012347199999999947, 0.0001235830000000035, 0.00012348599999999904, 0.0001233480000000023, 0.00012338900000000153, 0.0001232779999999975, 0.00012348600000000598, 0.00012336100000000239, 0.00012334700000000282, 0.00012230599999999564, 0.00012222199999999822, 0.00012315200000000137, 0.00012388900000000203, 0.0001232500000000053, 0.00012298600000000548, 0.0001234030000000011, 0.00012293099999999973, 0.0001231120000000016, 0.00012322199999999922, 0.0001224720000000054, 0.00012368100000000048, 0.00012294399999999983, 0.00012351399999999818, 0.000123568999999997, 0.00012298599999999854, 0.00012293000000000026, 0.00012372199999999972, 0.0001231250000000017, 0.00012288900000000103, 0.00012382000000000365, 0.00012369400000000058, 0.00012304100000000429, 0.00012383300000000375, 0.00012366700000000092, 0.00012351399999999818, 0.00012338900000000153, 0.00012366700000000092]</msg>
<status status="PASS" starttime="20201030 18:33:49.198" endtime="20201030 18:33:49.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.187" endtime="20201030 18:33:49.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:49.214" endtime="20201030 18:33:49.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.209" endtime="20201030 18:33:49.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.207" endtime="20201030 18:33:49.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.699" endtime="20201030 18:33:49.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.697" endtime="20201030 18:33:49.239"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:49.261" endtime="20201030 18:33:49.283"></status>
</kw>
<msg timestamp="20201030 18:33:49.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:49.258" endtime="20201030 18:33:49.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:49.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:49.287" endtime="20201030 18:33:49.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:49.293" endtime="20201030 18:33:49.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.251" endtime="20201030 18:33:49.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.245" endtime="20201030 18:33:49.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:49.316" endtime="20201030 18:33:49.670"></status>
</kw>
<msg timestamp="20201030 18:33:49.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039847639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039971792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:49.313" endtime="20201030 18:33:49.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:49.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039847639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039971792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:49.679" endtime="20201030 18:33:49.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:49.697" endtime="20201030 18:33:49.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.306" endtime="20201030 18:33:49.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.301" endtime="20201030 18:33:49.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:49.717" level="INFO">${RESULT} = [{'diff': 0.00012415300000000185}, {'diff': 0.00012374999999999886}, {'diff': 0.0001245280000000057}, {'diff': 0.0001240280000000052}, {'diff': 0.0001239999999999991}, {'diff': 0.0001246250000000032},...</msg>
<status status="PASS" starttime="20201030 18:33:49.708" endtime="20201030 18:33:49.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:49.726" level="INFO">${ACCURACY} = {'diff': [0.00012415300000000185, 0.00012374999999999886, 0.0001245280000000057, 0.0001240280000000052, 0.0001239999999999991, 0.0001246250000000032, 0.000124292000000005, 0.00012477800000000594, 0.00...</msg>
<status status="PASS" starttime="20201030 18:33:49.719" endtime="20201030 18:33:49.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:49.737" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 18:33:49.735" endtime="20201030 18:33:49.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:49.743" level="INFO">VALUE: [0.00012415300000000185, 0.00012374999999999886, 0.0001245280000000057, 0.0001240280000000052, 0.0001239999999999991, 0.0001246250000000032, 0.000124292000000005, 0.00012477800000000594, 0.00012392999999999432, 0.00012372199999999972, 0.0001248050000000056, 0.0001243879999999961, 0.00012431899999999774, 0.00012426399999999893, 0.0001241250000000027, 0.0001249030000000026, 0.00012454100000000579, 0.00012433399999999678, 0.00012448600000000004, 0.0001242909999999986, 0.00012351399999999818, 0.00012466699999999498, 0.00012415300000000185, 0.0001244999999999996, 0.0001235559999999969, 0.00012466700000000192, 0.00012350000000000555, 0.00012398599999999954, 0.0001232229999999987, 0.00012424999999999936, 0.00012416600000000194, 0.00012434700000000382, 0.00012431899999999774, 0.000124568999999998, 0.0001245559999999979, 0.0001242779999999985, 0.00012486100000000389, 0.00012365300000000135, 0.00012442999999999482, 0.00012441700000000167, 0.00012458299999999756, 0.00012420800000000065, 0.00012337500000000196, 0.00012455500000000536, 0.0001246109999999967, 0.0001247360000000003, 0.0001232359999999988, 0.00012424999999999936, 0.0001241250000000027, 0.0001239999999999991]</msg>
<status status="PASS" starttime="20201030 18:33:49.740" endtime="20201030 18:33:49.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.728" endtime="20201030 18:33:49.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:49.755" endtime="20201030 18:33:49.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.751" endtime="20201030 18:33:49.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.748" endtime="20201030 18:33:49.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.241" endtime="20201030 18:33:49.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.240" endtime="20201030 18:33:49.780"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:49.803" endtime="20201030 18:33:49.828"></status>
</kw>
<msg timestamp="20201030 18:33:49.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:49.800" endtime="20201030 18:33:49.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:49.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:49.832" endtime="20201030 18:33:49.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:49.839" endtime="20201030 18:33:49.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.793" endtime="20201030 18:33:49.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.787" endtime="20201030 18:33:49.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:49.862" endtime="20201030 18:33:50.202"></status>
</kw>
<msg timestamp="20201030 18:33:50.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041304361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041429444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:49.859" endtime="20201030 18:33:50.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:50.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041304361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041429444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:50.211" endtime="20201030 18:33:50.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:50.229" endtime="20201030 18:33:50.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.852" endtime="20201030 18:33:50.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.847" endtime="20201030 18:33:50.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:50.246" level="INFO">${RESULT} = [{'diff': 0.000125083000000005}, {'diff': 0.00012536099999999745}, {'diff': 0.00012587500000000446}, {'diff': 0.00012520800000000165}, {'diff': 0.00012511100000000414}, {'diff': 0.00012579199999999957...</msg>
<status status="PASS" starttime="20201030 18:33:50.237" endtime="20201030 18:33:50.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:50.255" level="INFO">${ACCURACY} = {'diff': [0.000125083000000005, 0.00012536099999999745, 0.00012587500000000446, 0.00012520800000000165, 0.00012511100000000414, 0.00012579199999999957, 0.00012530599999999864, 0.00012575000000000086, ...</msg>
<status status="PASS" starttime="20201030 18:33:50.248" endtime="20201030 18:33:50.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:50.266" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 18:33:50.264" endtime="20201030 18:33:50.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:50.272" level="INFO">VALUE: [0.000125083000000005, 0.00012536099999999745, 0.00012587500000000446, 0.00012520800000000165, 0.00012511100000000414, 0.00012579199999999957, 0.00012530599999999864, 0.00012575000000000086, 0.00012513899999999634, 0.00012525000000000036, 0.0001253199999999982, 0.00012552799999999975, 0.0001254160000000032, 0.00012548600000000104, 0.00012530499999999917, 0.00012588900000000403, 0.00012513900000000328, 0.0001252360000000008, 0.00012541599999999625, 0.00012497200000000097, 0.00012495900000000087, 0.0001255000000000006, 0.0001242359999999998, 0.0001254439999999954, 0.00012517999999999557, 0.00012559699999999813, 0.00012418100000000099, 0.00012501399999999968, 0.00012420800000000065, 0.00012495899999999394, 0.00012545900000000137, 0.00012509699999999763, 0.00012567999999999607, 0.00012437499999999602, 0.00012522200000000122, 0.00012536200000000386, 0.00012490199999999618, 0.00012548600000000104, 0.00012580599999999914, 0.00012506999999999796, 0.00012577700000000053, 0.00012438899999999559, 0.00012534700000000482, 0.00012552799999999975, 0.0001252779999999995, 0.0001243050000000051, 0.0001249580000000014, 0.00012587500000000446, 0.00012490199999999618, 0.00012586100000000489]</msg>
<status status="PASS" starttime="20201030 18:33:50.269" endtime="20201030 18:33:50.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.257" endtime="20201030 18:33:50.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:50.286" endtime="20201030 18:33:50.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.280" endtime="20201030 18:33:50.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.277" endtime="20201030 18:33:50.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.783" endtime="20201030 18:33:50.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:49.781" endtime="20201030 18:33:50.311"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:50.333" endtime="20201030 18:33:50.354"></status>
</kw>
<msg timestamp="20201030 18:33:50.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:50.330" endtime="20201030 18:33:50.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:50.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:50.357" endtime="20201030 18:33:50.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:50.364" endtime="20201030 18:33:50.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.323" endtime="20201030 18:33:50.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.317" endtime="20201030 18:33:50.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:50.387" endtime="20201030 18:33:50.727"></status>
</kw>
<msg timestamp="20201030 18:33:50.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039676903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039803167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:50.384" endtime="20201030 18:33:50.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:50.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039676903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039803167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:50.736" endtime="20201030 18:33:50.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:50.754" endtime="20201030 18:33:50.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.376" endtime="20201030 18:33:50.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.372" endtime="20201030 18:33:50.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:50.771" level="INFO">${RESULT} = [{'diff': 0.00012626400000000093}, {'diff': 0.00012602800000000025}, {'diff': 0.00012662499999999827}, {'diff': 0.0001265000000000016}, {'diff': 0.000126569}, {'diff': 0.0001266109999999987}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:33:50.763" endtime="20201030 18:33:50.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:50.782" level="INFO">${ACCURACY} = {'diff': [0.00012626400000000093, 0.00012602800000000025, 0.00012662499999999827, 0.0001265000000000016, 0.000126569, 0.0001266109999999987, 0.0001250559999999984, 0.0001260979999999981, 0.00012666700...</msg>
<status status="PASS" starttime="20201030 18:33:50.773" endtime="20201030 18:33:50.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:50.792" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 18:33:50.790" endtime="20201030 18:33:50.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:50.798" level="INFO">VALUE: [0.00012626400000000093, 0.00012602800000000025, 0.00012662499999999827, 0.0001265000000000016, 0.000126569, 0.0001266109999999987, 0.0001250559999999984, 0.0001260979999999981, 0.00012666700000000392, 0.00012676400000000143, 0.00012686099999999895, 0.0001257360000000013, 0.0001265559999999999, 0.00012645900000000238, 0.00012630500000000017, 0.00012615300000000385, 0.00012644499999999587, 0.0001263199999999992, 0.00012645799999999596, 0.00012637499999999802, 0.00012680500000000067, 0.00012625000000000136, 0.0001263329999999993, 0.00012636199999999792, 0.00012594400000000283, 0.00012636099999999845, 0.0001261529999999969, 0.00012595900000000188, 0.00012661199999999817, 0.00012602800000000025, 0.00012641699999999673, 0.00012659699999999913, 0.00012677799999999406, 0.00012645899999999544, 0.00012652800000000075, 0.0001263889999999976, 0.0001268199999999997, 0.00012679200000000057, 0.00012666699999999698, 0.00012620800000000265, 0.0001264030000000041, 0.0001261109999999982, 0.00012625000000000136, 0.00012597200000000197, 0.00012604199999999982, 0.00012613899999999734, 0.00012626400000000093, 0.00012648600000000204, 0.00012609699999999863, 0.00012686100000000589]</msg>
<status status="PASS" starttime="20201030 18:33:50.795" endtime="20201030 18:33:50.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.783" endtime="20201030 18:33:50.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:50.810" endtime="20201030 18:33:50.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.806" endtime="20201030 18:33:50.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.803" endtime="20201030 18:33:50.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.313" endtime="20201030 18:33:50.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.312" endtime="20201030 18:33:50.835"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:50.858" endtime="20201030 18:33:50.879"></status>
</kw>
<msg timestamp="20201030 18:33:50.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:50.855" endtime="20201030 18:33:50.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:50.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:50.882" endtime="20201030 18:33:50.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:50.889" endtime="20201030 18:33:50.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.848" endtime="20201030 18:33:50.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.842" endtime="20201030 18:33:50.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:50.912" endtime="20201030 18:33:51.252"></status>
</kw>
<msg timestamp="20201030 18:33:51.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0399845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040111806, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:33:50.909" endtime="20201030 18:33:51.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:51.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0399845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040111806, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:33:51.261" endtime="20201030 18:33:51.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:51.279" endtime="20201030 18:33:51.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.902" endtime="20201030 18:33:51.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.897" endtime="20201030 18:33:51.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:51.297" level="INFO">${RESULT} = [{'diff': 0.00012730600000000064}, {'diff': 0.00012757000000000046}, {'diff': 0.0001274309999999973}, {'diff': 0.00012699999999999517}, {'diff': 0.00012658299999999956}, {'diff': 0.0001274719999999965...</msg>
<status status="PASS" starttime="20201030 18:33:51.288" endtime="20201030 18:33:51.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:51.307" level="INFO">${ACCURACY} = {'diff': [0.00012730600000000064, 0.00012757000000000046, 0.0001274309999999973, 0.00012699999999999517, 0.00012658299999999956, 0.00012747199999999653, 0.00012787500000000646, 0.0001278889999999991, ...</msg>
<status status="PASS" starttime="20201030 18:33:51.299" endtime="20201030 18:33:51.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:51.319" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 18:33:51.316" endtime="20201030 18:33:51.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:51.324" level="INFO">VALUE: [0.00012730600000000064, 0.00012757000000000046, 0.0001274309999999973, 0.00012699999999999517, 0.00012658299999999956, 0.00012747199999999653, 0.00012787500000000646, 0.0001278889999999991, 0.00012784700000000038, 0.0001272360000000028, 0.0001277360000000033, 0.00012784799999999985, 0.00012709700000000657, 0.00012697200000000297, 0.00012718100000000399, 0.0001276109999999997, 0.0001276529999999984, 0.00012734799999999935, 0.00012781900000000124, 0.0001276250000000062, 0.0001272230000000027, 0.00012783400000000028, 0.00012779200000000157, 0.0001274580000000039, 0.0001272079999999967, 0.0001273330000000003, 0.00012654200000000032, 0.0001272910000000016, 0.0001274859999999961, 0.0001271109999999992, 0.00012734699999999988, 0.00012695900000000288, 0.00012729200000000107, 0.0001269439999999969, 0.00012751399999999524, 0.00012769500000000406, 0.0001277360000000033, 0.00012727700000000203, 0.00012754100000000185, 0.0001275279999999948, 0.00012722199999999628, 0.00012790299999999866, 0.00012697200000000297, 0.0001276529999999984, 0.0001269859999999956, 0.00012725000000000236, 0.00012786099999999995, 0.00012675000000000186, 0.00012715200000000537, 0.0001263889999999976]</msg>
<status status="PASS" starttime="20201030 18:33:51.321" endtime="20201030 18:33:51.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.309" endtime="20201030 18:33:51.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:51.336" endtime="20201030 18:33:51.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.332" endtime="20201030 18:33:51.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.329" endtime="20201030 18:33:51.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.838" endtime="20201030 18:33:51.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:50.836" endtime="20201030 18:33:51.361"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:51.384" endtime="20201030 18:33:51.405"></status>
</kw>
<msg timestamp="20201030 18:33:51.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:51.381" endtime="20201030 18:33:51.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:51.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:51.408" endtime="20201030 18:33:51.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:51.414" endtime="20201030 18:33:51.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.373" endtime="20201030 18:33:51.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.368" endtime="20201030 18:33:51.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:51.438" endtime="20201030 18:33:51.780"></status>
</kw>
<msg timestamp="20201030 18:33:51.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039676792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0398055, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:33:51.434" endtime="20201030 18:33:51.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:51.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039676792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0398055, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:33:51.794" endtime="20201030 18:33:51.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:51.815" endtime="20201030 18:33:51.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.427" endtime="20201030 18:33:51.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.422" endtime="20201030 18:33:51.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:51.836" level="INFO">${RESULT} = [{'diff': 0.0001287079999999982}, {'diff': 0.00012820800000000465}, {'diff': 0.00012880600000000214}, {'diff': 0.0001289859999999976}, {'diff': 0.0001287360000000043}, {'diff': 0.00012705500000000092}...</msg>
<status status="PASS" starttime="20201030 18:33:51.826" endtime="20201030 18:33:51.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:51.845" level="INFO">${ACCURACY} = {'diff': [0.0001287079999999982, 0.00012820800000000465, 0.00012880600000000214, 0.0001289859999999976, 0.0001287360000000043, 0.00012705500000000092, 0.00012816700000000542, 0.00012772200000000372, 0...</msg>
<status status="PASS" starttime="20201030 18:33:51.838" endtime="20201030 18:33:51.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:51.856" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 18:33:51.854" endtime="20201030 18:33:51.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:51.861" level="INFO">VALUE: [0.0001287079999999982, 0.00012820800000000465, 0.00012880600000000214, 0.0001289859999999976, 0.0001287360000000043, 0.00012705500000000092, 0.00012816700000000542, 0.00012772200000000372, 0.00012886100000000095, 0.00012858300000000156, 0.00012869499999999812, 0.0001286529999999994, 0.00012836100000000045, 0.00012847199999999753, 0.00012841599999999925, 0.00012847200000000447, 0.0001280000000000031, 0.0001279859999999966, 0.00012830600000000164, 0.000128778000000003, 0.00012880600000000214, 0.0001279450000000043, 0.0001281529999999989, 0.00012830499999999523, 0.00012870899999999769, 0.00012845799999999796, 0.00012816699999999848, 0.00012845899999999744, 0.00012863899999999984, 0.00012797199999999703, 0.00012877799999999606, 0.00012708300000000006, 0.0001285980000000006, 0.00012875000000000386, 0.00012869499999999812, 0.00012816699999999848, 0.00012845799999999796, 0.0001286529999999994, 0.0001282769999999961, 0.00012856899999999505, 0.000127569000000001, 0.0001282079999999977, 0.0001281529999999989, 0.00012824999999999642, 0.00012851399999999624, 0.0001280279999999953, 0.0001283200000000012, 0.00012833400000000078, 0.0001280560000000014, 0.00012840299999999916]</msg>
<status status="PASS" starttime="20201030 18:33:51.858" endtime="20201030 18:33:51.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.847" endtime="20201030 18:33:51.865"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:51.874" endtime="20201030 18:33:51.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.870" endtime="20201030 18:33:51.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.867" endtime="20201030 18:33:51.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.363" endtime="20201030 18:33:51.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.362" endtime="20201030 18:33:51.899"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:51.921" endtime="20201030 18:33:51.943"></status>
</kw>
<msg timestamp="20201030 18:33:51.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:51.918" endtime="20201030 18:33:51.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:51.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:51.947" endtime="20201030 18:33:51.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:51.953" endtime="20201030 18:33:51.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.911" endtime="20201030 18:33:51.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.905" endtime="20201030 18:33:51.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:51.976" endtime="20201030 18:33:52.318"></status>
</kw>
<msg timestamp="20201030 18:33:52.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040837361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040966569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:51.973" endtime="20201030 18:33:52.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:52.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040837361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040966569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:52.327" endtime="20201030 18:33:52.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:52.346" endtime="20201030 18:33:52.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.965" endtime="20201030 18:33:52.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.961" endtime="20201030 18:33:52.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:52.363" level="INFO">${RESULT} = [{'diff': 0.0001292079999999987}, {'diff': 0.0001291110000000012}, {'diff': 0.00012902699999999684}, {'diff': 0.00012969399999999964}, {'diff': 0.0001292780000000035}, {'diff': 0.00012968000000000007}...</msg>
<status status="PASS" starttime="20201030 18:33:52.354" endtime="20201030 18:33:52.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:52.372" level="INFO">${ACCURACY} = {'diff': [0.0001292079999999987, 0.0001291110000000012, 0.00012902699999999684, 0.00012969399999999964, 0.0001292780000000035, 0.00012968000000000007, 0.00012830600000000164, 0.00012897199999999803, 0...</msg>
<status status="PASS" starttime="20201030 18:33:52.365" endtime="20201030 18:33:52.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:52.383" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 18:33:52.381" endtime="20201030 18:33:52.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:52.388" level="INFO">VALUE: [0.0001292079999999987, 0.0001291110000000012, 0.00012902699999999684, 0.00012969399999999964, 0.0001292780000000035, 0.00012968000000000007, 0.00012830600000000164, 0.00012897199999999803, 0.0001296530000000004, 0.0001298059999999962, 0.00012913800000000086, 0.0001289309999999988, 0.00012926400000000393, 0.0001290409999999964, 0.00012954200000000332, 0.0001295279999999968, 0.00012966699999999998, 0.00012901399999999674, 0.00012923699999999733, 0.0001293059999999957, 0.00012974999999999792, 0.00012898600000000454, 0.00012895799999999846, 0.00012941600000000025, 0.00012931999999999527, 0.00012912500000000077, 0.00012901399999999674, 0.00012934700000000188, 0.00012980600000000314, 0.0001292079999999987, 0.00012922299999999776, 0.000129263999999997, 0.0001291529999999999, 0.00012937500000000102, 0.0001280980000000001, 0.00012955599999999595, 0.00012984800000000185, 0.00012922200000000522, 0.0001292780000000035, 0.0001296110000000017, 0.0001293890000000006, 0.00012990300000000066, 0.00012902800000000325, 0.0001295560000000029, 0.00012945799999999896, 0.00012987500000000152, 0.0001295000000000046, 0.00012876299999999702, 0.00012901399999999674, 0.00012901399999999674]</msg>
<status status="PASS" starttime="20201030 18:33:52.385" endtime="20201030 18:33:52.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.374" endtime="20201030 18:33:52.392"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:52.402" endtime="20201030 18:33:52.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.397" endtime="20201030 18:33:52.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.394" endtime="20201030 18:33:52.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.901" endtime="20201030 18:33:52.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:51.900" endtime="20201030 18:33:52.427"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:52.451" endtime="20201030 18:33:52.472"></status>
</kw>
<msg timestamp="20201030 18:33:52.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:52.447" endtime="20201030 18:33:52.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:52.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:52.475" endtime="20201030 18:33:52.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:52.482" endtime="20201030 18:33:52.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.440" endtime="20201030 18:33:52.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.434" endtime="20201030 18:33:52.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:52.505" endtime="20201030 18:33:52.845"></status>
</kw>
<msg timestamp="20201030 18:33:52.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040723542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040854069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:52.502" endtime="20201030 18:33:52.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:52.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040723542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040854069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:52.855" endtime="20201030 18:33:52.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:52.873" endtime="20201030 18:33:52.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.495" endtime="20201030 18:33:52.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.490" endtime="20201030 18:33:52.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:52.890" level="INFO">${RESULT} = [{'diff': 0.00013052699999999834}, {'diff': 0.00012999999999999817}, {'diff': 0.00013006899999999655}, {'diff': 0.0001304310000000003}, {'diff': 0.00013084699999999644}, {'diff': 0.0001304719999999995...</msg>
<status status="PASS" starttime="20201030 18:33:52.881" endtime="20201030 18:33:52.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:52.900" level="INFO">${ACCURACY} = {'diff': [0.00013052699999999834, 0.00012999999999999817, 0.00013006899999999655, 0.0001304310000000003, 0.00013084699999999644, 0.00013047199999999953, 0.0001300279999999973, 0.00013083299999999687, ...</msg>
<status status="PASS" starttime="20201030 18:33:52.892" endtime="20201030 18:33:52.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:52.911" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 18:33:52.909" endtime="20201030 18:33:52.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:52.916" level="INFO">VALUE: [0.00013052699999999834, 0.00012999999999999817, 0.00013006899999999655, 0.0001304310000000003, 0.00013084699999999644, 0.00013047199999999953, 0.0001300279999999973, 0.00013083299999999687, 0.00013018100000000005, 0.00013041700000000073, 0.0001306530000000014, 0.0001303609999999955, 0.00013037500000000202, 0.00013001299999999827, 0.0001308890000000021, 0.00012995899999999894, 0.00013001400000000468, 0.00013054200000000432, 0.00013051399999999824, 0.00013063900000000184, 0.00013058400000000303, 0.00013076400000000543, 0.0001300000000000051, 0.00013004200000000382, 0.00013001399999999774, 0.00013037500000000202, 0.00013065299999999447, 0.00012995900000000588, 0.00013030500000000417, 0.0001306110000000027, 0.00013026400000000493, 0.00013041700000000073, 0.0001308200000000037, 0.0001305000000000056, 0.00013041599999999431, 0.00013056899999999705, 0.00013086100000000295, 0.00013037500000000202, 0.00013069400000000064, 0.00013063900000000184, 0.00012984700000000238, 0.0001307089999999997, 0.0001299309999999998, 0.00013058299999999662, 0.00013026400000000493, 0.00013045799999999996, 0.0001300279999999973, 0.00013063900000000184, 0.0001303890000000016, 0.00013068100000000055]</msg>
<status status="PASS" starttime="20201030 18:33:52.913" endtime="20201030 18:33:52.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.902" endtime="20201030 18:33:52.920"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:52.929" endtime="20201030 18:33:52.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.924" endtime="20201030 18:33:52.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.922" endtime="20201030 18:33:52.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.430" endtime="20201030 18:33:52.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.428" endtime="20201030 18:33:52.954"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:52.976" endtime="20201030 18:33:52.997"></status>
</kw>
<msg timestamp="20201030 18:33:52.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:52.973" endtime="20201030 18:33:52.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:53.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:53.000" endtime="20201030 18:33:53.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:53.006" endtime="20201030 18:33:53.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.966" endtime="20201030 18:33:53.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.960" endtime="20201030 18:33:53.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:53.030" endtime="20201030 18:33:53.382"></status>
</kw>
<msg timestamp="20201030 18:33:53.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039343042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039474861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:53.026" endtime="20201030 18:33:53.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:53.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039343042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039474861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:53.392" endtime="20201030 18:33:53.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:53.411" endtime="20201030 18:33:53.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.019" endtime="20201030 18:33:53.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.015" endtime="20201030 18:33:53.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:53.428" level="INFO">${RESULT} = [{'diff': 0.0001318189999999983}, {'diff': 0.00013055500000000442}, {'diff': 0.00013113900000000234}, {'diff': 0.00013170799999999427}, {'diff': 0.000131860999999997}, {'diff': 0.0001313189999999978},...</msg>
<status status="PASS" starttime="20201030 18:33:53.419" endtime="20201030 18:33:53.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:53.439" level="INFO">${ACCURACY} = {'diff': [0.0001318189999999983, 0.00013055500000000442, 0.00013113900000000234, 0.00013170799999999427, 0.000131860999999997, 0.0001313189999999978, 0.0001313890000000026, 0.000130569000000004, 0.000...</msg>
<status status="PASS" starttime="20201030 18:33:53.430" endtime="20201030 18:33:53.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:53.450" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 18:33:53.448" endtime="20201030 18:33:53.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:53.456" level="INFO">VALUE: [0.0001318189999999983, 0.00013055500000000442, 0.00013113900000000234, 0.00013170799999999427, 0.000131860999999997, 0.0001313189999999978, 0.0001313890000000026, 0.000130569000000004, 0.00013166599999999556, 0.00013108400000000353, 0.00013106999999999702, 0.0001317639999999995, 0.00013145800000000096, 0.00013101399999999874, 0.00013118100000000105, 0.00013151299999999977, 0.0001302079999999997, 0.00013099999999999917, 0.0001305409999999979, 0.00013005499999999698, 0.00013155499999999848, 0.00013012500000000177, 0.00013137500000000302, 0.00013173599999999341, 0.00013149999999999967, 0.00013134700000000388, 0.00013105499999999798, 0.0001310560000000044, 0.00013094500000000037, 0.0001312910000000056, 0.00013179199999999863, 0.00013144500000000087, 0.00013147200000000053, 0.0001305839999999961, 0.00013123599999999985, 0.00013183299999999787, 0.00013191600000000275, 0.00013141700000000173, 0.00013116700000000148, 0.00013168100000000155, 0.0001304440000000004, 0.00013101399999999874, 0.00013131900000000474, 0.0001301530000000009, 0.0001313890000000026, 0.00013149999999999967, 0.00013180600000000514, 0.0001314860000000001, 0.00013156899999999805, 0.00013197200000000103]</msg>
<status status="PASS" starttime="20201030 18:33:53.452" endtime="20201030 18:33:53.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.441" endtime="20201030 18:33:53.459"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:53.468" endtime="20201030 18:33:53.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.464" endtime="20201030 18:33:53.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.461" endtime="20201030 18:33:53.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.956" endtime="20201030 18:33:53.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.955" endtime="20201030 18:33:53.494"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:53.517" endtime="20201030 18:33:53.541"></status>
</kw>
<msg timestamp="20201030 18:33:53.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:53.514" endtime="20201030 18:33:53.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:53.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:53.544" endtime="20201030 18:33:53.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:53.551" endtime="20201030 18:33:53.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.506" endtime="20201030 18:33:53.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.501" endtime="20201030 18:33:53.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:53.574" endtime="20201030 18:33:53.941"></status>
</kw>
<msg timestamp="20201030 18:33:53.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04093425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041065861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:53.571" endtime="20201030 18:33:53.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:53.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04093425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041065861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:33:53.950" endtime="20201030 18:33:53.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:53.968" endtime="20201030 18:33:53.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.564" endtime="20201030 18:33:53.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.559" endtime="20201030 18:33:53.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:53.985" level="INFO">${RESULT} = [{'diff': 0.0001316110000000037}, {'diff': 0.00013211099999999726}, {'diff': 0.00013267999999999613}, {'diff': 0.00013212499999999683}, {'diff': 0.0001320279999999993}, {'diff': 0.000132264}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:33:53.976" endtime="20201030 18:33:53.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:53.994" level="INFO">${ACCURACY} = {'diff': [0.0001316110000000037, 0.00013211099999999726, 0.00013267999999999613, 0.00013212499999999683, 0.0001320279999999993, 0.000132264, 0.00013123699999999933, 0.0001321809999999951, 0.0001321810...</msg>
<status status="PASS" starttime="20201030 18:33:53.987" endtime="20201030 18:33:53.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:54.005" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 18:33:54.003" endtime="20201030 18:33:54.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:54.010" level="INFO">VALUE: [0.0001316110000000037, 0.00013211099999999726, 0.00013267999999999613, 0.00013212499999999683, 0.0001320279999999993, 0.000132264, 0.00013123699999999933, 0.0001321809999999951, 0.00013218100000000205, 0.00013275000000000092, 0.00013234699999999794, 0.00013236100000000445, 0.00013219400000000214, 0.0001324860000000011, 0.0001311530000000019, 0.00013275000000000092, 0.00013237500000000402, 0.00013236199999999698, 0.00013250000000000067, 0.0001324719999999946, 0.0001323609999999975, 0.00013237499999999708, 0.00013262500000000427, 0.0001320980000000041, 0.00013244499999999493, 0.00013255499999999948, 0.00013173600000000035, 0.00013273600000000135, 0.00013290299999999672, 0.00013245800000000196, 0.0001321389999999964, 0.00013216599999999606, 0.00013287499999999758, 0.00013206999999999802, 0.00013287499999999758, 0.00013195800000000146, 0.00013251299999999383, 0.0001324440000000024, 0.00013231900000000574, 0.000132651999999997, 0.00013245799999999502, 0.0001325279999999998, 0.00013225000000000042, 0.00013225000000000042, 0.00013236100000000445, 0.0001323330000000053, 0.0001328479999999979, 0.00013290299999999672, 0.00013245800000000196, 0.00013113900000000234]</msg>
<status status="PASS" starttime="20201030 18:33:54.007" endtime="20201030 18:33:54.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.996" endtime="20201030 18:33:54.013"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:54.023" endtime="20201030 18:33:54.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.018" endtime="20201030 18:33:54.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.016" endtime="20201030 18:33:54.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.496" endtime="20201030 18:33:54.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:53.495" endtime="20201030 18:33:54.048"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:54.070" endtime="20201030 18:33:54.097"></status>
</kw>
<msg timestamp="20201030 18:33:54.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:54.067" endtime="20201030 18:33:54.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:54.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:54.100" endtime="20201030 18:33:54.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:54.106" endtime="20201030 18:33:54.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.060" endtime="20201030 18:33:54.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.054" endtime="20201030 18:33:54.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:54.132" endtime="20201030 18:33:54.496"></status>
</kw>
<msg timestamp="20201030 18:33:54.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045017278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045150583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:54.129" endtime="20201030 18:33:54.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:54.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045017278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045150583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:54.506" endtime="20201030 18:33:54.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:54.525" endtime="20201030 18:33:54.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.121" endtime="20201030 18:33:54.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.116" endtime="20201030 18:33:54.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:54.542" level="INFO">${RESULT} = [{'diff': 0.00013330500000000023}, {'diff': 0.00013299999999999423}, {'diff': 0.0001333189999999998}, {'diff': 0.00013305599999999945}, {'diff': 0.00013313900000000434}, {'diff': 0.0001322360000000008...</msg>
<status status="PASS" starttime="20201030 18:33:54.533" endtime="20201030 18:33:54.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:54.552" level="INFO">${ACCURACY} = {'diff': [0.00013330500000000023, 0.00013299999999999423, 0.0001333189999999998, 0.00013305599999999945, 0.00013313900000000434, 0.00013223600000000085, 0.0001338890000000051, 0.00013318100000000305, ...</msg>
<status status="PASS" starttime="20201030 18:33:54.544" endtime="20201030 18:33:54.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:54.563" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 18:33:54.560" endtime="20201030 18:33:54.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:54.568" level="INFO">VALUE: [0.00013330500000000023, 0.00013299999999999423, 0.0001333189999999998, 0.00013305599999999945, 0.00013313900000000434, 0.00013223600000000085, 0.0001338890000000051, 0.00013318100000000305, 0.00013384699999999944, 0.0001331519999999975, 0.0001322080000000017, 0.00013356999999999952, 0.00013351400000000124, 0.00013306899999999955, 0.00013345900000000244, 0.0001332770000000011, 0.00013381999999999977, 0.00013325000000000142, 0.00013356999999999952, 0.0001326530000000034, 0.0001331530000000039, 0.00013316699999999654, 0.0001334860000000021, 0.00013325000000000142, 0.00013338899999999765, 0.00013319400000000314, 0.00013383399999999934, 0.0001330280000000003, 0.000133166000000004, 0.00013366699999999704, 0.00013344500000000287, 0.00013322200000000228, 0.00013320799999999577, 0.00013205499999999898, 0.00013316599999999706, 0.00013308299999999912, 0.00013293099999999586, 0.00013351400000000124, 0.00013309700000000563, 0.00013354200000000038, 0.0001337080000000032, 0.0001335410000000009, 0.00013383399999999934, 0.00013345900000000244, 0.00013343000000000382, 0.00013262500000000427, 0.00013327799999999362, 0.00013394399999999695, 0.0001335280000000008, 0.00013333399999999884]</msg>
<status status="PASS" starttime="20201030 18:33:54.565" endtime="20201030 18:33:54.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.553" endtime="20201030 18:33:54.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:54.582" endtime="20201030 18:33:54.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.576" endtime="20201030 18:33:54.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.574" endtime="20201030 18:33:54.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.050" endtime="20201030 18:33:54.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.049" endtime="20201030 18:33:54.608"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:54.631" endtime="20201030 18:33:54.655"></status>
</kw>
<msg timestamp="20201030 18:33:54.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:54.627" endtime="20201030 18:33:54.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:54.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:54.658" endtime="20201030 18:33:54.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:54.665" endtime="20201030 18:33:54.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.620" endtime="20201030 18:33:54.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.614" endtime="20201030 18:33:54.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:54.690" endtime="20201030 18:33:55.043"></status>
</kw>
<msg timestamp="20201030 18:33:55.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040667944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040801389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:54.686" endtime="20201030 18:33:55.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:55.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040667944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040801389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:55.052" endtime="20201030 18:33:55.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:55.070" endtime="20201030 18:33:55.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.678" endtime="20201030 18:33:55.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.673" endtime="20201030 18:33:55.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:55.087" level="INFO">${RESULT} = [{'diff': 0.00013344500000000287}, {'diff': 0.00013418100000000405}, {'diff': 0.00013477800000000206}, {'diff': 0.00013490299999999872}, {'diff': 0.00013440199999999874}, {'diff': 0.000133082999999999...</msg>
<status status="PASS" starttime="20201030 18:33:55.079" endtime="20201030 18:33:55.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:55.098" level="INFO">${ACCURACY} = {'diff': [0.00013344500000000287, 0.00013418100000000405, 0.00013477800000000206, 0.00013490299999999872, 0.00013440199999999874, 0.00013308299999999912, 0.00013401400000000174, 0.00013423600000000285...</msg>
<status status="PASS" starttime="20201030 18:33:55.090" endtime="20201030 18:33:55.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:55.109" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 18:33:55.107" endtime="20201030 18:33:55.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:55.114" level="INFO">VALUE: [0.00013344500000000287, 0.00013418100000000405, 0.00013477800000000206, 0.00013490299999999872, 0.00013440199999999874, 0.00013308299999999912, 0.00013401400000000174, 0.00013423600000000285, 0.0001340410000000014, 0.0001335839999999991, 0.0001347640000000025, 0.00013420799999999677, 0.00013323600000000185, 0.00013466699999999804, 0.00013422299999999582, 0.00013443000000000482, 0.00013441599999999831, 0.00013476399999999555, 0.00013408300000000012, 0.0001343060000000007, 0.0001343609999999995, 0.00013407000000000002, 0.00013483299999999393, 0.00013477800000000206, 0.00013488899999999915, 0.0001341530000000049, 0.0001348060000000012, 0.0001345410000000019, 0.00013472300000000326, 0.0001340280000000013, 0.00013494499999999743, 0.00013405500000000098, 0.0001343479999999994, 0.00013440199999999874, 0.00013433300000000037, 0.00013465299999999847, 0.0001345689999999941, 0.0001345280000000018, 0.00013487499999999958, 0.00013434699999999994, 0.00013472199999999684, 0.00013454200000000138, 0.0001349719999999971, 0.0001339169999999973, 0.00013488899999999915, 0.00013462499999999933, 0.0001342770000000021, 0.0001340280000000013, 0.0001339730000000025, 0.00013434699999999994]</msg>
<status status="PASS" starttime="20201030 18:33:55.111" endtime="20201030 18:33:55.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.100" endtime="20201030 18:33:55.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:55.127" endtime="20201030 18:33:55.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.122" endtime="20201030 18:33:55.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.120" endtime="20201030 18:33:55.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.610" endtime="20201030 18:33:55.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:54.609" endtime="20201030 18:33:55.152"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:55.175" endtime="20201030 18:33:55.197"></status>
</kw>
<msg timestamp="20201030 18:33:55.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:55.171" endtime="20201030 18:33:55.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:55.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:55.200" endtime="20201030 18:33:55.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:55.207" endtime="20201030 18:33:55.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.164" endtime="20201030 18:33:55.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.158" endtime="20201030 18:33:55.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:55.232" endtime="20201030 18:33:55.584"></status>
</kw>
<msg timestamp="20201030 18:33:55.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039851278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039986764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:55.228" endtime="20201030 18:33:55.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:55.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039851278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039986764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:55.593" endtime="20201030 18:33:55.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:55.611" endtime="20201030 18:33:55.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.220" endtime="20201030 18:33:55.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.215" endtime="20201030 18:33:55.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:55.629" level="INFO">${RESULT} = [{'diff': 0.0001354860000000041}, {'diff': 0.00013548699999999664}, {'diff': 0.0001354440000000054}, {'diff': 0.00013587500000000058}, {'diff': 0.00013526299999999658}, {'diff': 0.00013516700000000548...</msg>
<status status="PASS" starttime="20201030 18:33:55.620" endtime="20201030 18:33:55.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:55.640" level="INFO">${ACCURACY} = {'diff': [0.0001354860000000041, 0.00013548699999999664, 0.0001354440000000054, 0.00013587500000000058, 0.00013526299999999658, 0.00013516700000000548, 0.00013548599999999716, 0.0001358469999999945, 0...</msg>
<status status="PASS" starttime="20201030 18:33:55.631" endtime="20201030 18:33:55.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:55.651" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 18:33:55.648" endtime="20201030 18:33:55.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:55.656" level="INFO">VALUE: [0.0001354860000000041, 0.00013548699999999664, 0.0001354440000000054, 0.00013587500000000058, 0.00013526299999999658, 0.00013516700000000548, 0.00013548599999999716, 0.0001358469999999945, 0.0001356809999999986, 0.00013574999999999698, 0.00013588900000000015, 0.00013552799999999587, 0.0001354589999999975, 0.00013406900000000055, 0.0001355139999999963, 0.00013516699999999854, 0.00013457000000000052, 0.00013584700000000144, 0.0001354440000000054, 0.00013598599999999766, 0.0001354860000000041, 0.00013561100000000076, 0.0001355410000000029, 0.000135346999999994, 0.00013536099999999357, 0.00013556900000000205, 0.0001354719999999976, 0.00013544500000000487, 0.00013555500000000248, 0.00013508300000000112, 0.00013529200000000213, 0.00013529200000000213, 0.00013519499999999768, 0.0001350269999999959, 0.00013565299999999947, 0.00013554200000000238, 0.0001350840000000006, 0.00013505599999999451, 0.00013592999999999938, 0.00013538899999999965, 0.00013533300000000137, 0.00013584700000000144, 0.00013581999999999483, 0.00013533300000000137, 0.0001350410000000024, 0.00013587500000000058, 0.00013505500000000198, 0.00013570799999999827, 0.00013538899999999965, 0.0001349169999999983]</msg>
<status status="PASS" starttime="20201030 18:33:55.653" endtime="20201030 18:33:55.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.641" endtime="20201030 18:33:55.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:55.668" endtime="20201030 18:33:55.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.664" endtime="20201030 18:33:55.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.661" endtime="20201030 18:33:55.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.154" endtime="20201030 18:33:55.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.153" endtime="20201030 18:33:55.694"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:55.716" endtime="20201030 18:33:55.739"></status>
</kw>
<msg timestamp="20201030 18:33:55.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:55.713" endtime="20201030 18:33:55.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:55.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:55.742" endtime="20201030 18:33:55.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:55.749" endtime="20201030 18:33:55.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.706" endtime="20201030 18:33:55.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.700" endtime="20201030 18:33:55.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:55.772" endtime="20201030 18:33:56.131"></status>
</kw>
<msg timestamp="20201030 18:33:56.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040176153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040312542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:55.769" endtime="20201030 18:33:56.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:56.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040176153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040312542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:56.140" endtime="20201030 18:33:56.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.159" endtime="20201030 18:33:56.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.762" endtime="20201030 18:33:56.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.757" endtime="20201030 18:33:56.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:56.176" level="INFO">${RESULT} = [{'diff': 0.00013638900000000065}, {'diff': 0.0001359719999999981}, {'diff': 0.00013543099999999836}, {'diff': 0.00013607000000000202}, {'diff': 0.00013633300000000237}, {'diff': 0.0001359859999999976...</msg>
<status status="PASS" starttime="20201030 18:33:56.167" endtime="20201030 18:33:56.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:56.185" level="INFO">${ACCURACY} = {'diff': [0.00013638900000000065, 0.0001359719999999981, 0.00013543099999999836, 0.00013607000000000202, 0.00013633300000000237, 0.00013598599999999766, 0.00013624999999999748, 0.00013598599999999766,...</msg>
<status status="PASS" starttime="20201030 18:33:56.178" endtime="20201030 18:33:56.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:56.196" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 18:33:56.193" endtime="20201030 18:33:56.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:56.201" level="INFO">VALUE: [0.00013638900000000065, 0.0001359719999999981, 0.00013543099999999836, 0.00013607000000000202, 0.00013633300000000237, 0.00013598599999999766, 0.00013624999999999748, 0.00013598599999999766, 0.00013630500000000323, 0.0001356389999999999, 0.00013529099999999572, 0.0001366390000000009, 0.0001365139999999973, 0.00013604200000000288, 0.00013654200000000338, 0.00013691600000000081, 0.00013627799999999662, 0.00013608399999999465, 0.0001363060000000027, 0.00013640300000000022, 0.00013634700000000194, 0.00013611100000000126, 0.00013634700000000194, 0.00013648599999999816, 0.00013677799999999712, 0.00013683299999999593, 0.00013573599999999741, 0.0001363610000000015, 0.00013651400000000424, 0.00013620799999999877, 0.00013605599999999551, 0.00013677699999999765, 0.00013691600000000081, 0.00013602799999999637, 0.00013686199999999454, 0.0001363610000000015, 0.000136264000000004, 0.00013677800000000406, 0.00013634700000000194, 0.00013562500000000033, 0.00013611100000000126, 0.00013594399999999895, 0.00013629099999999672, 0.00013612500000000083, 0.00013615299999999997, 0.00013675000000000492, 0.00013684700000000244, 0.00013608300000000212, 0.00013644499999999893, 0.00013634700000000194]</msg>
<status status="PASS" starttime="20201030 18:33:56.198" endtime="20201030 18:33:56.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.186" endtime="20201030 18:33:56.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:56.214" endtime="20201030 18:33:56.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.209" endtime="20201030 18:33:56.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.207" endtime="20201030 18:33:56.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.696" endtime="20201030 18:33:56.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:55.695" endtime="20201030 18:33:56.239"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.263" endtime="20201030 18:33:56.287"></status>
</kw>
<msg timestamp="20201030 18:33:56.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:56.260" endtime="20201030 18:33:56.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:56.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:56.291" endtime="20201030 18:33:56.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.297" endtime="20201030 18:33:56.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.252" endtime="20201030 18:33:56.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.246" endtime="20201030 18:33:56.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.321" endtime="20201030 18:33:56.666"></status>
</kw>
<msg timestamp="20201030 18:33:56.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043341472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043478944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:56.317" endtime="20201030 18:33:56.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:56.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043341472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043478944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:56.676" endtime="20201030 18:33:56.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.694" endtime="20201030 18:33:56.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.310" endtime="20201030 18:33:56.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.305" endtime="20201030 18:33:56.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:56.711" level="INFO">${RESULT} = [{'diff': 0.0001374719999999996}, {'diff': 0.00013755499999999754}, {'diff': 0.00013736099999999557}, {'diff': 0.00013736099999999557}, {'diff': 0.00013752799999999787}, {'diff': 0.0001374859999999991...</msg>
<status status="PASS" starttime="20201030 18:33:56.702" endtime="20201030 18:33:56.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:56.720" level="INFO">${ACCURACY} = {'diff': [0.0001374719999999996, 0.00013755499999999754, 0.00013736099999999557, 0.00013736099999999557, 0.00013752799999999787, 0.00013748599999999916, 0.00013705499999999704, 0.00013744400000000045,...</msg>
<status status="PASS" starttime="20201030 18:33:56.713" endtime="20201030 18:33:56.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:56.731" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 18:33:56.729" endtime="20201030 18:33:56.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:56.737" level="INFO">VALUE: [0.0001374719999999996, 0.00013755499999999754, 0.00013736099999999557, 0.00013736099999999557, 0.00013752799999999787, 0.00013748599999999916, 0.00013705499999999704, 0.00013744400000000045, 0.0001376390000000019, 0.00013745800000000002, 0.00013756999999999658, 0.00013777699999999865, 0.00013622299999999782, 0.00013737500000000208, 0.00013727799999999762, 0.000137861000000003, 0.00013755500000000448, 0.0001375139999999983, 0.0001373190000000038, 0.0001365970000000022, 0.00013740299999999428, 0.00013724999999999848, 0.0001369170000000003, 0.0001376390000000019, 0.00013749999999999873, 0.00013662500000000133, 0.00013711100000000226, 0.00013744400000000045, 0.00013708399999999565, 0.00013743100000000036, 0.000137652000000002, 0.00013699999999999823, 0.00013773599999999941, 0.00013784700000000344, 0.00013766700000000104, 0.00013743000000000088, 0.00013787500000000258, 0.00013738800000000218, 0.00013756999999999658, 0.00013699999999999823, 0.00013779099999999822, 0.0001378190000000043, 0.00013713899999999446, 0.00013784799999999597, 0.00013738900000000165, 0.0001376940000000007, 0.0001379720000000001, 0.00013734700000000294, 0.00013769500000000018, 0.0001369860000000056]</msg>
<status status="PASS" starttime="20201030 18:33:56.734" endtime="20201030 18:33:56.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.722" endtime="20201030 18:33:56.740"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:56.751" endtime="20201030 18:33:56.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.745" endtime="20201030 18:33:56.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.742" endtime="20201030 18:33:56.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.241" endtime="20201030 18:33:56.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.240" endtime="20201030 18:33:56.776"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.799" endtime="20201030 18:33:56.820"></status>
</kw>
<msg timestamp="20201030 18:33:56.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:56.795" endtime="20201030 18:33:56.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:56.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:56.823" endtime="20201030 18:33:56.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.830" endtime="20201030 18:33:56.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.788" endtime="20201030 18:33:56.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.782" endtime="20201030 18:33:56.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.853" endtime="20201030 18:33:57.193"></status>
</kw>
<msg timestamp="20201030 18:33:57.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039979889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040118556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:56.849" endtime="20201030 18:33:57.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:57.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039979889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040118556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:57.203" endtime="20201030 18:33:57.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:57.221" endtime="20201030 18:33:57.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.842" endtime="20201030 18:33:57.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.838" endtime="20201030 18:33:57.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:57.238" level="INFO">${RESULT} = [{'diff': 0.00013866700000000204}, {'diff': 0.00013855500000000548}, {'diff': 0.00013880599999999826}, {'diff': 0.00013798599999999966}, {'diff': 0.00013777800000000506}, {'diff': 0.000138153000000001...</msg>
<status status="PASS" starttime="20201030 18:33:57.229" endtime="20201030 18:33:57.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:57.248" level="INFO">${ACCURACY} = {'diff': [0.00013866700000000204, 0.00013855500000000548, 0.00013880599999999826, 0.00013798599999999966, 0.00013777800000000506, 0.00013815300000000197, 0.0001373060000000037, 0.0001387919999999987, ...</msg>
<status status="PASS" starttime="20201030 18:33:57.240" endtime="20201030 18:33:57.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:57.259" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 18:33:57.257" endtime="20201030 18:33:57.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:57.265" level="INFO">VALUE: [0.00013866700000000204, 0.00013855500000000548, 0.00013880599999999826, 0.00013798599999999966, 0.00013777800000000506, 0.00013815300000000197, 0.0001373060000000037, 0.0001387919999999987, 0.00013855499999999854, 0.0001374170000000008, 0.00013816700000000154, 0.0001383049999999983, 0.00013833299999999743, 0.00013855499999999854, 0.0001380139999999988, 0.00013730500000000423, 0.00013833400000000384, 0.00013854099999999897, 0.0001379720000000001, 0.00013874999999999998, 0.00013859699999999725, 0.0001381520000000025, 0.00013876399999999955, 0.00013870800000000127, 0.00013812500000000283, 0.00013824999999999948, 0.00013834700000000394, 0.00013869499999999424, 0.00013777699999999865, 0.00013841699999999485, 0.0001376119999999953, 0.00013852799999999887, 0.00013776399999999855, 0.00013806999999999708, 0.00013858299999999768, 0.0001388060000000052, 0.00013888900000000315, 0.0001381249999999959, 0.0001381249999999959, 0.00013876399999999955, 0.00013713899999999446, 0.0001385139999999993, 0.00013823599999999991, 0.00013893099999999492, 0.0001388339999999974, 0.00013837500000000308, 0.00013842999999999495, 0.00013845800000000102, 0.0001381940000000012, 0.0001386799999999952]</msg>
<status status="PASS" starttime="20201030 18:33:57.262" endtime="20201030 18:33:57.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.250" endtime="20201030 18:33:57.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:57.278" endtime="20201030 18:33:57.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.273" endtime="20201030 18:33:57.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.270" endtime="20201030 18:33:57.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.778" endtime="20201030 18:33:57.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.777" endtime="20201030 18:33:57.303"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:57.326" endtime="20201030 18:33:57.348"></status>
</kw>
<msg timestamp="20201030 18:33:57.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:57.323" endtime="20201030 18:33:57.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:57.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:57.351" endtime="20201030 18:33:57.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:57.357" endtime="20201030 18:33:57.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.316" endtime="20201030 18:33:57.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.310" endtime="20201030 18:33:57.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:57.396" endtime="20201030 18:33:57.739"></status>
</kw>
<msg timestamp="20201030 18:33:57.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040450069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040588861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:57.389" endtime="20201030 18:33:57.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:57.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040450069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040588861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:57.748" endtime="20201030 18:33:57.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:57.767" endtime="20201030 18:33:57.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.380" endtime="20201030 18:33:57.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.371" endtime="20201030 18:33:57.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:57.784" level="INFO">${RESULT} = [{'diff': 0.0001387919999999987}, {'diff': 0.0001384590000000005}, {'diff': 0.0001392089999999943}, {'diff': 0.00013961100000000476}, {'diff': 0.00013876399999999955}, {'diff': 0.00013950000000000073}...</msg>
<status status="PASS" starttime="20201030 18:33:57.775" endtime="20201030 18:33:57.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:57.795" level="INFO">${ACCURACY} = {'diff': [0.0001387919999999987, 0.0001384590000000005, 0.0001392089999999943, 0.00013961100000000476, 0.00013876399999999955, 0.00013950000000000073, 0.0001380689999999976, 0.0001395970000000052, 0.0...</msg>
<status status="PASS" starttime="20201030 18:33:57.786" endtime="20201030 18:33:57.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:57.806" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 18:33:57.803" endtime="20201030 18:33:57.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:57.811" level="INFO">VALUE: [0.0001387919999999987, 0.0001384590000000005, 0.0001392089999999943, 0.00013961100000000476, 0.00013876399999999955, 0.00013950000000000073, 0.0001380689999999976, 0.0001395970000000052, 0.00013950000000000073, 0.0001395140000000003, 0.00013912500000000383, 0.00013944400000000245, 0.0001392219999999944, 0.00013941599999999638, 0.00013897300000000057, 0.0001397219999999949, 0.00013920900000000125, 0.0001390840000000046, 0.00013965299999999653, 0.00013929099999999972, 0.0001388049999999988, 0.00013916600000000307, 0.00013824999999999948, 0.0001391940000000022, 0.00013952799999999987, 0.00013962500000000433, 0.00013927700000000015, 0.000139346999999998, 0.00013956999999999858, 0.00013937499999999714, 0.0001398469999999985, 0.00013890300000000272, 0.00013908299999999818, 0.0001386390000000029, 0.00013905599999999851, 0.0001394170000000028, 0.0001396810000000026, 0.00013969399999999577, 0.00013911099999999732, 0.00013994400000000295, 0.0001395140000000003, 0.00013905599999999851, 0.00013955599999999901, 0.00013932000000000527, 0.00013955499999999954, 0.0001396249999999974, 0.00013945799999999509, 0.00013918099999999517, 0.0001394999999999938, 0.00013995899999999506]</msg>
<status status="PASS" starttime="20201030 18:33:57.808" endtime="20201030 18:33:57.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.796" endtime="20201030 18:33:57.814"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:57.824" endtime="20201030 18:33:57.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.819" endtime="20201030 18:33:57.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.817" endtime="20201030 18:33:57.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.306" endtime="20201030 18:33:57.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.304" endtime="20201030 18:33:57.849"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:57.871" endtime="20201030 18:33:57.893"></status>
</kw>
<msg timestamp="20201030 18:33:57.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:57.868" endtime="20201030 18:33:57.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:57.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:57.896" endtime="20201030 18:33:57.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:57.903" endtime="20201030 18:33:57.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.861" endtime="20201030 18:33:57.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.855" endtime="20201030 18:33:57.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:57.926" endtime="20201030 18:33:58.269"></status>
</kw>
<msg timestamp="20201030 18:33:58.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039895431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040036153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:57.922" endtime="20201030 18:33:58.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:58.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039895431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040036153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:58.278" endtime="20201030 18:33:58.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:58.297" endtime="20201030 18:33:58.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.915" endtime="20201030 18:33:58.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.911" endtime="20201030 18:33:58.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:58.314" level="INFO">${RESULT} = [{'diff': 0.0001407219999999959}, {'diff': 0.0001398889999999972}, {'diff': 0.0001403889999999977}, {'diff': 0.00014077800000000112}, {'diff': 0.00014019399999999627}, {'diff': 0.00014004100000000047}...</msg>
<status status="PASS" starttime="20201030 18:33:58.305" endtime="20201030 18:33:58.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:58.324" level="INFO">${ACCURACY} = {'diff': [0.0001407219999999959, 0.0001398889999999972, 0.0001403889999999977, 0.00014077800000000112, 0.00014019399999999627, 0.00014004100000000047, 0.00014023600000000191, 0.0001408469999999995, 0....</msg>
<status status="PASS" starttime="20201030 18:33:58.317" endtime="20201030 18:33:58.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:58.335" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 18:33:58.333" endtime="20201030 18:33:58.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:58.341" level="INFO">VALUE: [0.0001407219999999959, 0.0001398889999999972, 0.0001403889999999977, 0.00014077800000000112, 0.00014019399999999627, 0.00014004100000000047, 0.00014023600000000191, 0.0001408469999999995, 0.00014079199999999376, 0.00013920800000000177, 0.00014041600000000432, 0.00014031899999999986, 0.00014033299999999943, 0.00014090299999999778, 0.00014048600000000216, 0.00014066600000000457, 0.00013997199999999516, 0.00014026400000000105, 0.0001400129999999944, 0.00013941599999999638, 0.00014018000000000364, 0.0001405140000000013, 0.00014016700000000354, 0.00014006999999999908, 0.0001401249999999979, 0.0001409170000000043, 0.0001406669999999971, 0.00013975000000000098, 0.00013908300000000512, 0.00014092999999999745, 0.00014033299999999943, 0.00014002800000000037, 0.00013997199999999516, 0.0001402920000000002, 0.00014026400000000105, 0.00014009699999999875, 0.0001408469999999995, 0.0001403339999999989, 0.00014065299999999753, 0.000140861000000006, 0.00014076400000000155, 0.00014015299999999703, 0.00013958399999999815, 0.0001401810000000031, 0.00013940299999999628, 0.0001396940000000027, 0.00014033299999999943, 0.00014080600000000026, 0.0001404720000000026, 0.00014079100000000122]</msg>
<status status="PASS" starttime="20201030 18:33:58.338" endtime="20201030 18:33:58.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.326" endtime="20201030 18:33:58.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:58.354" endtime="20201030 18:33:58.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.349" endtime="20201030 18:33:58.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.347" endtime="20201030 18:33:58.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.851" endtime="20201030 18:33:58.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:57.850" endtime="20201030 18:33:58.379"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:58.402" endtime="20201030 18:33:58.424"></status>
</kw>
<msg timestamp="20201030 18:33:58.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:58.398" endtime="20201030 18:33:58.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:58.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:58.428" endtime="20201030 18:33:58.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:58.434" endtime="20201030 18:33:58.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.391" endtime="20201030 18:33:58.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.385" endtime="20201030 18:33:58.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:58.458" endtime="20201030 18:33:58.802"></status>
</kw>
<msg timestamp="20201030 18:33:58.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041476319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041617361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:58.454" endtime="20201030 18:33:58.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:58.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041476319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041617361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:58.811" endtime="20201030 18:33:58.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:58.829" endtime="20201030 18:33:58.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.447" endtime="20201030 18:33:58.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.442" endtime="20201030 18:33:58.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:58.846" level="INFO">${RESULT} = [{'diff': 0.00014104200000000094}, {'diff': 0.0001418889999999992}, {'diff': 0.00014145800000000402}, {'diff': 0.00014116600000000507}, {'diff': 0.00014145799999999709}, {'diff': 0.0001412920000000012...</msg>
<status status="PASS" starttime="20201030 18:33:58.838" endtime="20201030 18:33:58.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:58.858" level="INFO">${ACCURACY} = {'diff': [0.00014104200000000094, 0.0001418889999999992, 0.00014145800000000402, 0.00014116600000000507, 0.00014145799999999709, 0.0001412920000000012, 0.00014175000000000298, 0.00014163899999999896, ...</msg>
<status status="PASS" starttime="20201030 18:33:58.848" endtime="20201030 18:33:58.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:58.870" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 18:33:58.868" endtime="20201030 18:33:58.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:58.875" level="INFO">VALUE: [0.00014104200000000094, 0.0001418889999999992, 0.00014145800000000402, 0.00014116600000000507, 0.00014145799999999709, 0.0001412920000000012, 0.00014175000000000298, 0.00014163899999999896, 0.00014100000000000223, 0.00014122200000000334, 0.00014180600000000126, 0.0001416799999999982, 0.00014105500000000104, 0.00014061099999999882, 0.00013993100000000286, 0.00014119500000000368, 0.00014105600000000051, 0.0001415549999999946, 0.000141347, 0.00014132000000000033, 0.00014097299999999563, 0.00014075000000000198, 0.00014193099999999792, 0.0001413339999999999, 0.00014072200000000284, 0.00014165299999999853, 0.00014008300000000612, 0.00014182000000000083, 0.0001411249999999989, 0.0001412920000000012, 0.00014126399999999512, 0.0001411940000000042, 0.00014187499999999964, 0.000140959000000003, 0.0001414019999999988, 0.00014109699999999975, 0.00014095899999999606, 0.0001416249999999994, 0.0001414019999999988, 0.00014120799999999684, 0.00014076400000000155, 0.00014170800000000427, 0.00014137499999999914, 0.00014169499999999724, 0.00014170900000000375, 0.00014191599999999888, 0.0001411940000000042, 0.0001411940000000042, 0.00014169499999999724, 0.00014116599999999813]</msg>
<status status="PASS" starttime="20201030 18:33:58.872" endtime="20201030 18:33:58.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.860" endtime="20201030 18:33:58.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:58.890" endtime="20201030 18:33:58.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.884" endtime="20201030 18:33:58.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.881" endtime="20201030 18:33:58.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.381" endtime="20201030 18:33:58.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.380" endtime="20201030 18:33:58.915"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:58.938" endtime="20201030 18:33:58.959"></status>
</kw>
<msg timestamp="20201030 18:33:58.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:58.934" endtime="20201030 18:33:58.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:58.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:58.963" endtime="20201030 18:33:58.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:58.969" endtime="20201030 18:33:58.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.927" endtime="20201030 18:33:58.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.921" endtime="20201030 18:33:58.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:58.992" endtime="20201030 18:33:59.329"></status>
</kw>
<msg timestamp="20201030 18:33:59.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039924, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040065875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:33:58.989" endtime="20201030 18:33:59.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:59.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039924, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040065875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:33:59.338" endtime="20201030 18:33:59.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:59.357" endtime="20201030 18:33:59.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.982" endtime="20201030 18:33:59.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.977" endtime="20201030 18:33:59.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:59.375" level="INFO">${RESULT} = [{'diff': 0.00014187499999999964}, {'diff': 0.00014223600000000391}, {'diff': 0.00014233300000000143}, {'diff': 0.0001426810000000056}, {'diff': 0.00014255600000000201}, {'diff': 0.0001422629999999966...</msg>
<status status="PASS" starttime="20201030 18:33:59.366" endtime="20201030 18:33:59.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:59.390" level="INFO">${ACCURACY} = {'diff': [0.00014187499999999964, 0.00014223600000000391, 0.00014233300000000143, 0.0001426810000000056, 0.00014255600000000201, 0.00014226299999999664, 0.00014283300000000193, 0.00014181900000000136,...</msg>
<status status="PASS" starttime="20201030 18:33:59.377" endtime="20201030 18:33:59.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:59.401" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 18:33:59.398" endtime="20201030 18:33:59.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:59.406" level="INFO">VALUE: [0.00014187499999999964, 0.00014223600000000391, 0.00014233300000000143, 0.0001426810000000056, 0.00014255600000000201, 0.00014226299999999664, 0.00014283300000000193, 0.00014181900000000136, 0.00014215299999999903, 0.00014298599999999773, 0.0001414590000000035, 0.00014270799999999834, 0.00014206999999999415, 0.00014218000000000564, 0.00014177800000000212, 0.00014265200000000006, 0.00014195800000000453, 0.00014244399999999852, 0.000142041999999995, 0.00014213899999999946, 0.00014233399999999397, 0.00014259700000000125, 0.00014240299999999928, 0.00014223699999999645, 0.0001425690000000021, 0.00014258300000000168, 0.00014222299999999688, 0.00014179099999999528, 0.00014102699999999496, 0.00014208300000000118, 0.00014255500000000254, 0.000142041999999995, 0.00014268099999999867, 0.00014257000000000158, 0.00014274999999999705, 0.00014241699999999885, 0.0001427089999999978, 0.0001423889999999997, 0.00014272300000000432, 0.00014193099999999792, 0.00014292999999999945, 0.00014237500000000014, 0.0001426799999999992, 0.0001417920000000017, 0.00014247300000000407, 0.00014268099999999867, 0.00014276400000000355, 0.00014223599999999698, 0.00014286099999999413, 0.00014250000000000373]</msg>
<status status="PASS" starttime="20201030 18:33:59.403" endtime="20201030 18:33:59.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.392" endtime="20201030 18:33:59.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:59.423" endtime="20201030 18:33:59.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.418" endtime="20201030 18:33:59.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.416" endtime="20201030 18:33:59.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.917" endtime="20201030 18:33:59.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:58.916" endtime="20201030 18:33:59.448"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:59.471" endtime="20201030 18:33:59.492"></status>
</kw>
<msg timestamp="20201030 18:33:59.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:59.467" endtime="20201030 18:33:59.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:59.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:59.496" endtime="20201030 18:33:59.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:59.502" endtime="20201030 18:33:59.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.460" endtime="20201030 18:33:59.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.454" endtime="20201030 18:33:59.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:59.525" endtime="20201030 18:33:59.865"></status>
</kw>
<msg timestamp="20201030 18:33:59.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039821903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039965278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:59.522" endtime="20201030 18:33:59.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:59.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039821903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039965278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:59.874" endtime="20201030 18:33:59.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:59.892" endtime="20201030 18:33:59.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.515" endtime="20201030 18:33:59.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.510" endtime="20201030 18:33:59.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:59.910" level="INFO">${RESULT} = [{'diff': 0.00014337500000000114}, {'diff': 0.00014302799999999644}, {'diff': 0.00014373600000000541}, {'diff': 0.00014308299999999524}, {'diff': 0.00014363900000000096}, {'diff': 0.000143236000000004...</msg>
<status status="PASS" starttime="20201030 18:33:59.901" endtime="20201030 18:33:59.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:33:59.920" level="INFO">${ACCURACY} = {'diff': [0.00014337500000000114, 0.00014302799999999644, 0.00014373600000000541, 0.00014308299999999524, 0.00014363900000000096, 0.00014323600000000491, 0.00014395799999999959, 0.00014294399999999902...</msg>
<status status="PASS" starttime="20201030 18:33:59.912" endtime="20201030 18:33:59.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:59.931" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 18:33:59.929" endtime="20201030 18:33:59.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:59.937" level="INFO">VALUE: [0.00014337500000000114, 0.00014302799999999644, 0.00014373600000000541, 0.00014308299999999524, 0.00014363900000000096, 0.00014323600000000491, 0.00014395799999999959, 0.00014294399999999902, 0.000142444999999998, 0.00014350000000000473, 0.00014307000000000208, 0.00014294399999999902, 0.00014298599999999773, 0.0001433890000000007, 0.00014223599999999698, 0.00014307000000000208, 0.00014331899999999592, 0.0001435969999999953, 0.00014341699999999985, 0.00014316700000000654, 0.00014323699999999745, 0.0001440140000000048, 0.00014308400000000165, 0.00014241599999999938, 0.00014323599999999798, 0.00014261100000000082, 0.00014308300000000218, 0.0001437219999999989, 0.0001432219999999984, 0.00014387500000000164, 0.000143347000000002, 0.00014302800000000337, 0.00014283300000000193, 0.00014373599999999848, 0.00014313900000000046, 0.00014298600000000466, 0.00014324999999999755, 0.00014258300000000168, 0.0001433890000000007, 0.00014227799999999569, 0.00014320900000000525, 0.0001433050000000033, 0.00014394400000000002, 0.00014329099999999678, 0.0001426250000000004, 0.00014354100000000397, 0.0001437219999999989, 0.00014302800000000337, 0.00014395899999999906, 0.0001434020000000008]</msg>
<status status="PASS" starttime="20201030 18:33:59.934" endtime="20201030 18:33:59.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.922" endtime="20201030 18:33:59.940"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:59.949" endtime="20201030 18:33:59.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.945" endtime="20201030 18:33:59.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.942" endtime="20201030 18:33:59.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.450" endtime="20201030 18:33:59.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.449" endtime="20201030 18:33:59.974"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:59.997" endtime="20201030 18:34:00.019"></status>
</kw>
<msg timestamp="20201030 18:34:00.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:59.994" endtime="20201030 18:34:00.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:00.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:00.022" endtime="20201030 18:34:00.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:00.028" endtime="20201030 18:34:00.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.987" endtime="20201030 18:34:00.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.981" endtime="20201030 18:34:00.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:00.052" endtime="20201030 18:34:00.394"></status>
</kw>
<msg timestamp="20201030 18:34:00.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039808486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039953389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:00.048" endtime="20201030 18:34:00.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:00.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039808486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039953389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:00.404" endtime="20201030 18:34:00.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:00.422" endtime="20201030 18:34:00.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.041" endtime="20201030 18:34:00.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.036" endtime="20201030 18:34:00.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:00.439" level="INFO">${RESULT} = [{'diff': 0.00014490300000000178}, {'diff': 0.00014331899999999592}, {'diff': 0.0001442219999999994}, {'diff': 0.0001444999999999988}, {'diff': 0.00014490300000000178}, {'diff': 0.0001439999999999983}...</msg>
<status status="PASS" starttime="20201030 18:34:00.431" endtime="20201030 18:34:00.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:00.449" level="INFO">${ACCURACY} = {'diff': [0.00014490300000000178, 0.00014331899999999592, 0.0001442219999999994, 0.0001444999999999988, 0.00014490300000000178, 0.0001439999999999983, 0.00014494400000000102, 0.00014458400000000315, 0...</msg>
<status status="PASS" starttime="20201030 18:34:00.441" endtime="20201030 18:34:00.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:00.460" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 18:34:00.457" endtime="20201030 18:34:00.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:00.465" level="INFO">VALUE: [0.00014490300000000178, 0.00014331899999999592, 0.0001442219999999994, 0.0001444999999999988, 0.00014490300000000178, 0.0001439999999999983, 0.00014494400000000102, 0.00014458400000000315, 0.00014458299999999674, 0.00014420799999999984, 0.0001446250000000024, 0.00014465300000000153, 0.00014465200000000206, 0.0001437219999999989, 0.00014411199999999486, 0.0001440140000000048, 0.00014402799999999744, 0.00014476399999999862, 0.00014451399999999837, 0.00014383300000000293, 0.00014361100000000182, 0.00014459800000000272, 0.00014443100000000042, 0.00014444400000000052, 0.0001446670000000011, 0.00014420799999999984, 0.00014311100000000132, 0.00014429199999999726, 0.0001441670000000006, 0.00014469500000000024, 0.00014470800000000034, 0.00014477799999999819, 0.00014395799999999959, 0.000144347000000003, 0.00014429199999999726, 0.00014437500000000214, 0.00014437500000000214, 0.00014493000000000145, 0.00014436100000000257, 0.00014448599999999923, 0.0001446250000000024, 0.00014452799999999794, 0.00014397299999999863, 0.00014476399999999862, 0.00014401399999999787, 0.000144429999999994, 0.00014473599999999948, 0.00014411100000000232, 0.00014463900000000196, 0.00014434699999999606]</msg>
<status status="PASS" starttime="20201030 18:34:00.462" endtime="20201030 18:34:00.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.450" endtime="20201030 18:34:00.468"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:00.477" endtime="20201030 18:34:00.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.473" endtime="20201030 18:34:00.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.471" endtime="20201030 18:34:00.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.976" endtime="20201030 18:34:00.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:59.975" endtime="20201030 18:34:00.502"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:00.525" endtime="20201030 18:34:00.548"></status>
</kw>
<msg timestamp="20201030 18:34:00.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:00.522" endtime="20201030 18:34:00.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:00.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:00.552" endtime="20201030 18:34:00.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:00.558" endtime="20201030 18:34:00.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.515" endtime="20201030 18:34:00.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.509" endtime="20201030 18:34:00.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:00.581" endtime="20201030 18:34:00.920"></status>
</kw>
<msg timestamp="20201030 18:34:00.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041322681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041468514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:00.578" endtime="20201030 18:34:00.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:00.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041322681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041468514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:00.929" endtime="20201030 18:34:00.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:00.948" endtime="20201030 18:34:00.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.571" endtime="20201030 18:34:00.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.566" endtime="20201030 18:34:00.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:00.965" level="INFO">${RESULT} = [{'diff': 0.000145832999999998}, {'diff': 0.00014544400000000152}, {'diff': 0.0001451670000000016}, {'diff': 0.00014470800000000034}, {'diff': 0.0001457920000000057}, {'diff': 0.0001453890000000027}, ...</msg>
<status status="PASS" starttime="20201030 18:34:00.956" endtime="20201030 18:34:00.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:00.974" level="INFO">${ACCURACY} = {'diff': [0.000145832999999998, 0.00014544400000000152, 0.0001451670000000016, 0.00014470800000000034, 0.0001457920000000057, 0.0001453890000000027, 0.00014576399999999962, 0.00014602799999999944, 0.0...</msg>
<status status="PASS" starttime="20201030 18:34:00.967" endtime="20201030 18:34:00.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:00.985" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 18:34:00.983" endtime="20201030 18:34:00.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:00.990" level="INFO">VALUE: [0.000145832999999998, 0.00014544400000000152, 0.0001451670000000016, 0.00014470800000000034, 0.0001457920000000057, 0.0001453890000000027, 0.00014576399999999962, 0.00014602799999999944, 0.00014543100000000142, 0.00014469400000000077, 0.00014545800000000109, 0.00014531899999999792, 0.00014534799999999654, 0.00014526399999999912, 0.00014581899999999842, 0.0001454859999999933, 0.00014447199999999966, 0.0001458470000000045, 0.0001443890000000017, 0.0001456250000000034, 0.000145347000000004, 0.00014540300000000228, 0.00014576399999999962, 0.0001455419999999985, 0.00014544400000000152, 0.00014580499999999885, 0.0001451529999999951, 0.00014591600000000288, 0.000145347000000004, 0.00014573600000000048, 0.00014583300000000493, 0.00014544400000000152, 0.00014591600000000288, 0.00014541700000000185, 0.00014529099999999878, 0.00014524999999999955, 0.00014568100000000167, 0.0001454169999999949, 0.00014481900000000436, 0.00014580499999999885, 0.00014545800000000109, 0.00014438899999999477, 0.00014561099999999688, 0.00014556999999999765, 0.00014526399999999912, 0.00014541700000000185, 0.0001452769999999992, 0.00014598600000000073, 0.00014554099999999903, 0.00014452799999999794]</msg>
<status status="PASS" starttime="20201030 18:34:00.987" endtime="20201030 18:34:00.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.976" endtime="20201030 18:34:00.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:01.004" endtime="20201030 18:34:01.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.999" endtime="20201030 18:34:01.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.996" endtime="20201030 18:34:01.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.505" endtime="20201030 18:34:01.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:00.503" endtime="20201030 18:34:01.030"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:01.052" endtime="20201030 18:34:01.074"></status>
</kw>
<msg timestamp="20201030 18:34:01.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:01.049" endtime="20201030 18:34:01.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:01.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:01.077" endtime="20201030 18:34:01.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:01.084" endtime="20201030 18:34:01.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.042" endtime="20201030 18:34:01.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.036" endtime="20201030 18:34:01.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:01.107" endtime="20201030 18:34:01.449"></status>
</kw>
<msg timestamp="20201030 18:34:01.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039787181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0399335, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:34:01.104" endtime="20201030 18:34:01.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:01.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039787181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0399335, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:34:01.458" endtime="20201030 18:34:01.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:01.476" endtime="20201030 18:34:01.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.096" endtime="20201030 18:34:01.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.092" endtime="20201030 18:34:01.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:01.493" level="INFO">${RESULT} = [{'diff': 0.00014631899999999892}, {'diff': 0.0001465549999999996}, {'diff': 0.00014644400000000252}, {'diff': 0.0001462220000000014}, {'diff': 0.0001465969999999983}, {'diff': 0.00014619500000000174}...</msg>
<status status="PASS" starttime="20201030 18:34:01.485" endtime="20201030 18:34:01.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:01.504" level="INFO">${ACCURACY} = {'diff': [0.00014631899999999892, 0.0001465549999999996, 0.00014644400000000252, 0.0001462220000000014, 0.0001465969999999983, 0.00014619500000000174, 0.0001467090000000018, 0.00014611099999999738, 0....</msg>
<status status="PASS" starttime="20201030 18:34:01.495" endtime="20201030 18:34:01.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:01.515" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 18:34:01.512" endtime="20201030 18:34:01.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:01.520" level="INFO">VALUE: [0.00014631899999999892, 0.0001465549999999996, 0.00014644400000000252, 0.0001462220000000014, 0.0001465969999999983, 0.00014619500000000174, 0.0001467090000000018, 0.00014611099999999738, 0.00014637500000000414, 0.00014584699999999756, 0.00014669400000000277, 0.00014631899999999892, 0.00014641700000000285, 0.00014661099999999788, 0.0001460969999999978, 0.00014684699999999856, 0.00014669400000000277, 0.000146445000000002, 0.00014647200000000166, 0.0001462090000000013, 0.00014537500000000314, 0.00014515300000000203, 0.00014640300000000328, 0.000146445000000002, 0.00014643100000000242, 0.00014627799999999969, 0.0001464859999999943, 0.0001467079999999954, 0.00014534699999999706, 0.00014606899999999867, 0.00014634699999999806, 0.00014643100000000242, 0.00014661100000000482, 0.00014647200000000166, 0.0001460000000000003, 0.0001467079999999954, 0.0001469450000000025, 0.0001469580000000026, 0.00014676400000000062, 0.00014701400000000087, 0.00014694399999999608, 0.0001465690000000061, 0.00014643099999999548, 0.00014670899999999487, 0.00014612499999999695, 0.0001456380000000035, 0.0001451800000000017, 0.0001466250000000044, 0.00014627799999999969, 0.00014662499999999745]</msg>
<status status="PASS" starttime="20201030 18:34:01.517" endtime="20201030 18:34:01.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.506" endtime="20201030 18:34:01.523"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:01.533" endtime="20201030 18:34:01.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.528" endtime="20201030 18:34:01.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.526" endtime="20201030 18:34:01.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.032" endtime="20201030 18:34:01.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.031" endtime="20201030 18:34:01.558"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:01.580" endtime="20201030 18:34:01.602"></status>
</kw>
<msg timestamp="20201030 18:34:01.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:01.577" endtime="20201030 18:34:01.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:01.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:01.606" endtime="20201030 18:34:01.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:01.612" endtime="20201030 18:34:01.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.570" endtime="20201030 18:34:01.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.564" endtime="20201030 18:34:01.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:01.635" endtime="20201030 18:34:01.989"></status>
</kw>
<msg timestamp="20201030 18:34:01.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039825125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039972792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:01.632" endtime="20201030 18:34:01.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:02.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039825125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039972792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:01.998" endtime="20201030 18:34:02.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:02.017" endtime="20201030 18:34:02.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.625" endtime="20201030 18:34:02.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.620" endtime="20201030 18:34:02.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:02.034" level="INFO">${RESULT} = [{'diff': 0.00014766699999999716}, {'diff': 0.00014762499999999845}, {'diff': 0.00014711099999999838}, {'diff': 0.00014616600000000313}, {'diff': 0.0001472220000000024}, {'diff': 0.0001472500000000015...</msg>
<status status="PASS" starttime="20201030 18:34:02.025" endtime="20201030 18:34:02.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:02.045" level="INFO">${ACCURACY} = {'diff': [0.00014766699999999716, 0.00014762499999999845, 0.00014711099999999838, 0.00014616600000000313, 0.0001472220000000024, 0.00014725000000000155, 0.00014736099999999863, 0.00014633300000000543,...</msg>
<status status="PASS" starttime="20201030 18:34:02.036" endtime="20201030 18:34:02.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:02.056" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 18:34:02.054" endtime="20201030 18:34:02.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:02.061" level="INFO">VALUE: [0.00014766699999999716, 0.00014762499999999845, 0.00014711099999999838, 0.00014616600000000313, 0.0001472220000000024, 0.00014725000000000155, 0.00014736099999999863, 0.00014633300000000543, 0.00014743099999999648, 0.00014665199999999712, 0.00014738899999999777, 0.00014751400000000137, 0.00014708299999999924, 0.00014745900000000256, 0.0001475969999999993, 0.0001464580000000021, 0.00014720800000000284, 0.0001472220000000024, 0.0001463329999999985, 0.00014729100000000078, 0.0001475550000000006, 0.0001475130000000019, 0.00014733399999999897, 0.00014736099999999863, 0.00014729100000000078, 0.0001475550000000006, 0.00014723600000000198, 0.00014723600000000198, 0.00014773599999999554, 0.00014769400000000377, 0.00014708299999999924, 0.00014747200000000266, 0.00014781900000000042, 0.00014744499999999605, 0.00014758299999999974, 0.00014769400000000377, 0.00014736099999999863, 0.00014722199999999547, 0.00014769400000000377, 0.00014726400000000112, 0.00014761199999999836, 0.0001475420000000005, 0.00014751400000000137, 0.00014752700000000146, 0.00014662499999999745, 0.00014754100000000103, 0.0001473329999999995, 0.0001477220000000029, 0.00014747200000000266, 0.00014726400000000112]</msg>
<status status="PASS" starttime="20201030 18:34:02.058" endtime="20201030 18:34:02.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.047" endtime="20201030 18:34:02.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:02.074" endtime="20201030 18:34:02.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.070" endtime="20201030 18:34:02.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.067" endtime="20201030 18:34:02.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.560" endtime="20201030 18:34:02.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.559" endtime="20201030 18:34:02.099"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:02.122" endtime="20201030 18:34:02.145"></status>
</kw>
<msg timestamp="20201030 18:34:02.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:02.119" endtime="20201030 18:34:02.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:02.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:02.149" endtime="20201030 18:34:02.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:02.155" endtime="20201030 18:34:02.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.111" endtime="20201030 18:34:02.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.105" endtime="20201030 18:34:02.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:02.178" endtime="20201030 18:34:02.533"></status>
</kw>
<msg timestamp="20201030 18:34:02.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040160681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040309347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:02.175" endtime="20201030 18:34:02.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:02.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040160681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040309347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:02.543" endtime="20201030 18:34:02.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:02.561" endtime="20201030 18:34:02.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.168" endtime="20201030 18:34:02.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.163" endtime="20201030 18:34:02.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:02.578" level="INFO">${RESULT} = [{'diff': 0.00014866600000000563}, {'diff': 0.00014904100000000253}, {'diff': 0.0001481529999999981}, {'diff': 0.00014880500000000185}, {'diff': 0.00014820800000000384}, {'diff': 0.0001476659999999977...</msg>
<status status="PASS" starttime="20201030 18:34:02.570" endtime="20201030 18:34:02.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:02.587" level="INFO">${ACCURACY} = {'diff': [0.00014866600000000563, 0.00014904100000000253, 0.0001481529999999981, 0.00014880500000000185, 0.00014820800000000384, 0.0001476659999999977, 0.00014822299999999594, 0.0001478199999999999, 0...</msg>
<status status="PASS" starttime="20201030 18:34:02.580" endtime="20201030 18:34:02.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:02.598" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 18:34:02.596" endtime="20201030 18:34:02.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:02.603" level="INFO">VALUE: [0.00014866600000000563, 0.00014904100000000253, 0.0001481529999999981, 0.00014880500000000185, 0.00014820800000000384, 0.0001476659999999977, 0.00014822299999999594, 0.0001478199999999999, 0.00014873599999999654, 0.00014809799999999929, 0.000147833, 0.0001485829999999938, 0.00014823599999999604, 0.00014856900000000117, 0.00014876399999999568, 0.00014840300000000528, 0.00014830600000000083, 0.00014834700000000006, 0.0001473199999999994, 0.0001483749999999992, 0.00014843099999999748, 0.00014857000000000065, 0.00014862499999999945, 0.00014898600000000373, 0.00014838899999999877, 0.0001486529999999986, 0.00014823599999999604, 0.00014781900000000042, 0.0001490000000000033, 0.0001487499999999961, 0.00014899999999999636, 0.00014884700000000056, 0.0001484169999999979, 0.00014823600000000298, 0.00014865199999999912, 0.00014877800000000219, 0.00014841599999999844, 0.00014844399999999758, 0.00014887500000000664, 0.0001487770000000027, 0.00014808300000000024, 0.0001483330000000005, 0.00014876400000000262, 0.00014819500000000374, 0.00014883400000000047, 0.00014877800000000219, 0.00014729100000000078, 0.00014877699999999577, 0.0001485970000000003, 0.0001483890000000057]</msg>
<status status="PASS" starttime="20201030 18:34:02.600" endtime="20201030 18:34:02.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.589" endtime="20201030 18:34:02.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:02.616" endtime="20201030 18:34:02.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.612" endtime="20201030 18:34:02.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.609" endtime="20201030 18:34:02.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.101" endtime="20201030 18:34:02.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.100" endtime="20201030 18:34:02.641"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:02.664" endtime="20201030 18:34:02.687"></status>
</kw>
<msg timestamp="20201030 18:34:02.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:02.661" endtime="20201030 18:34:02.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:02.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:02.691" endtime="20201030 18:34:02.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:02.697" endtime="20201030 18:34:02.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.653" endtime="20201030 18:34:02.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.647" endtime="20201030 18:34:02.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:02.720" endtime="20201030 18:34:03.060"></status>
</kw>
<msg timestamp="20201030 18:34:03.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041430528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041579861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:02.717" endtime="20201030 18:34:03.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:03.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041430528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041579861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:03.069" endtime="20201030 18:34:03.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:03.088" endtime="20201030 18:34:03.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.710" endtime="20201030 18:34:03.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.705" endtime="20201030 18:34:03.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:03.105" level="INFO">${RESULT} = [{'diff': 0.0001493330000000015}, {'diff': 0.00014830600000000083}, {'diff': 0.00014969399999999883}, {'diff': 0.0001495550000000026}, {'diff': 0.00014990299999999984}, {'diff': 0.00014919500000000474...</msg>
<status status="PASS" starttime="20201030 18:34:03.096" endtime="20201030 18:34:03.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:03.114" level="INFO">${ACCURACY} = {'diff': [0.0001493330000000015, 0.00014830600000000083, 0.00014969399999999883, 0.0001495550000000026, 0.00014990299999999984, 0.00014919500000000474, 0.00014901400000000287, 0.00014980500000000285, ...</msg>
<status status="PASS" starttime="20201030 18:34:03.107" endtime="20201030 18:34:03.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:03.125" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 18:34:03.122" endtime="20201030 18:34:03.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:03.130" level="INFO">VALUE: [0.0001493330000000015, 0.00014830600000000083, 0.00014969399999999883, 0.0001495550000000026, 0.00014990299999999984, 0.00014919500000000474, 0.00014901400000000287, 0.00014980500000000285, 0.00014940199999999987, 0.00014897200000000416, 0.00014986100000000113, 0.00014861099999999988, 0.0001498750000000007, 0.00014927800000000269, 0.00014988900000000027, 0.00014811100000000632, 0.00014972199999999797, 0.00014926399999999618, 0.0001495000000000038, 0.0001499859999999978, 0.00014984700000000156, 0.0001493750000000002, 0.00014913899999999952, 0.00014945899999999762, 0.00014951400000000337, 0.00014923600000000398, 0.00014936100000000063, 0.0001489580000000046, 0.00014951399999999643, 0.00014947199999999772, 0.0001484169999999979, 0.0001492499999999966, 0.0001481529999999981, 0.0001495550000000026, 0.00014973599999999754, 0.00014997199999999822, 0.00014930600000000183, 0.00014958300000000174, 0.0001489299999999985, 0.0001491529999999991, 0.000149042000000002, 0.00014972199999999797, 0.00014979200000000276, 0.00014954100000000303, 0.00014973599999999754, 0.00014931899999999498, 0.00014858400000000022, 0.00014907000000000115, 0.0001498609999999942, 0.00014827699999999527]</msg>
<status status="PASS" starttime="20201030 18:34:03.127" endtime="20201030 18:34:03.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.116" endtime="20201030 18:34:03.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:03.144" endtime="20201030 18:34:03.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.138" endtime="20201030 18:34:03.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.136" endtime="20201030 18:34:03.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.643" endtime="20201030 18:34:03.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:02.642" endtime="20201030 18:34:03.169"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:03.192" endtime="20201030 18:34:03.214"></status>
</kw>
<msg timestamp="20201030 18:34:03.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:03.189" endtime="20201030 18:34:03.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:03.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:03.217" endtime="20201030 18:34:03.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:03.223" endtime="20201030 18:34:03.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.181" endtime="20201030 18:34:03.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.176" endtime="20201030 18:34:03.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:03.246" endtime="20201030 18:34:03.587"></status>
</kw>
<msg timestamp="20201030 18:34:03.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039758028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039908125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:03.243" endtime="20201030 18:34:03.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:03.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039758028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039908125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:03.596" endtime="20201030 18:34:03.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:03.615" endtime="20201030 18:34:03.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.236" endtime="20201030 18:34:03.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.231" endtime="20201030 18:34:03.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:03.632" level="INFO">${RESULT} = [{'diff': 0.0001500970000000018}, {'diff': 0.00014927800000000269}, {'diff': 0.00015006900000000267}, {'diff': 0.00014973600000000448}, {'diff': 0.000150833000000003}, {'diff': 0.00015066700000000016}...</msg>
<status status="PASS" starttime="20201030 18:34:03.623" endtime="20201030 18:34:03.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:03.642" level="INFO">${ACCURACY} = {'diff': [0.0001500970000000018, 0.00014927800000000269, 0.00015006900000000267, 0.00014973600000000448, 0.000150833000000003, 0.00015066700000000016, 0.00015026399999999718, 0.00015079200000000376, 0...</msg>
<status status="PASS" starttime="20201030 18:34:03.634" endtime="20201030 18:34:03.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:03.653" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 18:34:03.651" endtime="20201030 18:34:03.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:03.658" level="INFO">VALUE: [0.0001500970000000018, 0.00014927800000000269, 0.00015006900000000267, 0.00014973600000000448, 0.000150833000000003, 0.00015066700000000016, 0.00015026399999999718, 0.00015079200000000376, 0.0001499299999999995, 0.00015026399999999718, 0.00015034700000000206, 0.00015045899999999862, 0.0001503750000000012, 0.00015016699999999966, 0.0001509170000000004, 0.00015023599999999804, 0.00015063900000000102, 0.00015055499999999666, 0.00015076399999999768, 0.0001506949999999993, 0.0001504729999999982, 0.00015008399999999478, 0.00015040300000000034, 0.0001509029999999939, 0.00015022199999999847, 0.00015101399999999793, 0.0001507629999999982, 0.00014979199999999582, 0.00014958400000000122, 0.0001509859999999988, 0.0001493330000000015, 0.00015086100000000213, 0.00015077799999999725, 0.00015077799999999725, 0.00015095799999999965, 0.00014981899999999548, 0.00015019399999999933, 0.00014984700000000156, 0.00015015200000000062, 0.00015023599999999804, 0.00015104199999999707, 0.00015073599999999854, 0.00015011100000000138, 0.00015062500000000145, 0.00015011100000000138, 0.0001505829999999958, 0.00015045900000000556, 0.00015090300000000084, 0.00015072199999999897, 0.00015013900000000052]</msg>
<status status="PASS" starttime="20201030 18:34:03.655" endtime="20201030 18:34:03.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.644" endtime="20201030 18:34:03.661"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:03.671" endtime="20201030 18:34:03.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.666" endtime="20201030 18:34:03.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.664" endtime="20201030 18:34:03.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.171" endtime="20201030 18:34:03.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.170" endtime="20201030 18:34:03.696"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:03.719" endtime="20201030 18:34:03.741"></status>
</kw>
<msg timestamp="20201030 18:34:03.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:03.716" endtime="20201030 18:34:03.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:03.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:03.744" endtime="20201030 18:34:03.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:03.751" endtime="20201030 18:34:03.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.708" endtime="20201030 18:34:03.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.703" endtime="20201030 18:34:03.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:03.774" endtime="20201030 18:34:04.137"></status>
</kw>
<msg timestamp="20201030 18:34:04.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039991097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040142514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:03.771" endtime="20201030 18:34:04.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:04.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039991097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040142514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:04.146" endtime="20201030 18:34:04.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:04.165" endtime="20201030 18:34:04.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.763" endtime="20201030 18:34:04.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.759" endtime="20201030 18:34:04.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:04.183" level="INFO">${RESULT} = [{'diff': 0.00015141699999999397}, {'diff': 0.00015149999999999886}, {'diff': 0.00015187499999999576}, {'diff': 0.00015126400000000512}, {'diff': 0.0001515000000000058}, {'diff': 0.0001505129999999979...</msg>
<status status="PASS" starttime="20201030 18:34:04.174" endtime="20201030 18:34:04.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:04.194" level="INFO">${ACCURACY} = {'diff': [0.00015141699999999397, 0.00015149999999999886, 0.00015187499999999576, 0.00015126400000000512, 0.0001515000000000058, 0.00015051299999999795, 0.00015106899999999673, 0.00015161099999999594,...</msg>
<status status="PASS" starttime="20201030 18:34:04.185" endtime="20201030 18:34:04.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:04.205" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 18:34:04.202" endtime="20201030 18:34:04.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:04.210" level="INFO">VALUE: [0.00015141699999999397, 0.00015149999999999886, 0.00015187499999999576, 0.00015126400000000512, 0.0001515000000000058, 0.00015051299999999795, 0.00015106899999999673, 0.00015161099999999594, 0.00015173599999999954, 0.00015084699999999562, 0.00015144399999999364, 0.00015123700000000545, 0.00015131899999999698, 0.00015140199999999493, 0.00015129200000000426, 0.00015108400000000272, 0.00015143100000000048, 0.00015122299999999894, 0.0001512079999999999, 0.00015123599999999904, 0.00015176399999999868, 0.00015138900000000177, 0.00015105600000000358, 0.00015147199999999972, 0.00015120899999999937, 0.00015194500000000055, 0.00015188900000000227, 0.00015127799999999775, 0.0001510970000000028, 0.0001512079999999999, 0.00015194400000000108, 0.0001517629999999992, 0.00015126400000000512, 0.00015162500000000245, 0.00015065200000000112, 0.00015140300000000134, 0.00015127699999999827, 0.00015180499999999791, 0.0001516249999999955, 0.00015155600000000408, 0.00015134700000000306, 0.00015202699999999902, 0.0001510279999999975, 0.00015194400000000108, 0.00015163899999999508, 0.0001518609999999962, 0.00015163900000000202, 0.00015156900000000417, 0.00015101399999999793, 0.00015095899999999912]</msg>
<status status="PASS" starttime="20201030 18:34:04.207" endtime="20201030 18:34:04.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.195" endtime="20201030 18:34:04.213"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:04.223" endtime="20201030 18:34:04.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.219" endtime="20201030 18:34:04.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.216" endtime="20201030 18:34:04.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.698" endtime="20201030 18:34:04.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:03.697" endtime="20201030 18:34:04.248"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:04.272" endtime="20201030 18:34:04.295"></status>
</kw>
<msg timestamp="20201030 18:34:04.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:04.268" endtime="20201030 18:34:04.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:04.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:04.300" endtime="20201030 18:34:04.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:04.309" endtime="20201030 18:34:04.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.261" endtime="20201030 18:34:04.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.255" endtime="20201030 18:34:04.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:04.341" endtime="20201030 18:34:04.736"></status>
</kw>
<msg timestamp="20201030 18:34:04.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040457653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040608847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:04.336" endtime="20201030 18:34:04.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:04.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040457653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040608847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:04.746" endtime="20201030 18:34:04.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:04.764" endtime="20201030 18:34:04.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.327" endtime="20201030 18:34:04.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.320" endtime="20201030 18:34:04.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:04.782" level="INFO">${RESULT} = [{'diff': 0.00015119400000000033}, {'diff': 0.00015255499999999866}, {'diff': 0.00015273600000000054}, {'diff': 0.00015218100000000123}, {'diff': 0.00015227799999999875}, {'diff': 0.000152832999999998...</msg>
<status status="PASS" starttime="20201030 18:34:04.773" endtime="20201030 18:34:04.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:04.791" level="INFO">${ACCURACY} = {'diff': [0.00015119400000000033, 0.00015255499999999866, 0.00015273600000000054, 0.00015218100000000123, 0.00015227799999999875, 0.00015283299999999805, 0.00015277799999999925, 0.00015249999999999986...</msg>
<status status="PASS" starttime="20201030 18:34:04.784" endtime="20201030 18:34:04.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:04.802" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 18:34:04.800" endtime="20201030 18:34:04.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:04.807" level="INFO">VALUE: [0.00015119400000000033, 0.00015255499999999866, 0.00015273600000000054, 0.00015218100000000123, 0.00015227799999999875, 0.00015283299999999805, 0.00015277799999999925, 0.00015249999999999986, 0.00015222200000000047, 0.00015238900000000277, 0.0001526530000000026, 0.0001522499999999996, 0.00015199999999999936, 0.00015205600000000458, 0.00015258300000000474, 0.0001519170000000014, 0.00015137499999999526, 0.0001516660000000017, 0.0001529029999999959, 0.0001520279999999985, 0.00015279099999999934, 0.00015300000000000036, 0.00015304199999999907, 0.00015240300000000234, 0.0001524029999999954, 0.00015265200000000312, 0.00015131999999999646, 0.0001528609999999972, 0.00015231899999999798, 0.0001513750000000022, 0.00015212500000000295, 0.00015242999999999507, 0.00015295899999999418, 0.0001526809999999948, 0.00015227699999999927, 0.00015166700000000116, 0.0001528750000000037, 0.00015211100000000338, 0.0001513059999999969, 0.0001525699999999977, 0.00015222299999999994, 0.00015294500000000155, 0.00015243100000000148, 0.00015222200000000047, 0.00015209699999999687, 0.00015280499999999891, 0.00015226399999999918, 0.0001520829999999973, 0.00015244400000000158, 0.0001513609999999957]</msg>
<status status="PASS" starttime="20201030 18:34:04.804" endtime="20201030 18:34:04.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.793" endtime="20201030 18:34:04.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:04.827" endtime="20201030 18:34:04.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.823" endtime="20201030 18:34:04.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.820" endtime="20201030 18:34:04.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.250" endtime="20201030 18:34:04.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.249" endtime="20201030 18:34:04.853"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:04.878" endtime="20201030 18:34:04.904"></status>
</kw>
<msg timestamp="20201030 18:34:04.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:04.874" endtime="20201030 18:34:04.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:04.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:04.908" endtime="20201030 18:34:04.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:04.914" endtime="20201030 18:34:04.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.866" endtime="20201030 18:34:04.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.860" endtime="20201030 18:34:04.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:04.938" endtime="20201030 18:34:05.279"></status>
</kw>
<msg timestamp="20201030 18:34:05.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045339639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045492903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:04.935" endtime="20201030 18:34:05.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:05.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045339639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045492903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:05.288" endtime="20201030 18:34:05.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:05.306" endtime="20201030 18:34:05.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.927" endtime="20201030 18:34:05.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.923" endtime="20201030 18:34:05.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:05.323" level="INFO">${RESULT} = [{'diff': 0.00015326400000000018}, {'diff': 0.000152833000000005}, {'diff': 0.00015301399999999993}, {'diff': 0.00015359799999999785}, {'diff': 0.0001539170000000034}, {'diff': 0.00015298700000000026}...</msg>
<status status="PASS" starttime="20201030 18:34:05.314" endtime="20201030 18:34:05.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:05.332" level="INFO">${ACCURACY} = {'diff': [0.00015326400000000018, 0.000152833000000005, 0.00015301399999999993, 0.00015359799999999785, 0.0001539170000000034, 0.00015298700000000026, 0.0001536809999999958, 0.0001539449999999956, 0.0...</msg>
<status status="PASS" starttime="20201030 18:34:05.325" endtime="20201030 18:34:05.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:05.343" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 18:34:05.340" endtime="20201030 18:34:05.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:05.349" level="INFO">VALUE: [0.00015326400000000018, 0.000152833000000005, 0.00015301399999999993, 0.00015359799999999785, 0.0001539170000000034, 0.00015298700000000026, 0.0001536809999999958, 0.0001539449999999956, 0.00015361100000000488, 0.00015395800000000265, 0.00015383399999999853, 0.00015326400000000018, 0.00015316699999999572, 0.0001533059999999989, 0.00015318100000000223, 0.00015359699999999837, 0.00015377700000000077, 0.0001539170000000034, 0.00015231899999999798, 0.00015266700000000216, 0.00015400000000000136, 0.00015397199999999528, 0.00015392999999999657, 0.0001530970000000048, 0.00015342999999999607, 0.00015229199999999832, 0.00015319499999999486, 0.00015383299999999905, 0.00015361099999999794, 0.0001523059999999979, 0.0001533750000000042, 0.0001536939999999959, 0.00015305499999999916, 0.00015401400000000093, 0.00015280499999999891, 0.00015334700000000506, 0.00015309800000000429, 0.00015373600000000154, 0.000153528, 0.00015311099999999744, 0.00015376400000000068, 0.00015300000000000036, 0.0001537500000000011, 0.00015398599999999485, 0.00015233400000000397, 0.00015344500000000205, 0.00015306900000000567, 0.00015331999999999846, 0.00015313899999999658, 0.00015401400000000093]</msg>
<status status="PASS" starttime="20201030 18:34:05.345" endtime="20201030 18:34:05.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.334" endtime="20201030 18:34:05.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:05.362" endtime="20201030 18:34:05.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.357" endtime="20201030 18:34:05.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.354" endtime="20201030 18:34:05.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.856" endtime="20201030 18:34:05.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:04.854" endtime="20201030 18:34:05.387"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:05.410" endtime="20201030 18:34:05.432"></status>
</kw>
<msg timestamp="20201030 18:34:05.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:05.406" endtime="20201030 18:34:05.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:05.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:05.435" endtime="20201030 18:34:05.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:05.441" endtime="20201030 18:34:05.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.399" endtime="20201030 18:34:05.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.394" endtime="20201030 18:34:05.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:05.464" endtime="20201030 18:34:05.814"></status>
</kw>
<msg timestamp="20201030 18:34:05.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039278389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039432319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:05.461" endtime="20201030 18:34:05.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:05.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039278389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039432319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:05.823" endtime="20201030 18:34:05.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:05.842" endtime="20201030 18:34:05.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.454" endtime="20201030 18:34:05.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.449" endtime="20201030 18:34:05.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:05.859" level="INFO">${RESULT} = [{'diff': 0.0001539300000000035}, {'diff': 0.0001549449999999966}, {'diff': 0.00015448599999999535}, {'diff': 0.00015397200000000222}, {'diff': 0.00015406899999999973}, {'diff': 0.00015411099999999844...</msg>
<status status="PASS" starttime="20201030 18:34:05.850" endtime="20201030 18:34:05.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:05.869" level="INFO">${ACCURACY} = {'diff': [0.0001539300000000035, 0.0001549449999999966, 0.00015448599999999535, 0.00015397200000000222, 0.00015406899999999973, 0.00015411099999999844, 0.0001544860000000023, 0.00015490199999999843, 0...</msg>
<status status="PASS" starttime="20201030 18:34:05.861" endtime="20201030 18:34:05.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:05.880" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 18:34:05.878" endtime="20201030 18:34:05.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:05.885" level="INFO">VALUE: [0.0001539300000000035, 0.0001549449999999966, 0.00015448599999999535, 0.00015397200000000222, 0.00015406899999999973, 0.00015411099999999844, 0.0001544860000000023, 0.00015490199999999843, 0.00015368000000000326, 0.00015483399999999953, 0.00015416700000000366, 0.000155013999999995, 0.00015429100000000084, 0.00015481900000000048, 0.0001542500000000016, 0.00015322200000000147, 0.00015423600000000204, 0.00015465299999999765, 0.00015434800000000554, 0.0001544029999999974, 0.0001540410000000006, 0.00015429200000000032, 0.0001545829999999998, 0.00015444500000000305, 0.00015500000000000236, 0.00015426400000000118, 0.00015441699999999697, 0.00015351400000000043, 0.00015406899999999973, 0.00015447200000000272, 0.00015472200000000297, 0.00015426399999999424, 0.00015405500000000016, 0.0001548609999999992, 0.0001533609999999977, 0.00015316700000000266, 0.00015433299999999955, 0.0001533609999999977, 0.00015444399999999664, 0.0001544860000000023, 0.0001541530000000041, 0.00015424999999999467, 0.0001538750000000047, 0.00015350000000000086, 0.0001546530000000046, 0.00015463899999999808, 0.00015440300000000434, 0.00015351400000000043, 0.00015352700000000052, 0.00015458399999999928]</msg>
<status status="PASS" starttime="20201030 18:34:05.883" endtime="20201030 18:34:05.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.871" endtime="20201030 18:34:05.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:05.898" endtime="20201030 18:34:05.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.894" endtime="20201030 18:34:05.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.891" endtime="20201030 18:34:05.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.390" endtime="20201030 18:34:05.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.388" endtime="20201030 18:34:05.924"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:05.946" endtime="20201030 18:34:05.970"></status>
</kw>
<msg timestamp="20201030 18:34:05.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:05.943" endtime="20201030 18:34:05.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:05.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:05.973" endtime="20201030 18:34:05.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:05.980" endtime="20201030 18:34:05.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.936" endtime="20201030 18:34:05.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.930" endtime="20201030 18:34:05.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:06.003" endtime="20201030 18:34:06.355"></status>
</kw>
<msg timestamp="20201030 18:34:06.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040263083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040418708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:06.000" endtime="20201030 18:34:06.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:06.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040263083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040418708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:06.364" endtime="20201030 18:34:06.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:06.382" endtime="20201030 18:34:06.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.992" endtime="20201030 18:34:06.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.988" endtime="20201030 18:34:06.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:06.400" level="INFO">${RESULT} = [{'diff': 0.00015562499999999951}, {'diff': 0.0001559300000000055}, {'diff': 0.0001554730000000032}, {'diff': 0.00015566700000000516}, {'diff': 0.00015497299999999575}, {'diff': 0.00015415299999999715...</msg>
<status status="PASS" starttime="20201030 18:34:06.391" endtime="20201030 18:34:06.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:06.411" level="INFO">${ACCURACY} = {'diff': [0.00015562499999999951, 0.0001559300000000055, 0.0001554730000000032, 0.00015566700000000516, 0.00015497299999999575, 0.00015415299999999715, 0.0001553609999999997, 0.00015569499999999736, 0...</msg>
<status status="PASS" starttime="20201030 18:34:06.402" endtime="20201030 18:34:06.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:06.422" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 18:34:06.419" endtime="20201030 18:34:06.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:06.427" level="INFO">VALUE: [0.00015562499999999951, 0.0001559300000000055, 0.0001554730000000032, 0.00015566700000000516, 0.00015497299999999575, 0.00015415299999999715, 0.0001553609999999997, 0.00015569499999999736, 0.00015561099999999994, 0.0001552779999999948, 0.00015429200000000032, 0.00015562499999999951, 0.00015551400000000243, 0.00015462500000000545, 0.0001555139999999955, 0.00015517999999999782, 0.00015476400000000168, 0.000156013999999996, 0.00015483399999999953, 0.00015504200000000107, 0.00015550000000000286, 0.0001554579999999972, 0.00015509799999999935, 0.0001555139999999955, 0.0001556809999999978, 0.00015577699999999584, 0.00015565299999999865, 0.0001559860000000038, 0.00015526299999999577, 0.00015511099999999944, 0.00015545800000000415, 0.00015499999999999542, 0.00015559700000000037, 0.0001554159999999985, 0.00015411099999999844, 0.00015505600000000064, 0.00015537499999999926, 0.0001550700000000002, 0.0001554449999999971, 0.00015526399999999524, 0.00015543099999999754, 0.00015543100000000448, 0.00015481900000000048, 0.00015530599999999395, 0.0001550410000000016, 0.00015501300000000245, 0.0001556379999999996, 0.00015551400000000243, 0.00015583400000000053, 0.00015516699999999772]</msg>
<status status="PASS" starttime="20201030 18:34:06.424" endtime="20201030 18:34:06.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.412" endtime="20201030 18:34:06.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:06.440" endtime="20201030 18:34:06.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.435" endtime="20201030 18:34:06.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.433" endtime="20201030 18:34:06.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.926" endtime="20201030 18:34:06.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:05.925" endtime="20201030 18:34:06.465"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:06.488" endtime="20201030 18:34:06.512"></status>
</kw>
<msg timestamp="20201030 18:34:06.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:06.485" endtime="20201030 18:34:06.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:06.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:06.515" endtime="20201030 18:34:06.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:06.521" endtime="20201030 18:34:06.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.478" endtime="20201030 18:34:06.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.472" endtime="20201030 18:34:06.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:06.545" endtime="20201030 18:34:06.899"></status>
</kw>
<msg timestamp="20201030 18:34:06.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040381278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040536639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:06.542" endtime="20201030 18:34:06.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:06.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040381278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040536639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:06.908" endtime="20201030 18:34:06.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:06.927" endtime="20201030 18:34:06.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.534" endtime="20201030 18:34:06.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.530" endtime="20201030 18:34:06.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:06.944" level="INFO">${RESULT} = [{'diff': 0.0001553609999999997}, {'diff': 0.00015644399999999864}, {'diff': 0.00015624999999999667}, {'diff': 0.00015627700000000327}, {'diff': 0.00015649999999999692}, {'diff': 0.0001562499999999966...</msg>
<status status="PASS" starttime="20201030 18:34:06.935" endtime="20201030 18:34:06.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:06.953" level="INFO">${ACCURACY} = {'diff': [0.0001553609999999997, 0.00015644399999999864, 0.00015624999999999667, 0.00015627700000000327, 0.00015649999999999692, 0.00015624999999999667, 0.00015659800000000085, 0.00015632000000000146,...</msg>
<status status="PASS" starttime="20201030 18:34:06.946" endtime="20201030 18:34:06.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:06.964" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 18:34:06.961" endtime="20201030 18:34:06.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:06.969" level="INFO">VALUE: [0.0001553609999999997, 0.00015644399999999864, 0.00015624999999999667, 0.00015627700000000327, 0.00015649999999999692, 0.00015624999999999667, 0.00015659800000000085, 0.00015632000000000146, 0.00015700000000000436, 0.0001564449999999981, 0.00015695899999999818, 0.00015534700000000012, 0.00015612500000000001, 0.00015612500000000001, 0.00015627699999999634, 0.00015630500000000241, 0.00015627699999999634, 0.00015637500000000026, 0.00015698599999999785, 0.0001565689999999953, 0.00015655500000000266, 0.0001563060000000019, 0.00015679200000000282, 0.00015681899999999555, 0.00015687500000000076, 0.00015670899999999793, 0.0001565700000000017, 0.00015624999999999667, 0.00015622200000000447, 0.00015631899999999505, 0.00015620899999999743, 0.00015534700000000012, 0.00015633400000000103, 0.00015658400000000128, 0.00015648599999999735, 0.0001569860000000048, 0.00015652799999999606, 0.00015655600000000214, 0.00015681899999999555, 0.00015661100000000094, 0.00015673600000000454, 0.0001568060000000024, 0.0001568060000000024, 0.00015554200000000157, 0.00015612500000000001, 0.00015620900000000437, 0.00015608399999999384, 0.00015558299999999387, 0.00015613899999999958, 0.0001564579999999982]</msg>
<status status="PASS" starttime="20201030 18:34:06.966" endtime="20201030 18:34:06.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.955" endtime="20201030 18:34:06.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:06.982" endtime="20201030 18:34:07.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.977" endtime="20201030 18:34:07.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.975" endtime="20201030 18:34:07.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.467" endtime="20201030 18:34:07.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:06.466" endtime="20201030 18:34:07.007"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:07.030" endtime="20201030 18:34:07.056"></status>
</kw>
<msg timestamp="20201030 18:34:07.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:07.027" endtime="20201030 18:34:07.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:07.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:07.059" endtime="20201030 18:34:07.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:07.065" endtime="20201030 18:34:07.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:07.020" endtime="20201030 18:34:07.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:07.014" endtime="20201030 18:34:07.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:07.089" endtime="20201030 18:34:07.441"></status>
</kw>
<msg timestamp="20201030 18:34:07.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041945389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042103347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:07.085" endtime="20201030 18:34:07.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:07.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041945389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042103347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:07.450" endtime="20201030 18:34:07.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:07.469" endtime="20201030 18:34:07.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:07.078" endtime="20201030 18:34:07.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:07.073" endtime="20201030 18:34:07.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:07.486" level="INFO">${RESULT} = [{'diff': 0.0001579579999999997}, {'diff': 0.0001579030000000009}, {'diff': 0.00015748599999999835}, {'diff': 0.00015798599999999885}, {'diff': 0.0001570700000000022}, {'diff': 0.0001575139999999975},...</msg>
<status status="PASS" starttime="20201030 18:34:07.477" endtime="20201030 18:34:07.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:07.495" level="INFO">${ACCURACY} = {'diff': [0.0001579579999999997, 0.0001579030000000009, 0.00015748599999999835, 0.00015798599999999885, 0.0001570700000000022, 0.0001575139999999975, 0.00015783299999999612, 0.0001570280000000035, 0.0...</msg>
<status status="PASS" starttime="20201030 18:34:07.488" endtime="20201030 18:34:07.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:07.506" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 18:34:07.504" endtime="20201030 18:34:07.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:07.511" level="INFO">VALUE: [0.0001579579999999997, 0.0001579030000000009, 0.00015748599999999835, 0.00015798599999999885, 0.0001570700000000022, 0.0001575139999999975, 0.00015783299999999612, 0.0001570280000000035, 0.00015716699999999972, 0.0001576950000000063, 0.0001563339999999941, 0.00015737500000000126, 0.00015716600000000025, 0.00015709699999999494, 0.00015790200000000143, 0.00015713900000000058, 0.0001569860000000048, 0.000156222999999997, 0.00015761100000000194, 0.0001571939999999994, 0.00015758299999999587, 0.00015715200000000068, 0.00015743000000000007, 0.00015758299999999587, 0.00015774999999999817, 0.0001577909999999974, 0.00015755500000000366, 0.00015791700000000047, 0.00015761100000000194, 0.00015788900000000133, 0.0001570830000000023, 0.0001578610000000022, 0.00015687500000000076, 0.00015663899999999314, 0.00015747199999999878, 0.00015636099999999375, 0.000158013999999998, 0.00015670799999999846, 0.00015672199999999803, 0.00015758299999999587, 0.0001565410000000031, 0.00015744399999999964, 0.00015716600000000025, 0.00015748599999999835, 0.0001574860000000053, 0.00015772199999999903, 0.00015805499999999723, 0.00015744399999999964, 0.0001577779999999973, 0.00015797199999999928]</msg>
<status status="PASS" starttime="20201030 18:34:07.508" endtime="20201030 18:34:07.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:07.497" endtime="20201030 18:34:07.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:07.525" endtime="20201030 18:34:07.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:07.520" endtime="20201030 18:34:07.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:07.517" endtime="20201030 18:34:07.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:07.010" endtime="20201030 18:34:07.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:07.008" endtime="20201030 18:34:07.551"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:07.574" endtime="20201030 18:34:07.597"></status>
</kw>
<msg timestamp="20201030 18:34:07.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:07.570" endtime="20201030 18:34:07.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:07.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:07.601" endtime="20201030 18:34:07.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:07.607" endtime="20201030 18:34:07.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:07.563" endtime="20201030 18:34:07.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:07.557" endtime="20201030 18:34:07.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:07.632" endtime="20201030 18:34:07.975"></status>
</kw>
<msg timestamp="20201030 18:34:07.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040079472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040237556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:07.629" endtime="20201030 18:34:07.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:08.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040079472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040237556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:07.985" endtime="20201030 18:34:08.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:08.003" endtime="20201030 18:34:08.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:07.621" endtime="20201030 18:34:08.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:07.616" endtime="20201030 18:34:08.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:08.020" level="INFO">${RESULT} = [{'diff': 0.00015808400000000278}, {'diff': 0.00015879200000000482}, {'diff': 0.00015843000000000107}, {'diff': 0.00015870800000000046}, {'diff': 0.00015826399999999824}, {'diff': 0.000158319999999996...</msg>
<status status="PASS" starttime="20201030 18:34:08.012" endtime="20201030 18:34:08.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:08.031" level="INFO">${ACCURACY} = {'diff': [0.00015808400000000278, 0.00015879200000000482, 0.00015843000000000107, 0.00015870800000000046, 0.00015826399999999824, 0.00015831999999999652, 0.0001582359999999991, 0.00015820799999999996,...</msg>
<status status="PASS" starttime="20201030 18:34:08.022" endtime="20201030 18:34:08.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:08.042" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 18:34:08.040" endtime="20201030 18:34:08.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:08.047" level="INFO">VALUE: [0.00015808400000000278, 0.00015879200000000482, 0.00015843000000000107, 0.00015870800000000046, 0.00015826399999999824, 0.00015831999999999652, 0.0001582359999999991, 0.00015820799999999996, 0.00015833299999999662, 0.0001581380000000021, 0.00015902799999999856, 0.00015847199999999978, 0.000159013999999999, 0.0001585830000000038, 0.00015811200000000192, 0.00015880599999999745, 0.00015856999999999677, 0.0001589580000000007, 0.0001584030000000014, 0.0001580410000000046, 0.00015861200000000242, 0.00015870800000000046, 0.00015887500000000276, 0.00015830499999999748, 0.00015887499999999583, 0.0001587359999999996, 0.00015876399999999874, 0.00015849999999999892, 0.00015887500000000276, 0.00015895900000000018, 0.0001583889999999949, 0.00015731899999999605, 0.00015844400000000064, 0.00015899999999999942, 0.00015838900000000183, 0.000158401999999995, 0.0001587359999999996, 0.00015866700000000122, 0.00015874999999999917, 0.00015732000000000246, 0.00015805600000000364, 0.00015865200000000218, 0.00015884799999999616, 0.00015887500000000276, 0.0001582779999999978, 0.00015897200000000028, 0.0001584160000000015, 0.0001576939999999999, 0.00015765200000000118, 0.0001583889999999949]</msg>
<status status="PASS" starttime="20201030 18:34:08.044" endtime="20201030 18:34:08.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.033" endtime="20201030 18:34:08.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:08.060" endtime="20201030 18:34:08.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.055" endtime="20201030 18:34:08.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.053" endtime="20201030 18:34:08.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:07.553" endtime="20201030 18:34:08.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:07.552" endtime="20201030 18:34:08.085"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:08.108" endtime="20201030 18:34:08.131"></status>
</kw>
<msg timestamp="20201030 18:34:08.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:08.105" endtime="20201030 18:34:08.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:08.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:08.134" endtime="20201030 18:34:08.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:08.140" endtime="20201030 18:34:08.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.097" endtime="20201030 18:34:08.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.092" endtime="20201030 18:34:08.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:08.163" endtime="20201030 18:34:08.503"></status>
</kw>
<msg timestamp="20201030 18:34:08.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040192431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040352194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:08.160" endtime="20201030 18:34:08.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:08.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040192431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040352194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:08.512" endtime="20201030 18:34:08.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:08.530" endtime="20201030 18:34:08.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.153" endtime="20201030 18:34:08.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.148" endtime="20201030 18:34:08.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:08.547" level="INFO">${RESULT} = [{'diff': 0.00015976300000000027}, {'diff': 0.00015963900000000308}, {'diff': 0.00015945900000000068}, {'diff': 0.00015987500000000376}, {'diff': 0.000160014}, {'diff': 0.00015908299999999737}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:34:08.539" endtime="20201030 18:34:08.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:08.558" level="INFO">${ACCURACY} = {'diff': [0.00015976300000000027, 0.00015963900000000308, 0.00015945900000000068, 0.00015987500000000376, 0.000160014, 0.00015908299999999737, 0.0001590689999999978, 0.00015987500000000376, 0.00015937...</msg>
<status status="PASS" starttime="20201030 18:34:08.549" endtime="20201030 18:34:08.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:08.569" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 18:34:08.567" endtime="20201030 18:34:08.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:08.574" level="INFO">VALUE: [0.00015976300000000027, 0.00015963900000000308, 0.00015945900000000068, 0.00015987500000000376, 0.000160014, 0.00015908299999999737, 0.0001590689999999978, 0.00015987500000000376, 0.00015937500000000326, 0.0001586810000000008, 0.00015929200000000532, 0.00015908299999999737, 0.00015962499999999658, 0.00015909699999999694, 0.00015956900000000523, 0.00015943000000000207, 0.0001583060000000039, 0.00015962500000000351, 0.00015915300000000215, 0.0001591810000000013, 0.00015955499999999873, 0.00015983299999999812, 0.00015905499999999823, 0.00015943100000000154, 0.0001583480000000026, 0.00015809800000000235, 0.0001595700000000047, 0.00015933299999999762, 0.00016004199999999913, 0.0001594309999999946, 0.0001600280000000065, 0.00015820899999999943, 0.0001598610000000042, 0.00015933300000000455, 0.00015932000000000446, 0.00015836099999999576, 0.0001591109999999965, 0.00015941700000000197, 0.00015915299999999521, 0.00016008399999999784, 0.0001590689999999978, 0.00015995799999999477, 0.00015995799999999477, 0.00015990299999999597, 0.00015881899999999755, 0.00015969500000000136, 0.0001592360000000001, 0.00015975000000000017, 0.00015954200000000557, 0.0001599030000000029]</msg>
<status status="PASS" starttime="20201030 18:34:08.571" endtime="20201030 18:34:08.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.560" endtime="20201030 18:34:08.578"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:08.587" endtime="20201030 18:34:08.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.583" endtime="20201030 18:34:08.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.580" endtime="20201030 18:34:08.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.087" endtime="20201030 18:34:08.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.086" endtime="20201030 18:34:08.612"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:08.635" endtime="20201030 18:34:08.659"></status>
</kw>
<msg timestamp="20201030 18:34:08.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:08.632" endtime="20201030 18:34:08.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:08.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:08.663" endtime="20201030 18:34:08.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:08.670" endtime="20201030 18:34:08.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.624" endtime="20201030 18:34:08.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.619" endtime="20201030 18:34:08.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:08.693" endtime="20201030 18:34:09.046"></status>
</kw>
<msg timestamp="20201030 18:34:09.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040293736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040454167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:08.690" endtime="20201030 18:34:09.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:09.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040293736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040454167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:09.056" endtime="20201030 18:34:09.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:09.074" endtime="20201030 18:34:09.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.683" endtime="20201030 18:34:09.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.678" endtime="20201030 18:34:09.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:09.092" level="INFO">${RESULT} = [{'diff': 0.00016043100000000254}, {'diff': 0.00016080599999999945}, {'diff': 0.00015970900000000093}, {'diff': 0.00016015299999999622}, {'diff': 0.00016023599999999416}, {'diff': 0.000160014}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:34:09.083" endtime="20201030 18:34:09.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:09.101" level="INFO">${ACCURACY} = {'diff': [0.00016043100000000254, 0.00016080599999999945, 0.00015970900000000093, 0.00016015299999999622, 0.00016023599999999416, 0.000160014, 0.0001596940000000019, 0.0001596940000000019, 0.000160681...</msg>
<status status="PASS" starttime="20201030 18:34:09.094" endtime="20201030 18:34:09.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:09.112" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 18:34:09.109" endtime="20201030 18:34:09.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:09.117" level="INFO">VALUE: [0.00016043100000000254, 0.00016080599999999945, 0.00015970900000000093, 0.00016015299999999622, 0.00016023599999999416, 0.000160014, 0.0001596940000000019, 0.0001596940000000019, 0.0001606810000000028, 0.00016050000000000092, 0.00016043000000000307, 0.000160014, 0.00016013900000000358, 0.00016065300000000365, 0.00016022200000000153, 0.00016059699999999844, 0.00016050000000000092, 0.00016022200000000153, 0.00016040299999999647, 0.00016062499999999758, 0.00016026400000000024, 0.0001590280000000055, 0.00016041599999999656, 0.00016033299999999862, 0.000160610999999998, 0.00015993100000000204, 0.0001596810000000018, 0.00016037500000000426, 0.00016047200000000178, 0.00016069500000000236, 0.00016065300000000365, 0.00016031899999999905, 0.00016037500000000426, 0.00016079199999999988, 0.00016032000000000546, 0.00016016700000000272, 0.00016052800000000006, 0.00016009700000000487, 0.0001607780000000003, 0.00016095900000000218, 0.0001602779999999998, 0.00015952799999999906, 0.00015981999999999802, 0.00016054100000000016, 0.0001605689999999993, 0.00016012500000000401, 0.0001596810000000018, 0.00016037500000000426, 0.0001598610000000042, 0.00016036099999999776]</msg>
<status status="PASS" starttime="20201030 18:34:09.114" endtime="20201030 18:34:09.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.102" endtime="20201030 18:34:09.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:09.129" endtime="20201030 18:34:09.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.125" endtime="20201030 18:34:09.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.122" endtime="20201030 18:34:09.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.614" endtime="20201030 18:34:09.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.613" endtime="20201030 18:34:09.155"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:09.178" endtime="20201030 18:34:09.203"></status>
</kw>
<msg timestamp="20201030 18:34:09.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:09.174" endtime="20201030 18:34:09.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:09.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:09.207" endtime="20201030 18:34:09.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:09.213" endtime="20201030 18:34:09.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.167" endtime="20201030 18:34:09.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.161" endtime="20201030 18:34:09.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:09.236" endtime="20201030 18:34:09.588"></status>
</kw>
<msg timestamp="20201030 18:34:09.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041933778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042095417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:09.233" endtime="20201030 18:34:09.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:09.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041933778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042095417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:09.597" endtime="20201030 18:34:09.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:09.615" endtime="20201030 18:34:09.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.226" endtime="20201030 18:34:09.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.221" endtime="20201030 18:34:09.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:09.633" level="INFO">${RESULT} = [{'diff': 0.00016163900000000508}, {'diff': 0.00016137499999999833}, {'diff': 0.0001614309999999966}, {'diff': 0.00016062500000000451}, {'diff': 0.0001605140000000005}, {'diff': 0.00016136199999999823...</msg>
<status status="PASS" starttime="20201030 18:34:09.624" endtime="20201030 18:34:09.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:09.642" level="INFO">${ACCURACY} = {'diff': [0.00016163900000000508, 0.00016137499999999833, 0.0001614309999999966, 0.00016062500000000451, 0.0001605140000000005, 0.00016136199999999823, 0.0001615560000000002, 0.00016125000000000167, 0...</msg>
<status status="PASS" starttime="20201030 18:34:09.635" endtime="20201030 18:34:09.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:09.653" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 18:34:09.650" endtime="20201030 18:34:09.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:09.658" level="INFO">VALUE: [0.00016163900000000508, 0.00016137499999999833, 0.0001614309999999966, 0.00016062500000000451, 0.0001605140000000005, 0.00016136199999999823, 0.0001615560000000002, 0.00016125000000000167, 0.00016200000000000242, 0.00016081899999999955, 0.00016158299999999987, 0.00016149999999999498, 0.00016191699999999754, 0.00016130599999999995, 0.00016155500000000073, 0.00016005499999999923, 0.00016147200000000278, 0.00016149999999999498, 0.00016122200000000253, 0.0001614439999999967, 0.0001605140000000005, 0.00016184799999999916, 0.00016130599999999995, 0.00016109699999999894, 0.00016120799999999602, 0.0001611940000000034, 0.0001611659999999973, 0.00016119500000000286, 0.00016141700000000397, 0.00016141700000000397, 0.00016182000000000002, 0.00016192999999999763, 0.00016105500000000023, 0.00016159699999999944, 0.0001603610000000047, 0.00016133299999999962, 0.000161014000000001, 0.00016175000000000217, 0.00016149999999999498, 0.00016109800000000535, 0.0001600689999999988, 0.00016141700000000397, 0.0001603610000000047, 0.00016154200000000063, 0.00016194499999999667, 0.00016109699999999894, 0.0001603610000000047, 0.00016115300000000415, 0.00016162499999999858, 0.0001615690000000003]</msg>
<status status="PASS" starttime="20201030 18:34:09.655" endtime="20201030 18:34:09.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.643" endtime="20201030 18:34:09.661"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:09.676" endtime="20201030 18:34:09.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.666" endtime="20201030 18:34:09.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.664" endtime="20201030 18:34:09.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.157" endtime="20201030 18:34:09.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.156" endtime="20201030 18:34:09.702"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:09.725" endtime="20201030 18:34:09.749"></status>
</kw>
<msg timestamp="20201030 18:34:09.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:09.722" endtime="20201030 18:34:09.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:09.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:09.752" endtime="20201030 18:34:09.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:09.759" endtime="20201030 18:34:09.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.715" endtime="20201030 18:34:09.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.709" endtime="20201030 18:34:09.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:09.782" endtime="20201030 18:34:10.134"></status>
</kw>
<msg timestamp="20201030 18:34:10.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040488486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040651264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:09.779" endtime="20201030 18:34:10.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:10.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040488486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040651264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:10.144" endtime="20201030 18:34:10.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:10.162" endtime="20201030 18:34:10.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.772" endtime="20201030 18:34:10.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.767" endtime="20201030 18:34:10.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:10.179" level="INFO">${RESULT} = [{'diff': 0.0001627780000000023}, {'diff': 0.00016226400000000224}, {'diff': 0.0001622780000000018}, {'diff': 0.00016241699999999804}, {'diff': 0.0001627639999999958}, {'diff': 0.00016134699999999919}...</msg>
<status status="PASS" starttime="20201030 18:34:10.170" endtime="20201030 18:34:10.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:10.190" level="INFO">${ACCURACY} = {'diff': [0.0001627780000000023, 0.00016226400000000224, 0.0001622780000000018, 0.00016241699999999804, 0.0001627639999999958, 0.00016134699999999919, 0.00016262499999999958, 0.00016262499999999958, 0...</msg>
<status status="PASS" starttime="20201030 18:34:10.181" endtime="20201030 18:34:10.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:10.200" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 18:34:10.198" endtime="20201030 18:34:10.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:10.206" level="INFO">VALUE: [0.0001627780000000023, 0.00016226400000000224, 0.0001622780000000018, 0.00016241699999999804, 0.0001627639999999958, 0.00016134699999999919, 0.00016262499999999958, 0.00016262499999999958, 0.000162611, 0.00016194400000000414, 0.00016201399999999505, 0.00016241700000000497, 0.0001623340000000001, 0.00016249999999999598, 0.0001621109999999995, 0.0001628889999999994, 0.00016229200000000138, 0.00016269499999999743, 0.0001615560000000002, 0.00016277700000000284, 0.00016200000000000242, 0.00016293100000000504, 0.00016245799999999727, 0.00016267999999999838, 0.00016236099999999976, 0.00016215299999999822, 0.00016266700000000522, 0.0001627360000000036, 0.00016213899999999865, 0.00016240299999999847, 0.00016229200000000138, 0.00016293100000000504, 0.00016294500000000461, 0.00016257000000000077, 0.00016241700000000497, 0.00016207000000000027, 0.00016287499999999983, 0.00016237499999999933, 0.00016169500000000336, 0.00016215299999999822, 0.00016282000000000102, 0.00016236199999999923, 0.00016137499999999833, 0.0001622219999999966, 0.00016212499999999908, 0.00016300000000000342, 0.00016302800000000256, 0.00016126400000000124, 0.00016220799999999702, 0.0001619580000000037]</msg>
<status status="PASS" starttime="20201030 18:34:10.203" endtime="20201030 18:34:10.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.191" endtime="20201030 18:34:10.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:10.223" endtime="20201030 18:34:10.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.219" endtime="20201030 18:34:10.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.216" endtime="20201030 18:34:10.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.705" endtime="20201030 18:34:10.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:09.703" endtime="20201030 18:34:10.248"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:10.271" endtime="20201030 18:34:10.295"></status>
</kw>
<msg timestamp="20201030 18:34:10.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:10.268" endtime="20201030 18:34:10.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:10.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:10.298" endtime="20201030 18:34:10.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:10.305" endtime="20201030 18:34:10.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.261" endtime="20201030 18:34:10.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.255" endtime="20201030 18:34:10.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:10.328" endtime="20201030 18:34:10.680"></status>
</kw>
<msg timestamp="20201030 18:34:10.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040098903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040261958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:10.325" endtime="20201030 18:34:10.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:10.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040098903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040261958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:10.690" endtime="20201030 18:34:10.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:10.708" endtime="20201030 18:34:10.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.317" endtime="20201030 18:34:10.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.313" endtime="20201030 18:34:10.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:10.726" level="INFO">${RESULT} = [{'diff': 0.00016305500000000223}, {'diff': 0.00016395899999999825}, {'diff': 0.00016234700000000019}, {'diff': 0.00016323599999999716}, {'diff': 0.0001635560000000022}, {'diff': 0.0001635830000000018...</msg>
<status status="PASS" starttime="20201030 18:34:10.717" endtime="20201030 18:34:10.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:10.738" level="INFO">${ACCURACY} = {'diff': [0.00016305500000000223, 0.00016395899999999825, 0.00016234700000000019, 0.00016323599999999716, 0.0001635560000000022, 0.00016358300000000187, 0.00016324999999999673, 0.00016359700000000144,...</msg>
<status status="PASS" starttime="20201030 18:34:10.729" endtime="20201030 18:34:10.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:10.749" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 18:34:10.747" endtime="20201030 18:34:10.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:10.754" level="INFO">VALUE: [0.00016305500000000223, 0.00016395899999999825, 0.00016234700000000019, 0.00016323599999999716, 0.0001635560000000022, 0.00016358300000000187, 0.00016324999999999673, 0.00016359700000000144, 0.0001630690000000018, 0.00016359700000000144, 0.00016337500000000033, 0.00016268099999999786, 0.0001639020000000005, 0.00016379200000000288, 0.0001637219999999981, 0.0001634439999999987, 0.0001632219999999976, 0.00016345799999999827, 0.00016325000000000367, 0.00016338800000000042, 0.00016300000000000342, 0.00016357000000000177, 0.00016379200000000288, 0.0001636659999999998, 0.00016349999999999698, 0.00016330600000000195, 0.0001635419999999957, 0.00016266699999999829, 0.000163014000000003, 0.00016337500000000033, 0.00016345899999999774, 0.00016330500000000248, 0.00016370800000000546, 0.00016325000000000367, 0.00016308400000000084, 0.00016347299999999731, 0.00016284700000000069, 0.00016316699999999879, 0.00016341699999999904, 0.00016315299999999922, 0.00016231900000000105, 0.00016301300000000352, 0.00016336099999999382, 0.00016308300000000137, 0.0001630690000000018, 0.00016340299999999947, 0.00016247199999999684, 0.00016356899999999536, 0.00016322200000000453, 0.00016354099999999622]</msg>
<status status="PASS" starttime="20201030 18:34:10.751" endtime="20201030 18:34:10.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.740" endtime="20201030 18:34:10.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:10.767" endtime="20201030 18:34:10.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.763" endtime="20201030 18:34:10.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.760" endtime="20201030 18:34:10.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.250" endtime="20201030 18:34:10.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.249" endtime="20201030 18:34:10.792"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:10.815" endtime="20201030 18:34:10.837"></status>
</kw>
<msg timestamp="20201030 18:34:10.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:10.811" endtime="20201030 18:34:10.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:10.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:10.841" endtime="20201030 18:34:10.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:10.847" endtime="20201030 18:34:10.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.804" endtime="20201030 18:34:10.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.799" endtime="20201030 18:34:10.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:10.870" endtime="20201030 18:34:11.216"></status>
</kw>
<msg timestamp="20201030 18:34:11.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0397795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039943458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:34:10.867" endtime="20201030 18:34:11.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:11.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0397795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039943458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:34:11.226" endtime="20201030 18:34:11.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:11.244" endtime="20201030 18:34:11.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.860" endtime="20201030 18:34:11.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.855" endtime="20201030 18:34:11.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:11.262" level="INFO">${RESULT} = [{'diff': 0.00016395799999999877}, {'diff': 0.00016452699999999765}, {'diff': 0.00016417999999999988}, {'diff': 0.00016320799999999802}, {'diff': 0.0001642910000000039}, {'diff': 0.0001639309999999991...</msg>
<status status="PASS" starttime="20201030 18:34:11.253" endtime="20201030 18:34:11.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:11.271" level="INFO">${ACCURACY} = {'diff': [0.00016395799999999877, 0.00016452699999999765, 0.00016417999999999988, 0.00016320799999999802, 0.0001642910000000039, 0.0001639309999999991, 0.00016315299999999922, 0.00016473699999999813, ...</msg>
<status status="PASS" starttime="20201030 18:34:11.264" endtime="20201030 18:34:11.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:11.282" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 18:34:11.279" endtime="20201030 18:34:11.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:11.287" level="INFO">VALUE: [0.00016395799999999877, 0.00016452699999999765, 0.00016417999999999988, 0.00016320799999999802, 0.0001642910000000039, 0.0001639309999999991, 0.00016315299999999922, 0.00016473699999999813, 0.00016404200000000313, 0.0001640419999999962, 0.00016501399999999805, 0.00016447300000000525, 0.00016423599999999816, 0.0001642639999999973, 0.0001649440000000002, 0.0001631810000000053, 0.00016456999999999583, 0.00016416699999999979, 0.00016454200000000363, 0.00016480499999999704, 0.0001649440000000002, 0.00016494499999999968, 0.00016402800000000356, 0.000164611000000002, 0.0001644859999999984, 0.00016404200000000313, 0.00016463900000000115, 0.00016419500000000586, 0.00016416700000000672, 0.00016502799999999762, 0.00016484700000000269, 0.0001643890000000009, 0.00016504100000000466, 0.0001635690000000023, 0.00016501399999999805, 0.00016433300000000262, 0.00016436100000000176, 0.00016334700000000119, 0.00016440300000000047, 0.0001643749999999944, 0.00016402800000000356, 0.00016381900000000255, 0.00016437500000000133, 0.00016409700000000194, 0.00016493000000000063, 0.00016491600000000106, 0.00016474999999999823, 0.00016419499999999893, 0.00016445799999999927, 0.000164611000000002]</msg>
<status status="PASS" starttime="20201030 18:34:11.284" endtime="20201030 18:34:11.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.272" endtime="20201030 18:34:11.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:11.300" endtime="20201030 18:34:11.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.295" endtime="20201030 18:34:11.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.293" endtime="20201030 18:34:11.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.794" endtime="20201030 18:34:11.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:10.793" endtime="20201030 18:34:11.325"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:11.348" endtime="20201030 18:34:11.372"></status>
</kw>
<msg timestamp="20201030 18:34:11.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:11.345" endtime="20201030 18:34:11.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:11.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:11.375" endtime="20201030 18:34:11.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:11.382" endtime="20201030 18:34:11.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.337" endtime="20201030 18:34:11.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.331" endtime="20201030 18:34:11.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:11.405" endtime="20201030 18:34:11.745"></status>
</kw>
<msg timestamp="20201030 18:34:11.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041642153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041807097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:11.402" endtime="20201030 18:34:11.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:11.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041642153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041807097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:11.755" endtime="20201030 18:34:11.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:11.774" endtime="20201030 18:34:11.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.395" endtime="20201030 18:34:11.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.390" endtime="20201030 18:34:11.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:11.791" level="INFO">${RESULT} = [{'diff': 0.0001649440000000002}, {'diff': 0.00016541700000000104}, {'diff': 0.00016530499999999754}, {'diff': 0.00016538799999999548}, {'diff': 0.0001645549999999968}, {'diff': 0.0001650980000000024}...</msg>
<status status="PASS" starttime="20201030 18:34:11.782" endtime="20201030 18:34:11.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:11.800" level="INFO">${ACCURACY} = {'diff': [0.0001649440000000002, 0.00016541700000000104, 0.00016530499999999754, 0.00016538799999999548, 0.0001645549999999968, 0.0001650980000000024, 0.00016490300000000097, 0.00016547199999999984, 0...</msg>
<status status="PASS" starttime="20201030 18:34:11.793" endtime="20201030 18:34:11.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:11.811" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 18:34:11.809" endtime="20201030 18:34:11.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:11.816" level="INFO">VALUE: [0.0001649440000000002, 0.00016541700000000104, 0.00016530499999999754, 0.00016538799999999548, 0.0001645549999999968, 0.0001650980000000024, 0.00016490300000000097, 0.00016547199999999984, 0.0001649310000000001, 0.00016552799999999812, 0.00016538799999999548, 0.0001655839999999964, 0.00016547199999999984, 0.00016551399999999855, 0.00016541700000000104, 0.00016419399999999945, 0.00016532000000000352, 0.00016562500000000258, 0.00016527799999999787, 0.00016533399999999615, 0.00016415200000000074, 0.00016519400000000045, 0.0001655969999999965, 0.00016568100000000086, 0.00016569400000000095, 0.000165096999999996, 0.00016541700000000104, 0.0001658890000000024, 0.00016420900000000543, 0.0001657639999999988, 0.00016413900000000065, 0.00016529199999999744, 0.00016452800000000406, 0.00016552800000000506, 0.00016487500000000183, 0.0001650549999999973, 0.00016562500000000258, 0.00016598699999999939, 0.0001655690000000043, 0.00016516700000000079, 0.00016543000000000113, 0.00016515300000000122, 0.00016504100000000466, 0.00016562500000000258, 0.0001653340000000031, 0.0001647230000000055, 0.00016519499999999993, 0.0001648340000000026, 0.00016519499999999993, 0.00016594499999999374]</msg>
<status status="PASS" starttime="20201030 18:34:11.814" endtime="20201030 18:34:11.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.802" endtime="20201030 18:34:11.820"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:11.831" endtime="20201030 18:34:11.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.825" endtime="20201030 18:34:11.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.822" endtime="20201030 18:34:11.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.327" endtime="20201030 18:34:11.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.326" endtime="20201030 18:34:11.856"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:11.878" endtime="20201030 18:34:11.901"></status>
</kw>
<msg timestamp="20201030 18:34:11.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:11.875" endtime="20201030 18:34:11.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:11.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:11.904" endtime="20201030 18:34:11.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:11.911" endtime="20201030 18:34:11.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.868" endtime="20201030 18:34:11.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.862" endtime="20201030 18:34:11.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:11.934" endtime="20201030 18:34:12.283"></status>
</kw>
<msg timestamp="20201030 18:34:12.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039831944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039998403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:11.931" endtime="20201030 18:34:12.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:12.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039831944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039998403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:12.293" endtime="20201030 18:34:12.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:12.311" endtime="20201030 18:34:12.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.924" endtime="20201030 18:34:12.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.919" endtime="20201030 18:34:12.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:12.328" level="INFO">${RESULT} = [{'diff': 0.00016645900000000075}, {'diff': 0.00016533299999999668}, {'diff': 0.0001661660000000023}, {'diff': 0.0001669310000000021}, {'diff': 0.00016612499999999614}, {'diff': 0.0001662220000000006}...</msg>
<status status="PASS" starttime="20201030 18:34:12.319" endtime="20201030 18:34:12.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:12.338" level="INFO">${ACCURACY} = {'diff': [0.00016645900000000075, 0.00016533299999999668, 0.0001661660000000023, 0.0001669310000000021, 0.00016612499999999614, 0.0001662220000000006, 0.00016637500000000333, 0.00016684800000000416, 0...</msg>
<status status="PASS" starttime="20201030 18:34:12.330" endtime="20201030 18:34:12.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:12.349" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 18:34:12.347" endtime="20201030 18:34:12.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:12.355" level="INFO">VALUE: [0.00016645900000000075, 0.00016533299999999668, 0.0001661660000000023, 0.0001669310000000021, 0.00016612499999999614, 0.0001662220000000006, 0.00016637500000000333, 0.00016684800000000416, 0.00016644499999999424, 0.00016609700000000394, 0.00016619500000000093, 0.00016624999999999973, 0.00016641700000000204, 0.00016619400000000145, 0.0001669860000000009, 0.00016626299999999983, 0.00016626400000000624, 0.00016700000000000048, 0.00016684699999999775, 0.0001652219999999996, 0.00016668000000000238, 0.0001663890000000029, 0.00016669500000000143, 0.00016608300000000437, 0.00016640300000000247, 0.00016652799999999912, 0.0001660419999999982, 0.0001659859999999999, 0.0001662639999999993, 0.00016665299999999578, 0.00016652799999999912, 0.00016670800000000152, 0.00016632000000000452, 0.0001667639999999998, 0.00016640299999999553, 0.00016643000000000213, 0.0001653890000000019, 0.00016520800000000002, 0.00016683299999999818, 0.00016587500000000283, 0.00016661199999999654, 0.00016666599999999587, 0.00016568100000000086, 0.00016643000000000213, 0.00016534700000000319, 0.00016636100000000376, 0.0001669860000000009, 0.00016673600000000066, 0.00016623600000000016, 0.00016708300000000537]</msg>
<status status="PASS" starttime="20201030 18:34:12.352" endtime="20201030 18:34:12.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.340" endtime="20201030 18:34:12.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:12.367" endtime="20201030 18:34:12.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.363" endtime="20201030 18:34:12.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.360" endtime="20201030 18:34:12.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.858" endtime="20201030 18:34:12.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:11.857" endtime="20201030 18:34:12.392"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:12.415" endtime="20201030 18:34:12.438"></status>
</kw>
<msg timestamp="20201030 18:34:12.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:12.412" endtime="20201030 18:34:12.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:12.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:12.441" endtime="20201030 18:34:12.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:12.448" endtime="20201030 18:34:12.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.405" endtime="20201030 18:34:12.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.399" endtime="20201030 18:34:12.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:12.472" endtime="20201030 18:34:12.814"></status>
</kw>
<msg timestamp="20201030 18:34:12.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040012319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040178375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:12.469" endtime="20201030 18:34:12.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:12.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040012319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040178375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:12.823" endtime="20201030 18:34:12.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:12.841" endtime="20201030 18:34:12.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.461" endtime="20201030 18:34:12.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.457" endtime="20201030 18:34:12.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:12.859" level="INFO">${RESULT} = [{'diff': 0.0001660560000000047}, {'diff': 0.00016727799999999987}, {'diff': 0.00016693000000000263}, {'diff': 0.00016790299999999703}, {'diff': 0.00016747200000000184}, {'diff': 0.0001679309999999961...</msg>
<status status="PASS" starttime="20201030 18:34:12.850" endtime="20201030 18:34:12.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:12.870" level="INFO">${ACCURACY} = {'diff': [0.0001660560000000047, 0.00016727799999999987, 0.00016693000000000263, 0.00016790299999999703, 0.00016747200000000184, 0.00016793099999999617, 0.0001678059999999995, 0.0001674860000000014, 0...</msg>
<status status="PASS" starttime="20201030 18:34:12.861" endtime="20201030 18:34:12.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:12.881" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 18:34:12.878" endtime="20201030 18:34:12.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:12.886" level="INFO">VALUE: [0.0001660560000000047, 0.00016727799999999987, 0.00016693000000000263, 0.00016790299999999703, 0.00016747200000000184, 0.00016793099999999617, 0.0001678059999999995, 0.0001674860000000014, 0.00016801400000000105, 0.0001674440000000027, 0.0001675969999999985, 0.0001673340000000051, 0.00016720799999999508, 0.00016783299999999918, 0.00016790300000000397, 0.00016719400000000245, 0.00016779100000000047, 0.00016786099999999832, 0.00016748599999999447, 0.0001676949999999955, 0.00016709799999999747, 0.00016767999999999644, 0.0001670560000000057, 0.00016775000000000123, 0.00016752800000000012, 0.00016773600000000166, 0.00016643000000000213, 0.00016806899999999986, 0.00016708299999999843, 0.00016719500000000193, 0.00016670800000000152, 0.00016783299999999918, 0.00016751400000000055, 0.00016719500000000193, 0.00016730499999999954, 0.00016718100000000236, 0.0001673189999999991, 0.00016765200000000424, 0.00016624999999999973, 0.00016733399999999815, 0.0001680550000000003, 0.00016762499999999764, 0.00016780600000000645, 0.00016697200000000134, 0.00016762500000000458, 0.00016765299999999678, 0.00016747200000000184, 0.00016731900000000605, 0.00016788899999999746, 0.0001670419999999992]</msg>
<status status="PASS" starttime="20201030 18:34:12.883" endtime="20201030 18:34:12.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.872" endtime="20201030 18:34:12.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:12.899" endtime="20201030 18:34:12.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.894" endtime="20201030 18:34:12.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.892" endtime="20201030 18:34:12.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.395" endtime="20201030 18:34:12.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.393" endtime="20201030 18:34:12.924"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:12.947" endtime="20201030 18:34:12.970"></status>
</kw>
<msg timestamp="20201030 18:34:12.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:12.943" endtime="20201030 18:34:12.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:12.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:12.973" endtime="20201030 18:34:12.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:12.979" endtime="20201030 18:34:12.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.936" endtime="20201030 18:34:12.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.930" endtime="20201030 18:34:12.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:13.003" endtime="20201030 18:34:13.344"></status>
</kw>
<msg timestamp="20201030 18:34:13.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040126958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0402955, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:34:13.000" endtime="20201030 18:34:13.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:13.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040126958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0402955, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:34:13.354" endtime="20201030 18:34:13.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:13.372" endtime="20201030 18:34:13.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.992" endtime="20201030 18:34:13.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.987" endtime="20201030 18:34:13.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:13.389" level="INFO">${RESULT} = [{'diff': 0.0001685420000000007}, {'diff': 0.00016820800000000302}, {'diff': 0.0001689440000000042}, {'diff': 0.00016883399999999965}, {'diff': 0.00016875000000000223}, {'diff': 0.0001688749999999989}...</msg>
<status status="PASS" starttime="20201030 18:34:13.381" endtime="20201030 18:34:13.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:13.399" level="INFO">${ACCURACY} = {'diff': [0.0001685420000000007, 0.00016820800000000302, 0.0001689440000000042, 0.00016883399999999965, 0.00016875000000000223, 0.0001688749999999989, 0.00016862499999999864, 0.00016862499999999864, 0...</msg>
<status status="PASS" starttime="20201030 18:34:13.391" endtime="20201030 18:34:13.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:13.410" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 18:34:13.407" endtime="20201030 18:34:13.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:13.415" level="INFO">VALUE: [0.0001685420000000007, 0.00016820800000000302, 0.0001689440000000042, 0.00016883399999999965, 0.00016875000000000223, 0.0001688749999999989, 0.00016862499999999864, 0.00016862499999999864, 0.00016850000000000198, 0.0001685420000000007, 0.00016861099999999907, 0.0001684310000000036, 0.00016863900000000515, 0.00016716700000000279, 0.00016879100000000147, 0.0001684299999999972, 0.00016836100000000576, 0.0001687640000000018, 0.00016870799999999658, 0.0001683190000000001, 0.00016852800000000112, 0.0001673619999999973, 0.00016755599999999926, 0.00016795900000000225, 0.000168693999999997, 0.00016872199999999615, 0.00016819500000000293, 0.00016820800000000302, 0.0001684299999999972, 0.00016895799999999683, 0.0001687499999999953, 0.00016766599999999687, 0.00016840300000000447, 0.00016833299999999968, 0.0001685969999999995, 0.00016863900000000515, 0.0001682220000000026, 0.00016900000000000248, 0.00016866700000000429, 0.0001678059999999995, 0.00016819400000000345, 0.0001670419999999992, 0.00016720800000000202, 0.00016904100000000172, 0.00016818100000000336, 0.00016817999999999694, 0.00016843000000000413, 0.00016902800000000162, 0.0001688060000000005, 0.00016869500000000343]</msg>
<status status="PASS" starttime="20201030 18:34:13.412" endtime="20201030 18:34:13.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:13.400" endtime="20201030 18:34:13.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:13.427" endtime="20201030 18:34:13.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:13.423" endtime="20201030 18:34:13.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:13.421" endtime="20201030 18:34:13.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.926" endtime="20201030 18:34:13.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.925" endtime="20201030 18:34:13.453"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:13.475" endtime="20201030 18:34:13.500"></status>
</kw>
<msg timestamp="20201030 18:34:13.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:13.472" endtime="20201030 18:34:13.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:13.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:13.503" endtime="20201030 18:34:13.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:13.510" endtime="20201030 18:34:13.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:13.465" endtime="20201030 18:34:13.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:13.459" endtime="20201030 18:34:13.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:13.533" endtime="20201030 18:34:13.873"></status>
</kw>
<msg timestamp="20201030 18:34:13.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041654139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041824083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:13.530" endtime="20201030 18:34:13.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:13.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041654139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041824083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:13.882" endtime="20201030 18:34:13.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:13.901" endtime="20201030 18:34:13.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:13.522" endtime="20201030 18:34:13.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:13.518" endtime="20201030 18:34:13.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:13.922" level="INFO">${RESULT} = [{'diff': 0.00016994399999999826}, {'diff': 0.00016918099999999742}, {'diff': 0.00016951400000000255}, {'diff': 0.00016915299999999828}, {'diff': 0.0001685420000000007}, {'diff': 0.0001697499999999963...</msg>
<status status="PASS" starttime="20201030 18:34:13.913" endtime="20201030 18:34:13.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:13.931" level="INFO">${ACCURACY} = {'diff': [0.00016994399999999826, 0.00016918099999999742, 0.00016951400000000255, 0.00016915299999999828, 0.0001685420000000007, 0.0001697499999999963, 0.00016933400000000015, 0.00016970799999999758, ...</msg>
<status status="PASS" starttime="20201030 18:34:13.924" endtime="20201030 18:34:13.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:13.943" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 18:34:13.940" endtime="20201030 18:34:13.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:13.948" level="INFO">VALUE: [0.00016994399999999826, 0.00016918099999999742, 0.00016951400000000255, 0.00016915299999999828, 0.0001685420000000007, 0.0001697499999999963, 0.00016933400000000015, 0.00016970799999999758, 0.00017001400000000305, 0.00016922199999999665, 0.00016991599999999912, 0.00016929200000000144, 0.0001694719999999969, 0.00016954100000000222, 0.0001691519999999988, 0.00016999999999999654, 0.00016954100000000222, 0.00016863800000000567, 0.00016925000000000273, 0.0001696389999999992, 0.0001697220000000041, 0.00016875000000000223, 0.00016957000000000083, 0.00016915299999999828, 0.0001689860000000029, 0.00016901400000000205, 0.0001689719999999964, 0.00016979200000000194, 0.00016920799999999708, 0.00016962499999999964, 0.0001693619999999993, 0.00016940299999999853, 0.0001690420000000012, 0.00016973600000000366, 0.0001699719999999974, 0.0001693049999999946, 0.00016851400000000155, 0.00017001400000000305, 0.00016918099999999742, 0.00016965299999999878, 0.00016895900000000325, 0.00016943099999999767, 0.0001690829999999935, 0.00016934799999999972, 0.00016952799999999518, 0.00016820899999999556, 0.00016947200000000384, 0.0001695840000000004, 0.00016908300000000043, 0.00017000000000000348]</msg>
<status status="PASS" starttime="20201030 18:34:13.945" endtime="20201030 18:34:13.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:13.933" endtime="20201030 18:34:13.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:13.962" endtime="20201030 18:34:13.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:13.956" endtime="20201030 18:34:13.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:13.954" endtime="20201030 18:34:13.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:13.455" endtime="20201030 18:34:13.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:13.453" endtime="20201030 18:34:13.988"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:14.012" endtime="20201030 18:34:14.035"></status>
</kw>
<msg timestamp="20201030 18:34:14.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:14.009" endtime="20201030 18:34:14.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:14.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:14.039" endtime="20201030 18:34:14.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:14.045" endtime="20201030 18:34:14.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:14.001" endtime="20201030 18:34:14.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:13.995" endtime="20201030 18:34:14.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:14.069" endtime="20201030 18:34:14.420"></status>
</kw>
<msg timestamp="20201030 18:34:14.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041957403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042127694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:14.065" endtime="20201030 18:34:14.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:14.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041957403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042127694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:14.429" endtime="20201030 18:34:14.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:14.447" endtime="20201030 18:34:14.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:14.058" endtime="20201030 18:34:14.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:14.053" endtime="20201030 18:34:14.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:14.465" level="INFO">${RESULT} = [{'diff': 0.00017029100000000297}, {'diff': 0.00017086100000000132}, {'diff': 0.00017082000000000208}, {'diff': 0.00017033299999999474}, {'diff': 0.00017077800000000337}, {'diff': 0.000170582999999995...</msg>
<status status="PASS" starttime="20201030 18:34:14.456" endtime="20201030 18:34:14.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:14.475" level="INFO">${ACCURACY} = {'diff': [0.00017029100000000297, 0.00017086100000000132, 0.00017082000000000208, 0.00017033299999999474, 0.00017077800000000337, 0.000170582999999995, 0.00017079099999999653, 0.0001702499999999968, 0...</msg>
<status status="PASS" starttime="20201030 18:34:14.467" endtime="20201030 18:34:14.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:14.486" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 18:34:14.484" endtime="20201030 18:34:14.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:14.491" level="INFO">VALUE: [0.00017029100000000297, 0.00017086100000000132, 0.00017082000000000208, 0.00017033299999999474, 0.00017077800000000337, 0.000170582999999995, 0.00017079099999999653, 0.0001702499999999968, 0.0001710139999999971, 0.00017030500000000254, 0.0001705139999999966, 0.00016916699999999785, 0.00016999999999999654, 0.00016936099999999982, 0.00017020799999999808, 0.0001692499999999958, 0.00017050000000000398, 0.00017036100000000082, 0.00017055600000000226, 0.00017025000000000373, 0.00017051400000000355, 0.0001702919999999955, 0.00017049999999999704, 0.00017048599999999747, 0.00017073600000000466, 0.00017088900000000046, 0.00017049999999999704, 0.00017016599999999937, 0.00017045900000000475, 0.00016938899999999896, 0.00017098599999999797, 0.00017029100000000297, 0.00017044499999999824, 0.00017062500000000064, 0.0001695269999999957, 0.00016997300000000382, 0.00017100000000000448, 0.00017012500000000014, 0.00016965299999999878, 0.0001706949999999985, 0.00016933400000000015, 0.0001707499999999973, 0.00017038899999999996, 0.00017032000000000158, 0.00017061100000000107, 0.00016920800000000402, 0.00017050000000000398, 0.00017045799999999833, 0.00016912499999999914, 0.00017019500000000493]</msg>
<status status="PASS" starttime="20201030 18:34:14.488" endtime="20201030 18:34:14.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:14.477" endtime="20201030 18:34:14.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:14.505" endtime="20201030 18:34:14.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:14.500" endtime="20201030 18:34:14.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:14.497" endtime="20201030 18:34:14.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:13.990" endtime="20201030 18:34:14.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:13.989" endtime="20201030 18:34:14.530"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:14.553" endtime="20201030 18:34:14.575"></status>
</kw>
<msg timestamp="20201030 18:34:14.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:14.549" endtime="20201030 18:34:14.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:14.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:14.579" endtime="20201030 18:34:14.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:14.585" endtime="20201030 18:34:14.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:14.542" endtime="20201030 18:34:14.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:14.536" endtime="20201030 18:34:14.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:14.608" endtime="20201030 18:34:14.948"></status>
</kw>
<msg timestamp="20201030 18:34:14.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039957486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040128583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:14.605" endtime="20201030 18:34:14.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:14.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039957486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040128583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:14.957" endtime="20201030 18:34:14.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:14.975" endtime="20201030 18:34:14.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:14.598" endtime="20201030 18:34:14.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:14.593" endtime="20201030 18:34:14.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:14.992" level="INFO">${RESULT} = [{'diff': 0.000171097000000002}, {'diff': 0.00017145799999999933}, {'diff': 0.0001716390000000012}, {'diff': 0.00017166600000000087}, {'diff': 0.00017122299999999813}, {'diff': 0.00017173599999999872}...</msg>
<status status="PASS" starttime="20201030 18:34:14.984" endtime="20201030 18:34:14.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:15.007" level="INFO">${ACCURACY} = {'diff': [0.000171097000000002, 0.00017145799999999933, 0.0001716390000000012, 0.00017166600000000087, 0.00017122299999999813, 0.00017173599999999872, 0.0001718750000000019, 0.0001713750000000014, 0.0...</msg>
<status status="PASS" starttime="20201030 18:34:14.994" endtime="20201030 18:34:15.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:15.018" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 18:34:15.016" endtime="20201030 18:34:15.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:15.024" level="INFO">VALUE: [0.000171097000000002, 0.00017145799999999933, 0.0001716390000000012, 0.00017166600000000087, 0.00017122299999999813, 0.00017173599999999872, 0.0001718750000000019, 0.0001713750000000014, 0.0001700139999999961, 0.00017020899999999756, 0.00017152799999999718, 0.00017112500000000114, 0.00017147299999999838, 0.00017056900000000236, 0.0001716949999999995, 0.00017112500000000114, 0.00017162500000000164, 0.00017122199999999865, 0.00017149999999999804, 0.00017117999999999994, 0.00017186100000000232, 0.00017132000000000258, 0.000171709000000006, 0.0001715139999999976, 0.00017162500000000164, 0.00017143099999999967, 0.0001714719999999989, 0.00017144399999999976, 0.00017109800000000147, 0.0001719719999999994, 0.00017034700000000125, 0.00017126399999999736, 0.00017144399999999976, 0.00017107000000000233, 0.00017173700000000514, 0.00017126399999999736, 0.0001715139999999976, 0.000171306000000003, 0.0001717499999999983, 0.00017065299999999978, 0.00017099999999999754, 0.00017183299999999624, 0.00017140300000000053, 0.00017098700000000439, 0.0001717499999999983, 0.00017094499999999874, 0.00017129200000000344, 0.00017162500000000164, 0.00017147299999999838, 0.00017134700000000225]</msg>
<status status="PASS" starttime="20201030 18:34:15.021" endtime="20201030 18:34:15.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:15.009" endtime="20201030 18:34:15.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:15.036" endtime="20201030 18:34:15.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:15.032" endtime="20201030 18:34:15.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:15.029" endtime="20201030 18:34:15.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:14.532" endtime="20201030 18:34:15.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:14.531" endtime="20201030 18:34:15.061"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:15.084" endtime="20201030 18:34:15.107"></status>
</kw>
<msg timestamp="20201030 18:34:15.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:15.081" endtime="20201030 18:34:15.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:15.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:15.110" endtime="20201030 18:34:15.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:15.116" endtime="20201030 18:34:15.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:15.073" endtime="20201030 18:34:15.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:15.068" endtime="20201030 18:34:15.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:15.140" endtime="20201030 18:34:15.482"></status>
</kw>
<msg timestamp="20201030 18:34:15.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039766333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039939083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:15.137" endtime="20201030 18:34:15.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:15.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039766333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039939083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:15.491" endtime="20201030 18:34:15.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:15.510" endtime="20201030 18:34:15.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:15.129" endtime="20201030 18:34:15.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:15.125" endtime="20201030 18:34:15.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:15.527" level="INFO">${RESULT} = [{'diff': 0.0001727499999999993}, {'diff': 0.00017272200000000015}, {'diff': 0.00017222199999999965}, {'diff': 0.0001724719999999999}, {'diff': 0.00017168000000000044}, {'diff': 0.0001721940000000005}...</msg>
<status status="PASS" starttime="20201030 18:34:15.518" endtime="20201030 18:34:15.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:34:15.536" level="INFO">${ACCURACY} = {'diff': [0.0001727499999999993, 0.00017272200000000015, 0.00017222199999999965, 0.0001724719999999999, 0.00017168000000000044, 0.0001721940000000005, 0.00017233400000000315, 0.0001711939999999995, 0....</msg>
<status status="PASS" starttime="20201030 18:34:15.529" endtime="20201030 18:34:15.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:15.547" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 18:34:15.545" endtime="20201030 18:34:15.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:15.552" level="INFO">VALUE: [0.0001727499999999993, 0.00017272200000000015, 0.00017222199999999965, 0.0001724719999999999, 0.00017168000000000044, 0.0001721940000000005, 0.00017233400000000315, 0.0001711939999999995, 0.0001722499999999988, 0.00017227699999999846, 0.0001724300000000012, 0.00017238900000000196, 0.00017166700000000035, 0.0001724589999999998, 0.00017198599999999897, 0.00017233299999999674, 0.00017244400000000076, 0.0001725139999999986, 0.00017283400000000365, 0.00017308300000000443, 0.00017233300000000368, 0.00017122299999999813, 0.00017168000000000044, 0.00017262500000000264, 0.0001722499999999988, 0.0001715139999999976, 0.00017249999999999904, 0.0001726249999999957, 0.00017233299999999674, 0.00017231999999999664, 0.00017227800000000487, 0.00017220899999999956, 0.00017280599999999757, 0.00017265299999999484, 0.00017244500000000024, 0.00017269399999999407, 0.00017304100000000572, 0.0001730139999999991, 0.00017240300000000153, 0.0001728620000000028, 0.00017252799999999818, 0.00017199999999999854, 0.000172791999999998, 0.00017265300000000178, 0.0001724719999999999, 0.00017245800000000033, 0.00017245800000000033, 0.00017218000000000094, 0.00017262500000000264, 0.00017140300000000053]</msg>
<status status="PASS" starttime="20201030 18:34:15.549" endtime="20201030 18:34:15.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:15.538" endtime="20201030 18:34:15.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:15.565" endtime="20201030 18:34:15.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:15.561" endtime="20201030 18:34:15.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:15.558" endtime="20201030 18:34:15.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:15.063" endtime="20201030 18:34:15.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:15.062" endtime="20201030 18:34:15.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:21.531" endtime="20201030 18:34:15.590"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:15.600" endtime="20201030 18:34:15.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:15.596" endtime="20201030 18:34:15.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:15.593" endtime="20201030 18:34:15.624"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:33:21.401" endtime="20201030 18:34:15.625" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:32:24.429" endtime="20201030 18:34:15.634"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:34:15.771" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:34:15.787" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:34:17.774" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:34:15.767" endtime="20201030 18:34:17.775"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:34:17.781" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:34:17.777" endtime="20201030 18:34:17.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:15.764" endtime="20201030 18:34:17.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:17.787" endtime="20201030 18:34:18.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:17.785" endtime="20201030 18:34:18.120"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:18.150" endtime="20201030 18:34:18.166"></status>
</kw>
<msg timestamp="20201030 18:34:18.167" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:18.146" endtime="20201030 18:34:18.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:18.173" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:18.169" endtime="20201030 18:34:18.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:34:18.181" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:34:18.176" endtime="20201030 18:34:18.182"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:18.140" endtime="20201030 18:34:18.184"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:18.135" endtime="20201030 18:34:18.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:18.132" endtime="20201030 18:34:18.186"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:34:18.194" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:34:18.193" endtime="20201030 18:34:18.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:18.188" endtime="20201030 18:34:18.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:18.130" endtime="20201030 18:34:18.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:18.128" endtime="20201030 18:34:18.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:18.198" endtime="20201030 18:34:18.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:18.125" endtime="20201030 18:34:18.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:18.205" endtime="20201030 18:34:18.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:18.122" endtime="20201030 18:34:18.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:15.761" endtime="20201030 18:34:18.212"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:18.225" endtime="20201030 18:34:18.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:18.221" endtime="20201030 18:34:18.249"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:18.282" endtime="20201030 18:34:18.298"></status>
</kw>
<msg timestamp="20201030 18:34:18.299" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:18.279" endtime="20201030 18:34:18.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:18.305" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:18.301" endtime="20201030 18:34:18.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:34:18.312" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:34:18.308" endtime="20201030 18:34:18.313"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:18.271" endtime="20201030 18:34:18.314"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:18.265" endtime="20201030 18:34:18.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:18.262" endtime="20201030 18:34:18.317"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:34:18.324" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:34:18.323" endtime="20201030 18:34:18.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:18.319" endtime="20201030 18:34:18.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:18.261" endtime="20201030 18:34:18.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:18.259" endtime="20201030 18:34:18.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:18.330" endtime="20201030 18:34:18.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:18.254" endtime="20201030 18:34:18.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:18.250" endtime="20201030 18:34:18.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:18.219" endtime="20201030 18:34:18.337"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:18.358" endtime="20201030 18:34:24.516"></status>
</kw>
<msg timestamp="20201030 18:34:24.520" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:18.355" endtime="20201030 18:34:24.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.531" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:24.525" endtime="20201030 18:34:24.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:24.535" endtime="20201030 18:34:24.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:18.348" endtime="20201030 18:34:24.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:18.342" endtime="20201030 18:34:24.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:24.556" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 18:34:24.548" endtime="20201030 18:34:24.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.574" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:24.570" endtime="20201030 18:34:24.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.582" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:34:24.579" endtime="20201030 18:34:24.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.559" endtime="20201030 18:34:24.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.596" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:24.593" endtime="20201030 18:34:24.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.602" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:34:24.599" endtime="20201030 18:34:24.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.586" endtime="20201030 18:34:24.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.613" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:34:24.611" endtime="20201030 18:34:24.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.618" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 18:34:24.616" endtime="20201030 18:34:24.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.605" endtime="20201030 18:34:24.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:24.637" endtime="20201030 18:34:24.987"></status>
</kw>
<msg timestamp="20201030 18:34:24.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124418806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.224726069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:24.633" endtime="20201030 18:34:24.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:25.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124418806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.224726069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:24.996" endtime="20201030 18:34:25.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:25.014" endtime="20201030 18:34:25.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.626" endtime="20201030 18:34:25.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.622" endtime="20201030 18:34:25.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:34:25.031" level="INFO">${FILTERED} = [{'diff': 0.100307263}, {'diff': 0.10023206900000001}, {'diff': 0.10024009700000003}, {'diff': 0.10023623600000003}, {'diff': 0.10022680500000003}, {'diff': 0.1002216669999999}, {'diff': 0.10022894399...</msg>
<status status="PASS" starttime="20201030 18:34:25.023" endtime="20201030 18:34:25.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:25.042" level="INFO">${RESULT} = {'diff': [0.100307263, 0.10023206900000001, 0.10024009700000003, 0.10023623600000003, 0.10022680500000003, 0.1002216669999999, 0.10022894399999993, 0.10022008300000007, 0.100219375, 0.1002268049999999...</msg>
<status status="PASS" starttime="20201030 18:34:25.035" endtime="20201030 18:34:25.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:25.051" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:34:25.049" endtime="20201030 18:34:25.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:25.056" level="INFO">VALUE: [0.100307263, 0.10023206900000001, 0.10024009700000003, 0.10023623600000003, 0.10022680500000003, 0.1002216669999999, 0.10022894399999993, 0.10022008300000007, 0.100219375, 0.10022680499999992, 0.10023409699999997, 0.10021929200000002, 0.10022362499999993, 0.10022859700000009, 0.10022613899999988, 0.10022637500000009, 0.10022691700000008, 0.100222209, 0.10021325000000014, 0.1002192919999998, 0.1002097230000003, 0.10021444400000012, 0.10022255599999985, 0.10021912500000019, 0.10022670900000019, 0.10021341699999997, 0.10022941699999999, 0.10023237500000004, 0.10022386099999991, 0.1002189720000004, 0.10022204199999996, 0.10023093100000002, 0.10021638800000021, 0.10022092999999987, 0.10021818000000016, 0.10023684700000013, 0.10022472299999974, 0.10021622299999988, 0.10022217999999983, 0.10022304199999965, 0.10023066699999994, 0.1002241530000001, 0.10022413899999982, 0.10022736200000004, 0.1002357500000004, 0.10022922200000028, 0.10023433399999959, 0.10020804100000014, 0.10021343000000016, 0.10022038899999952, 0.10022270799999955]</msg>
<status status="PASS" starttime="20201030 18:34:25.054" endtime="20201030 18:34:25.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:25.043" endtime="20201030 18:34:25.060"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:25.069" endtime="20201030 18:34:25.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:25.064" endtime="20201030 18:34:25.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:25.062" endtime="20201030 18:34:25.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:18.338" endtime="20201030 18:34:25.093"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:34:18.213" endtime="20201030 18:34:25.095" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:25.111" endtime="20201030 18:34:25.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:25.107" endtime="20201030 18:34:25.134"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:25.173" endtime="20201030 18:34:25.192"></status>
</kw>
<msg timestamp="20201030 18:34:25.193" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:25.169" endtime="20201030 18:34:25.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:25.199" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:25.195" endtime="20201030 18:34:25.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:34:25.206" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:34:25.202" endtime="20201030 18:34:25.206"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:25.162" endtime="20201030 18:34:25.208"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:25.150" endtime="20201030 18:34:25.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:25.148" endtime="20201030 18:34:25.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:34:25.219" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:34:25.217" endtime="20201030 18:34:25.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:25.213" endtime="20201030 18:34:25.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:25.146" endtime="20201030 18:34:25.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:25.144" endtime="20201030 18:34:25.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:25.222" endtime="20201030 18:34:25.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:25.140" endtime="20201030 18:34:25.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:25.136" endtime="20201030 18:34:25.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:25.105" endtime="20201030 18:34:25.230"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:25.251" endtime="20201030 18:34:31.390"></status>
</kw>
<msg timestamp="20201030 18:34:31.391" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:25.247" endtime="20201030 18:34:31.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:31.398" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:31.394" endtime="20201030 18:34:31.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:31.401" endtime="20201030 18:34:31.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:25.240" endtime="20201030 18:34:31.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:25.235" endtime="20201030 18:34:31.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:31.413" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 18:34:31.409" endtime="20201030 18:34:31.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:31.423" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:31.421" endtime="20201030 18:34:31.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:31.428" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:34:31.426" endtime="20201030 18:34:31.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.415" endtime="20201030 18:34:31.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:31.440" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:31.438" endtime="20201030 18:34:31.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:31.445" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:34:31.443" endtime="20201030 18:34:31.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.432" endtime="20201030 18:34:31.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:31.457" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:34:31.454" endtime="20201030 18:34:31.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:31.461" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 18:34:31.459" endtime="20201030 18:34:31.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.448" endtime="20201030 18:34:31.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:31.482" endtime="20201030 18:34:31.833"></status>
</kw>
<msg timestamp="20201030 18:34:31.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130871847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.231160569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:31.479" endtime="20201030 18:34:31.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:31.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130871847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.231160569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:31.843" endtime="20201030 18:34:31.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:31.861" endtime="20201030 18:34:31.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.469" endtime="20201030 18:34:31.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.465" endtime="20201030 18:34:31.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:34:31.877" level="INFO">${FILTERED} = [{'diff': 0.100288722}, {'diff': 0.10022286099999997}, {'diff': 0.10022893}, {'diff': 0.100226486}, {'diff': 0.10022219499999996}, {'diff': 0.10022813900000005}, {'diff': 0.10022916599999998}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:34:31.869" endtime="20201030 18:34:31.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:31.886" level="INFO">${RESULT} = {'diff': [0.100288722, 0.10022286099999997, 0.10022893, 0.100226486, 0.10022219499999996, 0.10022813900000005, 0.10022916599999998, 0.100237083, 0.10022447200000006, 0.1002308059999999, 0.100228208000...</msg>
<status status="PASS" starttime="20201030 18:34:31.880" endtime="20201030 18:34:31.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:31.896" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:34:31.894" endtime="20201030 18:34:31.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:31.901" level="INFO">VALUE: [0.100288722, 0.10022286099999997, 0.10022893, 0.100226486, 0.10022219499999996, 0.10022813900000005, 0.10022916599999998, 0.100237083, 0.10022447200000006, 0.1002308059999999, 0.1002282080000001, 0.100225542, 0.10022236099999993, 0.10023195799999995, 0.10022188799999987, 0.1002210830000001, 0.100228486, 0.10022470899999991, 0.10023413900000011, 0.10023736200000011, 0.10023548599999987, 0.10023559699999973, 0.1002295000000002, 0.10022405600000006, 0.10022681899999997, 0.10022233300000005, 0.10020937499999993, 0.10021788900000006, 0.10022758300000012, 0.10023391700000017, 0.10023102799999961, 0.10023120799999985, 0.100219638, 0.1002188610000001, 0.10023431999999977, 0.10023297200000014, 0.10023079199999962, 0.10022251399999993, 0.10022877699999988, 0.1002209030000003, 0.10021722200000038, 0.10022480599999994, 0.10022183299999998, 0.10021390300000022, 0.1002405280000005, 0.10024219399999978, 0.10023209699999924, 0.10023477799999991, 0.1002334299999994, 0.10023379099999996, 0.10022651400000004]</msg>
<status status="PASS" starttime="20201030 18:34:31.898" endtime="20201030 18:34:31.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.888" endtime="20201030 18:34:31.904"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:31.913" endtime="20201030 18:34:31.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.909" endtime="20201030 18:34:31.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.907" endtime="20201030 18:34:31.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:25.231" endtime="20201030 18:34:31.938"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:34:25.099" endtime="20201030 18:34:31.940" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:31.957" endtime="20201030 18:34:31.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.952" endtime="20201030 18:34:31.981"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:32.014" endtime="20201030 18:34:32.029"></status>
</kw>
<msg timestamp="20201030 18:34:32.030" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:32.010" endtime="20201030 18:34:32.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:32.036" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:32.032" endtime="20201030 18:34:32.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:34:32.043" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:34:32.039" endtime="20201030 18:34:32.044"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:32.003" endtime="20201030 18:34:32.045"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:31.997" endtime="20201030 18:34:32.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.994" endtime="20201030 18:34:32.048"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:34:32.055" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:34:32.054" endtime="20201030 18:34:32.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:32.049" endtime="20201030 18:34:32.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.992" endtime="20201030 18:34:32.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.991" endtime="20201030 18:34:32.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:32.059" endtime="20201030 18:34:32.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.987" endtime="20201030 18:34:32.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.982" endtime="20201030 18:34:32.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:31.949" endtime="20201030 18:34:32.066"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:32.087" endtime="20201030 18:34:38.223"></status>
</kw>
<msg timestamp="20201030 18:34:38.224" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:32.084" endtime="20201030 18:34:38.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:38.230" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:38.226" endtime="20201030 18:34:38.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:38.233" endtime="20201030 18:34:38.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:32.077" endtime="20201030 18:34:38.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:32.071" endtime="20201030 18:34:38.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:38.245" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 18:34:38.241" endtime="20201030 18:34:38.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:38.255" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:38.253" endtime="20201030 18:34:38.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:38.262" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:34:38.259" endtime="20201030 18:34:38.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.247" endtime="20201030 18:34:38.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:38.273" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:38.271" endtime="20201030 18:34:38.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:38.278" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:34:38.275" endtime="20201030 18:34:38.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.265" endtime="20201030 18:34:38.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:38.289" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:34:38.287" endtime="20201030 18:34:38.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:38.294" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 18:34:38.292" endtime="20201030 18:34:38.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.281" endtime="20201030 18:34:38.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:38.312" endtime="20201030 18:34:38.660"></status>
</kw>
<msg timestamp="20201030 18:34:38.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.121223139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.221653444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:38.309" endtime="20201030 18:34:38.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:38.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.121223139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.221653444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:38.669" endtime="20201030 18:34:38.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:38.687" endtime="20201030 18:34:38.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.302" endtime="20201030 18:34:38.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.297" endtime="20201030 18:34:38.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:34:38.704" level="INFO">${FILTERED} = [{'diff': 0.10043030500000001}, {'diff': 0.100242097}, {'diff': 0.10011323699999997}, {'diff': 0.10023095799999998}, {'diff': 0.10023502799999995}, {'diff': 0.10022413899999993}, {'diff': 0.1002271530...</msg>
<status status="PASS" starttime="20201030 18:34:38.695" endtime="20201030 18:34:38.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:38.714" level="INFO">${RESULT} = {'diff': [0.10043030500000001, 0.100242097, 0.10011323699999997, 0.10023095799999998, 0.10023502799999995, 0.10022413899999993, 0.10022715300000007, 0.10022904200000005, 0.10022730599999996, 0.1002286...</msg>
<status status="PASS" starttime="20201030 18:34:38.706" endtime="20201030 18:34:38.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:38.724" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:34:38.722" endtime="20201030 18:34:38.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:38.729" level="INFO">VALUE: [0.10043030500000001, 0.100242097, 0.10011323699999997, 0.10023095799999998, 0.10023502799999995, 0.10022413899999993, 0.10022715300000007, 0.10022904200000005, 0.10022730599999996, 0.10022863900000001, 0.10023159700000006, 0.10023438899999992, 0.10023133299999998, 0.10023320800000013, 0.10023002799999992, 0.10022440200000005, 0.10022711099999992, 0.10022347200000015, 0.10023269399999979, 0.10023144499999992, 0.10022640300000019, 0.10022738900000006, 0.10022883300000007, 0.10021901399999988, 0.10022587500000002, 0.10022276400000019, 0.10023145900000019, 0.10023020800000015, 0.10022548599999981, 0.10022317999999997, 0.10023172200000019, 0.10024612499999996, 0.10024101399999985, 0.10022826400000007, 0.10023163899999998, 0.1002310000000004, 0.10022786100000003, 0.10021627799999999, 0.10021645899999987, 0.10021048599999993, 0.10021373599999972, 0.1002231809999996, 0.10023302699999981, 0.1002201110000005, 0.10021863900000039, 0.10022229199999977, 0.10021216699999957, 0.1002275560000001, 0.1002513339999993, 0.10023284700000001, 0.10023165299999981]</msg>
<status status="PASS" starttime="20201030 18:34:38.726" endtime="20201030 18:34:38.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.716" endtime="20201030 18:34:38.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:38.741" endtime="20201030 18:34:38.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.737" endtime="20201030 18:34:38.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.735" endtime="20201030 18:34:38.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:32.067" endtime="20201030 18:34:38.766"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:34:31.944" endtime="20201030 18:34:38.768" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:38.784" endtime="20201030 18:34:38.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.780" endtime="20201030 18:34:38.807"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:38.840" endtime="20201030 18:34:38.857"></status>
</kw>
<msg timestamp="20201030 18:34:38.858" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:38.836" endtime="20201030 18:34:38.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:38.865" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:38.861" endtime="20201030 18:34:38.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:34:38.871" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:34:38.867" endtime="20201030 18:34:38.872"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:38.829" endtime="20201030 18:34:38.874"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:38.823" endtime="20201030 18:34:38.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.820" endtime="20201030 18:34:38.876"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:34:38.883" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:34:38.882" endtime="20201030 18:34:38.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.878" endtime="20201030 18:34:38.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.818" endtime="20201030 18:34:38.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.817" endtime="20201030 18:34:38.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:38.887" endtime="20201030 18:34:38.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.813" endtime="20201030 18:34:38.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.808" endtime="20201030 18:34:38.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.777" endtime="20201030 18:34:38.894"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:38.920" endtime="20201030 18:34:45.055"></status>
</kw>
<msg timestamp="20201030 18:34:45.056" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:38.917" endtime="20201030 18:34:45.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:45.063" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:45.059" endtime="20201030 18:34:45.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:45.066" endtime="20201030 18:34:45.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.910" endtime="20201030 18:34:45.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.899" endtime="20201030 18:34:45.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:45.081" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 18:34:45.074" endtime="20201030 18:34:45.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:45.092" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:45.089" endtime="20201030 18:34:45.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:45.101" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:34:45.095" endtime="20201030 18:34:45.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.083" endtime="20201030 18:34:45.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:45.125" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:45.122" endtime="20201030 18:34:45.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:45.132" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:34:45.128" endtime="20201030 18:34:45.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.109" endtime="20201030 18:34:45.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:45.144" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:34:45.141" endtime="20201030 18:34:45.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:45.149" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 18:34:45.146" endtime="20201030 18:34:45.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.135" endtime="20201030 18:34:45.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:45.167" endtime="20201030 18:34:45.541"></status>
</kw>
<msg timestamp="20201030 18:34:45.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127921347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228551153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:45.164" endtime="20201030 18:34:45.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:45.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127921347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228551153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:45.550" endtime="20201030 18:34:45.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:45.567" endtime="20201030 18:34:45.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.157" endtime="20201030 18:34:45.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.152" endtime="20201030 18:34:45.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:34:45.584" level="INFO">${FILTERED} = [{'diff': 0.10062980600000002}, {'diff': 0.09991783299999998}, {'diff': 0.10023669499999999}, {'diff': 0.10023434700000006}, {'diff': 0.10022872199999999}, {'diff': 0.10022605500000004}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 18:34:45.576" endtime="20201030 18:34:45.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:45.594" level="INFO">${RESULT} = {'diff': [0.10062980600000002, 0.09991783299999998, 0.10023669499999999, 0.10023434700000006, 0.10022872199999999, 0.10022605500000004, 0.10023069499999993, 0.10021213900000003, 0.10021443100000005, 0...</msg>
<status status="PASS" starttime="20201030 18:34:45.586" endtime="20201030 18:34:45.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:45.604" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:34:45.602" endtime="20201030 18:34:45.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:45.610" level="INFO">VALUE: [0.10062980600000002, 0.09991783299999998, 0.10023669499999999, 0.10023434700000006, 0.10022872199999999, 0.10022605500000004, 0.10023069499999993, 0.10021213900000003, 0.10021443100000005, 0.1002182359999999, 0.10022355599999999, 0.10021200000000019, 0.10022601399999997, 0.1002176669999999, 0.10022216700000008, 0.100225542, 0.10022380499999994, 0.1002368199999999, 0.10023568100000024, 0.10024404199999992, 0.10023811099999991, 0.10022726399999993, 0.10023206900000003, 0.10022609699999974, 0.10022340299999977, 0.10022356999999982, 0.10022981899999994, 0.10023727800000026, 0.10024215299999994, 0.10023791700000029, 0.10023361099999972, 0.10022090299999986, 0.10023486100000012, 0.10023633299999979, 0.10023747200000033, 0.10023831900000024, 0.10023584800000007, 0.10023565299999992, 0.10023538900000029, 0.10023506900000001, 0.10023472199999972, 0.10023647199999974, 0.10023883399999978, 0.10023669499999954, 0.10023083300000035, 0.1002295000000002, 0.10022137500000028, 0.10022195799999967, 0.10021961099999999, 0.10022511100000031, 0.10024083299999997]</msg>
<status status="PASS" starttime="20201030 18:34:45.607" endtime="20201030 18:34:45.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.596" endtime="20201030 18:34:45.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:45.622" endtime="20201030 18:34:45.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.618" endtime="20201030 18:34:45.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.615" endtime="20201030 18:34:45.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:38.895" endtime="20201030 18:34:45.646"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:34:38.772" endtime="20201030 18:34:45.648" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:45.664" endtime="20201030 18:34:45.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.660" endtime="20201030 18:34:45.687"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:45.720" endtime="20201030 18:34:45.737"></status>
</kw>
<msg timestamp="20201030 18:34:45.738" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:45.717" endtime="20201030 18:34:45.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:45.744" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:45.740" endtime="20201030 18:34:45.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:34:45.751" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:34:45.746" endtime="20201030 18:34:45.751"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:45.710" endtime="20201030 18:34:45.753"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:45.703" endtime="20201030 18:34:45.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.701" endtime="20201030 18:34:45.755"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:34:45.763" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:34:45.762" endtime="20201030 18:34:45.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.757" endtime="20201030 18:34:45.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.699" endtime="20201030 18:34:45.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.697" endtime="20201030 18:34:45.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:45.767" endtime="20201030 18:34:45.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.693" endtime="20201030 18:34:45.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.689" endtime="20201030 18:34:45.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.658" endtime="20201030 18:34:45.774"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:45.794" endtime="20201030 18:34:51.929"></status>
</kw>
<msg timestamp="20201030 18:34:51.930" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:45.791" endtime="20201030 18:34:51.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:51.936" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:51.932" endtime="20201030 18:34:51.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:51.939" endtime="20201030 18:34:51.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.784" endtime="20201030 18:34:51.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.779" endtime="20201030 18:34:51.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:51.952" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 18:34:51.948" endtime="20201030 18:34:51.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:51.961" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:51.959" endtime="20201030 18:34:51.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:51.966" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:34:51.964" endtime="20201030 18:34:51.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:51.953" endtime="20201030 18:34:51.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:51.978" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:51.975" endtime="20201030 18:34:51.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:51.983" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:34:51.980" endtime="20201030 18:34:51.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:51.970" endtime="20201030 18:34:51.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:51.994" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:34:51.992" endtime="20201030 18:34:51.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:51.999" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 18:34:51.996" endtime="20201030 18:34:51.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:51.986" endtime="20201030 18:34:52.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:52.017" endtime="20201030 18:34:52.378"></status>
</kw>
<msg timestamp="20201030 18:34:52.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.121597597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.222314903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:52.014" endtime="20201030 18:34:52.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:52.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.121597597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.222314903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:52.387" endtime="20201030 18:34:52.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:52.406" endtime="20201030 18:34:52.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.007" endtime="20201030 18:34:52.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.002" endtime="20201030 18:34:52.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:34:52.423" level="INFO">${FILTERED} = [{'diff': 0.100717306}, {'diff': 0.09979784699999997}, {'diff': 0.10021695799999997}, {'diff': 0.10021823699999993}, {'diff': 0.100224584}, {'diff': 0.10022520899999998}, {'diff': 0.10022536100000001}...</msg>
<status status="PASS" starttime="20201030 18:34:52.414" endtime="20201030 18:34:52.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:52.432" level="INFO">${RESULT} = {'diff': [0.100717306, 0.09979784699999997, 0.10021695799999997, 0.10021823699999993, 0.100224584, 0.10022520899999998, 0.10022536100000001, 0.10022252799999998, 0.10022447199999995, 0.100215055999999...</msg>
<status status="PASS" starttime="20201030 18:34:52.425" endtime="20201030 18:34:52.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:52.442" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:34:52.439" endtime="20201030 18:34:52.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:52.447" level="INFO">VALUE: [0.100717306, 0.09979784699999997, 0.10021695799999997, 0.10021823699999993, 0.100224584, 0.10022520899999998, 0.10022536100000001, 0.10022252799999998, 0.10022447199999995, 0.10021505599999991, 0.10021580600000002, 0.10022222199999997, 0.10022592999999991, 0.10021894499999995, 0.10022715299999985, 0.10021448600000005, 0.10021738799999991, 0.10022279099999998, 0.10022466700000021, 0.1002176669999999, 0.10022026399999984, 0.10021182000000017, 0.1002025139999998, 0.10020188900000004, 0.10020640300000005, 0.10021737499999972, 0.10021815300000014, 0.10022502799999966, 0.10021883300000001, 0.10020755500000034, 0.10020270799999986, 0.10020970799999995, 0.1002124310000001, 0.10022593000000013, 0.10020966699999967, 0.10021587499999995, 0.10020190299999987, 0.10021016699999974, 0.10020576400000003, 0.10021502800000004, 0.10021752799999994, 0.10022751400000018, 0.10022649999999977, 0.10022474999999975, 0.1002154449999999, 0.1002052219999996, 0.10020915299999977, 0.1002114719999998, 0.1002201669999998, 0.10023493000000006, 0.10022082000000054]</msg>
<status status="PASS" starttime="20201030 18:34:52.444" endtime="20201030 18:34:52.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.433" endtime="20201030 18:34:52.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:52.459" endtime="20201030 18:34:52.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.455" endtime="20201030 18:34:52.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.453" endtime="20201030 18:34:52.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:45.775" endtime="20201030 18:34:52.484"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:34:45.652" endtime="20201030 18:34:52.486" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:52.502" endtime="20201030 18:34:52.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.498" endtime="20201030 18:34:52.526"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:52.561" endtime="20201030 18:34:52.576"></status>
</kw>
<msg timestamp="20201030 18:34:52.577" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:52.557" endtime="20201030 18:34:52.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:52.584" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:52.579" endtime="20201030 18:34:52.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:34:52.590" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:34:52.586" endtime="20201030 18:34:52.591"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:52.550" endtime="20201030 18:34:52.593"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:52.543" endtime="20201030 18:34:52.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.541" endtime="20201030 18:34:52.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:34:52.603" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:34:52.601" endtime="20201030 18:34:52.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.597" endtime="20201030 18:34:52.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.537" endtime="20201030 18:34:52.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.536" endtime="20201030 18:34:52.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:52.606" endtime="20201030 18:34:52.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.531" endtime="20201030 18:34:52.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.527" endtime="20201030 18:34:52.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.496" endtime="20201030 18:34:52.613"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:52.635" endtime="20201030 18:34:58.770"></status>
</kw>
<msg timestamp="20201030 18:34:58.771" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:52.631" endtime="20201030 18:34:58.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:58.777" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:34:58.773" endtime="20201030 18:34:58.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:58.780" endtime="20201030 18:34:58.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.624" endtime="20201030 18:34:58.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.619" endtime="20201030 18:34:58.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:58.793" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 18:34:58.789" endtime="20201030 18:34:58.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:58.803" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:58.800" endtime="20201030 18:34:58.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:58.807" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:34:58.805" endtime="20201030 18:34:58.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:58.794" endtime="20201030 18:34:58.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:58.819" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:34:58.817" endtime="20201030 18:34:58.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:58.823" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:34:58.821" endtime="20201030 18:34:58.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:58.811" endtime="20201030 18:34:58.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:58.837" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:34:58.833" endtime="20201030 18:34:58.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:58.842" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 18:34:58.840" endtime="20201030 18:34:58.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:58.827" endtime="20201030 18:34:58.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:58.861" endtime="20201030 18:34:59.233"></status>
</kw>
<msg timestamp="20201030 18:34:59.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.123730861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.224575903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:58.857" endtime="20201030 18:34:59.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:59.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.123730861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.224575903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:34:59.242" endtime="20201030 18:34:59.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:59.261" endtime="20201030 18:34:59.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:58.850" endtime="20201030 18:34:59.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:58.846" endtime="20201030 18:34:59.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:34:59.279" level="INFO">${FILTERED} = [{'diff': 0.100845042}, {'diff': 0.0996805}, {'diff': 0.10023455600000003}, {'diff': 0.100217055}, {'diff': 0.100211736}, {'diff': 0.10020943100000002}, {'diff': 0.10021369400000002}, {'diff': 0.10022...</msg>
<status status="PASS" starttime="20201030 18:34:59.270" endtime="20201030 18:34:59.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:34:59.287" level="INFO">${RESULT} = {'diff': [0.100845042, 0.0996805, 0.10023455600000003, 0.100217055, 0.100211736, 0.10020943100000002, 0.10021369400000002, 0.100227972, 0.10022161099999993, 0.1002249449999999, 0.10022431900000006, 0....</msg>
<status status="PASS" starttime="20201030 18:34:59.281" endtime="20201030 18:34:59.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:34:59.297" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:34:59.295" endtime="20201030 18:34:59.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:34:59.303" level="INFO">VALUE: [0.100845042, 0.0996805, 0.10023455600000003, 0.100217055, 0.100211736, 0.10020943100000002, 0.10021369400000002, 0.100227972, 0.10022161099999993, 0.1002249449999999, 0.10022431900000006, 0.10022690300000003, 0.10022111099999997, 0.10021674999999997, 0.10021208400000003, 0.10021748600000002, 0.10021365299999996, 0.10021554100000007, 0.10021805599999989, 0.10022007000000022, 0.10020337499999998, 0.10021619499999979, 0.10021352799999983, 0.10021505600000014, 0.10022536100000012, 0.10022234699999988, 0.10022916700000017, 0.10022095799999997, 0.10021719499999993, 0.10022427800000022, 0.10022675000000003, 0.10022334700000002, 0.10023059699999992, 0.10024305600000005, 0.10022516700000006, 0.10022495800000009, 0.10022333399999983, 0.10023629100000031, 0.10023001300000045, 0.10021601299999983, 0.1002231250000003, 0.10022115299999967, 0.10022166699999957, 0.10022687499999972, 0.10022522299999981, 0.10022465200000052, 0.100228875, 0.100233931, 0.10022373699999942, 0.10022947200000054, 0.10022704100000013]</msg>
<status status="PASS" starttime="20201030 18:34:59.300" endtime="20201030 18:34:59.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:59.289" endtime="20201030 18:34:59.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:59.316" endtime="20201030 18:34:59.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:59.311" endtime="20201030 18:34:59.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:59.308" endtime="20201030 18:34:59.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.615" endtime="20201030 18:34:59.341"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:34:52.490" endtime="20201030 18:34:59.343" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:34:15.656" endtime="20201030 18:34:59.359"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 18:31:18.610" endtime="20201030 18:34:59.436"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_samr21-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
